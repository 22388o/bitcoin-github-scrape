[
  {
    "sha": "ba29a5590bc4479d74454f0b9fdaf007d9d80221",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiYTI5YTU1OTBiYzQ0NzlkNzQ0NTRmMGI5ZmRhZjAwN2Q5ZDgwMjIx",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2013-04-25T22:46:47Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2013-04-28T23:46:24Z"
      },
      "message": "Try to increase file descriptor rlimit if necessary\n\nAs the default can be too low, especially on OSX.",
      "tree": {
        "sha": "3bcafc521d283c9076704dc1aa51400c631ed1eb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3bcafc521d283c9076704dc1aa51400c631ed1eb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ba29a5590bc4479d74454f0b9fdaf007d9d80221",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ba29a5590bc4479d74454f0b9fdaf007d9d80221",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ba29a5590bc4479d74454f0b9fdaf007d9d80221",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ba29a5590bc4479d74454f0b9fdaf007d9d80221/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "33029bcedd982f80f7e380bff586f3ab644decce",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/33029bcedd982f80f7e380bff586f3ab644decce",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/33029bcedd982f80f7e380bff586f3ab644decce"
      }
    ],
    "stats": {
      "total": 50,
      "additions": 48,
      "deletions": 2
    },
    "files": [
      {
        "sha": "8efe6dfdcfaad0a2458f0fa1698999f795cec095",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ba29a5590bc4479d74454f0b9fdaf007d9d80221/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ba29a5590bc4479d74454f0b9fdaf007d9d80221/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=ba29a5590bc4479d74454f0b9fdaf007d9d80221",
        "patch": "@@ -28,6 +28,15 @@ using namespace boost;\n CWallet* pwalletMain;\n CClientUIInterface uiInterface;\n \n+#ifdef WIN32\n+// Win32 LevelDB doesn't use filedescriptors, and the ones used for\n+// accessing block files, don't count towards to fd_set size limit\n+// anyway.\n+#define MIN_CORE_FILEDESCRIPTORS 0\n+#else\n+#define MIN_CORE_FILEDESCRIPTORS 150\n+#endif\n+\n // Used to pass flags to the Bind() function\n enum BindFlags {\n     BF_NONE         = 0,\n@@ -518,6 +527,16 @@ bool AppInit2(boost::thread_group& threadGroup)\n         SoftSetBoolArg(\"-rescan\", true);\n     }\n \n+    // Make sure enough file descriptors are available\n+    int nBind = std::max((int)mapArgs.count(\"-bind\"), 1);\n+    nMaxConnections = GetArg(\"-maxconnections\", 125);\n+    nMaxConnections = std::max(std::min(nMaxConnections, FD_SETSIZE - nBind - MIN_CORE_FILEDESCRIPTORS), 0);\n+    int nFD = RaiseFileDescriptorLimit(nMaxConnections + MIN_CORE_FILEDESCRIPTORS);\n+    if (nFD < MIN_CORE_FILEDESCRIPTORS)\n+        return InitError(_(\"Not enough file descriptors available.\"));\n+    if (nFD - MIN_CORE_FILEDESCRIPTORS < nMaxConnections)\n+        nMaxConnections = nFD - MIN_CORE_FILEDESCRIPTORS;\n+\n     // ********************************************************* Step 3: parameter-to-internal-flags\n \n     fDebug = GetBoolArg(\"-debug\");\n@@ -594,6 +613,7 @@ bool AppInit2(boost::thread_group& threadGroup)\n         printf(\"Startup time: %s\\n\", DateTimeStrFormat(\"%Y-%m-%d %H:%M:%S\", GetTime()).c_str());\n     printf(\"Default data directory %s\\n\", GetDefaultDataDir().string().c_str());\n     printf(\"Used data directory %s\\n\", strDataDir.c_str());\n+    printf(\"Using at most %i connections (%i file descriptors available)\\n\", nMaxConnections, nFD);\n     std::ostringstream strErrors;\n \n     if (fDaemon)"
      },
      {
        "sha": "3fa48ae484c1cfc0c1eef60fcbf51301c59005a9",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ba29a5590bc4479d74454f0b9fdaf007d9d80221/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ba29a5590bc4479d74454f0b9fdaf007d9d80221/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=ba29a5590bc4479d74454f0b9fdaf007d9d80221",
        "patch": "@@ -48,6 +48,7 @@ static CNode* pnodeSync = NULL;\n uint64 nLocalHostNonce = 0;\n static std::vector<SOCKET> vhListenSocket;\n CAddrMan addrman;\n+int nMaxConnections = 125;\n \n vector<CNode*> vNodes;\n CCriticalSection cs_vNodes;\n@@ -908,7 +909,7 @@ void ThreadSocketHandler()\n                 if (nErr != WSAEWOULDBLOCK)\n                     printf(\"socket error accept failed: %d\\n\", nErr);\n             }\n-            else if (nInbound >= GetArg(\"-maxconnections\", 125) - MAX_OUTBOUND_CONNECTIONS)\n+            else if (nInbound >= nMaxConnections - MAX_OUTBOUND_CONNECTIONS)\n             {\n                 {\n                     LOCK(cs_setservAddNodeAddresses);\n@@ -1803,7 +1804,7 @@ void StartNode(boost::thread_group& threadGroup)\n {\n     if (semOutbound == NULL) {\n         // initialize semaphore\n-        int nMaxOutbound = min(MAX_OUTBOUND_CONNECTIONS, (int)GetArg(\"-maxconnections\", 125));\n+        int nMaxOutbound = min(MAX_OUTBOUND_CONNECTIONS, nMaxConnections);\n         semOutbound = new CSemaphore(nMaxOutbound);\n     }\n "
      },
      {
        "sha": "df34f5a88d321e48dbfb106cdfc9ef6eeca51e91",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ba29a5590bc4479d74454f0b9fdaf007d9d80221/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ba29a5590bc4479d74454f0b9fdaf007d9d80221/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=ba29a5590bc4479d74454f0b9fdaf007d9d80221",
        "patch": "@@ -74,6 +74,7 @@ extern bool fDiscover;\n extern uint64 nLocalServices;\n extern uint64 nLocalHostNonce;\n extern CAddrMan addrman;\n+extern int nMaxConnections;\n \n extern std::vector<CNode*> vNodes;\n extern CCriticalSection cs_vNodes;"
      },
      {
        "sha": "8b6d8b32c8498d43c060fe0ed3391f7c2160981d",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 23,
        "deletions": 0,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ba29a5590bc4479d74454f0b9fdaf007d9d80221/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ba29a5590bc4479d74454f0b9fdaf007d9d80221/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=ba29a5590bc4479d74454f0b9fdaf007d9d80221",
        "patch": "@@ -10,6 +10,7 @@\n #endif\n #include <fcntl.h>\n #include <sys/stat.h>\n+#include <sys/resource.h>\n #endif\n \n #include \"util.h\"\n@@ -1167,6 +1168,28 @@ bool TruncateFile(FILE *file, unsigned int length) {\n #endif\n }\n \n+\n+// this function tries to raise the file descriptor limit to the requested number.\n+// It returns the actual file descriptor limit (which may be more or less than nMinFD)\n+int RaiseFileDescriptorLimit(int nMinFD) {\n+#if defined(WIN32)\n+    return 2048;\n+#else\n+    struct rlimit limitFD;\n+    if (getrlimit(RLIMIT_NOFILE, &limitFD) != -1) {\n+        if (limitFD.rlim_cur < (rlim_t)nMinFD) {\n+            limitFD.rlim_cur = nMinFD;\n+            if (limitFD.rlim_cur > limitFD.rlim_max)\n+                limitFD.rlim_cur = limitFD.rlim_max;\n+            setrlimit(RLIMIT_NOFILE, &limitFD);\n+            getrlimit(RLIMIT_NOFILE, &limitFD);\n+        }\n+        return limitFD.rlim_cur;\n+    }\n+    return nMinFD; // getrlimit failed, assume it's fine\n+#endif\n+}\n+\n // this function tries to make a particular range of a file allocated (corresponding to disk space)\n // it is advisory, and the range specified in the arguments will never contain live data\n void AllocateFileRange(FILE *file, unsigned int offset, unsigned int length) {"
      },
      {
        "sha": "3d25364505ef58201ded8ce67d31dd004751a069",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ba29a5590bc4479d74454f0b9fdaf007d9d80221/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ba29a5590bc4479d74454f0b9fdaf007d9d80221/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=ba29a5590bc4479d74454f0b9fdaf007d9d80221",
        "patch": "@@ -197,6 +197,7 @@ bool WildcardMatch(const std::string& str, const std::string& mask);\n void FileCommit(FILE *fileout);\n int GetFilesize(FILE* file);\n bool TruncateFile(FILE *file, unsigned int length);\n+int RaiseFileDescriptorLimit(int nMinFD);\n void AllocateFileRange(FILE *file, unsigned int offset, unsigned int length);\n bool RenameOver(boost::filesystem::path src, boost::filesystem::path dest);\n boost::filesystem::path GetDefaultDataDir();"
      }
    ]
  }
]