[
  {
    "sha": "ff7a9992263f5a19f73097c86068b6150d213c23",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmZjdhOTk5MjI2M2Y1YTE5ZjczMDk3Yzg2MDY4YjYxNTBkMjEzYzIz",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2019-12-11T10:56:34Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2019-12-12T11:01:56Z"
      },
      "message": "tests: Add tests for base58-decoding of std::string:s containing non-base58 characters",
      "tree": {
        "sha": "399f1cb4a465a3fd7d09e8335bb044d134241c73",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/399f1cb4a465a3fd7d09e8335bb044d134241c73"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ff7a9992263f5a19f73097c86068b6150d213c23",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ff7a9992263f5a19f73097c86068b6150d213c23",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ff7a9992263f5a19f73097c86068b6150d213c23",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ff7a9992263f5a19f73097c86068b6150d213c23/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3914e877c476f4e83816f4bf2e4c68f0fac181b8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3914e877c476f4e83816f4bf2e4c68f0fac181b8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3914e877c476f4e83816f4bf2e4c68f0fac181b8"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 12,
      "deletions": 0
    },
    "files": [
      {
        "sha": "57559fa687b8e404fcdc49668a8c830af815e1ba",
        "filename": "src/test/base58_tests.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ff7a9992263f5a19f73097c86068b6150d213c23/src/test/base58_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ff7a9992263f5a19f73097c86068b6150d213c23/src/test/base58_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/base58_tests.cpp?ref=ff7a9992263f5a19f73097c86068b6150d213c23",
        "patch": "@@ -59,12 +59,24 @@ BOOST_AUTO_TEST_CASE(base58_DecodeBase58)\n     }\n \n     BOOST_CHECK(!DecodeBase58(\"invalid\", result, 100));\n+    BOOST_CHECK(!DecodeBase58(std::string(\"invalid\"), result, 100));\n+    BOOST_CHECK(!DecodeBase58(std::string(\"\\0invalid\", 8), result, 100));\n+\n+    BOOST_CHECK(DecodeBase58(std::string(\"good\", 4), result, 100));\n+    BOOST_CHECK(!DecodeBase58(std::string(\"bad0IOl\", 7), result, 100));\n+    BOOST_CHECK(!DecodeBase58(std::string(\"goodbad0IOl\", 11), result, 100));\n+    BOOST_CHECK(!DecodeBase58(std::string(\"good\\0bad0IOl\", 12), result, 100));\n \n     // check that DecodeBase58 skips whitespace, but still fails with unexpected non-whitespace at the end.\n     BOOST_CHECK(!DecodeBase58(\" \\t\\n\\v\\f\\r skip \\r\\f\\v\\n\\t a\", result, 3));\n     BOOST_CHECK( DecodeBase58(\" \\t\\n\\v\\f\\r skip \\r\\f\\v\\n\\t \", result, 3));\n     std::vector<unsigned char> expected = ParseHex(\"971a55\");\n     BOOST_CHECK_EQUAL_COLLECTIONS(result.begin(), result.end(), expected.begin(), expected.end());\n+\n+    BOOST_CHECK(DecodeBase58Check(std::string(\"3vQB7B6MrGQZaxCuFg4oh\", 21), result, 100));\n+    BOOST_CHECK(!DecodeBase58Check(std::string(\"3vQB7B6MrGQZaxCuFg4oi\", 21), result, 100));\n+    BOOST_CHECK(!DecodeBase58Check(std::string(\"3vQB7B6MrGQZaxCuFg4oh0IOl\", 25), result, 100));\n+    BOOST_CHECK(!DecodeBase58Check(std::string(\"3vQB7B6MrGQZaxCuFg4oh\\00IOl\", 26), result, 100));\n }\n \n BOOST_AUTO_TEST_CASE(base58_random_encode_decode)"
      }
    ]
  },
  {
    "sha": "d945c6f5e6f61b6e289ac7da6834c18f1b677b0f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkOTQ1YzZmNWU2ZjYxYjZlMjg5YWM3ZGE2ODM0YzE4ZjFiNjc3YjBm",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2019-12-11T11:00:52Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2019-12-12T11:01:56Z"
      },
      "message": "util: Don't allow base58-decoding of std::string:s containing non-base58 characters",
      "tree": {
        "sha": "59a127942a439fd1bdb344daf929a0acbdd0e0ee",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/59a127942a439fd1bdb344daf929a0acbdd0e0ee"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d945c6f5e6f61b6e289ac7da6834c18f1b677b0f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d945c6f5e6f61b6e289ac7da6834c18f1b677b0f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d945c6f5e6f61b6e289ac7da6834c18f1b677b0f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d945c6f5e6f61b6e289ac7da6834c18f1b677b0f/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ff7a9992263f5a19f73097c86068b6150d213c23",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ff7a9992263f5a19f73097c86068b6150d213c23",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ff7a9992263f5a19f73097c86068b6150d213c23"
      }
    ],
    "stats": {
      "total": 21,
      "additions": 20,
      "deletions": 1
    },
    "files": [
      {
        "sha": "17d3f86ba8e95884e3e196beba8dbf9036626f37",
        "filename": "src/base58.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d945c6f5e6f61b6e289ac7da6834c18f1b677b0f/src/base58.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d945c6f5e6f61b6e289ac7da6834c18f1b677b0f/src/base58.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/base58.cpp?ref=d945c6f5e6f61b6e289ac7da6834c18f1b677b0f",
        "patch": "@@ -7,6 +7,7 @@\n #include <hash.h>\n #include <uint256.h>\n #include <util/strencodings.h>\n+#include <util/string.h>\n \n #include <assert.h>\n #include <string.h>\n@@ -130,6 +131,9 @@ std::string EncodeBase58(const std::vector<unsigned char>& vch)\n \n bool DecodeBase58(const std::string& str, std::vector<unsigned char>& vchRet, int max_ret_len)\n {\n+    if (!ValidAsCString(str)) {\n+        return false;\n+    }\n     return DecodeBase58(str.c_str(), vchRet, max_ret_len);\n }\n \n@@ -161,5 +165,8 @@ bool DecodeBase58Check(const char* psz, std::vector<unsigned char>& vchRet, int\n \n bool DecodeBase58Check(const std::string& str, std::vector<unsigned char>& vchRet, int max_ret)\n {\n+    if (!ValidAsCString(str)) {\n+        return false;\n+    }\n     return DecodeBase58Check(str.c_str(), vchRet, max_ret);\n }"
      },
      {
        "sha": "8f2d05f03be20dee9f61516cb26971abb635e241",
        "filename": "src/util/strencodings.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d945c6f5e6f61b6e289ac7da6834c18f1b677b0f/src/util/strencodings.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d945c6f5e6f61b6e289ac7da6834c18f1b677b0f/src/util/strencodings.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/strencodings.cpp?ref=d945c6f5e6f61b6e289ac7da6834c18f1b677b0f",
        "patch": "@@ -4,6 +4,7 @@\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #include <util/strencodings.h>\n+#include <util/string.h>\n \n #include <tinyformat.h>\n \n@@ -269,7 +270,7 @@ NODISCARD static bool ParsePrechecks(const std::string& str)\n         return false;\n     if (str.size() >= 1 && (IsSpace(str[0]) || IsSpace(str[str.size()-1]))) // No padding allowed\n         return false;\n-    if (str.size() != strlen(str.c_str())) // No embedded NUL characters allowed\n+    if (!ValidAsCString(str)) // No embedded NUL characters allowed\n         return false;\n     return true;\n }"
      },
      {
        "sha": "c6fa08e5b314431d5670ce8a1c39974cf5b016c7",
        "filename": "src/util/string.h",
        "status": "modified",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d945c6f5e6f61b6e289ac7da6834c18f1b677b0f/src/util/string.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d945c6f5e6f61b6e289ac7da6834c18f1b677b0f/src/util/string.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/string.h?ref=d945c6f5e6f61b6e289ac7da6834c18f1b677b0f",
        "patch": "@@ -5,6 +5,9 @@\n #ifndef BITCOIN_UTIL_STRING_H\n #define BITCOIN_UTIL_STRING_H\n \n+#include <attributes.h>\n+\n+#include <cstring>\n #include <string>\n #include <vector>\n \n@@ -31,4 +34,12 @@ inline std::string Join(const std::vector<std::string>& list, const std::string&\n     return Join(list, separator, [](const std::string& i) { return i; });\n }\n \n+/**\n+ * Check if a string does not contain any embedded NUL (\\0) characters\n+ */\n+NODISCARD inline bool ValidAsCString(const std::string& str) noexcept\n+{\n+    return str.size() == strlen(str.c_str());\n+}\n+\n #endif // BITCOIN_UTIL_STRENCODINGS_H"
      }
    ]
  }
]