[
  {
    "sha": "fad913c00e17c0eb025d8ca51c9c50ee7c16b2d9",
    "node_id": "C_kwDOABII59oAKGZhZDkxM2MwMGUxN2MwZWIwMjVkOGNhNTFjOWM1MGVlN2MxNmIyZDk",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-11-26T09:26:41Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-11-26T09:35:10Z"
      },
      "message": "rpc: Add EnsureArgsman helper",
      "tree": {
        "sha": "50463c8d05672014fb4729a8ddf0ae22d1fbfc7f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/50463c8d05672014fb4729a8ddf0ae22d1fbfc7f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fad913c00e17c0eb025d8ca51c9c50ee7c16b2d9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUhhsQv/Q/aMaDiTMF/sCXObeeWOiGFLEFDYqrwss/8ObtfhhYucdEacL5wU9NQD\nu1KMUDREb27PiACV4mW8wOQdeMvYLRCMdS2A9t/VyFcQZQukpX5esUpYUZVhpb/W\nztWDHr2fjYde14z3PlBgvVQV9KmYzoepIrUQgx0raZkakQlWFEdAhekCmRyyYusI\nyxjySeWiuHAFYm5mgkX6eVmShkkae2kprlpHFjcgAQKoq4tepG/MVudr5lf8OU/B\nA4mH74X879PZxj63hTnhuEc4+a0UUslwZ6B+wSaR06kDU1BIvnGdEy9Im7kbwnsr\nIfa+WDlhnq0k7lxqGccolIKubizOUX2jUKjSkPSwFIWaYKiNjo4UL+oUSTcX4yX8\nHqXz1JrGsbVPAKF/uGRKb3TofPVa2+sSBx6eJgrrlrjskzGIF68iSvYEXz4CXSYw\nKSiWjGd92lLqki3DawchpOhO4Ez+Yz5GPsirRqt+csJHovLfCXq4i0/mld4IeIx3\nO2bhCC2F\n=ZoFI\n-----END PGP SIGNATURE-----",
        "payload": "tree 50463c8d05672014fb4729a8ddf0ae22d1fbfc7f\nparent 16d698cdcf3c4ef34bae4ccd616d0ddc4a7165d4\nauthor MarcoFalke <falke.marco@gmail.com> 1637918801 +0100\ncommitter MarcoFalke <falke.marco@gmail.com> 1637919310 +0100\n\nrpc: Add EnsureArgsman helper\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fad913c00e17c0eb025d8ca51c9c50ee7c16b2d9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fad913c00e17c0eb025d8ca51c9c50ee7c16b2d9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fad913c00e17c0eb025d8ca51c9c50ee7c16b2d9/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "16d698cdcf3c4ef34bae4ccd616d0ddc4a7165d4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/16d698cdcf3c4ef34bae4ccd616d0ddc4a7165d4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/16d698cdcf3c4ef34bae4ccd616d0ddc4a7165d4"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 16,
      "deletions": 0
    },
    "files": [
      {
        "sha": "dcac276948b3b0450084ff731a9c063bbe7b1f3c",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 0,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fad913c00e17c0eb025d8ca51c9c50ee7c16b2d9/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fad913c00e17c0eb025d8ca51c9c50ee7c16b2d9/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=fad913c00e17c0eb025d8ca51c9c50ee7c16b2d9",
        "patch": "@@ -84,6 +84,19 @@ CTxMemPool& EnsureAnyMemPool(const std::any& context)\n     return EnsureMemPool(EnsureAnyNodeContext(context));\n }\n \n+ArgsManager& EnsureArgsman(const NodeContext& node)\n+{\n+    if (!node.args) {\n+        throw JSONRPCError(RPC_INTERNAL_ERROR, \"Node args not found\");\n+    }\n+    return *node.args;\n+}\n+\n+ArgsManager& EnsureAnyArgsman(const std::any& context)\n+{\n+    return EnsureArgsman(EnsureAnyNodeContext(context));\n+}\n+\n ChainstateManager& EnsureChainman(const NodeContext& node)\n {\n     if (!node.chainman) {"
      },
      {
        "sha": "0de619f6fa5d6961ff16c8531be13e95de7cc247",
        "filename": "src/rpc/blockchain.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fad913c00e17c0eb025d8ca51c9c50ee7c16b2d9/src/rpc/blockchain.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fad913c00e17c0eb025d8ca51c9c50ee7c16b2d9/src/rpc/blockchain.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.h?ref=fad913c00e17c0eb025d8ca51c9c50ee7c16b2d9",
        "patch": "@@ -16,6 +16,7 @@\n \n extern RecursiveMutex cs_main;\n \n+class ArgsManager;\n class CBlock;\n class CBlockIndex;\n class CBlockPolicyEstimator;\n@@ -56,6 +57,8 @@ void CalculatePercentilesByWeight(CAmount result[NUM_GETBLOCKSTATS_PERCENTILES],\n NodeContext& EnsureAnyNodeContext(const std::any& context);\n CTxMemPool& EnsureMemPool(const NodeContext& node);\n CTxMemPool& EnsureAnyMemPool(const std::any& context);\n+ArgsManager& EnsureArgsman(const NodeContext& node);\n+ArgsManager& EnsureAnyArgsman(const std::any& context);\n ChainstateManager& EnsureChainman(const NodeContext& node);\n ChainstateManager& EnsureAnyChainman(const std::any& context);\n CBlockPolicyEstimator& EnsureFeeEstimator(const NodeContext& node);"
      }
    ]
  },
  {
    "sha": "fa0ae3959612206b4087588131ac3e0853f75122",
    "node_id": "C_kwDOABII59oAKGZhMGFlMzk1OTYxMjIwNmI0MDg3NTg4MTMxYWMzZTA4NTNmNzUxMjI",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-11-26T09:39:24Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-11-26T09:35:37Z"
      },
      "message": "Pass tx_ser_flags to TxToJSON and blockToJSON",
      "tree": {
        "sha": "06bf837688754b5e1e9f38ca45208da185174b39",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/06bf837688754b5e1e9f38ca45208da185174b39"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa0ae3959612206b4087588131ac3e0853f75122",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUgMCwv+PrmFZ2vz0JfyJJa5/JJnxc57MLw4qn0tN6anElorB4ZNiHbXqakoTOy3\nToXfA6C6VtfTnsYq7BBSwtfYG1akoANpGf+O1AmMmzVmfmiMHJoVX8U1Lh+1KrwU\nfcw1u3DIAHohoohRrwljQiIhBasp5k+GoPwZZpskNKHYdCIBAxQLdfekF3gTePGM\nXq1HFvoLr4aVn2v93x1mUemS4b7gee7EQk1RU/Yrzr/n+L0ksdMEvc1jmIOBpPVO\n9U9HZ6Kx1u/o0fb4nYzqP3+vv9U8tVIQDpnN4otlBu0mgz5emNPeiFC0K5ajH0A5\nk2wLs4nJZOpgVrP4s6LG5PXMKqVm99+O+9OIM5YKzI/e3exvHNsqXktmBvaqkfgs\nSRVFoipx77qvSBa83yODql6CLxgZtykh5THheMJg4Y12TfjUjtiDRJUKupMoTu14\nUvU3my/sZpv1DgTj4skXtyNl3CC6yrBBx4CUhhUTmwbRWEMt3ioVYupkZJ71rUdG\nH9Bp9jtv\n=fYYw\n-----END PGP SIGNATURE-----",
        "payload": "tree 06bf837688754b5e1e9f38ca45208da185174b39\nparent fad913c00e17c0eb025d8ca51c9c50ee7c16b2d9\nauthor MarcoFalke <falke.marco@gmail.com> 1637919564 +0100\ncommitter MarcoFalke <falke.marco@gmail.com> 1637919337 +0100\n\nPass tx_ser_flags to TxToJSON and blockToJSON\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa0ae3959612206b4087588131ac3e0853f75122",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa0ae3959612206b4087588131ac3e0853f75122",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa0ae3959612206b4087588131ac3e0853f75122/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fad913c00e17c0eb025d8ca51c9c50ee7c16b2d9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fad913c00e17c0eb025d8ca51c9c50ee7c16b2d9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fad913c00e17c0eb025d8ca51c9c50ee7c16b2d9"
      }
    ],
    "stats": {
      "total": 40,
      "additions": 24,
      "deletions": 16
    },
    "files": [
      {
        "sha": "ca686650d30fc2a92af927729e4924ee738eca6e",
        "filename": "src/bench/rpc_blockchain.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa0ae3959612206b4087588131ac3e0853f75122/src/bench/rpc_blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa0ae3959612206b4087588131ac3e0853f75122/src/bench/rpc_blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/rpc_blockchain.cpp?ref=fa0ae3959612206b4087588131ac3e0853f75122",
        "patch": "@@ -40,7 +40,7 @@ static void BlockToJsonVerbose(benchmark::Bench& bench)\n {\n     TestBlockAndIndex data;\n     bench.run([&] {\n-        auto univalue = blockToJSON(data.block, &data.blockindex, &data.blockindex, TxVerbosity::SHOW_DETAILS_AND_PREVOUT);\n+        auto univalue = blockToJSON(data.block, /*tx_ser_flags=*/0, &data.blockindex, &data.blockindex, TxVerbosity::SHOW_DETAILS_AND_PREVOUT);\n         ankerl::nanobench::doNotOptimizeAway(univalue);\n     });\n }\n@@ -50,7 +50,7 @@ BENCHMARK(BlockToJsonVerbose);\n static void BlockToJsonVerboseWrite(benchmark::Bench& bench)\n {\n     TestBlockAndIndex data;\n-    auto univalue = blockToJSON(data.block, &data.blockindex, &data.blockindex, TxVerbosity::SHOW_DETAILS_AND_PREVOUT);\n+    auto univalue = blockToJSON(data.block, /*tx_ser_flags=*/0, &data.blockindex, &data.blockindex, TxVerbosity::SHOW_DETAILS_AND_PREVOUT);\n     bench.run([&] {\n         auto str = univalue.write();\n         ankerl::nanobench::doNotOptimizeAway(str);"
      },
      {
        "sha": "38a9e27e300ee78ed5c272741c3d275adba15266",
        "filename": "src/rest.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 5,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa0ae3959612206b4087588131ac3e0853f75122/src/rest.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa0ae3959612206b4087588131ac3e0853f75122/src/rest.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rest.cpp?ref=fa0ae3959612206b4087588131ac3e0853f75122",
        "patch": "@@ -269,6 +269,8 @@ static bool rest_block(const std::any& context,\n     std::string hashStr;\n     const RetFormat rf = ParseDataFormat(hashStr, strURIPart);\n \n+    const int tx_ser_flags{RPCSerializationFlags()};\n+\n     uint256 hash;\n     if (!ParseHashStr(hashStr, hash))\n         return RESTERR(req, HTTP_BAD_REQUEST, \"Invalid hash: \" + hashStr);\n@@ -296,7 +298,7 @@ static bool rest_block(const std::any& context,\n \n     switch (rf) {\n     case RetFormat::BINARY: {\n-        CDataStream ssBlock(SER_NETWORK, PROTOCOL_VERSION | RPCSerializationFlags());\n+        CDataStream ssBlock{SER_NETWORK, PROTOCOL_VERSION | tx_ser_flags};\n         ssBlock << block;\n         std::string binaryBlock = ssBlock.str();\n         req->WriteHeader(\"Content-Type\", \"application/octet-stream\");\n@@ -305,7 +307,7 @@ static bool rest_block(const std::any& context,\n     }\n \n     case RetFormat::HEX: {\n-        CDataStream ssBlock(SER_NETWORK, PROTOCOL_VERSION | RPCSerializationFlags());\n+        CDataStream ssBlock{SER_NETWORK, PROTOCOL_VERSION | tx_ser_flags};\n         ssBlock << block;\n         std::string strHex = HexStr(ssBlock) + \"\\n\";\n         req->WriteHeader(\"Content-Type\", \"text/plain\");\n@@ -314,7 +316,7 @@ static bool rest_block(const std::any& context,\n     }\n \n     case RetFormat::JSON: {\n-        UniValue objBlock = blockToJSON(block, tip, pblockindex, tx_verbosity);\n+        UniValue objBlock = blockToJSON(block, tx_ser_flags, tip, pblockindex, tx_verbosity);\n         std::string strJSON = objBlock.write() + \"\\n\";\n         req->WriteHeader(\"Content-Type\", \"application/json\");\n         req->WriteReply(HTTP_OK, strJSON);\n@@ -418,6 +420,8 @@ static bool rest_tx(const std::any& context, HTTPRequest* req, const std::string\n     std::string hashStr;\n     const RetFormat rf = ParseDataFormat(hashStr, strURIPart);\n \n+    const int tx_ser_flags{RPCSerializationFlags()};\n+\n     uint256 hash;\n     if (!ParseHashStr(hashStr, hash))\n         return RESTERR(req, HTTP_BAD_REQUEST, \"Invalid hash: \" + hashStr);\n@@ -436,7 +440,7 @@ static bool rest_tx(const std::any& context, HTTPRequest* req, const std::string\n \n     switch (rf) {\n     case RetFormat::BINARY: {\n-        CDataStream ssTx(SER_NETWORK, PROTOCOL_VERSION | RPCSerializationFlags());\n+        CDataStream ssTx{SER_NETWORK, PROTOCOL_VERSION | tx_ser_flags};\n         ssTx << tx;\n \n         std::string binaryTx = ssTx.str();\n@@ -446,7 +450,7 @@ static bool rest_tx(const std::any& context, HTTPRequest* req, const std::string\n     }\n \n     case RetFormat::HEX: {\n-        CDataStream ssTx(SER_NETWORK, PROTOCOL_VERSION | RPCSerializationFlags());\n+        CDataStream ssTx{SER_NETWORK, PROTOCOL_VERSION | tx_ser_flags};\n         ssTx << tx;\n \n         std::string strHex = HexStr(ssTx) + \"\\n\";"
      },
      {
        "sha": "71da8960187fc33da23723a7bd700f8faddf5d31",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 4,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa0ae3959612206b4087588131ac3e0853f75122/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa0ae3959612206b4087588131ac3e0853f75122/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=fa0ae3959612206b4087588131ac3e0853f75122",
        "patch": "@@ -213,7 +213,7 @@ UniValue blockheaderToJSON(const CBlockIndex* tip, const CBlockIndex* blockindex\n     return result;\n }\n \n-UniValue blockToJSON(const CBlock& block, const CBlockIndex* tip, const CBlockIndex* blockindex, TxVerbosity verbosity)\n+UniValue blockToJSON(const CBlock& block, int tx_ser_flags, const CBlockIndex* tip, const CBlockIndex* blockindex, TxVerbosity verbosity)\n {\n     UniValue result = blockheaderToJSON(tip, blockindex);\n \n@@ -239,7 +239,7 @@ UniValue blockToJSON(const CBlock& block, const CBlockIndex* tip, const CBlockIn\n                 // coinbase transaction (i.e. i == 0) doesn't have undo data\n                 const CTxUndo* txundo = (have_undo && i > 0) ? &blockUndo.vtxundo.at(i - 1) : nullptr;\n                 UniValue objTx(UniValue::VOBJ);\n-                TxToUniv(*tx, uint256(), objTx, true, RPCSerializationFlags(), txundo, verbosity);\n+                TxToUniv(*tx, uint256{}, objTx, true, tx_ser_flags, txundo, verbosity);\n                 txs.push_back(objTx);\n             }\n     }\n@@ -1006,6 +1006,8 @@ static RPCHelpMan getblock()\n {\n     uint256 hash(ParseHashV(request.params[0], \"blockhash\"));\n \n+    const int tx_ser_flags{RPCSerializationFlags()};\n+\n     int verbosity = 1;\n     if (!request.params[1].isNull()) {\n         if (request.params[1].isBool()) {\n@@ -1033,7 +1035,7 @@ static RPCHelpMan getblock()\n \n     if (verbosity <= 0)\n     {\n-        CDataStream ssBlock(SER_NETWORK, PROTOCOL_VERSION | RPCSerializationFlags());\n+        CDataStream ssBlock{SER_NETWORK, PROTOCOL_VERSION | tx_ser_flags};\n         ssBlock << block;\n         std::string strHex = HexStr(ssBlock);\n         return strHex;\n@@ -1048,7 +1050,7 @@ static RPCHelpMan getblock()\n         tx_verbosity = TxVerbosity::SHOW_DETAILS_AND_PREVOUT;\n     }\n \n-    return blockToJSON(block, tip, pblockindex, tx_verbosity);\n+    return blockToJSON(block, tx_ser_flags, tip, pblockindex, tx_verbosity);\n },\n     };\n }"
      },
      {
        "sha": "2a6b8ccd900b23a692081098b0d8d4ba94ba62b9",
        "filename": "src/rpc/blockchain.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa0ae3959612206b4087588131ac3e0853f75122/src/rpc/blockchain.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa0ae3959612206b4087588131ac3e0853f75122/src/rpc/blockchain.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.h?ref=fa0ae3959612206b4087588131ac3e0853f75122",
        "patch": "@@ -40,7 +40,8 @@ double GetDifficulty(const CBlockIndex* blockindex);\n void RPCNotifyBlockChange(const CBlockIndex*);\n \n /** Block description to JSON */\n-UniValue blockToJSON(const CBlock& block, const CBlockIndex* tip, const CBlockIndex* blockindex, TxVerbosity verbosity) LOCKS_EXCLUDED(cs_main);\n+UniValue blockToJSON(const CBlock& block, int tx_ser_flags, const CBlockIndex* tip, const CBlockIndex* blockindex, TxVerbosity verbosity)\n+    LOCKS_EXCLUDED(::cs_main);\n \n /** Mempool information to JSON */\n UniValue MempoolInfoToJSON(const CTxMemPool& pool);"
      },
      {
        "sha": "a7d52c307398648bab3275c57d96561145446653",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa0ae3959612206b4087588131ac3e0853f75122/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa0ae3959612206b4087588131ac3e0853f75122/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=fa0ae3959612206b4087588131ac3e0853f75122",
        "patch": "@@ -43,14 +43,14 @@\n \n #include <univalue.h>\n \n-static void TxToJSON(const CTransaction& tx, const uint256 hashBlock, UniValue& entry, CChainState& active_chainstate)\n+static void TxToJSON(const CTransaction& tx, int tx_ser_flags, const uint256 hashBlock, UniValue& entry, CChainState& active_chainstate)\n {\n     // Call into TxToUniv() in bitcoin-common to decode the transaction hex.\n     //\n     // Blockchain contextual information (confirmations and blocktime) is not\n     // available to code in bitcoin-common, so we query them here and push the\n     // data into the returned UniValue.\n-    TxToUniv(tx, uint256(), entry, true, RPCSerializationFlags());\n+    TxToUniv(tx, uint256(), entry, true, tx_ser_flags);\n \n     if (!hashBlock.IsNull()) {\n         LOCK(cs_main);\n@@ -155,6 +155,7 @@ static RPCHelpMan getrawtransaction()\n {\n     const NodeContext& node = EnsureAnyNodeContext(request.context);\n     ChainstateManager& chainman = EnsureChainman(node);\n+    const int tx_ser_flags{RPCSerializationFlags()};\n \n     bool in_active_chain = true;\n     uint256 hash = ParseHashV(request.params[0], \"parameter 1\");\n@@ -207,12 +208,12 @@ static RPCHelpMan getrawtransaction()\n     }\n \n     if (!fVerbose) {\n-        return EncodeHexTx(*tx, RPCSerializationFlags());\n+        return EncodeHexTx(*tx, tx_ser_flags);\n     }\n \n     UniValue result(UniValue::VOBJ);\n     if (blockindex) result.pushKV(\"in_active_chain\", in_active_chain);\n-    TxToJSON(*tx, hash_block, result, chainman.ActiveChainstate());\n+    TxToJSON(*tx, tx_ser_flags, hash_block, result, chainman.ActiveChainstate());\n     return result;\n },\n     };"
      }
    ]
  },
  {
    "sha": "fac220cc320062d77dd47a0dd928565afc02e764",
    "node_id": "C_kwDOABII59oAKGZhYzIyMGNjMzIwMDYyZDc3ZGQ0N2EwZGQ5Mjg1NjVhZmMwMmU3NjQ",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-11-26T09:35:04Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-11-26T09:35:41Z"
      },
      "message": "Pass ArgsManager to RPCTxSerializationFlags\n\nAlso, rename the function to clarify that it only concerns tx\nserialization flags.",
      "tree": {
        "sha": "f03ce36586746decc846e08d73f48640219a69f2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f03ce36586746decc846e08d73f48640219a69f2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fac220cc320062d77dd47a0dd928565afc02e764",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUhzywv8D2HSVXJbKg6FeCzW5DXKjRA2alUx8DMvvOVw0swCgkLHOJsacahtHMFS\nS0E9/8I/4O00tdQ5LwOhAK0a/hONlqXiVAtOjUNULTDJWYUaIyVgsjGbONSrOvWb\nDZ4c8n/B6glacmjH4fky09To2hTYGDS21ueOzLk4fMxTmHFcxGUOlmnfw0465rGv\naWCMwIN2xUibHAsqT+dqZqYTlS7cftDWfnGGhrKyRcUqi5oXzgF9vHiNwBi6mxon\nh2E2TVOaZgjKSs0+Dlb9yJ9XBS5roYiLIGMrnilIBP0GLIDGECy1SrlUox1/lNrF\n4dFyliQZ3mQOI4qz2UMFSlabUrNuNmenzJzPG2H+KlL3H2gdwJc2lGO0VZMT069E\nPmCs1lUdahWeESx+cOdD/KP4krXIQt8xWNYOtAhRPZJ7SooMiAAkxxy1DFnbMVwB\neq5jVUdAMK0zGig/yKBU8AAc0eVtfc1nMaOI0VxXeu18KsmDv3+rxujhLiigmG06\ntR+mJzE4\n=KGoU\n-----END PGP SIGNATURE-----",
        "payload": "tree f03ce36586746decc846e08d73f48640219a69f2\nparent fa0ae3959612206b4087588131ac3e0853f75122\nauthor MarcoFalke <falke.marco@gmail.com> 1637919304 +0100\ncommitter MarcoFalke <falke.marco@gmail.com> 1637919341 +0100\n\nPass ArgsManager to RPCTxSerializationFlags\n\nAlso, rename the function to clarify that it only concerns tx\nserialization flags.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fac220cc320062d77dd47a0dd928565afc02e764",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fac220cc320062d77dd47a0dd928565afc02e764",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fac220cc320062d77dd47a0dd928565afc02e764/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fa0ae3959612206b4087588131ac3e0853f75122",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa0ae3959612206b4087588131ac3e0853f75122",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa0ae3959612206b4087588131ac3e0853f75122"
      }
    ],
    "stats": {
      "total": 35,
      "additions": 21,
      "deletions": 14
    },
    "files": [
      {
        "sha": "824976154e420dba3bc9b1dbee6affcfd01447cd",
        "filename": "src/interfaces/chain.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac220cc320062d77dd47a0dd928565afc02e764/src/interfaces/chain.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac220cc320062d77dd47a0dd928565afc02e764/src/interfaces/chain.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/chain.h?ref=fac220cc320062d77dd47a0dd928565afc02e764",
        "patch": "@@ -262,8 +262,8 @@ class Chain\n     //! Run function after given number of seconds. Cancel any previous calls with same name.\n     virtual void rpcRunLater(const std::string& name, std::function<void()> fn, int64_t seconds) = 0;\n \n-    //! Current RPC serialization flags.\n-    virtual int rpcSerializationFlags() = 0;\n+    //! Current RPC tx serialization flags.\n+    virtual int rpcTxSerializationFlags() = 0;\n \n     //! Get settings value.\n     virtual util::SettingsValue getSetting(const std::string& arg) = 0;"
      },
      {
        "sha": "8d753b2b6e551e8a57f3d242fe4933cc27e34024",
        "filename": "src/node/interfaces.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac220cc320062d77dd47a0dd928565afc02e764/src/node/interfaces.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac220cc320062d77dd47a0dd928565afc02e764/src/node/interfaces.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/node/interfaces.cpp?ref=fac220cc320062d77dd47a0dd928565afc02e764",
        "patch": "@@ -686,7 +686,10 @@ class ChainImpl : public Chain\n     {\n         RPCRunLater(name, std::move(fn), seconds);\n     }\n-    int rpcSerializationFlags() override { return RPCSerializationFlags(); }\n+    int rpcTxSerializationFlags() override\n+    {\n+        return RPCTxSerializationFlags(::gArgs);\n+    }\n     util::SettingsValue getSetting(const std::string& name) override\n     {\n         return gArgs.GetSetting(name);"
      },
      {
        "sha": "2db1c0bf0b37bcd9db79d67bbeb30e012084cd8e",
        "filename": "src/rest.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac220cc320062d77dd47a0dd928565afc02e764/src/rest.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac220cc320062d77dd47a0dd928565afc02e764/src/rest.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rest.cpp?ref=fac220cc320062d77dd47a0dd928565afc02e764",
        "patch": "@@ -269,7 +269,7 @@ static bool rest_block(const std::any& context,\n     std::string hashStr;\n     const RetFormat rf = ParseDataFormat(hashStr, strURIPart);\n \n-    const int tx_ser_flags{RPCSerializationFlags()};\n+    const int tx_ser_flags{RPCTxSerializationFlags(::gArgs)};\n \n     uint256 hash;\n     if (!ParseHashStr(hashStr, hash))\n@@ -420,7 +420,7 @@ static bool rest_tx(const std::any& context, HTTPRequest* req, const std::string\n     std::string hashStr;\n     const RetFormat rf = ParseDataFormat(hashStr, strURIPart);\n \n-    const int tx_ser_flags{RPCSerializationFlags()};\n+    const int tx_ser_flags{RPCTxSerializationFlags(::gArgs)};\n \n     uint256 hash;\n     if (!ParseHashStr(hashStr, hash))"
      },
      {
        "sha": "76a5ee44fa6361f757c3a84dd729ac91cd1cb203",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac220cc320062d77dd47a0dd928565afc02e764/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac220cc320062d77dd47a0dd928565afc02e764/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=fac220cc320062d77dd47a0dd928565afc02e764",
        "patch": "@@ -1006,7 +1006,8 @@ static RPCHelpMan getblock()\n {\n     uint256 hash(ParseHashV(request.params[0], \"blockhash\"));\n \n-    const int tx_ser_flags{RPCSerializationFlags()};\n+    const ArgsManager& args{EnsureAnyArgsman(request.context)};\n+    const int tx_ser_flags{RPCTxSerializationFlags(args)};\n \n     int verbosity = 1;\n     if (!request.params[1].isNull()) {"
      },
      {
        "sha": "667d27aa101d3e527ea4d1618186d9b68090f24d",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac220cc320062d77dd47a0dd928565afc02e764/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac220cc320062d77dd47a0dd928565afc02e764/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=fac220cc320062d77dd47a0dd928565afc02e764",
        "patch": "@@ -155,7 +155,8 @@ static RPCHelpMan getrawtransaction()\n {\n     const NodeContext& node = EnsureAnyNodeContext(request.context);\n     ChainstateManager& chainman = EnsureChainman(node);\n-    const int tx_ser_flags{RPCSerializationFlags()};\n+    ArgsManager& args{EnsureArgsman(node)};\n+    const int tx_ser_flags{RPCTxSerializationFlags(args)};\n \n     bool in_active_chain = true;\n     uint256 hash = ParseHashV(request.params[0], \"parameter 1\");"
      },
      {
        "sha": "7b2d68e083def90e2ee64bc718c8d9fdbf6e7839",
        "filename": "src/rpc/server.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac220cc320062d77dd47a0dd928565afc02e764/src/rpc/server.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac220cc320062d77dd47a0dd928565afc02e764/src/rpc/server.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/server.cpp?ref=fac220cc320062d77dd47a0dd928565afc02e764",
        "patch": "@@ -537,11 +537,12 @@ void RPCRunLater(const std::string& name, std::function<void()> func, int64_t nS\n     deadlineTimers.emplace(name, std::unique_ptr<RPCTimerBase>(timerInterface->NewTimer(func, nSeconds*1000)));\n }\n \n-int RPCSerializationFlags()\n+int RPCTxSerializationFlags(const ArgsManager& args)\n {\n     int flag = 0;\n-    if (gArgs.GetIntArg(\"-rpcserialversion\", DEFAULT_RPC_SERIALIZE_VERSION) == 0)\n+    if (args.GetIntArg(\"-rpcserialversion\", DEFAULT_RPC_SERIALIZE_VERSION) == 0) {\n         flag |= SERIALIZE_TRANSACTION_NO_WITNESS;\n+    }\n     return flag;\n }\n "
      },
      {
        "sha": "7733ce04767ee3efb1cdac08eee5c3d6110ae7a5",
        "filename": "src/rpc/server.h",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac220cc320062d77dd47a0dd928565afc02e764/src/rpc/server.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac220cc320062d77dd47a0dd928565afc02e764/src/rpc/server.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/server.h?ref=fac220cc320062d77dd47a0dd928565afc02e764",
        "patch": "@@ -18,6 +18,7 @@\n \n static const unsigned int DEFAULT_RPC_SERIALIZE_VERSION = 1;\n \n+class ArgsManager;\n class CRPCCommand;\n \n namespace RPCServer\n@@ -174,7 +175,7 @@ void InterruptRPC();\n void StopRPC();\n std::string JSONRPCExecBatch(const JSONRPCRequest& jreq, const UniValue& vReq);\n \n-// Retrieves any serialization flags requested in command line argument\n-int RPCSerializationFlags();\n+/** Retrieves any tx serialization flags requested in command line argument */\n+int RPCTxSerializationFlags(const ArgsManager& args);\n \n #endif // BITCOIN_RPC_SERVER_H"
      },
      {
        "sha": "7cd1078874dd37a7107a856ec883f233ca6495ab",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac220cc320062d77dd47a0dd928565afc02e764/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac220cc320062d77dd47a0dd928565afc02e764/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=fac220cc320062d77dd47a0dd928565afc02e764",
        "patch": "@@ -1768,7 +1768,7 @@ static RPCHelpMan gettransaction()\n     ListTransactions(*pwallet, wtx, 0, false, details, filter, nullptr /* filter_label */);\n     entry.pushKV(\"details\", details);\n \n-    std::string strHex = EncodeHexTx(*wtx.tx, pwallet->chain().rpcSerializationFlags());\n+    std::string strHex = EncodeHexTx(*wtx.tx, pwallet->chain().rpcTxSerializationFlags());\n     entry.pushKV(\"hex\", strHex);\n \n     if (verbose) {"
      },
      {
        "sha": "73d57b06c0766c8984ad01ecceade6d559b30afa",
        "filename": "src/zmq/zmqpublishnotifier.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac220cc320062d77dd47a0dd928565afc02e764/src/zmq/zmqpublishnotifier.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac220cc320062d77dd47a0dd928565afc02e764/src/zmq/zmqpublishnotifier.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqpublishnotifier.cpp?ref=fac220cc320062d77dd47a0dd928565afc02e764",
        "patch": "@@ -228,7 +228,7 @@ bool CZMQPublishRawBlockNotifier::NotifyBlock(const CBlockIndex *pindex)\n     LogPrint(BCLog::ZMQ, \"zmq: Publish rawblock %s to %s\\n\", pindex->GetBlockHash().GetHex(), this->address);\n \n     const Consensus::Params& consensusParams = Params().GetConsensus();\n-    CDataStream ss(SER_NETWORK, PROTOCOL_VERSION | RPCSerializationFlags());\n+    CDataStream ss{SER_NETWORK, PROTOCOL_VERSION | RPCTxSerializationFlags(::gArgs)};\n     {\n         LOCK(cs_main);\n         CBlock block;\n@@ -248,7 +248,7 @@ bool CZMQPublishRawTransactionNotifier::NotifyTransaction(const CTransaction &tr\n {\n     uint256 hash = transaction.GetHash();\n     LogPrint(BCLog::ZMQ, \"zmq: Publish rawtx %s to %s\\n\", hash.GetHex(), this->address);\n-    CDataStream ss(SER_NETWORK, PROTOCOL_VERSION | RPCSerializationFlags());\n+    CDataStream ss{SER_NETWORK, PROTOCOL_VERSION | RPCTxSerializationFlags(::gArgs)};\n     ss << transaction;\n     return SendZmqMessage(MSG_RAWTX, &(*ss.begin()), ss.size());\n }"
      }
    ]
  }
]