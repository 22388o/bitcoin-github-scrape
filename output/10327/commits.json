[
  {
    "sha": "981e586ab833c280170db22eee267803759077ee",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ODFlNTg2YWI4MzNjMjgwMTcwZGIyMmVlZTI2NzgwMzc1OTA3N2Vl",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-05-03T13:15:39Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-05-03T13:16:42Z"
      },
      "message": "[tests] remove import-abort-rescan.py\n\nReverts PR 10225",
      "tree": {
        "sha": "cc80f3cdcc552bd8fae8aa3687a6e066abc02e72",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cc80f3cdcc552bd8fae8aa3687a6e066abc02e72"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/981e586ab833c280170db22eee267803759077ee",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/981e586ab833c280170db22eee267803759077ee",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/981e586ab833c280170db22eee267803759077ee",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/981e586ab833c280170db22eee267803759077ee/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "dc8fc0c73bebbc1c48ac5540026030c9cc00ec23",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dc8fc0c73bebbc1c48ac5540026030c9cc00ec23",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/dc8fc0c73bebbc1c48ac5540026030c9cc00ec23"
      }
    ],
    "stats": {
      "total": 67,
      "additions": 0,
      "deletions": 67
    },
    "files": [
      {
        "sha": "ffe45bbb1df6009cf7cdcf98ca5324770b960f00",
        "filename": "test/functional/import-abort-rescan.py",
        "status": "removed",
        "additions": 0,
        "deletions": 66,
        "changes": 66,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dc8fc0c73bebbc1c48ac5540026030c9cc00ec23/test/functional/import-abort-rescan.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dc8fc0c73bebbc1c48ac5540026030c9cc00ec23/test/functional/import-abort-rescan.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/import-abort-rescan.py?ref=dc8fc0c73bebbc1c48ac5540026030c9cc00ec23",
        "patch": "@@ -1,66 +0,0 @@\n-#!/usr/bin/env python3\n-# Copyright (c) 2017 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\"\"\"Test wallet import RPCs.\n-\n-Test rescan behavior of importprivkey when aborted. The test ensures that:\n-1. The abortrescan command indeed stops the rescan process.\n-2. Subsequent rescan catches the aborted address UTXO\n-\"\"\"\n-\n-from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import (assert_equal, get_rpc_proxy)\n-from decimal import Decimal\n-import threading # for bg importprivkey\n-import time      # for sleep\n-\n-class ImportAbortRescanTest(BitcoinTestFramework):\n-    def __init__(self):\n-        super().__init__()\n-        self.setup_clean_chain = True\n-\n-    def run_test(self):\n-        # Generate for BTC\n-        assert_equal(self.nodes[0].getbalance(), 0)\n-        assert_equal(self.nodes[1].getbalance(), 0)\n-        self.nodes[0].generate(300)\n-        assert_equal(self.nodes[1].getbalance(), 0)\n-        # Make blocks with spam to cause rescan delay\n-        for i in range(5):\n-            for j in range(5):\n-                self.nodes[0].sendtoaddress(self.nodes[0].getnewaddress(), 0.1)\n-            self.nodes[0].generate(10)\n-        addr = self.nodes[0].getnewaddress()\n-        privkey = self.nodes[0].dumpprivkey(addr)\n-        self.nodes[0].sendtoaddress(addr, 0.123)\n-        self.nodes[0].generate(10) # mature tx\n-        self.sync_all()\n-\n-        # Import this address in the background ...\n-        node1ref = get_rpc_proxy(self.nodes[1].url, 1, timeout=600)\n-        importthread = threading.Thread(target=node1ref.importprivkey, args=[privkey])\n-        importthread.start()\n-        # ... then abort rescan; try a bunch until abortres becomes true,\n-        # because we will start checking before above thread starts processing\n-        for i in range(2000):\n-            time.sleep(0.001)\n-            abortres = self.nodes[1].abortrescan()\n-            if abortres: break\n-        assert abortres # if false, we failed to abort\n-        # import should die soon\n-        for i in range(10):\n-            time.sleep(0.1)\n-            deadres = not importthread.isAlive()\n-            if deadres: break\n-\n-        assert deadres # if false, importthread did not die soon enough\n-        assert_equal(self.nodes[1].getbalance(), 0.0)\n-\n-        # Import a different address and let it run\n-        self.nodes[1].importprivkey(self.nodes[0].dumpprivkey(self.nodes[0].getnewaddress()))\n-        # Expect original privkey to now also be discovered and added to balance\n-        assert_equal(self.nodes[1].getbalance(), Decimal(\"0.123\"))\n-\n-if __name__ == \"__main__\":\n-    ImportAbortRescanTest().main()"
      },
      {
        "sha": "2932f82970c4164b74d112e7b2cf4edfbfeff79a",
        "filename": "test/functional/test_runner.py",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/981e586ab833c280170db22eee267803759077ee/test/functional/test_runner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/981e586ab833c280170db22eee267803759077ee/test/functional/test_runner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_runner.py?ref=981e586ab833c280170db22eee267803759077ee",
        "patch": "@@ -109,7 +109,6 @@\n     'rpcnamedargs.py',\n     'listsinceblock.py',\n     'p2p-leaktests.py',\n-    'import-abort-rescan.py',\n ]\n \n EXTENDED_SCRIPTS = ["
      }
    ]
  }
]