DrahtBot,2019-01-23T08:38:18Z,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#15226](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15226.html) (Allow creating blank (empty) wallets (alter",https://github.com/bitcoin/bitcoin/pull/15235#issuecomment-456715582,456715582,
achow101,2019-01-23T20:36:52Z,"The test failure is running `wallet_disableprivatekeys.py` with `--usecli`. It seems that `bitcoin-cli` is erroring, giving: `error: Error parsing JSON:[{'timestamp': 'now', 'scriptPubKey': {'address': 'n2xmfzEaZi2XyjFYCXxfMbUHyKGk2PaL2k'}, 'keys': ['cQdMcowhL91CXuSRs7FSaujMPNArV8dLZcjq16kHDSDgNaAVTB99']}]` (tested on my own machine with some debugging changes)",https://github.com/bitcoin/bitcoin/pull/15235#issuecomment-456956607,456956607,
Sjors,2019-01-23T20:42:04Z,So that's the `importmulti` call? Check if `CRPCConvertParam` in `src/rpc/client.cpp` contains all the non-string params; I think there's a bunch of RPC calls where that's not up to date.,https://github.com/bitcoin/bitcoin/pull/15235#issuecomment-456958318,456958318,
achow101,2019-01-23T20:53:23Z,I fixed the test failure. It's because `--usecli` did not properly handle arguments that are dicts and lists.,https://github.com/bitcoin/bitcoin/pull/15235#issuecomment-456961916,456961916,
jonasschnelli,2019-01-24T03:27:04Z,"utACK d8ac347a798e65f3a1808c7767f886a4626a0471\nSomehow this was missed in #9662.\n\nIMO this is a bugfix and should be backported.",https://github.com/bitcoin/bitcoin/pull/15235#issuecomment-457053390,457053390,
achow101,2019-01-24T04:01:56Z,"> `sethdseed` should also have this check, since it currently throws a confusing ""Cannot set a HD seed on a non-HD wallet.""\n\nDone\n\n> Maybe add the same check to `addmultisigaddress`, since the help says ""This functionality is only intended for use with non-watchonly addresses.""?\n\nI don't think that's necessary. IMO we should only have this warning for anything where private keys can be",https://github.com/bitcoin/bitcoin/pull/15235#issuecomment-457059159,457059159,
gmaxwell,2019-01-24T19:11:56Z,"Concept ACK.  (maybe we should have a warning that prints in the debug log if you load a non-private-key wallet with private keys in it, like we do for overlong multisig.)",https://github.com/bitcoin/bitcoin/pull/15235#issuecomment-457319553,457319553,
achow101,2019-01-25T19:46:58Z,I've gotten rid of the todo in `importwallet` and just implemented it. The latest push refactors `importwallet` so that the import happens in two steps. First the import file is read and the keys and scripts extracted. Then the check for private keys being imported and private keys disabled is done. Then it imports. This will avoid importing wallet dump file that have any private keys and ensure t,https://github.com/bitcoin/bitcoin/pull/15235#issuecomment-457702222,457702222,
Sjors,2019-01-31T19:16:02Z,tACK 2911ef603,https://github.com/bitcoin/bitcoin/pull/15235#issuecomment-459469826,459469826,
Sjors,2019-01-31T20:49:01Z,re-tACK 2911ef6,https://github.com/bitcoin/bitcoin/pull/15235#issuecomment-459501048,459501048,
Sjors,2019-01-23T10:54:28Z,Add todo that this should permit importing a wallet that also has private keys disabled? (I assume currently that information isn't stored in the dump),https://github.com/bitcoin/bitcoin/pull/15235#discussion_r250144732,250144732,src/wallet/rpcdump.cpp
achow101,2019-01-24T04:02:06Z,Done,https://github.com/bitcoin/bitcoin/pull/15235#discussion_r250459783,250459783,src/wallet/rpcdump.cpp
Sjors,2019-01-24T07:46:45Z,"paging @jnewbery, looks ok?",https://github.com/bitcoin/bitcoin/pull/15235#discussion_r250493637,250493637,test/functional/test_framework/test_node.py
laanwj,2019-01-24T09:39:28Z,"Please open an issue for this as well, a TODO in the source code hasn't historically turned out very effective.",https://github.com/bitcoin/bitcoin/pull/15235#discussion_r250526668,250526668,src/wallet/rpcdump.cpp
laanwj,2019-01-24T10:33:11Z,"Might want to use named function, say `value_to_cli`, here for clarity, and avoid repetition; this duplicated expression keeps getting longer\n\nEdit: I also think it's wrong that booleans are handled differently for pos and named args.\n",https://github.com/bitcoin/bitcoin/pull/15235#discussion_r250547555,250547555,test/functional/test_framework/test_node.py
jnewbery,2019-01-24T16:50:48Z,"Definitely agree with pulling this monstrosity out into a function :)\n\nbools in named args were fixed here: https://github.com/bitcoin/bitcoin/pull/14938#discussion_r243390546 but that PR wasn't merged.",https://github.com/bitcoin/bitcoin/pull/15235#discussion_r250689541,250689541,test/functional/test_framework/test_node.py
achow101,2019-01-24T18:47:41Z,I've pulled this into a new function which is easier to read. It also fixes the bools in named args issue.,https://github.com/bitcoin/bitcoin/pull/15235#discussion_r250732000,250732000,test/functional/test_framework/test_node.py
Sjors,2019-01-25T11:05:13Z,"@laanwj wrote:\n> Please open an issue for this as well, a TODO in the source code hasn't historically turned out very effective.\n\nAlthough it says ""todo"", I see it more as an explanation that this is strictly speaking a bug, and that we should pay attention to this if we  move to descriptor based wallets and (presumably) overhaul the dump and import commands.",https://github.com/bitcoin/bitcoin/pull/15235#discussion_r250946991,250946991,src/wallet/rpcdump.cpp
achow101,2019-01-31T15:38:57Z,"Since this issue affects multiple PRs, I've split it into a separate PR: #15301",https://github.com/bitcoin/bitcoin/pull/15235#discussion_r252717766,252717766,test/functional/test_framework/test_node.py
Sjors,2019-01-31T16:50:11Z,"nit: calculate `total = keys.size() + scripts.size()` before the loop, then set `progress=0`\n ```cpp\nfor ( const auto& key_tuple : keys ) {\n... ShowProgress(... progress / total * 100)\n...\nprogress++\n```",https://github.com/bitcoin/bitcoin/pull/15235#discussion_r252749362,252749362,src/wallet/rpcdump.cpp
Sjors,2019-01-31T17:11:48Z,Shouldn't this be `birthtime`? `int64_t birth_time = DecodeDumpTime(vstr[1])` (because all script timestamps are 0 in the dump). This line should be moved outside the loop probably.,https://github.com/bitcoin/bitcoin/pull/15235#discussion_r252758147,252758147,src/wallet/rpcdump.cpp
achow101,2019-01-31T18:03:32Z,No because `birth_time` just becomes `time` in this loop.,https://github.com/bitcoin/bitcoin/pull/15235#discussion_r252776800,252776800,src/wallet/rpcdump.cpp
achow101,2019-01-31T18:07:31Z,Done,https://github.com/bitcoin/bitcoin/pull/15235#discussion_r252778221,252778221,src/wallet/rpcdump.cpp
Sjors,2019-01-31T18:56:31Z,re-nit: still missing the `for ( const auto& key_tuple : keys )` bit :-),https://github.com/bitcoin/bitcoin/pull/15235#discussion_r252795862,252795862,src/wallet/rpcdump.cpp
Sjors,2019-01-31T19:14:29Z,"Ok, but then what's causing the full rescan?\n\nJust tried on `HEAD~2` and getting the same thing, so I'm blaming my own wallet. Just tried this again with a fresh wallet that only has one transaction. Now the rescan is a modest 10623 blocks (I guess that's a built in safety margin?).\n\n I also got a ton of `Skipping import of ... (script already present)` messages both my original weird wall",https://github.com/bitcoin/bitcoin/pull/15235#discussion_r252802363,252802363,src/wallet/rpcdump.cpp
achow101,2019-01-31T19:29:49Z,Oops fixed,https://github.com/bitcoin/bitcoin/pull/15235#discussion_r252807995,252807995,src/wallet/rpcdump.cpp
achow101,2019-01-31T19:43:28Z,"I'm not sure what might be causing that problem. However the `Skipping import` messages for scripts is expected since segwit scripts are in the dump, but already automatically imported when the keys were imported.",https://github.com/bitcoin/bitcoin/pull/15235#discussion_r252812812,252812812,src/wallet/rpcdump.cpp
