[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/456715582",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15235#issuecomment-456715582",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15235",
    "id": 456715582,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NjcxNTU4Mg==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-23T08:38:18Z",
    "updated_at": "2019-01-30T22:42:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#15226](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15226.html) (Allow creating blank (empty) wallets (alternative) by achow101)\n* [#15093](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15093.html) (rpc: Change importwallet to return additional errors by marcinja)\n* [#15032](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15032.html) (Nit fixes for PR 14565 by MeshCollider)\n* [#15024](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15024.html) (Allow specific private keys to be derived from descriptor by MeshCollider)\n* [#15006](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15006.html) (Add option to create an encrypted wallet by achow101)\n* [#14491](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14491.html) (Allow descriptor imports with importmulti by MeshCollider)\n* [#14075](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14075.html) (Import watch only pubkeys to the keypool if private keys are disabled by achow101)\n* [#14021](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14021.html) (Import key origin data through descriptors in importmulti by achow101)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/456715582/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/456956607",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15235#issuecomment-456956607",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15235",
    "id": 456956607,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1Njk1NjYwNw==",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?u=9791e96cd4268d48e3517bac41eaf2b1d09759fd&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-23T20:36:52Z",
    "updated_at": "2019-01-23T20:37:14Z",
    "author_association": "MEMBER",
    "body": "The test failure is running `wallet_disableprivatekeys.py` with `--usecli`. It seems that `bitcoin-cli` is erroring, giving: `error: Error parsing JSON:[{'timestamp': 'now', 'scriptPubKey': {'address': 'n2xmfzEaZi2XyjFYCXxfMbUHyKGk2PaL2k'}, 'keys': ['cQdMcowhL91CXuSRs7FSaujMPNArV8dLZcjq16kHDSDgNaAVTB99']}]` (tested on my own machine with some debugging changes)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/456956607/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/456958318",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15235#issuecomment-456958318",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15235",
    "id": 456958318,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1Njk1ODMxOA==",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-23T20:42:04Z",
    "updated_at": "2019-01-23T20:42:04Z",
    "author_association": "MEMBER",
    "body": "So that's the `importmulti` call? Check if `CRPCConvertParam` in `src/rpc/client.cpp` contains all the non-string params; I think there's a bunch of RPC calls where that's not up to date.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/456958318/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/456961916",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15235#issuecomment-456961916",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15235",
    "id": 456961916,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1Njk2MTkxNg==",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?u=9791e96cd4268d48e3517bac41eaf2b1d09759fd&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-23T20:53:23Z",
    "updated_at": "2019-01-23T20:53:23Z",
    "author_association": "MEMBER",
    "body": "I fixed the test failure. It's because `--usecli` did not properly handle arguments that are dicts and lists.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/456961916/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/457053390",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15235#issuecomment-457053390",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15235",
    "id": 457053390,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NzA1MzM5MA==",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?u=eab5d0cdbb6cc25087cb61d4ca4a6f85255f42a7&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-24T03:27:04Z",
    "updated_at": "2019-01-24T03:27:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "utACK d8ac347a798e65f3a1808c7767f886a4626a0471\r\nSomehow this was missed in #9662.\r\n\r\nIMO this is a bugfix and should be backported.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/457053390/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/457059159",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15235#issuecomment-457059159",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15235",
    "id": 457059159,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NzA1OTE1OQ==",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?u=9791e96cd4268d48e3517bac41eaf2b1d09759fd&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-24T04:01:56Z",
    "updated_at": "2019-01-24T04:01:56Z",
    "author_association": "MEMBER",
    "body": "> `sethdseed` should also have this check, since it currently throws a confusing \"Cannot set a HD seed on a non-HD wallet.\"\r\n\r\nDone\r\n\r\n> Maybe add the same check to `addmultisigaddress`, since the help says \"This functionality is only intended for use with non-watchonly addresses.\"?\r\n\r\nI don't think that's necessary. IMO we should only have this warning for anything where private keys can be imported.\r\n\r\n(Missed these in the earlier push)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/457059159/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/457319553",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15235#issuecomment-457319553",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15235",
    "id": 457319553,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NzMxOTU1Mw==",
    "user": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?u=63e5c438c242094837a9deeda775d77988b508bf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-24T19:11:56Z",
    "updated_at": "2019-01-24T19:11:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "Concept ACK.  (maybe we should have a warning that prints in the debug log if you load a non-private-key wallet with private keys in it, like we do for overlong multisig.)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/457319553/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/457702222",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15235#issuecomment-457702222",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15235",
    "id": 457702222,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NzcwMjIyMg==",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?u=9791e96cd4268d48e3517bac41eaf2b1d09759fd&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-25T19:46:58Z",
    "updated_at": "2019-01-25T19:46:58Z",
    "author_association": "MEMBER",
    "body": "I've gotten rid of the todo in `importwallet` and just implemented it. The latest push refactors `importwallet` so that the import happens in two steps. First the import file is read and the keys and scripts extracted. Then the check for private keys being imported and private keys disabled is done. Then it imports. This will avoid importing wallet dump file that have any private keys and ensure that nothing is imported at all if the file has private keys.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/457702222/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/459469826",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15235#issuecomment-459469826",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15235",
    "id": 459469826,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1OTQ2OTgyNg==",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-31T19:16:02Z",
    "updated_at": "2019-01-31T19:16:02Z",
    "author_association": "MEMBER",
    "body": "tACK 2911ef603",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/459469826/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/459501048",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15235#issuecomment-459501048",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15235",
    "id": 459501048,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1OTUwMTA0OA==",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-31T20:49:01Z",
    "updated_at": "2019-01-31T20:49:01Z",
    "author_association": "MEMBER",
    "body": "re-tACK 2911ef6",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/459501048/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/250144732",
    "pull_request_review_id": 195456754,
    "id": 250144732,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MDE0NDczMg==",
    "diff_hunk": "@@ -549,6 +552,10 @@ UniValue importwallet(const JSONRPCRequest& request)\n             + HelpExampleRpc(\"importwallet\", \"\\\"test\\\"\")\n         );\n \n+    if (pwallet->IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS)) {\n+        throw JSONRPCError(RPC_WALLET_ERROR, \"Importing wallets is disabled when private keys are disabled\");",
    "path": "src/wallet/rpcdump.cpp",
    "position": null,
    "original_position": 15,
    "commit_id": "e6c58d3b014ab8ef5cca4be68764af4b79685fcb",
    "original_commit_id": "ab677edbd80b2198e2347eaa6fbc7beb9e9dfe1a",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Add todo that this should permit importing a wallet that also has private keys disabled? (I assume currently that information isn't stored in the dump)",
    "created_at": "2019-01-23T10:54:28Z",
    "updated_at": "2019-01-31T19:29:38Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15235#discussion_r250144732",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15235",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/250144732"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15235#discussion_r250144732"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15235"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/250144732/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 557,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/250459783",
    "pull_request_review_id": 195849310,
    "id": 250459783,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MDQ1OTc4Mw==",
    "diff_hunk": "@@ -549,6 +552,10 @@ UniValue importwallet(const JSONRPCRequest& request)\n             + HelpExampleRpc(\"importwallet\", \"\\\"test\\\"\")\n         );\n \n+    if (pwallet->IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS)) {\n+        throw JSONRPCError(RPC_WALLET_ERROR, \"Importing wallets is disabled when private keys are disabled\");",
    "path": "src/wallet/rpcdump.cpp",
    "position": null,
    "original_position": 15,
    "commit_id": "e6c58d3b014ab8ef5cca4be68764af4b79685fcb",
    "original_commit_id": "ab677edbd80b2198e2347eaa6fbc7beb9e9dfe1a",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done",
    "created_at": "2019-01-24T04:02:06Z",
    "updated_at": "2019-01-31T19:29:38Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15235#discussion_r250459783",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15235",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/250459783"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15235#discussion_r250459783"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15235"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/250459783/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 557,
    "side": "RIGHT",
    "in_reply_to_id": 250144732
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/250493637",
    "pull_request_review_id": 195889494,
    "id": 250493637,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MDQ5MzYzNw==",
    "diff_hunk": "@@ -433,8 +433,8 @@ def batch(self, requests):\n \n     def send_cli(self, command=None, *args, **kwargs):\n         \"\"\"Run bitcoin-cli command. Deserializes returned string as python object.\"\"\"\n-        pos_args = [str(arg).lower() if type(arg) is bool else str(arg) for arg in args]\n-        named_args = [str(key) + \"=\" + str(value) for (key, value) in kwargs.items()]\n+        pos_args = [str(arg).lower() if type(arg) is bool else (json.dumps(arg) if (isinstance(arg, dict) or isinstance(arg, list)) else str(arg)) for arg in args]\n+        named_args = [str(key) + \"=\" + (json.dumps(value) if (isinstance(value, dict) or isinstance(value, list)) else str(value)) for (key, value) in kwargs.items()]",
    "path": "test/functional/test_framework/test_node.py",
    "position": null,
    "original_position": 7,
    "commit_id": "e6c58d3b014ab8ef5cca4be68764af4b79685fcb",
    "original_commit_id": "2fa2a444c72ac89dd4e746341b96088ef8aad74c",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "paging @jnewbery, looks ok?",
    "created_at": "2019-01-24T07:46:45Z",
    "updated_at": "2019-01-31T19:29:38Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15235#discussion_r250493637",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15235",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/250493637"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15235#discussion_r250493637"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15235"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/250493637/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 437,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/250526668",
    "pull_request_review_id": 195929709,
    "id": 250526668,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MDUyNjY2OA==",
    "diff_hunk": "@@ -549,6 +552,10 @@ UniValue importwallet(const JSONRPCRequest& request)\n             + HelpExampleRpc(\"importwallet\", \"\\\"test\\\"\")\n         );\n \n+    if (pwallet->IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS)) {\n+        throw JSONRPCError(RPC_WALLET_ERROR, \"Importing wallets is disabled when private keys are disabled\");",
    "path": "src/wallet/rpcdump.cpp",
    "position": null,
    "original_position": 15,
    "commit_id": "e6c58d3b014ab8ef5cca4be68764af4b79685fcb",
    "original_commit_id": "ab677edbd80b2198e2347eaa6fbc7beb9e9dfe1a",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Please open an issue for this as well, a TODO in the source code hasn't historically turned out very effective.",
    "created_at": "2019-01-24T09:39:28Z",
    "updated_at": "2019-01-31T19:29:38Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15235#discussion_r250526668",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15235",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/250526668"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15235#discussion_r250526668"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15235"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/250526668/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 557,
    "side": "RIGHT",
    "in_reply_to_id": 250144732
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/250547555",
    "pull_request_review_id": 195955711,
    "id": 250547555,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MDU0NzU1NQ==",
    "diff_hunk": "@@ -433,8 +433,8 @@ def batch(self, requests):\n \n     def send_cli(self, command=None, *args, **kwargs):\n         \"\"\"Run bitcoin-cli command. Deserializes returned string as python object.\"\"\"\n-        pos_args = [str(arg).lower() if type(arg) is bool else str(arg) for arg in args]\n-        named_args = [str(key) + \"=\" + str(value) for (key, value) in kwargs.items()]\n+        pos_args = [str(arg).lower() if type(arg) is bool else (json.dumps(arg) if (isinstance(arg, dict) or isinstance(arg, list)) else str(arg)) for arg in args]\n+        named_args = [str(key) + \"=\" + (json.dumps(value) if (isinstance(value, dict) or isinstance(value, list)) else str(value)) for (key, value) in kwargs.items()]",
    "path": "test/functional/test_framework/test_node.py",
    "position": null,
    "original_position": 7,
    "commit_id": "e6c58d3b014ab8ef5cca4be68764af4b79685fcb",
    "original_commit_id": "2fa2a444c72ac89dd4e746341b96088ef8aad74c",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Might want to use named function, say `value_to_cli`, here for clarity, and avoid repetition; this duplicated expression keeps getting longer\r\n\r\nEdit: I also think it's wrong that booleans are handled differently for pos and named args.\r\n",
    "created_at": "2019-01-24T10:33:11Z",
    "updated_at": "2019-01-31T19:29:38Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15235#discussion_r250547555",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15235",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/250547555"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15235#discussion_r250547555"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15235"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/250547555/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 437,
    "side": "RIGHT",
    "in_reply_to_id": 250493637
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/250689541",
    "pull_request_review_id": 196137521,
    "id": 250689541,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MDY4OTU0MQ==",
    "diff_hunk": "@@ -433,8 +433,8 @@ def batch(self, requests):\n \n     def send_cli(self, command=None, *args, **kwargs):\n         \"\"\"Run bitcoin-cli command. Deserializes returned string as python object.\"\"\"\n-        pos_args = [str(arg).lower() if type(arg) is bool else str(arg) for arg in args]\n-        named_args = [str(key) + \"=\" + str(value) for (key, value) in kwargs.items()]\n+        pos_args = [str(arg).lower() if type(arg) is bool else (json.dumps(arg) if (isinstance(arg, dict) or isinstance(arg, list)) else str(arg)) for arg in args]\n+        named_args = [str(key) + \"=\" + (json.dumps(value) if (isinstance(value, dict) or isinstance(value, list)) else str(value)) for (key, value) in kwargs.items()]",
    "path": "test/functional/test_framework/test_node.py",
    "position": null,
    "original_position": 7,
    "commit_id": "e6c58d3b014ab8ef5cca4be68764af4b79685fcb",
    "original_commit_id": "2fa2a444c72ac89dd4e746341b96088ef8aad74c",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Definitely agree with pulling this monstrosity out into a function :)\r\n\r\nbools in named args were fixed here: https://github.com/bitcoin/bitcoin/pull/14938#discussion_r243390546 but that PR wasn't merged.",
    "created_at": "2019-01-24T16:50:48Z",
    "updated_at": "2019-01-31T19:29:38Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15235#discussion_r250689541",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15235",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/250689541"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15235#discussion_r250689541"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15235"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/250689541/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 437,
    "side": "RIGHT",
    "in_reply_to_id": 250493637
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/250732000",
    "pull_request_review_id": 196191634,
    "id": 250732000,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MDczMjAwMA==",
    "diff_hunk": "@@ -433,8 +433,8 @@ def batch(self, requests):\n \n     def send_cli(self, command=None, *args, **kwargs):\n         \"\"\"Run bitcoin-cli command. Deserializes returned string as python object.\"\"\"\n-        pos_args = [str(arg).lower() if type(arg) is bool else str(arg) for arg in args]\n-        named_args = [str(key) + \"=\" + str(value) for (key, value) in kwargs.items()]\n+        pos_args = [str(arg).lower() if type(arg) is bool else (json.dumps(arg) if (isinstance(arg, dict) or isinstance(arg, list)) else str(arg)) for arg in args]\n+        named_args = [str(key) + \"=\" + (json.dumps(value) if (isinstance(value, dict) or isinstance(value, list)) else str(value)) for (key, value) in kwargs.items()]",
    "path": "test/functional/test_framework/test_node.py",
    "position": null,
    "original_position": 7,
    "commit_id": "e6c58d3b014ab8ef5cca4be68764af4b79685fcb",
    "original_commit_id": "2fa2a444c72ac89dd4e746341b96088ef8aad74c",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I've pulled this into a new function which is easier to read. It also fixes the bools in named args issue.",
    "created_at": "2019-01-24T18:47:41Z",
    "updated_at": "2019-01-31T19:29:38Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15235#discussion_r250732000",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15235",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/250732000"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15235#discussion_r250732000"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15235"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/250732000/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 437,
    "side": "RIGHT",
    "in_reply_to_id": 250493637
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/250946991",
    "pull_request_review_id": 196457542,
    "id": 250946991,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MDk0Njk5MQ==",
    "diff_hunk": "@@ -549,6 +552,10 @@ UniValue importwallet(const JSONRPCRequest& request)\n             + HelpExampleRpc(\"importwallet\", \"\\\"test\\\"\")\n         );\n \n+    if (pwallet->IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS)) {\n+        throw JSONRPCError(RPC_WALLET_ERROR, \"Importing wallets is disabled when private keys are disabled\");",
    "path": "src/wallet/rpcdump.cpp",
    "position": null,
    "original_position": 15,
    "commit_id": "e6c58d3b014ab8ef5cca4be68764af4b79685fcb",
    "original_commit_id": "ab677edbd80b2198e2347eaa6fbc7beb9e9dfe1a",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "@laanwj wrote:\r\n> Please open an issue for this as well, a TODO in the source code hasn't historically turned out very effective.\r\n\r\nAlthough it says \"todo\", I see it more as an explanation that this is strictly speaking a bug, and that we should pay attention to this if we  move to descriptor based wallets and (presumably) overhaul the dump and import commands.",
    "created_at": "2019-01-25T11:05:13Z",
    "updated_at": "2019-01-31T19:29:38Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15235#discussion_r250946991",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15235",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/250946991"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15235#discussion_r250946991"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15235"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/250946991/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 557,
    "side": "RIGHT",
    "in_reply_to_id": 250144732
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252717766",
    "pull_request_review_id": 198656969,
    "id": 252717766,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MjcxNzc2Ng==",
    "diff_hunk": "@@ -433,8 +433,8 @@ def batch(self, requests):\n \n     def send_cli(self, command=None, *args, **kwargs):\n         \"\"\"Run bitcoin-cli command. Deserializes returned string as python object.\"\"\"\n-        pos_args = [str(arg).lower() if type(arg) is bool else str(arg) for arg in args]\n-        named_args = [str(key) + \"=\" + str(value) for (key, value) in kwargs.items()]\n+        pos_args = [str(arg).lower() if type(arg) is bool else (json.dumps(arg) if (isinstance(arg, dict) or isinstance(arg, list)) else str(arg)) for arg in args]\n+        named_args = [str(key) + \"=\" + (json.dumps(value) if (isinstance(value, dict) or isinstance(value, list)) else str(value)) for (key, value) in kwargs.items()]",
    "path": "test/functional/test_framework/test_node.py",
    "position": null,
    "original_position": 7,
    "commit_id": "e6c58d3b014ab8ef5cca4be68764af4b79685fcb",
    "original_commit_id": "2fa2a444c72ac89dd4e746341b96088ef8aad74c",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Since this issue affects multiple PRs, I've split it into a separate PR: #15301",
    "created_at": "2019-01-31T15:38:57Z",
    "updated_at": "2019-01-31T19:29:38Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15235#discussion_r252717766",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15235",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252717766"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15235#discussion_r252717766"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15235"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252717766/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 437,
    "side": "RIGHT",
    "in_reply_to_id": 250493637
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252749362",
    "pull_request_review_id": 198698895,
    "id": 252749362,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1Mjc0OTM2Mg==",
    "diff_hunk": "@@ -613,36 +608,60 @@ UniValue importwallet(const JSONRPCRequest& request)\n                         fLabel = true;\n                     }\n                 }\n-                pwallet->WalletLogPrintf(\"Importing %s...\\n\", EncodeDestination(keyid));\n-                if (!pwallet->AddKeyPubKey(key, pubkey)) {\n-                    fGood = false;\n-                    continue;\n-                }\n-                pwallet->mapKeyMetadata[keyid].nCreateTime = nTime;\n-                if (fLabel)\n-                    pwallet->SetAddressBook(keyid, strLabel, \"receive\");\n-                nTimeBegin = std::min(nTimeBegin, nTime);\n+                keys.push_back(std::make_tuple(key, nTime, fLabel, strLabel));\n             } else if(IsHex(vstr[0])) {\n-               std::vector<unsigned char> vData(ParseHex(vstr[0]));\n-               CScript script = CScript(vData.begin(), vData.end());\n-               CScriptID id(script);\n-               if (pwallet->HaveCScript(id)) {\n-                   pwallet->WalletLogPrintf(\"Skipping import of %s (script already present)\\n\", vstr[0]);\n-                   continue;\n-               }\n-               if(!pwallet->AddCScript(script)) {\n-                   pwallet->WalletLogPrintf(\"Error importing script %s\\n\", vstr[0]);\n-                   fGood = false;\n-                   continue;\n-               }\n-               int64_t birth_time = DecodeDumpTime(vstr[1]);\n-               if (birth_time > 0) {\n-                   pwallet->m_script_metadata[id].nCreateTime = birth_time;\n-                   nTimeBegin = std::min(nTimeBegin, birth_time);\n-               }\n+                std::vector<unsigned char> vData(ParseHex(vstr[0]));\n+                CScript script = CScript(vData.begin(), vData.end());\n+                int64_t birth_time = DecodeDumpTime(vstr[1]);\n+                scripts.push_back(std::pair<CScript, int64_t>(script, birth_time));\n             }\n         }\n         file.close();\n+        for (unsigned int i = 0; i < keys.size(); ++i) {",
    "path": "src/wallet/rpcdump.cpp",
    "position": null,
    "original_position": 65,
    "commit_id": "e6c58d3b014ab8ef5cca4be68764af4b79685fcb",
    "original_commit_id": "e6c9c61f04066c8258f8c19f25a2f0160f70f5ea",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: calculate `total = keys.size() + scripts.size()` before the loop, then set `progress=0`\r\n ```cpp\r\nfor ( const auto& key_tuple : keys ) {\r\n... ShowProgress(... progress / total * 100)\r\n...\r\nprogress++\r\n```",
    "created_at": "2019-01-31T16:50:11Z",
    "updated_at": "2019-01-31T19:29:38Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15235#discussion_r252749362",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15235",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252749362"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15235#discussion_r252749362"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15235"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252749362/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 630,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252758147",
    "pull_request_review_id": 198698895,
    "id": 252758147,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1Mjc1ODE0Nw==",
    "diff_hunk": "@@ -613,36 +608,60 @@ UniValue importwallet(const JSONRPCRequest& request)\n                         fLabel = true;\n                     }\n                 }\n-                pwallet->WalletLogPrintf(\"Importing %s...\\n\", EncodeDestination(keyid));\n-                if (!pwallet->AddKeyPubKey(key, pubkey)) {\n-                    fGood = false;\n-                    continue;\n-                }\n-                pwallet->mapKeyMetadata[keyid].nCreateTime = nTime;\n-                if (fLabel)\n-                    pwallet->SetAddressBook(keyid, strLabel, \"receive\");\n-                nTimeBegin = std::min(nTimeBegin, nTime);\n+                keys.push_back(std::make_tuple(key, nTime, fLabel, strLabel));\n             } else if(IsHex(vstr[0])) {\n-               std::vector<unsigned char> vData(ParseHex(vstr[0]));\n-               CScript script = CScript(vData.begin(), vData.end());\n-               CScriptID id(script);\n-               if (pwallet->HaveCScript(id)) {\n-                   pwallet->WalletLogPrintf(\"Skipping import of %s (script already present)\\n\", vstr[0]);\n-                   continue;\n-               }\n-               if(!pwallet->AddCScript(script)) {\n-                   pwallet->WalletLogPrintf(\"Error importing script %s\\n\", vstr[0]);\n-                   fGood = false;\n-                   continue;\n-               }\n-               int64_t birth_time = DecodeDumpTime(vstr[1]);\n-               if (birth_time > 0) {\n-                   pwallet->m_script_metadata[id].nCreateTime = birth_time;\n-                   nTimeBegin = std::min(nTimeBegin, birth_time);\n-               }\n+                std::vector<unsigned char> vData(ParseHex(vstr[0]));\n+                CScript script = CScript(vData.begin(), vData.end());\n+                int64_t birth_time = DecodeDumpTime(vstr[1]);\n+                scripts.push_back(std::pair<CScript, int64_t>(script, birth_time));\n             }\n         }\n         file.close();\n+        for (unsigned int i = 0; i < keys.size(); ++i) {\n+            const auto& key_tuple = keys[i];\n+            uiInterface.ShowProgress(\"\", std::max(50, std::min(75, (int)(((double)i / (double)(keys.size() + scripts.size())) * 100))), false);\n+            const CKey& key = std::get<0>(key_tuple);\n+            int64_t time = std::get<1>(key_tuple);\n+            bool has_label = std::get<2>(key_tuple);\n+            std::string label = std::get<3>(key_tuple);\n+\n+            CPubKey pubkey = key.GetPubKey();\n+            assert(key.VerifyPubKey(pubkey));\n+            CKeyID keyid = pubkey.GetID();\n+            if (pwallet->HaveKey(keyid)) {\n+                pwallet->WalletLogPrintf(\"Skipping import of %s (key already present)\\n\", EncodeDestination(keyid));\n+                continue;\n+            }\n+            pwallet->WalletLogPrintf(\"Importing %s...\\n\", EncodeDestination(keyid));\n+            if (!pwallet->AddKeyPubKey(key, pubkey)) {\n+                fGood = false;\n+                continue;\n+            }\n+            pwallet->mapKeyMetadata[keyid].nCreateTime = time;\n+            if (has_label)\n+                pwallet->SetAddressBook(keyid, label, \"receive\");\n+            nTimeBegin = std::min(nTimeBegin, time);\n+        }\n+        for (unsigned int i = 0; i < scripts.size(); ++i) {\n+            const auto& script_pair = scripts[i];\n+            uiInterface.ShowProgress(\"\", std::max(50, std::min(75, (int)(((double)(i + keys.size()) / (double)(keys.size() + scripts.size())) * 100))), false);\n+            const CScript& script = script_pair.first;\n+            int64_t time = script_pair.second;\n+            CScriptID id(script);\n+            if (pwallet->HaveCScript(id)) {\n+                pwallet->WalletLogPrintf(\"Skipping import of %s (script already present)\\n\", HexStr(script));\n+                continue;\n+            }\n+            if(!pwallet->AddCScript(script)) {\n+                pwallet->WalletLogPrintf(\"Error importing script %s\\n\", HexStr(script));\n+                fGood = false;\n+                continue;\n+            }\n+            if (time > 0) {\n+                pwallet->m_script_metadata[id].nCreateTime = time;\n+                nTimeBegin = std::min(nTimeBegin, time);",
    "path": "src/wallet/rpcdump.cpp",
    "position": 123,
    "original_position": 107,
    "commit_id": "e6c58d3b014ab8ef5cca4be68764af4b79685fcb",
    "original_commit_id": "e6c9c61f04066c8258f8c19f25a2f0160f70f5ea",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Shouldn't this be `birthtime`? `int64_t birth_time = DecodeDumpTime(vstr[1])` (because all script timestamps are 0 in the dump). This line should be moved outside the loop probably.",
    "created_at": "2019-01-31T17:11:48Z",
    "updated_at": "2019-01-31T19:29:38Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15235#discussion_r252758147",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15235",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252758147"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15235#discussion_r252758147"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15235"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252758147/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 671,
    "original_line": 671,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252776800",
    "pull_request_review_id": 198734314,
    "id": 252776800,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1Mjc3NjgwMA==",
    "diff_hunk": "@@ -613,36 +608,60 @@ UniValue importwallet(const JSONRPCRequest& request)\n                         fLabel = true;\n                     }\n                 }\n-                pwallet->WalletLogPrintf(\"Importing %s...\\n\", EncodeDestination(keyid));\n-                if (!pwallet->AddKeyPubKey(key, pubkey)) {\n-                    fGood = false;\n-                    continue;\n-                }\n-                pwallet->mapKeyMetadata[keyid].nCreateTime = nTime;\n-                if (fLabel)\n-                    pwallet->SetAddressBook(keyid, strLabel, \"receive\");\n-                nTimeBegin = std::min(nTimeBegin, nTime);\n+                keys.push_back(std::make_tuple(key, nTime, fLabel, strLabel));\n             } else if(IsHex(vstr[0])) {\n-               std::vector<unsigned char> vData(ParseHex(vstr[0]));\n-               CScript script = CScript(vData.begin(), vData.end());\n-               CScriptID id(script);\n-               if (pwallet->HaveCScript(id)) {\n-                   pwallet->WalletLogPrintf(\"Skipping import of %s (script already present)\\n\", vstr[0]);\n-                   continue;\n-               }\n-               if(!pwallet->AddCScript(script)) {\n-                   pwallet->WalletLogPrintf(\"Error importing script %s\\n\", vstr[0]);\n-                   fGood = false;\n-                   continue;\n-               }\n-               int64_t birth_time = DecodeDumpTime(vstr[1]);\n-               if (birth_time > 0) {\n-                   pwallet->m_script_metadata[id].nCreateTime = birth_time;\n-                   nTimeBegin = std::min(nTimeBegin, birth_time);\n-               }\n+                std::vector<unsigned char> vData(ParseHex(vstr[0]));\n+                CScript script = CScript(vData.begin(), vData.end());\n+                int64_t birth_time = DecodeDumpTime(vstr[1]);\n+                scripts.push_back(std::pair<CScript, int64_t>(script, birth_time));\n             }\n         }\n         file.close();\n+        for (unsigned int i = 0; i < keys.size(); ++i) {\n+            const auto& key_tuple = keys[i];\n+            uiInterface.ShowProgress(\"\", std::max(50, std::min(75, (int)(((double)i / (double)(keys.size() + scripts.size())) * 100))), false);\n+            const CKey& key = std::get<0>(key_tuple);\n+            int64_t time = std::get<1>(key_tuple);\n+            bool has_label = std::get<2>(key_tuple);\n+            std::string label = std::get<3>(key_tuple);\n+\n+            CPubKey pubkey = key.GetPubKey();\n+            assert(key.VerifyPubKey(pubkey));\n+            CKeyID keyid = pubkey.GetID();\n+            if (pwallet->HaveKey(keyid)) {\n+                pwallet->WalletLogPrintf(\"Skipping import of %s (key already present)\\n\", EncodeDestination(keyid));\n+                continue;\n+            }\n+            pwallet->WalletLogPrintf(\"Importing %s...\\n\", EncodeDestination(keyid));\n+            if (!pwallet->AddKeyPubKey(key, pubkey)) {\n+                fGood = false;\n+                continue;\n+            }\n+            pwallet->mapKeyMetadata[keyid].nCreateTime = time;\n+            if (has_label)\n+                pwallet->SetAddressBook(keyid, label, \"receive\");\n+            nTimeBegin = std::min(nTimeBegin, time);\n+        }\n+        for (unsigned int i = 0; i < scripts.size(); ++i) {\n+            const auto& script_pair = scripts[i];\n+            uiInterface.ShowProgress(\"\", std::max(50, std::min(75, (int)(((double)(i + keys.size()) / (double)(keys.size() + scripts.size())) * 100))), false);\n+            const CScript& script = script_pair.first;\n+            int64_t time = script_pair.second;\n+            CScriptID id(script);\n+            if (pwallet->HaveCScript(id)) {\n+                pwallet->WalletLogPrintf(\"Skipping import of %s (script already present)\\n\", HexStr(script));\n+                continue;\n+            }\n+            if(!pwallet->AddCScript(script)) {\n+                pwallet->WalletLogPrintf(\"Error importing script %s\\n\", HexStr(script));\n+                fGood = false;\n+                continue;\n+            }\n+            if (time > 0) {\n+                pwallet->m_script_metadata[id].nCreateTime = time;\n+                nTimeBegin = std::min(nTimeBegin, time);",
    "path": "src/wallet/rpcdump.cpp",
    "position": 123,
    "original_position": 107,
    "commit_id": "e6c58d3b014ab8ef5cca4be68764af4b79685fcb",
    "original_commit_id": "e6c9c61f04066c8258f8c19f25a2f0160f70f5ea",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "No because `birth_time` just becomes `time` in this loop.",
    "created_at": "2019-01-31T18:03:32Z",
    "updated_at": "2019-01-31T19:29:38Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15235#discussion_r252776800",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15235",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252776800"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15235#discussion_r252776800"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15235"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252776800/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 671,
    "original_line": 671,
    "side": "RIGHT",
    "in_reply_to_id": 252758147
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252778221",
    "pull_request_review_id": 198736009,
    "id": 252778221,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1Mjc3ODIyMQ==",
    "diff_hunk": "@@ -613,36 +608,60 @@ UniValue importwallet(const JSONRPCRequest& request)\n                         fLabel = true;\n                     }\n                 }\n-                pwallet->WalletLogPrintf(\"Importing %s...\\n\", EncodeDestination(keyid));\n-                if (!pwallet->AddKeyPubKey(key, pubkey)) {\n-                    fGood = false;\n-                    continue;\n-                }\n-                pwallet->mapKeyMetadata[keyid].nCreateTime = nTime;\n-                if (fLabel)\n-                    pwallet->SetAddressBook(keyid, strLabel, \"receive\");\n-                nTimeBegin = std::min(nTimeBegin, nTime);\n+                keys.push_back(std::make_tuple(key, nTime, fLabel, strLabel));\n             } else if(IsHex(vstr[0])) {\n-               std::vector<unsigned char> vData(ParseHex(vstr[0]));\n-               CScript script = CScript(vData.begin(), vData.end());\n-               CScriptID id(script);\n-               if (pwallet->HaveCScript(id)) {\n-                   pwallet->WalletLogPrintf(\"Skipping import of %s (script already present)\\n\", vstr[0]);\n-                   continue;\n-               }\n-               if(!pwallet->AddCScript(script)) {\n-                   pwallet->WalletLogPrintf(\"Error importing script %s\\n\", vstr[0]);\n-                   fGood = false;\n-                   continue;\n-               }\n-               int64_t birth_time = DecodeDumpTime(vstr[1]);\n-               if (birth_time > 0) {\n-                   pwallet->m_script_metadata[id].nCreateTime = birth_time;\n-                   nTimeBegin = std::min(nTimeBegin, birth_time);\n-               }\n+                std::vector<unsigned char> vData(ParseHex(vstr[0]));\n+                CScript script = CScript(vData.begin(), vData.end());\n+                int64_t birth_time = DecodeDumpTime(vstr[1]);\n+                scripts.push_back(std::pair<CScript, int64_t>(script, birth_time));\n             }\n         }\n         file.close();\n+        for (unsigned int i = 0; i < keys.size(); ++i) {",
    "path": "src/wallet/rpcdump.cpp",
    "position": null,
    "original_position": 65,
    "commit_id": "e6c58d3b014ab8ef5cca4be68764af4b79685fcb",
    "original_commit_id": "e6c9c61f04066c8258f8c19f25a2f0160f70f5ea",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done",
    "created_at": "2019-01-31T18:07:31Z",
    "updated_at": "2019-01-31T19:29:38Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15235#discussion_r252778221",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15235",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252778221"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15235#discussion_r252778221"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15235"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252778221/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 630,
    "side": "RIGHT",
    "in_reply_to_id": 252749362
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252795862",
    "pull_request_review_id": 198757940,
    "id": 252795862,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1Mjc5NTg2Mg==",
    "diff_hunk": "@@ -613,36 +608,60 @@ UniValue importwallet(const JSONRPCRequest& request)\n                         fLabel = true;\n                     }\n                 }\n-                pwallet->WalletLogPrintf(\"Importing %s...\\n\", EncodeDestination(keyid));\n-                if (!pwallet->AddKeyPubKey(key, pubkey)) {\n-                    fGood = false;\n-                    continue;\n-                }\n-                pwallet->mapKeyMetadata[keyid].nCreateTime = nTime;\n-                if (fLabel)\n-                    pwallet->SetAddressBook(keyid, strLabel, \"receive\");\n-                nTimeBegin = std::min(nTimeBegin, nTime);\n+                keys.push_back(std::make_tuple(key, nTime, fLabel, strLabel));\n             } else if(IsHex(vstr[0])) {\n-               std::vector<unsigned char> vData(ParseHex(vstr[0]));\n-               CScript script = CScript(vData.begin(), vData.end());\n-               CScriptID id(script);\n-               if (pwallet->HaveCScript(id)) {\n-                   pwallet->WalletLogPrintf(\"Skipping import of %s (script already present)\\n\", vstr[0]);\n-                   continue;\n-               }\n-               if(!pwallet->AddCScript(script)) {\n-                   pwallet->WalletLogPrintf(\"Error importing script %s\\n\", vstr[0]);\n-                   fGood = false;\n-                   continue;\n-               }\n-               int64_t birth_time = DecodeDumpTime(vstr[1]);\n-               if (birth_time > 0) {\n-                   pwallet->m_script_metadata[id].nCreateTime = birth_time;\n-                   nTimeBegin = std::min(nTimeBegin, birth_time);\n-               }\n+                std::vector<unsigned char> vData(ParseHex(vstr[0]));\n+                CScript script = CScript(vData.begin(), vData.end());\n+                int64_t birth_time = DecodeDumpTime(vstr[1]);\n+                scripts.push_back(std::pair<CScript, int64_t>(script, birth_time));\n             }\n         }\n         file.close();\n+        for (unsigned int i = 0; i < keys.size(); ++i) {",
    "path": "src/wallet/rpcdump.cpp",
    "position": null,
    "original_position": 65,
    "commit_id": "e6c58d3b014ab8ef5cca4be68764af4b79685fcb",
    "original_commit_id": "e6c9c61f04066c8258f8c19f25a2f0160f70f5ea",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "re-nit: still missing the `for ( const auto& key_tuple : keys )` bit :-)",
    "created_at": "2019-01-31T18:56:31Z",
    "updated_at": "2019-01-31T19:29:38Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15235#discussion_r252795862",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15235",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252795862"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15235#discussion_r252795862"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15235"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252795862/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 630,
    "side": "RIGHT",
    "in_reply_to_id": 252749362
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252802363",
    "pull_request_review_id": 198757940,
    "id": 252802363,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MjgwMjM2Mw==",
    "diff_hunk": "@@ -613,36 +608,60 @@ UniValue importwallet(const JSONRPCRequest& request)\n                         fLabel = true;\n                     }\n                 }\n-                pwallet->WalletLogPrintf(\"Importing %s...\\n\", EncodeDestination(keyid));\n-                if (!pwallet->AddKeyPubKey(key, pubkey)) {\n-                    fGood = false;\n-                    continue;\n-                }\n-                pwallet->mapKeyMetadata[keyid].nCreateTime = nTime;\n-                if (fLabel)\n-                    pwallet->SetAddressBook(keyid, strLabel, \"receive\");\n-                nTimeBegin = std::min(nTimeBegin, nTime);\n+                keys.push_back(std::make_tuple(key, nTime, fLabel, strLabel));\n             } else if(IsHex(vstr[0])) {\n-               std::vector<unsigned char> vData(ParseHex(vstr[0]));\n-               CScript script = CScript(vData.begin(), vData.end());\n-               CScriptID id(script);\n-               if (pwallet->HaveCScript(id)) {\n-                   pwallet->WalletLogPrintf(\"Skipping import of %s (script already present)\\n\", vstr[0]);\n-                   continue;\n-               }\n-               if(!pwallet->AddCScript(script)) {\n-                   pwallet->WalletLogPrintf(\"Error importing script %s\\n\", vstr[0]);\n-                   fGood = false;\n-                   continue;\n-               }\n-               int64_t birth_time = DecodeDumpTime(vstr[1]);\n-               if (birth_time > 0) {\n-                   pwallet->m_script_metadata[id].nCreateTime = birth_time;\n-                   nTimeBegin = std::min(nTimeBegin, birth_time);\n-               }\n+                std::vector<unsigned char> vData(ParseHex(vstr[0]));\n+                CScript script = CScript(vData.begin(), vData.end());\n+                int64_t birth_time = DecodeDumpTime(vstr[1]);\n+                scripts.push_back(std::pair<CScript, int64_t>(script, birth_time));\n             }\n         }\n         file.close();\n+        for (unsigned int i = 0; i < keys.size(); ++i) {\n+            const auto& key_tuple = keys[i];\n+            uiInterface.ShowProgress(\"\", std::max(50, std::min(75, (int)(((double)i / (double)(keys.size() + scripts.size())) * 100))), false);\n+            const CKey& key = std::get<0>(key_tuple);\n+            int64_t time = std::get<1>(key_tuple);\n+            bool has_label = std::get<2>(key_tuple);\n+            std::string label = std::get<3>(key_tuple);\n+\n+            CPubKey pubkey = key.GetPubKey();\n+            assert(key.VerifyPubKey(pubkey));\n+            CKeyID keyid = pubkey.GetID();\n+            if (pwallet->HaveKey(keyid)) {\n+                pwallet->WalletLogPrintf(\"Skipping import of %s (key already present)\\n\", EncodeDestination(keyid));\n+                continue;\n+            }\n+            pwallet->WalletLogPrintf(\"Importing %s...\\n\", EncodeDestination(keyid));\n+            if (!pwallet->AddKeyPubKey(key, pubkey)) {\n+                fGood = false;\n+                continue;\n+            }\n+            pwallet->mapKeyMetadata[keyid].nCreateTime = time;\n+            if (has_label)\n+                pwallet->SetAddressBook(keyid, label, \"receive\");\n+            nTimeBegin = std::min(nTimeBegin, time);\n+        }\n+        for (unsigned int i = 0; i < scripts.size(); ++i) {\n+            const auto& script_pair = scripts[i];\n+            uiInterface.ShowProgress(\"\", std::max(50, std::min(75, (int)(((double)(i + keys.size()) / (double)(keys.size() + scripts.size())) * 100))), false);\n+            const CScript& script = script_pair.first;\n+            int64_t time = script_pair.second;\n+            CScriptID id(script);\n+            if (pwallet->HaveCScript(id)) {\n+                pwallet->WalletLogPrintf(\"Skipping import of %s (script already present)\\n\", HexStr(script));\n+                continue;\n+            }\n+            if(!pwallet->AddCScript(script)) {\n+                pwallet->WalletLogPrintf(\"Error importing script %s\\n\", HexStr(script));\n+                fGood = false;\n+                continue;\n+            }\n+            if (time > 0) {\n+                pwallet->m_script_metadata[id].nCreateTime = time;\n+                nTimeBegin = std::min(nTimeBegin, time);",
    "path": "src/wallet/rpcdump.cpp",
    "position": 123,
    "original_position": 107,
    "commit_id": "e6c58d3b014ab8ef5cca4be68764af4b79685fcb",
    "original_commit_id": "e6c9c61f04066c8258f8c19f25a2f0160f70f5ea",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Ok, but then what's causing the full rescan?\r\n\r\nJust tried on `HEAD~2` and getting the same thing, so I'm blaming my own wallet. Just tried this again with a fresh wallet that only has one transaction. Now the rescan is a modest 10623 blocks (I guess that's a built in safety margin?).\r\n\r\n I also got a ton of `Skipping import of ... (script already present)` messages both my original weird wallet and on the fresh one. That doesn't make sense to me, because I'm importing into a brand new wallet.  But it's not new behavior.",
    "created_at": "2019-01-31T19:14:29Z",
    "updated_at": "2019-01-31T19:29:38Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15235#discussion_r252802363",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15235",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252802363"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15235#discussion_r252802363"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15235"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252802363/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 671,
    "original_line": 671,
    "side": "RIGHT",
    "in_reply_to_id": 252758147
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252807995",
    "pull_request_review_id": 198772916,
    "id": 252807995,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MjgwNzk5NQ==",
    "diff_hunk": "@@ -613,36 +608,60 @@ UniValue importwallet(const JSONRPCRequest& request)\n                         fLabel = true;\n                     }\n                 }\n-                pwallet->WalletLogPrintf(\"Importing %s...\\n\", EncodeDestination(keyid));\n-                if (!pwallet->AddKeyPubKey(key, pubkey)) {\n-                    fGood = false;\n-                    continue;\n-                }\n-                pwallet->mapKeyMetadata[keyid].nCreateTime = nTime;\n-                if (fLabel)\n-                    pwallet->SetAddressBook(keyid, strLabel, \"receive\");\n-                nTimeBegin = std::min(nTimeBegin, nTime);\n+                keys.push_back(std::make_tuple(key, nTime, fLabel, strLabel));\n             } else if(IsHex(vstr[0])) {\n-               std::vector<unsigned char> vData(ParseHex(vstr[0]));\n-               CScript script = CScript(vData.begin(), vData.end());\n-               CScriptID id(script);\n-               if (pwallet->HaveCScript(id)) {\n-                   pwallet->WalletLogPrintf(\"Skipping import of %s (script already present)\\n\", vstr[0]);\n-                   continue;\n-               }\n-               if(!pwallet->AddCScript(script)) {\n-                   pwallet->WalletLogPrintf(\"Error importing script %s\\n\", vstr[0]);\n-                   fGood = false;\n-                   continue;\n-               }\n-               int64_t birth_time = DecodeDumpTime(vstr[1]);\n-               if (birth_time > 0) {\n-                   pwallet->m_script_metadata[id].nCreateTime = birth_time;\n-                   nTimeBegin = std::min(nTimeBegin, birth_time);\n-               }\n+                std::vector<unsigned char> vData(ParseHex(vstr[0]));\n+                CScript script = CScript(vData.begin(), vData.end());\n+                int64_t birth_time = DecodeDumpTime(vstr[1]);\n+                scripts.push_back(std::pair<CScript, int64_t>(script, birth_time));\n             }\n         }\n         file.close();\n+        for (unsigned int i = 0; i < keys.size(); ++i) {",
    "path": "src/wallet/rpcdump.cpp",
    "position": null,
    "original_position": 65,
    "commit_id": "e6c58d3b014ab8ef5cca4be68764af4b79685fcb",
    "original_commit_id": "e6c9c61f04066c8258f8c19f25a2f0160f70f5ea",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Oops fixed",
    "created_at": "2019-01-31T19:29:49Z",
    "updated_at": "2019-01-31T19:29:49Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15235#discussion_r252807995",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15235",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252807995"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15235#discussion_r252807995"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15235"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252807995/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 630,
    "side": "RIGHT",
    "in_reply_to_id": 252749362
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252812812",
    "pull_request_review_id": 198778961,
    "id": 252812812,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MjgxMjgxMg==",
    "diff_hunk": "@@ -613,36 +608,60 @@ UniValue importwallet(const JSONRPCRequest& request)\n                         fLabel = true;\n                     }\n                 }\n-                pwallet->WalletLogPrintf(\"Importing %s...\\n\", EncodeDestination(keyid));\n-                if (!pwallet->AddKeyPubKey(key, pubkey)) {\n-                    fGood = false;\n-                    continue;\n-                }\n-                pwallet->mapKeyMetadata[keyid].nCreateTime = nTime;\n-                if (fLabel)\n-                    pwallet->SetAddressBook(keyid, strLabel, \"receive\");\n-                nTimeBegin = std::min(nTimeBegin, nTime);\n+                keys.push_back(std::make_tuple(key, nTime, fLabel, strLabel));\n             } else if(IsHex(vstr[0])) {\n-               std::vector<unsigned char> vData(ParseHex(vstr[0]));\n-               CScript script = CScript(vData.begin(), vData.end());\n-               CScriptID id(script);\n-               if (pwallet->HaveCScript(id)) {\n-                   pwallet->WalletLogPrintf(\"Skipping import of %s (script already present)\\n\", vstr[0]);\n-                   continue;\n-               }\n-               if(!pwallet->AddCScript(script)) {\n-                   pwallet->WalletLogPrintf(\"Error importing script %s\\n\", vstr[0]);\n-                   fGood = false;\n-                   continue;\n-               }\n-               int64_t birth_time = DecodeDumpTime(vstr[1]);\n-               if (birth_time > 0) {\n-                   pwallet->m_script_metadata[id].nCreateTime = birth_time;\n-                   nTimeBegin = std::min(nTimeBegin, birth_time);\n-               }\n+                std::vector<unsigned char> vData(ParseHex(vstr[0]));\n+                CScript script = CScript(vData.begin(), vData.end());\n+                int64_t birth_time = DecodeDumpTime(vstr[1]);\n+                scripts.push_back(std::pair<CScript, int64_t>(script, birth_time));\n             }\n         }\n         file.close();\n+        for (unsigned int i = 0; i < keys.size(); ++i) {\n+            const auto& key_tuple = keys[i];\n+            uiInterface.ShowProgress(\"\", std::max(50, std::min(75, (int)(((double)i / (double)(keys.size() + scripts.size())) * 100))), false);\n+            const CKey& key = std::get<0>(key_tuple);\n+            int64_t time = std::get<1>(key_tuple);\n+            bool has_label = std::get<2>(key_tuple);\n+            std::string label = std::get<3>(key_tuple);\n+\n+            CPubKey pubkey = key.GetPubKey();\n+            assert(key.VerifyPubKey(pubkey));\n+            CKeyID keyid = pubkey.GetID();\n+            if (pwallet->HaveKey(keyid)) {\n+                pwallet->WalletLogPrintf(\"Skipping import of %s (key already present)\\n\", EncodeDestination(keyid));\n+                continue;\n+            }\n+            pwallet->WalletLogPrintf(\"Importing %s...\\n\", EncodeDestination(keyid));\n+            if (!pwallet->AddKeyPubKey(key, pubkey)) {\n+                fGood = false;\n+                continue;\n+            }\n+            pwallet->mapKeyMetadata[keyid].nCreateTime = time;\n+            if (has_label)\n+                pwallet->SetAddressBook(keyid, label, \"receive\");\n+            nTimeBegin = std::min(nTimeBegin, time);\n+        }\n+        for (unsigned int i = 0; i < scripts.size(); ++i) {\n+            const auto& script_pair = scripts[i];\n+            uiInterface.ShowProgress(\"\", std::max(50, std::min(75, (int)(((double)(i + keys.size()) / (double)(keys.size() + scripts.size())) * 100))), false);\n+            const CScript& script = script_pair.first;\n+            int64_t time = script_pair.second;\n+            CScriptID id(script);\n+            if (pwallet->HaveCScript(id)) {\n+                pwallet->WalletLogPrintf(\"Skipping import of %s (script already present)\\n\", HexStr(script));\n+                continue;\n+            }\n+            if(!pwallet->AddCScript(script)) {\n+                pwallet->WalletLogPrintf(\"Error importing script %s\\n\", HexStr(script));\n+                fGood = false;\n+                continue;\n+            }\n+            if (time > 0) {\n+                pwallet->m_script_metadata[id].nCreateTime = time;\n+                nTimeBegin = std::min(nTimeBegin, time);",
    "path": "src/wallet/rpcdump.cpp",
    "position": 123,
    "original_position": 107,
    "commit_id": "e6c58d3b014ab8ef5cca4be68764af4b79685fcb",
    "original_commit_id": "e6c9c61f04066c8258f8c19f25a2f0160f70f5ea",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I'm not sure what might be causing that problem. However the `Skipping import` messages for scripts is expected since segwit scripts are in the dump, but already automatically imported when the keys were imported.",
    "created_at": "2019-01-31T19:43:28Z",
    "updated_at": "2019-01-31T19:43:28Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/15235#discussion_r252812812",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15235",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252812812"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/15235#discussion_r252812812"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15235"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252812812/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 671,
    "original_line": 671,
    "side": "RIGHT",
    "in_reply_to_id": 252758147
  }
]