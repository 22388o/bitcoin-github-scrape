[
  {
    "sha": "c4b288d5d9ac0035c1f2d935aa7d80d86d76a010",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjNGIyODhkNWQ5YWMwMDM1YzFmMmQ5MzVhYTdkODBkODZkNzZhMDEw",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-11-28T15:50:19Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-01-28T20:01:11Z"
      },
      "message": "policy: add CFeeRate::FromSatB/FromBtcKb constructors",
      "tree": {
        "sha": "21eba11ff8cea89f661e59fde1a51a795b1b951e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/21eba11ff8cea89f661e59fde1a51a795b1b951e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c4b288d5d9ac0035c1f2d935aa7d80d86d76a010",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAmATGAcACgkQT1chs9Dj\nkh0MFRAAxdA6mWEZSnYk/49mLH+2WsA/kWKQgXnYFusJejGZCMJ3y0XQ56rE9IhG\ndOaRgDz0qhzYlyF0ijDsb3/LXIH3WkMqM8AiWks4JCu9lkp2ylKZQP7bleQBk+p6\nlQJsIvM9g8boRvS6IiD2Xt4S4iIttc0XW2x3Zco3sJttafaG5asZmoB97449ftdj\nYleARUoUY6NsX2DDvL5/sjwaeiA1KDOW1AXOlu5rx/sspI6PGQRI0hzHar375zbP\nsiaMeQHndyPqHRa5gJCn3qxyU46bh+EnsCtMSpb1i3PL4TDf0+bV2mfiJrcTlWB0\npcvyUNzdnJBZiTVzvbEmMfncrlm0pRU/dhLeBvzN0EBzeoQM7VxfbyEWD3mYwx1K\n7EXM9b+ksDnl4zwdhKNO4Fa3dwTNVIg1cQF7pEGsKfUbAE6SlDd/PmkWGDZ8+9q0\nCI9aVo+pvmDK1IMTIwe9eeJeBQg88qaEA6I48eNs7zfLk1CMEO+5HFtpb4uXb+Qp\nuL58Ydwn+Tt6rDBnqg6RVVQzGzeXkGTDhyX71lZaOFJrpQE53MPVJ+ZruXzaJGy1\niJ7PNXqg0ReMYtdiPQrKhJxklglQZOkH2D6kMIjkeOlMJmjV9f/nJwrdO/hIrukw\nL3cWuGUZrn5ybKHUyQMj11G+557WzlQssBFH9y+e9Ty0Czky/c0=\n=LaDF\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIBtNV69RSFCG+ar+5Hs+Poga5mezHOXyXrDZvAWMJ5efCP/wEDQTWMDVquG/\nv80qRXUg4BMI8QRgExgJ8Aj+UtzlONGqEgCD3+MNLvkMjikoaHR0cHM6Ly9maW5u\nZXkuY2FsZW5kYXIuZXRlcm5pdHl3YWxsLmNvbf/wEEA/RaOTC++zBQ1T9Je83P4I\n8QRgExgJ8AibwZiJCzP29ACD3+MNLvkMjiMiaHR0cHM6Ly9idGMuY2FsZW5kYXIu\nY2F0YWxsYXh5LmNvbf/wEH+GADckfDmArDsjmrfhgJII8QRgExgJ8AidcGiCVU30\n3wCD3+MNLvkMji4taHR0cHM6Ly9hbGljZS5idGMuY2FsZW5kYXIub3BlbnRpbWVz\ndGFtcHMub3Jn8BC30hEHvr9ZTJH63C4vgrWiCPEEYBMYCvAIawcdVDpjMMgAg9/j\nDS75DI4sK2h0dHBzOi8vYm9iLmJ0Yy5jYWxlbmRhci5vcGVudGltZXN0YW1wcy5v\ncmc=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 21eba11ff8cea89f661e59fde1a51a795b1b951e\nparent 80e16cadd56ca73b94b01c5cd98a325fe9d89bf3\nauthor Jon Atack <jon@atack.com> 1606578619 +0100\ncommitter Jon Atack <jon@atack.com> 1611864071 +0100\n\npolicy: add CFeeRate::FromSatB/FromBtcKb constructors\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c4b288d5d9ac0035c1f2d935aa7d80d86d76a010",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c4b288d5d9ac0035c1f2d935aa7d80d86d76a010",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c4b288d5d9ac0035c1f2d935aa7d80d86d76a010/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "80e16cadd56ca73b94b01c5cd98a325fe9d89bf3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/80e16cadd56ca73b94b01c5cd98a325fe9d89bf3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/80e16cadd56ca73b94b01c5cd98a325fe9d89bf3"
      }
    ],
    "stats": {
      "total": 34,
      "additions": 33,
      "deletions": 1
    },
    "files": [
      {
        "sha": "aec4e12e32b19a853f61b0214ee2f5a791de159f",
        "filename": "src/policy/feerate.h",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c4b288d5d9ac0035c1f2d935aa7d80d86d76a010/src/policy/feerate.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c4b288d5d9ac0035c1f2d935aa7d80d86d76a010/src/policy/feerate.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/feerate.h?ref=c4b288d5d9ac0035c1f2d935aa7d80d86d76a010",
        "patch": "@@ -39,6 +39,8 @@ class CFeeRate\n         // We've previously had bugs creep in from silent double->int conversion...\n         static_assert(std::is_integral<I>::value, \"CFeeRate should be used without floats\");\n     }\n+    static CFeeRate FromSatB(CAmount fee_rate);\n+    static CFeeRate FromBtcKb(CAmount fee_rate);\n     /** Constructor for a fee rate in satoshis per kvB (sat/kvB). The size in bytes must not exceed (2^63 - 1).\n      *\n      *  Passing an nBytes value of COIN (1e8) returns a fee rate in satoshis per vB (sat/vB),\n@@ -70,4 +72,10 @@ class CFeeRate\n     SERIALIZE_METHODS(CFeeRate, obj) { READWRITE(obj.nSatoshisPerK); }\n };\n \n+/** Construct a CFeeRate from a CAmount in sat/vB */\n+inline CFeeRate CFeeRate::FromSatB(CAmount fee_rate) { return CFeeRate(fee_rate, COIN); }\n+\n+/** Construct a CFeeRate from a CAmount in BTC/kvB */\n+inline CFeeRate CFeeRate::FromBtcKb(CAmount fee_rate) { return CFeeRate(fee_rate, 1000); }\n+\n #endif //  BITCOIN_POLICY_FEERATE_H"
      },
      {
        "sha": "d90550056bfcf13073b7b976eefddb2bee56b1b8",
        "filename": "src/test/amount_tests.cpp",
        "status": "modified",
        "additions": 25,
        "deletions": 1,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c4b288d5d9ac0035c1f2d935aa7d80d86d76a010/src/test/amount_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c4b288d5d9ac0035c1f2d935aa7d80d86d76a010/src/test/amount_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/amount_tests.cpp?ref=c4b288d5d9ac0035c1f2d935aa7d80d86d76a010",
        "patch": "@@ -67,8 +67,12 @@ BOOST_AUTO_TEST_CASE(GetFeeTest)\n     feeRate = CFeeRate(1000);\n     altFeeRate = CFeeRate(feeRate);\n     BOOST_CHECK_EQUAL(feeRate.GetFee(100), altFeeRate.GetFee(100));\n+}\n \n-    // Check full constructor\n+BOOST_AUTO_TEST_CASE(CFeeRateConstructorTest)\n+{\n+    // Test CFeeRate(CAmount fee_rate, size_t bytes) constructor\n+    // full constructor\n     BOOST_CHECK(CFeeRate(CAmount(-1), 0) == CFeeRate(0));\n     BOOST_CHECK(CFeeRate(CAmount(0), 0) == CFeeRate(0));\n     BOOST_CHECK(CFeeRate(CAmount(1), 0) == CFeeRate(0));\n@@ -86,6 +90,26 @@ BOOST_AUTO_TEST_CASE(GetFeeTest)\n     CFeeRate(MAX_MONEY, std::numeric_limits<size_t>::max() >> 1).GetFeePerK();\n }\n \n+BOOST_AUTO_TEST_CASE(CFeeRateNamedConstructorsTest)\n+{\n+    // Test CFeerate(CAmount fee_rate, FeeEstimatemode mode) constructor\n+    // ...with BTC/kvB, returns same values as CFeeRate(CAmount fee_rate)\n+    BOOST_CHECK(CFeeRate::FromBtcKb(CAmount(-1)) == CFeeRate(-1));\n+    BOOST_CHECK(CFeeRate::FromBtcKb(CAmount(0)) == CFeeRate(0));\n+    BOOST_CHECK(CFeeRate::FromBtcKb(CAmount(1)) == CFeeRate(1));\n+    BOOST_CHECK(CFeeRate::FromBtcKb(CAmount(26)) == CFeeRate(26));\n+    BOOST_CHECK(CFeeRate::FromBtcKb(CAmount(123)) == CFeeRate(123));\n+    // ...with sat/vB, returns values that are 1e5 smaller\n+    BOOST_CHECK(CFeeRate::FromSatB(CAmount(-100000)) == CFeeRate(-1));\n+    BOOST_CHECK(CFeeRate::FromSatB(CAmount(-99999)) == CFeeRate(0));\n+    BOOST_CHECK(CFeeRate::FromSatB(CAmount(0)) == CFeeRate(0));\n+    BOOST_CHECK(CFeeRate::FromSatB(CAmount(99999)) == CFeeRate(0));\n+    BOOST_CHECK(CFeeRate::FromSatB(CAmount(100000)) == CFeeRate(1));\n+    BOOST_CHECK(CFeeRate::FromSatB(CAmount(100001)) == CFeeRate(1));\n+    BOOST_CHECK(CFeeRate::FromSatB(CAmount(2690000)) == CFeeRate(26));\n+    BOOST_CHECK(CFeeRate::FromSatB(CAmount(123456789)) == CFeeRate(1234));\n+}\n+\n BOOST_AUTO_TEST_CASE(BinaryOperatorTest)\n {\n     CFeeRate a, b;"
      }
    ]
  },
  {
    "sha": "c72083c2d56237f8fbd3a82e3ff395f0cdb8fd57",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjNzIwODNjMmQ1NjIzN2Y4ZmJkM2E4MmUzZmYzOTVmMGNkYjhmZDU3",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-11-30T23:03:28Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-01-28T20:01:14Z"
      },
      "message": "wallet: update rpcwallet to CFeeRate named constructors",
      "tree": {
        "sha": "6b17eaf52dbf164bc9c8d5b10bc45cdebaff9ddf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6b17eaf52dbf164bc9c8d5b10bc45cdebaff9ddf"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c72083c2d56237f8fbd3a82e3ff395f0cdb8fd57",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAmATGAoACgkQT1chs9Dj\nkh3hVg//axQfE0I7F+H76RpFUNJ8ZySKQ2qgdwFj8WoYIhoHOmdVM+j2kA3fL/fo\nOJAVfnLPpRjwSQKQaTpfYem+JCURaowFSHnUEau6kjHhfKeHam5AreOzHCR0VffX\nXHIwFORQex1toggP6X5Yjhp4o2vND8ZgrSzjPjbujc/Z0W7W99eeQRk4jLbLvEXm\nCyQl50twOSrArJEagsgrcXro1qX0IkDCl5H3cDHlcQ5U2t9Rh3XArhioJ3+MI++c\nc0yORwZJlBpndsHl/q1UkYWtCnOU03i1faeRi1aCdLSJduQUU25cp3NzZLIUdrml\nqHuxqUIGpKdbLGy8I4erparnDMls7xVbtzWSuuGkwT+baweJ1gUjEBm7G1wOD+wj\nCSr1mJR76dYhCY+GyrC9hthwy2vZp4TO0Um49oS8fWqHxXnwXbMr16Bo5Nft4iON\nfvfXnN2wIL7qYjb2Wswt+Rw1HxbnVJruNG30os9kFypXoRRHxVB9K6iJnaN0c15b\nbPX5Ll5mQGPPnRgfii9vY9IDFuW/zZhnqv7poi8K/ZLARLq1qVXR2WUC1rPhhIIw\n8BUSWVqnU/NtXwlxGRgPuXagKXOSgQ+6ifDhXZYuFXJ6Sy/oJsKc4eKGXCJCRy/F\nDjXr6Gw7H8MWWqm4fLCNUkJoPISgdOpM8itQFNVqrdcczLG3FfA=\n=zFsq\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwICxvA4hCmf51Lj6CUz4dBsi4sSu3teZTp7cCtiJegvg1CP/wEFHb3Ujjtd4j\nHLfhCa1tXjgI8QRgExgM8AjfDV7SrI6NsACD3+MNLvkMji4taHR0cHM6Ly9hbGlj\nZS5idGMuY2FsZW5kYXIub3BlbnRpbWVzdGFtcHMub3Jn//AQfXPirRxBFhy0RkCN\n+mlA0gjxBGATGAzwCEye914d8WOMAIPf4w0u+QyOIyJodHRwczovL2J0Yy5jYWxl\nbmRhci5jYXRhbGxheHkuY29t//AQpBP5LeBCurDX4jB22sdcSQjxBGATGAzwCFc1\n6gcL52X2AIPf4w0u+QyOKShodHRwczovL2Zpbm5leS5jYWxlbmRhci5ldGVybml0\neXdhbGwuY29t8BD0mJ7NBnMFYXxRYfzVSyi2CPEEYBMYDPAIvNFH/d6OgH4Ag9/j\nDS75DI4sK2h0dHBzOi8vYm9iLmJ0Yy5jYWxlbmRhci5vcGVudGltZXN0YW1wcy5v\ncmc=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 6b17eaf52dbf164bc9c8d5b10bc45cdebaff9ddf\nparent c4b288d5d9ac0035c1f2d935aa7d80d86d76a010\nauthor Jon Atack <jon@atack.com> 1606777408 +0100\ncommitter Jon Atack <jon@atack.com> 1611864074 +0100\n\nwallet: update rpcwallet to CFeeRate named constructors\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c72083c2d56237f8fbd3a82e3ff395f0cdb8fd57",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c72083c2d56237f8fbd3a82e3ff395f0cdb8fd57",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c72083c2d56237f8fbd3a82e3ff395f0cdb8fd57/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c4b288d5d9ac0035c1f2d935aa7d80d86d76a010",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c4b288d5d9ac0035c1f2d935aa7d80d86d76a010",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c4b288d5d9ac0035c1f2d935aa7d80d86d76a010"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "08bc502e83d856940431bb27353ad4cf60585dee",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c72083c2d56237f8fbd3a82e3ff395f0cdb8fd57/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c72083c2d56237f8fbd3a82e3ff395f0cdb8fd57/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=c72083c2d56237f8fbd3a82e3ff395f0cdb8fd57",
        "patch": "@@ -216,7 +216,7 @@ static void SetFeeEstimateMode(const CWallet& wallet, CCoinControl& cc, const Un\n         if (!estimate_mode.isNull() && estimate_mode.get_str() != \"unset\") {\n             throw JSONRPCError(RPC_INVALID_PARAMETER, \"Cannot specify both estimate_mode and fee_rate\");\n         }\n-        cc.m_feerate = CFeeRate(AmountFromValue(fee_rate), COIN);\n+        cc.m_feerate = CFeeRate::FromSatB(AmountFromValue(fee_rate));\n         if (override_min_fee) cc.fOverrideFeeRate = true;\n         // Default RBF to true for explicit fee_rate, if unset.\n         if (cc.m_signal_bip125_rbf == nullopt) cc.m_signal_bip125_rbf = true;\n@@ -2331,8 +2331,8 @@ static RPCHelpMan settxfee()\n     LOCK(pwallet->cs_wallet);\n \n     CAmount nAmount = AmountFromValue(request.params[0]);\n-    CFeeRate tx_fee_rate(nAmount, 1000);\n-    CFeeRate max_tx_fee_rate(pwallet->m_default_max_tx_fee, 1000);\n+    CFeeRate tx_fee_rate{CFeeRate::FromBtcKb(nAmount)};\n+    CFeeRate max_tx_fee_rate{CFeeRate::FromBtcKb(pwallet->m_default_max_tx_fee)};\n     if (tx_fee_rate == CFeeRate(0)) {\n         // automatic selection\n     } else if (tx_fee_rate < pwallet->chain().relayMinFee()) {\n@@ -3157,7 +3157,7 @@ void FundTransaction(CWallet* const pwallet, CMutableTransaction& tx, CAmount& f\n             if (options.exists(\"estimate_mode\")) {\n                 throw JSONRPCError(RPC_INVALID_PARAMETER, \"Cannot specify both estimate_mode and feeRate\");\n             }\n-            coinControl.m_feerate = CFeeRate(AmountFromValue(options[\"feeRate\"]));\n+            coinControl.m_feerate = CFeeRate::FromBtcKb(AmountFromValue(options[\"feeRate\"]));\n             coinControl.fOverrideFeeRate = true;\n         }\n "
      }
    ]
  },
  {
    "sha": "5ed3ca1fafcfe93c35737c26f6e826ed451081fa",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1ZWQzY2ExZmFmY2ZlOTNjMzU3MzdjMjZmNmU4MjZlZDQ1MTA4MWZh",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-11-15T15:15:11Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-01-28T20:01:16Z"
      },
      "message": "policy: allow CFeeRate::ToString to not append fee rate units",
      "tree": {
        "sha": "6d6a477bebff4750f033bc7a943f9a0186bb6595",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6d6a477bebff4750f033bc7a943f9a0186bb6595"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5ed3ca1fafcfe93c35737c26f6e826ed451081fa",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAmATGA0ACgkQT1chs9Dj\nkh2FxA/+K8wGgEETPYFAzSG5Idk8cFlx2+AxT7+A0T8Fnz8wPA1tbTl7zkQqRXa/\nRAAVroxg8ObgsUQ02Qsu9x7QbqC8hMsbyOsOZaftZJ3jWYUby/4F1g/2HOqISBor\n114LgL5J5h13Zq61fLunoRhndurKXg6DiimSy+t8f7DjxhtHiINTKrx+L7Rm568d\nCx4X1RXfyeOB6o0BCXcPE3HDMvjjbu/4px5hqxtbEzqVXRfRppo6qnaRHiQiqFS+\nni3N3a8nOGUTfx7ttN/B9OpojGskvOq1+axcmmXCNIU8WywINUH275NzLc52/zhn\nzoMwnmU9eJKrBum1d/olra5F9ROp+jBIj1BZlbiSDAqpYZFLhZwbDPaJj3/s2se6\nRlPIYriZWHSedD/j64ehGt0qiIxiDnhyrGtwXNZj+G3ydxGl4MpiAUnRB8yl213r\nalqjZkiegDoROpRU1o7YZOtCZ54RykZu/wqq6CJoEMYOM3Ir9ccnr4XEijCYF0QG\nzIaT06jufBkvUPWD/EN1fopdJjDvkeIUCCZgliews+tm+0te2HVJ6WFFvq/yy2e0\nu4RG71j5vn0YdcpKLX8pH4xIRWk40ULitsdyY/LiEKezQW8jpVbLtRlZMGZlSNVS\n1+eRwhHm254sSJfLDQ613NXfEE+7vBOoeKpRHe6onhH72HLrp20=\n=tmNT\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIFGqTRka++gZTooY483SzVhc2Qq7HvqJsJwxopMT/2XPCP/wEAH32o8EdH+C\nqgK+tiO/JA4I8QRgExgO8Ag0EEpTmO7t9wCD3+MNLvkMjiMiaHR0cHM6Ly9idGMu\nY2FsZW5kYXIuY2F0YWxsYXh5LmNvbf/wEF9HpcWnm7PtpZ6Mwn0jJdkI8QRgExgO\n8Ag9OFoNrbJ4pgCD3+MNLvkMjikoaHR0cHM6Ly9maW5uZXkuY2FsZW5kYXIuZXRl\ncm5pdHl3YWxsLmNvbf/wELGgjxNzs0vOZqLDhpIs3tsI8QRgExgP8AjZTcXuYmmw\nmgCD3+MNLvkMjiwraHR0cHM6Ly9ib2IuYnRjLmNhbGVuZGFyLm9wZW50aW1lc3Rh\nbXBzLm9yZ/AQzJpOHBotUjKemtnFKHjhAgjxBGATGA7wCHUMjtgzH6yoAIPf4w0u\n+QyOLi1odHRwczovL2FsaWNlLmJ0Yy5jYWxlbmRhci5vcGVudGltZXN0YW1wcy5v\ncmc=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 6d6a477bebff4750f033bc7a943f9a0186bb6595\nparent c72083c2d56237f8fbd3a82e3ff395f0cdb8fd57\nauthor Jon Atack <jon@atack.com> 1605453311 +0100\ncommitter Jon Atack <jon@atack.com> 1611864076 +0100\n\npolicy: allow CFeeRate::ToString to not append fee rate units\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5ed3ca1fafcfe93c35737c26f6e826ed451081fa",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5ed3ca1fafcfe93c35737c26f6e826ed451081fa",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5ed3ca1fafcfe93c35737c26f6e826ed451081fa/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c72083c2d56237f8fbd3a82e3ff395f0cdb8fd57",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c72083c2d56237f8fbd3a82e3ff395f0cdb8fd57",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c72083c2d56237f8fbd3a82e3ff395f0cdb8fd57"
      }
    ],
    "stats": {
      "total": 46,
      "additions": 36,
      "deletions": 10
    },
    "files": [
      {
        "sha": "d7df1d79d69967a7a4d8ab5616a396620987acb7",
        "filename": "src/policy/feerate.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 4,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5ed3ca1fafcfe93c35737c26f6e826ed451081fa/src/policy/feerate.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5ed3ca1fafcfe93c35737c26f6e826ed451081fa/src/policy/feerate.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/feerate.cpp?ref=5ed3ca1fafcfe93c35737c26f6e826ed451081fa",
        "patch": "@@ -35,10 +35,21 @@ CAmount CFeeRate::GetFee(size_t nBytes_) const\n     return nFee;\n }\n \n-std::string CFeeRate::ToString(const FeeEstimateMode& fee_estimate_mode) const\n+std::string CFeeRate::ToString(FeeEstimateMode mode, bool with_units) const\n {\n-    switch (fee_estimate_mode) {\n-    case FeeEstimateMode::SAT_VB: return strprintf(\"%d.%03d %s/vB\", nSatoshisPerK / 1000, nSatoshisPerK % 1000, CURRENCY_ATOM);\n-    default:                      return strprintf(\"%d.%08d %s/kvB\", nSatoshisPerK / COIN, nSatoshisPerK % COIN, CURRENCY_UNIT);\n+    if (with_units) {\n+        switch (mode) {\n+        case FeeEstimateMode::SAT_VB:\n+            return strprintf(\"%d.%03d %s/vB\", nSatoshisPerK / 1000, nSatoshisPerK % 1000, CURRENCY_ATOM);\n+        default:\n+            return strprintf(\"%d.%08d %s/kvB\", nSatoshisPerK / COIN, nSatoshisPerK % COIN, CURRENCY_UNIT);\n+        }\n+    } else {\n+        switch (mode) {\n+        case FeeEstimateMode::SAT_VB:\n+            return strprintf(\"%d.%03d\", nSatoshisPerK / 1000, nSatoshisPerK % 1000);\n+        default:\n+            return strprintf(\"%d.%08d\", nSatoshisPerK / COIN, nSatoshisPerK % COIN);\n+        }\n     }\n }"
      },
      {
        "sha": "5d13e8804d459741a5c240e05b69a671458e9444",
        "filename": "src/policy/feerate.h",
        "status": "modified",
        "additions": 7,
        "deletions": 1,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5ed3ca1fafcfe93c35737c26f6e826ed451081fa/src/policy/feerate.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5ed3ca1fafcfe93c35737c26f6e826ed451081fa/src/policy/feerate.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/feerate.h?ref=5ed3ca1fafcfe93c35737c26f6e826ed451081fa",
        "patch": "@@ -67,7 +67,13 @@ class CFeeRate\n     friend bool operator>=(const CFeeRate& a, const CFeeRate& b) { return a.nSatoshisPerK >= b.nSatoshisPerK; }\n     friend bool operator!=(const CFeeRate& a, const CFeeRate& b) { return a.nSatoshisPerK != b.nSatoshisPerK; }\n     CFeeRate& operator+=(const CFeeRate& a) { nSatoshisPerK += a.nSatoshisPerK; return *this; }\n-    std::string ToString(const FeeEstimateMode& fee_estimate_mode = FeeEstimateMode::BTC_KVB) const;\n+    /**\n+     * Return the fee rate in BTC/kvB or sat/vB, with or without units, as a string.\n+     *\n+     *  @param[in] mode        FeeEstimateMode::SAT_VB or FeeEstimateMode::BTC_KVB\n+     *  @param[in] with_units  bool whether to append the fee rate units (\"sat/vB\" or \"BTC/kvB\")\n+     */\n+    std::string ToString(FeeEstimateMode mode = FeeEstimateMode::BTC_KVB, bool with_units = true) const;\n \n     SERIALIZE_METHODS(CFeeRate, obj) { READWRITE(obj.nSatoshisPerK); }\n };"
      },
      {
        "sha": "0666cbfa6de7f7b71db6c83c3bd398d32c49aa87",
        "filename": "src/test/amount_tests.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 5,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5ed3ca1fafcfe93c35737c26f6e826ed451081fa/src/test/amount_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5ed3ca1fafcfe93c35737c26f6e826ed451081fa/src/test/amount_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/amount_tests.cpp?ref=5ed3ca1fafcfe93c35737c26f6e826ed451081fa",
        "patch": "@@ -129,11 +129,20 @@ BOOST_AUTO_TEST_CASE(BinaryOperatorTest)\n \n BOOST_AUTO_TEST_CASE(ToStringTest)\n {\n-    CFeeRate feeRate;\n-    feeRate = CFeeRate(1);\n-    BOOST_CHECK_EQUAL(feeRate.ToString(), \"0.00000001 BTC/kvB\");\n-    BOOST_CHECK_EQUAL(feeRate.ToString(FeeEstimateMode::BTC_KVB), \"0.00000001 BTC/kvB\");\n-    BOOST_CHECK_EQUAL(feeRate.ToString(FeeEstimateMode::SAT_VB), \"0.001 sat/vB\");\n+    CFeeRate fee_rate{CFeeRate(1)};\n+    BOOST_CHECK_EQUAL(fee_rate.ToString(), \"0.00000001 BTC/kvB\");\n+    BOOST_CHECK_EQUAL(fee_rate.ToString(FeeEstimateMode::BTC_KVB), \"0.00000001 BTC/kvB\");\n+    BOOST_CHECK_EQUAL(fee_rate.ToString(FeeEstimateMode::SAT_VB), \"0.001 sat/vB\");\n+\n+    BOOST_CHECK_EQUAL(fee_rate.ToString(FeeEstimateMode::BTC_KVB, /* with_units */ true), \"0.00000001 BTC/kvB\");\n+    BOOST_CHECK_EQUAL(fee_rate.ToString(FeeEstimateMode::SAT_VB, /* with_units */ true), \"0.001 sat/vB\");\n+\n+    BOOST_CHECK_EQUAL(CFeeRate(1).ToString(FeeEstimateMode::SAT_VB, /* with_units */ false), \"0.001\");\n+    BOOST_CHECK_EQUAL(CFeeRate(70).ToString(FeeEstimateMode::SAT_VB, /* with_units */ false), \"0.070\");\n+    BOOST_CHECK_EQUAL(CFeeRate(3141).ToString(FeeEstimateMode::SAT_VB, /* with_units */ false), \"3.141\");\n+    BOOST_CHECK_EQUAL(CFeeRate(10002).ToString(FeeEstimateMode::SAT_VB, /* with_units */ false), \"10.002\");\n+    BOOST_CHECK_EQUAL(CFeeRate(3141).ToString(FeeEstimateMode::BTC_KVB, /* with_units */ false), \"0.00003141\");\n+    BOOST_CHECK_EQUAL(CFeeRate(10002).ToString(FeeEstimateMode::BTC_KVB, /* with_units */ false), \"0.00010002\");\n }\n \n BOOST_AUTO_TEST_SUITE_END()"
      }
    ]
  },
  {
    "sha": "aee3571392d095412ac6bda132ec6b1db6c42774",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphZWUzNTcxMzkyZDA5NTQxMmFjNmJkYTEzMmVjNmIxZGI2YzQyNzc0",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2020-11-25T01:09:17Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-01-28T20:01:19Z"
      },
      "message": "core_io: Add ValueFromFeeRate helper",
      "tree": {
        "sha": "47bc63a7d0a33f1d03e1810411cfe7fe6b1c239c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/47bc63a7d0a33f1d03e1810411cfe7fe6b1c239c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/aee3571392d095412ac6bda132ec6b1db6c42774",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAmATGA8ACgkQT1chs9Dj\nkh0wKQ//SNj5UFpUF9e8Drh1PxTSUJ1KE/xa7+3CtUVe0BqWzGtQBDtTbwNxdLk2\nIriUPiFedKMwyWMIantEvqKgTVSjQYSVfYZ542gIfW+9g7IGnj5LDY4cYDlf58hl\nB/V9iU0J9rwrc9D6f8gp2iFX9MJ9yXmugUdNQcyke2q1xSmvE3+P2d6f1poaPmTd\nSebcW13e4cgIEkuN8mrdNRDpsm985kNQMQUwTyJmDXk7sZc4M56Yzqr7gUJA8rkV\nnsb1YCh+QNBdcO4XxnEmeUj+IPeLcv0m6XBYWrCMJEzEDknOPPK/f5O0rLKFXOpM\nA1ePswfsng+i1rQYpRoAUazUIlJ0khxp70cQcTuEsEZZ65xqqb9rB+BtK2wDe5pa\ndrkYsvgl8O22ee9xBIAXlKDlhWNGNayeQ8SEKUISvlfmM05kH/S1b/cLJKfVQ9+I\nPPWfRfmwkeWvk2hU/Lt2NBOaqjFgSOuu3BbUZdTLFs/EXTnM1KQPpjCnYutk8KRP\nsWpIsqSFVjtJt8Puv/cmrMKeiJUCcN0G8TM92RCerlk8clT7jDC1B4euYqC356Tt\nkPOjOHCwxx05Lqt18QMiHhKLwbLPRo0I+53ZzoJonAVm8F6yKl4DjXRZ6JKCyyVc\nPfAvT8CTQUOc+qQ9U4Slr0OH39jMJ4nfMyG0rAk5NYUccLtm9Ww=\n=7a1M\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIBYMzM8gCnEB5lgrL/ZGUuF1YqhKP14OzpaFYkAbqtFACP/wEJQVVC2qEZTt\nTQN6gN8GvNUI8QRgExgR8Ai1Vskc5YZnbACD3+MNLvkMjiMiaHR0cHM6Ly9idGMu\nY2FsZW5kYXIuY2F0YWxsYXh5LmNvbf/wEKqCnMxPtyDc/L/x8o2vkvYI8QRgExgR\n8AgOmqDXPOOLeACD3+MNLvkMji4taHR0cHM6Ly9hbGljZS5idGMuY2FsZW5kYXIu\nb3BlbnRpbWVzdGFtcHMub3Jn//AQxphSPWJH9OPLKAJEr7x+mQjxBGATGBHwCLdC\n+1haY7xnAIPf4w0u+QyOLCtodHRwczovL2JvYi5idGMuY2FsZW5kYXIub3BlbnRp\nbWVzdGFtcHMub3Jn8BDVMAFxh3KWdnTeOxM7hKPGCPEEYBMYEfAIA051/1A6Z38A\ng9/jDS75DI4pKGh0dHBzOi8vZmlubmV5LmNhbGVuZGFyLmV0ZXJuaXR5d2FsbC5j\nb20=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 47bc63a7d0a33f1d03e1810411cfe7fe6b1c239c\nparent 5ed3ca1fafcfe93c35737c26f6e826ed451081fa\nauthor Luke Dashjr <luke-jr+git@utopios.org> 1606266557 +0000\ncommitter Jon Atack <jon@atack.com> 1611864079 +0100\n\ncore_io: Add ValueFromFeeRate helper\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/aee3571392d095412ac6bda132ec6b1db6c42774",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/aee3571392d095412ac6bda132ec6b1db6c42774",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/aee3571392d095412ac6bda132ec6b1db6c42774/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5ed3ca1fafcfe93c35737c26f6e826ed451081fa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5ed3ca1fafcfe93c35737c26f6e826ed451081fa",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5ed3ca1fafcfe93c35737c26f6e826ed451081fa"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 9,
      "deletions": 0
    },
    "files": [
      {
        "sha": "9c0c356e662039c5df165bb41b52486f1d63f506",
        "filename": "src/core_io.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/aee3571392d095412ac6bda132ec6b1db6c42774/src/core_io.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/aee3571392d095412ac6bda132ec6b1db6c42774/src/core_io.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core_io.h?ref=aee3571392d095412ac6bda132ec6b1db6c42774",
        "patch": "@@ -7,12 +7,14 @@\n \n #include <amount.h>\n #include <attributes.h>\n+#include <policy/feerate.h>\n \n #include <string>\n #include <vector>\n \n class CBlock;\n class CBlockHeader;\n+class CFeeRate;\n class CScript;\n class CTransaction;\n struct CMutableTransaction;\n@@ -41,6 +43,7 @@ int ParseSighashString(const UniValue& sighash);\n \n // core_write.cpp\n UniValue ValueFromAmount(const CAmount& amount);\n+UniValue ValueFromFeeRate(const CFeeRate& fee_rate, FeeEstimateMode mode = FeeEstimateMode::SAT_VB);\n std::string FormatScript(const CScript& script);\n std::string EncodeHexTx(const CTransaction& tx, const int serializeFlags = 0);\n std::string SighashToStr(unsigned char sighash_type);"
      },
      {
        "sha": "7b0f1a4684cb9eb9d20668b57f59d004e496bc59",
        "filename": "src/core_write.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/aee3571392d095412ac6bda132ec6b1db6c42774/src/core_write.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/aee3571392d095412ac6bda132ec6b1db6c42774/src/core_write.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core_write.cpp?ref=aee3571392d095412ac6bda132ec6b1db6c42774",
        "patch": "@@ -7,6 +7,7 @@\n #include <consensus/consensus.h>\n #include <consensus/validation.h>\n #include <key_io.h>\n+#include <policy/feerate.h>\n #include <script/script.h>\n #include <script/standard.h>\n #include <serialize.h>\n@@ -27,6 +28,11 @@ UniValue ValueFromAmount(const CAmount& amount)\n             strprintf(\"%s%d.%08d\", sign ? \"-\" : \"\", quotient, remainder));\n }\n \n+UniValue ValueFromFeeRate(const CFeeRate& fee_rate, FeeEstimateMode mode)\n+{\n+    return UniValue(UniValue::VNUM, fee_rate.ToString(mode, /* with_units */ false));\n+}\n+\n std::string FormatScript(const CScript& script)\n {\n     std::string ret;"
      }
    ]
  },
  {
    "sha": "0479268c0830caea8cb6ff344531d85417b99d02",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowNDc5MjY4YzA4MzBjYWVhOGNiNmZmMzQ0NTMxZDg1NDE3Yjk5ZDAy",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-11-30T10:18:00Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-01-28T20:01:21Z"
      },
      "message": "test: add ValueFromFeeRate/CFeeRate unit tests",
      "tree": {
        "sha": "69813297fd6841f3cd4a276461a2aa83b44b84c4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/69813297fd6841f3cd4a276461a2aa83b44b84c4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0479268c0830caea8cb6ff344531d85417b99d02",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAmATGBIACgkQT1chs9Dj\nkh03eA//UmGD94GIW3DWpb7D4tOeKnu9ui/02pQriRbWKoHpidl3LX0joTXmWIyx\n2g4LsLcBRxR9W5OqqipPktyUqS4hUWlRX6tsVgx/3XG7fpLbJfS/81Bbln+n6zUa\nikMo4bDHruVw5V/Fc4Hs9Ydfabgb+2zVJQChTHBpDSsmWbYotUS19wYqsDVc3nvq\nASAZ1KXfZi/TrU+vEBZmOWfpK+iRfNOZMpd8iTwdqMiD9rIZxcTuxCxfaC/dBfOl\nH85YqlCVJaXeWqhYdWO4ylK1mkP+D1fDQ2/h3dyC2A901SPm7NGJeH26EpqXMdaz\nzmlo8rHkpGMTFPdgsZpuebmi78jn1EJt3WsOT9tFccjZ9Ydq93BSjDeglr+5fa++\nqJuGZeBYv0S3td83HvzftoZNogjWTA/EdZj5dfp2fVhTOWtXfhvzKyeC1A8OYfBU\nXeoKm54m4hDaA00vrYzAIFSSFYayAjnE2xMuy0PNA2q4uWkyW0jOboSpteNNsVQg\nsj0pppBwYv5hzTHO7s2ucW3uz179f+o109+1tvbVbDQoj6vJ0U8SsQzy5YY+Xnd4\nQxHyVOso/Tpg9Ak5cH0/BuiYn4zwrdPX2OxAKUltfac3tCNGSB2Xz/fNkR8MNOOp\nQOmE8/G+YQhGq/lZCMPkgqjnuH2HwVAizQv/u1Hcgo+WLjiAjVY=\n=aIng\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIFBjYaO1SaQScMiCI6qYs9qY+3y0iBfekXZyKRFmzDUqCP/wEAsHjjbafhdd\nSGJamPI7tnAI8CDEu3w7F7aPvzmkk5PdwSwCbzRUT6r+PYkg7VdaPwOgLwjwIOsT\nbNy87qbEOWeGByCN8vOYZB9U/+64BDzSLn3e1U/lCPEEYBMYFPAIYqHda+u6T0IA\ng9/jDS75DI4sK2h0dHBzOi8vYm9iLmJ0Yy5jYWxlbmRhci5vcGVudGltZXN0YW1w\ncy5vcmf/8BAs+vT0dYtKy9ahTeX/gHNJCPEEYBMYE/AItaP2fmfNEm4Ag9/jDS75\nDI4uLWh0dHBzOi8vYWxpY2UuYnRjLmNhbGVuZGFyLm9wZW50aW1lc3RhbXBzLm9y\nZ//wELYQvKhGNSd/eNU3hlnKFhoI8QRgExgT8AjEYTvAg3+VvACD3+MNLvkMjiko\naHR0cHM6Ly9maW5uZXkuY2FsZW5kYXIuZXRlcm5pdHl3YWxsLmNvbfAQxpEEK9Gh\nxw6yYrMZuhiEXAjxBGATGBPwCIMxJKQFiam1AIPf4w0u+QyOIyJodHRwczovL2J0\nYy5jYWxlbmRhci5jYXRhbGxheHkuY29t\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 69813297fd6841f3cd4a276461a2aa83b44b84c4\nparent aee3571392d095412ac6bda132ec6b1db6c42774\nauthor Jon Atack <jon@atack.com> 1606731480 +0100\ncommitter Jon Atack <jon@atack.com> 1611864081 +0100\n\ntest: add ValueFromFeeRate/CFeeRate unit tests\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0479268c0830caea8cb6ff344531d85417b99d02",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0479268c0830caea8cb6ff344531d85417b99d02",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0479268c0830caea8cb6ff344531d85417b99d02/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "aee3571392d095412ac6bda132ec6b1db6c42774",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/aee3571392d095412ac6bda132ec6b1db6c42774",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/aee3571392d095412ac6bda132ec6b1db6c42774"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 23,
      "deletions": 0
    },
    "files": [
      {
        "sha": "b7c6ca8f1fc19fe476dbc05a703df8448e4c0299",
        "filename": "src/test/rpc_tests.cpp",
        "status": "modified",
        "additions": 23,
        "deletions": 0,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0479268c0830caea8cb6ff344531d85417b99d02/src/test/rpc_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0479268c0830caea8cb6ff344531d85417b99d02/src/test/rpc_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/rpc_tests.cpp?ref=0479268c0830caea8cb6ff344531d85417b99d02",
        "patch": "@@ -216,6 +216,29 @@ BOOST_AUTO_TEST_CASE(rpc_parse_monetary_values)\n     BOOST_CHECK_THROW(AmountFromValue(ValueFromString(\"93e+9\")), UniValue); //overflow error\n }\n \n+BOOST_AUTO_TEST_CASE(rpc_parse_fee_rate_values)\n+{\n+    // Test ValueFromFeeRate() and CFeeRate()\n+    // ...using default CFeeRate constructor\n+    BOOST_CHECK_EQUAL(ValueFromFeeRate(CFeeRate(AmountFromValue(0.00001234))).get_real(), 1.234);\n+    BOOST_CHECK_EQUAL(ValueFromFeeRate(CFeeRate(AmountFromValue(0.1234))).get_real(), 12340.000);\n+    BOOST_CHECK_EQUAL(ValueFromFeeRate(CFeeRate(AmountFromValue(1234))).get_real(), 123400000.000);\n+    // ...using CFeeRate constructor with bytes 1000\n+    BOOST_CHECK_EQUAL(ValueFromFeeRate(CFeeRate(AmountFromValue(0.00001234), 1000)).get_real(), 1.234);\n+    // ...using CFeeRate constructor with FeeEstimateMode::SAT_VB\n+    BOOST_CHECK_EQUAL(ValueFromFeeRate(CFeeRate::FromSatB(AmountFromValue(0.001))).get_real(), 0.001);\n+    BOOST_CHECK_EQUAL(ValueFromFeeRate(CFeeRate::FromSatB(AmountFromValue(0.999))).get_real(), 0.999);\n+    BOOST_CHECK_EQUAL(ValueFromFeeRate(CFeeRate::FromSatB(AmountFromValue(1))).get_real(), 1);\n+    BOOST_CHECK_EQUAL(ValueFromFeeRate(CFeeRate::FromSatB(AmountFromValue(1.02))).get_real(), 1.02);\n+    BOOST_CHECK_EQUAL(ValueFromFeeRate(CFeeRate::FromSatB(AmountFromValue(1.234))).get_real(), 1.234);\n+    // ...using CFeeRate constructor with FeeEstimateMode::BTC_KVB\n+    BOOST_CHECK_EQUAL(ValueFromFeeRate(CFeeRate::FromBtcKb(AmountFromValue(0.00000001))).get_real(), 0.001);\n+    BOOST_CHECK_EQUAL(ValueFromFeeRate(CFeeRate::FromBtcKb(AmountFromValue(0.0000099))).get_real(), 0.99);\n+    BOOST_CHECK_EQUAL(ValueFromFeeRate(CFeeRate::FromBtcKb(AmountFromValue(0.00001))).get_real(), 1);\n+    BOOST_CHECK_EQUAL(ValueFromFeeRate(CFeeRate::FromBtcKb(AmountFromValue(0.00001234))).get_real(), 1.234);\n+    BOOST_CHECK_EQUAL(ValueFromFeeRate(CFeeRate::FromBtcKb(AmountFromValue(0.1234))).get_real(), 12340);\n+}\n+\n BOOST_AUTO_TEST_CASE(json_parse_errors)\n {\n     // Valid"
      }
    ]
  },
  {
    "sha": "8e863e3d3ce457c9ca26a12e8fd6beac2f50aa7d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4ZTg2M2UzZDNjZTQ1N2M5Y2EyNmExMmU4ZmQ2YmVhYzJmNTBhYTdk",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-11-14T14:38:40Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-01-28T20:21:21Z"
      },
      "message": "wallet: introduce setfeerate, an improved settxfee in sat/vB",
      "tree": {
        "sha": "3fe3e4a74687466134da372078b3a09041f92c42",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3fe3e4a74687466134da372078b3a09041f92c42"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8e863e3d3ce457c9ca26a12e8fd6beac2f50aa7d",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAmATHNcACgkQT1chs9Dj\nkh0/ERAAhSVrCWwO4aLFA/XpnmkFyE3e3+6vjKuAIgOfg3tn2xAbEe8jhDJH7pH7\ntDWF5RzgnqY6VOfPZ+jdON5XKcJJahH72QN6kE0lIO5GJ9ckgWKwBLhT8I4Y+q0h\nZ/HYMyvw+87tbJGTBSyt0FdAoOlbk/cBLFCB6qfSn8GhzIhhspVYp/+lex+tohOV\ns7k5usRoK3AeUdBeRdT/CA7BPYXJadR1qGBCV2Mend2A7rd4q8249IfODGzxubCM\ntxYUB5vEOw/hrXlRAp5eS06JeWC/7F8IS82feGlTHnLB6XIZPajEcJgONl29bs5I\nVwBH0T0isFRc8SIVGoIi22LIW+au6XS4/S016enR42tXNuPDZ9yOC7jtwBOq27V1\n+QU0jrckXc6A6J8Bj4mKXET9IagwWAECqVbVPnQVTTd57oQ3qV8HDlBOcapB0oKB\n2AL1ciu/dCBxIuNi1Ku36i6xK05CoaYCf1Z2bqk83kAFXAi3Ov+ayXfYmzcy5zwv\nlXwffiQLr0ExOE9lH8FVm/MoOFPz2C94TFDvdQ2iqCwDJ4pQR9aN5o2LqIVSgbaB\nM77ZB55wqa+M2TF23rxaKnRIr1S60UbhpJPBzydWJidCpkKHsqupA0VB4AYe05JN\nXtghEuHyYm7ER4BvlpuOTKItQ3MSD7XQQLqbxPQYvPhPKNlLFU8=\n=J0ZC\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIHGMBJwCggkeC1F2GUGQ3SU3ilGxt/9I15a/rp0aXd7JCP/wEDqKPuiHlx5o\nrmSub+iUPUoI8QRgExzZ8AiyYjDhacTFIgCD3+MNLvkMjiwraHR0cHM6Ly9ib2Iu\nYnRjLmNhbGVuZGFyLm9wZW50aW1lc3RhbXBzLm9yZ//wEJHzIW7mzKKHBDqWP/KN\nq5EI8QRgExzY8AiTc4Z/hjfwTACD3+MNLvkMji4taHR0cHM6Ly9hbGljZS5idGMu\nY2FsZW5kYXIub3BlbnRpbWVzdGFtcHMub3Jn//AQnKSZllW0jOYdD/DRdHn1Xgjx\nBGATHNnwCOS3RwetL4c4AIPf4w0u+QyOIyJodHRwczovL2J0Yy5jYWxlbmRhci5j\nYXRhbGxheHkuY29t8BCgmr/9J9tqqN22uXcQifCoCPEEYBMc2fAIl07VOkUDsAIA\ng9/jDS75DI4pKGh0dHBzOi8vZmlubmV5LmNhbGVuZGFyLmV0ZXJuaXR5d2FsbC5j\nb20=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 3fe3e4a74687466134da372078b3a09041f92c42\nparent 0479268c0830caea8cb6ff344531d85417b99d02\nauthor Jon Atack <jon@atack.com> 1605364720 +0100\ncommitter Jon Atack <jon@atack.com> 1611865281 +0100\n\nwallet: introduce setfeerate, an improved settxfee in sat/vB\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8e863e3d3ce457c9ca26a12e8fd6beac2f50aa7d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8e863e3d3ce457c9ca26a12e8fd6beac2f50aa7d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8e863e3d3ce457c9ca26a12e8fd6beac2f50aa7d/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0479268c0830caea8cb6ff344531d85417b99d02",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0479268c0830caea8cb6ff344531d85417b99d02",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0479268c0830caea8cb6ff344531d85417b99d02"
      }
    ],
    "stats": {
      "total": 90,
      "additions": 90,
      "deletions": 0
    },
    "files": [
      {
        "sha": "65950a9db4d200d413388b53c6fce9577166f3a0",
        "filename": "doc/release-notes-20391.md",
        "status": "added",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8e863e3d3ce457c9ca26a12e8fd6beac2f50aa7d/doc/release-notes-20391.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8e863e3d3ce457c9ca26a12e8fd6beac2f50aa7d/doc/release-notes-20391.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes-20391.md?ref=8e863e3d3ce457c9ca26a12e8fd6beac2f50aa7d",
        "patch": "@@ -0,0 +1,9 @@\n+New RPCs\n+------------\n+\n+- A new `setfeerate` RPC is added to set the transaction fee for a wallet in\n+  sat/vB, instead of in BTC/kvB like `settxfee`. This RPC is intended to replace\n+  `settxfee`, which becomes a hidden RPC and is marked as deprecated. This\n+  change is part of a larger migration from BTC/kvB to sat/vB units for fee\n+  rates. (#20391)\n+"
      },
      {
        "sha": "aa178fc6dfb74b42ddadbb7c3b18a6ce4039a090",
        "filename": "src/rpc/client.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8e863e3d3ce457c9ca26a12e8fd6beac2f50aa7d/src/rpc/client.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8e863e3d3ce457c9ca26a12e8fd6beac2f50aa7d/src/rpc/client.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/client.cpp?ref=8e863e3d3ce457c9ca26a12e8fd6beac2f50aa7d",
        "patch": "@@ -43,6 +43,7 @@ static const CRPCConvertParam vRPCConvertParams[] =\n     { \"sendtoaddress\", 8, \"avoid_reuse\" },\n     { \"sendtoaddress\", 9, \"fee_rate\"},\n     { \"sendtoaddress\", 10, \"verbose\"},\n+    { \"setfeerate\", 0, \"amount\" },\n     { \"settxfee\", 0, \"amount\" },\n     { \"sethdseed\", 0, \"newkeypool\" },\n     { \"getreceivedbyaddress\", 1, \"minconf\" },"
      },
      {
        "sha": "0213cca445aa9c344af834a753b6316ee9ce1f0b",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 76,
        "deletions": 0,
        "changes": 76,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8e863e3d3ce457c9ca26a12e8fd6beac2f50aa7d/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8e863e3d3ce457c9ca26a12e8fd6beac2f50aa7d/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=8e863e3d3ce457c9ca26a12e8fd6beac2f50aa7d",
        "patch": "@@ -2349,6 +2349,81 @@ static RPCHelpMan settxfee()\n     };\n }\n \n+static RPCHelpMan setfeerate()\n+{\n+    return RPCHelpMan{\n+        \"setfeerate\",\n+        \"\\nSet the transaction fee rate in \" + CURRENCY_ATOM + \"/vB for this wallet.\\n\"\n+        \"Overrides the global -paytxfee configuration option. Like -paytxfee, it is not persisted after bitcoind shutdown/restart.\\n\"\n+        \"Can be deactivated by passing 0 as the fee rate, in which case automatic fee selection will be used by default.\\n\",\n+        {\n+            {\"amount\", RPCArg::Type::AMOUNT, RPCArg::Optional::NO, \"The transaction fee rate in \" + CURRENCY_ATOM + \"/vB to set (0 to unset)\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::STR, \"wallet_name\", \"Name of the wallet the fee rate setting applies to\"},\n+                {RPCResult::Type::NUM, \"fee_rate\", \"Fee rate in \" + CURRENCY_ATOM + \"/vB for the wallet after this operation\"},\n+                {RPCResult::Type::STR, \"result\", /* optional */ true, \"Description of result, if successful\"},\n+                {RPCResult::Type::STR, \"error\", /* optional */ true, \"Description of error, if any\"},\n+            },\n+        },\n+        RPCExamples{\n+            \"\"\n+            \"\\nSet a fee rate of 1 \" + CURRENCY_ATOM + \"/vB\\n\"\n+            + HelpExampleCli(\"setfeerate\", \"1\") +\n+            \"\\nSet a fee rate of 3.141 \" + CURRENCY_ATOM + \"/vB\\n\"\n+            + HelpExampleCli(\"setfeerate\", \"3.141\") +\n+            \"\\nSet a fee rate of 7.75 \" + CURRENCY_ATOM + \"/vB with named arguments\\n\"\n+            + HelpExampleCli(\"-named setfeerate\", \"amount=\\\"7.75\\\"\") +\n+            \"\\nSet a fee rate of 25 \" + CURRENCY_ATOM + \"/vB with the RPC\\n\"\n+            + HelpExampleRpc(\"setfeerate\", \"25\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue {\n+            std::shared_ptr<CWallet> const rpc_wallet{GetWalletForJSONRPCRequest(request)};\n+            if (!rpc_wallet) return NullUniValue;\n+            CWallet& wallet = *rpc_wallet;\n+\n+            LOCK(wallet.cs_wallet);\n+\n+            const CFeeRate amount{CFeeRate::FromSatB(AmountFromValue(request.params[0]))};\n+            const CFeeRate relay_min_feerate{wallet.chain().relayMinFee().GetFeePerK()};\n+            const CFeeRate wallet_min_feerate{wallet.m_min_fee.GetFeePerK()};\n+            const CFeeRate wallet_max_feerate{CFeeRate::FromBtcKb(wallet.m_default_max_tx_fee)};\n+            const CFeeRate zero{CFeeRate{0}};\n+            const std::string amount_str{amount.ToString(FeeEstimateMode::SAT_VB)};\n+            const std::string current_setting{strprintf(\"The current setting of %s for this wallet remains unchanged.\", wallet.m_pay_tx_fee == zero ? \"0 (unset)\" : wallet.m_pay_tx_fee.ToString(FeeEstimateMode::SAT_VB))};\n+            std::string result, error;\n+\n+            if (amount == zero) {\n+                if (request.params[0].get_real() != 0) throw JSONRPCError(RPC_TYPE_ERROR, \"Invalid amount\");\n+                wallet.m_pay_tx_fee = amount;\n+                result = \"Fee rate for transactions with this wallet successfully unset. By default, automatic fee selection will be used.\";\n+            } else if (amount < relay_min_feerate) {\n+                error = strprintf(\"The requested fee rate of %s cannot be less than the minimum relay fee rate of %s. %s\", amount_str, relay_min_feerate.ToString(FeeEstimateMode::SAT_VB), current_setting);\n+            } else if (amount < wallet_min_feerate) {\n+                error = strprintf(\"The requested fee rate of %s cannot be less than the wallet min fee rate of %s. %s\", amount_str, wallet_min_feerate.ToString(FeeEstimateMode::SAT_VB), current_setting);\n+            } else if (amount > wallet_max_feerate) {\n+                error = strprintf(\"The requested fee rate of %s cannot be greater than the wallet max fee rate of %s. %s\", amount_str, wallet_max_feerate.ToString(FeeEstimateMode::SAT_VB), current_setting);\n+            } else {\n+                wallet.m_pay_tx_fee = amount;\n+                result = \"Fee rate for transactions with this wallet successfully set to \" + amount_str;\n+            }\n+            CHECK_NONFATAL(result.empty() != error.empty());\n+\n+            UniValue obj{UniValue::VOBJ};\n+            obj.pushKV(\"wallet_name\", wallet.GetName());\n+            obj.pushKV(\"fee_rate\", ValueFromFeeRate(wallet.m_pay_tx_fee));\n+            if (error.empty()) {\n+                obj.pushKV(\"result\", result);\n+            } else {\n+                obj.pushKV(\"error\", error);\n+            }\n+            return obj;\n+        },\n+    };\n+}\n+\n static RPCHelpMan getbalances()\n {\n     return RPCHelpMan{\n@@ -4607,6 +4682,7 @@ static const CRPCCommand commands[] =\n     { \"wallet\",             &send,                           },\n     { \"wallet\",             &sendmany,                       },\n     { \"wallet\",             &sendtoaddress,                  },\n+    { \"wallet\",             &setfeerate,                     },\n     { \"wallet\",             &sethdseed,                      },\n     { \"wallet\",             &setlabel,                       },\n     { \"wallet\",             &settxfee,                       },"
      },
      {
        "sha": "893b7c745db44848cea39c7518cee2cb4a23fee8",
        "filename": "test/functional/rpc_help.py",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8e863e3d3ce457c9ca26a12e8fd6beac2f50aa7d/test/functional/rpc_help.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8e863e3d3ce457c9ca26a12e8fd6beac2f50aa7d/test/functional/rpc_help.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_help.py?ref=8e863e3d3ce457c9ca26a12e8fd6beac2f50aa7d",
        "patch": "@@ -86,6 +86,7 @@ def test_client_conversion_table(self):\n                 assert argname == 'dummy', ('WARNING: conversion mismatch for argument named %s (%s)' % (argname, list(zip(all_methods_by_argname[argname], converts_by_argname[argname]))))\n \n     def test_categories(self):\n+        self.log.info(\"Test RPC help categories\")\n         node = self.nodes[0]\n \n         # wrong argument count\n@@ -111,6 +112,7 @@ def test_categories(self):\n         assert_equal(titles, components)\n \n     def dump_help(self):\n+        self.log.info(\"Test dump RPC help\")\n         dump_dir = os.path.join(self.options.tmpdir, 'rpc_help_dump')\n         os.mkdir(dump_dir)\n         calls = [line.split(' ', 1)[0] for line in self.nodes[0].help().splitlines() if line and not line.startswith('==')]\n@@ -120,9 +122,11 @@ def dump_help(self):\n                 f.write(self.nodes[0].help(call))\n \n     def wallet_help(self):\n+        self.log.info(\"Test wallet RPC help\")\n         assert 'getnewaddress ( \"label\" \"address_type\" )' in self.nodes[0].help('getnewaddress')\n         self.restart_node(0, extra_args=['-nowallet=1'])\n         assert 'getnewaddress ( \"label\" \"address_type\" )' in self.nodes[0].help('getnewaddress')\n+        assert \"setfeerate amount\" in self.nodes[0].help(\"setfeerate\")\n \n \n if __name__ == '__main__':"
      }
    ]
  },
  {
    "sha": "529bfc16ffb35c5356e27f61d59395fae6707bcd",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1MjliZmMxNmZmYjM1YzUzNTZlMjdmNjFkNTkzOTVmYWU2NzA3YmNk",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-11-27T16:36:22Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-01-28T20:21:45Z"
      },
      "message": "test: add setfeerate functional coverage in wallet_create_tx.py",
      "tree": {
        "sha": "bafc0045062bf43fa950ad87ed56fecbb30749a2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bafc0045062bf43fa950ad87ed56fecbb30749a2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/529bfc16ffb35c5356e27f61d59395fae6707bcd",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAmATHNkACgkQT1chs9Dj\nkh1pdxAAp4yhSOcWiGwpyqHz0BB76WUP7vy14qEdbcH8Ig0enL4Ons2337JgINDu\nNb+nWsr5+AtJcT9/hTjO2Rpjx2Z94NdFoPvsENpM85bR+lRBFEcbRTaMUAcDamrD\nVW7GEtTlMm57Q1VmJ5xLlEegjavWDRTovhsQAB+f4pQBy4dlU8QAS62z3vGdivYH\nAmYjCeTOcujI4JHaa8kt2Q6JSpRVP1fCmgmU7i4kRIqgaxPLfvdST1vs1iNfQ06x\nB2AzRqMHeNvZNXg1FaEv686/ccsPqVV64ju0Wp960017wrLYYbHc4RQckJMHYNjv\nkRljRMLgWkZPQ6/5GaGQClEv+RONSOaekNgEn6aIE2JncFQEtaYw1gZJwE4mtP7m\n7A/gLxmqndVIo1Ur78xhzkP9zk9AW99bDzfrrwoS/wkFRDElpGjj+Qdlfdzp3imk\npu5KXEdITxBYn6g2mEIubjPVtI/BvJ84aTNfhILgF/ZEp7493954KycxIcSDHUBB\nfB5DgXInZMgI+tmmTAcZyXxOlK8LO8RLBV1sS4SB8daSfjXsUjdkDIKstp3q6J4e\n01It3xCOlSxUyXNM8PBPfnDO7pAY+XxaPxSBPuGptrHo8O3kovEwFeN2or5QXQiR\nWUjlHX6uvy7+s+0NuWI9H6Kq6fNQAIvxsdVqQg27sds7sd3IuZ8=\n=kMQs\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIMuYv1A8a9I2iZjSEBE1JOOBMVXeojgLWv2Dp/CMiotXCP/wED1az47MJIBI\nNW2IJG1ArZMI8QRgExzb8AiCdjSCmZA/eACD3+MNLvkMjiwraHR0cHM6Ly9ib2Iu\nYnRjLmNhbGVuZGFyLm9wZW50aW1lc3RhbXBzLm9yZ//wEGwImGGCCr3dUy6t8wW8\nLzoI8QRgExzb8AhBiK+8SMvrvgCD3+MNLvkMjikoaHR0cHM6Ly9maW5uZXkuY2Fs\nZW5kYXIuZXRlcm5pdHl3YWxsLmNvbfAQ8gfehph5XGqHWZoPs42VhAjxBGATHNvw\nCHgPsMMYlx7uAIPf4w0u+QyOIyJodHRwczovL2J0Yy5jYWxlbmRhci5jYXRhbGxh\neHkuY29t\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree bafc0045062bf43fa950ad87ed56fecbb30749a2\nparent 8e863e3d3ce457c9ca26a12e8fd6beac2f50aa7d\nauthor Jon Atack <jon@atack.com> 1606494982 +0100\ncommitter Jon Atack <jon@atack.com> 1611865305 +0100\n\ntest: add setfeerate functional coverage in wallet_create_tx.py\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/529bfc16ffb35c5356e27f61d59395fae6707bcd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/529bfc16ffb35c5356e27f61d59395fae6707bcd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/529bfc16ffb35c5356e27f61d59395fae6707bcd/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8e863e3d3ce457c9ca26a12e8fd6beac2f50aa7d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8e863e3d3ce457c9ca26a12e8fd6beac2f50aa7d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8e863e3d3ce457c9ca26a12e8fd6beac2f50aa7d"
      }
    ],
    "stats": {
      "total": 53,
      "additions": 50,
      "deletions": 3
    },
    "files": [
      {
        "sha": "d2c5bb5bc223870a5fd4382bb060db92d1822e06",
        "filename": "test/functional/wallet_create_tx.py",
        "status": "modified",
        "additions": 50,
        "deletions": 3,
        "changes": 53,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/529bfc16ffb35c5356e27f61d59395fae6707bcd/test/functional/wallet_create_tx.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/529bfc16ffb35c5356e27f61d59395fae6707bcd/test/functional/wallet_create_tx.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_create_tx.py?ref=529bfc16ffb35c5356e27f61d59395fae6707bcd",
        "patch": "@@ -3,20 +3,21 @@\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+from decimal import Decimal\n+\n+from test_framework.blocktools import TIME_GENESIS_BLOCK\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import (\n     assert_equal,\n     assert_raises_rpc_error,\n )\n-from test_framework.blocktools import (\n-    TIME_GENESIS_BLOCK,\n-)\n \n \n class CreateTxWalletTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.setup_clean_chain = True\n         self.num_nodes = 1\n+        self.wallet_names = [\"test_wallet\"]\n \n     def skip_test_if_missing_module(self):\n         self.skip_if_no_wallet()\n@@ -29,6 +30,7 @@ def run_test(self):\n \n         self.test_anti_fee_sniping()\n         self.test_tx_size_too_large()\n+        self.test_setfeerate()\n \n     def test_anti_fee_sniping(self):\n         self.log.info('Check that we have some (old) blocks and that anti-fee-sniping is disabled')\n@@ -77,6 +79,51 @@ def test_tx_size_too_large(self):\n         )\n         self.nodes[0].settxfee(0)\n \n+    def test_setfeerate(self):\n+        self.log.info(\"Test setfeerate\")\n+        self.restart_node(0, extra_args=[\"-mintxfee=0.00003141\"])  # 3.141 sat/vB\n+        node = self.nodes[0]\n+\n+        def test_response(*, requested=0, expected=0, error=None, msg):\n+            assert_equal(node.setfeerate(requested), {\"wallet_name\": \"test_wallet\", \"fee_rate\": expected, (\"error\" if error else \"result\"): msg})\n+\n+        # Test setfeerate with 10.0001 (CFeeRate rounding), \"10.001\" and \"4\" sat/vB\n+        test_response(requested=10.0001, expected=10, msg=\"Fee rate for transactions with this wallet successfully set to 10.000 sat/vB\")\n+        assert_equal(node.getwalletinfo()[\"paytxfee\"], Decimal(\"0.00010000\"))\n+        test_response(requested=\"10.001\", expected=Decimal(\"10.001\"), msg=\"Fee rate for transactions with this wallet successfully set to 10.001 sat/vB\")\n+        assert_equal(node.getwalletinfo()[\"paytxfee\"], Decimal(\"0.00010001\"))\n+        test_response(requested=\"4\", expected=4, msg=\"Fee rate for transactions with this wallet successfully set to 4.000 sat/vB\")\n+        assert_equal(node.getwalletinfo()[\"paytxfee\"], Decimal(\"0.00004000\"))\n+\n+        # Test setfeerate with too-high/low values returns expected errors\n+        test_response(requested=Decimal(\"10000.001\"), expected=4, error=True, msg=\"The requested fee rate of 10000.001 sat/vB cannot be greater than the wallet max fee rate of 10000.000 sat/vB. The current setting of 4.000 sat/vB for this wallet remains unchanged.\")\n+        test_response(requested=Decimal(\"0.999\"), expected=4, error=True, msg=\"The requested fee rate of 0.999 sat/vB cannot be less than the minimum relay fee rate of 1.000 sat/vB. The current setting of 4.000 sat/vB for this wallet remains unchanged.\")\n+        test_response(requested=Decimal(\"3.140\"), expected=4, error=True, msg=\"The requested fee rate of 3.140 sat/vB cannot be less than the wallet min fee rate of 3.141 sat/vB. The current setting of 4.000 sat/vB for this wallet remains unchanged.\")\n+        assert_equal(node.getwalletinfo()[\"paytxfee\"], Decimal(\"0.00004000\"))\n+\n+        # Test setfeerate to 3.141 sat/vB\n+        test_response(requested=3.141, expected=Decimal(\"3.141\"), msg=\"Fee rate for transactions with this wallet successfully set to 3.141 sat/vB\")\n+        assert_equal(node.getwalletinfo()[\"paytxfee\"], Decimal(\"0.00003141\"))\n+\n+        # Test setfeerate with values non-representable by CFeeRate\n+        for invalid_value in [0.00000001, 0.0009, 0.00099999]:\n+            assert_raises_rpc_error(-3, \"Invalid amount\", node.setfeerate, amount=invalid_value)\n+\n+        # Test setfeerate with values rejected by ParseFixedPoint() called in AmountFromValue()\n+        for invalid_value in [\"\", 0.000000001, \"1.111111111\", 11111111111]:\n+            assert_raises_rpc_error(-3, \"Invalid amount\", node.setfeerate, amount=invalid_value)\n+\n+        # Test deactivating setfeerate\n+        test_response(msg=\"Fee rate for transactions with this wallet successfully unset. By default, automatic fee selection will be used.\")\n+        assert_equal(node.getwalletinfo()[\"paytxfee\"], 0)\n+\n+        # Test currently-unset setfeerate with too-high/low values returns expected errors\n+        test_response(requested=Decimal(\"10000.001\"), error=True, msg=\"The requested fee rate of 10000.001 sat/vB cannot be greater than the wallet max fee rate of 10000.000 sat/vB. The current setting of 0 (unset) for this wallet remains unchanged.\")\n+        assert_equal(node.getwalletinfo()[\"paytxfee\"], 0)\n+        test_response(requested=Decimal(\"0.999\"), error=True, msg=\"The requested fee rate of 0.999 sat/vB cannot be less than the minimum relay fee rate of 1.000 sat/vB. The current setting of 0 (unset) for this wallet remains unchanged.\")\n+        test_response(requested=Decimal(\"3.140\"), error=True, msg=\"The requested fee rate of 3.140 sat/vB cannot be less than the wallet min fee rate of 3.141 sat/vB. The current setting of 0 (unset) for this wallet remains unchanged.\")\n+        assert_equal(node.getwalletinfo()[\"paytxfee\"], 0)\n+\n \n if __name__ == '__main__':\n     CreateTxWalletTest().main()"
      }
    ]
  },
  {
    "sha": "c907f158a6bf3cad782d4441e02abcbda210265b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjOTA3ZjE1OGE2YmYzY2FkNzgyZDQ0NDFlMDJhYmNiZGEyMTAyNjVi",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-11-27T16:36:06Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-01-28T20:21:53Z"
      },
      "message": "test: add setfeerate functional coverage in wallet_bumpfee.py",
      "tree": {
        "sha": "8f794b6defdbeed983b2c7cc01e0b9a389f6740a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8f794b6defdbeed983b2c7cc01e0b9a389f6740a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c907f158a6bf3cad782d4441e02abcbda210265b",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAmATHOEACgkQT1chs9Dj\nkh2ltg//bzhc/Va8lZ1e1ywoucTE+Q56lJvZWJAVpUD6GDIWlhr49yjpeoVUW+qg\n2LI4+RpUabRc07hJoTBnSogC4KpgxUlZvo6/8z4e4Cq2SBVuyfpIlqQM7HSgH+eV\n4zI97ADrlYSRtnQo02ypgyp3oYA0k3aDEzgI9Y55sSYY8DmoivSR+Q3+kLpfrBJX\n/6wXV9NRPzNIGmYBgORXgkkGoc/0ngGeWFQhefcpST6D32YSHAi3SzBxNlt2ghME\nzKiiBHwPJJurv8JnNHu1WX3YuQAxB41BFarjdFBxbZ0sii4exO8UdGg4IgKGVimO\nlfglpaLqqeszQj4+Ak10WR57srekE2HPq5D9Dpwhy8+6hcYtyBocZNKc7SZupyDs\nyCsyBIau1A3iod4j3YOShp3zTOMK3OtgQzs5x9z8G+Em2pQvTSKh/WK0mSbHMHeU\nZBBeKqvJMOq/sig4HAwteo4R+3N+lNSj05U185t9oD0SKudfkWFJY3PPzJ8/tvI4\nvxvqrzCQjPi9wQjK6cEKHgRbUy9GYs6r1qsB8lvbQ3ddjg5ED27P0qUFYOnwhEez\nkwcnD4MD8aGg77GtgTx3zKqqowfgiQ0EuP+Pr8AbwG+sIv/vt3CaHvWKgt9nfE0M\nNn9msnIWPIw9C0T3sRImpmE/kBILeTfl1pLwmlnMli4ZB3bRXE0=\n=7Cpe\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIEBEPfaQUqBeEwJ+9nIgZUfTUDdrmIXkQVGE0/DRCDvvCP/wEAdn944/wiMk\nuV4hmEpUvREI8QRgExzi8AiIiG7XCmYpuACD3+MNLvkMji4taHR0cHM6Ly9hbGlj\nZS5idGMuY2FsZW5kYXIub3BlbnRpbWVzdGFtcHMub3Jn//AQQtIDbn2wKLugx5pK\n7pBFmAjxBGATHOPwCElEPBf1JrAhAIPf4w0u+QyOIyJodHRwczovL2J0Yy5jYWxl\nbmRhci5jYXRhbGxheHkuY29t//AQWRfmNY1jQwhTUQcMAQobUQjxBGATHOPwCDcc\nB+Bo6KXJAIPf4w0u+QyOKShodHRwczovL2Zpbm5leS5jYWxlbmRhci5ldGVybml0\neXdhbGwuY29t8BBpdEdWb+di1pUUAe7sFK/CCPEEYBMc4/AIndLUpLX82kEAg9/j\nDS75DI4sK2h0dHBzOi8vYm9iLmJ0Yy5jYWxlbmRhci5vcGVudGltZXN0YW1wcy5v\ncmc=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 8f794b6defdbeed983b2c7cc01e0b9a389f6740a\nparent 529bfc16ffb35c5356e27f61d59395fae6707bcd\nauthor Jon Atack <jon@atack.com> 1606494966 +0100\ncommitter Jon Atack <jon@atack.com> 1611865313 +0100\n\ntest: add setfeerate functional coverage in wallet_bumpfee.py\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c907f158a6bf3cad782d4441e02abcbda210265b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c907f158a6bf3cad782d4441e02abcbda210265b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c907f158a6bf3cad782d4441e02abcbda210265b/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "529bfc16ffb35c5356e27f61d59395fae6707bcd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/529bfc16ffb35c5356e27f61d59395fae6707bcd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/529bfc16ffb35c5356e27f61d59395fae6707bcd"
      }
    ],
    "stats": {
      "total": 40,
      "additions": 39,
      "deletions": 1
    },
    "files": [
      {
        "sha": "1cae3dc93ac0db185251e9afcac9da47553f0c70",
        "filename": "test/functional/wallet_bumpfee.py",
        "status": "modified",
        "additions": 39,
        "deletions": 1,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c907f158a6bf3cad782d4441e02abcbda210265b/test/functional/wallet_bumpfee.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c907f158a6bf3cad782d4441e02abcbda210265b/test/functional/wallet_bumpfee.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_bumpfee.py?ref=c907f158a6bf3cad782d4441e02abcbda210265b",
        "patch": "@@ -17,7 +17,7 @@\n import io\n \n from test_framework.blocktools import add_witness_commitment, create_block, create_coinbase, send_to_witness\n-from test_framework.messages import BIP125_SEQUENCE_NUMBER, CTransaction\n+from test_framework.messages import BIP125_SEQUENCE_NUMBER, COIN, CTransaction\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import (\n     assert_equal,\n@@ -46,6 +46,7 @@ def set_test_params(self):\n             \"-mintxfee=0.00002\",\n             \"-addresstype=bech32\",\n         ] for i in range(self.num_nodes)]\n+        self.wallet_names = [self.default_wallet_name, \"RBF wallet\"]\n \n     def skip_test_if_missing_module(self):\n         self.skip_if_no_wallet()\n@@ -91,6 +92,7 @@ def run_test(self):\n         test_bumpfee_metadata(self, rbf_node, dest_address)\n         test_locked_wallet_fails(self, rbf_node, dest_address)\n         test_change_script_match(self, rbf_node, dest_address)\n+        test_setfeerate(self, rbf_node, dest_address)\n         test_settxfee(self, rbf_node, dest_address)\n         test_maxtxfee_fails(self, rbf_node, dest_address)\n         # These tests wipe out a number of utxos that are expected in other tests\n@@ -315,6 +317,42 @@ def test_dust_to_fee(self, rbf_node, dest_address):\n     self.clear_mempool()\n \n \n+def test_setfeerate(self, rbf_node, dest_address):\n+    self.log.info(\"Test setfeerate\")\n+\n+    def test_response(*, wallet=\"RBF wallet\", requested=0, expected=0, error=None, msg):\n+        assert_equal(rbf_node.setfeerate(requested), {\"wallet_name\": wallet, \"fee_rate\": expected, (\"error\" if error else \"result\"): msg})\n+\n+    # Test setfeerate with too high/low values returns expected errors\n+    new = Decimal(\"10000.001\")\n+    test_response(requested=new, error=True, msg=f\"The requested fee rate of {new} sat/vB cannot be greater than the wallet max fee rate of 10000.000 sat/vB. The current setting of 0 (unset) for this wallet remains unchanged.\")\n+    new = Decimal(\"0.999\")\n+    test_response(requested=new, error=True, msg=f\"The requested fee rate of {new} sat/vB cannot be less than the minimum relay fee rate of 1.000 sat/vB. The current setting of 0 (unset) for this wallet remains unchanged.\")\n+    fee_rate = Decimal(\"2.001\")\n+    test_response(requested=fee_rate, expected=fee_rate, msg=f\"Fee rate for transactions with this wallet successfully set to {fee_rate} sat/vB\")\n+    new = Decimal(\"1.999\")\n+    test_response(requested=new, expected=fee_rate, error=True, msg=f\"The requested fee rate of {new} sat/vB cannot be less than the wallet min fee rate of 2.000 sat/vB. The current setting of {fee_rate} sat/vB for this wallet remains unchanged.\")\n+\n+    # Test setfeerate with valid values returns expected results\n+    rbfid = spend_one_input(rbf_node, dest_address)\n+    fee_rate = 25\n+    test_response(requested=fee_rate, expected=fee_rate, msg=\"Fee rate for transactions with this wallet successfully set to 25.000 sat/vB\")\n+    bumped_tx = rbf_node.bumpfee(rbfid)\n+    actual_feerate = bumped_tx[\"fee\"] * COIN / rbf_node.getrawtransaction(bumped_tx[\"txid\"], True)[\"vsize\"]\n+    assert_greater_than(Decimal(\"0.01\"), abs(fee_rate - actual_feerate))\n+    test_response(msg=\"Fee rate for transactions with this wallet successfully unset. By default, automatic fee selection will be used.\")\n+\n+    # Test setfeerate with a different -maxtxfee\n+    self.restart_node(1, [\"-maxtxfee=0.000025\"] + self.extra_args[1])\n+    new = \"2.501\"\n+    test_response(requested=new, error=True, msg=f\"The requested fee rate of {new} sat/vB cannot be greater than the wallet max fee rate of 2.500 sat/vB. The current setting of 0 (unset) for this wallet remains unchanged.\")\n+\n+    self.restart_node(1, self.extra_args[1])\n+    rbf_node.walletpassphrase(WALLET_PASSPHRASE, WALLET_PASSPHRASE_TIMEOUT)\n+    self.connect_nodes(1, 0)\n+    self.clear_mempool()\n+\n+\n def test_settxfee(self, rbf_node, dest_address):\n     self.log.info('Test settxfee')\n     assert_raises_rpc_error(-8, \"txfee cannot be less than min relay tx fee\", rbf_node.settxfee, Decimal('0.000005'))"
      }
    ]
  },
  {
    "sha": "d87f0f3a923dca2ce8d99aa700b0beda8e42d3ec",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkODdmMGYzYTkyM2RjYTJjZThkOTlhYTcwMGIwYmVkYThlNDJkM2Vj",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-11-14T18:44:59Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-01-28T20:21:55Z"
      },
      "message": "test: update functional tests from settxfee to setfeerate\n\nupdates tests that call settxfee to call setfeerate instead;\nsettxfee functionality still has test coverage in\n- wallet_bumpfee.py\n- wallet_create_tx.py\n- wallet_multiwallet.py\n\nalso fixes two fundrawtransaction tests that had off-by-one naming errors\nand tightens up one of the two",
      "tree": {
        "sha": "48de2d3db7893c0645b6736b0255e46081e5ab91",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/48de2d3db7893c0645b6736b0255e46081e5ab91"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d87f0f3a923dca2ce8d99aa700b0beda8e42d3ec",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAmATHOMACgkQT1chs9Dj\nkh2Cuw/9Ghvs129EXGyh4XPntqgOTmsPcpW4MDjSGhJUzzvJ6nB7tS8vKcn9+apx\nlpH2qgLzdM1I0zz+KhvzfhDeKsDEw0Zk4xl6WXqkWwo3HXdaDoOIIoEAs8BjzlBd\nlKcmF2DuGa8zqZZjlZllWwPjrCCrgMyGlSU7hnoM+mjthPREddg0cT63ei68KjCS\n5bFGK6c9oOEjlDpO5aPDoZYCAfcA6qERxSIQXAJBsw4v/hlG1WBTn7ocuNIEDgxv\n3RsXoZ/cQkbEB060cSwgcE2lXLKjxSuE1QOSY7XVHWblWv/gCofcjiZZHtPknHKO\n0khfoKwYhfs0KVzCx8fsUMZSKx7bo68tAML7IMGDKo+vLr+3cyL9/8YD5tGc5dVr\nHVxl40JsZfZGFmvgSEb6wo3yeTOHyOfmS3STTp8LqoJfPa1gj93ki3tZuoGrSljv\natT5t234ttSc/KwbH9RINXOIxhYdELORzlTN/mCkV2wAhjF3QNX3ANhcD+WiSytf\ntj8C+1Hv3AFnvoikdMK/xkbdgChw9d2MCRShwmfrAj2n00eylHgRVwIXBeeDjre8\n88NpltvSU8VgW0fdFKsvbLRcmh6hzfQyVOllwwVCSxtdklCSJ6N3c+C2IXwpc9Lc\nqttJiEviXXgIn/fpiJjntCB1w7e4SG9Rjp2aP8LWgzlXegOBZpE=\n=kwo4\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIHlTRzX4H99qeoa2zoxgJvwI98ZLxzsR77e061crf9PBCP/wEDksh9IifoHB\nwdS6o3W1m7II8CDG7PU30p9vjgnnmsIYU9gV7oK2DMcZgFFKAfaFb508vwjxIDWI\nbqjRyInpi23Z4tWlQtzdduKmYkFAkTCJdrL8FncgCPEEYBMc5PAIslOakaA3gJoA\ng9/jDS75DI4uLWh0dHBzOi8vYWxpY2UuYnRjLmNhbGVuZGFyLm9wZW50aW1lc3Rh\nbXBzLm9yZ//wEFidLkKlQunD1YHHTlTMKj0I8QRgExzl8AhX4la8IJnO5ACD3+MN\nLvkMjiwraHR0cHM6Ly9ib2IuYnRjLmNhbGVuZGFyLm9wZW50aW1lc3RhbXBzLm9y\nZ//wEHDuEpKTNFy8wAkQB9g8DpEI8QRgExzl8AgibbQ4its26gCD3+MNLvkMjiMi\naHR0cHM6Ly9idGMuY2FsZW5kYXIuY2F0YWxsYXh5LmNvbfAQdc4PhJvguDlsTbRv\ndWC1PQjxIHT2sRHp0o8fhfnFowTfsPTJp/qRzT8Iz9VyN3GLQoQ7CPEgz2I0wfqT\nWB3jCGImcPIknp+bAZIYnwMCDwFqZpHAf9YI8QRgExzl8AhaF0QVbfZjrgCD3+MN\nLvkMjikoaHR0cHM6Ly9maW5uZXkuY2FsZW5kYXIuZXRlcm5pdHl3YWxsLmNvbQ==\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 48de2d3db7893c0645b6736b0255e46081e5ab91\nparent c907f158a6bf3cad782d4441e02abcbda210265b\nauthor Jon Atack <jon@atack.com> 1605379499 +0100\ncommitter Jon Atack <jon@atack.com> 1611865315 +0100\n\ntest: update functional tests from settxfee to setfeerate\n\nupdates tests that call settxfee to call setfeerate instead;\nsettxfee functionality still has test coverage in\n- wallet_bumpfee.py\n- wallet_create_tx.py\n- wallet_multiwallet.py\n\nalso fixes two fundrawtransaction tests that had off-by-one naming errors\nand tightens up one of the two\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d87f0f3a923dca2ce8d99aa700b0beda8e42d3ec",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d87f0f3a923dca2ce8d99aa700b0beda8e42d3ec",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d87f0f3a923dca2ce8d99aa700b0beda8e42d3ec/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c907f158a6bf3cad782d4441e02abcbda210265b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c907f158a6bf3cad782d4441e02abcbda210265b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c907f158a6bf3cad782d4441e02abcbda210265b"
      }
    ],
    "stats": {
      "total": 75,
      "additions": 38,
      "deletions": 37
    },
    "files": [
      {
        "sha": "5bc40e538214ed3b88e786869120f45653009a16",
        "filename": "test/functional/mempool_limit.py",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d87f0f3a923dca2ce8d99aa700b0beda8e42d3ec/test/functional/mempool_limit.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d87f0f3a923dca2ce8d99aa700b0beda8e42d3ec/test/functional/mempool_limit.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/mempool_limit.py?ref=d87f0f3a923dca2ce8d99aa700b0beda8e42d3ec",
        "patch": "@@ -39,13 +39,12 @@ def run_test(self):\n         inputs = [{ \"txid\" : us0[\"txid\"], \"vout\" : us0[\"vout\"]}]\n         outputs = {self.nodes[0].getnewaddress() : 0.0001}\n         tx = self.nodes[0].createrawtransaction(inputs, outputs)\n-        self.nodes[0].settxfee(relayfee) # specifically fund this tx with low fee\n+        self.nodes[0].setfeerate(relayfee * Decimal(1e8 / 1e3))  # fund this tx with a low fee\n         txF = self.nodes[0].fundrawtransaction(tx)\n-        self.nodes[0].settxfee(0) # return to automatic fee selection\n+        self.nodes[0].setfeerate(0)  # return to automatic fee selection\n         txFS = self.nodes[0].signrawtransactionwithwallet(txF['hex'])\n         txid = self.nodes[0].sendrawtransaction(txFS['hex'])\n \n-        relayfee = self.nodes[0].getnetworkinfo()['relayfee']\n         base_fee = relayfee*100\n         for i in range (3):\n             txids.append([])"
      },
      {
        "sha": "4dcc532fbfefbbbd1d4e61b4cd257ab589679534",
        "filename": "test/functional/mempool_unbroadcast.py",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d87f0f3a923dca2ce8d99aa700b0beda8e42d3ec/test/functional/mempool_unbroadcast.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d87f0f3a923dca2ce8d99aa700b0beda8e42d3ec/test/functional/mempool_unbroadcast.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/mempool_unbroadcast.py?ref=d87f0f3a923dca2ce8d99aa700b0beda8e42d3ec",
        "patch": "@@ -5,6 +5,7 @@\n \"\"\"Test that the mempool ensures transaction delivery by periodically sending\n to peers until a GETDATA is received.\"\"\"\n \n+from decimal import Decimal\n import time\n \n from test_framework.p2p import P2PTxInvStore\n@@ -47,7 +48,8 @@ def test_broadcast(self):\n         inputs = [{\"txid\": us0[\"txid\"], \"vout\": us0[\"vout\"]}]\n         outputs = {addr: 0.0001}\n         tx = node.createrawtransaction(inputs, outputs)\n-        node.settxfee(min_relay_fee)\n+        btc_kvb_to_sat_vb = Decimal(1e8 / 1e3)\n+        node.setfeerate(min_relay_fee * btc_kvb_to_sat_vb)\n         txF = node.fundrawtransaction(tx)\n         txFS = node.signrawtransactionwithwallet(txF[\"hex\"])\n         rpc_tx_hsh = node.sendrawtransaction(txFS[\"hex\"])"
      },
      {
        "sha": "2a3396be6b61dcf8d1434fa079941a0355f5e14d",
        "filename": "test/functional/rpc_fundrawtransaction.py",
        "status": "modified",
        "additions": 8,
        "deletions": 6,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d87f0f3a923dca2ce8d99aa700b0beda8e42d3ec/test/functional/rpc_fundrawtransaction.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d87f0f3a923dca2ce8d99aa700b0beda8e42d3ec/test/functional/rpc_fundrawtransaction.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_fundrawtransaction.py?ref=d87f0f3a923dca2ce8d99aa700b0beda8e42d3ec",
        "patch": "@@ -49,8 +49,10 @@ def run_test(self):\n         self.min_relay_tx_fee = self.nodes[0].getnetworkinfo()['relayfee']\n         # This test is not meant to test fee estimation and we'd like\n         # to be sure all txs are sent at a consistent desired feerate\n+        btc_kvb_to_sat_vb = Decimal(1e8 / 1e3)\n+        min_relay_tx_fee_in_sat_vb = self.min_relay_tx_fee * btc_kvb_to_sat_vb\n         for node in self.nodes:\n-            node.settxfee(self.min_relay_tx_fee)\n+            node.setfeerate(min_relay_tx_fee_in_sat_vb)\n \n         # if the fee's positive delta is higher than this value tests will fail,\n         # neg. delta always fail the tests.\n@@ -717,7 +719,7 @@ def test_option_feerate(self):\n \n         result = node.fundrawtransaction(rawtx)  # uses self.min_relay_tx_fee (set by settxfee)\n         btc_kvb_to_sat_vb = 100000  # (1e5)\n-        result1 = node.fundrawtransaction(rawtx, {\"fee_rate\": str(2 * btc_kvb_to_sat_vb * self.min_relay_tx_fee)})\n+        result1 = node.fundrawtransaction(rawtx, {\"fee_rate\": Decimal(\"2.009\") * btc_kvb_to_sat_vb * self.min_relay_tx_fee})\n         result2 = node.fundrawtransaction(rawtx, {\"feeRate\": 2 * self.min_relay_tx_fee})\n         result3 = node.fundrawtransaction(rawtx, {\"fee_rate\": 10 * btc_kvb_to_sat_vb * self.min_relay_tx_fee})\n         result4 = node.fundrawtransaction(rawtx, {\"feeRate\": str(10 * self.min_relay_tx_fee)})\n@@ -726,10 +728,10 @@ def test_option_feerate(self):\n         result6 = self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 0})\n \n         result_fee_rate = result['fee'] * 1000 / count_bytes(result['hex'])\n-        assert_fee_amount(result1['fee'], count_bytes(result2['hex']), 2 * result_fee_rate)\n+        assert_fee_amount(result1['fee'], count_bytes(result1['hex']), Decimal(\"2.009\") * result_fee_rate)\n         assert_fee_amount(result2['fee'], count_bytes(result2['hex']), 2 * result_fee_rate)\n         assert_fee_amount(result3['fee'], count_bytes(result3['hex']), 10 * result_fee_rate)\n-        assert_fee_amount(result4['fee'], count_bytes(result3['hex']), 10 * result_fee_rate)\n+        assert_fee_amount(result4['fee'], count_bytes(result4['hex']), 10 * result_fee_rate)\n         assert_fee_amount(result5['fee'], count_bytes(result5['hex']), 0)\n         assert_fee_amount(result6['fee'], count_bytes(result6['hex']), 0)\n \n@@ -817,9 +819,9 @@ def test_option_subtract_fee_from_outputs(self):\n         rawtx = self.nodes[3].createrawtransaction(inputs, outputs)\n \n         # Test subtract fee from outputs with feeRate (BTC/kvB)\n-        result = [self.nodes[3].fundrawtransaction(rawtx),  # uses self.min_relay_tx_fee (set by settxfee)\n+        result = [self.nodes[3].fundrawtransaction(rawtx),  # uses self.min_relay_tx_fee (set by setfeerate)\n             self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromOutputs\": []}),  # empty subtraction list\n-            self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromOutputs\": [0]}),  # uses self.min_relay_tx_fee (set by settxfee)\n+            self.nodes[3].fundrawtransaction(rawtx, {\"subtractFeeFromOutputs\": [0]}),  # uses self.min_relay_tx_fee (set by setfeerate)\n             self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2 * self.min_relay_tx_fee}),\n             self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2 * self.min_relay_tx_fee, \"subtractFeeFromOutputs\": [0]}),]\n         dec_tx = [self.nodes[3].decoderawtransaction(tx_['hex']) for tx_ in result]"
      },
      {
        "sha": "08c69a5e639cd5fadc0d742d6a95f35d524820d0",
        "filename": "test/functional/rpc_getblockstats.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d87f0f3a923dca2ce8d99aa700b0beda8e42d3ec/test/functional/rpc_getblockstats.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d87f0f3a923dca2ce8d99aa700b0beda8e42d3ec/test/functional/rpc_getblockstats.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_getblockstats.py?ref=d87f0f3a923dca2ce8d99aa700b0beda8e42d3ec",
        "patch": "@@ -50,7 +50,7 @@ def generate_test_data(self, filename):\n \n         self.nodes[0].sendtoaddress(address=address, amount=10, subtractfeefromamount=True)\n         self.nodes[0].sendtoaddress(address=address, amount=10, subtractfeefromamount=False)\n-        self.nodes[0].settxfee(amount=0.003)\n+        self.nodes[0].setfeerate(amount=300)\n         self.nodes[0].sendtoaddress(address=address, amount=1, subtractfeefromamount=True)\n         self.sync_all()\n         self.nodes[0].generate(1)\n@@ -107,7 +107,7 @@ def run_test(self):\n         assert_equal(stats[self.max_stat_pos]['height'], self.start_height + self.max_stat_pos)\n \n         for i in range(self.max_stat_pos+1):\n-            self.log.info('Checking block %d\\n' % (i))\n+            self.log.info(f\"Checking block {i}\")\n             assert_equal(stats[i], self.expected_stats[i])\n \n             # Check selecting block by hash too"
      },
      {
        "sha": "0d3055fd92a1b8975e177e2abcf7fd0bc65dbc79",
        "filename": "test/functional/wallet_basic.py",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d87f0f3a923dca2ce8d99aa700b0beda8e42d3ec/test/functional/wallet_basic.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d87f0f3a923dca2ce8d99aa700b0beda8e42d3ec/test/functional/wallet_basic.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_basic.py?ref=d87f0f3a923dca2ce8d99aa700b0beda8e42d3ec",
        "patch": "@@ -6,6 +6,7 @@\n from decimal import Decimal\n from itertools import product\n \n+from test_framework.messages import COIN\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import (\n     assert_array_result,\n@@ -197,7 +198,7 @@ def run_test(self):\n         # Send 10 BTC normal\n         address = self.nodes[0].getnewaddress(\"test\")\n         fee_per_byte = Decimal('0.001') / 1000\n-        self.nodes[2].settxfee(fee_per_byte * 1000)\n+        self.nodes[2].setfeerate(fee_per_byte * COIN)\n         txid = self.nodes[2].sendtoaddress(address, 10, \"\", \"\", False)\n         self.nodes[2].generate(1)\n         self.sync_all(self.nodes[0:3])"
      },
      {
        "sha": "88733deadebd01449b38e96f96b362ad47f877f1",
        "filename": "test/functional/wallet_create_tx.py",
        "status": "modified",
        "additions": 13,
        "deletions": 22,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d87f0f3a923dca2ce8d99aa700b0beda8e42d3ec/test/functional/wallet_create_tx.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d87f0f3a923dca2ce8d99aa700b0beda8e42d3ec/test/functional/wallet_create_tx.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_create_tx.py?ref=d87f0f3a923dca2ce8d99aa700b0beda8e42d3ec",
        "patch": "@@ -49,34 +49,25 @@ def test_tx_size_too_large(self):\n         # More than 10kB of outputs, so that we hit -maxtxfee with a high feerate\n         outputs = {self.nodes[0].getnewaddress(address_type='bech32'): 0.000025 for _ in range(400)}\n         raw_tx = self.nodes[0].createrawtransaction(inputs=[], outputs=outputs)\n+        msg = \"Fee exceeds maximum configured by user (e.g. -maxtxfee, maxfeerate)\"\n \n         for fee_setting in ['-minrelaytxfee=0.01', '-mintxfee=0.01', '-paytxfee=0.01']:\n             self.log.info('Check maxtxfee in combination with {}'.format(fee_setting))\n             self.restart_node(0, extra_args=[fee_setting])\n-            assert_raises_rpc_error(\n-                -6,\n-                \"Fee exceeds maximum configured by user (e.g. -maxtxfee, maxfeerate)\",\n-                lambda: self.nodes[0].sendmany(dummy=\"\", amounts=outputs),\n-            )\n-            assert_raises_rpc_error(\n-                -4,\n-                \"Fee exceeds maximum configured by user (e.g. -maxtxfee, maxfeerate)\",\n-                lambda: self.nodes[0].fundrawtransaction(hexstring=raw_tx),\n-            )\n-\n-        self.log.info('Check maxtxfee in combination with settxfee')\n+            assert_raises_rpc_error(-6, msg, self.nodes[0].sendmany, dummy=\"\", amounts=outputs)\n+            assert_raises_rpc_error(-4, msg, self.nodes[0].fundrawtransaction, hexstring=raw_tx)\n+\n+        self.log.info('Check maxtxfee in combination with setfeerate (sat/vB)')\n         self.restart_node(0)\n+        self.nodes[0].setfeerate(1000)\n+        assert_raises_rpc_error(-6, msg, self.nodes[0].sendmany, dummy=\"\", amounts=outputs)\n+        assert_raises_rpc_error(-4, msg, self.nodes[0].fundrawtransaction, hexstring=raw_tx)\n+        self.nodes[0].setfeerate(0)\n+\n+        self.log.info('Check maxtxfee in combination with settxfee (BTC/kvB)')\n         self.nodes[0].settxfee(0.01)\n-        assert_raises_rpc_error(\n-            -6,\n-            \"Fee exceeds maximum configured by user (e.g. -maxtxfee, maxfeerate)\",\n-            lambda: self.nodes[0].sendmany(dummy=\"\", amounts=outputs),\n-        )\n-        assert_raises_rpc_error(\n-            -4,\n-            \"Fee exceeds maximum configured by user (e.g. -maxtxfee, maxfeerate)\",\n-            lambda: self.nodes[0].fundrawtransaction(hexstring=raw_tx),\n-        )\n+        assert_raises_rpc_error(-6, msg, self.nodes[0].sendmany, dummy=\"\", amounts=outputs)\n+        assert_raises_rpc_error(-4, msg, self.nodes[0].fundrawtransaction, hexstring=raw_tx)\n         self.nodes[0].settxfee(0)\n \n     def test_setfeerate(self):"
      },
      {
        "sha": "66f092a9169fdf6b76c499b10949843715fc249a",
        "filename": "test/functional/wallet_multiwallet.py",
        "status": "modified",
        "additions": 7,
        "deletions": 1,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d87f0f3a923dca2ce8d99aa700b0beda8e42d3ec/test/functional/wallet_multiwallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d87f0f3a923dca2ce8d99aa700b0beda8e42d3ec/test/functional/wallet_multiwallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_multiwallet.py?ref=d87f0f3a923dca2ce8d99aa700b0beda8e42d3ec",
        "patch": "@@ -247,12 +247,18 @@ def wallet_file(name):\n         assert_equal(batch[0][\"result\"][\"chain\"], self.chain)\n         assert_equal(batch[1][\"result\"][\"walletname\"], \"w1\")\n \n-        self.log.info('Check for per-wallet settxfee call')\n+        self.log.info('Test per-wallet setfeerate and settxfee calls')\n         assert_equal(w1.getwalletinfo()['paytxfee'], 0)\n         assert_equal(w2.getwalletinfo()['paytxfee'], 0)\n+        w2.setfeerate(200)\n+        assert_equal(w1.getwalletinfo()['paytxfee'], 0)\n+        assert_equal(w2.getwalletinfo()['paytxfee'], Decimal('0.00200000'))\n         w2.settxfee(0.001)\n         assert_equal(w1.getwalletinfo()['paytxfee'], 0)\n         assert_equal(w2.getwalletinfo()['paytxfee'], Decimal('0.00100000'))\n+        w1.setfeerate(30)\n+        assert_equal(w1.getwalletinfo()['paytxfee'], Decimal('0.00030000'))\n+        assert_equal(w2.getwalletinfo()['paytxfee'], Decimal('0.00100000'))\n \n         self.log.info(\"Test dynamic wallet loading\")\n "
      },
      {
        "sha": "32554d6ecb0ae812345b2dbf55a842bd4fd5e51b",
        "filename": "test/functional/wallet_txn_clone.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d87f0f3a923dca2ce8d99aa700b0beda8e42d3ec/test/functional/wallet_txn_clone.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d87f0f3a923dca2ce8d99aa700b0beda8e42d3ec/test/functional/wallet_txn_clone.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_txn_clone.py?ref=d87f0f3a923dca2ce8d99aa700b0beda8e42d3ec",
        "patch": "@@ -42,7 +42,7 @@ def run_test(self):\n             assert_equal(self.nodes[i].getbalance(), starting_balance)\n             self.nodes[i].getnewaddress()  # bug workaround, coins generated assigned to first getnewaddress!\n \n-        self.nodes[0].settxfee(.001)\n+        self.nodes[0].setfeerate(100)\n \n         node0_address1 = self.nodes[0].getnewaddress(address_type=output_type)\n         node0_txid1 = self.nodes[0].sendtoaddress(node0_address1, 1219)"
      }
    ]
  },
  {
    "sha": "c594a002845e7003319252961fc35101fcb1496e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjNTk0YTAwMjg0NWU3MDAzMzE5MjUyOTYxZmMzNTEwMWZjYjE0OTZl",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-11-14T20:45:10Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-01-28T20:21:57Z"
      },
      "message": "wallet: update settxfee help",
      "tree": {
        "sha": "dbc3183607fd25591922ba235972b6182e10d366",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/dbc3183607fd25591922ba235972b6182e10d366"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c594a002845e7003319252961fc35101fcb1496e",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAmATHOYACgkQT1chs9Dj\nkh1/WA/+IP4u9ZWUjld3Zz5/lYefnkbOkQQVamPibW93/+TXSHk52IttZhCHnfRC\nh0u4YzmqpHmo/GECm2PyZ0L0b66sUJ9iLj7aGLjJT41P7kcvdCE6a7UZ+UMvy/EY\nGx62IosZIR2BJROmOuKplDX5LSPMIpnpLNsZxYLRQqmpbVMoDs/OgaVZlIU+ICyZ\n7ypl7sdr9lYP3ns0FA8o0txn1KnNUvAOpDv6DcdYsoX6OzJvy5VNpk2uVLEMrtl0\n0ywbhBzIGEYSEzwYpihbIOyx/d7DTNFgO92sAK73AmTyokSZU5iIC6ICQGTd2Z39\nKq1fyvZ3nP/hFsXS8dPc9MdLmnK5ix2n7Wa2yu+cs3RO9XJ2Ejo5MaGbp+vbVjos\niqoOSw9OdVM2E4tqt4dT0wXY0GKt4jJS9ycxRAmUPKN8Hi7uX71YTWwTXCzN+0EU\nXYLTfMoE24TyueY+cO0NGx69o7qPzNNOKIof9xz/fF53YuiMCO5e1uvtXKHdQPOP\n82614fRsPIKce06r3lC9ZuBofgQU+MEy3GtBa1bYWP1RzZX+NObEgzQ21XrLygwY\nPTQrrkOrvDEMoJCXmpb1hDz9NCB2GiOvkSXxN7Qz+iW7F2v6FdpcqKeiRn46kAbR\n59KE6W60IBOy/zK/NGgWovLql6UsgOI/7KVS/AkGvXEn+NZkYl4=\n=QO44\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIEfyil77oIPbRf9GAYk4n+RzqH2MyC0NbPWj3xkmR/66CP/wEBPZUnT7WjJs\nkTufqFNEK5QI8CC2Y7DU5koL28agMgbhZ02MOAv9m+2/BpfbJF+VxbMLKQjwIJ3h\nnjgBCg3zN5iA140Pa2iTPIOv6sXDOT4Se2RUtI+WCPAgsd7g6muVKcj4+1qu8l1N\nIe23P/ZExcrE6V9lfSL4iLoI8CADyx2N/uf3za4S6fvSB3s3nIfpxjr37W6KqfVg\n+yEEzQjxBGATHOjwCB9t+ZuhNThPAIPf4w0u+QyOLCtodHRwczovL2JvYi5idGMu\nY2FsZW5kYXIub3BlbnRpbWVzdGFtcHMub3Jn//AQksUf8W6K7efk6fFP+nVM3Ajx\nBGATHOfwCJwulpwUv5zHAIPf4w0u+QyOIyJodHRwczovL2J0Yy5jYWxlbmRhci5j\nYXRhbGxheHkuY29t8BDtF5Lelv86wnPFZ+CWTtgCCPAgLHRgvCzGaRDaQjfjESZ0\nrjAH7CMgR0WyV/SRlWSs9/EI8CBlsokI6v38auRzPXCrZa+rYFt8xNuJ128ec64w\nYOizYwjwIIrxc7pMKK8ne3sgDETbRmGEm9jf3SIeWDvxpUtiZtEWCPAg27w+VZQ6\nmZgd5vZu/6ynklwv448Jy6bYpw/IyoXe34kI8QRgExzn8AjZH+1MFL1oGACD3+MN\nLvkMji4taHR0cHM6Ly9hbGljZS5idGMuY2FsZW5kYXIub3BlbnRpbWVzdGFtcHMu\nb3Jn\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree dbc3183607fd25591922ba235972b6182e10d366\nparent d87f0f3a923dca2ce8d99aa700b0beda8e42d3ec\nauthor Jon Atack <jon@atack.com> 1605386710 +0100\ncommitter Jon Atack <jon@atack.com> 1611865317 +0100\n\nwallet: update settxfee help\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c594a002845e7003319252961fc35101fcb1496e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c594a002845e7003319252961fc35101fcb1496e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c594a002845e7003319252961fc35101fcb1496e/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d87f0f3a923dca2ce8d99aa700b0beda8e42d3ec",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d87f0f3a923dca2ce8d99aa700b0beda8e42d3ec",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d87f0f3a923dca2ce8d99aa700b0beda8e42d3ec"
      }
    ],
    "stats": {
      "total": 15,
      "additions": 12,
      "deletions": 3
    },
    "files": [
      {
        "sha": "3dd7ec791d5ed129420d33c7f4d764f0cca0a300",
        "filename": "doc/release-notes-20391.md",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c594a002845e7003319252961fc35101fcb1496e/doc/release-notes-20391.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c594a002845e7003319252961fc35101fcb1496e/doc/release-notes-20391.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes-20391.md?ref=c594a002845e7003319252961fc35101fcb1496e",
        "patch": "@@ -1,3 +1,10 @@\n+Updated RPCs\n+------------\n+\n+- `settxfee` is marked as deprecated in favor of the new `setfeerate` RPC\n+  described in the \"New RPCs\" section. This change is part of a larger migration\n+  from BTC/kvB to sat/vB units for fee rates. (#20391)\n+\n New RPCs\n ------------\n "
      },
      {
        "sha": "a5918dc302309ee4341ac6d210fdc1dd6a38356c",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 3,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c594a002845e7003319252961fc35101fcb1496e/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c594a002845e7003319252961fc35101fcb1496e/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=c594a002845e7003319252961fc35101fcb1496e",
        "patch": "@@ -2310,10 +2310,12 @@ static RPCHelpMan listlockunspent()\n static RPCHelpMan settxfee()\n {\n     return RPCHelpMan{\"settxfee\",\n-                \"\\nSet the transaction fee per kB for this wallet. Overrides the global -paytxfee command line parameter.\\n\"\n-                \"Can be deactivated by passing 0 as the fee. In that case automatic fee selection will be used by default.\\n\",\n+                \"\\n(Deprecated in favor of the setfeerate RPC in \" + CURRENCY_ATOM + \"/vB, which it is recommended to use instead.)\\n\"\n+                \"Set the transaction fee rate in \" + CURRENCY_UNIT + \"/kvB for this wallet.\\n\"\n+                \"Overrides the global -paytxfee configuration option. Like -paytxfee, it is not persisted after bitcoind shutdown/restart.\\n\"\n+                \"Can be deactivated by passing 0 as the fee rate, in which case automatic fee selection will be used by default.\\n\",\n                 {\n-                    {\"amount\", RPCArg::Type::AMOUNT, RPCArg::Optional::NO, \"The transaction fee in \" + CURRENCY_UNIT + \"/kvB\"},\n+                    {\"amount\", RPCArg::Type::AMOUNT, RPCArg::Optional::NO, \"The transaction fee rate in \" + CURRENCY_UNIT + \"/kvB to set (0 to unset)\"},\n                 },\n                 RPCResult{\n                     RPCResult::Type::BOOL, \"\", \"Returns true if successful\""
      }
    ]
  },
  {
    "sha": "3725a3f180fa8f6edeee2fdca3e09b6022c5eb21",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNzI1YTNmMTgwZmE4ZjZlZGVlZTJmZGNhM2UwOWI2MDIyYzVlYjIx",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-11-27T15:51:29Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-01-28T20:24:34Z"
      },
      "message": "wallet, test: make settxfee a hidden rpc\n\nMake settxfee a hidden rpc to avoid confusion for new users and guide them\nto use the setfeerate rpc in sat/vB, while allowing existing scripts based\non settxfee in BTC/kvB to continue using it without breaking.\n\nA hidden RPC means that `bitcoin-cli help settxfee` continues to display\nthe help documentation while removing it from the results of the general\n`bitcoin-cli help`.\n\nUpdates the release note.",
      "tree": {
        "sha": "747d90abb7a6c2b63e0f2667064d0e64094b6d21",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/747d90abb7a6c2b63e0f2667064d0e64094b6d21"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3725a3f180fa8f6edeee2fdca3e09b6022c5eb21",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAmATHYkACgkQT1chs9Dj\nkh0/YQ//YVHxujT01UQrRt4J2yQcuEeEMTrnzvUcDBykycz0XZMhgM9VzSJQu7pN\niBdMP7IspY67uhgRtakz03btJK0syBG0VbAYqKw+OvwTRJs+73US24PLB09dKkyS\nFhgOeBDXW0KnyTl/qTrzWqG/xA2iqRUVbFfgB3vERH4DkQvYAx5/pY4Sxr+THSh9\nEbIjM7jcwrA/MB+HXq/FIFP7qgQWEtFoXkQ0jzPzm6ZizSl8aa7V0MbwBQVtgYnq\nq1zwN3ccv+q6iV0KhGa4gZRaTxFsHu2nZ4lPtPQnhkpN7DGw/C8u7w2eHhu34hhZ\n82qXkKM7svFuUN663JcughszunGf0LeXrDPygxlLZWQIm+YAz9EX0bYU9+YYydvy\nZHiRjGvK5r/EQrUsCUFqLZhLjul5ESKNSBxnqHaZvvXaTJiV0LyrfuP5EXshSIqy\nS1TwYLf+MQifFeB/DiPwq33OtRCSn7Zk5UlM414frPPRq/h/ZwuVj8wPG7nq6xRX\nt5gossFmbqDt7a/Y9Q2q0EZ9w98us67B/dVsYHp9HwQyKxo9JNYE4+wAGyJYWUT6\nKE0N033oNko3dqWnjo5IRGqhdWcwJjEQMVfXe5e9BmHmM5bp2J7QG6f1J47sqhZr\nJcph4BV9a69eEJPsdcXoo3365+t8Beg/JcmjiRy16U33C049L8I=\n=OlNI\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIG07L6JRAtKK9+FJP46GLF8SHVP03ncHOPq2z+3Y19kbCP/wEAjaif6sF2uo\nc/yKEsVaIeQI8QRgEx2K8AhGPZkl8V29rACD3+MNLvkMji4taHR0cHM6Ly9hbGlj\nZS5idGMuY2FsZW5kYXIub3BlbnRpbWVzdGFtcHMub3Jn//AQZ6CP6Z1ZFZp9uCJx\njp+7FwjxBGATHYvwCP37eWZLOPm7AIPf4w0u+QyOLCtodHRwczovL2JvYi5idGMu\nY2FsZW5kYXIub3BlbnRpbWVzdGFtcHMub3Jn8BCazyNiOG3/8BxWFE2Jjv8nCPEE\nYBMdi/AIxndFUsSKKDYAg9/jDS75DI4jImh0dHBzOi8vYnRjLmNhbGVuZGFyLmNh\ndGFsbGF4eS5jb20=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 747d90abb7a6c2b63e0f2667064d0e64094b6d21\nparent c594a002845e7003319252961fc35101fcb1496e\nauthor Jon Atack <jon@atack.com> 1606492289 +0100\ncommitter Jon Atack <jon@atack.com> 1611865474 +0100\n\nwallet, test: make settxfee a hidden rpc\n\nMake settxfee a hidden rpc to avoid confusion for new users and guide them\nto use the setfeerate rpc in sat/vB, while allowing existing scripts based\non settxfee in BTC/kvB to continue using it without breaking.\n\nA hidden RPC means that `bitcoin-cli help settxfee` continues to display\nthe help documentation while removing it from the results of the general\n`bitcoin-cli help`.\n\nUpdates the release note.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3725a3f180fa8f6edeee2fdca3e09b6022c5eb21",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3725a3f180fa8f6edeee2fdca3e09b6022c5eb21",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3725a3f180fa8f6edeee2fdca3e09b6022c5eb21/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c594a002845e7003319252961fc35101fcb1496e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c594a002845e7003319252961fc35101fcb1496e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c594a002845e7003319252961fc35101fcb1496e"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 10,
      "deletions": 4
    },
    "files": [
      {
        "sha": "5f41ca814512b8e2b5b4cd9eff1ce482397a249f",
        "filename": "doc/release-notes-20391.md",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3725a3f180fa8f6edeee2fdca3e09b6022c5eb21/doc/release-notes-20391.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3725a3f180fa8f6edeee2fdca3e09b6022c5eb21/doc/release-notes-20391.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes-20391.md?ref=3725a3f180fa8f6edeee2fdca3e09b6022c5eb21",
        "patch": "@@ -1,9 +1,9 @@\n Updated RPCs\n ------------\n \n-- `settxfee` is marked as deprecated in favor of the new `setfeerate` RPC\n-  described in the \"New RPCs\" section. This change is part of a larger migration\n-  from BTC/kvB to sat/vB units for fee rates. (#20391)\n+- `settxfee` is now a hidden RPC and marked as deprecated in favor of the new\n+  `setfeerate` RPC described in the \"New RPCs\" section. This change is part of a\n+  larger migration from BTC/kvB to sat/vB units for fee rates. (#20391)\n \n New RPCs\n ------------"
      },
      {
        "sha": "ad727c857495ff10d496adcc98ff90817ce78921",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3725a3f180fa8f6edeee2fdca3e09b6022c5eb21/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3725a3f180fa8f6edeee2fdca3e09b6022c5eb21/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=3725a3f180fa8f6edeee2fdca3e09b6022c5eb21",
        "patch": "@@ -4687,7 +4687,6 @@ static const CRPCCommand commands[] =\n     { \"wallet\",             &setfeerate,                     },\n     { \"wallet\",             &sethdseed,                      },\n     { \"wallet\",             &setlabel,                       },\n-    { \"wallet\",             &settxfee,                       },\n     { \"wallet\",             &setwalletflag,                  },\n     { \"wallet\",             &signmessage,                    },\n     { \"wallet\",             &signrawtransactionwithwallet,   },\n@@ -4698,6 +4697,7 @@ static const CRPCCommand commands[] =\n     { \"wallet\",             &walletpassphrase,               },\n     { \"wallet\",             &walletpassphrasechange,         },\n     { \"wallet\",             &walletprocesspsbt,              },\n+    { \"hidden\",             &settxfee,                       },\n };\n // clang-format on\n     return MakeSpan(commands);"
      },
      {
        "sha": "8ceba825c6959b896e493b6a6ef39d892dab7472",
        "filename": "test/functional/rpc_help.py",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3725a3f180fa8f6edeee2fdca3e09b6022c5eb21/test/functional/rpc_help.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3725a3f180fa8f6edeee2fdca3e09b6022c5eb21/test/functional/rpc_help.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_help.py?ref=3725a3f180fa8f6edeee2fdca3e09b6022c5eb21",
        "patch": "@@ -53,6 +53,7 @@ def run_test(self):\n         self.dump_help()\n         if self.is_wallet_compiled():\n             self.wallet_help()\n+            self.test_hidden_wallet_rpcs()\n \n     def test_client_conversion_table(self):\n         file_conversion_table = os.path.join(self.config[\"environment\"][\"SRCDIR\"], 'src', 'rpc', 'client.cpp')\n@@ -128,6 +129,11 @@ def wallet_help(self):\n         assert 'getnewaddress ( \"label\" \"address_type\" )' in self.nodes[0].help('getnewaddress')\n         assert \"setfeerate amount\" in self.nodes[0].help(\"setfeerate\")\n \n+    def test_hidden_wallet_rpcs(self):\n+        self.log.info(\"Test hidden wallet RPCs\")\n+        assert \"settxfee\" not in self.nodes[0].help()  # settxfee help is hidden from general help...\n+        assert \"settxfee amount\" in self.nodes[0].help(\"settxfee\")  # ...but can be called directly\n+\n \n if __name__ == '__main__':\n     HelpRpcTest().main()"
      }
    ]
  },
  {
    "sha": "1002e2d0d7f10221a3542391a429978cdcf0d426",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxMDAyZTJkMGQ3ZjEwMjIxYTM1NDIzOTFhNDI5OTc4Y2RjZjBkNDI2",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-11-27T15:06:09Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-01-28T20:24:43Z"
      },
      "message": "wallet, test: upgradewallet follow-ups\n\nper PR 20403 review feedback by MarcoFalke",
      "tree": {
        "sha": "f8bbab98d4aba0f67044a0a204c086e9544ba372",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f8bbab98d4aba0f67044a0a204c086e9544ba372"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1002e2d0d7f10221a3542391a429978cdcf0d426",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAmATHYwACgkQT1chs9Dj\nkh2uqQ//b9RhcDG28EP1jIIGJujMTCQAOReV3yM/RlVEAZAHRLvgNbqS9YMaKkua\nhiguF1gPAwkCb59eWrYLZIhjPrR0ZcHTwcZZMCF/xk4/1B5rEcFbFQO+6fgNBNJv\nlm7nJpYMYXPKqVRf1Jrh2nm/fF8rKFzXSoklGitrGu0gdlWJIWQ5AYnApoqCuWzR\niZKbftQw7exWTk4adpWttVrZnuKhejrluPP5o3pBvBOop6X+oFqRyCl00MtIE/q7\nN6Pw1gbuo5bPRGXXQubSKAZJf9OqJAr0ePkHZdKWAmv4dnrAQ98G5kJnpQXIzkH9\nayjH2vjiT073W+MVGGKaeoCFi7NyqhJyZHdeT8m6wJZmDG8P4AttTnjpHhf5DA0/\n7qa6PCbH7Yhn+kwTHkScLNAKZy7b7NU9N62pfQ+mCcHHKMti6sdGmpt83XtFiYux\nW1DUjR+USq+4qF0B/9iAz6GiwPvrq32ADu4CuBvttSGBhtoibrO8utevr5uJAebI\n3hxivkNQPkMQ19lAnY9hEzYd0wuqAegFL2EvUmphHixczHmsE7un3xnvrIUc8YSV\n8mqRs3tZ9xJP1MbnwyaKQu11dr3DBcQJklJseLifmcijmIfkO1KIMEZj7h7KXs0/\nigZUfdofyf+0AetXfaS3GImfP5mXj7CPFmAoZho3uDn4YF6WIuI=\n=r8Kg\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIKrXHnk4F8EUFhT0yHd9mr/gIRd1TpZqtBofZzLAR11zCP/wEC46lN/vEHBP\nmWFfURM0X8AI8QRgEx2N8AhfDfIUis1BrQCD3+MNLvkMjiMiaHR0cHM6Ly9idGMu\nY2FsZW5kYXIuY2F0YWxsYXh5LmNvbf/wEEEhwXBqeUU/JV5PX68NI9wI8QRgEx2N\n8AgJ+WajYr5+pQCD3+MNLvkMji4taHR0cHM6Ly9hbGljZS5idGMuY2FsZW5kYXIu\nb3BlbnRpbWVzdGFtcHMub3Jn8BBv0Br7CaKQYWAQ8u1AeLI/CPEEYBMdjfAIICC/\n/rm2Vg0Ag9/jDS75DI4sK2h0dHBzOi8vYm9iLmJ0Yy5jYWxlbmRhci5vcGVudGlt\nZXN0YW1wcy5vcmc=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree f8bbab98d4aba0f67044a0a204c086e9544ba372\nparent 3725a3f180fa8f6edeee2fdca3e09b6022c5eb21\nauthor Jon Atack <jon@atack.com> 1606489569 +0100\ncommitter Jon Atack <jon@atack.com> 1611865483 +0100\n\nwallet, test: upgradewallet follow-ups\n\nper PR 20403 review feedback by MarcoFalke\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1002e2d0d7f10221a3542391a429978cdcf0d426",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1002e2d0d7f10221a3542391a429978cdcf0d426",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1002e2d0d7f10221a3542391a429978cdcf0d426/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3725a3f180fa8f6edeee2fdca3e09b6022c5eb21",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3725a3f180fa8f6edeee2fdca3e09b6022c5eb21",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3725a3f180fa8f6edeee2fdca3e09b6022c5eb21"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "0d649deed3dd7372f7905a444dcb3c3d92c0e880",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1002e2d0d7f10221a3542391a429978cdcf0d426/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1002e2d0d7f10221a3542391a429978cdcf0d426/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=1002e2d0d7f10221a3542391a429978cdcf0d426",
        "patch": "@@ -4601,15 +4601,15 @@ static RPCHelpMan upgradewallet()\n             result = strprintf(\"Wallet upgraded successfully from version %i to version %i.\", previous_version, current_version);\n         }\n     }\n+    CHECK_NONFATAL(result.empty() != error.empty());\n \n     UniValue obj(UniValue::VOBJ);\n     obj.pushKV(\"wallet_name\", pwallet->GetName());\n     obj.pushKV(\"previous_version\", previous_version);\n     obj.pushKV(\"current_version\", current_version);\n-    if (!result.empty()) {\n+    if (error.empty()) {\n         obj.pushKV(\"result\", result);\n     } else {\n-        CHECK_NONFATAL(!error.empty());\n         obj.pushKV(\"error\", error.original);\n     }\n     return obj;"
      },
      {
        "sha": "61736c2775fabaf3e62215ac9c14fd8a605354a5",
        "filename": "test/functional/wallet_upgradewallet.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1002e2d0d7f10221a3542391a429978cdcf0d426/test/functional/wallet_upgradewallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1002e2d0d7f10221a3542391a429978cdcf0d426/test/functional/wallet_upgradewallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_upgradewallet.py?ref=1002e2d0d7f10221a3542391a429978cdcf0d426",
        "patch": "@@ -90,7 +90,7 @@ def dumb_sync_blocks(self):\n             v16_3_node.submitblock(b)\n         assert_equal(v16_3_node.getblockcount(), to_height)\n \n-    def test_upgradewallet(self, wallet, previous_version, requested_version=None, expected_version=None):\n+    def test_upgradewallet(self, wallet, *, previous_version, requested_version=None, expected_version=None):\n         unchanged = expected_version == previous_version\n         new_version = previous_version if unchanged else expected_version if expected_version else requested_version\n         assert_equal(wallet.getwalletinfo()[\"walletversion\"], previous_version)\n@@ -104,7 +104,7 @@ def test_upgradewallet(self, wallet, previous_version, requested_version=None, e\n         )\n         assert_equal(wallet.getwalletinfo()[\"walletversion\"], new_version)\n \n-    def test_upgradewallet_error(self, wallet, previous_version, requested_version, msg):\n+    def test_upgradewallet_error(self, wallet, *, previous_version, requested_version, msg):\n         assert_equal(wallet.getwalletinfo()[\"walletversion\"], previous_version)\n         assert_equal(wallet.upgradewallet(requested_version),\n             {"
      }
    ]
  }
]