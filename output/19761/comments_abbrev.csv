practicalswift,2020-08-18 17:22:25,Concept ACK,https://github.com/bitcoin/bitcoin/pull/19761#issuecomment-675609384,675609384,
theuni,2020-08-18 18:39:34,"Concept ACK. This will make simple bumps more complicated, but arguably that's a good thing.\n\nAlso +1 for self-documentation.",https://github.com/bitcoin/bitcoin/pull/19761#issuecomment-675647273,675647273,
laanwj,2020-08-19 09:07:45,"Lovely PR title :smile: \n\nConcept ACK. I remember having some discussions about this in the past (with @dongcarl ?). It has always bothered me that sed can fail silently. This is especially problematic because changes can be lost without noticing when bumping versions. This has in the past resulted in losing propagation of hardening flags and such.\n",https://github.com/bitcoin/bitcoin/pull/19761#issuecomment-675995569,675995569,
hebasto,2020-08-19 10:23:09,Concept ACK.,https://github.com/bitcoin/bitcoin/pull/19761#issuecomment-676098072,676098072,
dongcarl,2020-08-19 15:12:07,"Concept ACK!\nAll the ways I've tried fixing this before weren't satisfactory, and this is a nice and simple approach.\n\nOne q: I often see `-N` being using in most `patch` invocations, would we want that? ",https://github.com/bitcoin/bitcoin/pull/19761#issuecomment-676487024,676487024,
fanquake,2020-08-20 13:27:19,"I'm glad everyone agrees with the approach.  I've pushed a fix the docs in one patch file.\n\n> One q: I often see -N being using in most patch invocations, would we want that?\n\nI've done some testing and think it could be a worthwhile addition. It seems if anything it causes patch to ""fail faster"". i.e chain applying the same patch with and without it:\n```bash\n# no -N\npatch -p1 -i a.p",https://github.com/bitcoin/bitcoin/pull/19761#issuecomment-677664103,677664103,
DrahtBot,2020-08-20 19:56:50,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19785 (build: lrelease requires xml if not cross-building by hebasto)\n* #19764 (depends: Split boost into build/host pac",https://github.com/bitcoin/bitcoin/pull/19761#issuecomment-677872101,677872101,
hebasto,2020-08-24 09:11:14,"Reviewing commits:\n- [x] 5f98794770b7152280ab388cf1682a73f772e99a _""build: use patch rather than sed in bdb package""_\n- [x] 53afb710a3a05f813b46a5959e7d9047080e54d4 _""build: use patch rather than sed in Boost package""_\n- [ ] 45f33606377cda7065fe30aa4eeee5033e9b0699 _""build: use patch rather than sed in fontconfig package""_\n- [x] b2140672ee708441e1652b8153400b852c522f1c _""build: use patch r",https://github.com/bitcoin/bitcoin/pull/19761#issuecomment-679008122,679008122,
DrahtBot,2020-08-25 03:41:25,"<!--cf906140f33d8803c4a75a2196329ecb-->\nüêô This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a ""draft"".</sub>",https://github.com/bitcoin/bitcoin/pull/19761#issuecomment-679533527,679533527,
fanquake,2020-08-25 07:28:36,"> nit: in 8344551 would it better to place a commit message into the patch code?\n\nThanks. This is what I meant to do, but I only added it to the commit body.\n\n> btw, what commits are referred to in patch fist lines? GitHub fails to find them :)\n\nI've just been creating temporary local repos using the package source; so none of the commits have been pushed anywhere.",https://github.com/bitcoin/bitcoin/pull/19761#issuecomment-679854979,679854979,
MarcoFalke,2020-08-25 13:42:32,I think travis fails in the line in the yaml that says `Temporary workaround for https://github.com/bitcoin/bitcoin/issues/16368`. Maybe this needs the ..4 changed to ..5 as another workaround? (Unless you want to fix the issue),https://github.com/bitcoin/bitcoin/pull/19761#issuecomment-680033040,680033040,
hebasto,2020-08-25 15:59:04,"Hmmm... Travis fails on ARM due to the _patch_ error (https://travis-ci.org/github/hebasto/bitcoin/builds/721048554#L2040):\n```\npatching file qttranslations/translations/translations.pro\nHunk 1 FAILED 107/107.\n updateqm.output = $$MODULE_BASE_OUTDIR/translations/${QMAKE_FILE_BASE}.qm\n updateqm.commands = $$LRELEASE ${QMAKE_FILE_IN} -qm ${QMAKE_FILE_OUT}\n silent:updateqm.commands = @ech",https://github.com/bitcoin/bitcoin/pull/19761#issuecomment-680115107,680115107,
MarcoFalke,2020-08-25 16:28:42,"oh, maybe it needs the fuzz resolved cleanly in the patch file?",https://github.com/bitcoin/bitcoin/pull/19761#issuecomment-680132636,680132636,
hebasto,2020-08-25 16:29:49,"> oh, maybe it needs the fuzz resolved cleanly in the patch file?\n\ntesting right now :)",https://github.com/bitcoin/bitcoin/pull/19761#issuecomment-680133224,680133224,
hebasto,2020-08-25 16:32:37,"> oh, maybe it needs the fuzz resolved cleanly in the patch file?\n\nTravis ARM build uses BusyBox's `patch` command.",https://github.com/bitcoin/bitcoin/pull/19761#issuecomment-680134738,680134738,
MarcoFalke,2020-08-25 18:10:30,"I think busybox can't handle fuzz. Does removing it help?\n\n```diff\ndiff --git a/depends/patches/qt/drop_lrelease_dependency.patch b/depends/patches/qt/drop_lrelease_dependency.patch\nindex 8b3472b675..75aa5f2629 100644\n--- a/depends/patches/qt/drop_lrelease_dependency.patch\n+++ b/depends/patches/qt/drop_lrelease_dependency.patch\n@@ -14,11 +14,7 @@ diff --git a/qttranslations/translati",https://github.com/bitcoin/bitcoin/pull/19761#issuecomment-680187253,680187253,
hebasto,2020-08-25 18:13:13,"~Here is a branch with two fix commits on top: https://github.com/hebasto/bitcoin/commits/pr19761-fixed2~\n\nUPDATE: Marco's solution works.",https://github.com/bitcoin/bitcoin/pull/19761#issuecomment-680188629,680188629,
hebasto,2020-08-25 23:20:06,"> I think busybox can't handle fuzz. Does removing it help?\n> \n> ```diff\n> diff --git a/depends/patches/qt/drop_lrelease_dependency.patch b/depends/patches/qt/drop_lrelease_dependency.patch\n> index 8b3472b675..75aa5f2629 100644\n> --- a/depends/patches/qt/drop_lrelease_dependency.patch\n> +++ b/depends/patches/qt/drop_lrelease_dependency.patch\n> @@ -14,11 +14,7 @@ diff --git a/qttransl",https://github.com/bitcoin/bitcoin/pull/19761#issuecomment-680316070,680316070,
hebasto,2020-08-25 23:24:42,"@fanquake If/when you will update this pull, mind removing intermediate commit ids as they seem confusing.",https://github.com/bitcoin/bitcoin/pull/19761#issuecomment-680317385,680317385,
hebasto,2020-08-26 00:00:34,"I've made gitian builds with Marco's suggestion, and there are no ""Hunk succeeded ... with fuzz"" in logs.",https://github.com/bitcoin/bitcoin/pull/19761#issuecomment-680326878,680326878,
fanquake,2020-08-26 05:15:25,"I've updated bbc01a753d40488fa1469c87b31e7a12ddc8b329 to fix the patch. Is there a distro that currently uses busybox patch out of the box? Even Alpine, which is based on busybox, [now uses GNU patch](https://git.alpinelinux.org/aports/commit/main/busybox/busyboxconfig?id=38ef6cebfd8498e03f0636b00c62bdf42fbf5eb2)  by default.\n\n```bash\npatch --version\nGNU patch 2.7.6\nCopyright (C) 2003, 2",https://github.com/bitcoin/bitcoin/pull/19761#issuecomment-680652468,680652468,
MarcoFalke,2020-08-26 05:40:48,"ok, then maybe commit 8f8af457d282534bbe3678eb068ae671f7f74da2 (skip busybox patch) is the way to go",https://github.com/bitcoin/bitcoin/pull/19761#issuecomment-680668092,680668092,
fanquake,2020-08-26 05:44:00,"> ok, then maybe commit 8f8af45 (skip busybox patch) is the way to go\n\nI'd rather leave this as is for now. People will still be be building on older versions of Alpine (it's also used as a base for a lot of Docker containers), so we might as well have a sanity check that our patches work.",https://github.com/bitcoin/bitcoin/pull/19761#issuecomment-680669121,680669121,
DrahtBot,2020-08-26 15:38:30,<!--9cd9c72976c961c55c7acef8f6ba82cd-->\n### Guix builds\n\n| File | commit f8462a6d2794be728cf8550f45d19a354aae59cf<br>(master) | commit d8cd7fb58afe02e6d9521da1b74876bc78d3987e<br>(master and this pull) |\n|--|--|--|\n| *-aarch64-linux-gnu-debug.tar.gz | [`8ec75599e3120659...`](https://drahtbot.space/guix/bitcoin/bitcoin/f8462a6d2794be728cf8550f45d19a354aae59cf/bitcoin-f8462a6d2794-aarch64-linux,https://github.com/bitcoin/bitcoin/pull/19761#issuecomment-680957988,680957988,
DrahtBot,2020-08-27 16:09:55,<!--a722867cd34abeea1fadc8d60700f111-->\n### Gitian builds\n\n| File | commit 93ab136a33e46080c8aa02d59fb7c2a8d03a3387<br>(master) | commit cc6c98901ce0a8e9e1af6181a3c5713048dc1793<br>(master and this pull) |\n|--|--|--|\n| *-aarch64-linux-gnu-debug.tar.gz | [`d9677652e379d0fb...`](https://drahtbot.space/gitian/bitcoin/bitcoin/93ab136a33e46080c8aa02d59fb7c2a8d03a3387/bitcoin-93ab136a33e4-aarch64-l,https://github.com/bitcoin/bitcoin/pull/19761#issuecomment-682045111,682045111,
hebasto,2020-08-22 11:47:56,Happy with that! Was going to submit a pull to remove it :),https://github.com/bitcoin/bitcoin/pull/19761#discussion_r475082387,475082387,depends/packages/qt.mk
hebasto,2020-08-24 10:42:13,"45f33606377cda7065fe30aa4eeee5033e9b0699\n\nI suggest to apply this patch to `Makefile.in` and move all patching work into the `preprocess_cmds` stage.\nPatching the source file rather the generated one is simpler to verify and maintain, no?",https://github.com/bitcoin/bitcoin/pull/19761#discussion_r475511755,475511755,depends/patches/fontconfig/gperf_header_regen.patch
hebasto,2020-08-24 15:29:45,"e2b18a4120f344d2043329f0382e77e7fe9ae933\nnano-nit:\n```suggestion\n    See #14348.\n```",https://github.com/bitcoin/bitcoin/pull/19761#discussion_r475701044,475701044,depends/patches/qt/freetype_back_compat.patch
hebasto,2020-08-24 16:23:25,"37d989859e275adac80c9ccf218f5024336f0de2\nHere\n```suggestion\n    Qts buildsystem insists on using the installed lrelease, but gets\n```\nand in the patch name.",https://github.com/bitcoin/bitcoin/pull/19761#discussion_r475736184,475736184,depends/patches/qt/drop_ltranslate_dependency.patch
hebasto,2020-08-24 16:55:11,"Is it worth to mention that this patch could be skipped on miniupnpc versions 2.1+ ?\nSee: https://github.com/miniupnp/miniupnp/commit/9663c55c61408fdcc39a82987d2243f816b22932",https://github.com/bitcoin/bitcoin/pull/19761#discussion_r475757861,475757861,depends/patches/miniupnpc/dont_use_wingen.patch
hebasto,2020-08-24 17:10:43,"Oh, apparently, both `sed` commands fix one issue with cross-compiling for Windows.\nMaybe it would better do not touch them at all (as we are not able to transform both to `patch`), no?",https://github.com/bitcoin/bitcoin/pull/19761#discussion_r475766788,475766788,depends/packages/miniupnpc.mk
fanquake,2020-08-25 05:50:37,Will be fixed in the next push.,https://github.com/bitcoin/bitcoin/pull/19761#discussion_r476193108,476193108,depends/patches/qt/freetype_back_compat.patch
fanquake,2020-08-25 05:50:55,Updated in the next push.,https://github.com/bitcoin/bitcoin/pull/19761#discussion_r476193245,476193245,depends/patches/qt/drop_ltranslate_dependency.patch
fanquake,2020-08-25 05:55:30,Will be added in the next push.,https://github.com/bitcoin/bitcoin/pull/19761#discussion_r476194764,476194764,depends/patches/miniupnpc/dont_use_wingen.patch
fanquake,2020-08-25 05:56:30,I think it's fine. I also think we can probably drop (at least the version part of) the other `sed`. From what I can tell the output will be deterministic. ,https://github.com/bitcoin/bitcoin/pull/19761#discussion_r476195048,476195048,depends/packages/miniupnpc.mk
hebasto,2020-08-25 05:58:09,"> I think it's fine. I also think we can probably drop (at least the version part of) the other `sed`. From what I can tell the output will be deterministic.\n\nI've tried. Windows cross-compiling fails.",https://github.com/bitcoin/bitcoin/pull/19761#discussion_r476195550,476195550,depends/packages/miniupnpc.mk
hebasto,2020-08-25 06:00:25,We could drop it if patch `Makefile.mingw` to do not use `wingenminiupnpcstrings` for the `miniupnpcstrings.h` target.,https://github.com/bitcoin/bitcoin/pull/19761#discussion_r476196343,476196343,depends/packages/miniupnpc.mk
fanquake,2020-08-25 06:02:56,"> I've tried. Windows cross-compiling fails.\n\nI think we are talking about different things. I'm talking about dropping `-e 's|MINIUPNPC_VERSION_STRING \""version\""|MINIUPNPC_VERSION_STRING \""$($(package)_version)\""|'` from the `sed` usage above. I'm not sure why that would cause a compile failure.",https://github.com/bitcoin/bitcoin/pull/19761#discussion_r476197173,476197173,depends/packages/miniupnpc.mk
hebasto,2020-08-25 06:05:12,"It will generate ill-formed `miniupnpcstrings.h`, no?",https://github.com/bitcoin/bitcoin/pull/19761#discussion_r476197889,476197889,depends/packages/miniupnpc.mk
hebasto,2020-08-25 06:09:19,"https://github.com/miniupnp/miniupnp/blob/1337158fcff401def996e211d5940c9f74f92b51/miniupnpc/Makefile.mingw#L77-L78:\n```\nminiupnpcstrings.h: miniupnpcstrings.h.in wingenminiupnpcstrings\n	wingenminiupnpcstrings $< $@\n```",https://github.com/bitcoin/bitcoin/pull/19761#discussion_r476199242,476199242,depends/packages/miniupnpc.mk
fanquake,2020-08-25 06:18:28,"Everything compiles, you just end up with an incorrect User-Agent: `User-Agent: x86_64-w64-mingw32, UPnP/1.1, MiniUPnPc/version`. I'll leave this as and we can follow up if/when miniupnpc is next updated. I've updated the patch to mention upstream changes.",https://github.com/bitcoin/bitcoin/pull/19761#discussion_r476202470,476202470,depends/packages/miniupnpc.mk
fanquake,2020-08-25 06:51:13,I've moved the patching to preprocessing.,https://github.com/bitcoin/bitcoin/pull/19761#discussion_r476216132,476216132,depends/patches/fontconfig/gperf_header_regen.patch
hebasto,2020-08-25 07:59:34,"Probably, removing `miniupnpcstrings.h` target completely is more correct patch.",https://github.com/bitcoin/bitcoin/pull/19761#discussion_r476252648,476252648,depends/patches/miniupnpc/dont_use_wingen.patch
fanquake,2020-08-25 08:03:09,I'd rather keep these as the equivalents of the commands they are replacing.,https://github.com/bitcoin/bitcoin/pull/19761#discussion_r476254806,476254806,depends/patches/miniupnpc/dont_use_wingen.patch
hebasto,2020-08-25 08:06:08,"```diff\n--- Makefile.mingw.OLD	2016-01-19 12:26:58.000000000 +0200\n+++ Makefile.mingw.NEW	2020-08-25 11:03:57.144468741 +0300\n@@ -70,13 +70,6 @@\n listdevices: listdevices.o libminiupnpc.a\n 	$(CC) -o $@ $^ $(LDLIBS)\n \n-wingenminiupnpcstrings:	wingenminiupnpcstrings.o\n-\n-wingenminiupnpcstrings.o:	wingenminiupnpcstrings.c\n-\n-miniupnpcstrings.h: miniupnpcstrings.h.in wingenminiup",https://github.com/bitcoin/bitcoin/pull/19761#discussion_r476257684,476257684,depends/patches/miniupnpc/dont_use_wingen.patch
hebasto,2020-08-25 08:06:49,"> I'd rather keep these as the equivalents of the commands they are replacing.\n\nok",https://github.com/bitcoin/bitcoin/pull/19761#discussion_r476258100,476258100,depends/patches/miniupnpc/dont_use_wingen.patch
hebasto,2020-08-25 17:16:24,"2c5c41344976cf4aba45621a8b99e6df3a2de33b\n\nThe following change makes [`busybox patch`](https://github.com/bitcoin/bitcoin/pull/19761#issuecomment-680134738) command works correctly, and it fixes Travis ARM build:\n```suggestion\n-updateqm.depends = $$LRELEASE_EXE\n+\n```",https://github.com/bitcoin/bitcoin/pull/19761#discussion_r476609292,476609292,depends/patches/qt/drop_lrelease_dependency.patch
hebasto,2020-08-25 17:32:10,"Hmm, it seems work for busybox patch only.",https://github.com/bitcoin/bitcoin/pull/19761#discussion_r476621461,476621461,depends/patches/qt/drop_lrelease_dependency.patch
theuni,2020-08-26 20:07:26,"Could you please explain the removal? I'm sure it's fine, I'm just curious what's changed upstream.\n\nIIRC this was purely a build speedup, just skipping building sql stuff. I suppose qt now correctly avoids building that when not needed?",https://github.com/bitcoin/bitcoin/pull/19761#discussion_r477558956,477558956,depends/packages/qt.mk
theuni,2020-08-26 20:14:27,Agree with both of these comments :),https://github.com/bitcoin/bitcoin/pull/19761#discussion_r477562397,477562397,depends/patches/miniupnpc/dont_use_wingen.patch
theuni,2020-08-26 20:33:30,"I believe this is/was only necessary because of the funky way we build qt to avoid building a bunch of unneeded stuff. If we ever move to a simple 'make' for qt (rather than the 4 we do now), it should be able to handle all of this for us.\n\nThat may be worth investigating as a follow-up, it's been a long time since we've revisited it. Maybe qt's build has reduced unnecessary compiles since the",https://github.com/bitcoin/bitcoin/pull/19761#discussion_r477572243,477572243,depends/patches/qt/drop_lrelease_dependency.patch
hebasto,2020-08-26 21:17:25,"https://code.qt.io/cgit/qt/qtbase.git/tree/src/src.pro?h=5.9.8#n153:\n```\nqtConfig(network) {\n    SUBDIRS += src_network\n    src_plugins.depends += src_network\n}\nqtConfig(sql) {\n    SUBDIRS += src_sql\n    src_plugins.depends += src_sql\n}\n```",https://github.com/bitcoin/bitcoin/pull/19761#discussion_r477594804,477594804,depends/packages/qt.mk
fanquake,2020-08-27 06:38:43,A revisit into how we are building Qt will happen as part of #19716 (which is also why I wanted to keep this a sed -> patch migration with no additional changes). I think there's a good chance a bunch of complexity is going to disappear.,https://github.com/bitcoin/bitcoin/pull/19761#discussion_r478186321,478186321,depends/patches/qt/drop_lrelease_dependency.patch
