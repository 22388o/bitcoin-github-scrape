[
  {
    "sha": "b8585384da2c5de236431ebb71eec41aaac66b98",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiODU4NTM4NGRhMmM1ZGUyMzY0MzFlYmI3MWVlYzQxYWFhYzY2Yjk4",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2013-05-07T16:33:52Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2013-07-22T10:10:57Z"
      },
      "message": "Detect any sufficiently long fork and add a warning.\n\nSuch a fork is defined as being at least 7 blocks long and\nhaving a tip which is within 72 blocks of our best block.",
      "tree": {
        "sha": "7e18ffd4c1c63cbd7dde9cf42db84f2d5b850e49",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7e18ffd4c1c63cbd7dde9cf42db84f2d5b850e49"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b8585384da2c5de236431ebb71eec41aaac66b98",
      "comment_count": 2,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b8585384da2c5de236431ebb71eec41aaac66b98",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b8585384da2c5de236431ebb71eec41aaac66b98",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b8585384da2c5de236431ebb71eec41aaac66b98/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4eab2dcc8158860d2575bb26ee46c29bd0672968",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4eab2dcc8158860d2575bb26ee46c29bd0672968",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4eab2dcc8158860d2575bb26ee46c29bd0672968"
      }
    ],
    "stats": {
      "total": 61,
      "additions": 56,
      "deletions": 5
    },
    "files": [
      {
        "sha": "2e79c874d71b5abfe152fe133a52f5579e0e984f",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 56,
        "deletions": 5,
        "changes": 61,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b8585384da2c5de236431ebb71eec41aaac66b98/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b8585384da2c5de236431ebb71eec41aaac66b98/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=b8585384da2c5de236431ebb71eec41aaac66b98",
        "patch": "@@ -1383,6 +1383,56 @@ bool IsInitialBlockDownload()\n             pindexBest->GetBlockTime() < GetTime() - 24 * 60 * 60);\n }\n \n+bool fLargeWorkForkFound = false;\n+CBlockIndex *pindexBestForkTip = NULL, *pindexBestForkBase = NULL;\n+\n+void CheckForkWarningConditions()\n+{\n+    // If our best fork is no longer within 72 blocks (+/- 12 hours if no one mines it)\n+    // of our head, drop it\n+    if (pindexBestForkTip && nBestHeight - pindexBestForkTip->nHeight >= 72)\n+        pindexBestForkTip = NULL;\n+\n+    if (pindexBestForkTip || nBestInvalidWork > nBestChainWork + (pindexBest->GetBlockWork() * 6).getuint256())\n+    {\n+        fLargeWorkForkFound = true;\n+        printf(\"CheckForkWarningConditions: Warning: Displayed transactions may not be correct! You may need to upgrade, or other nodes may need to upgrade.\\n\");\n+    } else\n+        fLargeWorkForkFound = false;\n+}\n+\n+void CheckForkWarningConditionsOnNewFork(CBlockIndex* pindexNewForkTip)\n+{\n+    // If we are on a fork that is sufficiently large, set a warning flag\n+    CBlockIndex* pfork = pindexNewForkTip;\n+    CBlockIndex* plonger = pindexBest;\n+    while (pfork && pfork != plonger)\n+    {\n+        while (plonger && plonger->nHeight > pfork->nHeight)\n+            plonger = plonger->pprev;\n+        if (pfork == plonger)\n+            break;\n+        pfork = pfork->pprev;\n+    }\n+\n+    // We define a condition which we should warn the user about as a fork of at least 7 blocks\n+    // who's tip is within 72 blocks (+/- 12 hours if no one mines it) of ours\n+    // We use 7 blocks rather arbitrarily as it represents just under 10% of sustained network\n+    // hash rate operating on the fork.\n+    // or a chain that is entirely longer than ours and invalid (note that this should be detected by both)\n+    // We define it this way because it allows us to only store the highest fork tip (+ base) which meets\n+    // the 7-block condition and from this always have the most-likely-to-cause-warning fork\n+    if (pfork && (!pindexBestForkTip || (pindexBestForkTip && pindexNewForkTip->nHeight > pindexBestForkTip->nHeight)) &&\n+            pindexNewForkTip->nChainWork - pfork->nChainWork > (pfork->GetBlockWork() * 7).getuint256() &&\n+            nBestHeight - pindexNewForkTip->nHeight < 72)\n+    {\n+        pindexBestForkTip = pindexNewForkTip;\n+        pindexBestForkBase = pfork;\n+    }\n+\n+    CheckForkWarningConditions();\n+}\n+\n void static InvalidChainFound(CBlockIndex* pindexNew)\n {\n     if (pindexNew->nChainWork > nBestInvalidWork)\n@@ -1398,8 +1448,7 @@ void static InvalidChainFound(CBlockIndex* pindexNew)\n     printf(\"InvalidChainFound:  current best=%s  height=%d  log2_work=%.8g  date=%s\\n\",\n       hashBestChain.ToString().c_str(), nBestHeight, log(nBestChainWork.getdouble())/log(2.0),\n       DateTimeStrFormat(\"%Y-%m-%d %H:%M:%S\", pindexBest->GetBlockTime()).c_str());\n-    if (pindexBest && nBestInvalidWork > nBestChainWork + (pindexBest->GetBlockWork() * 6).getuint256())\n-        printf(\"InvalidChainFound: Warning: Displayed transactions may not be correct! You may need to upgrade, or other nodes may need to upgrade.\\n\");\n+    CheckForkWarningConditions();\n }\n \n void static InvalidBlockFound(CBlockIndex *pindex) {\n@@ -2110,11 +2159,14 @@ bool AddToBlockIndex(CBlock& block, CValidationState& state, const CDiskBlockPos\n \n     if (pindexNew == pindexBest)\n     {\n+        // Clear fork warning if its no longer applicable\n+        CheckForkWarningConditions();\n         // Notify UI to display prev block's coinbase if it was ours\n         static uint256 hashPrevBestCoinBase;\n         UpdatedTransaction(hashPrevBestCoinBase);\n         hashPrevBestCoinBase = block.GetTxHash(0);\n-    }\n+    } else\n+        CheckForkWarningConditionsOnNewFork(pindexNew);\n \n     if (!pblocktree->Flush())\n         return state.Abort(_(\"Failed to sync block index\"));\n@@ -3073,8 +3125,7 @@ string GetWarnings(string strFor)\n         strStatusBar = strMiscWarning;\n     }\n \n-    // Longer invalid proof-of-work chain\n-    if (pindexBest && nBestInvalidWork > nBestChainWork + (pindexBest->GetBlockWork() * 6).getuint256())\n+    if (fLargeWorkForkFound)\n     {\n         nPriority = 2000;\n         strStatusBar = strRPC = _(\"Warning: Displayed transactions may not be correct! You may need to upgrade, or other nodes may need to upgrade.\");"
      }
    ]
  },
  {
    "sha": "f89faa258404d2e6fd4300990275cd2439e51255",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmODlmYWEyNTg0MDRkMmU2ZmQ0MzAwOTkwMjc1Y2QyNDM5ZTUxMjU1",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2013-05-07T16:37:37Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2013-07-22T10:11:46Z"
      },
      "message": "Call the -alertnotify script when we see a long or invalid fork.",
      "tree": {
        "sha": "a24b2cdb8b80d31b872d4df9e65b538b873b14e9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a24b2cdb8b80d31b872d4df9e65b538b873b14e9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f89faa258404d2e6fd4300990275cd2439e51255",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f89faa258404d2e6fd4300990275cd2439e51255",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f89faa258404d2e6fd4300990275cd2439e51255",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f89faa258404d2e6fd4300990275cd2439e51255/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b8585384da2c5de236431ebb71eec41aaac66b98",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b8585384da2c5de236431ebb71eec41aaac66b98",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b8585384da2c5de236431ebb71eec41aaac66b98"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 11,
      "deletions": 1
    },
    "files": [
      {
        "sha": "14617809ecf14e220177c75706a025a646d34a8e",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f89faa258404d2e6fd4300990275cd2439e51255/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f89faa258404d2e6fd4300990275cd2439e51255/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=f89faa258404d2e6fd4300990275cd2439e51255",
        "patch": "@@ -225,7 +225,7 @@ std::string HelpMessage()\n     strUsage += \"  -rpcthreads=<n>        \" + _(\"Set the number of threads to service RPC calls (default: 4)\") + \"\\n\";\n     strUsage += \"  -blocknotify=<cmd>     \" + _(\"Execute command when the best block changes (%s in cmd is replaced by block hash)\") + \"\\n\";\n     strUsage += \"  -walletnotify=<cmd>    \" + _(\"Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)\") + \"\\n\";\n-    strUsage += \"  -alertnotify=<cmd>     \" + _(\"Execute command when a relevant alert is received (%s in cmd is replaced by message)\") + \"\\n\";\n+    strUsage += \"  -alertnotify=<cmd>     \" + _(\"Execute command when a relevant alert is received or we see a really long fork (%s in cmd is replaced by message)\") + \"\\n\";\n     strUsage += \"  -upgradewallet         \" + _(\"Upgrade wallet to latest format\") + \"\\n\";\n     strUsage += \"  -keypool=<n>           \" + _(\"Set key pool size to <n> (default: 100)\") + \"\\n\";\n     strUsage += \"  -rescan                \" + _(\"Rescan the block chain for missing wallet transactions\") + \"\\n\";"
      },
      {
        "sha": "b206b68036ee2964e1a6e89084880263d7a7c91e",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f89faa258404d2e6fd4300990275cd2439e51255/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f89faa258404d2e6fd4300990275cd2439e51255/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=f89faa258404d2e6fd4300990275cd2439e51255",
        "patch": "@@ -1395,6 +1395,16 @@ void CheckForkWarningConditions()\n \n     if (pindexBestForkTip || nBestInvalidWork > nBestChainWork + (pindexBest->GetBlockWork() * 6).getuint256())\n     {\n+        if (!fLargeWorkForkFound)\n+        {\n+            std::string strCmd = GetArg(\"-alertnotify\", \"\");\n+            if (!strCmd.empty())\n+            {\n+                std::string warning(\"'Warning: Large-work fork detected. You may need to upgrade, or other nodes may need to upgrade.'\");\n+                boost::replace_all(strCmd, \"%s\", warning);\n+                boost::thread t(runCommand, strCmd); // thread runs free\n+            }\n+        }\n         fLargeWorkForkFound = true;\n         printf(\"CheckForkWarningConditions: Warning: Displayed transactions may not be correct! You may need to upgrade, or other nodes may need to upgrade.\\n\");\n     } else"
      }
    ]
  },
  {
    "sha": "f65e7092a200ee6e9453058c3dafbab62d9b4dcc",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmNjVlNzA5MmEyMDBlZTZlOTQ1MzA1OGMzZGFmYmFiNjJkOWI0ZGNj",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2013-05-18T01:09:28Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2013-07-22T10:12:45Z"
      },
      "message": "Better warning/\"alert\" messages for large-work forks.",
      "tree": {
        "sha": "85980349580b4383572af029244c83a91a86b1db",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/85980349580b4383572af029244c83a91a86b1db"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f65e7092a200ee6e9453058c3dafbab62d9b4dcc",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f65e7092a200ee6e9453058c3dafbab62d9b4dcc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f65e7092a200ee6e9453058c3dafbab62d9b4dcc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f65e7092a200ee6e9453058c3dafbab62d9b4dcc/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f89faa258404d2e6fd4300990275cd2439e51255",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f89faa258404d2e6fd4300990275cd2439e51255",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f89faa258404d2e6fd4300990275cd2439e51255"
      }
    ],
    "stats": {
      "total": 31,
      "additions": 26,
      "deletions": 5
    },
    "files": [
      {
        "sha": "7dc51fc9dcdc1394b86ef85d8d437ff858872a9d",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 26,
        "deletions": 5,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f65e7092a200ee6e9453058c3dafbab62d9b4dcc/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f65e7092a200ee6e9453058c3dafbab62d9b4dcc/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=f65e7092a200ee6e9453058c3dafbab62d9b4dcc",
        "patch": "@@ -1384,6 +1384,7 @@ bool IsInitialBlockDownload()\n }\n \n bool fLargeWorkForkFound = false;\n+bool fLargeWorkInvalidChainFound = false;\n CBlockIndex *pindexBestForkTip = NULL, *pindexBestForkBase = NULL;\n \n void CheckForkWarningConditions()\n@@ -1400,15 +1401,30 @@ void CheckForkWarningConditions()\n             std::string strCmd = GetArg(\"-alertnotify\", \"\");\n             if (!strCmd.empty())\n             {\n-                std::string warning(\"'Warning: Large-work fork detected. You may need to upgrade, or other nodes may need to upgrade.'\");\n+                std::string warning = std::string(\"'Warning: Large-work fork detected, forking after block \") +\n+                                      pindexBestForkBase->phashBlock->ToString() + std::string(\"'\");\n                 boost::replace_all(strCmd, \"%s\", warning);\n                 boost::thread t(runCommand, strCmd); // thread runs free\n             }\n         }\n-        fLargeWorkForkFound = true;\n-        printf(\"CheckForkWarningConditions: Warning: Displayed transactions may not be correct! You may need to upgrade, or other nodes may need to upgrade.\\n\");\n-    } else\n+        if (pindexBestForkTip)\n+        {\n+            printf(\"CheckForkWarningConditions: Warning: Large valid fork found\\n  forking the chain at height %d (%s)\\n  lasting to height %d (%s).\\nChain state database corruption likely.\\n\",\n+                   pindexBestForkBase->nHeight, pindexBestForkBase->phashBlock->ToString().c_str(),\n+                   pindexBestForkTip->nHeight, pindexBestForkTip->phashBlock->ToString().c_str());\n+            fLargeWorkForkFound = true;\n+        }\n+        else\n+        {\n+            printf(\"CheckForkWarningConditions: Warning: Found invalid chain at least ~6 blocks longer than our best chain.\\nChain state database corruption likely.\\n\");\n+            fLargeWorkInvalidChainFound = true;\n+        }\n+    }\n+    else\n+    {\n         fLargeWorkForkFound = false;\n+        fLargeWorkInvalidChainFound = false;\n+    }\n }\n \n void CheckForkWarningConditionsOnNewFork(CBlockIndex* pindexNewForkTip)\n@@ -3138,7 +3154,12 @@ string GetWarnings(string strFor)\n     if (fLargeWorkForkFound)\n     {\n         nPriority = 2000;\n-        strStatusBar = strRPC = _(\"Warning: Displayed transactions may not be correct! You may need to upgrade, or other nodes may need to upgrade.\");\n+        strStatusBar = strRPC = _(\"Warning: The network does not appear to fully agree! Some miners appear to be experiencing issues.\");\n+    }\n+    else if (fLargeWorkInvalidChainFound)\n+    {\n+        nPriority = 2000;\n+        strStatusBar = strRPC = _(\"Warning: We do not appear to fully agree with our peers! You may need to upgrade, or other nodes may need to upgrade.\");\n     }\n \n     // Alerts"
      }
    ]
  }
]