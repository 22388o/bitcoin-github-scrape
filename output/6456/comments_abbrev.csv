dexX7,2015-07-18T09:28:40Z,"I can confirm this resolves #6443, thanks!\n\nAs far as I can see the output is as expected, except for the difficulty, returned by `""getinfo""`, which is shown in e notation (`""difficulty"": 4.656542373906925e-10` vs. `0.00000000`, as returned by Core 11.0). Edit: I wouldn't say this is bad though, as it offers a greater precision.\n",https://github.com/bitcoin/bitcoin/pull/6456#issuecomment-122519870,122519870,
laanwj,2015-07-20T08:52:31Z,"> as returned by Core 11.0). Edit: I wouldn't say this is bad though, as it offers a greater precision\n\nExactly - the fixed 8-digit formatting is for clarity in monetary amounts. \nEarlier it was applied to all numbers because JSON spirit had no other way.\nBut now we have full control over how values are rendered, and other floating point quantities such as bits, difficulty can be represented i",https://github.com/bitcoin/bitcoin/pull/6456#issuecomment-122815654,122815654,
jonasschnelli,2015-07-20T08:55:20Z,"Tested ACK.\n\nIf i understand this right, then there is a slightly API change. Every double/float (non-monetary) comes now with a precision of 16 instead of 8 (because of https://github.com/bitcoin/bitcoin/pull/6456/files#diff-0f1b401041a14398229cf7e31b6db7eeR89). Because we are using `oss << std::setprecision(16) << val` it will rewrite things like `0.00000000046565423739069247` into scientific ",https://github.com/bitcoin/bitcoin/pull/6456#issuecomment-122816087,122816087,
laanwj,2015-07-20T15:08:09Z,"Right. All numbers were 'cut' to %.8f notation, so it would have reported `0.00000000046565423739069247` as `0.00000000` instead of going to scientific notation.\nE.g. a difficulty smaller than a ""satoshi"" was reported as 0. This makes no sense at all for non-monetary numbers. This is all within the limits of number representation in the JSON protocol.\n",https://github.com/bitcoin/bitcoin/pull/6456#issuecomment-122913393,122913393,
jgarzik,2015-07-23T19:00:31Z,ACK.  Happy to see VREAL go away.\n,https://github.com/bitcoin/bitcoin/pull/6456#issuecomment-124211905,124211905,
