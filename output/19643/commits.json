[
  {
    "sha": "12242b17a52c9833e6504f3f0a5b247a6e2fc5f9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxMjI0MmIxN2E1MmM5ODMzZTY1MDRmM2YwYTViMjQ3YTZlMmZjNWY5",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-07-27T06:20:26Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-08-30T20:37:06Z"
      },
      "message": "cli: create initial -netinfo option, NetinfoRequestHandler class",
      "tree": {
        "sha": "a20d0a5c0e037a68ef8845d0daa014e430b26773",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a20d0a5c0e037a68ef8845d0daa014e430b26773"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/12242b17a52c9833e6504f3f0a5b247a6e2fc5f9",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl9MDhcACgkQT1chs9Dj\nkh3CehAAr1dYAUE863uZAjf4V7sZ5gMqVrMYd0uQ630XAoAc7UrNtKIOc7MDXo6K\nbBQdH6TDNZ981HSd7ToQAr5FVzw3ScRQxfxeps5UuxwHCFGRLpLGY5jeu+x3zq5+\nECh5pwh1RgkybR3fXzL8jfvHME1xYsVp4nu7NHTgmHvF3pZRjOV8DLkybercu1Wb\n5HdXwJmnRWLIiEvEDnwv1GrnifLITv23yTzvh4ym5rneRz0sfuG663w52cOXjHTK\nlGSnpkDhHY3Ig+oq6eqp3SVS4pPZCbT7MWNzL7Tkkdxv6qeppDuIFyE8bqoLdUZc\nPld8CChSNOFrumDKkOTzGMfc+g8Aq+3fju5BbEfsmT1tiZSa/Ihc60IisP8Hjl5K\nvLD0hEeJJksMc7xn18MPSeuDkoqMRaLsZbCaVj19/odQI18bmRKT/SiKTOwBpKgn\nU2mn+9Q0eCRfD+6oh6iJIqnV3Ix7bu86n10PassNojsO7pxT8dTrmlUoN2vgzUQo\nUVcaQXZ0anh6z73mqN/UXTymBreNStDph0T4V7haZ3Cij9z6PUiyydAt35P5UyhU\nVLOxyuagamuDeHP1n1wS3uX2UPVvck+jtOivXzqzGY/LX/Q8n5SfnAZIsmQUJM/a\n0yCxSAsqoIJOhbnMEgQTVKc/+M0Nimv7lAlyy1cW4RS23GgA2Jc=\n=uWls\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwINIgbJlUC9Xtl4Jn+3tF51DwQy2W8/hkgnl4d/kVdy69CP/wED492FGlkb4W\nlXnPB3bHYZkI8QRfTA4Z8AhQr3hBvlPCQQCD3+MNLvkMjikoaHR0cHM6Ly9maW5u\nZXkuY2FsZW5kYXIuZXRlcm5pdHl3YWxsLmNvbf/wEKW4DpNdrTtEU9IXp+mDLZoI\n8QRfTA4Z8AimOtKaLsMguQCD3+MNLvkMjiwraHR0cHM6Ly9ib2IuYnRjLmNhbGVu\nZGFyLm9wZW50aW1lc3RhbXBzLm9yZ//wEL7BKpLUAxzZdYTARoljnwsI8QRfTA4Y\n8AjbP3dZ43maZwCD3+MNLvkMjiMiaHR0cHM6Ly9idGMuY2FsZW5kYXIuY2F0YWxs\nYXh5LmNvbfAQ/rYQ6kaowmS6pBs9NMQeVAjxBF9MDhnwCD0pbBNxAQy6AIPf4w0u\n+QyOLi1odHRwczovL2FsaWNlLmJ0Yy5jYWxlbmRhci5vcGVudGltZXN0YW1wcy5v\ncmc=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree a20d0a5c0e037a68ef8845d0daa014e430b26773\nparent 6eb97fb82382e8be7166e293887afbca3d4af40a\nauthor Jon Atack <jon@atack.com> 1595830826 +0200\ncommitter Jon Atack <jon@atack.com> 1598819826 +0200\n\ncli: create initial -netinfo option, NetinfoRequestHandler class\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/12242b17a52c9833e6504f3f0a5b247a6e2fc5f9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/12242b17a52c9833e6504f3f0a5b247a6e2fc5f9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/12242b17a52c9833e6504f3f0a5b247a6e2fc5f9/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6eb97fb82382e8be7166e293887afbca3d4af40a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6eb97fb82382e8be7166e293887afbca3d4af40a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6eb97fb82382e8be7166e293887afbca3d4af40a"
      }
    ],
    "stats": {
      "total": 35,
      "additions": 35,
      "deletions": 0
    },
    "files": [
      {
        "sha": "b7634a7c840f5c926087cfced71a040e0d1cfa4a",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 35,
        "deletions": 0,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/12242b17a52c9833e6504f3f0a5b247a6e2fc5f9/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/12242b17a52c9833e6504f3f0a5b247a6e2fc5f9/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=12242b17a52c9833e6504f3f0a5b247a6e2fc5f9",
        "patch": "@@ -56,6 +56,8 @@ static void SetupCliArgs(ArgsManager& argsman)\n     argsman.AddArg(\"-datadir=<dir>\", \"Specify data directory\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     argsman.AddArg(\"-generate\", strprintf(\"Generate blocks immediately, equivalent to RPC generatenewaddress followed by RPC generatetoaddress. Optional positional integer arguments are number of blocks to generate (default: %s) and maximum iterations to try (default: %s), equivalent to RPC generatetoaddress nblocks and maxtries arguments. Example: bitcoin-cli -generate 4 1000\", DEFAULT_NBLOCKS, DEFAULT_MAX_TRIES), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     argsman.AddArg(\"-getinfo\", \"Get general information from the remote server. Note that unlike server-side RPC calls, the results of -getinfo is the result of multiple non-atomic requests. Some entries in the result may represent results from different states (e.g. wallet balance may be as of a different block from the chain state reported)\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n+    argsman.AddArg(\"-netinfo\", \"Get network peer connection information from the remote server. An optional boolean argument can be passed for a detailed peers listing (default: false).\", ArgsManager::ALLOW_BOOL, OptionsCategory::OPTIONS);\n+\n     SetupChainParamsBaseOptions(argsman);\n     argsman.AddArg(\"-named\", strprintf(\"Pass named instead of positional arguments (default: %s)\", DEFAULT_NAMED), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     argsman.AddArg(\"-rpcclienttimeout=<n>\", strprintf(\"Timeout in seconds during HTTP requests, or 0 for no timeout. (default: %d)\", DEFAULT_HTTP_CLIENT_TIMEOUT), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n@@ -291,6 +293,37 @@ class GetinfoRequestHandler: public BaseRequestHandler\n     }\n };\n \n+/** Process netinfo requests */\n+class NetinfoRequestHandler : public BaseRequestHandler\n+{\n+private:\n+    bool m_verbose{false}; //!< Whether user requested verbose -netinfo report\n+public:\n+    const int ID_PEERINFO = 0;\n+    const int ID_NETWORKINFO = 1;\n+\n+    UniValue PrepareRequest(const std::string& method, const std::vector<std::string>& args) override\n+    {\n+        if (!args.empty()) {\n+            const std::string arg{ToLower(args.at(0))};\n+            m_verbose = (arg == \"true\" || arg == \"t\");\n+        }\n+        UniValue result(UniValue::VARR);\n+        result.push_back(JSONRPCRequestObj(\"getpeerinfo\", NullUniValue, ID_PEERINFO));\n+        result.push_back(JSONRPCRequestObj(\"getnetworkinfo\", NullUniValue, ID_NETWORKINFO));\n+        return result;\n+    }\n+\n+    UniValue ProcessReply(const UniValue& batch_in) override\n+    {\n+        const std::vector<UniValue> batch{JSONRPCProcessBatchReply(batch_in)};\n+        if (!batch[ID_PEERINFO][\"error\"].isNull()) return batch[ID_PEERINFO];\n+        if (!batch[ID_NETWORKINFO][\"error\"].isNull()) return batch[ID_NETWORKINFO];\n+        std::string result;\n+        return JSONRPCReplyObj(UniValue{result}, NullUniValue, 1);\n+    }\n+};\n+\n /** Process RPC generatetoaddress request. */\n class GenerateToAddressRequestHandler : public BaseRequestHandler\n {\n@@ -618,6 +651,8 @@ static int CommandLineRPC(int argc, char *argv[])\n         std::string method;\n         if (gArgs.IsArgSet(\"-getinfo\")) {\n             rh.reset(new GetinfoRequestHandler());\n+        } else if (gArgs.GetBoolArg(\"-netinfo\", false)) {\n+            rh.reset(new NetinfoRequestHandler());\n         } else if (gArgs.GetBoolArg(\"-generate\", false)) {\n             const UniValue getnewaddress{GetNewAddress()};\n             const UniValue& error{find_value(getnewaddress, \"error\")};"
      }
    ]
  },
  {
    "sha": "54799b66b466c0d015e6fe2f820663cc5d8e7998",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NDc5OWI2NmI0NjZjMGQwMTVlNmZlMmY4MjA2NjNjYzVkOGU3OTk4",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-08-13T14:16:36Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-08-30T20:37:45Z"
      },
      "message": "cli: add ipv6 and onion address type detection helpers",
      "tree": {
        "sha": "3cd2aa323a2525f3e156c7ab9a2c8c80425f24a2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3cd2aa323a2525f3e156c7ab9a2c8c80425f24a2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/54799b66b466c0d015e6fe2f820663cc5d8e7998",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl9MDhkACgkQT1chs9Dj\nkh3ltw/+Mf5Zm5rgTdgG8zNj2vWkJ1tNTbvImXoCkLLYgtXBZxF6pMtmNAeyQxsG\nA6tYO0GnzOasUnQNd/GQTq/omVTxVtDNRbGu6g510jjkItXUFNGgfS3lsF9oWFFm\nNI3YcNLem5F3XG00UXHn5j2okRNY0KhGXoe9cGfC8on0IOFrSbHyRDiRuZVk5KFZ\nEUmXgkYpKjFYw/w1MspJ2Q+nD2wtUAdkNgUNRiRuMv8YEE0VD8XQ7GYThVSL3L59\nC28x6zczhTZrzPLHIGbzgwhxYfc/BkxNJE9qrevQcBW7NZKreNXEq5PX3sf3TdVG\nLxkXqoVVykW8MUZPhCxi01Yo195LOpUPHmrYRwXhxbIdloTxtBqe5E7cxRM1oqEM\nYqPym6N4dj/ffmKQOOxJedhZvKhmuDrkSa3YQfQJwZrA/lUBeHlRUqrIkBHfLtsg\nkm0Z9FuQjNB0Um5Fy3SQ8iTasZV2Rl9B7PATK6qylK1fGP0IxOxlvlhUQlLaWSqR\nqjRNOsl5I160EjTKur7NxfY53AapltzaszQbGj5PKgh5CISuq+zeGnyUtIoL2WY9\nvQBDTAAecr88vdIiv70YRJ0L4sN24NgyELGhyyyerAEbWqGEAESFucN70LO0SRgV\n8WAaSkrnmHpKI3uOIX9+SGlrel6Q7KFM5YJlWSYQWCErdXXS9JU=\n=QlGF\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIFr0QrdHbqjMO3wUROf89zulrrUjdky6MC1ojDyBSmHPCP/wEBA+1i27U0e+\nq2ibUKoeAioI8QRfTA4b8AiNyHQ73Xfs5ACD3+MNLvkMjikoaHR0cHM6Ly9maW5u\nZXkuY2FsZW5kYXIuZXRlcm5pdHl3YWxsLmNvbf/wECXAUS084IW0z+WYuiZzNUUI\n8QRfTA4b8AgcKqvTbZ5soQCD3+MNLvkMjiwraHR0cHM6Ly9ib2IuYnRjLmNhbGVu\nZGFyLm9wZW50aW1lc3RhbXBzLm9yZ//wEI/zVyGQlscGj1g+WXlHr9QI8QRfTA4b\n8Aju7nV3lVkTOgCD3+MNLvkMji4taHR0cHM6Ly9hbGljZS5idGMuY2FsZW5kYXIu\nb3BlbnRpbWVzdGFtcHMub3Jn8BCYHgv85TF2donJ5GpodWKWCPEEX0wOG/AI257m\nTnqPZ4kAg9/jDS75DI4jImh0dHBzOi8vYnRjLmNhbGVuZGFyLmNhdGFsbGF4eS5j\nb20=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 3cd2aa323a2525f3e156c7ab9a2c8c80425f24a2\nparent 12242b17a52c9833e6504f3f0a5b247a6e2fc5f9\nauthor Jon Atack <jon@atack.com> 1597328196 +0200\ncommitter Jon Atack <jon@atack.com> 1598819865 +0200\n\ncli: add ipv6 and onion address type detection helpers\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/54799b66b466c0d015e6fe2f820663cc5d8e7998",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/54799b66b466c0d015e6fe2f820663cc5d8e7998",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/54799b66b466c0d015e6fe2f820663cc5d8e7998/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "12242b17a52c9833e6504f3f0a5b247a6e2fc5f9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/12242b17a52c9833e6504f3f0a5b247a6e2fc5f9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/12242b17a52c9833e6504f3f0a5b247a6e2fc5f9"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 17,
      "deletions": 0
    },
    "files": [
      {
        "sha": "1fb02b1a495e68a2fd5001deeb4c406704736620",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 17,
        "deletions": 0,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/54799b66b466c0d015e6fe2f820663cc5d8e7998/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/54799b66b466c0d015e6fe2f820663cc5d8e7998/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=54799b66b466c0d015e6fe2f820663cc5d8e7998",
        "patch": "@@ -39,6 +39,8 @@ static const char DEFAULT_RPCCONNECT[] = \"127.0.0.1\";\n static const int DEFAULT_HTTP_CLIENT_TIMEOUT=900;\n static const bool DEFAULT_NAMED=false;\n static const int CONTINUE_EXECUTION=-1;\n+static const std::string ONION{\".onion\"};\n+static const size_t ONION_LEN{ONION.size()};\n \n /** Default number of blocks to generate for RPC generatetoaddress. */\n static const std::string DEFAULT_NBLOCKS = \"1\";\n@@ -297,6 +299,21 @@ class GetinfoRequestHandler: public BaseRequestHandler\n class NetinfoRequestHandler : public BaseRequestHandler\n {\n private:\n+    bool IsAddrIPv6(const std::string& addr) const\n+    {\n+        return !addr.empty() && addr.front() == '[';\n+    }\n+    bool IsInboundOnion(const std::string& addr_local, int mapped_as) const\n+    {\n+        return mapped_as == 0 && addr_local.find(ONION) != std::string::npos;\n+    }\n+    bool IsOutboundOnion(const std::string& addr, int mapped_as) const\n+    {\n+        const size_t addr_len{addr.size()};\n+        const size_t onion_pos{addr.rfind(ONION)};\n+        return mapped_as == 0 && onion_pos != std::string::npos && addr_len > ONION_LEN &&\n+               (onion_pos == addr_len - ONION_LEN || onion_pos == addr.find_last_of(\":\") - ONION_LEN);\n+    }\n     bool m_verbose{false}; //!< Whether user requested verbose -netinfo report\n public:\n     const int ID_PEERINFO = 0;"
      }
    ]
  },
  {
    "sha": "a3653c159e4f5c887eec9ea608e474eaa299fc07",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphMzY1M2MxNTllNGY1Yzg4N2VlYzllYTYwOGU0NzRlYWEyOTlmYzA3",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-08-13T14:19:27Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-08-31T14:11:09Z"
      },
      "message": "cli: tally peer connections by type",
      "tree": {
        "sha": "a2fe8b46d1fb1bd76b42ef7488a0f5a2c33706ab",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a2fe8b46d1fb1bd76b42ef7488a0f5a2c33706ab"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a3653c159e4f5c887eec9ea608e474eaa299fc07",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl9NBQIACgkQT1chs9Dj\nkh0b7BAAiQzwRbnlKusf8WAD8cFTxFCapGZ+kdkAQy9Sz8PgYGNeR3V5BOi/rcZm\nG++fWTV9S/JYulBndeSLXP0MagbB339GGGNaODMVi/9CkyU2ZiG6uqRwtzDtoPTt\n3+ZUG/16QJkYVA8tq5kHM8VOU/upCHgHOzreNJtRL2oFa2Ak1FjZyqwtgcK3X/44\nrnFXn4mEzPqwTdT7wOI/ccjCv5RfiGGrrDGV9qvCaDLEiePkWpVPZNFZ/OueQ4wG\npv84V5tdA6pbr9O9FKgHhvXz7XG62B6Hr8WJnsn49hrb+0aAfRfx9Xade7+RyOCo\nRyrp9rYeXme+rwEtR0TDcUGmH8w0pM9paStsD0fEE+9FpJXcRLT53TNXcGUikIf5\nIcg+WO8QSwlHUQ4QeL5HwHyzSUAJ3JglOAcPhos1Ivkyx4OdkrsJ1tcyY6WikEys\nMczxT4BdfXMKpXPuC7ricpEVvt2dXq/8MMg2WbdK0pVi9Qp2Nj1I/YVXJ7ajSK45\n8Fi19DPvrhsKRtrSb7ng4htaXN2lceKTjpBkoVYN4M22NZBHT5dXX3QQ7KbE0a7I\nV1iURXMqdV7g0A7qQxAuBuZLsO7z8FUGJNjm0h2mG377ZuZ0hmdx11CQpiVAcyAe\nt2HdE0qS6IEtNClKyFRnR8kkalukSCYwqCPoEBoNzmIPEa/NFaQ=\n=5guw\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIGOpcscusrCgvd17L4oqVfRHPGkz6U/T9iJHGLI/l2chCP/wEFA8ZSr9zo2M\nLw2OYbaZEkMI8QRfTQUF8AivSJC1DOPQ8ACD3+MNLvkMjiwraHR0cHM6Ly9ib2Iu\nYnRjLmNhbGVuZGFyLm9wZW50aW1lc3RhbXBzLm9yZ//wEItQoQ37AUCsIeLk3aUY\nyiYI8QRfTQUF8AijxRiqyk5sMgCD3+MNLvkMjikoaHR0cHM6Ly9maW5uZXkuY2Fs\nZW5kYXIuZXRlcm5pdHl3YWxsLmNvbf/wELQkOh6jr5z5DcQxdYLCz5YI8QRfTQUE\n8Ahjo5PjWwHZAwCD3+MNLvkMjiMiaHR0cHM6Ly9idGMuY2FsZW5kYXIuY2F0YWxs\nYXh5LmNvbfAQz4/T/Nm7YmfmKgo2YnyrxAjxBF9NBQXwCHf58nQS+pkNAIPf4w0u\n+QyOLi1odHRwczovL2FsaWNlLmJ0Yy5jYWxlbmRhci5vcGVudGltZXN0YW1wcy5v\ncmc=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree a2fe8b46d1fb1bd76b42ef7488a0f5a2c33706ab\nparent 54799b66b466c0d015e6fe2f820663cc5d8e7998\nauthor Jon Atack <jon@atack.com> 1597328367 +0200\ncommitter Jon Atack <jon@atack.com> 1598883069 +0200\n\ncli: tally peer connections by type\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a3653c159e4f5c887eec9ea608e474eaa299fc07",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a3653c159e4f5c887eec9ea608e474eaa299fc07",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a3653c159e4f5c887eec9ea608e474eaa299fc07/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "54799b66b466c0d015e6fe2f820663cc5d8e7998",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/54799b66b466c0d015e6fe2f820663cc5d8e7998",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/54799b66b466c0d015e6fe2f820663cc5d8e7998"
      }
    ],
    "stats": {
      "total": 33,
      "additions": 33,
      "deletions": 0
    },
    "files": [
      {
        "sha": "037b5fd06d3b602991c46a88e98b3936ebe1cd54",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 33,
        "deletions": 0,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a3653c159e4f5c887eec9ea608e474eaa299fc07/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a3653c159e4f5c887eec9ea608e474eaa299fc07/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=a3653c159e4f5c887eec9ea608e474eaa299fc07",
        "patch": "@@ -336,6 +336,39 @@ class NetinfoRequestHandler : public BaseRequestHandler\n         const std::vector<UniValue> batch{JSONRPCProcessBatchReply(batch_in)};\n         if (!batch[ID_PEERINFO][\"error\"].isNull()) return batch[ID_PEERINFO];\n         if (!batch[ID_NETWORKINFO][\"error\"].isNull()) return batch[ID_NETWORKINFO];\n+\n+        // Count peer connection totals.\n+        int ipv4_i{0}, ipv6_i{0}, onion_i{0}, block_relay_i{0}; // inbound conn counters\n+        int ipv4_o{0}, ipv6_o{0}, onion_o{0}, block_relay_o{0}; // outbound conn counters\n+        const UniValue& getpeerinfo{batch[ID_PEERINFO][\"result\"]};\n+\n+        for (const UniValue& peer : getpeerinfo.getValues()) {\n+            const std::string addr{peer[\"addr\"].get_str()};\n+            const std::string addr_local{peer[\"addrlocal\"].isNull() ? \"\" : peer[\"addrlocal\"].get_str()};\n+            const int mapped_as{peer[\"mapped_as\"].isNull() ? 0 : peer[\"mapped_as\"].get_int()};\n+            const bool is_block_relay{!peer[\"relaytxes\"].get_bool()};\n+            const bool is_inbound{peer[\"inbound\"].get_bool()};\n+            if (is_inbound) {\n+                if (IsAddrIPv6(addr)) {\n+                    ++ipv6_i;\n+                } else if (IsInboundOnion(addr_local, mapped_as)) {\n+                    ++onion_i;\n+                } else {\n+                    ++ipv4_i;\n+                }\n+                if (is_block_relay) ++block_relay_i;\n+            } else {\n+                if (IsAddrIPv6(addr)) {\n+                    ++ipv6_o;\n+                } else if (IsOutboundOnion(addr, mapped_as)) {\n+                    ++onion_o;\n+                } else {\n+                    ++ipv4_o;\n+                }\n+                if (is_block_relay) ++block_relay_o;\n+            }\n+        }\n+\n         std::string result;\n         return JSONRPCReplyObj(UniValue{result}, NullUniValue, 1);\n     }"
      }
    ]
  },
  {
    "sha": "19377b2fd24704bff6c805946575b116f07d5e0d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxOTM3N2IyZmQyNDcwNGJmZjZjODA1OTQ2NTc1YjExNmYwN2Q1ZTBk",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-08-13T14:29:10Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-08-31T14:11:51Z"
      },
      "message": "cli: start dashboard report with chain and version header",
      "tree": {
        "sha": "7cfc853a0307fcd50719bd2c60bd25175e70dfd6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7cfc853a0307fcd50719bd2c60bd25175e70dfd6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/19377b2fd24704bff6c805946575b116f07d5e0d",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl9NBSwACgkQT1chs9Dj\nkh28qxAAwpXXZGJgQfeBV5A7RGU2ortIusi2r+52ImnHDiRUPrZrSUn55eOf0M1C\nJj+gUfrKIiS+5ljUVBLz5GKQ69ADFx1JVmEJn8YDrd+xT7E6apvCtPe1WdtsesTg\nYZDEph2QZob22laWgrR3FoAIPtZcLAiuj/Xe0ucnj6/Cjmal1JmEJh+9avcSrBat\nyuZ+9POxwumY3jk//IVPXPZs7SLiJro13utBzCrzAjOgOdzmAyAph0/3KKgLxt9r\nhLv4sF5+jsq03vpZFl1NqShQQlOchO96e0YT1C56RVvbRRRxJZuDX9L32fNgFbpV\nrMB9wdDV/aTxDixSJfoZ20Aw0aeal8UlgcN1W4Hpo2lDP3l+LGjbkGCmVZBZSOCu\n3sFRkXRsyjS2VguomG65uSujkpnzkpcsiJlT1MdHeC7P1h5GXhx02IjDc3ZP+CFt\naqeKky6shmbzHqPy8V/AQUrQQCFKAka4ukXiRFyEd/Hhfnra60exBi/6g511SZ8Z\ngKYiwj5JSZ/5HZFw4+2/1UWtOckqoTXmEiIK14Mq864bHk/0jz+sZ/DwbZai6nTK\nST4D7nJ8+skArKJs474b9+qxkOcF+BrtjBYZma/dzQt8rnoUEf9F6kzFxPL3nRKf\naEnKUpxGvXOt9uxbCrGFwNY+ci3Ogipxzn8VhwmYOq/yVhDXl80=\n=Agan\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIIGzEFaw+7l1jKU4NQ/R/O3aLE+d0YpTRSwayDrx2JQvCP/wEBuj9iV/Hkx6\n7l7L49jfCdYI8QRfTQUu8Aj7LLwR+kmP5wCD3+MNLvkMjiMiaHR0cHM6Ly9idGMu\nY2FsZW5kYXIuY2F0YWxsYXh5LmNvbf/wEDXkMF2JYQh5vK6ZjZVExfUI8QRfTQUu\n8Aj7vtdztd9a8wCD3+MNLvkMji4taHR0cHM6Ly9hbGljZS5idGMuY2FsZW5kYXIu\nb3BlbnRpbWVzdGFtcHMub3Jn//AQyqeXrMl9OtxvgN5MC7kgFQjxBF9NBS/wCGVl\nUyTdNtcUAIPf4w0u+QyOKShodHRwczovL2Zpbm5leS5jYWxlbmRhci5ldGVybml0\neXdhbGwuY29t8BDeh2doWXnY8YDNMQT315JACPAguzRoLtSsUdZyLJI7F9dVBSRM\nDrAEwi+B6ivc8kzeL0cI8CAJ7ir9vP0283dcomF1BniGyJZj92FtE0zaa4F7apQZ\njQjxBF9NBS7wCB7/xqIuYYGgAIPf4w0u+QyOLCtodHRwczovL2JvYi5idGMuY2Fs\nZW5kYXIub3BlbnRpbWVzdGFtcHMub3Jn\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 7cfc853a0307fcd50719bd2c60bd25175e70dfd6\nparent a3653c159e4f5c887eec9ea608e474eaa299fc07\nauthor Jon Atack <jon@atack.com> 1597328950 +0200\ncommitter Jon Atack <jon@atack.com> 1598883111 +0200\n\ncli: start dashboard report with chain and version header\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/19377b2fd24704bff6c805946575b116f07d5e0d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/19377b2fd24704bff6c805946575b116f07d5e0d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/19377b2fd24704bff6c805946575b116f07d5e0d/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a3653c159e4f5c887eec9ea608e474eaa299fc07",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a3653c159e4f5c887eec9ea608e474eaa299fc07",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a3653c159e4f5c887eec9ea608e474eaa299fc07"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 10,
      "deletions": 1
    },
    "files": [
      {
        "sha": "a2670ed1a6a905c6bfa12d8f925b4a91fe956219",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 1,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/19377b2fd24704bff6c805946575b116f07d5e0d/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/19377b2fd24704bff6c805946575b116f07d5e0d/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=19377b2fd24704bff6c805946575b116f07d5e0d",
        "patch": "@@ -315,6 +315,12 @@ class NetinfoRequestHandler : public BaseRequestHandler\n                (onion_pos == addr_len - ONION_LEN || onion_pos == addr.find_last_of(\":\") - ONION_LEN);\n     }\n     bool m_verbose{false}; //!< Whether user requested verbose -netinfo report\n+    std::string ChainToString() const\n+    {\n+        if (gArgs.GetChainName() == CBaseChainParams::TESTNET) return \" testnet\";\n+        if (gArgs.GetChainName() == CBaseChainParams::REGTEST) return \" regtest\";\n+        return \"\";\n+    }\n public:\n     const int ID_PEERINFO = 0;\n     const int ID_NETWORKINFO = 1;\n@@ -369,7 +375,10 @@ class NetinfoRequestHandler : public BaseRequestHandler\n             }\n         }\n \n-        std::string result;\n+        // Generate report header.\n+        const UniValue& networkinfo{batch[ID_NETWORKINFO][\"result\"]};\n+        std::string result{strprintf(\"%s %s%s - %i%s\\n\\n\", PACKAGE_NAME, FormatFullVersion(), ChainToString(), networkinfo[\"protocolversion\"].get_int(), networkinfo[\"subversion\"].get_str())};\n+\n         return JSONRPCReplyObj(UniValue{result}, NullUniValue, 1);\n     }\n };"
      }
    ]
  },
  {
    "sha": "d3f77b736e43b187771b901a6a3452f83c116918",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkM2Y3N2I3MzZlNDNiMTg3NzcxYjkwMWE2YTM0NTJmODNjMTE2OTE4",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-08-13T14:25:04Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-08-31T14:11:59Z"
      },
      "message": "cli: create inbound/outbound peer connections report",
      "tree": {
        "sha": "2b2b4b340798f9d01773589f2c46bad5dad96fac",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2b2b4b340798f9d01773589f2c46bad5dad96fac"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d3f77b736e43b187771b901a6a3452f83c116918",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl9NBS8ACgkQT1chs9Dj\nkh2cDA//SitPWkEQ0toaBAKc9gTjMGkNQwL7GIe0iiHs+3Lu0/spJTmYqlCSqpZn\noHeswiECz8gGt1ido4xpsimLfYjZkE0+0ULHBJhF4nKO74MdOUHVvZr9IVee2dkQ\n11A6nP7PDoXlAqOlkepOcb+rQaht9Va2ucn+/ldfbz7MDw9CekLhd+eN0XKWHkfF\nTyhNOKHmDFiwnh6HXjfTCrkvNoh3a5qs7q9poEZn5xbnX3b1tNmZs0BqkGrQLXYj\nzg8esztwDjhGVlj2ybmVe33CAwiFOiYaazr/KHdPzic9xL1yqzttVJUK1h9ZSK0r\nP3XiN2gzuR5Zk9DkCFFvCnZwVGARKg9Wgn082kdFWkEGXLFBCioTkPI2h8+X9y2a\noNO2O80ocSInd7zvnwWrMLOaMvwhiRK9fRLhHZ5f3sXKOiPAu8m6rMHtOBCSP0UP\n8LxsQ6j+7XAd3l9Od1FTtDow2nTwmbS6/TXESTcTNYgeheKqYNErFrFJDvC7zab9\nlcGbax56my+2y52okfqYXAA2RNu/8yUUopOHaS05k1o1f6iTZgphpYuaYonmKDHa\nhfoTprvFuShap9eicqg3fSbj/SuK19F4KpcQ78qsrNPXHG8Gx6c1AUhzu0aKqh18\n/vY6RyF6G1cM48rtk6mitzmCjH5einy2GCT+I16A3pdYNkMAZEQ=\n=Opzf\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIDcQC11PEjOFsK3feSdr4GKgSUy3MDJSWcD37IHGKW62CP/wED07/7f2JxpD\nK3OGi53RHZoI8QRfTQUx8Aj0dVTfxFKmLgCD3+MNLvkMjiMiaHR0cHM6Ly9idGMu\nY2FsZW5kYXIuY2F0YWxsYXh5LmNvbf/wEKFsEH+vTssm9rTz8Db+BQkI8QRfTQUx\n8Ag4co1dYUqt0gCD3+MNLvkMjiwraHR0cHM6Ly9ib2IuYnRjLmNhbGVuZGFyLm9w\nZW50aW1lc3RhbXBzLm9yZ//wEKLlDswetUFkklqurMJ24P0I8QRfTQUx8Ahq+Zkn\ntIH0BACD3+MNLvkMji4taHR0cHM6Ly9hbGljZS5idGMuY2FsZW5kYXIub3BlbnRp\nbWVzdGFtcHMub3Jn8BDks9nqdsbJxRcRf9P1IaNECPEEX00FMfAIWk17NJ8wTsYA\ng9/jDS75DI4pKGh0dHBzOi8vZmlubmV5LmNhbGVuZGFyLmV0ZXJuaXR5d2FsbC5j\nb20=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 2b2b4b340798f9d01773589f2c46bad5dad96fac\nparent 19377b2fd24704bff6c805946575b116f07d5e0d\nauthor Jon Atack <jon@atack.com> 1597328704 +0200\ncommitter Jon Atack <jon@atack.com> 1598883119 +0200\n\ncli: create inbound/outbound peer connections report\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d3f77b736e43b187771b901a6a3452f83c116918",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d3f77b736e43b187771b901a6a3452f83c116918",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d3f77b736e43b187771b901a6a3452f83c116918/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "19377b2fd24704bff6c805946575b116f07d5e0d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/19377b2fd24704bff6c805946575b116f07d5e0d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/19377b2fd24704bff6c805946575b116f07d5e0d"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 10,
      "deletions": 2
    },
    "files": [
      {
        "sha": "7833aa946c1365ded2822e073be5f3a56363c756",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 2,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d3f77b736e43b187771b901a6a3452f83c116918/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d3f77b736e43b187771b901a6a3452f83c116918/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=d3f77b736e43b187771b901a6a3452f83c116918",
        "patch": "@@ -344,8 +344,8 @@ class NetinfoRequestHandler : public BaseRequestHandler\n         if (!batch[ID_NETWORKINFO][\"error\"].isNull()) return batch[ID_NETWORKINFO];\n \n         // Count peer connection totals.\n-        int ipv4_i{0}, ipv6_i{0}, onion_i{0}, block_relay_i{0}; // inbound conn counters\n-        int ipv4_o{0}, ipv6_o{0}, onion_o{0}, block_relay_o{0}; // outbound conn counters\n+        int ipv4_i{0}, ipv6_i{0}, onion_i{0}, block_relay_i{0}, total_i{0}; // inbound conn counters\n+        int ipv4_o{0}, ipv6_o{0}, onion_o{0}, block_relay_o{0}, total_o{0}; // outbound conn counters\n         const UniValue& getpeerinfo{batch[ID_PEERINFO][\"result\"]};\n \n         for (const UniValue& peer : getpeerinfo.getValues()) {\n@@ -379,6 +379,14 @@ class NetinfoRequestHandler : public BaseRequestHandler\n         const UniValue& networkinfo{batch[ID_NETWORKINFO][\"result\"]};\n         std::string result{strprintf(\"%s %s%s - %i%s\\n\\n\", PACKAGE_NAME, FormatFullVersion(), ChainToString(), networkinfo[\"protocolversion\"].get_int(), networkinfo[\"subversion\"].get_str())};\n \n+        // Report peer connection totals by type.\n+        total_i = ipv4_i + ipv6_i + onion_i;\n+        total_o = ipv4_o + ipv6_o + onion_o;\n+        result += \"        ipv4    ipv6   onion   total  block-relay\\n\";\n+        result += strprintf(\"in     %5i   %5i   %5i   %5i   %5i\\n\", ipv4_i, ipv6_i, onion_i, total_i, block_relay_i);\n+        result += strprintf(\"out    %5i   %5i   %5i   %5i   %5i\\n\", ipv4_o, ipv6_o, onion_o, total_o, block_relay_o);\n+        result += strprintf(\"total  %5i   %5i   %5i   %5i   %5i\\n\", ipv4_i + ipv4_o, ipv6_i + ipv6_o, onion_i + onion_o, total_i + total_o, block_relay_i + block_relay_o);\n+\n         return JSONRPCReplyObj(UniValue{result}, NullUniValue, 1);\n     }\n };"
      }
    ]
  },
  {
    "sha": "c227100919dd2422b29eb3bca9c0f1a7983cc3a8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjMjI3MTAwOTE5ZGQyNDIyYjI5ZWIzYmNhOWMwZjFhNzk4M2NjM2E4",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-08-13T14:51:22Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-08-31T14:12:01Z"
      },
      "message": "cli: create local addresses, ports, and scores report",
      "tree": {
        "sha": "97498b178d5244cbe4287a2f2f2c5f9e5db583ae",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/97498b178d5244cbe4287a2f2f2c5f9e5db583ae"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c227100919dd2422b29eb3bca9c0f1a7983cc3a8",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl9NBTIACgkQT1chs9Dj\nkh1TUg//em4gP5smIoV1ObRoxgWqo0ckduYuivIAQCE0FBuYmZ4me8H1AFA9wqoT\naSlDWSXWvJA17qFhFmfBQpi8sSGmBxpXEwf7xxw5xhOCAeJfPhU7xVPczDNHYWQa\nHb0cDWa05Lx6VotYqqTcfIIReJwbT+fYa6COBQ22yVxuk0PXXCsy73uqINFlQu4D\nvCzZElAfXwi7gli2kC70ZrsgEvkvgWhaaEQfZ4dn5BPo7lLaG+W6T+QCp2O5X7IG\nU1kfW0BJY9di4lXo0N8v6jcXz7ROdDQvTLtkV8IYDuyWYPo6WGj+h/WwY1agqpOp\nbeP6JtjwkBq4E85H6aQYQUeZVl7gWVM3ZEnkgxwhMfmBib9haNUFgfo6D4o0FEVY\nym5jGSH3MJNoqqVP7vw64H6RSkY1hOIpX/GzpscsXMezfufVm+ZGYNfwCxSsroa3\nUqWMeTrsQiXXiaa3iL+bKCUC47N8lbcVOAuPe33zHBnV7OjNWA9r4BLTU+Vv0Mfc\nExepxe1VuoMVse582kMQxVOePu9jt0a2t1Lzc5hdB00IxD+bxsZJpLG/yF1TNMVZ\nn//7ouDSCIvSFgjJz8GOBgQQ0IjE3IbUG6ILlAdOuD6VZYFQYepFy9SKbibroyIN\n1y0ZbxqWHzo7nHv+QGZRsEHRA8Ppuk13xT3uw+w/qHZ9ouFPE8I=\n=XLLK\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIJbUtUi0IKyLx1EQR1XjuyMef7Nxmg1xltFjB2tPK1vhCP/wEBVhaZw7vhEb\nw4eETkN5kJII8QRfTQUz8Ai0OrsjK0imYACD3+MNLvkMjiwraHR0cHM6Ly9ib2Iu\nYnRjLmNhbGVuZGFyLm9wZW50aW1lc3RhbXBzLm9yZ//wEFwFc3GV1ekEeHmDp76T\nwNkI8QRfTQUz8AiwZhVN502GHgCD3+MNLvkMjiMiaHR0cHM6Ly9idGMuY2FsZW5k\nYXIuY2F0YWxsYXh5LmNvbf/wEIxk6R/FN4jr2mQHSTTVWTEI8QRfTQUz8AgOwoDc\n8SXObQCD3+MNLvkMji4taHR0cHM6Ly9hbGljZS5idGMuY2FsZW5kYXIub3BlbnRp\nbWVzdGFtcHMub3Jn8BDhjrX+lJRdpyRrssB1x9rbCPEEX00FNPAI1Vqq3XGt318A\ng9/jDS75DI4pKGh0dHBzOi8vZmlubmV5LmNhbGVuZGFyLmV0ZXJuaXR5d2FsbC5j\nb20=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 97498b178d5244cbe4287a2f2f2c5f9e5db583ae\nparent d3f77b736e43b187771b901a6a3452f83c116918\nauthor Jon Atack <jon@atack.com> 1597330282 +0200\ncommitter Jon Atack <jon@atack.com> 1598883121 +0200\n\ncli: create local addresses, ports, and scores report\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c227100919dd2422b29eb3bca9c0f1a7983cc3a8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c227100919dd2422b29eb3bca9c0f1a7983cc3a8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c227100919dd2422b29eb3bca9c0f1a7983cc3a8/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d3f77b736e43b187771b901a6a3452f83c116918",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d3f77b736e43b187771b901a6a3452f83c116918",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d3f77b736e43b187771b901a6a3452f83c116918"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 11,
      "deletions": 0
    },
    "files": [
      {
        "sha": "ac59665c124ea48692c2c932ef931cc7a2765996",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c227100919dd2422b29eb3bca9c0f1a7983cc3a8/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c227100919dd2422b29eb3bca9c0f1a7983cc3a8/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=c227100919dd2422b29eb3bca9c0f1a7983cc3a8",
        "patch": "@@ -387,6 +387,17 @@ class NetinfoRequestHandler : public BaseRequestHandler\n         result += strprintf(\"out    %5i   %5i   %5i   %5i   %5i\\n\", ipv4_o, ipv6_o, onion_o, total_o, block_relay_o);\n         result += strprintf(\"total  %5i   %5i   %5i   %5i   %5i\\n\", ipv4_i + ipv4_o, ipv6_i + ipv6_o, onion_i + onion_o, total_i + total_o, block_relay_i + block_relay_o);\n \n+        // Report local addresses, ports, and scores.\n+        result += \"\\nLocal addresses\";\n+        const UniValue& local_addrs{networkinfo[\"localaddresses\"]};\n+        if (local_addrs.empty()) {\n+            result += \": n/a\\n\";\n+        } else {\n+            for (const UniValue& addr : local_addrs.getValues()) {\n+                result += strprintf(\"\\n%-40i  port %5i     score %6i\", addr[\"address\"].get_str(), addr[\"port\"].get_int(), addr[\"score\"].get_int());\n+            }\n+        }\n+\n         return JSONRPCReplyObj(UniValue{result}, NullUniValue, 1);\n     }\n };"
      }
    ]
  },
  {
    "sha": "3a0ab93e1ce8d91235a6d46a57c6cb110fc5bf03",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozYTBhYjkzZTFjZThkOTEyMzVhNmQ0NmE1N2M2Y2IxMTBmYzViZjAz",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-08-13T14:49:39Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-08-31T14:12:04Z"
      },
      "message": "cli: add NetType enum struct and NetTypeEnumToString()",
      "tree": {
        "sha": "c41dbf5dc2a71148c94284ad38bce5e62eabe56e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c41dbf5dc2a71148c94284ad38bce5e62eabe56e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3a0ab93e1ce8d91235a6d46a57c6cb110fc5bf03",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl9NBTQACgkQT1chs9Dj\nkh0GzxAAuXyQsMYGDxaaa1UHskinjlCtGVKi3Zgk2mbdfVO0zTbFdOxerde3aALM\nCqafZLPrLqAsXVin3HGLw+F1U8psVt4m44K7yrXNBLQ+FOnZfZzoYBHk83oynePk\ncOVfIO2Kcw9lFSURG6komFgqWdQm2MVZrr4R1FUtsaZWzv+2eM3VvkvtQes/fMH2\nBJKb73hW5v3uyr2y5ZA988dDSmE3wz+zplP3Vs/8rokK7hgEL+jfg2qMGBgQRKtZ\nALYv61KApxM/bGGL1CxAkdKYcxXtbPi3x5tCINaoTXfiYg/K6QPDJIG6A4gDbwSj\neZXe6E/9c87XUdUelo8BTYmLxCfBrTufYUOOCpPbnhp5NBsjg8g+cwzfwSIN0Mo8\nG+0YwOeGxv2AxWbKpMJ19q6iLPhk5vjLGyHP5jRuSJPASWci10WrxFWx0GY2QGlF\nUa0ryI+Qv0joPRXdh7mAT/tLl48SQwnDcDBcZU5HkJVQO7nqRyn72A5eQB8E5Bku\nvrM6lirXN9RlZ+UfroJCqNgrO0Uu5owVaTpIrDgtw/jwqnuRqAjOqrvu3Y9l4DGy\nU+N+qmiGmFaqRbrRGm1C02s3dzfnk5cQqLQ5Fzft9G/ER38CEkREJHPDyrRm1QqY\nAgEZaZew25W7z1r6xFiD/zc09jgzRHxq6Y1ueQl2pV8Kg631dYM=\n=Fzge\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIKBiNFsY02nIuaWuYFJljjhlgMAtgE56J1aW9WjSu4bRCP/wECwwZWfVSxRB\nEpA2cu41Up4I8QRfTQU18Ai6b0/smNUTFACD3+MNLvkMjiwraHR0cHM6Ly9ib2Iu\nYnRjLmNhbGVuZGFyLm9wZW50aW1lc3RhbXBzLm9yZ//wEGlEQY7QMJoRX1+oPscA\nAxgI8QRfTQU28AhHz0CXBzSo4gCD3+MNLvkMjikoaHR0cHM6Ly9maW5uZXkuY2Fs\nZW5kYXIuZXRlcm5pdHl3YWxsLmNvbf/wEOE0B40zMpSGAAmY5nsM+tAI8QRfTQU1\n8Agiiwlyryu5RwCD3+MNLvkMji4taHR0cHM6Ly9hbGljZS5idGMuY2FsZW5kYXIu\nb3BlbnRpbWVzdGFtcHMub3Jn8BDyd7vjRaNfYvY2d0/pQreLCPEEX00FNfAIPs2O\niI/swCgAg9/jDS75DI4jImh0dHBzOi8vYnRjLmNhbGVuZGFyLmNhdGFsbGF4eS5j\nb20=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree c41dbf5dc2a71148c94284ad38bce5e62eabe56e\nparent c227100919dd2422b29eb3bca9c0f1a7983cc3a8\nauthor Jon Atack <jon@atack.com> 1597330179 +0200\ncommitter Jon Atack <jon@atack.com> 1598883124 +0200\n\ncli: add NetType enum struct and NetTypeEnumToString()\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3a0ab93e1ce8d91235a6d46a57c6cb110fc5bf03",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3a0ab93e1ce8d91235a6d46a57c6cb110fc5bf03",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3a0ab93e1ce8d91235a6d46a57c6cb110fc5bf03/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c227100919dd2422b29eb3bca9c0f1a7983cc3a8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c227100919dd2422b29eb3bca9c0f1a7983cc3a8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c227100919dd2422b29eb3bca9c0f1a7983cc3a8"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 19,
      "deletions": 0
    },
    "files": [
      {
        "sha": "b9877f5126160be66a7d8ced1aee41037e652b70",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3a0ab93e1ce8d91235a6d46a57c6cb110fc5bf03/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3a0ab93e1ce8d91235a6d46a57c6cb110fc5bf03/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=3a0ab93e1ce8d91235a6d46a57c6cb110fc5bf03",
        "patch": "@@ -315,6 +315,20 @@ class NetinfoRequestHandler : public BaseRequestHandler\n                (onion_pos == addr_len - ONION_LEN || onion_pos == addr.find_last_of(\":\") - ONION_LEN);\n     }\n     bool m_verbose{false}; //!< Whether user requested verbose -netinfo report\n+    enum struct NetType {\n+        ipv4,\n+        ipv6,\n+        onion,\n+    };\n+    std::string NetTypeEnumToString(NetType t)\n+    {\n+        switch (t) {\n+        case NetType::ipv4: return \"ipv4\";\n+        case NetType::ipv6: return \"ipv6\";\n+        case NetType::onion: return \"onion\";\n+        } // no default case, so the compiler can warn about missing cases\n+        assert(false);\n+    }\n     std::string ChainToString() const\n     {\n         if (gArgs.GetChainName() == CBaseChainParams::TESTNET) return \" testnet\";\n@@ -354,19 +368,24 @@ class NetinfoRequestHandler : public BaseRequestHandler\n             const int mapped_as{peer[\"mapped_as\"].isNull() ? 0 : peer[\"mapped_as\"].get_int()};\n             const bool is_block_relay{!peer[\"relaytxes\"].get_bool()};\n             const bool is_inbound{peer[\"inbound\"].get_bool()};\n+            NetType net_type{NetType::ipv4};\n             if (is_inbound) {\n                 if (IsAddrIPv6(addr)) {\n+                    net_type = NetType::ipv6;\n                     ++ipv6_i;\n                 } else if (IsInboundOnion(addr_local, mapped_as)) {\n+                    net_type = NetType::onion;\n                     ++onion_i;\n                 } else {\n                     ++ipv4_i;\n                 }\n                 if (is_block_relay) ++block_relay_i;\n             } else {\n                 if (IsAddrIPv6(addr)) {\n+                    net_type = NetType::ipv6;\n                     ++ipv6_o;\n                 } else if (IsOutboundOnion(addr, mapped_as)) {\n+                    net_type = NetType::onion;\n                     ++onion_o;\n                 } else {\n                     ++ipv4_o;"
      }
    ]
  },
  {
    "sha": "f5edd66e5d136b229c805af9e6ea73218f6cedde",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmNWVkZDY2ZTVkMTM2YjIyOWM4MDVhZjllNmVhNzMyMThmNmNlZGRl",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-08-13T14:59:57Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-08-31T14:12:36Z"
      },
      "message": "cli: create vector of Peer structs for peers data",
      "tree": {
        "sha": "ee5db663195a3d620fd160469c266db9f4818e84",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ee5db663195a3d620fd160469c266db9f4818e84"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f5edd66e5d136b229c805af9e6ea73218f6cedde",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl9NBVoACgkQT1chs9Dj\nkh3enQ//dKoNF/iO9vEHu+4nFBYDFEzR46fWxX2O0rjEFjADsH//E4Fu7xyOkp/E\nOcKWkH+AAcELqonOjCEOzmNDmh37JIprLBULc4UAqJb7022qmDcgz8u+7ANgn+aG\nwn404NK2daUiFr062Nwo5/p99OHijy3v53IDYVa0RMZL6wJr4NclhWXCzshSpuD1\novoS4RlfL1MOZZLNhp3I6ku5MA/plxvbzlsS0+wEzTvE6OUqSDF0V+Uk9QRiq7rJ\n8hupeD8J9M4owtFFnADx0phIwGzsWDs+VxQEejkVpB5xjCgezpqdyiHYpZwTT0ql\nKETJn6oVDZ+I7+w8ZzCvDFehxqrgdTJYPjg160YK48AftiD9/KDfHqg9tmX1RbEu\njUhdpvffNmnoHBr8KzQDtjlAYA3P/9T7jDTq2CKvaA8sICrpSYATLFPdNM2NM7sw\nj9NMYb5PGpPloS7NpJNZmkp1q0X6Byt4JG1icHh5ZO31tbgFDOo0h9+benwmSHyr\nML7cnQgjbJyys3z3k228E/TMfYKL/d9Zk8g3KNlUsq84liNa7gcZ0REcGTIsIS9F\n7APaDLuEtPlrS8USj0rrUGDgl3Tr3O+8lD5ONcDH2Go2+rjHEgz8gFbXE5iU8JA6\nigzm64Ao0zLl06EAQHa3Xhg8KbOa1CxkjEpusKVEtkapr2ZVP/4=\n=cK8A\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwICMIqaCiQrVanYHlaFpr/ZlhHBmdleWWQoDBnhT4UuQVCP/wECk/fCDMO851\nIO83OZ+zXpMI8SBen24BjLHQns8xx1JkoBhrxHODWHokFm5gHuimLXIU/gjxBF9N\nBVvwCEWlCgH+1z3VAIPf4w0u+QyOLCtodHRwczovL2JvYi5idGMuY2FsZW5kYXIu\nb3BlbnRpbWVzdGFtcHMub3Jn//AQVQkq6qjYez2Ij//9Cby7PwjxBF9NBVvwCGn5\nz5+N4Et+AIPf4w0u+QyOIyJodHRwczovL2J0Yy5jYWxlbmRhci5jYXRhbGxheHku\nY29t//AQq9/3BnEZwgZr4I0Kw25GjAjxBF9NBVvwCPk9gTncw9zRAIPf4w0u+QyO\nLi1odHRwczovL2FsaWNlLmJ0Yy5jYWxlbmRhci5vcGVudGltZXN0YW1wcy5vcmfw\nEOUWDBdzptSUk9DGl2HQuS0I8QRfTQVc8Ah1zdkGPX7iBACD3+MNLvkMjikoaHR0\ncHM6Ly9maW5uZXkuY2FsZW5kYXIuZXRlcm5pdHl3YWxsLmNvbQ==\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree ee5db663195a3d620fd160469c266db9f4818e84\nparent 3a0ab93e1ce8d91235a6d46a57c6cb110fc5bf03\nauthor Jon Atack <jon@atack.com> 1597330797 +0200\ncommitter Jon Atack <jon@atack.com> 1598883156 +0200\n\ncli: create vector of Peer structs for peers data\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f5edd66e5d136b229c805af9e6ea73218f6cedde",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f5edd66e5d136b229c805af9e6ea73218f6cedde",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f5edd66e5d136b229c805af9e6ea73218f6cedde/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3a0ab93e1ce8d91235a6d46a57c6cb110fc5bf03",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3a0ab93e1ce8d91235a6d46a57c6cb110fc5bf03",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3a0ab93e1ce8d91235a6d46a57c6cb110fc5bf03"
      }
    ],
    "stats": {
      "total": 31,
      "additions": 30,
      "deletions": 1
    },
    "files": [
      {
        "sha": "e50d9c43fae9c7e1cca6fae663d9cd62d9094781",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 30,
        "deletions": 1,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f5edd66e5d136b229c805af9e6ea73218f6cedde/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f5edd66e5d136b229c805af9e6ea73218f6cedde/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=f5edd66e5d136b229c805af9e6ea73218f6cedde",
        "patch": "@@ -320,6 +320,22 @@ class NetinfoRequestHandler : public BaseRequestHandler\n         ipv6,\n         onion,\n     };\n+    struct Peer {\n+        int id;\n+        int mapped_as;\n+        int version;\n+        int64_t conn_time;\n+        int64_t last_recv;\n+        int64_t last_send;\n+        double min_ping;\n+        double ping;\n+        std::string addr;\n+        std::string sub_version;\n+        NetType net_type;\n+        bool is_block_relay;\n+        bool is_outbound;\n+        bool operator<(const Peer& rhs) const { return std::tie(is_outbound, min_ping) < std::tie(rhs.is_outbound, rhs.min_ping); }\n+    };\n     std::string NetTypeEnumToString(NetType t)\n     {\n         switch (t) {\n@@ -357,9 +373,10 @@ class NetinfoRequestHandler : public BaseRequestHandler\n         if (!batch[ID_PEERINFO][\"error\"].isNull()) return batch[ID_PEERINFO];\n         if (!batch[ID_NETWORKINFO][\"error\"].isNull()) return batch[ID_NETWORKINFO];\n \n-        // Count peer connection totals.\n+        // Count peer connection totals, and if m_verbose is true, store peer data in a vector of structs.\n         int ipv4_i{0}, ipv6_i{0}, onion_i{0}, block_relay_i{0}, total_i{0}; // inbound conn counters\n         int ipv4_o{0}, ipv6_o{0}, onion_o{0}, block_relay_o{0}, total_o{0}; // outbound conn counters\n+        std::vector<Peer> peers;\n         const UniValue& getpeerinfo{batch[ID_PEERINFO][\"result\"]};\n \n         for (const UniValue& peer : getpeerinfo.getValues()) {\n@@ -392,6 +409,18 @@ class NetinfoRequestHandler : public BaseRequestHandler\n                 }\n                 if (is_block_relay) ++block_relay_o;\n             }\n+            if (m_verbose) {\n+                // Push data for this peer to the peers vector.\n+                const int peer_id{peer[\"id\"].get_int()};\n+                const int version{peer[\"version\"].get_int()};\n+                const std::string sub_version{peer[\"subver\"].get_str()};\n+                const int64_t conn_time{peer[\"conntime\"].get_int64()};\n+                const int64_t last_recv{peer[\"lastrecv\"].get_int64()};\n+                const int64_t last_send{peer[\"lastsend\"].get_int64()};\n+                const double min_ping{peer[\"minping\"].isNull() ? -1 : peer[\"minping\"].get_real()};\n+                const double ping{peer[\"pingtime\"].isNull() ? -1 : peer[\"pingtime\"].get_real()};\n+                peers.push_back({peer_id, mapped_as, version, conn_time, last_recv, last_send, min_ping, ping, addr, sub_version, net_type, is_block_relay, !is_inbound});\n+            }\n         }\n \n         // Generate report header."
      }
    ]
  },
  {
    "sha": "ce57bf6cc0cdaf8233fd8a20e0d1c5b69d17d2a3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjZTU3YmY2Y2MwY2RhZjgyMzNmZDhhMjBlMGQxYzViNjlkMTdkMmEz",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-08-13T15:13:14Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-08-31T14:12:44Z"
      },
      "message": "cli: create peer connections report sorted by dir, minping",
      "tree": {
        "sha": "d218c0c0e1be5ff576d42271f98482cc26eb9fa2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d218c0c0e1be5ff576d42271f98482cc26eb9fa2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ce57bf6cc0cdaf8233fd8a20e0d1c5b69d17d2a3",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl9NBVwACgkQT1chs9Dj\nkh138xAArbzXHX35MkFazrFNO4I7ChsP4YFBnayDRawuv7HEIK7mwFqWcCbw50lx\nCRu7Vp8/JBNHdL+qAICs4iCsFVs2wgTQullZiJdYWdPJypV/g4ztkLLGB5lKSkYV\nwpNaaMOIW0KBFlTG4yk8ItGs2OOKeSzYxAOwQS4izVh5XHgRHgQMuFTXOG2XcVnM\nmqV0m3mrhsp8m/NSu1IyGoQWFBGsqjf04d5Bspx1vYUvdUeWMgrpzGFcQkTjALWi\nS2QllAY0zoky9i43zfq5TRC8Ek9+HeqhdL3GbN52Yh++sutTUL1BAbHyaWIFU0h5\nt2q2pBee33P+1O+oS9IX6yRMwd/rfiMtdtDix/1OkuOPKvSX2bng/4+6U1IZtX3W\n34BqDb3W2AyU0D3fcdqxO5WAVnAvnm0Qp+gCObtrLYhZ6m8sJ9nWwzSE7xKyTsNV\n7eucmyg0TJw1orCE4k9y+DOg1TVF74agD375sanAIH3mNmn+c2YCLI07WbTLqm2V\n8Xp9nzl3JoR0U89jQzuU0B2l4w0t3jDRF6TC+bRe1GzOq2NoFAT3705SYSOpUWjS\nqxhzm3BvwWbrxLL2nFOEfH4GS+0AC0gLJn8H7jIK/DEmRud1iyOhMqMMzZi+mcqr\nMTodYbbg86c2NqGrJ//QYFXXWP2by6HhXXyh7mN2cWy1itLZ2eo=\n=orqX\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIOTn1q7EFw9J8EC+1wnuL+g0HIKC4lAXPf0ubcz0wW+JCP/wEA5g6+e9V/Tr\nlYr0ACAG0OkI8QRfTQVe8AiaM509nJ5lPQCD3+MNLvkMji4taHR0cHM6Ly9hbGlj\nZS5idGMuY2FsZW5kYXIub3BlbnRpbWVzdGFtcHMub3Jn//AQL73SkI0AfzVdZ5aS\n7cVFLAjxBF9NBV7wCHso8oCBILT+AIPf4w0u+QyOLCtodHRwczovL2JvYi5idGMu\nY2FsZW5kYXIub3BlbnRpbWVzdGFtcHMub3Jn//AQ0byb2XKNWHJ3g5GweooMLwjx\nBF9NBV7wCKF6fMMgVO2nAIPf4w0u+QyOIyJodHRwczovL2J0Yy5jYWxlbmRhci5j\nYXRhbGxheHkuY29t8BDXurZyY5x4/DbxRHUU/vnqCPEEX00FX/AImiWSHa0auocA\ng9/jDS75DI4pKGh0dHBzOi8vZmlubmV5LmNhbGVuZGFyLmV0ZXJuaXR5d2FsbC5j\nb20=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree d218c0c0e1be5ff576d42271f98482cc26eb9fa2\nparent f5edd66e5d136b229c805af9e6ea73218f6cedde\nauthor Jon Atack <jon@atack.com> 1597331594 +0200\ncommitter Jon Atack <jon@atack.com> 1598883164 +0200\n\ncli: create peer connections report sorted by dir, minping\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ce57bf6cc0cdaf8233fd8a20e0d1c5b69d17d2a3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ce57bf6cc0cdaf8233fd8a20e0d1c5b69d17d2a3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ce57bf6cc0cdaf8233fd8a20e0d1c5b69d17d2a3/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f5edd66e5d136b229c805af9e6ea73218f6cedde",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f5edd66e5d136b229c805af9e6ea73218f6cedde",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f5edd66e5d136b229c805af9e6ea73218f6cedde"
      }
    ],
    "stats": {
      "total": 35,
      "additions": 35,
      "deletions": 0
    },
    "files": [
      {
        "sha": "ad514e7939e2bcb0b01bbae8848fbb04bd86270f",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 35,
        "deletions": 0,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ce57bf6cc0cdaf8233fd8a20e0d1c5b69d17d2a3/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ce57bf6cc0cdaf8233fd8a20e0d1c5b69d17d2a3/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=ce57bf6cc0cdaf8233fd8a20e0d1c5b69d17d2a3",
        "patch": "@@ -374,8 +374,11 @@ class NetinfoRequestHandler : public BaseRequestHandler\n         if (!batch[ID_NETWORKINFO][\"error\"].isNull()) return batch[ID_NETWORKINFO];\n \n         // Count peer connection totals, and if m_verbose is true, store peer data in a vector of structs.\n+        const int64_t time_now{GetSystemTimeInSeconds()};\n         int ipv4_i{0}, ipv6_i{0}, onion_i{0}, block_relay_i{0}, total_i{0}; // inbound conn counters\n         int ipv4_o{0}, ipv6_o{0}, onion_o{0}, block_relay_o{0}, total_o{0}; // outbound conn counters\n+        size_t max_peer_id_length{2}, max_version_length{1};\n+        bool is_asmap_on{false};\n         std::vector<Peer> peers;\n         const UniValue& getpeerinfo{batch[ID_PEERINFO][\"result\"]};\n \n@@ -420,13 +423,45 @@ class NetinfoRequestHandler : public BaseRequestHandler\n                 const double min_ping{peer[\"minping\"].isNull() ? -1 : peer[\"minping\"].get_real()};\n                 const double ping{peer[\"pingtime\"].isNull() ? -1 : peer[\"pingtime\"].get_real()};\n                 peers.push_back({peer_id, mapped_as, version, conn_time, last_recv, last_send, min_ping, ping, addr, sub_version, net_type, is_block_relay, !is_inbound});\n+                max_peer_id_length = std::max(ToString(peer_id).length(), max_peer_id_length);\n+                max_version_length = std::max((ToString(version) + sub_version).length(), max_version_length);\n+                is_asmap_on |= (mapped_as != 0);\n             }\n         }\n \n         // Generate report header.\n         const UniValue& networkinfo{batch[ID_NETWORKINFO][\"result\"]};\n         std::string result{strprintf(\"%s %s%s - %i%s\\n\\n\", PACKAGE_NAME, FormatFullVersion(), ChainToString(), networkinfo[\"protocolversion\"].get_int(), networkinfo[\"subversion\"].get_str())};\n \n+        // Report detailed peer connections list sorted by direction and minimum ping time.\n+        if (m_verbose && !peers.empty()) {\n+            std::sort(peers.begin(), peers.end());\n+            result += \"Peer connections sorted by direction and min ping\\n<-> relay   net minping   ping lastsend lastrecv uptime \";\n+            if (is_asmap_on) result += \" asmap \";\n+            result += strprintf(\"%*s %-*s address\\n\", max_peer_id_length, \"id\", max_version_length, \"version\");\n+            for (const Peer& peer : peers) {\n+                std::string version{ToString(peer.version) + peer.sub_version};\n+                result += strprintf(\n+                    \"%3s %5s %5s%8s%7s %8s %8s%7s%*i %*s %-*s %s\\n\",\n+                    peer.is_outbound ? \"out\" : \"in\",\n+                    peer.is_block_relay ? \"block\" : \"full\",\n+                    NetTypeEnumToString(peer.net_type),\n+                    peer.min_ping == -1 ? \"\" : ToString(round(1000 * peer.min_ping)),\n+                    peer.ping == -1 ? \"\" : ToString(round(1000 * peer.ping)),\n+                    peer.last_send == 0 ? \"\" : ToString(time_now - peer.last_send),\n+                    peer.last_recv == 0 ? \"\" : ToString(time_now - peer.last_recv),\n+                    peer.conn_time == 0 ? \"\" : ToString((time_now - peer.conn_time) / 60),\n+                    is_asmap_on ? 7 : 0, // variable spacing\n+                    is_asmap_on && peer.mapped_as != 0 ? ToString(peer.mapped_as) : \"\",\n+                    max_peer_id_length, // variable spacing\n+                    peer.id,\n+                    max_version_length, // variable spacing\n+                    version == \"0\" ? \"\" : version,\n+                    peer.addr);\n+            }\n+            result += \"                     ms     ms      sec      sec    min\\n\\n\";\n+        }\n+\n         // Report peer connection totals by type.\n         total_i = ipv4_i + ipv6_i + onion_i;\n         total_o = ipv4_o + ipv6_o + onion_o;"
      }
    ]
  },
  {
    "sha": "644be659abfcf7c638e17795bafedad73bc55b27",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2NDRiZTY1OWFiZmNmN2M2MzhlMTc3OTViYWZlZGFkNzNiYzU1YjI3",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-08-30T10:38:40Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-08-31T14:13:17Z"
      },
      "message": "cli: add -netinfo server version check and error message",
      "tree": {
        "sha": "2d32a6df26b3c13c787c24a57e8610ad2a0e2c96",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2d32a6df26b3c13c787c24a57e8610ad2a0e2c96"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/644be659abfcf7c638e17795bafedad73bc55b27",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl9NBYIACgkQT1chs9Dj\nkh0KZg/+IW5xPtc4v4+0oyb6nuadCOVpiNXbDY2P49VEMxfwodowg8FDNKmuNkS6\n+mCiGAuVH1xpIpQZ2/+8bR94E2DlL2e1aFrXi0HOlmWj7UE5A9Vc6Vf+q+IC9kIA\n1oj3yUbJ/8B+jbuPxANYs7tjzO+DDoZkYI/KKhUGZPqmbgET2dGXZlMryP9gkK33\nqsxWf+H7voJyVoNbMa5T9fuI7Y1LRty5q1pYmfT4BXh8I28FSNxUDR5gEQ60PMr3\nVyBjydHyL4cijJVAnhIAxnWJnkYrs8kEd7hAcG8KTaCfsNhFmsrxYIODcjOOXhAi\nISyBDPdMYiaf5LJEd3URese0WOWIOkn8PO+8qJRWicd5unhGKoMd8qKy7bjLf+WG\nk4rMgH2kkZozkod+7n3EJYiUWNoQfxl14VRcuPjPh3oGAE3shxJmXlmJxh+X4vjw\nYAwzi0gFj71HQeqKr6RM1d5U3GS31BrBMASIGC6hkrFsasqGrRrZbFT+QcY3XYWQ\nFNc8QonUjvNrNVUTyDiB2hsQ87V0LhWOPikdwrqyLI/ST/im6mOHVZqHK+hbXbtM\nI3RFhvTF/FImd9rTyKFZFEm7FMVePqS0Jfn5WGezz+xSJ7TtPkjTUDXe5j0DzIBT\nA3DkoTP9aFmom+lYdDbXzjyG4WsODiK0JYV4u1SR6e8XbE4FNd8=\n=Ci4Q\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIA+rKcu897hImlMjq4cMhh4xljbJhcMPVGXeD53nrBa3CP/wECKDXwBTHI47\npp2Y0IBFDBwI8QRfTQWG8Aj85b+//xbDkwCD3+MNLvkMjikoaHR0cHM6Ly9maW5u\nZXkuY2FsZW5kYXIuZXRlcm5pdHl3YWxsLmNvbf/wEFomDkVfFBk4+mBePLsbIXMI\n8SCENqidUt6guU+lVEGjxgqmCSPn0RQFpSxkw01L4ZLZogjxBF9NBYTwCKLj4kiT\nslzzAIPf4w0u+QyOLi1odHRwczovL2FsaWNlLmJ0Yy5jYWxlbmRhci5vcGVudGlt\nZXN0YW1wcy5vcmf/8BB1gOmJNYF8PVkUrhQ+g8moCPEEX00FhPAI0xnhOoSCWtcA\ng9/jDS75DI4sK2h0dHBzOi8vYm9iLmJ0Yy5jYWxlbmRhci5vcGVudGltZXN0YW1w\ncy5vcmfwEPcd8Z49r/v7M7FS8YS3G80I8QRfTQWE8AhQuSP7dMt7AgCD3+MNLvkM\njiMiaHR0cHM6Ly9idGMuY2FsZW5kYXIuY2F0YWxsYXh5LmNvbQ==\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 2d32a6df26b3c13c787c24a57e8610ad2a0e2c96\nparent ce57bf6cc0cdaf8233fd8a20e0d1c5b69d17d2a3\nauthor Jon Atack <jon@atack.com> 1598783920 +0200\ncommitter Jon Atack <jon@atack.com> 1598883197 +0200\n\ncli: add -netinfo server version check and error message\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/644be659abfcf7c638e17795bafedad73bc55b27",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/644be659abfcf7c638e17795bafedad73bc55b27",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/644be659abfcf7c638e17795bafedad73bc55b27/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ce57bf6cc0cdaf8233fd8a20e0d1c5b69d17d2a3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ce57bf6cc0cdaf8233fd8a20e0d1c5b69d17d2a3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ce57bf6cc0cdaf8233fd8a20e0d1c5b69d17d2a3"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 5,
      "deletions": 1
    },
    "files": [
      {
        "sha": "f895d90febcdb4fc2bc9ee0be49cb5babd284c78",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/644be659abfcf7c638e17795bafedad73bc55b27/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/644be659abfcf7c638e17795bafedad73bc55b27/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=644be659abfcf7c638e17795bafedad73bc55b27",
        "patch": "@@ -373,6 +373,11 @@ class NetinfoRequestHandler : public BaseRequestHandler\n         if (!batch[ID_PEERINFO][\"error\"].isNull()) return batch[ID_PEERINFO];\n         if (!batch[ID_NETWORKINFO][\"error\"].isNull()) return batch[ID_NETWORKINFO];\n \n+        const UniValue& networkinfo{batch[ID_NETWORKINFO][\"result\"]};\n+        if (networkinfo[\"version\"].get_int() < 209900) {\n+            throw std::runtime_error(\"-netinfo requires bitcoind server to be running v0.21.0 and up\");\n+        }\n+\n         // Count peer connection totals, and if m_verbose is true, store peer data in a vector of structs.\n         const int64_t time_now{GetSystemTimeInSeconds()};\n         int ipv4_i{0}, ipv6_i{0}, onion_i{0}, block_relay_i{0}, total_i{0}; // inbound conn counters\n@@ -430,7 +435,6 @@ class NetinfoRequestHandler : public BaseRequestHandler\n         }\n \n         // Generate report header.\n-        const UniValue& networkinfo{batch[ID_NETWORKINFO][\"result\"]};\n         std::string result{strprintf(\"%s %s%s - %i%s\\n\\n\", PACKAGE_NAME, FormatFullVersion(), ChainToString(), networkinfo[\"protocolversion\"].get_int(), networkinfo[\"subversion\"].get_str())};\n \n         // Report detailed peer connections list sorted by direction and minimum ping time."
      }
    ]
  },
  {
    "sha": "4e2f2ddd6444d93dd7e60ec67cc393dfc2a29b9d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0ZTJmMmRkZDY0NDRkOTNkZDdlNjBlYzY3Y2MzOTNkZmMyYTI5Yjlk",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-08-28T12:03:06Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-08-31T14:13:26Z"
      },
      "message": "cli: add getpeerinfo last_{block,transaction} to -netinfo",
      "tree": {
        "sha": "da4e82835e337a3664460b771fde8851d2e2f65e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/da4e82835e337a3664460b771fde8851d2e2f65e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4e2f2ddd6444d93dd7e60ec67cc393dfc2a29b9d",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl9NBYcACgkQT1chs9Dj\nkh24Vw/9HZ1b9cJ4qEABu9TY35tWYsRJAse168R9lOv95XjhPbkPAVLfEtIj/zz3\nQmMDRYarlXw730hcBG6YyhZnRoGu7bW3Nt4IEAJcDqdeAdTWxdsD/Lp9TCsfsLqN\nKKaiEQ+j3pLdBFM4dVFyo1qq0aGY10ra3QZQBtmtOPLSueUKAAC/v0LHP+mMmlk2\n6Vja45JLOjmpk84p5MDzHCdsVA457W+CAhqD4aejw5z4/W2qvuOwChaxLQwVZ1o1\nmrbpNenAoiftz2Xn7T7TZpQkkQoI2IZmkg5HNDFDpeqlQvFgb3s8zX+nd+yk7Rvu\nYycNe/M6h9cTZx6wP6+KPz5kGPGapFe3uHF1WapALj08hWY4fKUy3YNsNS+PqBeu\n59pYMr2F87gUuuqE9nQL2aShGGslZJIaqlLu+vlLYV1Cgime+hIA31lnP0sdbSkb\nIul7P8c9YLmY4QUhEIiHP6p7psqqqt2ESQV/6O6adtMPBldQxd0rTkDtWjWkt0LS\niykV3YKTDh+2ZZE9zHrJTr8Sob9WffkPwbfUx5KX+OFCO7QSXXwdaTIxmrF3u4mt\nKyk7DA6sXcQlZoMCDmj8OHDV9BRmC5aPNs5AKevOI5Gq+YOw9Pz6m7GIYmeH18ob\nIkV44ANNEBvHtleqZBRLNRKuIiJYhaV/CA2qJIBbXgsZeaB5+gY=\n=BTOz\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIFKAyqPMOnvMwQdkdUiZss+4Bt9dJg6n9DIZ0E6AEkWHCP/wEE+7fquCvM2l\nVOYghfqYWYkI8QRfTQWJ8AgntiXQ1hd1/gCD3+MNLvkMjikoaHR0cHM6Ly9maW5u\nZXkuY2FsZW5kYXIuZXRlcm5pdHl3YWxsLmNvbf/wEFrBB07hcdVeXXA4Yj6Rw7UI\n8QRfTQWJ8Aj9zrfDuh+xXwCD3+MNLvkMji4taHR0cHM6Ly9hbGljZS5idGMuY2Fs\nZW5kYXIub3BlbnRpbWVzdGFtcHMub3Jn//AQohZlPUXU+JfoYKpUQjz8YQjxBF9N\nBYnwCKuHBTK2OI75AIPf4w0u+QyOLCtodHRwczovL2JvYi5idGMuY2FsZW5kYXIu\nb3BlbnRpbWVzdGFtcHMub3Jn8BC7uNvwJY5p54h/9kkEta7CCPEEX00FiPAI2byz\nCuIeCu8Ag9/jDS75DI4jImh0dHBzOi8vYnRjLmNhbGVuZGFyLmNhdGFsbGF4eS5j\nb20=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree da4e82835e337a3664460b771fde8851d2e2f65e\nparent 644be659abfcf7c638e17795bafedad73bc55b27\nauthor Jon Atack <jon@atack.com> 1598616186 +0200\ncommitter Jon Atack <jon@atack.com> 1598883206 +0200\n\ncli: add getpeerinfo last_{block,transaction} to -netinfo\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4e2f2ddd6444d93dd7e60ec67cc393dfc2a29b9d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4e2f2ddd6444d93dd7e60ec67cc393dfc2a29b9d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4e2f2ddd6444d93dd7e60ec67cc393dfc2a29b9d/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "644be659abfcf7c638e17795bafedad73bc55b27",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/644be659abfcf7c638e17795bafedad73bc55b27",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/644be659abfcf7c638e17795bafedad73bc55b27"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 10,
      "deletions": 4
    },
    "files": [
      {
        "sha": "d63a796a16144a3b6f3bfc26ea6069395159a31e",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 4,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4e2f2ddd6444d93dd7e60ec67cc393dfc2a29b9d/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4e2f2ddd6444d93dd7e60ec67cc393dfc2a29b9d/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=4e2f2ddd6444d93dd7e60ec67cc393dfc2a29b9d",
        "patch": "@@ -325,8 +325,10 @@ class NetinfoRequestHandler : public BaseRequestHandler\n         int mapped_as;\n         int version;\n         int64_t conn_time;\n+        int64_t last_blck;\n         int64_t last_recv;\n         int64_t last_send;\n+        int64_t last_trxn;\n         double min_ping;\n         double ping;\n         std::string addr;\n@@ -423,11 +425,13 @@ class NetinfoRequestHandler : public BaseRequestHandler\n                 const int version{peer[\"version\"].get_int()};\n                 const std::string sub_version{peer[\"subver\"].get_str()};\n                 const int64_t conn_time{peer[\"conntime\"].get_int64()};\n+                const int64_t last_blck{peer[\"last_block\"].get_int64()};\n                 const int64_t last_recv{peer[\"lastrecv\"].get_int64()};\n                 const int64_t last_send{peer[\"lastsend\"].get_int64()};\n+                const int64_t last_trxn{peer[\"last_transaction\"].get_int64()};\n                 const double min_ping{peer[\"minping\"].isNull() ? -1 : peer[\"minping\"].get_real()};\n                 const double ping{peer[\"pingtime\"].isNull() ? -1 : peer[\"pingtime\"].get_real()};\n-                peers.push_back({peer_id, mapped_as, version, conn_time, last_recv, last_send, min_ping, ping, addr, sub_version, net_type, is_block_relay, !is_inbound});\n+                peers.push_back({peer_id, mapped_as, version, conn_time, last_blck, last_recv, last_send, last_trxn, min_ping, ping, addr, sub_version, net_type, is_block_relay, !is_inbound});\n                 max_peer_id_length = std::max(ToString(peer_id).length(), max_peer_id_length);\n                 max_version_length = std::max((ToString(version) + sub_version).length(), max_version_length);\n                 is_asmap_on |= (mapped_as != 0);\n@@ -440,20 +444,22 @@ class NetinfoRequestHandler : public BaseRequestHandler\n         // Report detailed peer connections list sorted by direction and minimum ping time.\n         if (m_verbose && !peers.empty()) {\n             std::sort(peers.begin(), peers.end());\n-            result += \"Peer connections sorted by direction and min ping\\n<-> relay   net minping   ping lastsend lastrecv uptime \";\n+            result += \"Peer connections sorted by direction and min ping\\n<-> relay   net mping   ping send recv  txn  blk uptime \";\n             if (is_asmap_on) result += \" asmap \";\n             result += strprintf(\"%*s %-*s address\\n\", max_peer_id_length, \"id\", max_version_length, \"version\");\n             for (const Peer& peer : peers) {\n                 std::string version{ToString(peer.version) + peer.sub_version};\n                 result += strprintf(\n-                    \"%3s %5s %5s%8s%7s %8s %8s%7s%*i %*s %-*s %s\\n\",\n+                    \"%3s %5s %5s%6s%7s%5s%5s%5s%5s%7s%*i %*s %-*s %s\\n\",\n                     peer.is_outbound ? \"out\" : \"in\",\n                     peer.is_block_relay ? \"block\" : \"full\",\n                     NetTypeEnumToString(peer.net_type),\n                     peer.min_ping == -1 ? \"\" : ToString(round(1000 * peer.min_ping)),\n                     peer.ping == -1 ? \"\" : ToString(round(1000 * peer.ping)),\n                     peer.last_send == 0 ? \"\" : ToString(time_now - peer.last_send),\n                     peer.last_recv == 0 ? \"\" : ToString(time_now - peer.last_recv),\n+                    peer.last_trxn == 0 ? \"\" : ToString((time_now - peer.last_trxn) / 60),\n+                    peer.last_blck == 0 ? \"\" : ToString((time_now - peer.last_blck) / 60),\n                     peer.conn_time == 0 ? \"\" : ToString((time_now - peer.conn_time) / 60),\n                     is_asmap_on ? 7 : 0, // variable spacing\n                     is_asmap_on && peer.mapped_as != 0 ? ToString(peer.mapped_as) : \"\",\n@@ -463,7 +469,7 @@ class NetinfoRequestHandler : public BaseRequestHandler\n                     version == \"0\" ? \"\" : version,\n                     peer.addr);\n             }\n-            result += \"                     ms     ms      sec      sec    min\\n\\n\";\n+            result += \"                   ms     ms  sec  sec  min  min    min\\n\\n\";\n         }\n \n         // Report peer connection totals by type."
      }
    ]
  },
  {
    "sha": "077b3ac9284a90f33e31c64c49062ceaf815af60",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowNzdiM2FjOTI4NGE5MGYzM2UzMWM2NGM0OTA2MmNlYWY4MTVhZjYw",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-08-29T09:28:48Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-08-31T14:13:29Z"
      },
      "message": "cli: change -netinfo optional arg from bool to int",
      "tree": {
        "sha": "33f369736f197728ee65d5491b873b80c6ea4d7e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/33f369736f197728ee65d5491b873b80c6ea4d7e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/077b3ac9284a90f33e31c64c49062ceaf815af60",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl9NBYoACgkQT1chs9Dj\nkh0nOg//WSxHz00YoG+QTLNedQl5xJfmYyoQyfxNTHsJLWBUGqaAmI4NJHw31i0n\nYeGsUTxCMrXHjPd9BiH0M/5s7H2SC3O40nMaXxtacm6TtGOhZ7rFlM0o1Jhysl+l\nnVIA0FaUojICYc+rZEdDhb66WaP8s7LnxPYvrQ4ZOG2zPFrH17pzNXqyaU957HRS\nQ7tnCRxz4jAlD71UC3VmFNCjGzRNsIMoTis0NQadUO/AByP91PDaRrXIZPGG/LuR\njgmIynFJr/55rmoW3UoJQH2Mm3en+f64NcrbztIVngSRIHHCg+5RglJGkD6fYD+U\n9/rk9i8BYd98sm35u97paqxRMF2JaZHjVwErixRe7ucOQxcOGS2UYPiKhDSVNEsv\nusgO38Jj5AV+tNc+p9XatfE9XP5LcD6RzxnoP8CtFGhsfeVswfgUjjlUtFAZFTWo\nteczKjBPDqCgIcDj9ZIpStwoq273VlOQ/KA05wlSiE6ReA+PwkstfTAIratCryL7\nw6KyrN82Q8EC6VWL6xwqmfZ0zDcZzqUMTFdHcyJKzY2K17XJgX2hNw3OZo9o6SxE\np6/TC2qh7lZjYeAzZkQ7k1OuepmNRd28Ue521rscyOB5kdXRTvB8Bowcp+oAhYhW\n1fRvKA3g3kQqr4ob3gVnzkhNjviC19q+vaSHhcdRHSOwYXIlIuc=\n=53OU\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIFACHkbbIw4VRT5Rn7Cdm9mTGWdK8L5/FctEh0wldJEyCP/wEAPO0s99qrJI\n+7+xThF5SToI8QRfTQWM8AhuFmD9uI8jzQCD3+MNLvkMjikoaHR0cHM6Ly9maW5u\nZXkuY2FsZW5kYXIuZXRlcm5pdHl3YWxsLmNvbf/wEHRtCkYcyNp22NBFpnGX9lQI\n8CA7IRZ70cfkK1v6sPF0ooKSWApsukX2WCi3lhngfO1lOgjxBF9NBYvwCG6GlpBF\nPybEAIPf4w0u+QyOIyJodHRwczovL2J0Yy5jYWxlbmRhci5jYXRhbGxheHkuY29t\n//AQgE0et/Zk2/IHDwyPcZK29QjwIAtiZKs60qcoH7bG80ApSvX9l96tTReNWspi\nLapBNUR6CPEEX00Fi/AIymmmKu0ioYEAg9/jDS75DI4uLWh0dHBzOi8vYWxpY2Uu\nYnRjLmNhbGVuZGFyLm9wZW50aW1lc3RhbXBzLm9yZ/AQ/97eyyZQxt5BRPUASFuZ\nhAjwIOmaHaSCSOlxAYl2yEdcaajicUnjIbMzx6HUVPjoLhowCPEEX00Fi/AIEMdg\nrJSafbEAg9/jDS75DI4sK2h0dHBzOi8vYm9iLmJ0Yy5jYWxlbmRhci5vcGVudGlt\nZXN0YW1wcy5vcmc=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 33f369736f197728ee65d5491b873b80c6ea4d7e\nparent 4e2f2ddd6444d93dd7e60ec67cc393dfc2a29b9d\nauthor Jon Atack <jon@atack.com> 1598693328 +0200\ncommitter Jon Atack <jon@atack.com> 1598883209 +0200\n\ncli: change -netinfo optional arg from bool to int\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/077b3ac9284a90f33e31c64c49062ceaf815af60",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/077b3ac9284a90f33e31c64c49062ceaf815af60",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/077b3ac9284a90f33e31c64c49062ceaf815af60/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4e2f2ddd6444d93dd7e60ec67cc393dfc2a29b9d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4e2f2ddd6444d93dd7e60ec67cc393dfc2a29b9d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4e2f2ddd6444d93dd7e60ec67cc393dfc2a29b9d"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 10,
      "deletions": 7
    },
    "files": [
      {
        "sha": "e15e7d1d8eed672a62698b5a79bbc40c4e8a88d2",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 7,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/077b3ac9284a90f33e31c64c49062ceaf815af60/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/077b3ac9284a90f33e31c64c49062ceaf815af60/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=077b3ac9284a90f33e31c64c49062ceaf815af60",
        "patch": "@@ -58,7 +58,7 @@ static void SetupCliArgs(ArgsManager& argsman)\n     argsman.AddArg(\"-datadir=<dir>\", \"Specify data directory\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     argsman.AddArg(\"-generate\", strprintf(\"Generate blocks immediately, equivalent to RPC generatenewaddress followed by RPC generatetoaddress. Optional positional integer arguments are number of blocks to generate (default: %s) and maximum iterations to try (default: %s), equivalent to RPC generatetoaddress nblocks and maxtries arguments. Example: bitcoin-cli -generate 4 1000\", DEFAULT_NBLOCKS, DEFAULT_MAX_TRIES), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     argsman.AddArg(\"-getinfo\", \"Get general information from the remote server. Note that unlike server-side RPC calls, the results of -getinfo is the result of multiple non-atomic requests. Some entries in the result may represent results from different states (e.g. wallet balance may be as of a different block from the chain state reported)\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n-    argsman.AddArg(\"-netinfo\", \"Get network peer connection information from the remote server. An optional boolean argument can be passed for a detailed peers listing (default: false).\", ArgsManager::ALLOW_BOOL, OptionsCategory::OPTIONS);\n+    argsman.AddArg(\"-netinfo\", \"Get network peer connection information from the remote server. An optional integer argument can be passed for a detailed peers listing (default: 0).\", ArgsManager::ALLOW_INT, OptionsCategory::OPTIONS);\n \n     SetupChainParamsBaseOptions(argsman);\n     argsman.AddArg(\"-named\", strprintf(\"Pass named instead of positional arguments (default: %s)\", DEFAULT_NAMED), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n@@ -314,7 +314,8 @@ class NetinfoRequestHandler : public BaseRequestHandler\n         return mapped_as == 0 && onion_pos != std::string::npos && addr_len > ONION_LEN &&\n                (onion_pos == addr_len - ONION_LEN || onion_pos == addr.find_last_of(\":\") - ONION_LEN);\n     }\n-    bool m_verbose{false}; //!< Whether user requested verbose -netinfo report\n+    uint8_t m_details_level{0}; //!< Optional user-supplied arg to set dashboard details level\n+    bool DetailsRequested() const { return m_details_level != 0; }\n     enum struct NetType {\n         ipv4,\n         ipv6,\n@@ -360,8 +361,10 @@ class NetinfoRequestHandler : public BaseRequestHandler\n     UniValue PrepareRequest(const std::string& method, const std::vector<std::string>& args) override\n     {\n         if (!args.empty()) {\n-            const std::string arg{ToLower(args.at(0))};\n-            m_verbose = (arg == \"true\" || arg == \"t\");\n+            uint8_t n{0};\n+            if (ParseUInt8(args.at(0), &n)) {\n+                m_details_level = n;\n+            }\n         }\n         UniValue result(UniValue::VARR);\n         result.push_back(JSONRPCRequestObj(\"getpeerinfo\", NullUniValue, ID_PEERINFO));\n@@ -380,7 +383,7 @@ class NetinfoRequestHandler : public BaseRequestHandler\n             throw std::runtime_error(\"-netinfo requires bitcoind server to be running v0.21.0 and up\");\n         }\n \n-        // Count peer connection totals, and if m_verbose is true, store peer data in a vector of structs.\n+        // Count peer connection totals, and if DetailsRequested(), store peer data in a vector of structs.\n         const int64_t time_now{GetSystemTimeInSeconds()};\n         int ipv4_i{0}, ipv6_i{0}, onion_i{0}, block_relay_i{0}, total_i{0}; // inbound conn counters\n         int ipv4_o{0}, ipv6_o{0}, onion_o{0}, block_relay_o{0}, total_o{0}; // outbound conn counters\n@@ -419,7 +422,7 @@ class NetinfoRequestHandler : public BaseRequestHandler\n                 }\n                 if (is_block_relay) ++block_relay_o;\n             }\n-            if (m_verbose) {\n+            if (DetailsRequested()) {\n                 // Push data for this peer to the peers vector.\n                 const int peer_id{peer[\"id\"].get_int()};\n                 const int version{peer[\"version\"].get_int()};\n@@ -442,7 +445,7 @@ class NetinfoRequestHandler : public BaseRequestHandler\n         std::string result{strprintf(\"%s %s%s - %i%s\\n\\n\", PACKAGE_NAME, FormatFullVersion(), ChainToString(), networkinfo[\"protocolversion\"].get_int(), networkinfo[\"subversion\"].get_str())};\n \n         // Report detailed peer connections list sorted by direction and minimum ping time.\n-        if (m_verbose && !peers.empty()) {\n+        if (DetailsRequested() && !peers.empty()) {\n             std::sort(peers.begin(), peers.end());\n             result += \"Peer connections sorted by direction and min ping\\n<-> relay   net mping   ping send recv  txn  blk uptime \";\n             if (is_asmap_on) result += \" asmap \";"
      }
    ]
  },
  {
    "sha": "bf1f913c4405cba35c8f99ec07b407940eb955b6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiZjFmOTEzYzQ0MDVjYmEzNWM4Zjk5ZWMwN2I0MDc5NDBlYjk1NWI2",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-08-29T10:20:37Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-09-02T14:24:23Z"
      },
      "message": "cli -netinfo: display multiple levels of details",
      "tree": {
        "sha": "5888c83e7bcb859603cc7dcef3167fd75bb35387",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5888c83e7bcb859603cc7dcef3167fd75bb35387"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bf1f913c4405cba35c8f99ec07b407940eb955b6",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl9Pqx0ACgkQT1chs9Dj\nkh01phAAnpbR3AX4WGYALPabuKFSvz9UAwepUer2e1Tp+ro09QsK/6VFJTeWnRVu\nVdayMRN//sq/KZrz4D36bFgrZRCULnOU/b5XgXNLXGWj9+FQM3yFPoZwwjZhLiDB\n0vb9SShQtNfRdO4fXyY8nrH/+dU0/ZmUmxXGKtPV0DI2XIZXxJWpehjJWvIeruZA\nIDcXTFXzt88bhQPX2qGm+UgUW/rx4PsuqKDlLrh5a1ha3uBQ7Y/Xsl5ln+ENW59P\nhpTtisPO5eotBNKSlKmqqOmkIDYgtie5bgZEH/tNjDLtuNA2s1N/ISs0C72dc7yQ\nejG86/3fRjhw+YjAXZ5ZBtFnjuSlV9Kmu2bo4XyhSM68/vmY1VBSuODQwwv9W2lD\nO8uUFYUC5uUkF1ZmYoyfUFnKsR5BDAUFxtwPrT3xv2yY3onEM+8HDvta72Is9tD5\nAtq9RQW5/i8MJOyMiGXN7wO805w7/OGenM+wp7j8mo9DWkgde8s3RKf22ew0TiB/\noYhqGpbb/597ErExQsRb7SkLDg+MWsZgUQiEaFIyNYKfKm+ADft4OMCbJ6kByrbN\nhRwvQuDGsdN9vQXt5hsgrAKh7ggdG9mbF1yP9afx1mHow+ESzzlvxmGhBk9psQRg\nG8UZaFF3w0Dd6h8f7VkFMGhtvMOHElFmZj8RlBg/rzEHNt0GlUY=\n=bKs6\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIFVlBBYs217XmiqX6zc/Bbx2v/uA4dn6yAyglztwwgu7CP/wEBes0P3u7off\nPoyjZ9xDXZAI8QRfT6sg8AicMoimS1W5lACD3+MNLvkMjikoaHR0cHM6Ly9maW5u\nZXkuY2FsZW5kYXIuZXRlcm5pdHl3YWxsLmNvbf/wEDMVQn3NFfe8V/o4rb9MtDgI\n8QRfT6sf8AhuW6fSJ16/hQCD3+MNLvkMjiwraHR0cHM6Ly9ib2IuYnRjLmNhbGVu\nZGFyLm9wZW50aW1lc3RhbXBzLm9yZ//wEIrDmY+TIsh8+gl8tpyfeJQI8QRfT6sf\n8AhhwRBwCkHXiQCD3+MNLvkMjiMiaHR0cHM6Ly9idGMuY2FsZW5kYXIuY2F0YWxs\nYXh5LmNvbfAQ83z3dWsR0TQi0zePCaFbkwjxBF9Pqx/wCPSTURDMzf6JAIPf4w0u\n+QyOLi1odHRwczovL2FsaWNlLmJ0Yy5jYWxlbmRhci5vcGVudGltZXN0YW1wcy5v\ncmc=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 5888c83e7bcb859603cc7dcef3167fd75bb35387\nparent 077b3ac9284a90f33e31c64c49062ceaf815af60\nauthor Jon Atack <jon@atack.com> 1598696437 +0200\ncommitter Jon Atack <jon@atack.com> 1599056663 +0200\n\ncli -netinfo: display multiple levels of details\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bf1f913c4405cba35c8f99ec07b407940eb955b6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bf1f913c4405cba35c8f99ec07b407940eb955b6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bf1f913c4405cba35c8f99ec07b407940eb955b6/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "077b3ac9284a90f33e31c64c49062ceaf815af60",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/077b3ac9284a90f33e31c64c49062ceaf815af60",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/077b3ac9284a90f33e31c64c49062ceaf815af60"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 11,
      "deletions": 9
    },
    "files": [
      {
        "sha": "abbb9490014152138c1e55fc0cfb3dfa3769dc28",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 9,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bf1f913c4405cba35c8f99ec07b407940eb955b6/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bf1f913c4405cba35c8f99ec07b407940eb955b6/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=bf1f913c4405cba35c8f99ec07b407940eb955b6",
        "patch": "@@ -58,7 +58,7 @@ static void SetupCliArgs(ArgsManager& argsman)\n     argsman.AddArg(\"-datadir=<dir>\", \"Specify data directory\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     argsman.AddArg(\"-generate\", strprintf(\"Generate blocks immediately, equivalent to RPC generatenewaddress followed by RPC generatetoaddress. Optional positional integer arguments are number of blocks to generate (default: %s) and maximum iterations to try (default: %s), equivalent to RPC generatetoaddress nblocks and maxtries arguments. Example: bitcoin-cli -generate 4 1000\", DEFAULT_NBLOCKS, DEFAULT_MAX_TRIES), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     argsman.AddArg(\"-getinfo\", \"Get general information from the remote server. Note that unlike server-side RPC calls, the results of -getinfo is the result of multiple non-atomic requests. Some entries in the result may represent results from different states (e.g. wallet balance may be as of a different block from the chain state reported)\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n-    argsman.AddArg(\"-netinfo\", \"Get network peer connection information from the remote server. An optional integer argument can be passed for a detailed peers listing (default: 0).\", ArgsManager::ALLOW_INT, OptionsCategory::OPTIONS);\n+    argsman.AddArg(\"-netinfo\", \"Get network peer connection information from the remote server. An optional integer argument from 0 to 4 can be passed for different peers listings (default: 0).\", ArgsManager::ALLOW_INT, OptionsCategory::OPTIONS);\n \n     SetupChainParamsBaseOptions(argsman);\n     argsman.AddArg(\"-named\", strprintf(\"Pass named instead of positional arguments (default: %s)\", DEFAULT_NAMED), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n@@ -315,7 +315,9 @@ class NetinfoRequestHandler : public BaseRequestHandler\n                (onion_pos == addr_len - ONION_LEN || onion_pos == addr.find_last_of(\":\") - ONION_LEN);\n     }\n     uint8_t m_details_level{0}; //!< Optional user-supplied arg to set dashboard details level\n-    bool DetailsRequested() const { return m_details_level != 0; }\n+    bool DetailsRequested() const { return m_details_level > 0 && m_details_level < 5; }\n+    bool IsAddressSelected() const { return m_details_level == 2 || m_details_level == 4; }\n+    bool IsVersionSelected() const { return m_details_level == 3 || m_details_level == 4; }\n     enum struct NetType {\n         ipv4,\n         ipv6,\n@@ -387,7 +389,7 @@ class NetinfoRequestHandler : public BaseRequestHandler\n         const int64_t time_now{GetSystemTimeInSeconds()};\n         int ipv4_i{0}, ipv6_i{0}, onion_i{0}, block_relay_i{0}, total_i{0}; // inbound conn counters\n         int ipv4_o{0}, ipv6_o{0}, onion_o{0}, block_relay_o{0}, total_o{0}; // outbound conn counters\n-        size_t max_peer_id_length{2}, max_version_length{1};\n+        size_t max_peer_id_length{2}, max_addr_length{0};\n         bool is_asmap_on{false};\n         std::vector<Peer> peers;\n         const UniValue& getpeerinfo{batch[ID_PEERINFO][\"result\"]};\n@@ -436,7 +438,7 @@ class NetinfoRequestHandler : public BaseRequestHandler\n                 const double ping{peer[\"pingtime\"].isNull() ? -1 : peer[\"pingtime\"].get_real()};\n                 peers.push_back({peer_id, mapped_as, version, conn_time, last_blck, last_recv, last_send, last_trxn, min_ping, ping, addr, sub_version, net_type, is_block_relay, !is_inbound});\n                 max_peer_id_length = std::max(ToString(peer_id).length(), max_peer_id_length);\n-                max_version_length = std::max((ToString(version) + sub_version).length(), max_version_length);\n+                max_addr_length = std::max(addr.length() + 1, max_addr_length);\n                 is_asmap_on |= (mapped_as != 0);\n             }\n         }\n@@ -449,11 +451,11 @@ class NetinfoRequestHandler : public BaseRequestHandler\n             std::sort(peers.begin(), peers.end());\n             result += \"Peer connections sorted by direction and min ping\\n<-> relay   net mping   ping send recv  txn  blk uptime \";\n             if (is_asmap_on) result += \" asmap \";\n-            result += strprintf(\"%*s %-*s address\\n\", max_peer_id_length, \"id\", max_version_length, \"version\");\n+            result += strprintf(\"%*s %-*s%s\\n\", max_peer_id_length, \"id\", IsAddressSelected() ? max_addr_length : 0, IsAddressSelected() ? \"address\" : \"\", IsVersionSelected() ? \"version\" : \"\");\n             for (const Peer& peer : peers) {\n                 std::string version{ToString(peer.version) + peer.sub_version};\n                 result += strprintf(\n-                    \"%3s %5s %5s%6s%7s%5s%5s%5s%5s%7s%*i %*s %-*s %s\\n\",\n+                    \"%3s %5s %5s%6s%7s%5s%5s%5s%5s%7s%*i %*s %-*s%s\\n\",\n                     peer.is_outbound ? \"out\" : \"in\",\n                     peer.is_block_relay ? \"block\" : \"full\",\n                     NetTypeEnumToString(peer.net_type),\n@@ -468,9 +470,9 @@ class NetinfoRequestHandler : public BaseRequestHandler\n                     is_asmap_on && peer.mapped_as != 0 ? ToString(peer.mapped_as) : \"\",\n                     max_peer_id_length, // variable spacing\n                     peer.id,\n-                    max_version_length, // variable spacing\n-                    version == \"0\" ? \"\" : version,\n-                    peer.addr);\n+                    IsAddressSelected() ? max_addr_length : 0, // variable spacing\n+                    IsAddressSelected() ? peer.addr : \"\",\n+                    IsVersionSelected() && version != \"0\" ? version : \"\");\n             }\n             result += \"                   ms     ms  sec  sec  min  min    min\\n\\n\";\n         }"
      }
    ]
  }
]