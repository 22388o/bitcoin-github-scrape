DrahtBot,2020-06-19 02:33:49,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19160 (multiprocess: Add basic spawn and IPC support by ryanofsky)\n* #10102 ([experimental] Multiprocess bitcoin by ryan",https://github.com/bitcoin/bitcoin/pull/19323#issuecomment-646401251,646401251,
hebasto,2020-06-19 07:24:10,"Updated 369f5d263ee5a26b62545b604ee0b33f24eaadfa -> 434f74365ebb265bcf04bbb1c87d368b5c6553a4 ([pr19323.01](https://github.com/hebasto/bitcoin/commits/pr19323.01) -> [pr19323.02](https://github.com/hebasto/bitcoin/commits/pr19323.02), [diff](https://github.com/hebasto/bitcoin/compare/pr19323.01..pr19323.02)):\n\n- addressed @MarcoFalke's [comment](https://github.com/bitcoin/bitcoin/pull/19323#dis",https://github.com/bitcoin/bitcoin/pull/19323#issuecomment-646482928,646482928,
MarcoFalke,2020-06-19 11:38:20,"weak review ACK 434f74365ebb265bcf04bbb1c87d368b5c6553a4\n\ncc @ryanofsky is the use of `NodeContext` here appropriate?",https://github.com/bitcoin/bitcoin/pull/19323#issuecomment-646589252,646589252,
hebasto,2020-06-19 18:04:50,"Updated 434f74365ebb265bcf04bbb1c87d368b5c6553a4 -> e75b125264e8dc8115fd035b1334b023a4913a11 ([pr19323.02](https://github.com/hebasto/bitcoin/commits/pr19323.02) -> [pr19323.03](https://github.com/hebasto/bitcoin/commits/pr19323.03), [diff](https://github.com/hebasto/bitcoin/compare/pr19323.02..pr19323.03)):\n\n- addressed @ryanofsky's [comment](https://github.com/bitcoin/bitcoin/pull/19323#pull",https://github.com/bitcoin/bitcoin/pull/19323#issuecomment-646796953,646796953,
hebasto,2020-06-20 11:15:04,"Updated e75b125264e8dc8115fd035b1334b023a4913a11 -> 44ef1170cf1466bfa3ea296c78b821605caa0311 ([pr19323.03](https://github.com/hebasto/bitcoin/commits/pr19323.03) -> [pr19323.04](https://github.com/hebasto/bitcoin/commits/pr19323.04), [diff](https://github.com/hebasto/bitcoin/compare/pr19323.03..pr19323.04)):\n\n- addressed @MarcoFalke's [comment](https://github.com/bitcoin/bitcoin/pull/19323#dis",https://github.com/bitcoin/bitcoin/pull/19323#issuecomment-646980904,646980904,
MarcoFalke,2020-07-02 17:14:26,"Review ACK 44ef1170cf1466bfa3ea296c78b821605caa0311 , checked that all RpcInterruptionPoint are replaced by node.rpc_interruption_point ðŸ‘¥\n\n<details><summary>Show signature and timestamp</summary>\n\nSignature:\n\n```\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\nReview ACK 44ef1170cf1466bfa3ea296c78b821605caa0311 , checked that all RpcInterruptionPoint are replaced by node.rpc_i",https://github.com/bitcoin/bitcoin/pull/19323#issuecomment-653127062,653127062,
MarcoFalke,2020-07-02 17:15:06,"cc @fanquake you might be interested in this, based on your bug report #19255 ",https://github.com/bitcoin/bitcoin/pull/19323#issuecomment-653127395,653127395,
hebasto,2020-07-08 16:20:28,Rebased 44ef1170cf1466bfa3ea296c78b821605caa0311 -> 314b49bd50906c03911d2b17a21a34685a60b3c8 ([pr19323.04](https://github.com/hebasto/bitcoin/commits/pr19323.04) -> [pr19323.05](https://github.com/hebasto/bitcoin/commits/pr19323.05)) due to the conflict with #19328.,https://github.com/bitcoin/bitcoin/pull/19323#issuecomment-655619927,655619927,
MarcoFalke,2020-06-18 20:04:13,"If the rpc code needs such a workaround for the gui, I'd prefer to at least explain it with a comment",https://github.com/bitcoin/bitcoin/pull/19323#discussion_r442472715,442472715,src/rpc/blockchain.cpp
hebasto,2020-06-18 20:17:35,"Isn't it self-documented: ""interrupt RPC only if RPC is running""?",https://github.com/bitcoin/bitcoin/pull/19323#discussion_r442479222,442479222,src/rpc/blockchain.cpp
MarcoFalke,2020-06-18 20:27:21,"Also, it seems racy when the rpc is shut down during flush (which might take a long time)\n\nMaybe the interruption point can be passed in through the `request` similar to how the connman is passed in?",https://github.com/bitcoin/bitcoin/pull/19323#discussion_r442483706,442483706,src/rpc/blockchain.cpp
hebasto,2020-06-18 20:36:41,"> Also, it seems racy when the rpc is shut down during flush (which might take a long time)\n\nDid not get why. `IsRPCRunning()` is checked after synchronous `ForceFlushStateToDisk()` call. During GUI shutdown #17659 should ensure the correct `RPCConsole` behavior.",https://github.com/bitcoin/bitcoin/pull/19323#discussion_r442488133,442488133,src/rpc/blockchain.cpp
MarcoFalke,2020-06-18 20:49:05,"* `gettxoutsetinfo`\n* `stop` -> Doesn't stop because gettxoutsetinfo is not interruptible\n* `gettxoutsetinfo` finishes and server stops",https://github.com/bitcoin/bitcoin/pull/19323#discussion_r442494168,442494168,src/rpc/blockchain.cpp
hebasto,2020-06-19 07:24:33,[Updated](https://github.com/bitcoin/bitcoin/pull/19323#issuecomment-646482928).,https://github.com/bitcoin/bitcoin/pull/19323#discussion_r442676181,442676181,src/rpc/blockchain.cpp
MarcoFalke,2020-06-19 20:20:51,"nit: why not pass in the `rpc_interruption_point` like below  for `GetUTXOStats`?\n\n```suggestion\n        bool res = FindScriptPubKey(g_scan_progress, g_should_abort_scan, count, pcursor.get(), needles, coins, node.rpc_interruption_point);\n```",https://github.com/bitcoin/bitcoin/pull/19323#discussion_r443028301,443028301,src/rpc/blockchain.cpp
hebasto,2020-06-20 11:16:00,[Updated](https://github.com/bitcoin/bitcoin/pull/19323#issuecomment-646980904).,https://github.com/bitcoin/bitcoin/pull/19323#discussion_r443123054,443123054,src/rpc/blockchain.cpp
