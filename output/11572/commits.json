[
  {
    "sha": "ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplYzhlNTAyMWQ3ZTBlM2E2NjM0NGQzNjdiMDMzYzVmZGQxZDg1NGEx",
    "commit": {
      "author": {
        "name": "csdnnet",
        "email": "1398683@163.com",
        "date": "2016-07-05T03:24:32Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2016-07-05T03:24:32Z"
      },
      "message": "Merge pull request #1 from bitcoin/master\n\nfresh",
      "tree": {
        "sha": "c52bdd22beeed11127e019cc3a266d8df7d919cd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c52bdd22beeed11127e019cc3a266d8df7d919cd"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/comments",
    "author": {
      "login": "csdnnet",
      "id": 1964311,
      "node_id": "MDQ6VXNlcjE5NjQzMTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1964311?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/csdnnet",
      "html_url": "https://github.com/csdnnet",
      "followers_url": "https://api.github.com/users/csdnnet/followers",
      "following_url": "https://api.github.com/users/csdnnet/following{/other_user}",
      "gists_url": "https://api.github.com/users/csdnnet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/csdnnet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/csdnnet/subscriptions",
      "organizations_url": "https://api.github.com/users/csdnnet/orgs",
      "repos_url": "https://api.github.com/users/csdnnet/repos",
      "events_url": "https://api.github.com/users/csdnnet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/csdnnet/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d980f9b7d687a1e60eecf3691b592d9806a30f4a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d980f9b7d687a1e60eecf3691b592d9806a30f4a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d980f9b7d687a1e60eecf3691b592d9806a30f4a"
      },
      {
        "sha": "115735d547fdeade822f547eb3e8c8f9961a9b07",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/115735d547fdeade822f547eb3e8c8f9961a9b07",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/115735d547fdeade822f547eb3e8c8f9961a9b07"
      }
    ],
    "stats": {
      "total": 394794,
      "additions": 204340,
      "deletions": 190454
    },
    "files": [
      {
        "sha": "c9cf4a7d9cd03ed588ba9882d26bfd1dd6800fe7",
        "filename": ".gitattributes",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/.gitattributes",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/.gitattributes",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.gitattributes?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -1 +1 @@\n-src/version.cpp export-subst\n+src/clientversion.cpp export-subst"
      },
      {
        "sha": "ce40019dc314fffd33880246f28592ebe7b58b23",
        "filename": ".gitignore",
        "status": "modified",
        "additions": 42,
        "deletions": 9,
        "changes": 51,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.gitignore?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -4,22 +4,39 @@\n src/bitcoin\n src/bitcoind\n src/bitcoin-cli\n+src/bitcoin-tx\n src/test/test_bitcoin\n src/qt/test/test_bitcoin-qt\n \n+# autoreconf\n Makefile.in\n aclocal.m4\n autom4te.cache/\n+build-aux/config.guess\n+build-aux/config.sub\n+build-aux/depcomp\n+build-aux/install-sh\n+build-aux/ltmain.sh\n+build-aux/m4/libtool.m4\n+build-aux/m4/lt~obsolete.m4\n+build-aux/m4/ltoptions.m4\n+build-aux/m4/ltsugar.m4\n+build-aux/m4/ltversion.m4\n+build-aux/missing\n+build-aux/compile\n+build-aux/test-driver\n config.log\n config.status\n configure\n-src/bitcoin-config.h\n-src/bitcoin-config.h.in\n-src/build-aux/\n-src/stamp-h1\n+libtool\n+src/config/bitcoin-config.h\n+src/config/bitcoin-config.h.in\n+src/config/stamp-h1\n share/setup.nsi\n share/qt/Info.plist\n \n+src/univalue/gen\n+\n src/qt/*.moc\n src/qt/moc_*.cpp\n src/qt/forms/ui_*.h\n@@ -28,12 +45,15 @@ src/qt/test/moc*.cpp\n \n .deps\n .dirstamp\n+.libs\n .*.swp\n *.*~*\n *.bak\n *.rej\n *.orig\n+*.pyc\n *.o\n+*.o-*\n *.patch\n .bitcoin\n *.a\n@@ -47,6 +67,10 @@ src/qt/test/moc*.cpp\n *.json.h\n *.raw.h\n \n+#libtool object files\n+*.lo\n+*.la\n+\n # Compilation and Qt preprocessor part\n *.qm\n Makefile\n@@ -56,19 +80,18 @@ Bitcoin-Qt.app\n # Unit-tests\n Makefile.test\n bitcoin-qt_test\n+src/test/buildenv.py\n \n # Resources cpp\n qrc_*.cpp\n \n-# Qt creator\n-*.pro.user\n-\n # Mac specific\n .DS_Store\n build\n \n #lcov\n *.gcno\n+*.gcda\n /*.info\n test_bitcoin.coverage/\n total.coverage/\n@@ -79,6 +102,16 @@ linux-coverage-build\n linux-build\n win32-build\n qa/pull-tester/run-bitcoind-for-test.sh\n-qa/pull-tester/build-tests.sh\n+qa/pull-tester/tests_config.py\n+qa/pull-tester/cache/*\n+qa/pull-tester/test.*/*\n+qa/tmp\n+cache/\n+share/BitcoindComparisonTool.jar\n+\n+!src/leveldb*/Makefile\n+\n+/doc/doxygen/\n \n-!src/leveldb-*/Makefile\n+libbitcoinconsensus.pc\n+contrib/devtools/split-debug.sh"
      },
      {
        "sha": "af9c476dc1d99418cd0d975be739632a60af4d1f",
        "filename": ".travis.yml",
        "status": "added",
        "additions": 73,
        "deletions": 0,
        "changes": 73,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/.travis.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/.travis.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis.yml?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,73 @@\n+sudo: required\n+dist: trusty\n+\n+#workaround for https://github.com/travis-ci/travis-ci/issues/5227\n+addons:\n+  hostname: bitcoin-tester\n+\n+os: linux\n+language: generic\n+cache:\n+  directories:\n+  - depends/built\n+  - depends/sdk-sources\n+  - $HOME/.ccache\n+env:\n+  global:\n+    - MAKEJOBS=-j3\n+    - RUN_TESTS=false\n+    - CHECK_DOC=0\n+    - BOOST_TEST_RANDOM=1$TRAVIS_BUILD_ID\n+    - CCACHE_SIZE=100M\n+    - CCACHE_TEMPDIR=/tmp/.ccache-temp\n+    - CCACHE_COMPRESS=1\n+    - BASE_OUTDIR=$TRAVIS_BUILD_DIR/out\n+    - SDK_URL=https://bitcoin.jonasschnelli.ch/sdks\n+    - PYTHON_DEBUG=1\n+    - WINEDEBUG=fixme-all\n+  matrix:\n+# ARM\n+    - HOST=arm-linux-gnueabihf PACKAGES=\"g++-arm-linux-gnueabihf\" DEP_OPTS=\"NO_QT=1\" CHECK_DOC=1 GOAL=\"install\" BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports\"\n+# Win32\n+    - HOST=i686-w64-mingw32 DPKG_ADD_ARCH=\"i386\" DEP_OPTS=\"NO_QT=1\" PACKAGES=\"python3 nsis g++-mingw-w64-i686 wine1.6 bc openjdk-7-jre-headless\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-reduce-exports\"\n+# 32-bit + dash\n+    - HOST=i686-pc-linux-gnu PACKAGES=\"g++-multilib bc python3-zmq openjdk-7-jre-headless\" DEP_OPTS=\"NO_QT=1\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-zmq --enable-glibc-back-compat --enable-reduce-exports LDFLAGS=-static-libstdc++\" USE_SHELL=\"/bin/dash\"\n+# Win64\n+    - HOST=x86_64-w64-mingw32 DPKG_ADD_ARCH=\"i386\" DEP_OPTS=\"NO_QT=1\" PACKAGES=\"python3 nsis g++-mingw-w64-x86-64 wine1.6 bc openjdk-7-jre-headless\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-reduce-exports\"\n+# bitcoind\n+    - HOST=x86_64-unknown-linux-gnu PACKAGES=\"bc python3-zmq openjdk-7-jre-headless\" DEP_OPTS=\"NO_QT=1 NO_UPNP=1 DEBUG=1\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-zmq --enable-glibc-back-compat --enable-reduce-exports CPPFLAGS=-DDEBUG_LOCKORDER\"\n+# No wallet\n+    - HOST=x86_64-unknown-linux-gnu PACKAGES=\" openjdk-7-jre-headless python3\" DEP_OPTS=\"NO_WALLET=1\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports\"\n+# Cross-Mac\n+    - HOST=x86_64-apple-darwin11 PACKAGES=\"cmake imagemagick libcap-dev librsvg2-bin libz-dev libbz2-dev libtiff-tools python-dev\" BITCOIN_CONFIG=\"--enable-reduce-exports\" OSX_SDK=10.11 GOAL=\"deploy\"\n+\n+before_install:\n+    - export PATH=$(echo $PATH | tr ':' \"\\n\" | sed '/\\/opt\\/python/d' | tr \"\\n\" \":\" | sed \"s|::|:|g\")\n+install:\n+    - if [ -n \"$PPA\" ]; then travis_retry sudo add-apt-repository \"$PPA\" -y; fi\n+    - if [ -n \"$DPKG_ADD_ARCH\" ]; then sudo dpkg --add-architecture \"$DPKG_ADD_ARCH\" ; fi\n+    - if [ -n \"$PACKAGES\" ]; then travis_retry sudo apt-get update; fi\n+    - if [ -n \"$PACKAGES\" ]; then travis_retry sudo apt-get install --no-install-recommends --no-upgrade -qq $PACKAGES; fi\n+before_script:\n+    - unset CC; unset CXX\n+    - if [ \"$CHECK_DOC\" = 1 ]; then contrib/devtools/check-doc.py; fi\n+    - mkdir -p depends/SDKs depends/sdk-sources\n+    - if [ -n \"$OSX_SDK\" -a ! -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then curl --location --fail $SDK_URL/MacOSX${OSX_SDK}.sdk.tar.gz -o depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz; fi\n+    - if [ -n \"$OSX_SDK\" -a -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then tar -C depends/SDKs -xf depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz; fi\n+    - make $MAKEJOBS -C depends HOST=$HOST $DEP_OPTS\n+script:\n+    - export TRAVIS_COMMIT_LOG=`git log --format=fuller -1`\n+    - if [ -n \"$USE_SHELL\" ]; then export CONFIG_SHELL=\"$USE_SHELL\"; fi\n+    - OUTDIR=$BASE_OUTDIR/$TRAVIS_PULL_REQUEST/$TRAVIS_JOB_NUMBER-$HOST\n+    - BITCOIN_CONFIG_ALL=\"--disable-dependency-tracking --prefix=$TRAVIS_BUILD_DIR/depends/$HOST --bindir=$OUTDIR/bin --libdir=$OUTDIR/lib\"\n+    - depends/$HOST/native/bin/ccache --max-size=$CCACHE_SIZE\n+    - test -n \"$USE_SHELL\" && eval '\"$USE_SHELL\" -c \"./autogen.sh\"' || ./autogen.sh\n+    - mkdir build && cd build\n+    - ../configure $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( cat config.log && false)\n+    - make $MAKEJOBS $GOAL || ( echo \"Build failure. Verbose build follows.\" && make $GOAL V=1 ; false )\n+    - export LD_LIBRARY_PATH=$TRAVIS_BUILD_DIR/depends/$HOST/lib\n+    - if [ \"$RUN_TESTS\" = \"true\" ]; then make $MAKEJOBS check VERBOSE=1; fi\n+    - if [ \"$RUN_TESTS\" = \"true\" ]; then qa/pull-tester/rpc-tests.py --coverage; fi\n+after_script:\n+    - echo $TRAVIS_COMMIT_RANGE\n+    - echo $TRAVIS_COMMIT_LOG"
      },
      {
        "sha": "3ce2ae71d0adb099127e5d848684e2d6bab1d376",
        "filename": ".tx/config",
        "status": "added",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/.tx/config",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/.tx/config",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.tx/config?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,7 @@\n+[main]\n+host = https://www.transifex.com\n+\n+[bitcoin.qt-translation-013x]\n+file_filter = src/qt/locale/bitcoin_<lang>.ts\n+source_file = src/qt/locale/bitcoin_en.ts\n+source_lang = en"
      },
      {
        "sha": "5c1138b812d471475c46874c900a3db138d6495a",
        "filename": "CONTRIBUTING.md",
        "status": "added",
        "additions": 124,
        "deletions": 0,
        "changes": 124,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/CONTRIBUTING.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/CONTRIBUTING.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/CONTRIBUTING.md?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,124 @@\n+Contributing to Bitcoin Core\n+============================\n+\n+The Bitcoin Core project operates an open contributor model where anyone is welcome to contribute towards development in the form of peer review, testing and patches. This document explains the practical process and guidelines for contributing.\n+\n+Firstly in terms of structure, there is no particular concept of \u201cCore developers\u201d in the sense of privileged people. Open source often naturally revolves around meritocracy where longer term contributors gain more trust from the developer community. However, some hierarchy is necessary for practical purposes. As such there are repository \u201cmaintainers\u201d who are responsible for merging pull requests as well as a \u201clead maintainer\u201d who is responsible for the release cycle, overall merging, moderation and appointment of maintainers.\n+\n+\n+Contributor Workflow\n+--------------------\n+\n+The codebase is maintained using the \u201ccontributor workflow\u201d where everyone without exception contributes patch proposals using \u201cpull requests\u201d. This facilitates social contribution, easy testing and peer review.\n+\n+To contribute a patch, the workflow is as follows:\n+\n+  - Fork repository\n+  - Create topic branch\n+  - Commit patches\n+\n+The project coding conventions in the [developer notes](doc/developer-notes.md) must be adhered to.\n+\n+In general [commits should be atomic](https://en.wikipedia.org/wiki/Atomic_commit#Atomic_commit_convention) and diffs should be easy to read. For this reason do not mix any formatting fixes or code moves with actual code changes.\n+\n+Commit messages should be verbose by default consisting of a short subject line (50 chars max), a blank line and detailed explanatory text as separate paragraph(s); unless the title alone is self-explanatory (like \"Corrected typo in main.cpp\") then a single title line is sufficient. Commit messages should be helpful to people reading your code in the future, so explain the reasoning for your decisions. Further explanation [here](http://chris.beams.io/posts/git-commit/).\n+\n+If a particular commit references another issue, please add the reference, for example `refs #1234`, or `fixes #4321`. Using the `fixes` or `closes` keywords will cause the corresponding issue to be closed when the pull request is merged.\n+\n+Please refer to the [Git manual](https://git-scm.com/doc) for more information about Git.\n+\n+  - Push changes to your fork\n+  - Create pull request\n+\n+The title of the pull request should be prefixed by the component or area that the pull request affects. Examples:\n+\n+    Consensus: Add new opcode for BIP-XXXX OP_CHECKAWESOMESIG\n+    Net: Automatically create hidden service, listen on Tor\n+    Qt: Add feed bump button\n+    Trivial: Fix typo in main.cpp\n+\n+If a pull request is specifically not to be considered for merging (yet) please prefix the title with [WIP] or use [Tasks Lists](https://help.github.com/articles/basic-writing-and-formatting-syntax/#task-lists) in the body of the pull request to indicate tasks are pending.\n+\n+The body of the pull request should contain enough description about what the patch does together with any justification/reasoning. You should include references to any discussions (for example other tickets or mailing list discussions).\n+\n+At this stage one should expect comments and review from other contributors. You can add more commits to your pull request by committing them locally and pushing to your fork until you have satisfied all feedback.\n+\n+Squashing Commits\n+---------------------------\n+If your pull request is accepted for merging, you may be asked by a maintainer to squash and or [rebase](https://git-scm.com/docs/git-rebase) your commits before it will be merged. The basic squashing workflow is shown below.\n+\n+    git checkout your_branch_name\n+    git rebase -i HEAD~n\n+    # n is normally the number of commits in the pull\n+    # set commits from 'pick' to 'squash', save and quit\n+    # on the next screen, edit/refine commit messages\n+    # save and quit\n+    git push -f # (force push to GitHub)\n+\n+The length of time required for peer review is unpredictable and will vary from pull request to pull request.\n+\n+\n+Pull Request Philosophy\n+-----------------------\n+\n+Patchsets should always be focused. For example, a pull request could add a feature, fix a bug, or refactor code; but not a mixture. Please also avoid super pull requests which attempt to do too much, are overly large, or overly complex as this makes review difficult.\n+\n+\n+###Features\n+\n+When adding a new feature, thought must be given to the long term technical debt and maintenance that feature may require after inclusion. Before proposing a new feature that will require maintenance, please consider if you are willing to maintain it (including bug fixing). If features get orphaned with no maintainer in the future, they may be removed by the Repository Maintainer.\n+\n+\n+###Refactoring\n+\n+Refactoring is a necessary part of any software project's evolution. The following guidelines cover refactoring pull requests for the project.\n+\n+There are three categories of refactoring, code only moves, code style fixes, code refactoring. In general refactoring pull requests should not mix these three kinds of activity in order to make refactoring pull requests easy to review and uncontroversial. In all cases, refactoring PRs must not change the behaviour of code within the pull request (bugs must be preserved as is).\n+\n+Project maintainers aim for a quick turnaround on refactoring pull requests, so where possible keep them short, uncomplex and easy to verify.\n+\n+\n+\"Decision Making\" Process\n+-------------------------\n+\n+The following applies to code changes to the Bitcoin Core project (and related projects such as libsecp256k1), and is not to be confused with overall Bitcoin Network Protocol consensus changes.\n+\n+Whether a pull request is merged into Bitcoin Core rests with the project merge maintainers and ultimately the project lead.\n+\n+Maintainers will take into consideration if a patch is in line with the general principles of the project; meets the minimum standards for inclusion; and will judge the general consensus of contributors.\n+\n+In general, all pull requests must:\n+\n+  - have a clear use case, fix a demonstrable bug or serve the greater good of the project (for example refactoring for modularisation);\n+  - be well peer reviewed;\n+  - have unit tests and functional tests where appropriate;\n+  - follow code style guidelines;\n+  - not break the existing test suite;\n+  - where bugs are fixed, where possible, there should be unit tests demonstrating the bug and also proving the fix. This helps prevent regression.\n+\n+Patches that change Bitcoin consensus rules are considerably more involved than normal because they affect the entire ecosystem and so must be preceded by extensive mailing list discussions and have a numbered BIP. While each case will be different, one should be prepared to expend more time and effort than for other kinds of patches because of increased peer review and consensus building requirements.\n+\n+\n+###Peer Review\n+\n+Anyone may participate in peer review which is expressed by comments in the pull request. Typically reviewers will review the code for obvious errors, as well as test out the patch set and opine on the technical merits of the patch. Project maintainers take into account the peer review when determining if there is consensus to merge a pull request (remember that discussions may have been spread out over github, mailing list and IRC discussions). The following language is used within pull-request comments:\n+\n+  - ACK means \"I have tested the code and I agree it should be merged\";\n+  - NACK means \"I disagree this should be merged\", and must be accompanied by sound technical justification. NACKs without accompanying reasoning may be disregarded;\n+  - utACK means \"I have not tested the code, but I have reviewed it and it looks OK, I agree it can be merged\";\n+  - Concept ACK means \"I agree in the general principle of this pull request\";\n+  - Nit refers to trivial, often non-blocking issues.\n+\n+Reviewers should include the commit hash which they reviewed in their comments.\n+\n+Project maintainers reserve the right to weigh the opinions of peer reviewers using common sense judgement and also may weight based on meritocracy: Those that have demonstrated a deeper commitment and understanding towards the project (over time) or have clear domain expertise may naturally have more weight, as one would expect in all walks of life.\n+\n+Where a patch set affects consensus critical code, the bar will be set much higher in terms of discussion and peer review requirements, keeping in mind that mistakes could be very costly to the wider community. This includes refactoring of consensus critical code.\n+\n+Where a patch set proposes to change the Bitcoin consensus, it must have been discussed extensively on the mailing list and IRC, be accompanied by a widely discussed BIP and have a generally widely perceived technical consensus of being a worthwhile change based on the judgement of the maintainers.\n+\n+\n+Release Policy\n+--------------\n+\n+The project leader is the release manager for each Bitcoin Core release."
      },
      {
        "sha": "c6be8e5470890cecdc7156030e54527d267338eb",
        "filename": "COPYING",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/COPYING",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/COPYING",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/COPYING?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -1,4 +1,6 @@\n-Copyright (c) 2009-2013 Bitcoin Developers\n+The MIT License (MIT)\n+\n+Copyright (c) 2009-2016 The Bitcoin Core developers\n \n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal"
      },
      {
        "sha": "b10d0850664c84c6f3840e87b9dc30ee5670c214",
        "filename": "Makefile.am",
        "status": "modified",
        "additions": 116,
        "deletions": 43,
        "changes": 159,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/Makefile.am?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -1,87 +1,136 @@\n-ACLOCAL_AMFLAGS = -I src/m4\n+ACLOCAL_AMFLAGS = -I build-aux/m4\n SUBDIRS = src\n-.PHONY: deploy\n+.PHONY: deploy FORCE\n \n GZIP_ENV=\"-9n\"\n+export PYTHONPATH\n \n-BITCOIND_BIN=$(top_builddir)/src/bitcoind$(EXEEXT)\n-BITCOIN_QT_BIN=$(top_builddir)/src/qt/bitcoin-qt$(EXEEXT)\n-BITCOIN_WIN_INSTALLER=$(PACKAGE)-$(PACKAGE_VERSION)-win32-setup$(EXEEXT)\n+if BUILD_BITCOIN_LIBS\n+pkgconfigdir = $(libdir)/pkgconfig\n+pkgconfig_DATA = libbitcoinconsensus.pc\n+endif\n+\n+BITCOIND_BIN=$(top_builddir)/src/$(BITCOIN_DAEMON_NAME)$(EXEEXT)\n+BITCOIN_QT_BIN=$(top_builddir)/src/qt/$(BITCOIN_GUI_NAME)$(EXEEXT)\n+BITCOIN_CLI_BIN=$(top_builddir)/src/$(BITCOIN_CLI_NAME)$(EXEEXT)\n+BITCOIN_WIN_INSTALLER=$(PACKAGE)-$(PACKAGE_VERSION)-win$(WINDOWS_BITS)-setup$(EXEEXT)\n+\n+empty :=\n+space := $(empty) $(empty)\n \n OSX_APP=Bitcoin-Qt.app\n-OSX_DMG=Bitcoin-Qt.dmg\n+OSX_VOLNAME = $(subst $(space),-,$(PACKAGE_NAME))\n+OSX_DMG = $(OSX_VOLNAME).dmg\n+OSX_BACKGROUND_SVG=background.svg\n+OSX_BACKGROUND_IMAGE=background.tiff\n+OSX_BACKGROUND_IMAGE_DPIS=36 72\n+OSX_DSSTORE_GEN=$(top_srcdir)/contrib/macdeploy/custom_dsstore.py\n OSX_DEPLOY_SCRIPT=$(top_srcdir)/contrib/macdeploy/macdeployqtplus\n OSX_FANCY_PLIST=$(top_srcdir)/contrib/macdeploy/fancy.plist\n OSX_INSTALLER_ICONS=$(top_srcdir)/src/qt/res/icons/bitcoin.icns\n-OSX_PLIST=$(top_srcdir)/share/qt/Info.plist #not installed\n+OSX_PLIST=$(top_builddir)/share/qt/Info.plist #not installed\n+OSX_QT_TRANSLATIONS = da,de,es,hu,ru,uk,zh_CN,zh_TW\n+\n+DIST_DOCS = $(wildcard doc/*.md) $(wildcard doc/release-notes/*.md)\n+\n+BIN_CHECKS=$(top_srcdir)/contrib/devtools/symbol-check.py \\\n+           $(top_srcdir)/contrib/devtools/security-check.py\n \n WINDOWS_PACKAGING = $(top_srcdir)/share/pixmaps/bitcoin.ico \\\n   $(top_srcdir)/share/pixmaps/nsis-header.bmp \\\n   $(top_srcdir)/share/pixmaps/nsis-wizard.bmp \\\n   $(top_srcdir)/doc/README_windows.txt\n \n OSX_PACKAGING = $(OSX_DEPLOY_SCRIPT) $(OSX_FANCY_PLIST) $(OSX_INSTALLER_ICONS) \\\n-  $(top_srcdir)/contrib/macdeploy/background.png\n+  $(top_srcdir)/contrib/macdeploy/$(OSX_BACKGROUND_SVG) \\\n+  $(OSX_DSSTORE_GEN) \\\n+  $(top_srcdir)/contrib/macdeploy/detached-sig-apply.sh \\\n+  $(top_srcdir)/contrib/macdeploy/detached-sig-create.sh\n \n COVERAGE_INFO = baseline_filtered_combined.info baseline.info block_test.info \\\n   leveldb_baseline.info test_bitcoin_filtered.info total_coverage.info \\\n-  baseline_filtered.info block_test_filtered.info \\\n+  baseline_filtered.info block_test_filtered.info rpc_test.info rpc_test_filtered.info \\\n   leveldb_baseline_filtered.info test_bitcoin_coverage.info test_bitcoin.info\n \n dist-hook:\n-\t-$(MAKE) -C $(top_distdir)/src/leveldb clean\n-\t-$(GIT) archive --format=tar HEAD -- src/version.cpp | $(AMTAR) -C $(top_distdir) -xf -\n-\n-distcheck-hook:\n-\t$(MKDIR_P) $(top_distdir)/_build/src/leveldb\n-\tcp -rf $(top_srcdir)/src/leveldb/* $(top_distdir)/_build/src/leveldb/\n-\t-$(MAKE) -C $(top_distdir)/_build/src/leveldb clean\n+\t-$(GIT) archive --format=tar HEAD -- src/clientversion.cpp | $(AMTAR) -C $(top_distdir) -xf -\n \n-distcleancheck:\n-\t@:\n-\n-$(BITCOIN_WIN_INSTALLER): $(BITCOIND_BIN) $(BITCOIN_QT_BIN)\n-\t$(MAKE) distdir\n+$(BITCOIN_WIN_INSTALLER): all-recursive\n \t$(MKDIR_P) $(top_builddir)/release\n-\t$(INSTALL_STRIP_PROGRAM) $(top_builddir)/src/bitcoind$(EXEEXT) $(top_builddir)/release\n-\t$(INSTALL_STRIP_PROGRAM) $(top_builddir)/src/qt/bitcoin-qt$(EXEEXT) $(top_builddir)/release\n-\t@test -f $(MAKENSIS) && $(MAKENSIS) $(top_builddir)/share/setup.nsi || \\\n+\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(BITCOIND_BIN) $(top_builddir)/release\n+\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(BITCOIN_QT_BIN) $(top_builddir)/release\n+\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(BITCOIN_CLI_BIN) $(top_builddir)/release\n+\t@test -f $(MAKENSIS) && $(MAKENSIS) -V2 $(top_builddir)/share/setup.nsi || \\\n \t  echo error: could not build $@\n+\t@echo built $@\n \n-$(BITCOIND_BIN):\n-\tmake -C $(top_srcdir)/src bitcoind$(EXEEXT)\n-\n-$(BITCOIN_QT_BIN):\n-\tmake -C $(top_srcdir)/src/qt bitcoin-qt$(EXEEXT)\n-\n+$(if $(findstring src/,$(MAKECMDGOALS)),$(MAKECMDGOALS), none): FORCE\n+\t$(MAKE) -C src $(patsubst src/%,%,$@)\n \n $(OSX_APP)/Contents/PkgInfo:\n \t$(MKDIR_P) $(@D)\n \t@echo \"APPL????\" > $@\n \n $(OSX_APP)/Contents/Resources/empty.lproj:\n \t$(MKDIR_P) $(@D)\n-\t@touch $@\n+\t@touch $@ \n \n $(OSX_APP)/Contents/Info.plist: $(OSX_PLIST)\n \t$(MKDIR_P) $(@D)\n-\t$(INSTALL) $< $@\n+\t$(INSTALL_DATA) $< $@\n \n $(OSX_APP)/Contents/Resources/bitcoin.icns: $(OSX_INSTALLER_ICONS)\n \t$(MKDIR_P) $(@D)\n-\t$(INSTALL) $< $@\n+\t$(INSTALL_DATA) $< $@\n \n $(OSX_APP)/Contents/MacOS/Bitcoin-Qt: $(BITCOIN_QT_BIN)\n \t$(MKDIR_P) $(@D)\n-\t$(INSTALL_STRIP_PROGRAM)  $< $@\n+\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM)  $< $@\n+\n+$(OSX_APP)/Contents/Resources/Base.lproj/InfoPlist.strings:\n+\t$(MKDIR_P) $(@D)\n+\techo '{\tCFBundleDisplayName = \"$(PACKAGE_NAME)\"; CFBundleName = \"$(PACKAGE_NAME)\"; }' > $@\n \n OSX_APP_BUILT=$(OSX_APP)/Contents/PkgInfo $(OSX_APP)/Contents/Resources/empty.lproj \\\n   $(OSX_APP)/Contents/Resources/bitcoin.icns $(OSX_APP)/Contents/Info.plist \\\n-  $(OSX_APP)/Contents/MacOS/Bitcoin-Qt\n+  $(OSX_APP)/Contents/MacOS/Bitcoin-Qt $(OSX_APP)/Contents/Resources/Base.lproj/InfoPlist.strings\n \n+osx_volname:\n+\techo $(OSX_VOLNAME) >$@\n+\n+if BUILD_DARWIN\n $(OSX_DMG): $(OSX_APP_BUILT) $(OSX_PACKAGING)\n-\t$(OSX_DEPLOY_SCRIPT) $(OSX_APP) -add-qt-tr da,de,es,hu,ru,uk,zh_CN,zh_TW -dmg -fancy $(OSX_FANCY_PLIST) -verbose 2\n+\t$(PYTHON) $(OSX_DEPLOY_SCRIPT) $(OSX_APP) -add-qt-tr $(OSX_QT_TRANSLATIONS) -translations-dir=$(QT_TRANSLATION_DIR) -dmg -fancy $(OSX_FANCY_PLIST) -verbose 2 -volname $(OSX_VOLNAME)\n+\n+deploydir: $(OSX_DMG)\n+else\n+APP_DIST_DIR=$(top_builddir)/dist\n+APP_DIST_EXTRAS=$(APP_DIST_DIR)/.background/$(OSX_BACKGROUND_IMAGE) $(APP_DIST_DIR)/.DS_Store $(APP_DIST_DIR)/Applications\n+\n+$(APP_DIST_DIR)/Applications:\n+\t@rm -f $@\n+\t@cd $(@D); $(LN_S) /Applications $(@F)\n+\n+$(APP_DIST_EXTRAS): $(APP_DIST_DIR)/$(OSX_APP)/Contents/MacOS/Bitcoin-Qt\n \n+$(OSX_DMG): $(APP_DIST_EXTRAS)\n+\t$(GENISOIMAGE) -no-cache-inodes -D -l -probe -V \"$(OSX_VOLNAME)\" -no-pad -r -dir-mode 0755 -apple -o $@ dist\n+\n+dpi%.$(OSX_BACKGROUND_IMAGE): contrib/macdeploy/$(OSX_BACKGROUND_SVG)\n+\tsed 's/PACKAGE_NAME/$(PACKAGE_NAME)/' < \"$<\" | $(RSVG_CONVERT) -f png -d $* -p $* | $(IMAGEMAGICK_CONVERT) - $@\n+OSX_BACKGROUND_IMAGE_DPIFILES := $(foreach dpi,$(OSX_BACKGROUND_IMAGE_DPIS),dpi$(dpi).$(OSX_BACKGROUND_IMAGE))\n+$(APP_DIST_DIR)/.background/$(OSX_BACKGROUND_IMAGE): $(OSX_BACKGROUND_IMAGE_DPIFILES)\n+\t$(MKDIR_P) $(@D)\n+\t$(TIFFCP) -c none $(OSX_BACKGROUND_IMAGE_DPIFILES) $@\n+\n+$(APP_DIST_DIR)/.DS_Store: $(OSX_DSSTORE_GEN)\n+\t$(PYTHON) $< \"$@\" \"$(OSX_VOLNAME)\"\n+\n+$(APP_DIST_DIR)/$(OSX_APP)/Contents/MacOS/Bitcoin-Qt: $(OSX_APP_BUILT) $(OSX_PACKAGING)\n+\tINSTALLNAMETOOL=$(INSTALLNAMETOOL)  OTOOL=$(OTOOL) STRIP=$(STRIP) $(PYTHON) $(OSX_DEPLOY_SCRIPT) $(OSX_APP) -translations-dir=$(QT_TRANSLATION_DIR) -add-qt-tr $(OSX_QT_TRANSLATIONS) -verbose 2\n+\n+deploydir: $(APP_DIST_EXTRAS)\n+endif\n \n if TARGET_DARWIN\n appbundle: $(OSX_APP_BUILT)\n@@ -91,6 +140,15 @@ if TARGET_WINDOWS\n deploy: $(BITCOIN_WIN_INSTALLER)\n endif\n \n+$(BITCOIN_QT_BIN): FORCE\n+\t$(MAKE) -C src qt/$(@F)\n+\n+$(BITCOIND_BIN): FORCE\n+\t$(MAKE) -C src $(@F)\n+\n+$(BITCOIN_CLI_BIN): FORCE\n+\t$(MAKE) -C src $(@F)\n+\n if USE_LCOV\n \n baseline.info:\n@@ -119,19 +177,28 @@ test_bitcoin_filtered.info: test_bitcoin.info\n \n block_test.info: test_bitcoin_filtered.info\n \t$(MKDIR_P) qa/tmp\n-\t-@TIMEOUT=15 qa/pull-tester/run-bitcoind-for-test.sh $(JAVA) -jar $(JAVA_COMPARISON_TOOL) qa/tmp/compTool 0\n+\t-@TIMEOUT=15 qa/pull-tester/run-bitcoind-for-test.sh $(JAVA) -jar $(JAVA_COMPARISON_TOOL) qa/tmp/compTool $(COMPARISON_TOOL_REORG_TESTS)\n \t$(LCOV) -c -d $(abs_builddir)/src --t BitcoinJBlockTest -o $@\n \t$(LCOV) -z -d $(abs_builddir)/src\n \t$(LCOV) -z -d $(abs_builddir)/src/leveldb\n \n block_test_filtered.info: block_test.info\n \t$(LCOV) -r $< \"/usr/include/*\" -o $@\n \n+rpc_test.info: test_bitcoin_filtered.info\n+\t-@TIMEOUT=15 python qa/pull-tester/rpc-tests.py $(EXTENDED_RPC_TESTS)\n+\t$(LCOV) -c -d $(abs_builddir)/src --t rpc-tests -o $@\n+\t$(LCOV) -z -d $(abs_builddir)/src\n+\t$(LCOV) -z -d $(abs_builddir)/src/leveldb\n+\n+rpc_test_filtered.info: rpc_test.info\n+\t$(LCOV) -r $< \"/usr/include/*\" -o $@\n+\n test_bitcoin_coverage.info: baseline_filtered_combined.info test_bitcoin_filtered.info\n \t$(LCOV) -a baseline_filtered.info -a leveldb_baseline_filtered.info -a test_bitcoin_filtered.info -o $@\n \n-total_coverage.info:  baseline_filtered_combined.info test_bitcoin_filtered.info block_test_filtered.info\n-\t$(LCOV) -a baseline_filtered.info -a leveldb_baseline_filtered.info -a test_bitcoin_filtered.info -a block_test_filtered.info -o $@ | $(GREP) \"\\%\" | $(AWK) '{ print substr($$3,2,50) \"/\" $$5 }' > coverage_percent.txt\n+total_coverage.info: baseline_filtered_combined.info test_bitcoin_filtered.info block_test_filtered.info rpc_test_filtered.info\n+\t$(LCOV) -a baseline_filtered.info -a leveldb_baseline_filtered.info -a test_bitcoin_filtered.info -a block_test_filtered.info -a rpc_test_filtered.info -o $@ | $(GREP) \"\\%\" | $(AWK) '{ print substr($$3,2,50) \"/\" $$5 }' > coverage_percent.txt\n \n test_bitcoin.coverage/.dirstamp:  test_bitcoin_coverage.info\n \t$(GENHTML) -s $< -o $(@D)\n@@ -148,14 +215,20 @@ endif\n if USE_COMPARISON_TOOL\n check-local:\n \t$(MKDIR_P) qa/tmp\n-\t@qa/pull-tester/run-bitcoind-for-test.sh $(JAVA) -jar $(JAVA_COMPARISON_TOOL) qa/tmp/compTool $(COMPARISON_TOOL_REORG_TESTS)\n+\t@qa/pull-tester/run-bitcoind-for-test.sh $(JAVA) -jar $(JAVA_COMPARISON_TOOL) qa/tmp/compTool $(COMPARISON_TOOL_REORG_TESTS) 2>&1\n endif\n \n-EXTRA_DIST = $(top_srcdir)/share/genbuild.sh qa/pull-tester/pull-tester.sh $(WINDOWS_PACKAGING) $(OSX_PACKAGING)\n+dist_noinst_SCRIPTS = autogen.sh\n+\n+EXTRA_DIST = $(top_srcdir)/share/genbuild.sh qa/pull-tester/rpc-tests.py qa/rpc-tests $(DIST_DOCS) $(WINDOWS_PACKAGING) $(OSX_PACKAGING) $(BIN_CHECKS)\n+\n+CLEANFILES = $(OSX_DMG) $(BITCOIN_WIN_INSTALLER)\n \n-CLEANFILES = $(OSX_DMG) $(OSX_APP) $(BITCOIN_WIN_INSTALLER)\n+# This file is problematic for out-of-tree builds if it exists.\n+DISTCLEANFILES = qa/pull-tester/tests_config.pyc\n \n .INTERMEDIATE: $(COVERAGE_INFO)\n \n clean-local:\n-\trm -rf test_bitcoin.coverage/ total.coverage/\n+\trm -rf coverage_percent.txt test_bitcoin.coverage/ total.coverage/ qa/tmp/ cache/ $(OSX_APP)\n+\trm -rf qa/pull-tester/__pycache__"
      },
      {
        "sha": "3c41649c1b8d94c9dae46e1a1fbb7117e4841f0a",
        "filename": "README.md",
        "status": "modified",
        "additions": 47,
        "deletions": 37,
        "changes": 84,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/README.md?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -1,71 +1,81 @@\n-Bitcoin integration/staging tree\n-================================\n+Bitcoin Core integration/staging tree\n+=====================================\n \n-http://www.bitcoin.org\n+[![Build Status](https://travis-ci.org/bitcoin/bitcoin.svg?branch=master)](https://travis-ci.org/bitcoin/bitcoin)\n \n-Copyright (c) 2009-2013 Bitcoin Developers\n+https://bitcoincore.org\n \n What is Bitcoin?\n ----------------\n \n-Bitcoin is an experimental new digital currency that enables instant payments to\n+Bitcoin is an experimental digital currency that enables instant payments to\n anyone, anywhere in the world. Bitcoin uses peer-to-peer technology to operate\n with no central authority: managing transactions and issuing money are carried\n-out collectively by the network. Bitcoin is also the name of the open source\n+out collectively by the network. Bitcoin Core is the name of open source\n software which enables the use of this currency.\n \n For more information, as well as an immediately useable, binary version of\n-the Bitcoin client software, see http://www.bitcoin.org.\n+the Bitcoin Core software, see https://bitcoin.org/en/download, or read the\n+[original whitepaper](https://bitcoincore.org/bitcoin.pdf).\n \n License\n -------\n \n-Bitcoin is released under the terms of the MIT license. See [COPYING](COPYING) for more\n-information or see http://opensource.org/licenses/MIT.\n+Bitcoin Core is released under the terms of the MIT license. See [COPYING](COPYING) for more\n+information or see https://opensource.org/licenses/MIT.\n \n-Development process\n+Development Process\n -------------------\n \n-Developers work in their own trees, then submit pull requests when they think\n-their feature or bug fix is ready.\n-\n-If it is a simple/trivial/non-controversial change, then one of the Bitcoin\n-development team members simply pulls it.\n+The `master` branch is regularly built and tested, but is not guaranteed to be\n+completely stable. [Tags](https://github.com/bitcoin/bitcoin/tags) are created\n+regularly to indicate new official, stable release versions of Bitcoin Core.\n \n-If it is a *more complicated or potentially controversial* change, then the patch\n-submitter will be asked to start a discussion (if they haven't already) on the\n-[mailing list](http://sourceforge.net/mailarchive/forum.php?forum_name=bitcoin-development).\n+The contribution workflow is described in [CONTRIBUTING.md](CONTRIBUTING.md).\n \n-The patch will be accepted if there is broad consensus that it is a good thing.\n-Developers should expect to rework and resubmit patches if the code doesn't\n-match the project's coding conventions (see [doc/coding.md](doc/coding.md)) or are\n-controversial.\n+The developer [mailing list](https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev)\n+should be used to discuss complicated or controversial changes before working\n+on a patch set.\n \n-The `master` branch is regularly built and tested, but is not guaranteed to be\n-completely stable. [Tags](https://github.com/bitcoin/bitcoin/tags) are created\n-regularly to indicate new official, stable release versions of Bitcoin.\n+Developer IRC can be found on Freenode at #bitcoin-core-dev.\n \n Testing\n -------\n \n Testing and code review is the bottleneck for development; we get more pull\n-requests than we can review and test. Please be patient and help out, and\n-remember this is a security-critical project where any mistake might cost people\n+requests than we can review and test on short notice. Please be patient and help out by testing\n+other people's pull requests, and remember this is a security-critical project where any mistake might cost people\n lots of money.\n \n ### Automated Testing\n \n-Developers are strongly encouraged to write unit tests for new code, and to\n-submit new unit tests for old code. Unit tests can be compiled and run (assuming they weren't disabled in configure) with: `make check`\n+Developers are strongly encouraged to write [unit tests](/doc/unit-tests.md) for new code, and to\n+submit new unit tests for old code. Unit tests can be compiled and run\n+(assuming they weren't disabled in configure) with: `make check`\n+\n+There are also [regression and integration tests](/qa) of the RPC interface, written\n+in Python, that are run automatically on the build server.\n+These tests can be run (if the [test dependencies](/qa) are installed) with: `qa/pull-tester/rpc-tests.py`\n \n-Every pull request is built for both Windows and Linux on a dedicated server,\n-and unit and sanity tests are automatically run. The binaries produced may be\n-used for manual QA testing \u2014 a link to them will appear in a comment on the\n-pull request posted by [BitcoinPullTester](https://github.com/BitcoinPullTester). See https://github.com/TheBlueMatt/test-scripts\n-for the build/test scripts.\n+The Travis CI system makes sure that every pull request is built for Windows, Linux, and OS X, and that unit/sanity tests are run automatically.\n \n ### Manual Quality Assurance (QA) Testing\n \n-Large changes should have a test plan, and should be tested by somebody other\n-than the developer who wrote the code.\n-See https://github.com/bitcoin/QA/ for how to create a test plan.\n+Changes should be tested by somebody other than the developer who wrote the\n+code. This is especially important for large or high-risk changes. It is useful\n+to add a test plan to the pull request description if testing the changes is\n+not straightforward.\n+\n+Translations\n+------------\n+\n+Changes to translations as well as new translations can be submitted to\n+[Bitcoin Core's Transifex page](https://www.transifex.com/projects/p/bitcoin/).\n+\n+Translations are periodically pulled from Transifex and merged into the git repository. See the\n+[translation process](doc/translation_process.md) for details on how this works.\n+\n+**Important**: We do not accept translation changes as GitHub pull requests because the next\n+pull from Transifex would automatically overwrite them again.\n+\n+Translators should also subscribe to the [mailing list](https://groups.google.com/forum/#!forum/bitcoin-translators)."
      },
      {
        "sha": "46e36ff5b216c5e42c56c133ca84c52a57d19b50",
        "filename": "autogen.sh",
        "status": "modified",
        "additions": 11,
        "deletions": 1,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/autogen.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/autogen.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/autogen.sh?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -1 +1,11 @@\n-autoreconf -vif\n+#!/bin/sh\n+set -e\n+srcdir=\"$(dirname $0)\"\n+cd \"$srcdir\"\n+if [ -z ${LIBTOOLIZE} ] && GLIBTOOLIZE=\"`which glibtoolize 2>/dev/null`\"; then\n+  LIBTOOLIZE=\"${GLIBTOOLIZE}\"\n+  export LIBTOOLIZE\n+fi\n+which autoreconf >/dev/null || \\\n+  (echo \"configuration failed, please install autoconf first\" && exit 1)\n+autoreconf --install --force --warnings=all"
      },
      {
        "sha": "45d948933d18f42ff946aebd0d17626fd9c64d3f",
        "filename": "build-aux/m4/ax_boost_base.m4",
        "status": "renamed",
        "additions": 34,
        "deletions": 3,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/build-aux/m4/ax_boost_base.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/build-aux/m4/ax_boost_base.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_base.m4?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -33,7 +33,7 @@\n #   and this notice are preserved. This file is offered as-is, without any\n #   warranty.\n \n-#serial 21\n+#serial 26\n \n AC_DEFUN([AX_BOOST_BASE],\n [\n@@ -92,11 +92,32 @@ if test \"x$want_boost\" = \"xyes\"; then\n     libsubdirs=\"lib\"\n     ax_arch=`uname -m`\n     case $ax_arch in\n-      x86_64|ppc64|s390x|sparc64|aarch64)\n-        libsubdirs=\"lib64 lib lib64\"\n+      x86_64)\n+        libsubdirs=\"lib64 libx32 lib lib64\"\n+        ;;\n+      ppc64|s390x|sparc64|aarch64|ppc64le)\n+        libsubdirs=\"lib64 lib lib64 ppc64le\"\n+        ;;\n+    esac\n+\n+    dnl allow for real multi-arch paths e.g. /usr/lib/x86_64-linux-gnu. Give\n+    dnl them priority over the other paths since, if libs are found there, they\n+    dnl are almost assuredly the ones desired.\n+    AC_REQUIRE([AC_CANONICAL_HOST])\n+    libsubdirs=\"lib/${host_cpu}-${host_os} $libsubdirs\"\n+\n+    case ${host_cpu} in\n+      i?86)\n+        libsubdirs=\"lib/i386-${host_os} $libsubdirs\"\n         ;;\n     esac\n \n+    dnl some arches may advertise a cpu type that doesn't line up with their\n+    dnl prefix's cpu type. For example, uname may report armv7l while libs are\n+    dnl installed to /usr/lib/arm-linux-gnueabihf. Try getting the compiler's\n+    dnl value for an extra chance of finding the correct path.\n+    libsubdirs=\"lib/`$CXX -dumpmachine 2>/dev/null` $libsubdirs\"\n+\n     dnl first we check the system location for boost libraries\n     dnl this location ist chosen if boost libraries are installed with the --layout=system option\n     dnl or if you install boost with RPM\n@@ -158,6 +179,10 @@ if test \"x$want_boost\" = \"xyes\"; then\n     dnl if we found no boost with system layout we search for boost libraries\n     dnl built and installed without the --layout=system option or for a staged(not installed) version\n     if test \"x$succeeded\" != \"xyes\"; then\n+        CPPFLAGS=\"$CPPFLAGS_SAVED\"\n+        LDFLAGS=\"$LDFLAGS_SAVED\"\n+        BOOST_CPPFLAGS=\n+        BOOST_LDFLAGS=\n         _version=0\n         if test \"$ac_boost_path\" != \"\"; then\n             if test -d \"$ac_boost_path\" && test -r \"$ac_boost_path\"; then\n@@ -170,6 +195,12 @@ if test \"x$want_boost\" = \"xyes\"; then\n                     VERSION_UNDERSCORE=`echo $_version | sed 's/\\./_/'`\n                     BOOST_CPPFLAGS=\"-I$ac_boost_path/include/boost-$VERSION_UNDERSCORE\"\n                 done\n+                dnl if nothing found search for layout used in Windows distributions\n+                if test -z \"$BOOST_CPPFLAGS\"; then\n+                    if test -d \"$ac_boost_path/boost\" && test -r \"$ac_boost_path/boost\"; then\n+                        BOOST_CPPFLAGS=\"-I$ac_boost_path\"\n+                    fi\n+                fi\n             fi\n         else\n             if test \"$cross_compiling\" != yes; then",
        "previous_filename": "src/m4/ax_boost_base.m4"
      },
      {
        "sha": "318ecea17fab84b7bbc24ded70bcb27be749d603",
        "filename": "build-aux/m4/ax_boost_chrono.m4",
        "status": "renamed",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/build-aux/m4/ax_boost_chrono.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/build-aux/m4/ax_boost_chrono.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_chrono.m4?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -81,6 +81,7 @@ AC_DEFUN([AX_BOOST_CHRONO],\n \n \t\t\tLDFLAGS_SAVE=$LDFLAGS\n             if test \"x$ax_boost_user_chrono_lib\" = \"x\"; then\n+                ax_lib=\n                 for libextension in `ls $BOOSTLIBDIR/libboost_chrono*.so* $BOOSTLIBDIR/libboost_chrono*.dylib* $BOOSTLIBDIR/libboost_chrono*.a* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^lib\\(boost_chrono.*\\)\\.so.*$;\\1;' -e 's;^lib\\(boost_chrono.*\\)\\.dylib.*$;\\1;' -e 's;^lib\\(boost_chrono.*\\)\\.a.*$;\\1;'` ; do\n                      ax_lib=${libextension}\n \t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n@@ -105,7 +106,7 @@ AC_DEFUN([AX_BOOST_CHRONO],\n \n             fi\n             if test \"x$ax_lib\" = \"x\"; then\n-                AC_MSG_ERROR(Could not find a version of the library!)\n+                AC_MSG_ERROR(Could not find a version of the boost_chrono library!)\n             fi\n \t\t\tif test \"x$link_chrono\" = \"xno\"; then\n \t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)",
        "previous_filename": "src/m4/ax_boost_chrono.m4"
      },
      {
        "sha": "f5c9d56470bf9659b2c38c677c946d37c32be206",
        "filename": "build-aux/m4/ax_boost_filesystem.m4",
        "status": "renamed",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/build-aux/m4/ax_boost_filesystem.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/build-aux/m4/ax_boost_filesystem.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_filesystem.m4?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -80,6 +80,7 @@ AC_DEFUN([AX_BOOST_FILESYSTEM],\n \t\tif test \"x$ax_cv_boost_filesystem\" = \"xyes\"; then\n \t\t\tAC_DEFINE(HAVE_BOOST_FILESYSTEM,,[define if the Boost::Filesystem library is available])\n             BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n+            ax_lib=\n             if test \"x$ax_boost_user_filesystem_lib\" = \"x\"; then\n                 for libextension in `ls -r $BOOSTLIBDIR/libboost_filesystem* 2>/dev/null | sed 's,.*/lib,,' | sed 's,\\..*,,'` ; do\n                      ax_lib=${libextension}\n@@ -104,7 +105,7 @@ AC_DEFUN([AX_BOOST_FILESYSTEM],\n \n             fi\n             if test \"x$ax_lib\" = \"x\"; then\n-                AC_MSG_ERROR(Could not find a version of the library!)\n+                AC_MSG_ERROR(Could not find a version of the boost_filesystem library!)\n             fi\n \t\t\tif test \"x$link_filesystem\" != \"xyes\"; then\n \t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)",
        "previous_filename": "src/m4/ax_boost_filesystem.m4"
      },
      {
        "sha": "2bdb5937162e4207cf0f96586bc343653ae30da1",
        "filename": "build-aux/m4/ax_boost_program_options.m4",
        "status": "renamed",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/build-aux/m4/ax_boost_program_options.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/build-aux/m4/ax_boost_program_options.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_program_options.m4?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -29,7 +29,7 @@\n #   and this notice are preserved. This file is offered as-is, without any\n #   warranty.\n \n-#serial 22\n+#serial 24\n \n AC_DEFUN([AX_BOOST_PROGRAM_OPTIONS],\n [\n@@ -63,9 +63,9 @@ AC_DEFUN([AX_BOOST_PROGRAM_OPTIONS],\n \t\tAC_CACHE_CHECK([whether the Boost::Program_Options library is available],\n \t\t\t\t\t   ax_cv_boost_program_options,\n \t\t\t\t\t   [AC_LANG_PUSH(C++)\n-\t\t\t\tAC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/program_options.hpp>\n+\t\t\t\tAC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/program_options/errors.hpp>\n                                                           ]],\n-                                  [[boost::program_options::options_description generic(\"Generic options\");\n+                                  [[boost::program_options::error err(\"Error message\");\n                                    return 0;]])],\n                            ax_cv_boost_program_options=yes, ax_cv_boost_program_options=no)\n \t\t\t\t\tAC_LANG_POP([C++])\n@@ -96,7 +96,7 @@ AC_DEFUN([AX_BOOST_PROGRAM_OPTIONS],\n                   done\n                 fi\n             if test \"x$ax_lib\" = \"x\"; then\n-                AC_MSG_ERROR(Could not find a version of the library!)\n+                AC_MSG_ERROR(Could not find a version of the boost_program_options library!)\n             fi\n \t\t\t\tif test \"x$link_program_options\" != \"xyes\"; then\n \t\t\t\t\tAC_MSG_ERROR([Could not link against [$ax_lib] !])",
        "previous_filename": "src/m4/ax_boost_program_options.m4"
      },
      {
        "sha": "1c05450cbe1d5cc11a257f5c02284900890a973e",
        "filename": "build-aux/m4/ax_boost_system.m4",
        "status": "renamed",
        "additions": 5,
        "deletions": 3,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/build-aux/m4/ax_boost_system.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/build-aux/m4/ax_boost_system.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_system.m4?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -31,7 +31,7 @@\n #   and this notice are preserved. This file is offered as-is, without any\n #   warranty.\n \n-#serial 17\n+#serial 18\n \n AC_DEFUN([AX_BOOST_SYSTEM],\n [\n@@ -68,9 +68,10 @@ AC_DEFUN([AX_BOOST_SYSTEM],\n \t\t\t\t\t   ax_cv_boost_system,\n         [AC_LANG_PUSH([C++])\n \t\t\t CXXFLAGS_SAVE=$CXXFLAGS\n+\t\t\t CXXFLAGS=\n \n \t\t\t AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/system/error_code.hpp>]],\n-                                   [[boost::system::system_category]])],\n+\t\t\t\t    [[boost::system::error_category *a = 0;]])],\n                    ax_cv_boost_system=yes, ax_cv_boost_system=no)\n \t\t\t CXXFLAGS=$CXXFLAGS_SAVE\n              AC_LANG_POP([C++])\n@@ -83,6 +84,7 @@ AC_DEFUN([AX_BOOST_SYSTEM],\n \n \t\t\tLDFLAGS_SAVE=$LDFLAGS\n             if test \"x$ax_boost_user_system_lib\" = \"x\"; then\n+                ax_lib=\n                 for libextension in `ls -r $BOOSTLIBDIR/libboost_system* 2>/dev/null | sed 's,.*/lib,,' | sed 's,\\..*,,'` ; do\n                      ax_lib=${libextension}\n \t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n@@ -107,7 +109,7 @@ AC_DEFUN([AX_BOOST_SYSTEM],\n \n             fi\n             if test \"x$ax_lib\" = \"x\"; then\n-                AC_MSG_ERROR(Could not find a version of the library!)\n+                AC_MSG_ERROR(Could not find a version of the boost_system library!)\n             fi\n \t\t\tif test \"x$link_system\" = \"xno\"; then\n \t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)",
        "previous_filename": "src/m4/ax_boost_system.m4"
      },
      {
        "sha": "9f0bd0b23c9b0caba987ba96080f7696643a8d5d",
        "filename": "build-aux/m4/ax_boost_thread.m4",
        "status": "renamed",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/build-aux/m4/ax_boost_thread.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/build-aux/m4/ax_boost_thread.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_thread.m4?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -104,6 +104,7 @@ AC_DEFUN([AX_BOOST_THREAD],\n                           ;;\n                         esac\n             if test \"x$ax_boost_user_thread_lib\" = \"x\"; then\n+                ax_lib=\n                 for libextension in `ls -r $BOOSTLIBDIR/libboost_thread* 2>/dev/null | sed 's,.*/lib,,' | sed 's,\\..*,,'`; do\n                      ax_lib=${libextension}\n \t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n@@ -128,7 +129,7 @@ AC_DEFUN([AX_BOOST_THREAD],\n \n             fi\n             if test \"x$ax_lib\" = \"x\"; then\n-                AC_MSG_ERROR(Could not find a version of the library!)\n+                AC_MSG_ERROR(Could not find a version of the boost_thread library!)\n             fi\n \t\t\tif test \"x$link_thread\" = \"xno\"; then\n \t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)",
        "previous_filename": "src/m4/ax_boost_thread.m4"
      },
      {
        "sha": "4efd1e2f18be12e19176f772ad41f07a823a0c85",
        "filename": "build-aux/m4/ax_boost_unit_test_framework.m4",
        "status": "renamed",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/build-aux/m4/ax_boost_unit_test_framework.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/build-aux/m4/ax_boost_unit_test_framework.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_unit_test_framework.m4?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -76,6 +76,7 @@ AC_DEFUN([AX_BOOST_UNIT_TEST_FRAMEWORK],\n \n             if test \"x$ax_boost_user_unit_test_framework_lib\" = \"x\"; then\n \t\t\tsaved_ldflags=\"${LDFLAGS}\"\n+                ax_lib=\n                 for monitor_library in `ls $BOOSTLIBDIR/libboost_unit_test_framework*.so* $BOOSTLIBDIR/libboost_unit_test_framework*.dylib* $BOOSTLIBDIR/libboost_unit_test_framework*.a* 2>/dev/null` ; do\n                     if test -r $monitor_library ; then\n                        libextension=`echo $monitor_library | sed 's,.*/,,' | sed -e 's;^lib\\(boost_unit_test_framework.*\\)\\.so.*$;\\1;' -e 's;^lib\\(boost_unit_test_framework.*\\)\\.dylib.*$;\\1;' -e 's;^lib\\(boost_unit_test_framework.*\\)\\.a.*$;\\1;'`\n@@ -124,7 +125,7 @@ AC_DEFUN([AX_BOOST_UNIT_TEST_FRAMEWORK],\n                done\n             fi\n             if test \"x$ax_lib\" = \"x\"; then\n-                AC_MSG_ERROR(Could not find a version of the library!)\n+                AC_MSG_ERROR(Could not find a version of the boost_unit_test_framework library!)\n             fi\n \t\t\tif test \"x$link_unit_test_framework\" != \"xyes\"; then\n \t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)",
        "previous_filename": "src/m4/ax_boost_unit_test_framework.m4"
      },
      {
        "sha": "ca3639715e7243fa4343eb2e7f3de53927cc9d4a",
        "filename": "build-aux/m4/ax_check_compile_flag.m4",
        "status": "renamed",
        "additions": 7,
        "deletions": 5,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/build-aux/m4/ax_check_compile_flag.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/build-aux/m4/ax_check_compile_flag.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_check_compile_flag.m4?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -4,7 +4,7 @@\n #\n # SYNOPSIS\n #\n-#   AX_CHECK_COMPILE_FLAG(FLAG, [ACTION-SUCCESS], [ACTION-FAILURE], [EXTRA-FLAGS])\n+#   AX_CHECK_COMPILE_FLAG(FLAG, [ACTION-SUCCESS], [ACTION-FAILURE], [EXTRA-FLAGS], [INPUT])\n #\n # DESCRIPTION\n #\n@@ -19,6 +19,8 @@\n #   the flags: \"CFLAGS EXTRA-FLAGS FLAG\".  This can for example be used to\n #   force the compiler to issue an error when a bad flag is given.\n #\n+#   INPUT gives an alternative input source to AC_COMPILE_IFELSE.\n+#\n #   NOTE: Implementation based on AX_CFLAGS_GCC_OPTION. Please keep this\n #   macro in sync with AX_CHECK_{PREPROC,LINK}_FLAG.\n #\n@@ -53,19 +55,19 @@\n #   modified version of the Autoconf Macro, you may extend this special\n #   exception to the GPL to apply to your modified version as well.\n \n-#serial 2\n+#serial 4\n \n AC_DEFUN([AX_CHECK_COMPILE_FLAG],\n-[AC_PREREQ(2.59)dnl for _AC_LANG_PREFIX\n+[AC_PREREQ(2.64)dnl for _AC_LANG_PREFIX and AS_VAR_IF\n AS_VAR_PUSHDEF([CACHEVAR],[ax_cv_check_[]_AC_LANG_ABBREV[]flags_$4_$1])dnl\n AC_CACHE_CHECK([whether _AC_LANG compiler accepts $1], CACHEVAR, [\n   ax_check_save_flags=$[]_AC_LANG_PREFIX[]FLAGS\n   _AC_LANG_PREFIX[]FLAGS=\"$[]_AC_LANG_PREFIX[]FLAGS $4 $1\"\n-  AC_COMPILE_IFELSE([AC_LANG_PROGRAM()],\n+  AC_COMPILE_IFELSE([m4_default([$5],[AC_LANG_PROGRAM()])],\n     [AS_VAR_SET(CACHEVAR,[yes])],\n     [AS_VAR_SET(CACHEVAR,[no])])\n   _AC_LANG_PREFIX[]FLAGS=$ax_check_save_flags])\n-AS_IF([test x\"AS_VAR_GET(CACHEVAR)\" = xyes],\n+AS_VAR_IF(CACHEVAR,yes,\n   [m4_default([$2], :)],\n   [m4_default([$3], :)])\n AS_VAR_POPDEF([CACHEVAR])dnl",
        "previous_filename": "src/m4/ax_check_compile_flag.m4"
      },
      {
        "sha": "eb01a6ce135eca0fdde834b00c21b12202b09f3d",
        "filename": "build-aux/m4/ax_check_link_flag.m4",
        "status": "renamed",
        "additions": 8,
        "deletions": 5,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/build-aux/m4/ax_check_link_flag.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/build-aux/m4/ax_check_link_flag.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_check_link_flag.m4?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -4,7 +4,7 @@\n #\n # SYNOPSIS\n #\n-#   AX_CHECK_LINK_FLAG(FLAG, [ACTION-SUCCESS], [ACTION-FAILURE], [EXTRA-FLAGS])\n+#   AX_CHECK_LINK_FLAG(FLAG, [ACTION-SUCCESS], [ACTION-FAILURE], [EXTRA-FLAGS], [INPUT])\n #\n # DESCRIPTION\n #\n@@ -19,6 +19,8 @@\n #   EXTRA-FLAGS FLAG\".  This can for example be used to force the linker to\n #   issue an error when a bad flag is given.\n #\n+#   INPUT gives an alternative input source to AC_LINK_IFELSE.\n+#\n #   NOTE: Implementation based on AX_CFLAGS_GCC_OPTION. Please keep this\n #   macro in sync with AX_CHECK_{PREPROC,COMPILE}_FLAG.\n #\n@@ -53,18 +55,19 @@\n #   modified version of the Autoconf Macro, you may extend this special\n #   exception to the GPL to apply to your modified version as well.\n \n-#serial 2\n+#serial 4\n \n AC_DEFUN([AX_CHECK_LINK_FLAG],\n-[AS_VAR_PUSHDEF([CACHEVAR],[ax_cv_check_ldflags_$4_$1])dnl\n+[AC_PREREQ(2.64)dnl for _AC_LANG_PREFIX and AS_VAR_IF\n+AS_VAR_PUSHDEF([CACHEVAR],[ax_cv_check_ldflags_$4_$1])dnl\n AC_CACHE_CHECK([whether the linker accepts $1], CACHEVAR, [\n   ax_check_save_flags=$LDFLAGS\n   LDFLAGS=\"$LDFLAGS $4 $1\"\n-  AC_LINK_IFELSE([AC_LANG_PROGRAM()],\n+  AC_LINK_IFELSE([m4_default([$5],[AC_LANG_PROGRAM()])],\n     [AS_VAR_SET(CACHEVAR,[yes])],\n     [AS_VAR_SET(CACHEVAR,[no])])\n   LDFLAGS=$ax_check_save_flags])\n-AS_IF([test x\"AS_VAR_GET(CACHEVAR)\" = xyes],\n+AS_VAR_IF(CACHEVAR,yes,\n   [m4_default([$2], :)],\n   [m4_default([$3], :)])\n AS_VAR_POPDEF([CACHEVAR])dnl",
        "previous_filename": "src/m4/ax_check_link_flag.m4"
      },
      {
        "sha": "ca1d5ee2b6d1ae107504d4ab433bc5f6fd629f61",
        "filename": "build-aux/m4/ax_check_preproc_flag.m4",
        "status": "renamed",
        "additions": 7,
        "deletions": 5,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/build-aux/m4/ax_check_preproc_flag.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/build-aux/m4/ax_check_preproc_flag.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_check_preproc_flag.m4?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -4,7 +4,7 @@\n #\n # SYNOPSIS\n #\n-#   AX_CHECK_PREPROC_FLAG(FLAG, [ACTION-SUCCESS], [ACTION-FAILURE], [EXTRA-FLAGS])\n+#   AX_CHECK_PREPROC_FLAG(FLAG, [ACTION-SUCCESS], [ACTION-FAILURE], [EXTRA-FLAGS], [INPUT])\n #\n # DESCRIPTION\n #\n@@ -19,6 +19,8 @@\n #   \"CPPFLAGS EXTRA-FLAGS FLAG\".  This can for example be used to force the\n #   preprocessor to issue an error when a bad flag is given.\n #\n+#   INPUT gives an alternative input source to AC_PREPROC_IFELSE.\n+#\n #   NOTE: Implementation based on AX_CFLAGS_GCC_OPTION. Please keep this\n #   macro in sync with AX_CHECK_{COMPILE,LINK}_FLAG.\n #\n@@ -53,19 +55,19 @@\n #   modified version of the Autoconf Macro, you may extend this special\n #   exception to the GPL to apply to your modified version as well.\n \n-#serial 2\n+#serial 4\n \n AC_DEFUN([AX_CHECK_PREPROC_FLAG],\n-[AC_PREREQ(2.59)dnl for _AC_LANG_PREFIX\n+[AC_PREREQ(2.64)dnl for _AC_LANG_PREFIX and AS_VAR_IF\n AS_VAR_PUSHDEF([CACHEVAR],[ax_cv_check_[]_AC_LANG_ABBREV[]cppflags_$4_$1])dnl\n AC_CACHE_CHECK([whether _AC_LANG preprocessor accepts $1], CACHEVAR, [\n   ax_check_save_flags=$CPPFLAGS\n   CPPFLAGS=\"$CPPFLAGS $4 $1\"\n-  AC_PREPROC_IFELSE([AC_LANG_PROGRAM()],\n+  AC_PREPROC_IFELSE([m4_default([$5],[AC_LANG_PROGRAM()])],\n     [AS_VAR_SET(CACHEVAR,[yes])],\n     [AS_VAR_SET(CACHEVAR,[no])])\n   CPPFLAGS=$ax_check_save_flags])\n-AS_IF([test x\"AS_VAR_GET(CACHEVAR)\" = xyes],\n+AS_VAR_IF(CACHEVAR,yes,\n   [m4_default([$2], :)],\n   [m4_default([$3], :)])\n AS_VAR_POPDEF([CACHEVAR])dnl",
        "previous_filename": "src/m4/ax_check_preproc_flag.m4"
      },
      {
        "sha": "2c18e49c56c0bc732a4bd6534ae03f871d42c6db",
        "filename": "build-aux/m4/ax_cxx_compile_stdcxx.m4",
        "status": "added",
        "additions": 562,
        "deletions": 0,
        "changes": 562,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/build-aux/m4/ax_cxx_compile_stdcxx.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/build-aux/m4/ax_cxx_compile_stdcxx.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_cxx_compile_stdcxx.m4?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,562 @@\n+# ===========================================================================\n+#   http://www.gnu.org/software/autoconf-archive/ax_cxx_compile_stdcxx.html\n+# ===========================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_CXX_COMPILE_STDCXX(VERSION, [ext|noext], [mandatory|optional])\n+#\n+# DESCRIPTION\n+#\n+#   Check for baseline language coverage in the compiler for the specified\n+#   version of the C++ standard.  If necessary, add switches to CXX and\n+#   CXXCPP to enable support.  VERSION may be '11' (for the C++11 standard)\n+#   or '14' (for the C++14 standard).\n+#\n+#   The second argument, if specified, indicates whether you insist on an\n+#   extended mode (e.g. -std=gnu++11) or a strict conformance mode (e.g.\n+#   -std=c++11).  If neither is specified, you get whatever works, with\n+#   preference for an extended mode.\n+#\n+#   The third argument, if specified 'mandatory' or if left unspecified,\n+#   indicates that baseline support for the specified C++ standard is\n+#   required and that the macro should error out if no mode with that\n+#   support is found.  If specified 'optional', then configuration proceeds\n+#   regardless, after defining HAVE_CXX${VERSION} if and only if a\n+#   supporting mode is found.\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2008 Benjamin Kosnik <bkoz@redhat.com>\n+#   Copyright (c) 2012 Zack Weinberg <zackw@panix.com>\n+#   Copyright (c) 2013 Roy Stogner <roystgnr@ices.utexas.edu>\n+#   Copyright (c) 2014, 2015 Google Inc.; contributed by Alexey Sokolov <sokolov@google.com>\n+#   Copyright (c) 2015 Paul Norman <penorman@mac.com>\n+#   Copyright (c) 2015 Moritz Klammler <moritz@klammler.eu>\n+#\n+#   Copying and distribution of this file, with or without modification, are\n+#   permitted in any medium without royalty provided the copyright notice\n+#   and this notice are preserved.  This file is offered as-is, without any\n+#   warranty.\n+\n+#serial 4\n+\n+dnl  This macro is based on the code from the AX_CXX_COMPILE_STDCXX_11 macro\n+dnl  (serial version number 13).\n+\n+AC_DEFUN([AX_CXX_COMPILE_STDCXX], [dnl\n+  m4_if([$1], [11], [],\n+        [$1], [14], [],\n+        [$1], [17], [m4_fatal([support for C++17 not yet implemented in AX_CXX_COMPILE_STDCXX])],\n+        [m4_fatal([invalid first argument `$1' to AX_CXX_COMPILE_STDCXX])])dnl\n+  m4_if([$2], [], [],\n+        [$2], [ext], [],\n+        [$2], [noext], [],\n+        [m4_fatal([invalid second argument `$2' to AX_CXX_COMPILE_STDCXX])])dnl\n+  m4_if([$3], [], [ax_cxx_compile_cxx$1_required=true],\n+        [$3], [mandatory], [ax_cxx_compile_cxx$1_required=true],\n+        [$3], [optional], [ax_cxx_compile_cxx$1_required=false],\n+        [m4_fatal([invalid third argument `$3' to AX_CXX_COMPILE_STDCXX])])\n+  AC_LANG_PUSH([C++])dnl\n+  ac_success=no\n+  AC_CACHE_CHECK(whether $CXX supports C++$1 features by default,\n+  ax_cv_cxx_compile_cxx$1,\n+  [AC_COMPILE_IFELSE([AC_LANG_SOURCE([_AX_CXX_COMPILE_STDCXX_testbody_$1])],\n+    [ax_cv_cxx_compile_cxx$1=yes],\n+    [ax_cv_cxx_compile_cxx$1=no])])\n+  if test x$ax_cv_cxx_compile_cxx$1 = xyes; then\n+    ac_success=yes\n+  fi\n+\n+  m4_if([$2], [noext], [], [dnl\n+  if test x$ac_success = xno; then\n+    for switch in -std=gnu++$1 -std=gnu++0x; do\n+      cachevar=AS_TR_SH([ax_cv_cxx_compile_cxx$1_$switch])\n+      AC_CACHE_CHECK(whether $CXX supports C++$1 features with $switch,\n+                     $cachevar,\n+        [ac_save_CXX=\"$CXX\"\n+         CXX=\"$CXX $switch\"\n+         AC_COMPILE_IFELSE([AC_LANG_SOURCE([_AX_CXX_COMPILE_STDCXX_testbody_$1])],\n+          [eval $cachevar=yes],\n+          [eval $cachevar=no])\n+         CXX=\"$ac_save_CXX\"])\n+      if eval test x\\$$cachevar = xyes; then\n+        CXX=\"$CXX $switch\"\n+        if test -n \"$CXXCPP\" ; then\n+          CXXCPP=\"$CXXCPP $switch\"\n+        fi\n+        ac_success=yes\n+        break\n+      fi\n+    done\n+  fi])\n+\n+  m4_if([$2], [ext], [], [dnl\n+  if test x$ac_success = xno; then\n+    dnl HP's aCC needs +std=c++11 according to:\n+    dnl http://h21007.www2.hp.com/portal/download/files/unprot/aCxx/PDF_Release_Notes/769149-001.pdf\n+    dnl Cray's crayCC needs \"-h std=c++11\"\n+    for switch in -std=c++$1 -std=c++0x +std=c++$1 \"-h std=c++$1\"; do\n+      cachevar=AS_TR_SH([ax_cv_cxx_compile_cxx$1_$switch])\n+      AC_CACHE_CHECK(whether $CXX supports C++$1 features with $switch,\n+                     $cachevar,\n+        [ac_save_CXX=\"$CXX\"\n+         CXX=\"$CXX $switch\"\n+         AC_COMPILE_IFELSE([AC_LANG_SOURCE([_AX_CXX_COMPILE_STDCXX_testbody_$1])],\n+          [eval $cachevar=yes],\n+          [eval $cachevar=no])\n+         CXX=\"$ac_save_CXX\"])\n+      if eval test x\\$$cachevar = xyes; then\n+        CXX=\"$CXX $switch\"\n+        if test -n \"$CXXCPP\" ; then\n+          CXXCPP=\"$CXXCPP $switch\"\n+        fi\n+        ac_success=yes\n+        break\n+      fi\n+    done\n+  fi])\n+  AC_LANG_POP([C++])\n+  if test x$ax_cxx_compile_cxx$1_required = xtrue; then\n+    if test x$ac_success = xno; then\n+      AC_MSG_ERROR([*** A compiler with support for C++$1 language features is required.])\n+    fi\n+  fi\n+  if test x$ac_success = xno; then\n+    HAVE_CXX$1=0\n+    AC_MSG_NOTICE([No compiler with C++$1 support was found])\n+  else\n+    HAVE_CXX$1=1\n+    AC_DEFINE(HAVE_CXX$1,1,\n+              [define if the compiler supports basic C++$1 syntax])\n+  fi\n+  AC_SUBST(HAVE_CXX$1)\n+])\n+\n+\n+dnl  Test body for checking C++11 support\n+\n+m4_define([_AX_CXX_COMPILE_STDCXX_testbody_11],\n+  _AX_CXX_COMPILE_STDCXX_testbody_new_in_11\n+)\n+\n+\n+dnl  Test body for checking C++14 support\n+\n+m4_define([_AX_CXX_COMPILE_STDCXX_testbody_14],\n+  _AX_CXX_COMPILE_STDCXX_testbody_new_in_11\n+  _AX_CXX_COMPILE_STDCXX_testbody_new_in_14\n+)\n+\n+\n+dnl  Tests for new features in C++11\n+\n+m4_define([_AX_CXX_COMPILE_STDCXX_testbody_new_in_11], [[\n+\n+// If the compiler admits that it is not ready for C++11, why torture it?\n+// Hopefully, this will speed up the test.\n+\n+#ifndef __cplusplus\n+\n+#error \"This is not a C++ compiler\"\n+\n+#elif __cplusplus < 201103L\n+\n+#error \"This is not a C++11 compiler\"\n+\n+#else\n+\n+namespace cxx11\n+{\n+\n+  namespace test_static_assert\n+  {\n+\n+    template <typename T>\n+    struct check\n+    {\n+      static_assert(sizeof(int) <= sizeof(T), \"not big enough\");\n+    };\n+\n+  }\n+\n+  namespace test_final_override\n+  {\n+\n+    struct Base\n+    {\n+      virtual void f() {}\n+    };\n+\n+    struct Derived : public Base\n+    {\n+      virtual void f() override {}\n+    };\n+\n+  }\n+\n+  namespace test_double_right_angle_brackets\n+  {\n+\n+    template < typename T >\n+    struct check {};\n+\n+    typedef check<void> single_type;\n+    typedef check<check<void>> double_type;\n+    typedef check<check<check<void>>> triple_type;\n+    typedef check<check<check<check<void>>>> quadruple_type;\n+\n+  }\n+\n+  namespace test_decltype\n+  {\n+\n+    int\n+    f()\n+    {\n+      int a = 1;\n+      decltype(a) b = 2;\n+      return a + b;\n+    }\n+\n+  }\n+\n+  namespace test_type_deduction\n+  {\n+\n+    template < typename T1, typename T2 >\n+    struct is_same\n+    {\n+      static const bool value = false;\n+    };\n+\n+    template < typename T >\n+    struct is_same<T, T>\n+    {\n+      static const bool value = true;\n+    };\n+\n+    template < typename T1, typename T2 >\n+    auto\n+    add(T1 a1, T2 a2) -> decltype(a1 + a2)\n+    {\n+      return a1 + a2;\n+    }\n+\n+    int\n+    test(const int c, volatile int v)\n+    {\n+      static_assert(is_same<int, decltype(0)>::value == true, \"\");\n+      static_assert(is_same<int, decltype(c)>::value == false, \"\");\n+      static_assert(is_same<int, decltype(v)>::value == false, \"\");\n+      auto ac = c;\n+      auto av = v;\n+      auto sumi = ac + av + 'x';\n+      auto sumf = ac + av + 1.0;\n+      static_assert(is_same<int, decltype(ac)>::value == true, \"\");\n+      static_assert(is_same<int, decltype(av)>::value == true, \"\");\n+      static_assert(is_same<int, decltype(sumi)>::value == true, \"\");\n+      static_assert(is_same<int, decltype(sumf)>::value == false, \"\");\n+      static_assert(is_same<int, decltype(add(c, v))>::value == true, \"\");\n+      return (sumf > 0.0) ? sumi : add(c, v);\n+    }\n+\n+  }\n+\n+  namespace test_noexcept\n+  {\n+\n+    int f() { return 0; }\n+    int g() noexcept { return 0; }\n+\n+    static_assert(noexcept(f()) == false, \"\");\n+    static_assert(noexcept(g()) == true, \"\");\n+\n+  }\n+\n+  namespace test_constexpr\n+  {\n+\n+    template < typename CharT >\n+    unsigned long constexpr\n+    strlen_c_r(const CharT *const s, const unsigned long acc) noexcept\n+    {\n+      return *s ? strlen_c_r(s + 1, acc + 1) : acc;\n+    }\n+\n+    template < typename CharT >\n+    unsigned long constexpr\n+    strlen_c(const CharT *const s) noexcept\n+    {\n+      return strlen_c_r(s, 0UL);\n+    }\n+\n+    static_assert(strlen_c(\"\") == 0UL, \"\");\n+    static_assert(strlen_c(\"1\") == 1UL, \"\");\n+    static_assert(strlen_c(\"example\") == 7UL, \"\");\n+    static_assert(strlen_c(\"another\\0example\") == 7UL, \"\");\n+\n+  }\n+\n+  namespace test_rvalue_references\n+  {\n+\n+    template < int N >\n+    struct answer\n+    {\n+      static constexpr int value = N;\n+    };\n+\n+    answer<1> f(int&)       { return answer<1>(); }\n+    answer<2> f(const int&) { return answer<2>(); }\n+    answer<3> f(int&&)      { return answer<3>(); }\n+\n+    void\n+    test()\n+    {\n+      int i = 0;\n+      const int c = 0;\n+      static_assert(decltype(f(i))::value == 1, \"\");\n+      static_assert(decltype(f(c))::value == 2, \"\");\n+      static_assert(decltype(f(0))::value == 3, \"\");\n+    }\n+\n+  }\n+\n+  namespace test_uniform_initialization\n+  {\n+\n+    struct test\n+    {\n+      static const int zero {};\n+      static const int one {1};\n+    };\n+\n+    static_assert(test::zero == 0, \"\");\n+    static_assert(test::one == 1, \"\");\n+\n+  }\n+\n+  namespace test_lambdas\n+  {\n+\n+    void\n+    test1()\n+    {\n+      auto lambda1 = [](){};\n+      auto lambda2 = lambda1;\n+      lambda1();\n+      lambda2();\n+    }\n+\n+    int\n+    test2()\n+    {\n+      auto a = [](int i, int j){ return i + j; }(1, 2);\n+      auto b = []() -> int { return '0'; }();\n+      auto c = [=](){ return a + b; }();\n+      auto d = [&](){ return c; }();\n+      auto e = [a, &b](int x) mutable {\n+        const auto identity = [](int y){ return y; };\n+        for (auto i = 0; i < a; ++i)\n+          a += b--;\n+        return x + identity(a + b);\n+      }(0);\n+      return a + b + c + d + e;\n+    }\n+\n+    int\n+    test3()\n+    {\n+      const auto nullary = [](){ return 0; };\n+      const auto unary = [](int x){ return x; };\n+      using nullary_t = decltype(nullary);\n+      using unary_t = decltype(unary);\n+      const auto higher1st = [](nullary_t f){ return f(); };\n+      const auto higher2nd = [unary](nullary_t f1){\n+        return [unary, f1](unary_t f2){ return f2(unary(f1())); };\n+      };\n+      return higher1st(nullary) + higher2nd(nullary)(unary);\n+    }\n+\n+  }\n+\n+  namespace test_variadic_templates\n+  {\n+\n+    template <int...>\n+    struct sum;\n+\n+    template <int N0, int... N1toN>\n+    struct sum<N0, N1toN...>\n+    {\n+      static constexpr auto value = N0 + sum<N1toN...>::value;\n+    };\n+\n+    template <>\n+    struct sum<>\n+    {\n+      static constexpr auto value = 0;\n+    };\n+\n+    static_assert(sum<>::value == 0, \"\");\n+    static_assert(sum<1>::value == 1, \"\");\n+    static_assert(sum<23>::value == 23, \"\");\n+    static_assert(sum<1, 2>::value == 3, \"\");\n+    static_assert(sum<5, 5, 11>::value == 21, \"\");\n+    static_assert(sum<2, 3, 5, 7, 11, 13>::value == 41, \"\");\n+\n+  }\n+\n+  // http://stackoverflow.com/questions/13728184/template-aliases-and-sfinae\n+  // Clang 3.1 fails with headers of libstd++ 4.8.3 when using std::function\n+  // because of this.\n+  namespace test_template_alias_sfinae\n+  {\n+\n+    struct foo {};\n+\n+    template<typename T>\n+    using member = typename T::member_type;\n+\n+    template<typename T>\n+    void func(...) {}\n+\n+    template<typename T>\n+    void func(member<T>*) {}\n+\n+    void test();\n+\n+    void test() { func<foo>(0); }\n+\n+  }\n+\n+}  // namespace cxx11\n+\n+#endif  // __cplusplus >= 201103L\n+\n+]])\n+\n+\n+dnl  Tests for new features in C++14\n+\n+m4_define([_AX_CXX_COMPILE_STDCXX_testbody_new_in_14], [[\n+\n+// If the compiler admits that it is not ready for C++14, why torture it?\n+// Hopefully, this will speed up the test.\n+\n+#ifndef __cplusplus\n+\n+#error \"This is not a C++ compiler\"\n+\n+#elif __cplusplus < 201402L\n+\n+#error \"This is not a C++14 compiler\"\n+\n+#else\n+\n+namespace cxx14\n+{\n+\n+  namespace test_polymorphic_lambdas\n+  {\n+\n+    int\n+    test()\n+    {\n+      const auto lambda = [](auto&&... args){\n+        const auto istiny = [](auto x){\n+          return (sizeof(x) == 1UL) ? 1 : 0;\n+        };\n+        const int aretiny[] = { istiny(args)... };\n+        return aretiny[0];\n+      };\n+      return lambda(1, 1L, 1.0f, '1');\n+    }\n+\n+  }\n+\n+  namespace test_binary_literals\n+  {\n+\n+    constexpr auto ivii = 0b0000000000101010;\n+    static_assert(ivii == 42, \"wrong value\");\n+\n+  }\n+\n+  namespace test_generalized_constexpr\n+  {\n+\n+    template < typename CharT >\n+    constexpr unsigned long\n+    strlen_c(const CharT *const s) noexcept\n+    {\n+      auto length = 0UL;\n+      for (auto p = s; *p; ++p)\n+        ++length;\n+      return length;\n+    }\n+\n+    static_assert(strlen_c(\"\") == 0UL, \"\");\n+    static_assert(strlen_c(\"x\") == 1UL, \"\");\n+    static_assert(strlen_c(\"test\") == 4UL, \"\");\n+    static_assert(strlen_c(\"another\\0test\") == 7UL, \"\");\n+\n+  }\n+\n+  namespace test_lambda_init_capture\n+  {\n+\n+    int\n+    test()\n+    {\n+      auto x = 0;\n+      const auto lambda1 = [a = x](int b){ return a + b; };\n+      const auto lambda2 = [a = lambda1(x)](){ return a; };\n+      return lambda2();\n+    }\n+\n+  }\n+\n+  namespace test_digit_seperators\n+  {\n+\n+    constexpr auto ten_million = 100'000'000;\n+    static_assert(ten_million == 100000000, \"\");\n+\n+  }\n+\n+  namespace test_return_type_deduction\n+  {\n+\n+    auto f(int& x) { return x; }\n+    decltype(auto) g(int& x) { return x; }\n+\n+    template < typename T1, typename T2 >\n+    struct is_same\n+    {\n+      static constexpr auto value = false;\n+    };\n+\n+    template < typename T >\n+    struct is_same<T, T>\n+    {\n+      static constexpr auto value = true;\n+    };\n+\n+    int\n+    test()\n+    {\n+      auto x = 0;\n+      static_assert(is_same<int, decltype(f(x))>::value, \"\");\n+      static_assert(is_same<int&, decltype(g(x))>::value, \"\");\n+      return x;\n+    }\n+\n+  }\n+\n+}  // namespace cxx14\n+\n+#endif  // __cplusplus >= 201402L\n+\n+]])"
      },
      {
        "sha": "c788ca9bd435fbfe4e1642281aabd7f9492786ff",
        "filename": "build-aux/m4/ax_gcc_func_attribute.m4",
        "status": "added",
        "additions": 223,
        "deletions": 0,
        "changes": 223,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/build-aux/m4/ax_gcc_func_attribute.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/build-aux/m4/ax_gcc_func_attribute.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_gcc_func_attribute.m4?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,223 @@\n+# ===========================================================================\n+#   http://www.gnu.org/software/autoconf-archive/ax_gcc_func_attribute.html\n+# ===========================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_GCC_FUNC_ATTRIBUTE(ATTRIBUTE)\n+#\n+# DESCRIPTION\n+#\n+#   This macro checks if the compiler supports one of GCC's function\n+#   attributes; many other compilers also provide function attributes with\n+#   the same syntax. Compiler warnings are used to detect supported\n+#   attributes as unsupported ones are ignored by default so quieting\n+#   warnings when using this macro will yield false positives.\n+#\n+#   The ATTRIBUTE parameter holds the name of the attribute to be checked.\n+#\n+#   If ATTRIBUTE is supported define HAVE_FUNC_ATTRIBUTE_<ATTRIBUTE>.\n+#\n+#   The macro caches its result in the ax_cv_have_func_attribute_<attribute>\n+#   variable.\n+#\n+#   The macro currently supports the following function attributes:\n+#\n+#    alias\n+#    aligned\n+#    alloc_size\n+#    always_inline\n+#    artificial\n+#    cold\n+#    const\n+#    constructor\n+#    constructor_priority for constructor attribute with priority\n+#    deprecated\n+#    destructor\n+#    dllexport\n+#    dllimport\n+#    error\n+#    externally_visible\n+#    flatten\n+#    format\n+#    format_arg\n+#    gnu_inline\n+#    hot\n+#    ifunc\n+#    leaf\n+#    malloc\n+#    noclone\n+#    noinline\n+#    nonnull\n+#    noreturn\n+#    nothrow\n+#    optimize\n+#    pure\n+#    unused\n+#    used\n+#    visibility\n+#    warning\n+#    warn_unused_result\n+#    weak\n+#    weakref\n+#\n+#   Unsuppored function attributes will be tested with a prototype returning\n+#   an int and not accepting any arguments and the result of the check might\n+#   be wrong or meaningless so use with care.\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2013 Gabriele Svelto <gabriele.svelto@gmail.com>\n+#\n+#   Copying and distribution of this file, with or without modification, are\n+#   permitted in any medium without royalty provided the copyright notice\n+#   and this notice are preserved.  This file is offered as-is, without any\n+#   warranty.\n+\n+#serial 3\n+\n+AC_DEFUN([AX_GCC_FUNC_ATTRIBUTE], [\n+    AS_VAR_PUSHDEF([ac_var], [ax_cv_have_func_attribute_$1])\n+\n+    AC_CACHE_CHECK([for __attribute__(($1))], [ac_var], [\n+        AC_LINK_IFELSE([AC_LANG_PROGRAM([\n+            m4_case([$1],\n+                [alias], [\n+                    int foo( void ) { return 0; }\n+                    int bar( void ) __attribute__(($1(\"foo\")));\n+                ],\n+                [aligned], [\n+                    int foo( void ) __attribute__(($1(32)));\n+                ],\n+                [alloc_size], [\n+                    void *foo(int a) __attribute__(($1(1)));\n+                ],\n+                [always_inline], [\n+                    inline __attribute__(($1)) int foo( void ) { return 0; }\n+                ],\n+                [artificial], [\n+                    inline __attribute__(($1)) int foo( void ) { return 0; }\n+                ],\n+                [cold], [\n+                    int foo( void ) __attribute__(($1));\n+                ],\n+                [const], [\n+                    int foo( void ) __attribute__(($1));\n+                ],\n+                [constructor_priority], [\n+                    int foo( void ) __attribute__((__constructor__(65535/2)));\n+                ],\n+                [constructor], [\n+                    int foo( void ) __attribute__(($1));\n+                ],\n+                [deprecated], [\n+                    int foo( void ) __attribute__(($1(\"\")));\n+                ],\n+                [destructor], [\n+                    int foo( void ) __attribute__(($1));\n+                ],\n+                [dllexport], [\n+                    __attribute__(($1)) int foo( void ) { return 0; }\n+                ],\n+                [dllimport], [\n+                    int foo( void ) __attribute__(($1));\n+                ],\n+                [error], [\n+                    int foo( void ) __attribute__(($1(\"\")));\n+                ],\n+                [externally_visible], [\n+                    int foo( void ) __attribute__(($1));\n+                ],\n+                [flatten], [\n+                    int foo( void ) __attribute__(($1));\n+                ],\n+                [format], [\n+                    int foo(const char *p, ...) __attribute__(($1(printf, 1, 2)));\n+                ],\n+                [format_arg], [\n+                    char *foo(const char *p) __attribute__(($1(1)));\n+                ],\n+                [gnu_inline], [\n+                    inline __attribute__(($1)) int foo( void ) { return 0; }\n+                ],\n+                [hot], [\n+                    int foo( void ) __attribute__(($1));\n+                ],\n+                [ifunc], [\n+                    int my_foo( void ) { return 0; }\n+                    static int (*resolve_foo(void))(void) { return my_foo; }\n+                    int foo( void ) __attribute__(($1(\"resolve_foo\")));\n+                ],\n+                [leaf], [\n+                    __attribute__(($1)) int foo( void ) { return 0; }\n+                ],\n+                [malloc], [\n+                    void *foo( void ) __attribute__(($1));\n+                ],\n+                [noclone], [\n+                    int foo( void ) __attribute__(($1));\n+                ],\n+                [noinline], [\n+                    __attribute__(($1)) int foo( void ) { return 0; }\n+                ],\n+                [nonnull], [\n+                    int foo(char *p) __attribute__(($1(1)));\n+                ],\n+                [noreturn], [\n+                    void foo( void ) __attribute__(($1));\n+                ],\n+                [nothrow], [\n+                    int foo( void ) __attribute__(($1));\n+                ],\n+                [optimize], [\n+                    __attribute__(($1(3))) int foo( void ) { return 0; }\n+                ],\n+                [pure], [\n+                    int foo( void ) __attribute__(($1));\n+                ],\n+                [unused], [\n+                    int foo( void ) __attribute__(($1));\n+                ],\n+                [used], [\n+                    int foo( void ) __attribute__(($1));\n+                ],\n+                [visibility], [\n+                    int foo_def( void ) __attribute__(($1(\"default\")));\n+                    int foo_hid( void ) __attribute__(($1(\"hidden\")));\n+                    int foo_int( void ) __attribute__(($1(\"internal\")));\n+                    int foo_pro( void ) __attribute__(($1(\"protected\")));\n+                ],\n+                [warning], [\n+                    int foo( void ) __attribute__(($1(\"\")));\n+                ],\n+                [warn_unused_result], [\n+                    int foo( void ) __attribute__(($1));\n+                ],\n+                [weak], [\n+                    int foo( void ) __attribute__(($1));\n+                ],\n+                [weakref], [\n+                    static int foo( void ) { return 0; }\n+                    static int bar( void ) __attribute__(($1(\"foo\")));\n+                ],\n+                [\n+                 m4_warn([syntax], [Unsupported attribute $1, the test may fail])\n+                 int foo( void ) __attribute__(($1));\n+                ]\n+            )], [])\n+            ],\n+            dnl GCC doesn't exit with an error if an unknown attribute is\n+            dnl provided but only outputs a warning, so accept the attribute\n+            dnl only if no warning were issued.\n+            [AS_IF([test -s conftest.err],\n+                [AS_VAR_SET([ac_var], [no])],\n+                [AS_VAR_SET([ac_var], [yes])])],\n+            [AS_VAR_SET([ac_var], [no])])\n+    ])\n+\n+    AS_IF([test yes = AS_VAR_GET([ac_var])],\n+        [AC_DEFINE_UNQUOTED(AS_TR_CPP(HAVE_FUNC_ATTRIBUTE_$1), 1,\n+            [Define to 1 if the system has the `$1' function attribute])], [])\n+\n+    AS_VAR_POPDEF([ac_var])\n+])"
      },
      {
        "sha": "4c4051ea376f720faf21a4705c66604fe444c958",
        "filename": "build-aux/m4/ax_pthread.m4",
        "status": "added",
        "additions": 485,
        "deletions": 0,
        "changes": 485,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/build-aux/m4/ax_pthread.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/build-aux/m4/ax_pthread.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_pthread.m4?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,485 @@\n+# ===========================================================================\n+#        http://www.gnu.org/software/autoconf-archive/ax_pthread.html\n+# ===========================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_PTHREAD([ACTION-IF-FOUND[, ACTION-IF-NOT-FOUND]])\n+#\n+# DESCRIPTION\n+#\n+#   This macro figures out how to build C programs using POSIX threads. It\n+#   sets the PTHREAD_LIBS output variable to the threads library and linker\n+#   flags, and the PTHREAD_CFLAGS output variable to any special C compiler\n+#   flags that are needed. (The user can also force certain compiler\n+#   flags/libs to be tested by setting these environment variables.)\n+#\n+#   Also sets PTHREAD_CC to any special C compiler that is needed for\n+#   multi-threaded programs (defaults to the value of CC otherwise). (This\n+#   is necessary on AIX to use the special cc_r compiler alias.)\n+#\n+#   NOTE: You are assumed to not only compile your program with these flags,\n+#   but also to link with them as well. For example, you might link with\n+#   $PTHREAD_CC $CFLAGS $PTHREAD_CFLAGS $LDFLAGS ... $PTHREAD_LIBS $LIBS\n+#\n+#   If you are only building threaded programs, you may wish to use these\n+#   variables in your default LIBS, CFLAGS, and CC:\n+#\n+#     LIBS=\"$PTHREAD_LIBS $LIBS\"\n+#     CFLAGS=\"$CFLAGS $PTHREAD_CFLAGS\"\n+#     CC=\"$PTHREAD_CC\"\n+#\n+#   In addition, if the PTHREAD_CREATE_JOINABLE thread-attribute constant\n+#   has a nonstandard name, this macro defines PTHREAD_CREATE_JOINABLE to\n+#   that name (e.g. PTHREAD_CREATE_UNDETACHED on AIX).\n+#\n+#   Also HAVE_PTHREAD_PRIO_INHERIT is defined if pthread is found and the\n+#   PTHREAD_PRIO_INHERIT symbol is defined when compiling with\n+#   PTHREAD_CFLAGS.\n+#\n+#   ACTION-IF-FOUND is a list of shell commands to run if a threads library\n+#   is found, and ACTION-IF-NOT-FOUND is a list of commands to run it if it\n+#   is not found. If ACTION-IF-FOUND is not specified, the default action\n+#   will define HAVE_PTHREAD.\n+#\n+#   Please let the authors know if this macro fails on any platform, or if\n+#   you have any other suggestions or comments. This macro was based on work\n+#   by SGJ on autoconf scripts for FFTW (http://www.fftw.org/) (with help\n+#   from M. Frigo), as well as ac_pthread and hb_pthread macros posted by\n+#   Alejandro Forero Cuervo to the autoconf macro repository. We are also\n+#   grateful for the helpful feedback of numerous users.\n+#\n+#   Updated for Autoconf 2.68 by Daniel Richard G.\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2008 Steven G. Johnson <stevenj@alum.mit.edu>\n+#   Copyright (c) 2011 Daniel Richard G. <skunk@iSKUNK.ORG>\n+#\n+#   This program is free software: you can redistribute it and/or modify it\n+#   under the terms of the GNU General Public License as published by the\n+#   Free Software Foundation, either version 3 of the License, or (at your\n+#   option) any later version.\n+#\n+#   This program is distributed in the hope that it will be useful, but\n+#   WITHOUT ANY WARRANTY; without even the implied warranty of\n+#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General\n+#   Public License for more details.\n+#\n+#   You should have received a copy of the GNU General Public License along\n+#   with this program. If not, see <http://www.gnu.org/licenses/>.\n+#\n+#   As a special exception, the respective Autoconf Macro's copyright owner\n+#   gives unlimited permission to copy, distribute and modify the configure\n+#   scripts that are the output of Autoconf when processing the Macro. You\n+#   need not follow the terms of the GNU General Public License when using\n+#   or distributing such scripts, even though portions of the text of the\n+#   Macro appear in them. The GNU General Public License (GPL) does govern\n+#   all other use of the material that constitutes the Autoconf Macro.\n+#\n+#   This special exception to the GPL applies to versions of the Autoconf\n+#   Macro released by the Autoconf Archive. When you make and distribute a\n+#   modified version of the Autoconf Macro, you may extend this special\n+#   exception to the GPL to apply to your modified version as well.\n+\n+#serial 23\n+\n+AU_ALIAS([ACX_PTHREAD], [AX_PTHREAD])\n+AC_DEFUN([AX_PTHREAD], [\n+AC_REQUIRE([AC_CANONICAL_HOST])\n+AC_REQUIRE([AC_PROG_CC])\n+AC_REQUIRE([AC_PROG_SED])\n+AC_LANG_PUSH([C])\n+ax_pthread_ok=no\n+\n+# We used to check for pthread.h first, but this fails if pthread.h\n+# requires special compiler flags (e.g. on Tru64 or Sequent).\n+# It gets checked for in the link test anyway.\n+\n+# First of all, check if the user has set any of the PTHREAD_LIBS,\n+# etcetera environment variables, and if threads linking works using\n+# them:\n+if test \"x$PTHREAD_CFLAGS$PTHREAD_LIBS\" != \"x\"; then\n+        ax_pthread_save_CC=\"$CC\"\n+        ax_pthread_save_CFLAGS=\"$CFLAGS\"\n+        ax_pthread_save_LIBS=\"$LIBS\"\n+        AS_IF([test \"x$PTHREAD_CC\" != \"x\"], [CC=\"$PTHREAD_CC\"])\n+        CFLAGS=\"$CFLAGS $PTHREAD_CFLAGS\"\n+        LIBS=\"$PTHREAD_LIBS $LIBS\"\n+        AC_MSG_CHECKING([for pthread_join using $CC $PTHREAD_CFLAGS $PTHREAD_LIBS])\n+        AC_LINK_IFELSE([AC_LANG_CALL([], [pthread_join])], [ax_pthread_ok=yes])\n+        AC_MSG_RESULT([$ax_pthread_ok])\n+        if test \"x$ax_pthread_ok\" = \"xno\"; then\n+                PTHREAD_LIBS=\"\"\n+                PTHREAD_CFLAGS=\"\"\n+        fi\n+        CC=\"$ax_pthread_save_CC\"\n+        CFLAGS=\"$ax_pthread_save_CFLAGS\"\n+        LIBS=\"$ax_pthread_save_LIBS\"\n+fi\n+\n+# We must check for the threads library under a number of different\n+# names; the ordering is very important because some systems\n+# (e.g. DEC) have both -lpthread and -lpthreads, where one of the\n+# libraries is broken (non-POSIX).\n+\n+# Create a list of thread flags to try.  Items starting with a \"-\" are\n+# C compiler flags, and other items are library names, except for \"none\"\n+# which indicates that we try without any flags at all, and \"pthread-config\"\n+# which is a program returning the flags for the Pth emulation library.\n+\n+ax_pthread_flags=\"pthreads none -Kthread -pthread -pthreads -mthreads pthread --thread-safe -mt pthread-config\"\n+\n+# The ordering *is* (sometimes) important.  Some notes on the\n+# individual items follow:\n+\n+# pthreads: AIX (must check this before -lpthread)\n+# none: in case threads are in libc; should be tried before -Kthread and\n+#       other compiler flags to prevent continual compiler warnings\n+# -Kthread: Sequent (threads in libc, but -Kthread needed for pthread.h)\n+# -pthread: Linux/gcc (kernel threads), BSD/gcc (userland threads), Tru64\n+#           (Note: HP C rejects this with \"bad form for `-t' option\")\n+# -pthreads: Solaris/gcc (Note: HP C also rejects)\n+# -mt: Sun Workshop C (may only link SunOS threads [-lthread], but it\n+#      doesn't hurt to check since this sometimes defines pthreads and\n+#      -D_REENTRANT too), HP C (must be checked before -lpthread, which\n+#      is present but should not be used directly; and before -mthreads,\n+#      because the compiler interprets this as \"-mt\" + \"-hreads\")\n+# -mthreads: Mingw32/gcc, Lynx/gcc\n+# pthread: Linux, etcetera\n+# --thread-safe: KAI C++\n+# pthread-config: use pthread-config program (for GNU Pth library)\n+\n+case $host_os in\n+\n+        freebsd*)\n+\n+        # -kthread: FreeBSD kernel threads (preferred to -pthread since SMP-able)\n+        # lthread: LinuxThreads port on FreeBSD (also preferred to -pthread)\n+\n+        ax_pthread_flags=\"-kthread lthread $ax_pthread_flags\"\n+        ;;\n+\n+        hpux*)\n+\n+        # From the cc(1) man page: \"[-mt] Sets various -D flags to enable\n+        # multi-threading and also sets -lpthread.\"\n+\n+        ax_pthread_flags=\"-mt -pthread pthread $ax_pthread_flags\"\n+        ;;\n+\n+        openedition*)\n+\n+        # IBM z/OS requires a feature-test macro to be defined in order to\n+        # enable POSIX threads at all, so give the user a hint if this is\n+        # not set. (We don't define these ourselves, as they can affect\n+        # other portions of the system API in unpredictable ways.)\n+\n+        AC_EGREP_CPP([AX_PTHREAD_ZOS_MISSING],\n+            [\n+#            if !defined(_OPEN_THREADS) && !defined(_UNIX03_THREADS)\n+             AX_PTHREAD_ZOS_MISSING\n+#            endif\n+            ],\n+            [AC_MSG_WARN([IBM z/OS requires -D_OPEN_THREADS or -D_UNIX03_THREADS to enable pthreads support.])])\n+        ;;\n+\n+        solaris*)\n+\n+        # On Solaris (at least, for some versions), libc contains stubbed\n+        # (non-functional) versions of the pthreads routines, so link-based\n+        # tests will erroneously succeed. (N.B.: The stubs are missing\n+        # pthread_cleanup_push, or rather a function called by this macro,\n+        # so we could check for that, but who knows whether they'll stub\n+        # that too in a future libc.)  So we'll check first for the\n+        # standard Solaris way of linking pthreads (-mt -lpthread).\n+\n+        ax_pthread_flags=\"-mt,pthread pthread $ax_pthread_flags\"\n+        ;;\n+esac\n+\n+# GCC generally uses -pthread, or -pthreads on some platforms (e.g. SPARC)\n+\n+AS_IF([test \"x$GCC\" = \"xyes\"],\n+      [ax_pthread_flags=\"-pthread -pthreads $ax_pthread_flags\"])\n+\n+# The presence of a feature test macro requesting re-entrant function\n+# definitions is, on some systems, a strong hint that pthreads support is\n+# correctly enabled\n+\n+case $host_os in\n+        darwin* | hpux* | linux* | osf* | solaris*)\n+        ax_pthread_check_macro=\"_REENTRANT\"\n+        ;;\n+\n+        aix*)\n+        ax_pthread_check_macro=\"_THREAD_SAFE\"\n+        ;;\n+\n+        *)\n+        ax_pthread_check_macro=\"--\"\n+        ;;\n+esac\n+AS_IF([test \"x$ax_pthread_check_macro\" = \"x--\"],\n+      [ax_pthread_check_cond=0],\n+      [ax_pthread_check_cond=\"!defined($ax_pthread_check_macro)\"])\n+\n+# Are we compiling with Clang?\n+\n+AC_CACHE_CHECK([whether $CC is Clang],\n+    [ax_cv_PTHREAD_CLANG],\n+    [ax_cv_PTHREAD_CLANG=no\n+     # Note that Autoconf sets GCC=yes for Clang as well as GCC\n+     if test \"x$GCC\" = \"xyes\"; then\n+        AC_EGREP_CPP([AX_PTHREAD_CC_IS_CLANG],\n+            [/* Note: Clang 2.7 lacks __clang_[a-z]+__ */\n+#            if defined(__clang__) && defined(__llvm__)\n+             AX_PTHREAD_CC_IS_CLANG\n+#            endif\n+            ],\n+            [ax_cv_PTHREAD_CLANG=yes])\n+     fi\n+    ])\n+ax_pthread_clang=\"$ax_cv_PTHREAD_CLANG\"\n+\n+ax_pthread_clang_warning=no\n+\n+# Clang needs special handling, because older versions handle the -pthread\n+# option in a rather... idiosyncratic way\n+\n+if test \"x$ax_pthread_clang\" = \"xyes\"; then\n+\n+        # Clang takes -pthread; it has never supported any other flag\n+\n+        # (Note 1: This will need to be revisited if a system that Clang\n+        # supports has POSIX threads in a separate library.  This tends not\n+        # to be the way of modern systems, but it's conceivable.)\n+\n+        # (Note 2: On some systems, notably Darwin, -pthread is not needed\n+        # to get POSIX threads support; the API is always present and\n+        # active.  We could reasonably leave PTHREAD_CFLAGS empty.  But\n+        # -pthread does define _REENTRANT, and while the Darwin headers\n+        # ignore this macro, third-party headers might not.)\n+\n+        PTHREAD_CFLAGS=\"-pthread\"\n+        PTHREAD_LIBS=\n+\n+        ax_pthread_ok=yes\n+\n+        # However, older versions of Clang make a point of warning the user\n+        # that, in an invocation where only linking and no compilation is\n+        # taking place, the -pthread option has no effect (\"argument unused\n+        # during compilation\").  They expect -pthread to be passed in only\n+        # when source code is being compiled.\n+        #\n+        # Problem is, this is at odds with the way Automake and most other\n+        # C build frameworks function, which is that the same flags used in\n+        # compilation (CFLAGS) are also used in linking.  Many systems\n+        # supported by AX_PTHREAD require exactly this for POSIX threads\n+        # support, and in fact it is often not straightforward to specify a\n+        # flag that is used only in the compilation phase and not in\n+        # linking.  Such a scenario is extremely rare in practice.\n+        #\n+        # Even though use of the -pthread flag in linking would only print\n+        # a warning, this can be a nuisance for well-run software projects\n+        # that build with -Werror.  So if the active version of Clang has\n+        # this misfeature, we search for an option to squash it.\n+\n+        AC_CACHE_CHECK([whether Clang needs flag to prevent \"argument unused\" warning when linking with -pthread],\n+            [ax_cv_PTHREAD_CLANG_NO_WARN_FLAG],\n+            [ax_cv_PTHREAD_CLANG_NO_WARN_FLAG=unknown\n+             # Create an alternate version of $ac_link that compiles and\n+             # links in two steps (.c -> .o, .o -> exe) instead of one\n+             # (.c -> exe), because the warning occurs only in the second\n+             # step\n+             ax_pthread_save_ac_link=\"$ac_link\"\n+             ax_pthread_sed='s/conftest\\.\\$ac_ext/conftest.$ac_objext/g'\n+             ax_pthread_link_step=`$as_echo \"$ac_link\" | sed \"$ax_pthread_sed\"`\n+             ax_pthread_2step_ac_link=\"($ac_compile) && (echo ==== >&5) && ($ax_pthread_link_step)\"\n+             ax_pthread_save_CFLAGS=\"$CFLAGS\"\n+             for ax_pthread_try in '' -Qunused-arguments -Wno-unused-command-line-argument unknown; do\n+                AS_IF([test \"x$ax_pthread_try\" = \"xunknown\"], [break])\n+                CFLAGS=\"-Werror -Wunknown-warning-option $ax_pthread_try -pthread $ax_pthread_save_CFLAGS\"\n+                ac_link=\"$ax_pthread_save_ac_link\"\n+                AC_LINK_IFELSE([AC_LANG_SOURCE([[int main(void){return 0;}]])],\n+                    [ac_link=\"$ax_pthread_2step_ac_link\"\n+                     AC_LINK_IFELSE([AC_LANG_SOURCE([[int main(void){return 0;}]])],\n+                         [break])\n+                    ])\n+             done\n+             ac_link=\"$ax_pthread_save_ac_link\"\n+             CFLAGS=\"$ax_pthread_save_CFLAGS\"\n+             AS_IF([test \"x$ax_pthread_try\" = \"x\"], [ax_pthread_try=no])\n+             ax_cv_PTHREAD_CLANG_NO_WARN_FLAG=\"$ax_pthread_try\"\n+            ])\n+\n+        case \"$ax_cv_PTHREAD_CLANG_NO_WARN_FLAG\" in\n+                no | unknown) ;;\n+                *) PTHREAD_CFLAGS=\"$ax_cv_PTHREAD_CLANG_NO_WARN_FLAG $PTHREAD_CFLAGS\" ;;\n+        esac\n+\n+fi # $ax_pthread_clang = yes\n+\n+if test \"x$ax_pthread_ok\" = \"xno\"; then\n+for ax_pthread_try_flag in $ax_pthread_flags; do\n+\n+        case $ax_pthread_try_flag in\n+                none)\n+                AC_MSG_CHECKING([whether pthreads work without any flags])\n+                ;;\n+\n+                -mt,pthread)\n+                AC_MSG_CHECKING([whether pthreads work with -mt -lpthread])\n+                PTHREAD_CFLAGS=\"-mt\"\n+                PTHREAD_LIBS=\"-lpthread\"\n+                ;;\n+\n+                -*)\n+                AC_MSG_CHECKING([whether pthreads work with $ax_pthread_try_flag])\n+                PTHREAD_CFLAGS=\"$ax_pthread_try_flag\"\n+                ;;\n+\n+                pthread-config)\n+                AC_CHECK_PROG([ax_pthread_config], [pthread-config], [yes], [no])\n+                AS_IF([test \"x$ax_pthread_config\" = \"xno\"], [continue])\n+                PTHREAD_CFLAGS=\"`pthread-config --cflags`\"\n+                PTHREAD_LIBS=\"`pthread-config --ldflags` `pthread-config --libs`\"\n+                ;;\n+\n+                *)\n+                AC_MSG_CHECKING([for the pthreads library -l$ax_pthread_try_flag])\n+                PTHREAD_LIBS=\"-l$ax_pthread_try_flag\"\n+                ;;\n+        esac\n+\n+        ax_pthread_save_CFLAGS=\"$CFLAGS\"\n+        ax_pthread_save_LIBS=\"$LIBS\"\n+        CFLAGS=\"$CFLAGS $PTHREAD_CFLAGS\"\n+        LIBS=\"$PTHREAD_LIBS $LIBS\"\n+\n+        # Check for various functions.  We must include pthread.h,\n+        # since some functions may be macros.  (On the Sequent, we\n+        # need a special flag -Kthread to make this header compile.)\n+        # We check for pthread_join because it is in -lpthread on IRIX\n+        # while pthread_create is in libc.  We check for pthread_attr_init\n+        # due to DEC craziness with -lpthreads.  We check for\n+        # pthread_cleanup_push because it is one of the few pthread\n+        # functions on Solaris that doesn't have a non-functional libc stub.\n+        # We try pthread_create on general principles.\n+\n+        AC_LINK_IFELSE([AC_LANG_PROGRAM([#include <pthread.h>\n+#                       if $ax_pthread_check_cond\n+#                        error \"$ax_pthread_check_macro must be defined\"\n+#                       endif\n+                        static void routine(void *a) { a = 0; }\n+                        static void *start_routine(void *a) { return a; }],\n+                       [pthread_t th; pthread_attr_t attr;\n+                        pthread_create(&th, 0, start_routine, 0);\n+                        pthread_join(th, 0);\n+                        pthread_attr_init(&attr);\n+                        pthread_cleanup_push(routine, 0);\n+                        pthread_cleanup_pop(0) /* ; */])],\n+            [ax_pthread_ok=yes],\n+            [])\n+\n+        CFLAGS=\"$ax_pthread_save_CFLAGS\"\n+        LIBS=\"$ax_pthread_save_LIBS\"\n+\n+        AC_MSG_RESULT([$ax_pthread_ok])\n+        AS_IF([test \"x$ax_pthread_ok\" = \"xyes\"], [break])\n+\n+        PTHREAD_LIBS=\"\"\n+        PTHREAD_CFLAGS=\"\"\n+done\n+fi\n+\n+# Various other checks:\n+if test \"x$ax_pthread_ok\" = \"xyes\"; then\n+        ax_pthread_save_CFLAGS=\"$CFLAGS\"\n+        ax_pthread_save_LIBS=\"$LIBS\"\n+        CFLAGS=\"$CFLAGS $PTHREAD_CFLAGS\"\n+        LIBS=\"$PTHREAD_LIBS $LIBS\"\n+\n+        # Detect AIX lossage: JOINABLE attribute is called UNDETACHED.\n+        AC_CACHE_CHECK([for joinable pthread attribute],\n+            [ax_cv_PTHREAD_JOINABLE_ATTR],\n+            [ax_cv_PTHREAD_JOINABLE_ATTR=unknown\n+             for ax_pthread_attr in PTHREAD_CREATE_JOINABLE PTHREAD_CREATE_UNDETACHED; do\n+                 AC_LINK_IFELSE([AC_LANG_PROGRAM([#include <pthread.h>],\n+                                                 [int attr = $ax_pthread_attr; return attr /* ; */])],\n+                                [ax_cv_PTHREAD_JOINABLE_ATTR=$ax_pthread_attr; break],\n+                                [])\n+             done\n+            ])\n+        AS_IF([test \"x$ax_cv_PTHREAD_JOINABLE_ATTR\" != \"xunknown\" && \\\n+               test \"x$ax_cv_PTHREAD_JOINABLE_ATTR\" != \"xPTHREAD_CREATE_JOINABLE\" && \\\n+               test \"x$ax_pthread_joinable_attr_defined\" != \"xyes\"],\n+              [AC_DEFINE_UNQUOTED([PTHREAD_CREATE_JOINABLE],\n+                                  [$ax_cv_PTHREAD_JOINABLE_ATTR],\n+                                  [Define to necessary symbol if this constant\n+                                   uses a non-standard name on your system.])\n+               ax_pthread_joinable_attr_defined=yes\n+              ])\n+\n+        AC_CACHE_CHECK([whether more special flags are required for pthreads],\n+            [ax_cv_PTHREAD_SPECIAL_FLAGS],\n+            [ax_cv_PTHREAD_SPECIAL_FLAGS=no\n+             case $host_os in\n+             solaris*)\n+             ax_cv_PTHREAD_SPECIAL_FLAGS=\"-D_POSIX_PTHREAD_SEMANTICS\"\n+             ;;\n+             esac\n+            ])\n+        AS_IF([test \"x$ax_cv_PTHREAD_SPECIAL_FLAGS\" != \"xno\" && \\\n+               test \"x$ax_pthread_special_flags_added\" != \"xyes\"],\n+              [PTHREAD_CFLAGS=\"$ax_cv_PTHREAD_SPECIAL_FLAGS $PTHREAD_CFLAGS\"\n+               ax_pthread_special_flags_added=yes])\n+\n+        AC_CACHE_CHECK([for PTHREAD_PRIO_INHERIT],\n+            [ax_cv_PTHREAD_PRIO_INHERIT],\n+            [AC_LINK_IFELSE([AC_LANG_PROGRAM([[#include <pthread.h>]],\n+                                             [[int i = PTHREAD_PRIO_INHERIT;]])],\n+                            [ax_cv_PTHREAD_PRIO_INHERIT=yes],\n+                            [ax_cv_PTHREAD_PRIO_INHERIT=no])\n+            ])\n+        AS_IF([test \"x$ax_cv_PTHREAD_PRIO_INHERIT\" = \"xyes\" && \\\n+               test \"x$ax_pthread_prio_inherit_defined\" != \"xyes\"],\n+              [AC_DEFINE([HAVE_PTHREAD_PRIO_INHERIT], [1], [Have PTHREAD_PRIO_INHERIT.])\n+               ax_pthread_prio_inherit_defined=yes\n+              ])\n+\n+        CFLAGS=\"$ax_pthread_save_CFLAGS\"\n+        LIBS=\"$ax_pthread_save_LIBS\"\n+\n+        # More AIX lossage: compile with *_r variant\n+        if test \"x$GCC\" != \"xyes\"; then\n+            case $host_os in\n+                aix*)\n+                AS_CASE([\"x/$CC\"],\n+                    [x*/c89|x*/c89_128|x*/c99|x*/c99_128|x*/cc|x*/cc128|x*/xlc|x*/xlc_v6|x*/xlc128|x*/xlc128_v6],\n+                    [#handle absolute path differently from PATH based program lookup\n+                     AS_CASE([\"x$CC\"],\n+                         [x/*],\n+                         [AS_IF([AS_EXECUTABLE_P([${CC}_r])],[PTHREAD_CC=\"${CC}_r\"])],\n+                         [AC_CHECK_PROGS([PTHREAD_CC],[${CC}_r],[$CC])])])\n+                ;;\n+            esac\n+        fi\n+fi\n+\n+test -n \"$PTHREAD_CC\" || PTHREAD_CC=\"$CC\"\n+\n+AC_SUBST([PTHREAD_LIBS])\n+AC_SUBST([PTHREAD_CFLAGS])\n+AC_SUBST([PTHREAD_CC])\n+\n+# Finally, execute ACTION-IF-FOUND/ACTION-IF-NOT-FOUND:\n+if test \"x$ax_pthread_ok\" = \"xyes\"; then\n+        ifelse([$1],,[AC_DEFINE([HAVE_PTHREAD],[1],[Define if you have POSIX threads libraries and header files.])],[$1])\n+        :\n+else\n+        ax_pthread_ok=no\n+        $2\n+fi\n+AC_LANG_POP\n+])dnl AX_PTHREAD"
      },
      {
        "sha": "2aa493a6af6b48537cdc2c0601a601a9c03fef1f",
        "filename": "build-aux/m4/bitcoin_find_bdb48.m4",
        "status": "renamed",
        "additions": 10,
        "deletions": 10,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/build-aux/m4/bitcoin_find_bdb48.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/build-aux/m4/bitcoin_find_bdb48.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/bitcoin_find_bdb48.m4?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -12,39 +12,39 @@ AC_DEFUN([BITCOIN_FIND_BDB48],[\n   done\n   for searchpath in $bdbdirlist ''; do\n     test -n \"${searchpath}\" && searchpath=\"${searchpath}/\"\n-    AC_TRY_COMPILE([\n+    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n       #include <${searchpath}db_cxx.h>\n-    ],[\n+    ]],[[\n       #if !((DB_VERSION_MAJOR == 4 && DB_VERSION_MINOR >= 8) || DB_VERSION_MAJOR > 4)\n         #error \"failed to find bdb 4.8+\"\n       #endif\n-    ],[\n+    ]])],[\n       if test \"x$bdbpath\" = \"xX\"; then\n         bdbpath=\"${searchpath}\"\n       fi\n     ],[\n       continue\n     ])\n-    AC_TRY_COMPILE([\n+    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n       #include <${searchpath}db_cxx.h>\n-    ],[\n+    ]],[[\n       #if !(DB_VERSION_MAJOR == 4 && DB_VERSION_MINOR == 8)\n         #error \"failed to find bdb 4.8\"\n       #endif\n-    ],[\n+    ]])],[\n       bdb48path=\"${searchpath}\"\n       break\n-    ])\n+    ],[])\n   done\n   if test \"x$bdbpath\" = \"xX\"; then\n     AC_MSG_RESULT([no])\n-    AC_MSG_ERROR(libdb_cxx headers missing)\n+    AC_MSG_ERROR([libdb_cxx headers missing, ]AC_PACKAGE_NAME[ requires this library for wallet functionality (--disable-wallet to disable wallet functionality)])\n   elif test \"x$bdb48path\" = \"xX\"; then\n     BITCOIN_SUBDIR_TO_INCLUDE(BDB_CPPFLAGS,[${bdbpath}],db_cxx)\n     AC_ARG_WITH([incompatible-bdb],[AS_HELP_STRING([--with-incompatible-bdb], [allow using a bdb version other than 4.8])],[\n       AC_MSG_WARN([Found Berkeley DB other than 4.8; wallets opened by this build will not be portable!])\n     ],[\n-      AC_MSG_ERROR([Found Berkeley DB other than 4.8, required for portable wallets (--with-incompatible-bdb to ignore)])\n+      AC_MSG_ERROR([Found Berkeley DB other than 4.8, required for portable wallets (--with-incompatible-bdb to ignore or --disable-wallet to disable wallet functionality)])\n     ])\n   else\n     BITCOIN_SUBDIR_TO_INCLUDE(BDB_CPPFLAGS,[${bdb48path}],db_cxx)\n@@ -60,7 +60,7 @@ AC_DEFUN([BITCOIN_FIND_BDB48],[\n     ])\n   done\n   if test \"x$BDB_LIBS\" = \"x\"; then\n-      AC_MSG_ERROR(libdb_cxx missing)\n+      AC_MSG_ERROR([libdb_cxx missing, ]AC_PACKAGE_NAME[ requires this library for wallet functionality (--disable-wallet to disable wallet functionality)])\n   fi\n   AC_SUBST(BDB_LIBS)\n ])",
        "previous_filename": "src/m4/bitcoin_find_bdb48.m4"
      },
      {
        "sha": "74d910267462e4f10a01e12b82f006a796fb7d13",
        "filename": "build-aux/m4/bitcoin_qt.m4",
        "status": "added",
        "additions": 495,
        "deletions": 0,
        "changes": 495,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/build-aux/m4/bitcoin_qt.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/build-aux/m4/bitcoin_qt.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/bitcoin_qt.m4?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,495 @@\n+dnl Helper for cases where a qt dependency is not met.\n+dnl Output: If qt version is auto, set bitcoin_enable_qt to false. Else, exit.\n+AC_DEFUN([BITCOIN_QT_FAIL],[\n+  if test \"x$bitcoin_qt_want_version\" = \"xauto\" && test x$bitcoin_qt_force != xyes; then\n+    if test x$bitcoin_enable_qt != xno; then\n+      AC_MSG_WARN([$1; bitcoin-qt frontend will not be built])\n+    fi\n+    bitcoin_enable_qt=no\n+    bitcoin_enable_qt_test=no\n+  else\n+    AC_MSG_ERROR([$1])\n+  fi\n+])\n+\n+AC_DEFUN([BITCOIN_QT_CHECK],[\n+  if test \"x$bitcoin_enable_qt\" != \"xno\" && test x$bitcoin_qt_want_version != xno; then\n+    true\n+    $1\n+  else\n+    true\n+    $2\n+  fi\n+])\n+\n+dnl BITCOIN_QT_PATH_PROGS([FOO], [foo foo2], [/path/to/search/first], [continue if missing])\n+dnl Helper for finding the path of programs needed for Qt.\n+dnl Inputs: $1: Variable to be set\n+dnl Inputs: $2: List of programs to search for\n+dnl Inputs: $3: Look for $2 here before $PATH\n+dnl Inputs: $4: If \"yes\", don't fail if $2 is not found.\n+dnl Output: $1 is set to the path of $2 if found. $2 are searched in order.\n+AC_DEFUN([BITCOIN_QT_PATH_PROGS],[\n+  BITCOIN_QT_CHECK([\n+    if test \"x$3\" != \"x\"; then\n+      AC_PATH_PROGS($1,$2,,$3)\n+    else\n+      AC_PATH_PROGS($1,$2)\n+    fi\n+    if test \"x$$1\" = \"x\" && test \"x$4\" != \"xyes\"; then\n+      BITCOIN_QT_FAIL([$1 not found])\n+    fi\n+  ])\n+])\n+\n+dnl Initialize qt input.\n+dnl This must be called before any other BITCOIN_QT* macros to ensure that\n+dnl input variables are set correctly.\n+dnl CAUTION: Do not use this inside of a conditional.\n+AC_DEFUN([BITCOIN_QT_INIT],[\n+  dnl enable qt support\n+  AC_ARG_WITH([gui],\n+    [AS_HELP_STRING([--with-gui@<:@=no|qt4|qt5|auto@:>@],\n+    [build bitcoin-qt GUI (default=auto, qt5 tried first)])],\n+    [\n+     bitcoin_qt_want_version=$withval\n+     if test x$bitcoin_qt_want_version = xyes; then\n+       bitcoin_qt_force=yes\n+       bitcoin_qt_want_version=auto\n+     fi\n+    ],\n+    [bitcoin_qt_want_version=auto])\n+\n+  AC_ARG_WITH([qt-incdir],[AS_HELP_STRING([--with-qt-incdir=INC_DIR],[specify qt include path (overridden by pkgconfig)])], [qt_include_path=$withval], [])\n+  AC_ARG_WITH([qt-libdir],[AS_HELP_STRING([--with-qt-libdir=LIB_DIR],[specify qt lib path (overridden by pkgconfig)])], [qt_lib_path=$withval], [])\n+  AC_ARG_WITH([qt-plugindir],[AS_HELP_STRING([--with-qt-plugindir=PLUGIN_DIR],[specify qt plugin path (overridden by pkgconfig)])], [qt_plugin_path=$withval], [])\n+  AC_ARG_WITH([qt-translationdir],[AS_HELP_STRING([--with-qt-translationdir=PLUGIN_DIR],[specify qt translation path (overridden by pkgconfig)])], [qt_translation_path=$withval], [])\n+  AC_ARG_WITH([qt-bindir],[AS_HELP_STRING([--with-qt-bindir=BIN_DIR],[specify qt bin path])], [qt_bin_path=$withval], [])\n+\n+  AC_ARG_WITH([qtdbus],\n+    [AS_HELP_STRING([--with-qtdbus],\n+    [enable DBus support (default is yes if qt is enabled and QtDBus is found)])],\n+    [use_dbus=$withval],\n+    [use_dbus=auto])\n+\n+  AC_SUBST(QT_TRANSLATION_DIR,$qt_translation_path)\n+])\n+\n+dnl Find the appropriate version of Qt libraries and includes.\n+dnl Inputs: $1: Whether or not pkg-config should be used. yes|no. Default: yes.\n+dnl Inputs: $2: If $1 is \"yes\" and --with-gui=auto, which qt version should be\n+dnl         tried first.\n+dnl Outputs: See _BITCOIN_QT_FIND_LIBS_*\n+dnl Outputs: Sets variables for all qt-related tools.\n+dnl Outputs: bitcoin_enable_qt, bitcoin_enable_qt_dbus, bitcoin_enable_qt_test\n+AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n+  use_pkgconfig=$1\n+\n+  if test x$use_pkgconfig = x; then\n+    use_pkgconfig=yes\n+  fi\n+\n+  if test x$use_pkgconfig = xyes; then\n+    BITCOIN_QT_CHECK([_BITCOIN_QT_FIND_LIBS_WITH_PKGCONFIG([$2])])\n+  else\n+    BITCOIN_QT_CHECK([_BITCOIN_QT_FIND_LIBS_WITHOUT_PKGCONFIG])\n+  fi\n+\n+  dnl This is ugly and complicated. Yuck. Works as follows:\n+  dnl We can't discern whether Qt4 builds are static or not. For Qt5, we can\n+  dnl check a header to find out. When Qt is built statically, some plugins must\n+  dnl be linked into the final binary as well. These plugins have changed between\n+  dnl Qt4 and Qt5. With Qt5, languages moved into core and the WindowsIntegration\n+  dnl plugin was added. Since we can't tell if Qt4 is static or not, it is\n+  dnl assumed for windows builds.\n+  dnl _BITCOIN_QT_CHECK_STATIC_PLUGINS does a quick link-check and appends the\n+  dnl results to QT_LIBS.\n+  BITCOIN_QT_CHECK([\n+  TEMP_CPPFLAGS=$CPPFLAGS\n+  TEMP_CXXFLAGS=$CXXFLAGS\n+  CPPFLAGS=\"$QT_INCLUDES $CPPFLAGS\"\n+  CXXFLAGS=\"$PIC_FLAGS $CXXFLAGS\"\n+  if test x$bitcoin_qt_got_major_vers = x5; then\n+    _BITCOIN_QT_IS_STATIC\n+    if test x$bitcoin_cv_static_qt = xyes; then\n+      _BITCOIN_QT_FIND_STATIC_PLUGINS\n+      AC_DEFINE(QT_STATICPLUGIN, 1, [Define this symbol if qt plugins are static])\n+      AC_CACHE_CHECK(for Qt < 5.4, bitcoin_cv_need_acc_widget,[AC_COMPILE_IFELSE([AC_LANG_PROGRAM(\n+          [[#include <QtCore>]],[[\n+          #if QT_VERSION >= 0x050400\n+          choke;\n+          #endif\n+          ]])],\n+        [bitcoin_cv_need_acc_widget=yes],\n+        [bitcoin_cv_need_acc_widget=no])\n+      ])\n+      if test \"x$bitcoin_cv_need_acc_widget\" = \"xyes\"; then\n+        _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(AccessibleFactory)], [-lqtaccessiblewidgets])\n+      fi\n+      if test x$TARGET_OS = xwindows; then\n+        _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QWindowsIntegrationPlugin)],[-lqwindows])\n+        AC_DEFINE(QT_QPA_PLATFORM_WINDOWS, 1, [Define this symbol if the qt platform is windows])\n+      elif test x$TARGET_OS = xlinux; then\n+        _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QXcbIntegrationPlugin)],[-lqxcb -lxcb-static])\n+        AC_DEFINE(QT_QPA_PLATFORM_XCB, 1, [Define this symbol if the qt platform is xcb])\n+      elif test x$TARGET_OS = xdarwin; then\n+        AX_CHECK_LINK_FLAG([[-framework IOKit]],[QT_LIBS=\"$QT_LIBS -framework IOKit\"],[AC_MSG_ERROR(could not iokit framework)])\n+        _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QCocoaIntegrationPlugin)],[-lqcocoa])\n+        AC_DEFINE(QT_QPA_PLATFORM_COCOA, 1, [Define this symbol if the qt platform is cocoa])\n+      fi\n+    fi\n+  else\n+    if test x$TARGET_OS = xwindows; then\n+      AC_DEFINE(QT_STATICPLUGIN, 1, [Define this symbol if qt plugins are static])\n+      _BITCOIN_QT_CHECK_STATIC_PLUGINS([\n+         Q_IMPORT_PLUGIN(qcncodecs)\n+         Q_IMPORT_PLUGIN(qjpcodecs)\n+         Q_IMPORT_PLUGIN(qtwcodecs)\n+         Q_IMPORT_PLUGIN(qkrcodecs)\n+         Q_IMPORT_PLUGIN(AccessibleFactory)],\n+         [-lqcncodecs -lqjpcodecs -lqtwcodecs -lqkrcodecs -lqtaccessiblewidgets])\n+    fi\n+  fi\n+  CPPFLAGS=$TEMP_CPPFLAGS\n+  CXXFLAGS=$TEMP_CXXFLAGS\n+  ])\n+\n+  if test x$use_pkgconfig$qt_bin_path = xyes; then\n+    if test x$bitcoin_qt_got_major_vers = x5; then\n+      qt_bin_path=\"`$PKG_CONFIG --variable=host_bins Qt5Core 2>/dev/null`\"\n+    fi\n+  fi\n+\n+  if test x$use_hardening != xno; then\n+    BITCOIN_QT_CHECK([\n+    AC_MSG_CHECKING(whether -fPIE can be used with this Qt config)\n+    TEMP_CPPFLAGS=$CPPFLAGS\n+    TEMP_CXXFLAGS=$CXXFLAGS\n+    CPPFLAGS=\"$QT_INCLUDES $CPPFLAGS\"\n+    CXXFLAGS=\"$PIE_FLAGS $CXXFLAGS\"\n+    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <QtCore/qconfig.h>]],\n+      [[\n+          #if defined(QT_REDUCE_RELOCATIONS)\n+              choke;\n+          #endif\n+      ]])],\n+      [ AC_MSG_RESULT(yes); QT_PIE_FLAGS=$PIE_FLAGS ],\n+      [ AC_MSG_RESULT(no); QT_PIE_FLAGS=$PIC_FLAGS]\n+    )\n+    CPPFLAGS=$TEMP_CPPFLAGS\n+    CXXFLAGS=$TEMP_CXXFLAGS\n+    ])\n+  else\n+    BITCOIN_QT_CHECK([\n+    AC_MSG_CHECKING(whether -fPIC is needed with this Qt config)\n+    TEMP_CPPFLAGS=$CPPFLAGS\n+    CPPFLAGS=\"$QT_INCLUDES $CPPFLAGS\"\n+    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <QtCore/qconfig.h>]],\n+      [[\n+          #if defined(QT_REDUCE_RELOCATIONS)\n+              choke;\n+          #endif\n+      ]])],\n+      [ AC_MSG_RESULT(no)],\n+      [ AC_MSG_RESULT(yes); QT_PIE_FLAGS=$PIC_FLAGS]\n+    )\n+    CPPFLAGS=$TEMP_CPPFLAGS\n+    ])\n+  fi\n+\n+  BITCOIN_QT_PATH_PROGS([MOC], [moc-qt${bitcoin_qt_got_major_vers} moc${bitcoin_qt_got_major_vers} moc], $qt_bin_path)\n+  BITCOIN_QT_PATH_PROGS([UIC], [uic-qt${bitcoin_qt_got_major_vers} uic${bitcoin_qt_got_major_vers} uic], $qt_bin_path)\n+  BITCOIN_QT_PATH_PROGS([RCC], [rcc-qt${bitcoin_qt_got_major_vers} rcc${bitcoin_qt_got_major_vers} rcc], $qt_bin_path)\n+  BITCOIN_QT_PATH_PROGS([LRELEASE], [lrelease-qt${bitcoin_qt_got_major_vers} lrelease${bitcoin_qt_got_major_vers} lrelease], $qt_bin_path)\n+  BITCOIN_QT_PATH_PROGS([LUPDATE], [lupdate-qt${bitcoin_qt_got_major_vers} lupdate${bitcoin_qt_got_major_vers} lupdate],$qt_bin_path, yes)\n+\n+  MOC_DEFS='-DHAVE_CONFIG_H -I$(srcdir)'\n+  case $host in\n+    *darwin*)\n+     BITCOIN_QT_CHECK([\n+       MOC_DEFS=\"${MOC_DEFS} -DQ_OS_MAC\"\n+       base_frameworks=\"-framework Foundation -framework ApplicationServices -framework AppKit\"\n+       AX_CHECK_LINK_FLAG([[$base_frameworks]],[QT_LIBS=\"$QT_LIBS $base_frameworks\"],[AC_MSG_ERROR(could not find base frameworks)])\n+     ])\n+    ;;\n+    *mingw*)\n+       BITCOIN_QT_CHECK([\n+         AX_CHECK_LINK_FLAG([[-mwindows]],[QT_LDFLAGS=\"$QT_LDFLAGS -mwindows\"],[AC_MSG_WARN(-mwindows linker support not detected)])\n+       ])\n+  esac\n+\n+\n+  dnl enable qt support\n+  AC_MSG_CHECKING(whether to build ]AC_PACKAGE_NAME[ GUI)\n+  BITCOIN_QT_CHECK([\n+    bitcoin_enable_qt=yes\n+    bitcoin_enable_qt_test=yes\n+    if test x$have_qt_test = xno; then\n+      bitcoin_enable_qt_test=no\n+    fi\n+    bitcoin_enable_qt_dbus=no\n+    if test x$use_dbus != xno && test x$have_qt_dbus = xyes; then\n+      bitcoin_enable_qt_dbus=yes\n+    fi\n+    if test x$use_dbus = xyes && test x$have_qt_dbus = xno; then\n+      AC_MSG_ERROR(\"libQtDBus not found. Install libQtDBus or remove --with-qtdbus.\")\n+    fi\n+    if test x$LUPDATE = x; then\n+      AC_MSG_WARN(\"lupdate is required to update qt translations\")\n+    fi\n+  ],[\n+    bitcoin_enable_qt=no\n+  ])\n+  AC_MSG_RESULT([$bitcoin_enable_qt (Qt${bitcoin_qt_got_major_vers})])\n+\n+  AC_SUBST(QT_PIE_FLAGS)\n+  AC_SUBST(QT_INCLUDES)\n+  AC_SUBST(QT_LIBS)\n+  AC_SUBST(QT_LDFLAGS)\n+  AC_SUBST(QT_DBUS_INCLUDES)\n+  AC_SUBST(QT_DBUS_LIBS)\n+  AC_SUBST(QT_TEST_INCLUDES)\n+  AC_SUBST(QT_TEST_LIBS)\n+  AC_SUBST(QT_SELECT, qt${bitcoin_qt_got_major_vers})\n+  AC_SUBST(MOC_DEFS)\n+])\n+\n+dnl All macros below are internal and should _not_ be used from the main\n+dnl configure.ac.\n+dnl ----\n+\n+dnl Internal. Check if the included version of Qt is Qt5.\n+dnl Requires: INCLUDES must be populated as necessary.\n+dnl Output: bitcoin_cv_qt5=yes|no\n+AC_DEFUN([_BITCOIN_QT_CHECK_QT5],[\n+  AC_CACHE_CHECK(for Qt 5, bitcoin_cv_qt5,[\n+  AC_COMPILE_IFELSE([AC_LANG_PROGRAM(\n+    [[#include <QtCore>]],\n+    [[\n+      #if QT_VERSION < 0x050000\n+      choke me\n+      #else\n+      return 0;\n+      #endif\n+    ]])],\n+    [bitcoin_cv_qt5=yes],\n+    [bitcoin_cv_qt5=no])\n+])])\n+\n+dnl Internal. Check if the linked version of Qt was built as static libs.\n+dnl Requires: Qt5. This check cannot determine if Qt4 is static.\n+dnl Requires: INCLUDES and LIBS must be populated as necessary.\n+dnl Output: bitcoin_cv_static_qt=yes|no\n+dnl Output: Defines QT_STATICPLUGIN if plugins are static.\n+AC_DEFUN([_BITCOIN_QT_IS_STATIC],[\n+  AC_CACHE_CHECK(for static Qt, bitcoin_cv_static_qt,[\n+  AC_COMPILE_IFELSE([AC_LANG_PROGRAM(\n+    [[#include <QtCore>]],\n+    [[\n+      #if defined(QT_STATIC)\n+      return 0;\n+      #else\n+      choke me\n+      #endif\n+    ]])],\n+    [bitcoin_cv_static_qt=yes],\n+    [bitcoin_cv_static_qt=no])\n+  ])\n+  if test xbitcoin_cv_static_qt = xyes; then\n+    AC_DEFINE(QT_STATICPLUGIN, 1, [Define this symbol for static Qt plugins])\n+  fi\n+])\n+\n+dnl Internal. Check if the link-requirements for static plugins are met.\n+dnl Requires: INCLUDES and LIBS must be populated as necessary.\n+dnl Inputs: $1: A series of Q_IMPORT_PLUGIN().\n+dnl Inputs: $2: The libraries that resolve $1.\n+dnl Output: QT_LIBS is prepended or configure exits.\n+AC_DEFUN([_BITCOIN_QT_CHECK_STATIC_PLUGINS],[\n+  AC_MSG_CHECKING(for static Qt plugins: $2)\n+  CHECK_STATIC_PLUGINS_TEMP_LIBS=\"$LIBS\"\n+  LIBS=\"$2 $QT_LIBS $LIBS\"\n+  AC_LINK_IFELSE([AC_LANG_PROGRAM([[\n+    #define QT_STATICPLUGIN\n+    #include <QtPlugin>\n+    $1]],\n+    [[return 0;]])],\n+    [AC_MSG_RESULT(yes); QT_LIBS=\"$2 $QT_LIBS\"],\n+    [AC_MSG_RESULT(no); BITCOIN_QT_FAIL(Could not resolve: $2)])\n+  LIBS=\"$CHECK_STATIC_PLUGINS_TEMP_LIBS\"\n+])\n+\n+dnl Internal. Find paths necessary for linking qt static plugins\n+dnl Inputs: bitcoin_qt_got_major_vers. 4 or 5.\n+dnl Inputs: qt_plugin_path. optional.\n+dnl Outputs: QT_LIBS is appended\n+AC_DEFUN([_BITCOIN_QT_FIND_STATIC_PLUGINS],[\n+  if test x$bitcoin_qt_got_major_vers = x5; then\n+      if test x$qt_plugin_path != x; then\n+        QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/platforms\"\n+        if test -d \"$qt_plugin_path/accessible\"; then\n+          QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/accessible\"\n+        fi\n+      fi\n+     m4_ifdef([PKG_CHECK_MODULES],[\n+     if test x$use_pkgconfig = xyes; then\n+       PKG_CHECK_MODULES([QTPLATFORM], [Qt5PlatformSupport], [QT_LIBS=\"$QTPLATFORM_LIBS $QT_LIBS\"])\n+       if test x$TARGET_OS = xlinux; then\n+         PKG_CHECK_MODULES([X11XCB], [x11-xcb], [QT_LIBS=\"$X11XCB_LIBS $QT_LIBS\"])\n+         if ${PKG_CONFIG} --exists \"Qt5Core >= 5.5\" 2>/dev/null; then\n+           PKG_CHECK_MODULES([QTXCBQPA], [Qt5XcbQpa], [QT_LIBS=\"$QTXCBQPA_LIBS $QT_LIBS\"])\n+         fi\n+       elif test x$TARGET_OS = xdarwin; then\n+         PKG_CHECK_MODULES([QTPRINT], [Qt5PrintSupport], [QT_LIBS=\"$QTPRINT_LIBS $QT_LIBS\"])\n+       fi\n+     else\n+       if ${PKG_CONFIG} --exists \"Qt5Core >= 5.6\" 2>/dev/null; then\n+         QT_LIBS=\"-lQt5PlatformSupport $QT_LIBS\"\n+       fi\n+     fi\n+     ])\n+  else\n+    if test x$qt_plugin_path != x; then\n+      QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/accessible\"\n+      QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/codecs\"\n+    fi\n+  fi\n+])\n+\n+dnl Internal. Find Qt libraries using pkg-config.\n+dnl Inputs: bitcoin_qt_want_version (from --with-gui=). The version to check\n+dnl         first.\n+dnl Inputs: $1: If bitcoin_qt_want_version is \"auto\", check for this version\n+dnl         first.\n+dnl Outputs: All necessary QT_* variables are set.\n+dnl Outputs: bitcoin_qt_got_major_vers is set to \"4\" or \"5\".\n+dnl Outputs: have_qt_test and have_qt_dbus are set (if applicable) to yes|no.\n+AC_DEFUN([_BITCOIN_QT_FIND_LIBS_WITH_PKGCONFIG],[\n+  m4_ifdef([PKG_CHECK_MODULES],[\n+  auto_priority_version=$1\n+  if test x$auto_priority_version = x; then\n+    auto_priority_version=qt5\n+  fi\n+    if test x$bitcoin_qt_want_version = xqt5 ||  ( test x$bitcoin_qt_want_version = xauto && test x$auto_priority_version = xqt5 ); then\n+      QT_LIB_PREFIX=Qt5\n+      bitcoin_qt_got_major_vers=5\n+    else\n+      QT_LIB_PREFIX=Qt\n+      bitcoin_qt_got_major_vers=4\n+    fi\n+    qt5_modules=\"Qt5Core Qt5Gui Qt5Network Qt5Widgets\"\n+    qt4_modules=\"QtCore QtGui QtNetwork\"\n+    BITCOIN_QT_CHECK([\n+      if test x$bitcoin_qt_want_version = xqt5 || ( test x$bitcoin_qt_want_version = xauto && test x$auto_priority_version = xqt5 ); then\n+        PKG_CHECK_MODULES([QT], [$qt5_modules], [QT_INCLUDES=\"$QT_CFLAGS\"; have_qt=yes],[have_qt=no])\n+      elif test x$bitcoin_qt_want_version = xqt4 || ( test x$bitcoin_qt_want_version = xauto && test x$auto_priority_version = xqt4 ); then\n+        PKG_CHECK_MODULES([QT], [$qt4_modules], [QT_INCLUDES=\"$QT_CFLAGS\"; have_qt=yes], [have_qt=no])\n+      fi\n+\n+      dnl qt version is set to 'auto' and the preferred version wasn't found. Now try the other.\n+      if test x$have_qt = xno && test x$bitcoin_qt_want_version = xauto; then\n+        if test x$auto_priority_version = xqt5; then\n+          PKG_CHECK_MODULES([QT], [$qt4_modules], [QT_INCLUDES=\"$QT_CFLAGS\"; have_qt=yes; QT_LIB_PREFIX=Qt; bitcoin_qt_got_major_vers=4], [have_qt=no])\n+        else\n+          PKG_CHECK_MODULES([QT], [$qt5_modules], [QT_INCLUDES=\"$QT_CFLAGS\"; have_qt=yes; QT_LIB_PREFIX=Qt5; bitcoin_qt_got_major_vers=5], [have_qt=no])\n+        fi\n+      fi\n+      if test x$have_qt != xyes; then\n+        have_qt=no\n+        BITCOIN_QT_FAIL([Qt dependencies not found])\n+      fi\n+    ])\n+    BITCOIN_QT_CHECK([\n+      PKG_CHECK_MODULES([QT_TEST], [${QT_LIB_PREFIX}Test], [QT_TEST_INCLUDES=\"$QT_TEST_CFLAGS\"; have_qt_test=yes], [have_qt_test=no])\n+      if test x$use_dbus != xno; then\n+        PKG_CHECK_MODULES([QT_DBUS], [${QT_LIB_PREFIX}DBus], [QT_DBUS_INCLUDES=\"$QT_DBUS_CFLAGS\"; have_qt_dbus=yes], [have_qt_dbus=no])\n+      fi\n+    ])\n+  ])\n+  true; dnl\n+])\n+\n+dnl Internal. Find Qt libraries without using pkg-config. Version is deduced\n+dnl from the discovered headers.\n+dnl Inputs: bitcoin_qt_want_version (from --with-gui=). The version to use.\n+dnl         If \"auto\", the version will be discovered by _BITCOIN_QT_CHECK_QT5.\n+dnl Outputs: All necessary QT_* variables are set.\n+dnl Outputs: bitcoin_qt_got_major_vers is set to \"4\" or \"5\".\n+dnl Outputs: have_qt_test and have_qt_dbus are set (if applicable) to yes|no.\n+AC_DEFUN([_BITCOIN_QT_FIND_LIBS_WITHOUT_PKGCONFIG],[\n+  TEMP_CPPFLAGS=\"$CPPFLAGS\"\n+  TEMP_CXXFLAGS=\"$CXXFLAGS\"\n+  CXXFLAGS=\"$PIC_FLAGS $CXXFLAGS\"\n+  TEMP_LIBS=\"$LIBS\"\n+  BITCOIN_QT_CHECK([\n+    if test x$qt_include_path != x; then\n+      QT_INCLUDES=\"-I$qt_include_path -I$qt_include_path/QtCore -I$qt_include_path/QtGui -I$qt_include_path/QtWidgets -I$qt_include_path/QtNetwork -I$qt_include_path/QtTest -I$qt_include_path/QtDBus\"\n+      CPPFLAGS=\"$QT_INCLUDES $CPPFLAGS\"\n+    fi\n+  ])\n+\n+  BITCOIN_QT_CHECK([AC_CHECK_HEADER([QtPlugin],,BITCOIN_QT_FAIL(QtCore headers missing))])\n+  BITCOIN_QT_CHECK([AC_CHECK_HEADER([QApplication],, BITCOIN_QT_FAIL(QtGui headers missing))])\n+  BITCOIN_QT_CHECK([AC_CHECK_HEADER([QLocalSocket],, BITCOIN_QT_FAIL(QtNetwork headers missing))])\n+\n+  BITCOIN_QT_CHECK([\n+    if test x$bitcoin_qt_want_version = xauto; then\n+      _BITCOIN_QT_CHECK_QT5\n+    fi\n+    if test x$bitcoin_cv_qt5 = xyes || test x$bitcoin_qt_want_version = xqt5; then\n+      QT_LIB_PREFIX=Qt5\n+      bitcoin_qt_got_major_vers=5\n+    else\n+      QT_LIB_PREFIX=Qt\n+      bitcoin_qt_got_major_vers=4\n+    fi\n+  ])\n+\n+  BITCOIN_QT_CHECK([\n+    LIBS=\n+    if test x$qt_lib_path != x; then\n+      LIBS=\"$LIBS -L$qt_lib_path\"\n+    fi\n+\n+    if test x$TARGET_OS = xwindows; then\n+      AC_CHECK_LIB([imm32],      [main],, BITCOIN_QT_FAIL(libimm32 not found))\n+    fi\n+  ])\n+\n+  BITCOIN_QT_CHECK(AC_CHECK_LIB([z] ,[main],,AC_MSG_WARN([zlib not found. Assuming qt has it built-in])))\n+  BITCOIN_QT_CHECK(AC_CHECK_LIB([png] ,[main],,AC_MSG_WARN([libpng not found. Assuming qt has it built-in])))\n+  BITCOIN_QT_CHECK(AC_CHECK_LIB([jpeg] ,[main],,AC_MSG_WARN([libjpeg not found. Assuming qt has it built-in])))\n+  BITCOIN_QT_CHECK(AC_SEARCH_LIBS([pcre16_exec], [qtpcre pcre16],,AC_MSG_WARN([libpcre16 not found. Assuming qt has it built-in])))\n+  BITCOIN_QT_CHECK(AC_SEARCH_LIBS([hb_ot_tags_from_script] ,[qtharfbuzzng harfbuzz],,AC_MSG_WARN([libharfbuzz not found. Assuming qt has it built-in or support is disabled])))\n+  BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Core]   ,[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXCore not found)))\n+  BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Gui]    ,[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXGui not found)))\n+  BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Network],[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXNetwork not found)))\n+  if test x$bitcoin_qt_got_major_vers = x5; then\n+    BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Widgets],[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXWidgets not found)))\n+  fi\n+  QT_LIBS=\"$LIBS\"\n+  LIBS=\"$TEMP_LIBS\"\n+\n+  BITCOIN_QT_CHECK([\n+    LIBS=\n+    if test x$qt_lib_path != x; then\n+      LIBS=\"-L$qt_lib_path\"\n+    fi\n+    AC_CHECK_LIB([${QT_LIB_PREFIX}Test],      [main],, have_qt_test=no)\n+    AC_CHECK_HEADER([QTest],, have_qt_test=no)\n+    QT_TEST_LIBS=\"$LIBS\"\n+    if test x$use_dbus != xno; then\n+      LIBS=\n+      if test x$qt_lib_path != x; then\n+        LIBS=\"-L$qt_lib_path\"\n+      fi\n+      AC_CHECK_LIB([${QT_LIB_PREFIX}DBus],      [main],, have_qt_dbus=no)\n+      AC_CHECK_HEADER([QtDBus],, have_qt_dbus=no)\n+      QT_DBUS_LIBS=\"$LIBS\"\n+    fi\n+  ])\n+  CPPFLAGS=\"$TEMP_CPPFLAGS\"\n+  CXXFLAGS=\"$TEMP_CXXFLAGS\"\n+  LIBS=\"$TEMP_LIBS\"\n+])\n+"
      },
      {
        "sha": "66f106c7d47b9121576197c56f6a330e3972d188",
        "filename": "build-aux/m4/bitcoin_subdir_to_include.m4",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/build-aux/m4/bitcoin_subdir_to_include.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/build-aux/m4/bitcoin_subdir_to_include.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/bitcoin_subdir_to_include.m4?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "previous_filename": "src/m4/bitcoin_subdir_to_include.m4"
      },
      {
        "sha": "97af58bd7cd851eaa597361ac44b0f014a9ea8ed",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 730,
        "deletions": 361,
        "changes": 1091,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -1,33 +1,34 @@\n dnl require autoconf 2.60 (AS_ECHO/AS_ECHO_N)\n AC_PREREQ([2.60])\n define(_CLIENT_VERSION_MAJOR, 0)\n-define(_CLIENT_VERSION_MINOR, 8)\n+define(_CLIENT_VERSION_MINOR, 12)\n define(_CLIENT_VERSION_REVISION, 99)\n define(_CLIENT_VERSION_BUILD, 0)\n define(_CLIENT_VERSION_IS_RELEASE, false)\n-define(_COPYRIGHT_YEAR, 2013)\n-AC_INIT([Bitcoin],[_CLIENT_VERSION_MAJOR._CLIENT_VERSION_MINOR._CLIENT_VERSION_REVISION],[info@bitcoin.org],[bitcoin])\n-AC_CONFIG_AUX_DIR([src/build-aux])\n-AC_CONFIG_MACRO_DIR([src/m4])\n+define(_COPYRIGHT_YEAR, 2016)\n+define(_COPYRIGHT_HOLDERS,[The %s developers])\n+define(_COPYRIGHT_HOLDERS_SUBSTITUTION,[[Bitcoin Core]])\n+AC_INIT([Bitcoin Core],[_CLIENT_VERSION_MAJOR._CLIENT_VERSION_MINOR._CLIENT_VERSION_REVISION],[https://github.com/bitcoin/bitcoin/issues],[bitcoin],[https://bitcoincore.org/])\n+AC_CONFIG_SRCDIR([src/main.cpp])\n+AC_CONFIG_HEADERS([src/config/bitcoin-config.h])\n+AC_CONFIG_AUX_DIR([build-aux])\n+AC_CONFIG_MACRO_DIR([build-aux/m4])\n+\n+BITCOIN_DAEMON_NAME=bitcoind\n+BITCOIN_GUI_NAME=bitcoin-qt\n+BITCOIN_CLI_NAME=bitcoin-cli\n+BITCOIN_TX_NAME=bitcoin-tx\n+\n AC_CANONICAL_HOST\n+\n AH_TOP([#ifndef BITCOIN_CONFIG_H])\n AH_TOP([#define BITCOIN_CONFIG_H])\n AH_BOTTOM([#endif //BITCOIN_CONFIG_H])\n \n-# This m4 will only be used if a system copy cannot be found. This is helpful\n-# on systems where autotools are installed but the pkg-config macros are not in\n-# a default location. It is currently used for building on OSX where autotools\n-# are preinstalled but pkg-config comes from macports or homebrew. It should\n-# probably be removed when building on <= 10.6 is no longer supported.\n-m4_include([pkg.m4])\n-\n dnl faketime breaks configure and is only needed for make. Disable it here.\n unset FAKETIME\n \n-dnl ==============================================================\n-dnl Setup for automake\n-dnl ==============================================================\n-\n+dnl Automake init set-up and checks\n AM_INIT_AUTOMAKE([no-define subdir-objects foreign])\n \n dnl faketime messes with timestamps and causes configure to be re-run.\n@@ -37,6 +38,57 @@ AM_MAINTAINER_MODE([enable])\n dnl make the compilation flags quiet unless V=1 is used\n m4_ifdef([AM_SILENT_RULES], [AM_SILENT_RULES([yes])])\n \n+dnl Compiler checks (here before libtool).\n+if test \"x${CXXFLAGS+set}\" = \"xset\"; then\n+  CXXFLAGS_overridden=yes\n+else\n+  CXXFLAGS_overridden=no\n+fi\n+AC_PROG_CXX\n+m4_ifdef([AC_PROG_OBJCXX],[AC_PROG_OBJCXX])\n+\n+dnl By default, libtool for mingw refuses to link static libs into a dll for\n+dnl fear of mixing pic/non-pic objects, and import/export complications. Since\n+dnl we have those under control, re-enable that functionality.\n+case $host in\n+  *mingw*)\n+     lt_cv_deplibs_check_method=\"pass_all\"\n+  ;;\n+esac\n+dnl Require C++11 compiler (no GNU extensions)\n+AX_CXX_COMPILE_STDCXX([11], [noext], [mandatory])\n+dnl Libtool init checks.\n+LT_INIT([pic-only])\n+\n+dnl Check/return PATH for base programs.\n+AC_PATH_TOOL(AR, ar)\n+AC_PATH_TOOL(RANLIB, ranlib)\n+AC_PATH_TOOL(STRIP, strip)\n+AC_PATH_TOOL(GCOV, gcov)\n+AC_PATH_PROG(LCOV, lcov)\n+AC_PATH_PROG(JAVA, java)\n+AC_PATH_PROGS([PYTHON], [python3 python2.7 python2 python])\n+AC_PATH_PROG(GENHTML, genhtml)\n+AC_PATH_PROG([GIT], [git])\n+AC_PATH_PROG(CCACHE,ccache)\n+AC_PATH_PROG(XGETTEXT,xgettext)\n+AC_PATH_PROG(HEXDUMP,hexdump)\n+AC_PATH_TOOL(READELF, readelf)\n+AC_PATH_TOOL(CPPFILT, c++filt)\n+AC_PATH_TOOL(OBJCOPY, objcopy)\n+\n+AC_ARG_VAR(PYTHONPATH, Augments the default search path for python module files)\n+\n+dnl pkg-config check.\n+PKG_PROG_PKG_CONFIG\n+\n+# Enable wallet\n+AC_ARG_ENABLE([wallet],\n+  [AS_HELP_STRING([--disable-wallet],\n+  [disable wallet (enabled by default)])],\n+  [enable_wallet=$enableval],\n+  [enable_wallet=yes])\n+\n AC_ARG_WITH([miniupnpc],\n   [AS_HELP_STRING([--with-miniupnpc],\n   [enable UPNP (default is yes if libminiupnpc is found)])],\n@@ -49,50 +101,21 @@ AC_ARG_ENABLE([upnp-default],\n   [use_upnp_default=$enableval],\n   [use_upnp_default=no])\n \n-dnl enable ipv6 support\n-AC_ARG_ENABLE([ipv6],\n-  [AS_HELP_STRING([--enable-ipv6],\n-  [enable ipv6 (default is yes)])],\n-  [use_ipv6=$enableval],\n-  [use_ipv6=yes])\n-\n-dnl enable qt support\n-AC_ARG_WITH([qt],\n-  [AS_HELP_STRING([--with-qt],\n-  [enable qt (default is yes)])],\n-  [use_qt=$withval],\n-  [use_qt=auto])\n-AC_DEFUN([BITCOIN_QT_FAIL],[\n-  if test \"x$use_qt\" = \"xauto\"; then\n-    AC_MSG_WARN([$1; bitcoin-qt frontend will not be built])\n-    use_qt=no\n-  else\n-    AC_MSG_ERROR([$1])\n-  fi\n-])\n-AC_DEFUN([BITCOIN_QT_CHECK],[\n-  if test \"x$use_qt\" != \"xno\"; then\n-    true\n-    $1\n-  else\n-    true\n-    $2\n-  fi\n-])\n-AC_DEFUN([BITCOIN_QT_PATH_PROGS],[\n-  BITCOIN_QT_CHECK([\n-    AC_PATH_PROGS($1,$2,$3,$4)\n-    if test \"x$$1\" = \"x\"; then\n-      BITCOIN_QT_FAIL([$1 not found])\n-    fi\n-  ])\n-])\n-\n AC_ARG_ENABLE(tests,\n-    AS_HELP_STRING([--enable-tests],[compile tests (default is yes)]),\n+    AS_HELP_STRING([--disable-tests],[do not compile tests (default is to compile)]),\n     [use_tests=$enableval],\n     [use_tests=yes])\n \n+AC_ARG_ENABLE(gui-tests,\n+    AS_HELP_STRING([--disable-gui-tests],[do not compile GUI tests (default is to compile if GUI and tests enabled)]),\n+    [use_gui_tests=$enableval],\n+    [use_gui_tests=$use_tests])\n+\n+AC_ARG_ENABLE(bench,\n+    AS_HELP_STRING([--disable-bench],[do not compile benchmarks (default is to compile)]),\n+    [use_bench=$enableval],\n+    [use_bench=yes])\n+\n AC_ARG_WITH([comparison-tool],\n     AS_HELP_STRING([--with-comparison-tool],[path to java comparison tool (requires --enable-tests)]),\n     [use_comparison_tool=$withval],\n@@ -103,27 +126,32 @@ AC_ARG_ENABLE([comparison-tool-reorg-tests],\n     [use_comparison_tool_reorg_tests=$enableval],\n     [use_comparison_tool_reorg_tests=no])\n \n+AC_ARG_ENABLE([extended-rpc-tests],\n+    AS_HELP_STRING([--enable-extended-rpc-tests],[enable expensive RPC tests when using lcov (default no)]),\n+    [use_extended_rpc_tests=$enableval],\n+    [use_extended_rpc_tests=no])\n+\n AC_ARG_WITH([qrencode],\n   [AS_HELP_STRING([--with-qrencode],\n   [enable QR code support (default is yes if qt is enabled and libqrencode is found)])],\n   [use_qr=$withval],\n   [use_qr=auto])\n \n-AC_ARG_WITH([qtdbus],\n-  [AS_HELP_STRING([--with-qtdbus],\n-  [enable DBus support (default is yes if qt is enabled and QtDBus is found)])],\n-  [use_dbus=$withval],\n-  [use_dbus=auto])\n-\n AC_ARG_ENABLE([hardening],\n-  [AS_HELP_STRING([--enable-hardening],\n-  [attempt to harden the resulting executables (default is yes)])],\n+  [AS_HELP_STRING([--disable-hardening],\n+  [do not attempt to harden the resulting executables (default is to harden)])],\n   [use_hardening=$enableval],\n   [use_hardening=yes])\n \n+AC_ARG_ENABLE([reduce-exports],\n+  [AS_HELP_STRING([--enable-reduce-exports],\n+  [attempt to reduce exported symbols in the resulting executables (default is no)])],\n+  [use_reduce_exports=$enableval],\n+  [use_reduce_exports=no])\n+\n AC_ARG_ENABLE([ccache],\n-  [AS_HELP_STRING([--enable-ccache],\n-  [enable building with ccache (default is yes if ccache is found)])],\n+  [AS_HELP_STRING([--disable-ccache],\n+  [do not use ccache for building (default is to use if found)])],\n   [use_ccache=$enableval],\n   [use_ccache=auto])\n \n@@ -133,52 +161,80 @@ AC_ARG_ENABLE([lcov],\n   [use_lcov=yes],\n   [use_lcov=no])\n \n-AC_ARG_WITH([qt-incdir],[AS_HELP_STRING([--with-qt-incdir=INC_DIR],[specify qt include path (overridden by pkgconfig)])], [qt_include_path=$withval], [])\n-AC_ARG_WITH([qt-libdir],[AS_HELP_STRING([--with-qt-libdir=LIB_DIR],[specify qt lib path (overridden by pkgconfig)])], [qt_lib_path=$withval], [])\n-AC_ARG_WITH([qt-bindir],[AS_HELP_STRING([--with-qt-bindir=BIN_DIR],[specify qt bin path])], [qt_bin_path=$withval], [])\n-AC_ARG_WITH([qt-plugindir],[AS_HELP_STRING([--with-qt-plugindir=PLUGIN_DIR],[specify qt plugin path (overridden by pkgconfig)])], [qt_plugin_path=$withval], [])\n+AC_ARG_ENABLE([glibc-back-compat],\n+  [AS_HELP_STRING([--enable-glibc-back-compat],\n+  [enable backwards compatibility with glibc])],\n+  [use_glibc_compat=$enableval],\n+  [use_glibc_compat=no])\n+\n+AC_ARG_WITH([system-univalue],\n+  [AS_HELP_STRING([--with-system-univalue],\n+  [Build with system UniValue (default is no)])],\n+  [system_univalue=$withval],\n+  [system_univalue=no]\n+)\n+AC_ARG_ENABLE([zmq],\n+  [AS_HELP_STRING([--disable-zmq],\n+  [disable ZMQ notifications])],\n+  [use_zmq=$enableval],\n+  [use_zmq=yes])\n+\n AC_ARG_WITH([protoc-bindir],[AS_HELP_STRING([--with-protoc-bindir=BIN_DIR],[specify protoc bin path])], [protoc_bin_path=$withval], [])\n \n+# Enable debug\n+AC_ARG_ENABLE([debug],\n+    [AS_HELP_STRING([--enable-debug],\n+                    [use debug compiler flags and macros (default is no)])],\n+    [enable_debug=$enableval],\n+    [enable_debug=no])\n \n-AC_CONFIG_SRCDIR([src])\n-AC_CONFIG_HEADERS([src/bitcoin-config.h])\n+AC_LANG_PUSH([C++])\n+AX_CHECK_COMPILE_FLAG([-Werror],[CXXFLAG_WERROR=\"-Werror\"],[CXXFLAG_WERROR=\"\"])\n \n-dnl Checks for programs.\n-AC_PROG_CXX\n-AC_PROG_CC\n-AC_PROG_CPP\n-AC_PROG_CXXCPP\n-AC_PROG_INSTALL\n-AC_PROG_OBJC\n-m4_ifdef([AC_PROG_OBJCXX],[AC_PROG_OBJCXX])\n-AC_PROG_MKDIR_P\n-AC_PROG_SED\n-AC_PATH_TOOL(AR, ar)\n-AC_PATH_TOOL(RANLIB, ranlib)\n-AC_PATH_TOOL(STRIP, strip)\n-AC_PATH_TOOL(GCOV, gcov)\n-AC_PATH_PROG(LCOV, lcov)\n-AC_PATH_PROG(JAVA, java)\n-AC_PATH_PROG(GENHTML, genhtml)\n-AC_PATH_PROG([GIT], [git])\n-BITCOIN_QT_PATH_PROGS([MOC], [moc-qt4 moc4 moc],, $qt_bin_path:$PATH)\n-BITCOIN_QT_PATH_PROGS([UIC], [uic-qt4 uic4 uic],, $qt_bin_path:$PATH)\n-BITCOIN_QT_PATH_PROGS([RCC], [rcc-qt4 rcc4 rcc],, $qt_bin_path:$PATH)\n-BITCOIN_QT_PATH_PROGS([LRELEASE], [lrelease-qt4 lrelease4 lrelease],, $qt_bin_path:$PATH)\n-BITCOIN_QT_PATH_PROGS([PROTOC], [protoc],, $protoc_bin_path:$PATH)\n-AC_PATH_PROG(CCACHE,ccache)\n-AC_PATH_PROGS([LUPDATE], [lupdate-qt4 lupdate4 lupdate],, $qt_bin_path:$PATH)\n-AC_PATH_PROG(XGETTEXT,xgettext)\n-AC_PATH_PROG(HEXDUMP,hexdump)\n-PKG_PROG_PKG_CONFIG\n+if test \"x$enable_debug\" = xyes; then\n+    CPPFLAGS=\"$CPPFLAGS -DDEBUG -DDEBUG_LOCKORDER\"\n+    if test \"x$GCC\" = xyes; then\n+        CFLAGS=\"$CFLAGS -g3 -O0\"\n+    fi\n \n-## TODO: Remove these hard-coded paths and flags. They are here for the sake of\n-##       compatibility with the legacy buildsystem.\n-##\n-CXXFLAGS=\"$CXXFLAGS -Wall -Wextra -Wformat -Wformat-security -Wno-unused-parameter\"\n-CPPFLAGS=\"$CPPFLAGS -DBOOST_SPIRIT_THREADSAFE -DHAVE_BUILD_INFO -D__STDC_FORMAT_MACROS\"\n+    if test \"x$GXX\" = xyes; then\n+        CXXFLAGS=\"$CXXFLAGS -g3 -O0\"\n+    fi\n+fi\n \n-AC_LANG_PUSH([C++])\n+if test \"x$CXXFLAGS_overridden\" = \"xno\"; then\n+  AX_CHECK_COMPILE_FLAG([-Wall],[CXXFLAGS=\"$CXXFLAGS -Wall\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wextra],[CXXFLAGS=\"$CXXFLAGS -Wextra\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wformat],[CXXFLAGS=\"$CXXFLAGS -Wformat\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wformat-security],[CXXFLAGS=\"$CXXFLAGS -Wformat-security\"],,[[$CXXFLAG_WERROR]])\n+\n+  ## Some compilers (gcc) ignore unknown -Wno-* options, but warn about all\n+  ## unknown options if any other warning is produced. Test the -Wfoo case, and\n+  ## set the -Wno-foo case if it works.\n+  AX_CHECK_COMPILE_FLAG([-Wunused-parameter],[CXXFLAGS=\"$CXXFLAGS -Wno-unused-parameter\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wself-assign],[CXXFLAGS=\"$CXXFLAGS -Wno-self-assign\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wunused-local-typedef],[CXXFLAGS=\"$CXXFLAGS -Wno-unused-local-typedef\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wdeprecated-register],[CXXFLAGS=\"$CXXFLAGS -Wno-deprecated-register\"],,[[$CXXFLAG_WERROR]])\n+fi\n+CPPFLAGS=\"$CPPFLAGS -DHAVE_BUILD_INFO -D__STDC_FORMAT_MACROS\"\n+\n+AC_ARG_WITH([utils],\n+  [AS_HELP_STRING([--with-utils],\n+  [build bitcoin-cli bitcoin-tx (default=yes)])],\n+  [build_bitcoin_utils=$withval],\n+  [build_bitcoin_utils=yes])\n+\n+AC_ARG_WITH([libs],\n+  [AS_HELP_STRING([--with-libs],\n+  [build libraries (default=yes)])],\n+  [build_bitcoin_libs=$withval],\n+  [build_bitcoin_libs=yes])\n+\n+AC_ARG_WITH([daemon],\n+  [AS_HELP_STRING([--with-daemon],\n+  [build bitcoind daemon (default=yes)])],\n+  [build_bitcoind=$withval],\n+  [build_bitcoind=yes])\n \n use_pkgconfig=yes\n case $host in\n@@ -208,8 +264,9 @@ case $host in\n      AC_CHECK_LIB([iphlpapi],      [main],, AC_MSG_ERROR(lib missing))\n      AC_CHECK_LIB([crypt32],      [main],, AC_MSG_ERROR(lib missing))\n \n-     AX_CHECK_LINK_FLAG([[-static-libgcc]],[LDFLAGS=\"$LDFLAGS -static-libgcc\"])\n-     AX_CHECK_LINK_FLAG([[-static-libstdc++]],[LDFLAGS=\"$LDFLAGS -static-libstdc++\"])\n+     # -static is interpreted by libtool, where it has a different meaning.\n+     # In libtool-speak, it's -all-static.\n+     AX_CHECK_LINK_FLAG([[-static]],[LIBTOOL_APP_LDFLAGS=\"$LIBTOOL_APP_LDFLAGS -all-static\"])\n \n      AC_PATH_PROG([MAKENSIS], [makensis], none)\n      if test x$MAKENSIS = xnone; then\n@@ -221,43 +278,100 @@ case $host in\n        AC_MSG_ERROR(\"windres not found\")\n      fi\n \n-     CPPFLAGS=\"$CPPFLAGS -D_MT -DWIN32 -D_WINDOWS -DBOOST_THREAD_USE_LIB -D__USE_MINGW_ANSI_STDIO\"\n-     LEVELDB_TARGET_FLAGS=\"TARGET_OS=OS_WINDOWS_CROSSCOMPILE\"\n-     CXXFLAGS=\"$CXXFLAGS -w\"\n+     CPPFLAGS=\"$CPPFLAGS -D_MT -DWIN32 -D_WINDOWS -DBOOST_THREAD_USE_LIB\"\n+     LEVELDB_TARGET_FLAGS=\"-DOS_WINDOWS\"\n+     if test \"x$CXXFLAGS_overridden\" = \"xno\"; then\n+       CXXFLAGS=\"$CXXFLAGS -w\"\n+     fi\n+     case $host in\n+       i?86-*) WINDOWS_BITS=32 ;;\n+       x86_64-*) WINDOWS_BITS=64 ;;\n+       *) AC_MSG_ERROR(\"Could not determine win32/win64 for installer\") ;;\n+     esac\n+     AC_SUBST(WINDOWS_BITS)\n+\n+     dnl libtool insists upon adding -nostdlib and a list of objects/libs to link against.\n+     dnl That breaks our ability to build dll's with static libgcc/libstdc++/libssp. Override\n+     dnl its command here, with the predeps/postdeps removed, and -static inserted. Postdeps are\n+     dnl also overridden to prevent their insertion later.\n+     dnl This should only affect dll's.\n+     archive_cmds_CXX=\"\\$CC -shared \\$libobjs \\$deplibs \\$compiler_flags -static -o \\$output_objdir/\\$soname \\${wl}--enable-auto-image-base -Xlinker --out-implib -Xlinker \\$lib\"\n+     postdeps_CXX=\n+\n      ;;\n   *darwin*)\n      TARGET_OS=darwin\n-     LEVELDB_TARGET_FLAGS=\"TARGET_OS=Darwin\"\n+     LEVELDB_TARGET_FLAGS=\"-DOS_MACOSX\"\n      if  test x$cross_compiling != xyes; then\n+       BUILD_OS=darwin\n        AC_CHECK_PROG([PORT],port, port)\n        if test x$PORT = xport; then\n          dnl add default macports paths\n-         CPPFLAGS=\"$CPPFLAGS -I/opt/local/include -I/opt/local/include/db48\"\n-         LIBS=\"$LIBS -L/opt/local/lib -L/opt/local/lib/db48\"\n+         CPPFLAGS=\"$CPPFLAGS -isystem /opt/local/include\"\n+         LIBS=\"$LIBS -L/opt/local/lib\"\n+         if test -d /opt/local/include/db48; then\n+           CPPFLAGS=\"$CPPFLAGS -I/opt/local/include/db48\"\n+           LIBS=\"$LIBS -L/opt/local/lib/db48\"\n+         fi\n        fi\n \n        AC_CHECK_PROG([BREW],brew, brew)\n        if test x$BREW = xbrew; then\n-         dnl add default homebrew paths\n-         openssl_prefix=`$BREW --prefix openssl`\n-         bdb_prefix=`$BREW --prefix berkeley-db4`\n-         export PKG_CONFIG_PATH=\"$openssl_prefix/lib/pkgconfig:$PKG_CONFIG_PATH\"\n-         CPPFLAGS=\"$CPPFLAGS -I$bdb_prefix/include\"\n-         LIBS=\"$LIBS -L/$bdb_prefix/lib\"\n+         dnl These Homebrew packages may be keg-only, meaning that they won't be found\n+         dnl in expected paths because they may conflict with system files. Ask\n+         dnl Homebrew where each one is located, then adjust paths accordingly.\n+         dnl It's safe to add these paths even if the functionality is disabled by\n+         dnl the user (--without-wallet or --without-gui for example).\n+\n+         openssl_prefix=`$BREW --prefix openssl 2>/dev/null`\n+         bdb_prefix=`$BREW --prefix berkeley-db4 2>/dev/null`\n+         qt5_prefix=`$BREW --prefix qt5 2>/dev/null`\n+         if test x$openssl_prefix != x; then\n+           PKG_CONFIG_PATH=\"$openssl_prefix/lib/pkgconfig:$PKG_CONFIG_PATH\"\n+           export PKG_CONFIG_PATH\n+         fi\n+         if test x$bdb_prefix != x; then\n+           CPPFLAGS=\"$CPPFLAGS -I$bdb_prefix/include\"\n+           LIBS=\"$LIBS -L$bdb_prefix/lib\"\n+         fi\n+         if test x$qt5_prefix != x; then\n+           PKG_CONFIG_PATH=\"$qt5_prefix/lib/pkgconfig:$PKG_CONFIG_PATH\"\n+           export PKG_CONFIG_PATH\n+         fi\n        fi\n+     else\n+       case $build_os in\n+         *darwin*)\n+           BUILD_OS=darwin\n+           ;;\n+         *)\n+           AC_PATH_TOOL([INSTALLNAMETOOL], [install_name_tool], install_name_tool)\n+           AC_PATH_TOOL([OTOOL], [otool], otool)\n+           AC_PATH_PROGS([GENISOIMAGE], [genisoimage mkisofs],genisoimage)\n+           AC_PATH_PROGS([RSVG_CONVERT], [rsvg-convert rsvg],rsvg-convert)\n+           AC_PATH_PROGS([IMAGEMAGICK_CONVERT], [convert],convert)\n+           AC_PATH_PROGS([TIFFCP], [tiffcp],tiffcp)\n+\n+           dnl libtool will try to strip the static lib, which is a problem for\n+           dnl cross-builds because strip attempts to call a hard-coded ld,\n+           dnl which may not exist in the path. Stripping the .a is not\n+           dnl necessary, so just disable it.\n+           old_striplib=\n+           ;;\n+       esac\n      fi\n \n-     BITCOIN_QT_CHECK([\n-       MOC_DEFS=\"-DQ_OS_MAC\"\n-       base_frameworks=\"-framework Foundation -framework ApplicationServices -framework AppKit\"\n-       AX_CHECK_LINK_FLAG([[$base_frameworks]],[LIBS=\"$LIBS $base_frameworks\"],[AC_MSG_ERROR(could not find base frameworks)])\n-     ])\n-\n+     AX_CHECK_LINK_FLAG([[-Wl,-headerpad_max_install_names]], [LDFLAGS=\"$LDFLAGS -Wl,-headerpad_max_install_names\"])\n      CPPFLAGS=\"$CPPFLAGS -DMAC_OSX\"\n-     TESTDEFS=\"-DBOOST_TEST_DYN_LINK\"\n+     OBJCXXFLAGS=\"$CXXFLAGS\"\n+     ;;\n+   *linux*)\n+     TARGET_OS=linux\n+     LEVELDB_TARGET_FLAGS=\"-DOS_LINUX\"\n      ;;\n    *)\n-     TESTDEFS=\"-DBOOST_TEST_DYN_LINK\"\n+     OTHER_OS=`echo ${host_os} | awk '{print toupper($0)}'`\n+     LEVELDB_TARGET_FLAGS=\"-DOS_${OTHER_OS}\"\n      ;;\n esac\n \n@@ -266,46 +380,54 @@ if test x$use_comparison_tool != xno; then\n fi\n \n if test x$use_comparison_tool_reorg_tests != xno; then\n-  if test x$use_comparison_tool == x; then\n+  if test x$use_comparison_tool = x; then\n     AC_MSG_ERROR(\"comparison tool reorg tests but comparison tool was not specified\")\n   fi\n   AC_SUBST(COMPARISON_TOOL_REORG_TESTS, 1)\n else\n   AC_SUBST(COMPARISON_TOOL_REORG_TESTS, 0)\n fi\n \n-if test x$use_lcov == xyes; then\n-  if test x$LCOV == x; then\n+if test x$use_extended_rpc_tests != xno; then\n+  AC_SUBST(EXTENDED_RPC_TESTS, -extended)\n+fi\n+\n+if test x$use_lcov = xyes; then\n+  if test x$LCOV = x; then\n     AC_MSG_ERROR(\"lcov testing requested but lcov not found\")\n   fi\n-  if test x$GCOV == x; then\n+  if test x$GCOV = x; then\n     AC_MSG_ERROR(\"lcov testing requested but gcov not found\")\n   fi\n-  if test x$JAVA == x; then\n+  if test x$JAVA = x; then\n     AC_MSG_ERROR(\"lcov testing requested but java not found\")\n   fi\n-  if test x$GENHTML == x; then\n+  if test x$PYTHON = x; then\n+    AC_MSG_ERROR(\"lcov testing requested but python not found\")\n+  fi\n+  if test x$GENHTML = x; then\n     AC_MSG_ERROR(\"lcov testing requested but genhtml not found\")\n   fi\n-  if test x$use_comparison_tool == x; then\n+  if test x$use_comparison_tool = x; then\n     AC_MSG_ERROR(\"lcov testing requested but comparison tool was not specified\")\n   fi\n   LCOV=\"$LCOV --gcov-tool=$GCOV\"\n   AX_CHECK_COMPILE_FLAG([--coverage],[CXXFLAGS=\"$CXXFLAGS --coverage\"],\n     [AC_MSG_ERROR(\"lcov testing requested but --coverage flag does not work\")])\n fi\n \n-dnl Require little endian\n-AC_C_BIGENDIAN([AC_MSG_ERROR(\"Big Endian not supported\")])\n+dnl Check for endianness\n+AC_C_BIGENDIAN\n \n dnl Check for pthread compile/link requirements\n AX_PTHREAD\n-INCLUDES=\"$INCLUDES $PTHREAD_CFLAGS\"\n \n # The following macro will add the necessary defines to bitcoin-config.h, but\n # they also need to be passed down to any subprojects. Pull the results out of\n # the cache and add them to CPPFLAGS.\n AC_SYS_LARGEFILE\n+# detect POSIX or GNU variant of strerror_r\n+AC_FUNC_STRERROR_R\n \n if test x$ac_cv_sys_file_offset_bits != x &&\n    test x$ac_cv_sys_file_offset_bits != xno &&\n@@ -321,55 +443,154 @@ fi\n \n AX_CHECK_LINK_FLAG([[-Wl,--large-address-aware]], [LDFLAGS=\"$LDFLAGS -Wl,--large-address-aware\"])\n \n+AX_GCC_FUNC_ATTRIBUTE([visibility])\n+AX_GCC_FUNC_ATTRIBUTE([dllexport])\n+AX_GCC_FUNC_ATTRIBUTE([dllimport])\n+\n+if test x$use_glibc_compat != xno; then\n+\n+  #glibc absorbed clock_gettime in 2.17. librt (its previous location) is safe to link\n+  #in anyway for back-compat.\n+  AC_CHECK_LIB([rt],[clock_gettime],, AC_MSG_ERROR(lib missing))\n+\n+  #__fdelt_chk's params and return type have changed from long unsigned int to long int.\n+  # See which one is present here.\n+  AC_MSG_CHECKING(__fdelt_chk type)\n+  AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#ifdef _FORTIFY_SOURCE\n+                    #undef _FORTIFY_SOURCE\n+                  #endif\n+                  #define _FORTIFY_SOURCE 2\n+                  #include <sys/select.h>\n+     extern \"C\" long unsigned int __fdelt_warn(long unsigned int);]],[[]])],\n+    [ fdelt_type=\"long unsigned int\"],\n+    [ fdelt_type=\"long int\"])\n+  AC_MSG_RESULT($fdelt_type)\n+  AC_DEFINE_UNQUOTED(FDELT_TYPE, $fdelt_type,[parameter and return value type for __fdelt_chk])\n+else\n+  AC_SEARCH_LIBS([clock_gettime],[rt])\n+fi\n+\n+if test x$TARGET_OS != xwindows; then\n+  # All windows code is PIC, forcing it on just adds useless compile warnings\n+  AX_CHECK_COMPILE_FLAG([-fPIC],[PIC_FLAGS=\"-fPIC\"])\n+fi\n+\n if test x$use_hardening != xno; then\n   AX_CHECK_COMPILE_FLAG([-Wstack-protector],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -Wstack-protector\"])\n-  AX_CHECK_COMPILE_FLAG([-fPIE],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -fPIE\"])\n+  AX_CHECK_COMPILE_FLAG([-fstack-protector-all],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -fstack-protector-all\"])\n \n-  AX_CHECK_PREPROC_FLAG([-D_FORTIFY_SOURCE=2],[HARDENED_CPPFLAGS=\"$HARDENED_CPPFLAGS -D_FORTIFY_SOURCE=2\"])\n+  AX_CHECK_PREPROC_FLAG([-D_FORTIFY_SOURCE=2],[\n+    AX_CHECK_PREPROC_FLAG([-U_FORTIFY_SOURCE],[\n+      HARDENED_CPPFLAGS=\"$HARDENED_CPPFLAGS -U_FORTIFY_SOURCE\"\n+    ])\n+    HARDENED_CPPFLAGS=\"$HARDENED_CPPFLAGS -D_FORTIFY_SOURCE=2\"\n+  ])\n \n   AX_CHECK_LINK_FLAG([[-Wl,--dynamicbase]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,--dynamicbase\"])\n   AX_CHECK_LINK_FLAG([[-Wl,--nxcompat]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,--nxcompat\"])\n-  AX_CHECK_LINK_FLAG([[-Wl,-z,relro]], [LDFLAGS=\"-Wl,-z,relro\"])\n-  AX_CHECK_LINK_FLAG([[-Wl,-z,now]], [LDFLAGS=\"-Wl,-z,now\"])\n+  AX_CHECK_LINK_FLAG([[-Wl,-z,relro]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,-z,relro\"])\n+  AX_CHECK_LINK_FLAG([[-Wl,-z,now]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,-z,now\"])\n \n   if test x$TARGET_OS != xwindows; then\n-    # -fstack-protector-all can produce broken binaries with mingw\n-    AX_CHECK_COMPILE_FLAG([-fno-stack-protector],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -fno-stack-protector\"])\n-    AX_CHECK_COMPILE_FLAG([-fstack-protector-all],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -fstack-protector-all\"])\n-\n-    # -pie will link successfully with MinGW, but it's unsupported and leads to undeterministic binaries\n+    AX_CHECK_COMPILE_FLAG([-fPIE],[PIE_FLAGS=\"-fPIE\"])\n     AX_CHECK_LINK_FLAG([[-pie]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -pie\"])\n   fi\n \n-  CXXFLAGS=\"$CXXFLAGS $HARDENED_CXXFLAGS\"\n-  CPPFLAGS=\"$CPPFLAGS $HARDENED_CPPFLAGS\"\n-  LDFLAGS=\"$LDFLAGS $HARDENED_LDFLAGS\"\n-  OBJCXXFLAGS=\"$CXXFLAGS\"\n+  case $host in\n+    *mingw*)\n+       AC_CHECK_LIB([ssp],      [main],, AC_MSG_ERROR(lib missing))\n+    ;;\n+  esac\n fi\n \n dnl this flag screws up non-darwin gcc even when the check fails. special-case it.\n if test x$TARGET_OS = xdarwin; then\n   AX_CHECK_LINK_FLAG([[-Wl,-dead_strip]], [LDFLAGS=\"$LDFLAGS -Wl,-dead_strip\"])\n fi\n \n-AC_CHECK_HEADERS([stdio.h stdlib.h unistd.h strings.h sys/types.h sys/stat.h])\n+AC_CHECK_HEADERS([endian.h sys/endian.h byteswap.h stdio.h stdlib.h unistd.h strings.h sys/types.h sys/stat.h sys/select.h sys/prctl.h])\n+AC_SEARCH_LIBS([getaddrinfo_a], [anl], [AC_DEFINE(HAVE_GETADDRINFO_A, 1, [Define this symbol if you have getaddrinfo_a])])\n+AC_SEARCH_LIBS([inet_pton], [nsl resolv], [AC_DEFINE(HAVE_INET_PTON, 1, [Define this symbol if you have inet_pton])])\n+\n+AC_CHECK_DECLS([strnlen])\n+\n+AC_CHECK_DECLS([le16toh, le32toh, le64toh, htole16, htole32, htole64, be16toh, be32toh, be64toh, htobe16, htobe32, htobe64],,,\n+\t\t[#if HAVE_ENDIAN_H\n+                 #include <endian.h>\n+                 #elif HAVE_SYS_ENDIAN_H\n+                 #include <sys/endian.h>\n+                 #endif])\n+\n+AC_CHECK_DECLS([bswap_16, bswap_32, bswap_64],,,\n+\t\t[#if HAVE_BYTESWAP_H\n+                 #include <byteswap.h>\n+                 #endif])\n \n dnl Check for MSG_NOSIGNAL\n AC_MSG_CHECKING(for MSG_NOSIGNAL)\n-AC_TRY_COMPILE([#include <sys/socket.h>],\n- [ int f = MSG_NOSIGNAL; ],\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/socket.h>]],\n+ [[ int f = MSG_NOSIGNAL; ]])],\n  [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_MSG_NOSIGNAL, 1,[Define this symbol if you have MSG_NOSIGNAL]) ],\n  [ AC_MSG_RESULT(no)]\n )\n \n-dnl Check for libdb_cxx\n-BITCOIN_FIND_BDB48\n+AC_MSG_CHECKING([for visibility attribute])\n+AC_LINK_IFELSE([AC_LANG_SOURCE([\n+  int foo_def( void ) __attribute__((visibility(\"default\")));\n+  int main(){}\n+  ])],\n+  [\n+    AC_DEFINE(HAVE_VISIBILITY_ATTRIBUTE,1,[Define if the visibility attribute is supported.])\n+    AC_MSG_RESULT(yes)\n+  ],\n+  [\n+    AC_MSG_RESULT(no)\n+    if test x$use_reduce_exports = xyes; then\n+      AC_MSG_ERROR([Cannot find a working visibility attribute. Use --disable-reduce-exports.])\n+    fi\n+  ]\n+)\n+\n+if test x$use_reduce_exports = xyes; then\n+  AX_CHECK_COMPILE_FLAG([-fvisibility=hidden],[RE_CXXFLAGS=\"-fvisibility=hidden\"],\n+  [AC_MSG_ERROR([Cannot set default symbol visibility. Use --disable-reduce-exports.])])\n+fi\n+\n+LEVELDB_CPPFLAGS=\n+LIBLEVELDB=\n+LIBMEMENV=\n+AM_CONDITIONAL([EMBEDDED_LEVELDB],[true])\n+AC_SUBST(LEVELDB_CPPFLAGS)\n+AC_SUBST(LIBLEVELDB)\n+AC_SUBST(LIBMEMENV)\n+\n+if test x$enable_wallet != xno; then\n+    dnl Check for libdb_cxx only if wallet enabled\n+    BITCOIN_FIND_BDB48\n+fi\n \n dnl Check for libminiupnpc (optional)\n if test x$use_upnp != xno; then\n-  AC_CHECK_LIB([miniupnpc], [main],, [have_miniupnpc=no])\n+  AC_CHECK_HEADERS(\n+    [miniupnpc/miniwget.h miniupnpc/miniupnpc.h miniupnpc/upnpcommands.h miniupnpc/upnperrors.h],\n+    [AC_CHECK_LIB([miniupnpc], [main],[MINIUPNPC_LIBS=-lminiupnpc], [have_miniupnpc=no])],\n+    [have_miniupnpc=no]\n+  )\n+fi\n+\n+BITCOIN_QT_INIT\n+\n+dnl sets $bitcoin_enable_qt, $bitcoin_enable_qt_test, $bitcoin_enable_qt_dbus\n+BITCOIN_QT_CONFIGURE([$use_pkgconfig], [qt5])\n+\n+if test x$build_bitcoin_utils$build_bitcoind$bitcoin_enable_qt$use_tests = xnononono; then\n+    use_boost=no\n+else\n+    use_boost=yes\n fi\n \n+if test x$use_boost = xyes; then\n+\n dnl Check for boost libs\n AX_BOOST_BASE\n AX_BOOST_SYSTEM\n@@ -378,211 +599,300 @@ AX_BOOST_PROGRAM_OPTIONS\n AX_BOOST_THREAD\n AX_BOOST_CHRONO\n \n+\n+if test x$use_reduce_exports = xyes; then\n+  AC_MSG_CHECKING([for working boost reduced exports])\n+  TEMP_CPPFLAGS=\"$CPPFLAGS\"\n+  CPPFLAGS=\"$BOOST_CPPFLAGS $CPPFLAGS\"\n+  AC_PREPROC_IFELSE([AC_LANG_PROGRAM([[\n+      @%:@include <boost/version.hpp>\n+    ]], [[\n+      #if BOOST_VERSION >= 104900\n+      // Everything is okay\n+      #else\n+      #  error Boost version is too old\n+      #endif\n+    ]])],[\n+      AC_MSG_RESULT(yes)\n+    ],[\n+    AC_MSG_ERROR([boost versions < 1.49 are known to be broken with reduced exports. Use --disable-reduce-exports.])\n+  ])\n+  CPPFLAGS=\"$TEMP_CPPFLAGS\"\n+fi\n+fi\n+\n+if test x$use_reduce_exports = xyes; then\n+    CXXFLAGS=\"$CXXFLAGS $RE_CXXFLAGS\"\n+    AX_CHECK_LINK_FLAG([[-Wl,--exclude-libs,ALL]], [RELDFLAGS=\"-Wl,--exclude-libs,ALL\"])\n+fi\n+\n if test x$use_tests = xyes; then\n \n   if test x$HEXDUMP = x; then\n     AC_MSG_ERROR(hexdump is required for tests)\n   fi\n \n \n+  if test x$use_boost = xyes; then\n+\n   AX_BOOST_UNIT_TEST_FRAMEWORK\n+\n+  dnl Determine if -DBOOST_TEST_DYN_LINK is needed\n+  AC_MSG_CHECKING([for dynamic linked boost test])\n+  TEMP_LIBS=\"$LIBS\"\n+  LIBS=\"$LIBS $BOOST_LDFLAGS $BOOST_UNIT_TEST_FRAMEWORK_LIB\"\n+  TEMP_CPPFLAGS=\"$CPPFLAGS\"\n+  CPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n+  AC_LINK_IFELSE([AC_LANG_SOURCE([\n+       #define BOOST_TEST_DYN_LINK\n+       #define BOOST_TEST_MAIN\n+        #include <boost/test/unit_test.hpp>\n+\n+       ])],\n+    [AC_MSG_RESULT(yes)]\n+    [TESTDEFS=\"$TESTDEFS -DBOOST_TEST_DYN_LINK\"],\n+    [AC_MSG_RESULT(no)])\n+  LIBS=\"$TEMP_LIBS\"\n+  CPPFLAGS=\"$TEMP_CPPFLAGS\"\n+\n+  fi\n fi\n \n-BOOST_LIBS=\"$BOOST_LDFLAGS $BOOST_SYSTEM_LIB $BOOST_FILESYSTEM_LIB $BOOST_PROGRAM_OPTIONS_LIB $BOOST_THREAD_LIB\"\n-BOOST_INCLUDES=\"$BOOST_CPPFLAGS\"\n+if test x$use_boost = xyes; then\n+\n+BOOST_LIBS=\"$BOOST_LDFLAGS $BOOST_SYSTEM_LIB $BOOST_FILESYSTEM_LIB $BOOST_PROGRAM_OPTIONS_LIB $BOOST_THREAD_LIB $BOOST_CHRONO_LIB\"\n+\n+\n+dnl If boost (prior to 1.57) was built without c++11, it emulated scoped enums\n+dnl using c++98 constructs. Unfortunately, this implementation detail leaked into\n+dnl the abi. This was fixed in 1.57.\n+\n+dnl When building against that installed version using c++11, the headers pick up\n+dnl on the native c++11 scoped enum support and enable it, however it will fail to\n+dnl link. This can be worked around by disabling c++11 scoped enums if linking will\n+dnl fail.\n+dnl BOOST_NO_SCOPED_ENUMS was changed to BOOST_NO_CXX11_SCOPED_ENUMS in 1.51.\n+\n+TEMP_LIBS=\"$LIBS\"\n+LIBS=\"$BOOST_LIBS $LIBS\"\n+TEMP_CPPFLAGS=\"$CPPFLAGS\"\n+CPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n+AC_MSG_CHECKING([for mismatched boost c++11 scoped enums])\n+AC_LINK_IFELSE([AC_LANG_PROGRAM([[\n+  #include \"boost/config.hpp\"\n+  #include \"boost/version.hpp\"\n+  #if !defined(BOOST_NO_SCOPED_ENUMS) && !defined(BOOST_NO_CXX11_SCOPED_ENUMS) && BOOST_VERSION < 105700\n+  #define BOOST_NO_SCOPED_ENUMS\n+  #define BOOST_NO_CXX11_SCOPED_ENUMS\n+  #define CHECK\n+  #endif\n+  #include \"boost/filesystem.hpp\"\n+  ]],[[\n+  #if defined(CHECK)\n+    boost::filesystem::copy_file(\"foo\", \"bar\");\n+  #else\n+    choke;\n+  #endif\n+  ]])],\n+  [AC_MSG_RESULT(mismatched); BOOST_CPPFLAGS=\"$BOOST_CPPFLAGS -DBOOST_NO_SCOPED_ENUMS -DBOOST_NO_CXX11_SCOPED_ENUMS\"], [AC_MSG_RESULT(ok)])\n+LIBS=\"$TEMP_LIBS\"\n+CPPFLAGS=\"$TEMP_CPPFLAGS\"\n \n dnl Boost >= 1.50 uses sleep_for rather than the now-deprecated sleep, however\n dnl it was broken from 1.50 to 1.52 when backed by nanosleep. Use sleep_for if\n dnl a working version is available, else fall back to sleep. sleep was removed\n dnl after 1.56.\n dnl If neither is available, abort.\n-dnl If sleep_for is used, boost_chrono becomes a requirement.\n-if test x$ax_cv_boost_chrono = xyes; then\n TEMP_LIBS=\"$LIBS\"\n-LIBS=\"$LIBS $BOOST_LIBS $BOOST_CHRONO_LIB\"\n-AC_TRY_LINK([\n+LIBS=\"$BOOST_LIBS $LIBS\"\n+TEMP_CPPFLAGS=\"$CPPFLAGS\"\n+CPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n+AC_LINK_IFELSE([AC_LANG_PROGRAM([[\n   #include <boost/thread/thread.hpp>\n   #include <boost/version.hpp>\n-  ],[\n+  ]],[[\n   #if BOOST_VERSION >= 105000 && (!defined(BOOST_HAS_NANOSLEEP) || BOOST_VERSION >= 105200)\n       boost::this_thread::sleep_for(boost::chrono::milliseconds(0));\n   #else\n    choke me\n   #endif\n-  ],\n-  [boost_sleep=yes; BOOST_LIBS=\"$BOOST_LIBS $BOOST_CHRONO_LIB\";\n+  ]])],\n+  [boost_sleep=yes;\n      AC_DEFINE(HAVE_WORKING_BOOST_SLEEP_FOR, 1, [Define this symbol if boost sleep_for works])],\n   [boost_sleep=no])\n LIBS=\"$TEMP_LIBS\"\n-fi\n+CPPFLAGS=\"$TEMP_CPPFLAGS\"\n \n if test x$boost_sleep != xyes; then\n TEMP_LIBS=\"$LIBS\"\n-LIBS=\"$LIBS $BOOST_LIBS\"\n-AC_TRY_LINK([\n+LIBS=\"$BOOST_LIBS $LIBS\"\n+TEMP_CPPFLAGS=\"$CPPFLAGS\"\n+CPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n+AC_LINK_IFELSE([AC_LANG_PROGRAM([[\n   #include <boost/version.hpp>\n   #include <boost/thread.hpp>\n   #include <boost/date_time/posix_time/posix_time_types.hpp>\n-  ],[\n+  ]],[[\n   #if BOOST_VERSION <= 105600\n       boost::this_thread::sleep(boost::posix_time::milliseconds(0));\n   #else\n    choke me\n   #endif\n-  ],\n+  ]])],\n   [boost_sleep=yes; AC_DEFINE(HAVE_WORKING_BOOST_SLEEP, 1, [Define this symbol if boost sleep works])],\n   [boost_sleep=no])\n LIBS=\"$TEMP_LIBS\"\n+CPPFLAGS=\"$TEMP_CPPFLAGS\"\n fi\n \n if test x$boost_sleep != xyes; then\n-  AC_MSG_ERROR(No working boost sleep implementation found)\n+  AC_MSG_ERROR(No working boost sleep implementation found.)\n+fi\n+\n fi\n \n if test x$use_pkgconfig = xyes; then\n \n-  if test x$PKG_CONFIG == x; then\n+  if test x\"$PKG_CONFIG\" = \"x\"; then\n     AC_MSG_ERROR(pkg-config not found.)\n   fi\n \n   : #NOP\n   m4_ifdef(\n     [PKG_CHECK_MODULES],\n     [\n-      PKG_CHECK_MODULES([SSL], [libssl], [INCLUDES=\"$INCLUDES $SSL_CFLAGS\"; LIBS=\"$LIBS $SSL_LIBS\"], [AC_MSG_ERROR(openssl  not found.)])\n-      PKG_CHECK_MODULES([CRYPTO], [libcrypto], [INCLUDES=\"$INCLUDES $CRYPTO_CFLAGS\"; LIBS=\"$LIBS $CRYPTO_LIBS\"], [AC_MSG_ERROR(libcrypto  not found.)])\n-\n-      BITCOIN_QT_CHECK([\n-        PKG_CHECK_MODULES([QT], [QtCore QtGui QtNetwork], [QT_INCLUDES=\"$QT_CFLAGS\"; have_qt=yes],[\n-          have_qt=no\n-          BITCOIN_QT_FAIL([Qt dependencies not found])\n-        ])\n-        if test x$use_tests = xyes; then\n-          PKG_CHECK_MODULES([QT_TEST], [QtTest], [QT_TEST_INCLUDES=\"$QT_TEST_CFLAGS\"; have_qt_test=yes], [have_qt_test=no])\n-        fi\n-        if test x$use_dbus != xno; then\n-          PKG_CHECK_MODULES([QT_DBUS], [QtDBus], [QT_DBUS_INCLUDES=\"$QT_DBUS_CFLAGS\"; have_qt_dbus=yes], [have_qt_dbus=no])\n-        fi\n-        if test x$use_qr != xno; then\n-          PKG_CHECK_MODULES([QR], [libqrencode], [have_qrencode=yes], [have_qrencode=no])\n+      PKG_CHECK_MODULES([SSL], [libssl],, [AC_MSG_ERROR(openssl  not found.)])\n+      PKG_CHECK_MODULES([CRYPTO], [libcrypto],,[AC_MSG_ERROR(libcrypto  not found.)])\n+      BITCOIN_QT_CHECK([PKG_CHECK_MODULES([PROTOBUF], [protobuf], [have_protobuf=yes], [BITCOIN_QT_FAIL(libprotobuf not found)])])\n+      if test x$use_qr != xno; then\n+        BITCOIN_QT_CHECK([PKG_CHECK_MODULES([QR], [libqrencode], [have_qrencode=yes], [have_qrencode=no])])\n+      fi\n+      if test x$build_bitcoin_utils$build_bitcoind$bitcoin_enable_qt$use_tests != xnononono; then\n+        PKG_CHECK_MODULES([EVENT], [libevent],, [AC_MSG_ERROR(libevent not found.)])\n+        if test x$TARGET_OS != xwindows; then\n+          PKG_CHECK_MODULES([EVENT_PTHREADS], [libevent_pthreads],, [AC_MSG_ERROR(libevent_pthreads not found.)])\n         fi\n-        PKG_CHECK_MODULES([PROTOBUF], [protobuf], [have_protobuf=yes], [AC_MSG_ERROR(libprotobuf not found.)])\n-      ])\n+      fi\n+\n+      if test \"x$use_zmq\" = \"xyes\"; then\n+        PKG_CHECK_MODULES([ZMQ],[libzmq >= 4],\n+          [AC_DEFINE([ENABLE_ZMQ],[1],[Define to 1 to enable ZMQ functions])],\n+          [AC_DEFINE([ENABLE_ZMQ],[0],[Define to 1 to enable ZMQ functions])\n+           AC_MSG_WARN([libzmq version 4.x or greater not found, disabling])\n+           use_zmq=no])\n+      else\n+          AC_DEFINE_UNQUOTED([ENABLE_ZMQ],[0],[Define to 1 to enable ZMQ functions])\n+      fi\n     ]\n   )\n else\n   AC_CHECK_HEADER([openssl/crypto.h],,AC_MSG_ERROR(libcrypto headers missing))\n-  AC_CHECK_LIB([crypto],      [main],, AC_MSG_ERROR(libcrypto missing))\n+  AC_CHECK_LIB([crypto],      [main],CRYPTO_LIBS=-lcrypto, AC_MSG_ERROR(libcrypto missing))\n \n   AC_CHECK_HEADER([openssl/ssl.h],, AC_MSG_ERROR(libssl headers missing),)\n-  AC_CHECK_LIB([ssl],         [main],, AC_MSG_ERROR(libssl missing))\n-\n-  BITCOIN_QT_CHECK([\n-    TEMP_LIBS=\"$LIBS\"\n-    LIBS=\n-    if test x$qt_lib_path != x; then\n-      QT_LIBS=\"$QT_LIBS -L$qt_lib_path\"\n-      LIBS=\"$QT_LIBS\"\n-    fi\n-    if test x$qt_plugin_path != x; then\n-      QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/codecs\"\n-      LIBS=\"$QT_LIBS\"\n-    fi\n+  AC_CHECK_LIB([ssl],         [main],SSL_LIBS=-lssl, AC_MSG_ERROR(libssl missing))\n \n-    if test x$TARGET_OS == xwindows; then\n-      AC_CHECK_LIB([imm32],      [main],, BITCOIN_QT_FAIL(libimm32 not found))\n+  if test x$build_bitcoin_utils$build_bitcoind$bitcoin_enable_qt$use_tests != xnononono; then\n+    AC_CHECK_HEADER([event2/event.h],, AC_MSG_ERROR(libevent headers missing),)\n+    AC_CHECK_LIB([event],[main],EVENT_LIBS=-levent,AC_MSG_ERROR(libevent missing))\n+    if test x$TARGET_OS != xwindows; then\n+      AC_CHECK_LIB([event_pthreads],[main],EVENT_PTHREADS_LIBS=-levent_pthreads,AC_MSG_ERROR(libevent_pthreads missing))\n     fi\n-  ])\n-\n-    #TODO: These are only needed when they're linked directly to parent libs. It really has nothing to do with windows.\n-    #Instead, check for missing functions in parent libs and assume static if they're absent.\n-    if test x$TARGET_OS == xwindows; then\n-      BITCOIN_QT_CHECK(AC_CHECK_LIB([qcncodecs],[main],,BITCOIN_QT_FAIL(libqcncodecs not found)))\n-      BITCOIN_QT_CHECK(AC_CHECK_LIB([qjpcodecs],[main],,BITCOIN_QT_FAIL(libqjpcodecs not found)))\n-      BITCOIN_QT_CHECK(AC_CHECK_LIB([qkrcodecs],[main],,BITCOIN_QT_FAIL(libqkrcodecs not found)))\n-      BITCOIN_QT_CHECK(AC_CHECK_LIB([qtwcodecs],[main],,BITCOIN_QT_FAIL(libqtwcodecs not found)))\n-    fi\n-\n-    BITCOIN_QT_CHECK(AC_CHECK_LIB([QtCore]   ,[main],,BITCOIN_QT_FAIL(libQtCore not found)))\n-    BITCOIN_QT_CHECK(AC_CHECK_LIB([QtGui]    ,[main],,BITCOIN_QT_FAIL(libQtGui not found)))\n-    BITCOIN_QT_CHECK(AC_CHECK_LIB([QtNetwork],[main],,BITCOIN_QT_FAIL(libQtNetwork not found)))\n-    BITCOIN_QT_CHECK(AC_CHECK_LIB([protobuf] ,[main],,BITCOIN_QT_FAIL(libprotobuf not found)))\n+  fi\n \n-  BITCOIN_QT_CHECK([\n-    QT_LIBS=\"$LIBS\"\n-    LIBS=\"$TEMP_LIBS\"\n+  if test \"x$use_zmq\" = \"xyes\"; then\n+     AC_CHECK_HEADER([zmq.h],\n+       [AC_DEFINE([ENABLE_ZMQ],[1],[Define to 1 to enable ZMQ functions])],\n+       [AC_MSG_WARN([zmq.h not found, disabling zmq support])\n+        use_zmq=no\n+        AC_DEFINE([ENABLE_ZMQ],[0],[Define to 1 to enable ZMQ functions])])\n+     AC_CHECK_LIB([zmq],[zmq_ctx_shutdown],ZMQ_LIBS=-lzmq,\n+       [AC_MSG_WARN([libzmq >= 4.0 not found, disabling zmq support])\n+        use_zmq=no\n+        AC_DEFINE([ENABLE_ZMQ],[0],[Define to 1 to enable ZMQ functions])])\n+  else\n+    AC_DEFINE_UNQUOTED([ENABLE_ZMQ],[0],[Define to 1 to enable ZMQ functions])\n+  fi\n \n-    TEMP_CPPFLAGS=\"$CPPFLAGS\"\n-    if test x$qt_include_path != x; then\n-      QT_INCLUDES=\"-I$qt_include_path -I$qt_include_path/QtCore -I$qt_include_path/QtGui -I$qt_include_path/QtNetwork -I$qt_include_path/QtTest -I$qt_include_path/QtDBus\"\n-      CPPFLAGS=\"$CPPFLAGS $QT_INCLUDES\"\n-    fi\n-  ])\n+  BITCOIN_QT_CHECK(AC_CHECK_LIB([protobuf] ,[main],[PROTOBUF_LIBS=-lprotobuf], BITCOIN_QT_FAIL(libprotobuf not found)))\n+  if test x$use_qr != xno; then\n+    BITCOIN_QT_CHECK([AC_CHECK_LIB([qrencode], [main],[QR_LIBS=-lqrencode], [have_qrencode=no])])\n+    BITCOIN_QT_CHECK([AC_CHECK_HEADER([qrencode.h],, have_qrencode=no)])\n+  fi\n+fi\n \n-    BITCOIN_QT_CHECK(AC_CHECK_HEADER([QtPlugin],,BITCOIN_QT_FAIL(QtCore headers missing),))\n-    BITCOIN_QT_CHECK(AC_CHECK_HEADER([QApplication],, BITCOIN_QT_FAIL(QtGui headers missing),))\n-    BITCOIN_QT_CHECK(AC_CHECK_HEADER([QLocalSocket],, BITCOIN_QT_FAIL(QtNetwork headers missing),))\n+dnl univalue check\n+\n+if test x$system_univalue != xno ; then\n+  found_univalue=no\n+  if test x$use_pkgconfig = xyes; then\n+    : #NOP\n+    m4_ifdef(\n+      [PKG_CHECK_MODULES],\n+      [\n+        PKG_CHECK_MODULES([UNIVALUE],[libunivalue],[found_univalue=yes],[true])\n+      ]\n+    )\n+  else\n+    AC_CHECK_HEADER([univalue.h],[\n+      AC_CHECK_LIB([univalue],  [main],[\n+        UNIVALUE_LIBS=-lunivalue\n+        found_univalue=yes\n+      ],[true])\n+    ],[true])\n+  fi\n \n-  BITCOIN_QT_CHECK([\n-    if test x$use_tests = xyes; then\n-      TEMP_LIBS=\"$LIBS\"\n-      LIBS=\n-      if test x$qt_lib_path != x; then\n-        LIBS=\"-L$qt_lib_path\"\n-      fi\n-      AC_CHECK_LIB([QtTest],      [main],, have_qt_test=no)\n-      AC_CHECK_HEADER([QTest],, have_qt_test=no)\n-      QT_TEST_LIBS=\"$LIBS\"\n-      LIBS=\"$TEMP_LIBS\"\n-    fi\n-    if test x$use_dbus != xno; then\n-      TEMP_LIBS=\"$LIBS\"\n-      LIBS=\n-      if test x$qt_lib_path != x; then\n-        LIBS=\"-L$qt_lib_path\"\n-      fi\n-      AC_CHECK_LIB([QtDBus],      [main],, have_qt_dbus=no)\n-      AC_CHECK_HEADER([QtDBus],, have_qt_dbus=no)\n-      QT_DBUS_LIBS=\"$LIBS\"\n-      LIBS=\"$TEMP_LIBS\"\n-    fi\n-    CPPFLAGS=\"$TEMP_CPPFLAGS\"\n-    if test x$use_qr != xno; then\n-      AC_CHECK_LIB([qrencode], [main],, [have_qrencode=no])\n-      AC_CHECK_HEADER([qrencode.h],, have_qrencode=no)\n-    fi\n-  ])\n+  if test x$found_univalue = xyes ; then\n+    system_univalue=yes\n+  elif test x$system_univalue = xyes ; then\n+    AC_MSG_ERROR([univalue not found])\n+  else\n+    system_univalue=no\n+  fi\n fi\n \n-if test x$use_ipv6 = xyes; then\n-  dnl Check for ipv6 build requirements\n-  AC_MSG_CHECKING(for IPV6 build support)\n-  AC_TRY_LINK([\n-  #if defined(_WINDOWS)\n-  #include <winsock2.h>\n-  #else\n-  #include <sys/types.h>\n-  #include <sys/socket.h>\n-  #include <netinet/in.h>\n-  #endif\n-  ],[\n-  #if !defined(_WINDOWS)\n-  struct in6_addr ipv6Addr;\n-  struct sockaddr_in6 addr;\n-  #endif\n-  int temp = socket(AF_INET6, SOCK_STREAM, 0);],\n-  [AC_MSG_RESULT(yes); have_ipv6=yes; AC_DEFINE(HAVE_IPV6, 1, [Define this symbol if you have ipv6 build support])],\n-  [AC_MSG_RESULT(no)]; have_ipv6=no)\n+if test x$system_univalue = xno ; then\n+  UNIVALUE_CFLAGS='-I$(srcdir)/univalue/include'\n+  UNIVALUE_LIBS='univalue/libunivalue.la'\n+fi\n+AM_CONDITIONAL([EMBEDDED_UNIVALUE],[test x$system_univalue = xno])\n+AC_SUBST(UNIVALUE_CFLAGS)\n+AC_SUBST(UNIVALUE_LIBS)\n+\n+CXXFLAGS_TEMP=\"$CXXFLAGS\"\n+LIBS_TEMP=\"$LIBS\"\n+CXXFLAGS=\"$CXXFLAGS $SSL_CFLAGS $CRYPTO_CFLAGS\"\n+LIBS=\"$LIBS $SSL_LIBS $CRYPTO_LIBS\"\n+AC_CHECK_HEADER([openssl/ec.h],, AC_MSG_ERROR(OpenSSL ec header missing),)\n+CXXFLAGS=\"$CXXFLAGS_TEMP\"\n+LIBS=\"$LIBS_TEMP\"\n+\n+BITCOIN_QT_PATH_PROGS([PROTOC], [protoc],$protoc_bin_path)\n+\n+AC_MSG_CHECKING([whether to build bitcoind])\n+AM_CONDITIONAL([BUILD_BITCOIND], [test x$build_bitcoind = xyes])\n+AC_MSG_RESULT($build_bitcoind)\n+\n+AC_MSG_CHECKING([whether to build utils (bitcoin-cli bitcoin-tx)])\n+AM_CONDITIONAL([BUILD_BITCOIN_UTILS], [test x$build_bitcoin_utils = xyes])\n+AC_MSG_RESULT($build_bitcoin_utils)\n+\n+AC_MSG_CHECKING([whether to build libraries])\n+AM_CONDITIONAL([BUILD_BITCOIN_LIBS], [test x$build_bitcoin_libs = xyes])\n+if test x$build_bitcoin_libs = xyes; then\n+  AC_DEFINE(HAVE_CONSENSUS_LIB, 1, [Define this symbol if the consensus lib has been built])\n+  AC_CONFIG_FILES([libbitcoinconsensus.pc:libbitcoinconsensus.pc.in])\n fi\n+AC_MSG_RESULT($build_bitcoin_libs)\n+\n AC_LANG_POP\n \n if test \"x$use_ccache\" != \"xno\"; then\n-  AC_MSG_CHECKING(if ccache should be enabled)\n+  AC_MSG_CHECKING(if ccache should be used)\n   if test x$CCACHE = x; then\n     if test \"x$use_ccache\" = \"xyes\"; then\n       AC_MSG_ERROR([ccache not found.]);\n     else\n-      AC_MSG_NOTICE([ccache not found. Falling back to default CC])\n       use_ccache=no\n     fi\n   else\n@@ -592,95 +902,61 @@ if test \"x$use_ccache\" != \"xno\"; then\n   fi\n   AC_MSG_RESULT($use_ccache)\n fi\n+if test \"x$use_ccache\" = \"xyes\"; then\n+    AX_CHECK_PREPROC_FLAG([-Qunused-arguments],[CPPFLAGS=\"-Qunused-arguments $CPPFLAGS\"])\n+fi\n+\n+dnl enable wallet\n+AC_MSG_CHECKING([if wallet should be enabled])\n+if test x$enable_wallet != xno; then\n+  AC_MSG_RESULT(yes)\n+  AC_DEFINE_UNQUOTED([ENABLE_WALLET],[1],[Define to 1 to enable wallet functions])\n \n-dnl enable ipv6 support\n-AC_MSG_CHECKING([if ipv6 should be enabled])\n-if test x$have_ipv6 = xno; then\n-  if test x$use_ipv6 = xyes; then\n-     AC_MSG_ERROR(\"ipv6 requested but cannot be built. use --disable-ipv6\")\n-  fi\n-  AC_MSG_RESULT(no)\n else\n-  if test x$use_ipv6 = xyes; then\n-      AC_MSG_RESULT(yes)\n-      AC_DEFINE([USE_IPV6],[1],[Define if ipv6 support should be compiled in])\n-  else\n-      AC_MSG_RESULT(no)\n-  fi\n+  AC_MSG_RESULT(no)\n fi\n \n dnl enable upnp support\n-AC_MSG_CHECKING([if upnp should be enabled])\n+AC_MSG_CHECKING([whether to build with support for UPnP])\n if test x$have_miniupnpc = xno; then\n   if test x$use_upnp = xyes; then\n-     AC_MSG_ERROR(\"upnp requested but cannot be built. use --without-miniupnpc\")\n+     AC_MSG_ERROR(\"UPnP requested but cannot be built. use --without-miniupnpc\")\n   fi\n   AC_MSG_RESULT(no)\n else\n   if test x$use_upnp != xno; then\n     AC_MSG_RESULT(yes)\n-    AC_MSG_CHECKING([if upnp should be on by default])\n+    AC_MSG_CHECKING([whether to build with UPnP enabled by default])\n     use_upnp=yes\n     upnp_setting=0\n     if test x$use_upnp_default != xno; then\n       use_upnp_default=yes\n       upnp_setting=1\n     fi\n     AC_MSG_RESULT($use_upnp_default)\n-    AC_DEFINE_UNQUOTED([USE_UPNP],[$upnp_setting],[Define to 1 for upnp runtime support])\n+    AC_DEFINE_UNQUOTED([USE_UPNP],[$upnp_setting],[UPnP support not compiled if undefined, otherwise value (0 or 1) determines default state])\n     if test x$TARGET_OS = xwindows; then\n-      CPPFLAGS=\"$CPPFLAGS -DSTATICLIB\"\n+      MINIUPNPC_CPPFLAGS=\"-DSTATICLIB -DMINIUPNP_STATICLIB\"\n     fi\n   else\n     AC_MSG_RESULT(no)\n   fi\n fi\n \n-dnl enable qt support\n-AC_MSG_CHECKING([if qt should be enabled])\n-BITCOIN_QT_CHECK([\n-  use_qt=yes\n-  BUILD_QT=qt\n-  if test x$use_tests = xyes; then\n-    if test x$have_qt_test = xno; then\n-      AC_MSG_ERROR(\"libQtTest not found. Use --disable-tests or --without-qt.\")\n-    fi\n-  fi\n-  if test x$have_qt_dbus = xno;  then\n-    if test x$use_dbus = xyes; then\n-      AC_MSG_ERROR(\"libQtDBus not found. Install libQtDBus or remove --with-qtdbus.\")\n-    fi\n-    use_dbus=no\n-  fi\n-  if test x$XGETTEXT == x; then\n-    AC_MSG_WARN(\"xgettext is required to update qt translations\")\n-  fi\n-  if test x$LUPDATE == x; then\n-    AC_MSG_WARN(\"lupdate is required to update qt translations\")\n-  fi\n-],[\n-  use_qt=no\n-])\n-\n-AC_MSG_RESULT($use_qt)\n-\n dnl these are only used when qt is enabled\n-if test x$use_qt = xyes; then\n-\n+BUILD_TEST_QT=\"\"\n+if test x$bitcoin_enable_qt != xno; then\n   dnl enable dbus support\n-  AC_MSG_CHECKING([if dbus should be enabled])\n-  if test x$use_dbus != xno; then\n-    use_dbus=yes\n+  AC_MSG_CHECKING([whether to build GUI with support for D-Bus])\n+  if test x$bitcoin_enable_qt_dbus != xno; then\n     AC_DEFINE([USE_DBUS],[1],[Define if dbus support should be compiled in])\n-  else\n-    use_dbus=no\n   fi\n-  AC_MSG_RESULT($use_dbus)\n+  AC_MSG_RESULT($bitcoin_enable_qt_dbus)\n \n   dnl enable qr support\n-  AC_MSG_CHECKING([if qr should be enabled])\n+  AC_MSG_CHECKING([whether to build GUI with support for QR codes])\n   if test x$have_qrencode = xno; then\n-    if test x$use_qr == xyes; then\n+    if test x$use_qr = xyes; then\n      AC_MSG_ERROR(\"QR support requested but cannot be built. use --without-qrencode\")\n     fi\n     AC_MSG_RESULT(no)\n@@ -694,54 +970,147 @@ if test x$use_qt = xyes; then\n     fi\n   fi\n \n-  if test x$use_tests$have_qt_test = xyesyes; then\n-    BUILD_TEST_QT=\"test\"\n+  if test x$XGETTEXT = x; then\n+    AC_MSG_WARN(\"xgettext is required to update qt translations\")\n+  fi\n+\n+  AC_MSG_CHECKING([whether to build test_bitcoin-qt])\n+  if test x$use_gui_tests$bitcoin_enable_qt_test = xyesyes; then\n+    AC_MSG_RESULT([yes])\n+    BUILD_TEST_QT=\"yes\"\n+  else\n+    AC_MSG_RESULT([no])\n   fi\n fi\n \n+AM_CONDITIONAL([ENABLE_ZMQ], [test \"x$use_zmq\" = \"xyes\"])\n+\n+AC_MSG_CHECKING([whether to build test_bitcoin])\n if test x$use_tests = xyes; then\n-  BUILD_TEST=\"test\"\n+  AC_MSG_RESULT([yes])\n+  BUILD_TEST=\"yes\"\n+else\n+  AC_MSG_RESULT([no])\n+  BUILD_TEST=\"\"\n+fi\n+\n+AC_MSG_CHECKING([whether to reduce exports])\n+if test x$use_reduce_exports = xyes; then\n+  AC_MSG_RESULT([yes])\n+else\n+  AC_MSG_RESULT([no])\n+fi\n+\n+if test x$build_bitcoin_utils$build_bitcoin_libs$build_bitcoind$bitcoin_enable_qt$use_tests = xnonononono; then\n+  AC_MSG_ERROR([No targets! Please specify at least one of: --with-utils --with-libs --with-daemon --with-gui or --enable-tests])\n fi\n \n AM_CONDITIONAL([TARGET_DARWIN], [test x$TARGET_OS = xdarwin])\n+AM_CONDITIONAL([BUILD_DARWIN], [test x$BUILD_OS = xdarwin])\n AM_CONDITIONAL([TARGET_WINDOWS], [test x$TARGET_OS = xwindows])\n+AM_CONDITIONAL([ENABLE_WALLET],[test x$enable_wallet = xyes])\n+AM_CONDITIONAL([ENABLE_TESTS],[test x$BUILD_TEST = xyes])\n+AM_CONDITIONAL([ENABLE_QT],[test x$bitcoin_enable_qt = xyes])\n+AM_CONDITIONAL([ENABLE_QT_TESTS],[test x$BUILD_TEST_QT = xyes])\n+AM_CONDITIONAL([ENABLE_BENCH],[test x$use_bench = xyes])\n AM_CONDITIONAL([USE_QRCODE], [test x$use_qr = xyes])\n-AM_CONDITIONAL([USE_LCOV],[test x$use_lcov == xyes])\n+AM_CONDITIONAL([USE_LCOV],[test x$use_lcov = xyes])\n AM_CONDITIONAL([USE_COMPARISON_TOOL],[test x$use_comparison_tool != xno])\n AM_CONDITIONAL([USE_COMPARISON_TOOL_REORG_TESTS],[test x$use_comparison_tool_reorg_test != xno])\n+AM_CONDITIONAL([GLIBC_BACK_COMPAT],[test x$use_glibc_compat = xyes])\n+AM_CONDITIONAL([HARDEN],[test x$use_hardening = xyes])\n \n AC_DEFINE(CLIENT_VERSION_MAJOR, _CLIENT_VERSION_MAJOR, [Major version])\n AC_DEFINE(CLIENT_VERSION_MINOR, _CLIENT_VERSION_MINOR, [Minor version])\n AC_DEFINE(CLIENT_VERSION_REVISION, _CLIENT_VERSION_REVISION, [Build revision])\n AC_DEFINE(CLIENT_VERSION_BUILD, _CLIENT_VERSION_BUILD, [Version Build])\n AC_DEFINE(CLIENT_VERSION_IS_RELEASE, _CLIENT_VERSION_IS_RELEASE, [Version is release])\n-AC_DEFINE(COPYRIGHT_YEAR, _COPYRIGHT_YEAR, [Version is release])\n+AC_DEFINE(COPYRIGHT_YEAR, _COPYRIGHT_YEAR, [Copyright year])\n+AC_DEFINE(COPYRIGHT_HOLDERS, \"_COPYRIGHT_HOLDERS\", [Copyright holder(s) before %s replacement])\n+AC_DEFINE(COPYRIGHT_HOLDERS_SUBSTITUTION, \"_COPYRIGHT_HOLDERS_SUBSTITUTION\", [Replacement for %s in copyright holders string])\n+define(_COPYRIGHT_HOLDERS_FINAL, [patsubst(_COPYRIGHT_HOLDERS, [%s], [_COPYRIGHT_HOLDERS_SUBSTITUTION])])\n+AC_DEFINE(COPYRIGHT_HOLDERS_FINAL, \"_COPYRIGHT_HOLDERS_FINAL\", [Copyright holder(s)])\n AC_SUBST(CLIENT_VERSION_MAJOR, _CLIENT_VERSION_MAJOR)\n AC_SUBST(CLIENT_VERSION_MINOR, _CLIENT_VERSION_MINOR)\n AC_SUBST(CLIENT_VERSION_REVISION, _CLIENT_VERSION_REVISION)\n AC_SUBST(CLIENT_VERSION_BUILD, _CLIENT_VERSION_BUILD)\n AC_SUBST(CLIENT_VERSION_IS_RELEASE, _CLIENT_VERSION_IS_RELEASE)\n AC_SUBST(COPYRIGHT_YEAR, _COPYRIGHT_YEAR)\n-\n-\n+AC_SUBST(COPYRIGHT_HOLDERS, \"_COPYRIGHT_HOLDERS\")\n+AC_SUBST(COPYRIGHT_HOLDERS_SUBSTITUTION, \"_COPYRIGHT_HOLDERS_SUBSTITUTION\")\n+AC_SUBST(COPYRIGHT_HOLDERS_FINAL, \"_COPYRIGHT_HOLDERS_FINAL\")\n+AC_SUBST(BITCOIN_DAEMON_NAME)\n+AC_SUBST(BITCOIN_GUI_NAME)\n+AC_SUBST(BITCOIN_CLI_NAME)\n+AC_SUBST(BITCOIN_TX_NAME)\n+\n+AC_SUBST(RELDFLAGS)\n+AC_SUBST(HARDENED_CXXFLAGS)\n+AC_SUBST(HARDENED_CPPFLAGS)\n+AC_SUBST(HARDENED_LDFLAGS)\n+AC_SUBST(PIC_FLAGS)\n+AC_SUBST(PIE_FLAGS)\n+AC_SUBST(LIBTOOL_APP_LDFLAGS)\n AC_SUBST(USE_UPNP)\n AC_SUBST(USE_QRCODE)\n-AC_SUBST(USE_IPV6)\n-AC_SUBST(INCLUDES)\n AC_SUBST(BOOST_LIBS)\n-AC_SUBST(MOC_DEFS)\n-AC_SUBST(QT_INCLUDES)\n-AC_SUBST(QT_TEST_LIBS)\n-AC_SUBST(QT_LIBS)\n-AC_SUBST(QT_DBUS_LIBS)\n-AC_SUBST(QT_DBUS_INCLUDES)\n-AC_SUBST(QT_TEST_INCLUDES)\n AC_SUBST(TESTDEFS)\n AC_SUBST(LEVELDB_TARGET_FLAGS)\n-AC_SUBST(BUILD_QT)\n-AC_SUBST(BUILD_TEST)\n-AC_SUBST(BUILD_TEST_QT)\n-AC_CONFIG_FILES([Makefile src/Makefile src/test/Makefile src/qt/Makefile src/qt/test/Makefile share/setup.nsi share/qt/Info.plist])\n+AC_SUBST(MINIUPNPC_CPPFLAGS)\n+AC_SUBST(MINIUPNPC_LIBS)\n+AC_CONFIG_FILES([Makefile src/Makefile share/setup.nsi share/qt/Info.plist src/test/buildenv.py])\n AC_CONFIG_FILES([qa/pull-tester/run-bitcoind-for-test.sh],[chmod +x qa/pull-tester/run-bitcoind-for-test.sh])\n-AC_CONFIG_FILES([qa/pull-tester/build-tests.sh],[chmod +x qa/pull-tester/build-tests.sh])\n+AC_CONFIG_FILES([qa/pull-tester/tests_config.py],[chmod +x qa/pull-tester/tests_config.py])\n+AC_CONFIG_FILES([contrib/devtools/split-debug.sh],[chmod +x contrib/devtools/split-debug.sh])\n+AC_CONFIG_LINKS([qa/pull-tester/rpc-tests.py:qa/pull-tester/rpc-tests.py])\n+\n+dnl boost's m4 checks do something really nasty: they export these vars. As a\n+dnl result, they leak into secp256k1's configure and crazy things happen.\n+dnl Until this is fixed upstream and we've synced, we'll just un-export them.\n+CPPFLAGS_TEMP=\"$CPPFLAGS\"\n+unset CPPFLAGS\n+CPPFLAGS=\"$CPPFLAGS_TEMP\"\n+\n+LDFLAGS_TEMP=\"$LDFLAGS\"\n+unset LDFLAGS\n+LDFLAGS=\"$LDFLAGS_TEMP\"\n+\n+LIBS_TEMP=\"$LIBS\"\n+unset LIBS\n+LIBS=\"$LIBS_TEMP\"\n+\n+PKGCONFIG_PATH_TEMP=\"$PKG_CONFIG_PATH\"\n+unset PKG_CONFIG_PATH\n+PKG_CONFIG_PATH=\"$PKGCONFIG_PATH_TEMP\"\n+\n+PKGCONFIG_LIBDIR_TEMP=\"$PKG_CONFIG_LIBDIR\"\n+unset PKG_CONFIG_LIBDIR\n+PKG_CONFIG_LIBDIR=\"$PKGCONFIG_LIBDIR_TEMP\"\n+\n+if test x$system_univalue = xno; then\n+  AC_CONFIG_SUBDIRS([src/univalue])\n+fi\n+\n+ac_configure_args=\"${ac_configure_args} --disable-shared --with-pic --with-bignum=no --enable-module-recovery\"\n+AC_CONFIG_SUBDIRS([src/secp256k1])\n+\n AC_OUTPUT\n+\n+dnl Taken from https://wiki.debian.org/RpathIssue\n+case $host in\n+   *-*-linux-gnu)\n+     AC_MSG_RESULT([Fixing libtool for -rpath problems.])\n+     sed < libtool > libtool-2 \\\n+     's/^hardcode_libdir_flag_spec.*$'/'hardcode_libdir_flag_spec=\" -D__LIBTOOL_IS_A_FOOL__ \"/'\n+     mv libtool-2 libtool\n+     chmod 755 libtool\n+   ;;\n+esac\n+\n+dnl Replace the BUILDDIR path with the correct Windows path if compiling on Native Windows\n+case ${OS} in\n+   *Windows*)\n+     sed  's/BUILDDIR=\"\\/\\([[a-z]]\\)/BUILDDIR=\"\\1:/'  qa/pull-tester/tests_config.py > qa/pull-tester/tests_config-2.py\n+     mv qa/pull-tester/tests_config-2.py qa/pull-tester/tests_config.py\n+   ;;\n+esac"
      },
      {
        "sha": "a23b197cc61220842acd971b429807d7ac92a83e",
        "filename": "contrib/README.md",
        "status": "modified",
        "additions": 30,
        "deletions": 29,
        "changes": 59,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/README.md?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -1,54 +1,55 @@\n-Python Tools\n+Wallet Tools\n ---------------------\n \n-### [BitRPC](/contrib/bitrpc) ###\n-Allows for sending of all standard Bitcoin commands via RPC rather than as command line args.\n-\n-### [PyMiner](/contrib/pyminer) ###\n-\n-This is a 'getwork' CPU mining client for Bitcoin. It is pure-python, and therefore very, very slow.  The purpose is to provide a reference implementation of a miner, for study.\n-\n ### [SpendFrom](/contrib/spendfrom) ###\n \n Use the raw transactions API to send coins received on a particular\n address (or addresses).\n \n-### WalletTools\n-Removed. Please see [/contrib/bitrpc](/contrib/bitrpc).\n-\n Repository Tools\n ---------------------\n \n+### [Developer tools](/contrib/devtools) ###\n+Specific tools for developers working on this repository.\n+Contains the script `github-merge.py` for merging github pull requests securely and signing them using GPG.\n+\n+### [Verify-Commits](/contrib/verify-commits) ###\n+Tool to verify that every merge commit was signed by a developer using the above `github-merge.py` script.\n+\n+### [Linearize](/contrib/linearize) ###\n+Construct a linear, no-fork, best version of the blockchain.\n+\n+### [Qos](/contrib/qos) ###\n+\n+A Linux bash script that will set up traffic control (tc) to limit the outgoing bandwidth for connections to the Bitcoin network. This means one can have an always-on bitcoind instance running, and another local bitcoind/bitcoin-qt instance which connects to this node and receives blocks from it.\n+\n+### [Seeds](/contrib/seeds) ###\n+Utility to generate the pnSeed[] array that is compiled into the client.\n+\n+Build Tools and Keys\n+---------------------\n+\n ### [Debian](/contrib/debian) ###\n Contains files used to package bitcoind/bitcoin-qt\n for Debian-based Linux systems. If you compile bitcoind/bitcoin-qt yourself, there are some useful files here.\n \n ### [Gitian-descriptors](/contrib/gitian-descriptors) ###\n-Gavin's notes on getting gitian builds up and running using KVM.\n+Notes on getting Gitian builds up and running using KVM.\n \n-### [Gitian-downloader](/contrib/gitian-downloader)\n-Various PGP files of core developers. \n-\n-### [Linearize](/contrib/linearize) ###\n-Construct a linear, no-fork, best version of the blockchain.\n+### [Gitian-keys](/contrib/gitian-keys)\n+PGP keys used for signing Bitcoin Core [Gitian release](/doc/release-process.md) results.\n \n ### [MacDeploy](/contrib/macdeploy) ###\n Scripts and notes for Mac builds. \n \n-### [Qos](/contrib/qos) ###\n+### [RPM](/contrib/rpm) ###\n+RPM spec file for building bitcoin-core on RPM based distributions\n \n-A Linux bash script that will set up tc to limit the outgoing bandwidth for connections to the Bitcoin network. This means one can have an always-on bitcoind instance running, and another local bitcoind/bitcoin-qt instance which connects to this node and receives blocks from it.\n-\n-### [Seeds](/contrib/seeds) ###\n-Utility to generate the pnSeed[] array that is compiled into the client.\n+Test and Verify Tools \n+---------------------\n \n ### [TestGen](/contrib/testgen) ###\n Utilities to generate test vectors for the data-driven Bitcoin tests.\n \n-### [Test Patches](/contrib/test-patches) ###\n-These patches are applied when the automated pull-tester\n-tests each pull and when master is tested using jenkins.\n-\n-### [Verify SF Binaries](/contrib/verifysfbinaries) ###\n-This script attempts to download and verify the signature file SHA256SUMS.asc from SourceForge.\n-\n+### [Verify Binaries](/contrib/verifybinaries) ###\n+This script attempts to download and verify the signature file SHA256SUMS.asc from bitcoin.org."
      },
      {
        "sha": "b8133bf78914be68a33d881223da861820fdb05e",
        "filename": "contrib/bitcoin-qt.pro",
        "status": "modified",
        "additions": 14,
        "deletions": 12,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/bitcoin-qt.pro",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/bitcoin-qt.pro",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/bitcoin-qt.pro?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -1,19 +1,21 @@\n FORMS += \\\n-    ../src/qt/forms/transactiondescdialog.ui \\\n-    ../src/qt/forms/signverifymessagedialog.ui \\\n-    ../src/qt/forms/sendcoinsentry.ui \\\n-    ../src/qt/forms/sendcoinsdialog.ui \\\n-    ../src/qt/forms/rpcconsole.ui \\\n-    ../src/qt/forms/overviewpage.ui \\\n-    ../src/qt/forms/optionsdialog.ui \\\n-    ../src/qt/forms/intro.ui \\\n-    ../src/qt/forms/editaddressdialog.ui \\\n-    ../src/qt/forms/askpassphrasedialog.ui \\\n-    ../src/qt/forms/addressbookpage.ui \\\n     ../src/qt/forms/aboutdialog.ui \\\n+    ../src/qt/forms/addressbookpage.ui \\\n+    ../src/qt/forms/askpassphrasedialog.ui \\\n+    ../src/qt/forms/coincontroldialog.ui \\\n+    ../src/qt/forms/editaddressdialog.ui \\\n+    ../src/qt/forms/helpmessagedialog.ui \\\n+    ../src/qt/forms/intro.ui \\\n+    ../src/qt/forms/openuridialog.ui \\\n+    ../src/qt/forms/optionsdialog.ui \\\n+    ../src/qt/forms/overviewpage.ui \\\n     ../src/qt/forms/receivecoinsdialog.ui \\\n     ../src/qt/forms/receiverequestdialog.ui \\\n-    ../src/qt/forms/openuridialog.ui\n+    ../src/qt/forms/debugwindow.ui \\\n+    ../src/qt/forms/sendcoinsdialog.ui \\\n+    ../src/qt/forms/sendcoinsentry.ui \\\n+    ../src/qt/forms/signverifymessagedialog.ui \\\n+    ../src/qt/forms/transactiondescdialog.ui \\\n \n RESOURCES += \\\n     ../src/qt/bitcoin.qrc"
      },
      {
        "sha": "1338d2f2b5c3b5dc48a36f93c5afbac330b9a065",
        "filename": "contrib/bitcoind.bash-completion",
        "status": "modified",
        "additions": 39,
        "deletions": 9,
        "changes": 48,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/bitcoind.bash-completion",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/bitcoind.bash-completion",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/bitcoind.bash-completion?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -1,6 +1,6 @@\n-# bash programmable completion for bitcoind(1)\n-# Copyright (c) 2012 Christian von Roques <roques@mti.ag>\n-# Distributed under the MIT/X11 software license, see the accompanying\n+# bash programmable completion for bitcoind(1) and bitcoin-cli(1)\n+# Copyright (c) 2012,2014 Christian von Roques <roques@mti.ag>\n+# Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n have bitcoind && {\n@@ -37,9 +37,39 @@ _bitcoind() {\n     COMPREPLY=()\n     _get_comp_words_by_ref -n = cur prev words cword\n \n+    if ((cword > 4)); then\n+        case ${words[cword-4]} in\n+            listtransactions)\n+                COMPREPLY=( $( compgen -W \"true false\" -- \"$cur\" ) )\n+                return 0\n+                ;;\n+            signrawtransaction)\n+                COMPREPLY=( $( compgen -W \"ALL NONE SINGLE ALL|ANYONECANPAY NONE|ANYONECANPAY SINGLE|ANYONECANPAY\" -- \"$cur\" ) )\n+                return 0\n+                ;;\n+        esac\n+    fi\n+\n+    if ((cword > 3)); then\n+        case ${words[cword-3]} in\n+            addmultisigaddress)\n+                _bitcoin_accounts\n+                return 0\n+                ;;\n+            getbalance|gettxout|importaddress|importprivkey|listreceivedbyaccount|listreceivedbyaddress|listsinceblock)\n+                COMPREPLY=( $( compgen -W \"true false\" -- \"$cur\" ) )\n+                return 0\n+                ;;\n+        esac\n+    fi\n+\n     if ((cword > 2)); then\n         case ${words[cword-2]} in\n-            listreceivedbyaccount|listreceivedbyaddress)\n+            addnode)\n+                COMPREPLY=( $( compgen -W \"add remove onetry\" -- \"$cur\" ) )\n+                return 0\n+                ;;\n+            getblock|getrawtransaction|gettransaction|listaccounts|listreceivedbyaccount|listreceivedbyaddress|sendrawtransaction)\n                 COMPREPLY=( $( compgen -W \"true false\" -- \"$cur\" ) )\n                 return 0\n                 ;;\n@@ -51,11 +81,11 @@ _bitcoind() {\n     fi\n \n     case \"$prev\" in\n-        backupwallet)\n+        backupwallet|dumpwallet|importwallet)\n             _filedir\n             return 0\n             ;;\n-        setgenerate)\n+        getmempool|lockunspent|setgenerate)\n             COMPREPLY=( $( compgen -W \"true false\" -- \"$cur\" ) )\n             return 0\n             ;;\n@@ -66,7 +96,7 @@ _bitcoind() {\n     esac\n \n     case \"$cur\" in\n-        -conf=*|-pid=*|-rpcsslcertificatechainfile=*|-rpcsslprivatekeyfile=*)\n+        -conf=*|-pid=*|-loadblock=*|-wallet=*)\n             cur=\"${cur#*=}\"\n             _filedir\n             return 0\n@@ -89,7 +119,7 @@ _bitcoind() {\n \n             # only parse help if senseful\n             if [[ -z \"$cur\" || \"$cur\" =~ ^[a-z] ]]; then\n-                commands=$(_bitcoin_rpc help 2>/dev/null | awk '{ print $1; }')\n+                commands=$(_bitcoin_rpc help 2>/dev/null | awk '$1 ~ /^[a-z]/ { print $1; }')\n             fi\n \n             COMPREPLY=( $( compgen -W \"$helpopts $commands\" -- \"$cur\" ) )\n@@ -103,7 +133,7 @@ _bitcoind() {\n     esac\n }\n \n-complete -F _bitcoind bitcoind\n+complete -F _bitcoind bitcoind bitcoin-cli\n }\n \n # Local variables:"
      },
      {
        "sha": "f5ef2f0405a941e2c9ca8c4c1178a5a97a9d590e",
        "filename": "contrib/bitrpc/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 8,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d980f9b7d687a1e60eecf3691b592d9806a30f4a/contrib/bitrpc/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d980f9b7d687a1e60eecf3691b592d9806a30f4a/contrib/bitrpc/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/bitrpc/README.md?ref=d980f9b7d687a1e60eecf3691b592d9806a30f4a",
        "patch": "@@ -1,8 +0,0 @@\n-### BitRPC\n-Allows for sending of all standard Bitcoin commands via RPC rather than as command line args.\n-\n-### Looking for Wallet Tools?\n-BitRPC.py is able to do the exact same thing as `walletchangepass.py` and `walletunlock.py`. Their respective commands in BitRPC.py are:\n-\n-\tbitrpc.py walletpassphrasechange\n-\tbitrpc.py walletpassphrase\n\\ No newline at end of file"
      },
      {
        "sha": "b02b2991772e6e6ca73e9767317ea69bc34dbf75",
        "filename": "contrib/bitrpc/bitrpc.py",
        "status": "removed",
        "additions": 0,
        "deletions": 324,
        "changes": 324,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d980f9b7d687a1e60eecf3691b592d9806a30f4a/contrib/bitrpc/bitrpc.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d980f9b7d687a1e60eecf3691b592d9806a30f4a/contrib/bitrpc/bitrpc.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/bitrpc/bitrpc.py?ref=d980f9b7d687a1e60eecf3691b592d9806a30f4a",
        "patch": "@@ -1,324 +0,0 @@\n-from jsonrpc import ServiceProxy\n-import sys\n-import string\n-\n-# ===== BEGIN USER SETTINGS =====\n-# if you do not set these you will be prompted for a password for every command\n-rpcuser = \"\"\n-rpcpass = \"\"\n-# ====== END USER SETTINGS ======\n-\n-\n-if rpcpass == \"\":\n-\taccess = ServiceProxy(\"http://127.0.0.1:8332\")\n-else:\n-\taccess = ServiceProxy(\"http://\"+rpcuser+\":\"+rpcpass+\"@127.0.0.1:8332\")\n-cmd = sys.argv[1].lower()\n-\n-if cmd == \"backupwallet\":\n-\ttry:\n-\t\tpath = raw_input(\"Enter destination path/filename: \")\n-\t\tprint access.backupwallet(path)\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"getaccount\":\n-\ttry:\n-\t\taddr = raw_input(\"Enter a Bitcoin address: \")\n-\t\tprint access.getaccount(addr)\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"getaccountaddress\":\n-\ttry:\n-\t\tacct = raw_input(\"Enter an account name: \")\n-\t\tprint access.getaccountaddress(acct)\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"getaddressesbyaccount\":\n-\ttry:\n-\t\tacct = raw_input(\"Enter an account name: \")\n-\t\tprint access.getaddressesbyaccount(acct)\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"getbalance\":\n-\ttry:\n-\t\tacct = raw_input(\"Enter an account (optional): \")\n-\t\tmc = raw_input(\"Minimum confirmations (optional): \")\n-\t\ttry:\n-\t\t\tprint access.getbalance(acct, mc)\n-\t\texcept:\n-\t\t\tprint access.getbalance()\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"getblockbycount\":\n-\ttry:\n-\t\theight = raw_input(\"Height: \")\n-\t\tprint access.getblockbycount(height)\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"getblockcount\":\n-\ttry:\n-\t\tprint access.getblockcount()\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"getblocknumber\":\n-\ttry:\n-\t\tprint access.getblocknumber()\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"getconnectioncount\":\n-\ttry:\n-\t\tprint access.getconnectioncount()\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"getdifficulty\":\n-\ttry:\n-\t\tprint access.getdifficulty()\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"getgenerate\":\n-\ttry:\n-\t\tprint access.getgenerate()\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"gethashespersec\":\n-\ttry:\n-\t\tprint access.gethashespersec()\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"getinfo\":\n-\ttry:\n-\t\tprint access.getinfo()\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"getnewaddress\":\n-\ttry:\n-\t\tacct = raw_input(\"Enter an account name: \")\n-\t\ttry:\n-\t\t\tprint access.getnewaddress(acct)\n-\t\texcept:\n-\t\t\tprint access.getnewaddress()\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"getreceivedbyaccount\":\n-\ttry:\n-\t\tacct = raw_input(\"Enter an account (optional): \")\n-\t\tmc = raw_input(\"Minimum confirmations (optional): \")\n-\t\ttry:\n-\t\t\tprint access.getreceivedbyaccount(acct, mc)\n-\t\texcept:\n-\t\t\tprint access.getreceivedbyaccount()\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"getreceivedbyaddress\":\n-\ttry:\n-\t\taddr = raw_input(\"Enter a Bitcoin address (optional): \")\n-\t\tmc = raw_input(\"Minimum confirmations (optional): \")\n-\t\ttry:\n-\t\t\tprint access.getreceivedbyaddress(addr, mc)\n-\t\texcept:\n-\t\t\tprint access.getreceivedbyaddress()\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"gettransaction\":\n-\ttry:\n-\t\ttxid = raw_input(\"Enter a transaction ID: \")\n-\t\tprint access.gettransaction(txid)\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"getwork\":\n-\ttry:\n-\t\tdata = raw_input(\"Data (optional): \")\n-\t\ttry:\n-\t\t\tprint access.gettransaction(data)\n-\t\texcept:\n-\t\t\tprint access.gettransaction()\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"help\":\n-\ttry:\n-\t\tcmd = raw_input(\"Command (optional): \")\n-\t\ttry:\n-\t\t\tprint access.help(cmd)\n-\t\texcept:\n-\t\t\tprint access.help()\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"listaccounts\":\n-\ttry:\n-\t\tmc = raw_input(\"Minimum confirmations (optional): \")\n-\t\ttry:\n-\t\t\tprint access.listaccounts(mc)\n-\t\texcept:\n-\t\t\tprint access.listaccounts()\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"listreceivedbyaccount\":\n-\ttry:\n-\t\tmc = raw_input(\"Minimum confirmations (optional): \")\n-\t\tincemp = raw_input(\"Include empty? (true/false, optional): \")\n-\t\ttry:\n-\t\t\tprint access.listreceivedbyaccount(mc, incemp)\n-\t\texcept:\n-\t\t\tprint access.listreceivedbyaccount()\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"listreceivedbyaddress\":\n-\ttry:\n-\t\tmc = raw_input(\"Minimum confirmations (optional): \")\n-\t\tincemp = raw_input(\"Include empty? (true/false, optional): \")\n-\t\ttry:\n-\t\t\tprint access.listreceivedbyaddress(mc, incemp)\n-\t\texcept:\n-\t\t\tprint access.listreceivedbyaddress()\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"listtransactions\":\n-\ttry:\n-\t\tacct = raw_input(\"Account (optional): \")\n-\t\tcount = raw_input(\"Number of transactions (optional): \")\n-\t\tfrm = raw_input(\"Skip (optional):\")\n-\t\ttry:\n-\t\t\tprint access.listtransactions(acct, count, frm)\n-\t\texcept:\n-\t\t\tprint access.listtransactions()\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"move\":\n-\ttry:\n-\t\tfrm = raw_input(\"From: \")\n-\t\tto = raw_input(\"To: \")\n-\t\tamt = raw_input(\"Amount:\")\n-\t\tmc = raw_input(\"Minimum confirmations (optional): \")\n-\t\tcomment = raw_input(\"Comment (optional): \")\n-\t\ttry:\n-\t\t\tprint access.move(frm, to, amt, mc, comment)\n-\t\texcept:\n-\t\t\tprint access.move(frm, to, amt)\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"sendfrom\":\n-\ttry:\n-\t\tfrm = raw_input(\"From: \")\n-\t\tto = raw_input(\"To: \")\n-\t\tamt = raw_input(\"Amount:\")\n-\t\tmc = raw_input(\"Minimum confirmations (optional): \")\n-\t\tcomment = raw_input(\"Comment (optional): \")\n-\t\tcommentto = raw_input(\"Comment-to (optional): \")\n-\t\ttry:\n-\t\t\tprint access.sendfrom(frm, to, amt, mc, comment, commentto)\n-\t\texcept:\n-\t\t\tprint access.sendfrom(frm, to, amt)\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"sendmany\":\n-\ttry:\n-\t\tfrm = raw_input(\"From: \")\n-\t\tto = raw_input(\"To (in format address1:amount1,address2:amount2,...): \")\n-\t\tmc = raw_input(\"Minimum confirmations (optional): \")\n-\t\tcomment = raw_input(\"Comment (optional): \")\n-\t\ttry:\n-\t\t\tprint access.sendmany(frm,to,mc,comment)\n-\t\texcept:\n-\t\t\tprint access.sendmany(frm,to)\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"sendtoaddress\":\n-\ttry:\n-\t\tto = raw_input(\"To (in format address1:amount1,address2:amount2,...): \")\n-\t\tamt = raw_input(\"Amount:\")\n-\t\tcomment = raw_input(\"Comment (optional): \")\n-\t\tcommentto = raw_input(\"Comment-to (optional): \")\n-\t\ttry:\n-\t\t\tprint access.sendtoaddress(to,amt,comment,commentto)\n-\t\texcept:\n-\t\t\tprint access.sendtoaddress(to,amt)\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"setaccount\":\n-\ttry:\n-\t\taddr = raw_input(\"Address: \")\n-\t\tacct = raw_input(\"Account:\")\n-\t\tprint access.setaccount(addr,acct)\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"setgenerate\":\n-\ttry:\n-\t\tgen= raw_input(\"Generate? (true/false): \")\n-\t\tcpus = raw_input(\"Max processors/cores (-1 for unlimited, optional):\")\n-\t\ttry:\n-\t\t\tprint access.setgenerate(gen, cpus)\n-\t\texcept:\n-\t\t\tprint access.setgenerate(gen)\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"settxfee\":\n-\ttry:\n-\t\tamt = raw_input(\"Amount:\")\n-\t\tprint access.settxfee(amt)\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"stop\":\n-\ttry:\n-\t\tprint access.stop()\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"validateaddress\":\n-\ttry:\n-\t\taddr = raw_input(\"Address: \")\n-\t\tprint access.validateaddress(addr)\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"walletpassphrase\":\n-\ttry:\n-\t\tpwd = raw_input(\"Enter wallet passphrase: \")\n-\t\taccess.walletpassphrase(pwd, 60)\n-\t\tprint \"\\n---Wallet unlocked---\\n\"\n-\texcept:\n-\t\tprint \"\\n---An error occurred---\\n\"\n-\n-elif cmd == \"walletpassphrasechange\":\n-\ttry:\n-\t\tpwd = raw_input(\"Enter old wallet passphrase: \")\n-\t\tpwd2 = raw_input(\"Enter new wallet passphrase: \")\n-\t\taccess.walletpassphrasechange(pwd, pwd2)\n-\t\tprint\n-\t\tprint \"\\n---Passphrase changed---\\n\"\n-\texcept:\n-\t\tprint\n-\t\tprint \"\\n---An error occurred---\\n\"\n-\t\tprint\n-\n-else:\n-\tprint \"Command not found or not supported\"\n\\ No newline at end of file"
      },
      {
        "sha": "61e1aca6ad0ce17519af59f6da4afdd9521b79a8",
        "filename": "contrib/debian/bitcoin-qt.desktop",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/debian/bitcoin-qt.desktop",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/debian/bitcoin-qt.desktop",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoin-qt.desktop?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -4,9 +4,9 @@ Name=Bitcoin\n Comment=Bitcoin P2P Cryptocurrency\n Comment[fr]=Bitcoin, monnaie virtuelle cryptographique pair \u00e0 pair\n Comment[tr]=Bitcoin, e\u015ften e\u015fe kriptografik sanal para birimi\n-Exec=/usr/bin/bitcoin-qt %u\n+Exec=bitcoin-qt %u\n Terminal=false\n Type=Application\n-Icon=/usr/share/pixmaps/bitcoin128.png\n+Icon=bitcoin128\n MimeType=x-scheme-handler/bitcoin;\n Categories=Office;Finance;"
      },
      {
        "sha": "e0b32373be68d74e075a779f083b3dededc574d7",
        "filename": "contrib/debian/bitcoin-qt.install",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/debian/bitcoin-qt.install",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/debian/bitcoin-qt.install",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoin-qt.install?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -1,4 +1,4 @@\n-bitcoin-qt usr/bin\n+usr/local/bin/bitcoin-qt usr/bin\n share/pixmaps/bitcoin32.xpm usr/share/pixmaps\n share/pixmaps/bitcoin16.xpm usr/share/pixmaps\n share/pixmaps/bitcoin128.png usr/share/pixmaps"
      },
      {
        "sha": "2c21052a6876b4a0f94b79858ae1d164cf179b21",
        "filename": "contrib/debian/bitcoin-tx.install",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/debian/bitcoin-tx.install",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/debian/bitcoin-tx.install",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoin-tx.install?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1 @@\n+usr/local/bin/bitcoin-tx usr/bin"
      },
      {
        "sha": "798ea851f6ef8a01e19984221efd327625fda92d",
        "filename": "contrib/debian/bitcoind.install",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/debian/bitcoind.install",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/debian/bitcoind.install",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoind.install?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -1 +1,2 @@\n-src/bitcoind usr/bin\n+usr/local/bin/bitcoind usr/bin\n+usr/local/bin/bitcoin-cli usr/bin"
      },
      {
        "sha": "6d3e683855018ec721d97853b0d5c9b90edd5c35",
        "filename": "contrib/debian/bitcoind.manpages",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/debian/bitcoind.manpages",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/debian/bitcoind.manpages",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoind.manpages?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -1,2 +1,3 @@\n debian/manpages/bitcoind.1\n debian/manpages/bitcoin.conf.5\n+debian/manpages/bitcoin-cli.1"
      },
      {
        "sha": "110bfe03effcdad2f353ff9746ab9589e4a7c08e",
        "filename": "contrib/debian/changelog",
        "status": "modified",
        "additions": 71,
        "deletions": 3,
        "changes": 74,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/debian/changelog",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/debian/changelog",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/changelog?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -1,3 +1,71 @@\n+bitcoin (0.11.0-precise1) precise; urgency=medium\n+\n+  * New upstream release.\n+\n+ -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 14 Jul 2015 14:39:00 -1000\n+\n+bitcoin (0.10.2-precise1) precise; urgency=medium\n+\n+  * New upstream release.\n+\n+ -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Mon, 29 Jun 2015 17:33:00 -1000\n+\n+bitcoin (0.10.1-precise3) precise; urgency=medium\n+\n+  * Fix build dep (include python).\n+\n+ -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 5 May 2015 09:28:00 -1000\n+\n+bitcoin (0.10.1-precise2) precise; urgency=medium\n+\n+  * Fix miniupnpc dep.\n+\n+ -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 5 May 2015 00:33:00 -1000\n+\n+bitcoin (0.10.1-precise1) precise; urgency=medium\n+\n+  * New upstream release.\n+\n+ -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 5 May 2015 00:07:00 -1000\n+\n+bitcoin (0.10.0-precise1) precise; urgency=medium\n+\n+  * New upstream releases.\n+\n+ -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Wed, 18 Feb 2015 13:22:00 -1000\n+\n+bitcoin (0.9.4-precise1) precise; urgency=high\n+\n+  * New upstream releases.\n+\n+ -- Matt Corallo (laptop - only while traveling) <matt@mattcorallo.com>  Mon, 12 Jan 2015 23:30:00 -1000\n+\n+bitcoin (0.9.3-precise1) precise; urgency=medium\n+\n+  * New upstream releases.\n+\n+ -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Fri, 26 Sep 2014 12:01:00 -0700\n+\n+bitcoin (0.9.1-precise1) precise; urgency=medium\n+\n+  * New upstream release.\n+  * Backport pull #4019\n+\n+ -- Matt Corallo <matt@bluematt.me>  Sat, 19 Apr 2014 17:29:00 -0400\n+\n+bitcoin (0.9.0-precise1) precise; urgency=medium\n+\n+  * New upstream release.\n+\n+ -- Matt Corallo <matt@bluematt.me>  Thu, 20 Mar 2014 13:10:00 -0400\n+\n+bitcoin (0.8.6-precise1) precise; urgency=medium\n+\n+  * New upstream release.\n+  * Make .desktop paths non-fixed (suggested by prusnak@github)\n+\n+ -- Matt Corallo <matt@bluematt.me>  Fri, 13 Dec 2013 13:31:00 -0400\n+\n bitcoin (0.8.5-precise1) precise; urgency=medium\n \n   * New upstream release.\n@@ -111,7 +179,7 @@ bitcoin (0.5.3-natty0) natty; urgency=low\n bitcoin (0.5.2-natty1) natty; urgency=low\n \n   * Remove mentions on anonymity in package descriptions and manpage.\n-    These should never have been there, bitcoin isnt anonymous without\n+    These should never have been there, bitcoin isn't anonymous without\n     a ton of work that virtually no users will ever be willing and\n     capable of doing\n \n@@ -152,7 +220,7 @@ bitcoin (0.5.0~rc1-natty1) natty; urgency=low\n \n   * Add test_bitcoin to build test\n   * Fix clean\n-  * Remove uneccessary build-dependancies\n+  * Remove unnecessary build-dependancies\n \n  -- Matt Corallo <matt@bluematt.me>  Wed, 26 Oct 2011 14:37:18 -0400\n \n@@ -312,7 +380,7 @@ bitcoin (0.3.20.01~dfsg-1) unstable; urgency=low\n \n bitcoin (0.3.19~dfsg-6) unstable; urgency=low\n \n-  * Fix override agressive optimizations.\n+  * Fix override aggressive optimizations.\n   * Fix tighten build-dependencies to really fit backporting to Lenny:\n     + Add fallback build-dependency on libdb4.6++-dev.\n     + Tighten unversioned Boost build-dependencies to recent versions,"
      },
      {
        "sha": "fce6bc0118f177cd58369825ec129bcd1fed819d",
        "filename": "contrib/debian/control",
        "status": "modified",
        "additions": 34,
        "deletions": 22,
        "changes": 56,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/debian/control",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/debian/control",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/control?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -5,51 +5,63 @@ Maintainer: Jonas Smedegaard <dr@jones.dk>\n Uploaders: Micah Anderson <micah@debian.org>\n Build-Depends: debhelper,\n  devscripts,\n+ automake,\n+ libtool,\n  bash-completion,\n  libboost-system-dev (>> 1.35) | libboost-system1.35-dev,\n  libdb4.8++-dev,\n  libssl-dev,\n  pkg-config,\n- libminiupnpc8-dev,\n+ libminiupnpc8-dev | libminiupnpc-dev (>> 1.6),\n  libboost-filesystem-dev (>> 1.35) | libboost-filesystem1.35-dev,\n  libboost-program-options-dev (>> 1.35) | libboost-program-options1.35-dev,\n  libboost-thread-dev (>> 1.35) | libboost-thread1.35-dev,\n  libboost-test-dev (>> 1.35) | libboost-test1.35-dev,\n  qt4-qmake,\n  libqt4-dev,\n- libqrencode-dev\n+ libqrencode-dev,\n+ libprotobuf-dev, protobuf-compiler,\n+ python\n Standards-Version: 3.9.2\n-Homepage: http://www.bitcoin.org/\n+Homepage: https://bitcoincore.org/\n Vcs-Git: git://github.com/bitcoin/bitcoin.git\n-Vcs-Browser: http://github.com/bitcoin/bitcoin\n+Vcs-Browser: https://github.com/bitcoin/bitcoin\n \n Package: bitcoind\n Architecture: any\n Depends: ${shlibs:Depends}, ${misc:Depends}\n Description: peer-to-peer network based digital currency - daemon\n- Bitcoin is a free open source peer-to-peer electronic cash system that\n- is completely decentralized, without the need for a central server or\n- trusted parties.  Users hold the crypto keys to their own money and\n- transact directly with each other, with the help of a P2P network to\n- check for double-spending.\n+ Bitcoin is an experimental new digital currency that enables instant\n+ payments to anyone, anywhere in the world. Bitcoin uses peer-to-peer\n+ technology to operate with no central authority: managing transactions\n+ and issuing money are carried out collectively by the network. Bitcoin Core\n+ is the name of the open source software which enables the use of this currency.\n  .\n- Full transaction history is stored locally at each client.  This\n- requires 2+ GB of space, slowly growing.\n- .\n- This package provides bitcoind, a combined daemon and CLI tool to\n- interact with the daemon.\n+ This package provides the daemon, bitcoind, and the CLI tool\n+ bitcoin-cli to interact with the daemon.\n \n Package: bitcoin-qt\n Architecture: any\n Depends: ${shlibs:Depends}, ${misc:Depends}\n Description: peer-to-peer network based digital currency - Qt GUI\n- Bitcoin is a free open source peer-to-peer electronic cash system that\n- is completely decentralized, without the need for a central server or\n- trusted parties.  Users hold the crypto keys to their own money and\n- transact directly with each other, with the help of a P2P network to\n- check for double-spending.\n- .\n- Full transaction history is stored locally at each client.  This\n- requires 2+ GB of space, slowly growing.\n+ Bitcoin is an experimental new digital currency that enables instant\n+ payments to anyone, anywhere in the world. Bitcoin uses peer-to-peer\n+ technology to operate with no central authority: managing transactions\n+ and issuing money are carried out collectively by the network. Bitcoin Core\n+ is the name of the open source software which enables the use of this currency.\n  .\n  This package provides Bitcoin-Qt, a GUI for Bitcoin based on Qt.\n+\n+Package: bitcoin-tx\n+Architecture: any\n+Depends: ${shlibs:Depends}, ${misc:Depends}\n+Description: peer-to-peer digital currency - standalone transaction tool\n+ Bitcoin is an experimental new digital currency that enables instant\n+ payments to anyone, anywhere in the world. Bitcoin uses peer-to-peer\n+ technology to operate with no central authority: managing transactions\n+ and issuing money are carried out collectively by the network. Bitcoin Core\n+ is the name of the open source software which enables the use of this currency.\n+ .\n+ This package provides bitcoin-tx, a command-line transaction creation\n+ tool which can be used without a bitcoin daemon.  Some means of\n+ exchanging minimal transaction data with peers is still required."
      },
      {
        "sha": "c039a7bae5861de9d682c76327c25fa6e52f77e5",
        "filename": "contrib/debian/copyright",
        "status": "modified",
        "additions": 60,
        "deletions": 91,
        "changes": 151,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/debian/copyright",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/debian/copyright",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/copyright?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -1,24 +1,15 @@\n-Format: http://svn.debian.org/wsvn/dep/web/deps/dep5.mdwn?rev=174\n+Format: http://www.debian.org/doc/packaging-manuals/copyright-format/1.0/\n Upstream-Name: Bitcoin\n Upstream-Contact: Satoshi Nakamoto <satoshin@gmx.com>\n  irc://#bitcoin@freenode.net\n-Source: http://sourceforge.net/projects/bitcoin/files/\n- https://github.com/bitcoin/bitcoin\n+Source: https://github.com/bitcoin/bitcoin\n \n Files: *\n-Copyright: 2009-2012, Bitcoin Developers\n+Copyright: 2009-2016, Bitcoin Core Developers\n License: Expat\n-Comment: The Bitcoin Developers encompasses the current developers listed on bitcoin.org,\n+Comment: The Bitcoin Core Developers encompasses the current developers listed on bitcoin.org,\n          as well as the numerous contributors to the project.\n \n-Files: src/json/*\n-Copyright: 2007-2009, John W. Wilkinson\n-License: Expat\n-\n-Files: src/strlcpy.h\n-Copyright: 1998, Todd C. Miller <Todd.Miller@courtesan.com>\n-License: ISC\n-\n Files: debian/*\n Copyright: 2010-2011, Jonas Smedegaard <dr@jones.dk>\n            2011, Matt Corallo <matt@bluematt.me>\n@@ -28,60 +19,69 @@ Files: debian/manpages/*\n Copyright: Micah Anderson <micah@debian.org>\n License: GPL-3+\n \n-Files: src/qt/res/icons/clock*.png, src/qt/res/icons/tx*.png,\n-       src/qt/res/src/*.svg\n-Copyright: Wladimir van der Laan\n+Files: src/qt/res/icons/add.png\n+       src/qt/res/icons/address-book.png\n+       src/qt/res/icons/chevron.png\n+       src/qt/res/icons/configure.png\n+       src/qt/res/icons/debugwindow.png\n+       src/qt/res/icons/edit.png\n+       src/qt/res/icons/editcopy.png\n+       src/qt/res/icons/editpaste.png\n+       src/qt/res/icons/export.png\n+       src/qt/res/icons/eye.png\n+       src/qt/res/icons/filesave.png\n+       src/qt/res/icons/history.png\n+       src/qt/res/icons/info.png\n+       src/qt/res/icons/key.png\n+       src/qt/res/icons/lock_*.png\n+       src/qt/res/icons/open.png\n+       src/qt/res/icons/overview.png\n+       src/qt/res/icons/quit.png\n+       src/qt/res/icons/receive.png\n+       src/qt/res/icons/remove.png\n+       src/qt/res/icons/send.png\n+       src/qt/res/icons/synced.png\n+       src/qt/res/icons/transaction*.png\n+       src/qt/res/icons/tx_output.png\n+       src/qt/res/icons/warning.png\n+Copyright: Stephen Hutchings (and more)\n+           http://typicons.com\n License: Expat\n-\n-Files: src/qt/res/icons/address-book.png, src/qt/res/icons/export.png,\n-       src/qt/res/icons/history.png, src/qt/res/icons/key.png,\n-       src/qt/res/icons/lock_*.png, src/qt/res/icons/overview.png,\n-       src/qt/res/icons/receive.png, src/qt/res/icons/send.png,\n-       src/qt/res/icons/synced.png, src/qt/res/icons/filesave.png\n-Copyright: David Vignoni (david@icon-king.com)\n-           ICON KING - www.icon-king.com\n-License: LGPL\n-Comment: NUVOLA ICON THEME for KDE 3.x\n-         Original icons: kaddressbook, klipper_dock, view-list-text,\n-                         key-password, encrypted/decrypted, go-home, go-down,\n-                         go-next, dialog-ok\n-         Site: http://www.icon-king.com/projects/nuvola/\n+Comment: Site: https://github.com/stephenhutchings/typicons.font\n \n Files: src/qt/res/icons/connect*.png\n-Copyright: schollidesign\n-License: GPL-3+\n-Comment: Icon Pack: Human-O2\n-         Site: http://findicons.com/icon/93743/blocks_gnome_netstatus_0\n-\n-Files: src/qt/res/icons/transaction*.png\n-Copyright: md2k7\n+       src/qt/res/src/connect-*.svg\n+Copyright: Marco Falke\n License: Expat\n-Comment: Site: https://bitcointalk.org/index.php?topic=15276.0\n+Comment: Inspired by Stephan Hutchings Typicons\n \n-Files: src/qt/res/icons/configure.png, src/qt/res/icons/quit.png,\n-      src/qt/res/icons/editcopy.png, src/qt/res/icons/editpaste.png,\n-      src/qt/res/icons/add.png, src/qt/res/icons/edit.png,\n-      src/qt/res/icons/remove.png\n-Copyright: http://www.everaldo.com\n-License: LGPL\n-Comment: Icon Pack: Crystal SVG\n+Files: src/qt/res/icons/tx_mined.png\n+       src/qt/res/src/mine.svg\n+       src/qt/res/icons/fontbigger.png\n+       src/qt/res/icons/fontsmaller.png\n+Copyright: Jonas Schnelli\n+License: Expat\n+Comment:\n \n-Files: src/qt/res/icons/bitcoin.png, src/qt/res/icons/toolbar.png\n-Copyright: Bitboy (optimized for 16x16 by Wladimir van der Laan)\n-License: PUB-DOM\n+Files: src/qt/res/icons/clock*.png\n+       src/qt/res/icons/eye_*.png\n+       src/qt/res/icons/verify.png\n+       src/qt/res/icons/tx_in*.png\n+       src/qt/res/src/clock_*.svg\n+       src/qt/res/src/tx_*.svg\n+       src/qt/res/src/verify.svg\n+Copyright: Stephan Hutching, Jonas Schnelli\n+License: Expat\n+Comment: Modifications of Stephan Hutchings Typicons\n+\n+Files: src/qt/res/icons/about.png\n+       src/qt/res/icons/bitcoin.*\n+       share/pixmaps/bitcoin*\n+       src/qt/res/src/bitcoin.svg\n+Copyright: Bitboy, Jonas Schnelli\n+License: public-domain\n Comment: Site: https://bitcointalk.org/?topic=1756.0\n \n-Files:  scripts/img/reload.xcf, src/qt/res/movies/update_spinner.mng\n-Copyright: Everaldo (Everaldo Coelho)\n-License: GPL-3+\n-Comment: Icon Pack: Kids\n-         Site: http://findicons.com/icon/17102/reload?id=17102\n-\n-Files: src/qt/res/images/splash2.jpg\n-License: PUB-DOM\n-Copyright: Crobbo (forum)\n-Comment: Site: https://bitcointalk.org/index.php?topic=32273.0\n-\n \n License: Expat\n  Permission is hereby granted, free of charge, to any person obtaining a\n@@ -103,20 +103,6 @@ License: Expat\n  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n \n-License: ISC\n- Permission to use, copy, modify, and distribute this software for any\n- purpose with or without fee is hereby granted, provided that the above\n- copyright notice and this permission notice appear in all copies.\n- .\n- THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL\n- WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED\n- WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR\n- BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES\n- OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,\n- WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,\n- ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS\n- SOFTWARE.\n-\n License: GPL-2+\n  This program is free software; you can redistribute it and/or modify it\n  under the terms of the GNU General Public License as published by the\n@@ -145,22 +131,5 @@ Comment:\n  You should have received a copy of the GNU General Public License along\n  with this program.  If not, see <http://www.gnu.org/licenses/>.\n \n-License: LGPL\n- This program is free software: you can redistribute it and/or modify\n- it under the terms of the GNU General Public License as published by\n- the Free Software Foundation, either version 3 of the License, or\n- (at your option) any later version.\n- .\n- This program is distributed in the hope that it will be useful,\n- but WITHOUT ANY WARRANTY; without even the implied warranty of\n- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n- GNU General Public License for more details.\n-Comment:\n- On Debian systems the GNU Lesser General Public License (LGPL) is\n- located in '/usr/share/common-licenses/LGPL'.\n- .\n- You should have received a copy of the GNU General Public License\n- along with this program.  If not, see <http://www.gnu.org/licenses/>.\n-\n-License: PUB-DOM\n+License: public-domain\n  This work is in the public domain."
      },
      {
        "sha": "2831c072924362be0afc4dd8f953a824923d7704",
        "filename": "contrib/debian/examples/bitcoin.conf",
        "status": "modified",
        "additions": 77,
        "deletions": 37,
        "changes": 114,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/debian/examples/bitcoin.conf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/debian/examples/bitcoin.conf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/examples/bitcoin.conf?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -1,79 +1,119 @@\n-# bitcoin.conf configuration file. Lines beginning with # are comments.\n-\n-\n+##\n+## bitcoin.conf configuration file. Lines beginning with # are comments.\n+##\n+ \n # Network-related settings:\n \n # Run on the test network instead of the real bitcoin network.\n-#testnet=1\n+#testnet=0\n \n-# Connect via a socks4 proxy\n+# Run a regression test network\n+#regtest=0\n+\n+# Connect via a SOCKS5 proxy\n #proxy=127.0.0.1:9050\n \n+# Bind to given address and always listen on it. Use [host]:port notation for IPv6\n+#bind=<addr>\n+\n+# Bind to given address and whitelist peers connecting to it. Use [host]:port notation for IPv6\n+#whitebind=<addr>\n+\n+##############################################################\n+##            Quick Primer on addnode vs connect            ##\n+##  Let's say for instance you use addnode=4.2.2.4          ##\n+##  addnode will connect you to and tell you about the      ##\n+##    nodes connected to 4.2.2.4.  In addition it will tell ##\n+##    the other nodes connected to it that you exist so     ##\n+##    they can connect to you.                              ##\n+##  connect will not do the above when you 'connect' to it. ##\n+##    It will *only* connect you to 4.2.2.4 and no one else.##\n+##                                                          ##\n+##  So if you're behind a firewall, or have other problems  ##\n+##  finding nodes, add some using 'addnode'.                ##\n+##                                                          ##\n+##  If you want to stay private, use 'connect' to only      ##\n+##  connect to \"trusted\" nodes.                             ##\n+##                                                          ##\n+##  If you run multiple nodes on a LAN, there's no need for ##\n+##  all of them to open lots of connections.  Instead       ##\n+##  'connect' them all to one node that is port forwarded   ##\n+##  and has lots of connections.                            ##\n+##       Thanks goes to [Noodle] on Freenode.               ##\n+##############################################################\n+\n # Use as many addnode= settings as you like to connect to specific peers\n #addnode=69.164.218.197\n #addnode=10.0.0.2:8333\n \n-# ... or use as many connect= settings as you like to connect ONLY\n-# to specific peers:\n+# Alternatively use as many connect= settings as you like to connect ONLY to specific peers\n #connect=69.164.218.197\n #connect=10.0.0.1:8333\n \n+# Listening mode, enabled by default except when 'connect' is being used\n+#listen=1\n+\n # Maximum number of inbound+outbound connections.\n #maxconnections=\n \n-\n+#\n # JSON-RPC options (for controlling a running Bitcoin/bitcoind process)\n+#\n+\n+# server=1 tells Bitcoin-Qt and bitcoind to accept JSON-RPC commands\n+#server=0\n \n-# server=1 tells Bitcoin to accept JSON-RPC commands.\n-#server=1\n+# Bind to given address to listen for JSON-RPC connections. Use [host]:port notation for IPv6.\n+# This option can be specified multiple times (default: bind to all interfaces)\n+#rpcbind=<addr>\n \n # You must set rpcuser and rpcpassword to secure the JSON-RPC api\n #rpcuser=Ulysseys\n-#rpcpassword=YourSuperGreatPasswordNumber_385593\n+#rpcpassword=YourSuperGreatPasswordNumber_DO_NOT_USE_THIS_OR_YOU_WILL_GET_ROBBED_385593\n \n-# By default, only RPC connections from localhost are allowed.  Specify\n-# as many rpcallowip= settings as you like to allow connections from\n-# other hosts (and you may use * as a wildcard character):\n-#rpcallowip=10.1.1.34\n-#rpcallowip=192.168.1.*\n+# How many seconds bitcoin will wait for a complete RPC HTTP request.\n+# after the HTTP connection is established. \n+#rpcclienttimeout=30\n+\n+# By default, only RPC connections from localhost are allowed.\n+# Specify as many rpcallowip= settings as you like to allow connections from other hosts,\n+# either as a single IPv4/IPv6 or with a subnet specification.\n+\n+# NOTE: opening up the RPC port to hosts outside your local trusted network is NOT RECOMMENDED,\n+# because the rpcpassword is transmitted over the network unencrypted.\n+\n+# server=1 tells Bitcoin-Qt to accept JSON-RPC commands.\n+# it is also read by bitcoind to determine if RPC should be enabled \n+#rpcallowip=10.1.1.34/255.255.255.0\n+#rpcallowip=1.2.3.4/24\n+#rpcallowip=2001:db8:85a3:0:0:8a2e:370:7334/96\n \n # Listen for RPC connections on this TCP port:\n-rpcport=8332\n+#rpcport=8332\n \n # You can use Bitcoin or bitcoind to send commands to Bitcoin/bitcoind\n # running on another host using this option:\n-rpcconnect=127.0.0.1\n+#rpcconnect=127.0.0.1\n \n-# Use Secure Sockets Layer (also known as TLS or HTTPS) to communicate\n-# with Bitcoin -server or bitcoind\n-#rpcssl=1\n+# Transaction Fee Changes in 0.10.0\n \n-# OpenSSL settings used when rpcssl=1\n-rpcsslciphers=TLSv1+HIGH:!SSLv2:!aNULL:!eNULL:!AH:!3DES:@STRENGTH\n-rpcsslcertificatechainfile=server.cert\n-rpcsslprivatekeyfile=server.pem\n+# Send transactions as zero-fee transactions if possible (default: 0)\n+#sendfreetransactions=0\n \n+# Create transactions that have enough fees (or priority) so they are likely to begin confirmation within n blocks (default: 1).\n+# This setting is over-ridden by the -paytxfee option.\n+#txconfirmtarget=n\n \n # Miscellaneous options\n \n-# Set gen=1 to attempt to generate bitcoins\n-gen=0\n-\n-# Use SSE instructions to try to generate bitcoins faster.\n-#4way=1\n-\n # Pre-generate this many public/private key pairs, so wallet backups will be valid for\n # both prior transactions and several dozen future transactions.\n-keypool=100\n+#keypool=100\n \n # Pay an optional transaction fee every time you send bitcoins.  Transactions with fees\n # are more likely than free transactions to be included in generated blocks, so may\n # be validated sooner.\n-paytxfee=0.00\n-\n-# Allow direct connections for the 'pay via IP address' feature.\n-#allowreceivebyip=1\n-\n+#paytxfee=0.00\n \n # User interface options\n "
      },
      {
        "sha": "16c338dd3e51115c67439c5c1651e8465a3547d3",
        "filename": "contrib/debian/manpages/bitcoin-cli.1",
        "status": "added",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/debian/manpages/bitcoin-cli.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/debian/manpages/bitcoin-cli.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/manpages/bitcoin-cli.1?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,21 @@\n+.TH BITCOIN-CLI \"1\" \"February 2016\" \"bitcoin-cli 0.12\"\n+.SH NAME\n+bitcoin-cli \\- a remote procedure call client for Bitcoin Core. \n+.SH SYNOPSIS\n+bitcoin-cli [options] <command> [params] \\- Send command to Bitcoin Core. \n+.TP\n+bitcoin-cli [options] help \\- Asks Bitcoin Core for a list of supported commands.\n+.SH DESCRIPTION\n+This manual page documents the bitcoin-cli program. bitcoin-cli is an RPC client used to send commands to Bitcoin Core.\n+\n+.SH OPTIONS\n+.TP\n+\\fB\\-?\\fR\n+Show possible options.\n+\n+.SH \"SEE ALSO\"\n+\\fBbitcoind\\fP, \\fBbitcoin.conf\\fP\n+.SH AUTHOR\n+This manual page was written by Ciemon Dunville <ciemon@gmail.com>. Permission is granted to copy, distribute and/or modify this document under the terms of the MIT License.\n+\n+The complete text of the MIT License can be found on the web at \\fIhttp://opensource.org/licenses/MIT\\fP."
      },
      {
        "sha": "685a282080e2b664006a27c64c8f09f5b2afed49",
        "filename": "contrib/debian/manpages/bitcoin-qt.1",
        "status": "modified",
        "additions": 4,
        "deletions": 197,
        "changes": 201,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/debian/manpages/bitcoin-qt.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/debian/manpages/bitcoin-qt.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/manpages/bitcoin-qt.1?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -1,4 +1,4 @@\n-.TH BITCOIN-QT \"1\" \"April 2013\" \"bitcoin-qt 1\"\n+.TH BITCOIN-QT \"1\" \"February 2016\" \"bitcoin-qt 0.12\"\n .SH NAME\n bitcoin-qt \\- peer-to-peer network based digital currency\n .SH DESCRIPTION\n@@ -8,199 +8,6 @@ bitcoin\\-qt [command\\-line options]\n .SH OPTIONS\n .TP\n \\-?\n-This help message\n-.TP\n-\\fB\\-conf=\\fR<file>\n-Specify configuration file (default: bitcoin.conf)\n-.TP\n-\\fB\\-pid=\\fR<file>\n-Specify pid file (default: bitcoind.pid)\n-.TP\n-\\fB\\-gen\\fR\n-Generate coins\n-.TP\n-\\fB\\-gen\\fR=\\fI0\\fR\n-Don't generate coins\n-.TP\n-\\fB\\-datadir=\\fR<dir>\n-Specify data directory\n-.TP\n-\\fB\\-dbcache=\\fR<n>\n-Set database cache size in megabytes (default: 25)\n-.TP\n-\\fB\\-timeout=\\fR<n>\n-Specify connection timeout in milliseconds (default: 5000)\n-.TP\n-\\fB\\-proxy=\\fR<ip:port>\n-Connect through socks proxy\n-.TP\n-\\fB\\-socks=\\fR<n>\n-Select the version of socks proxy to use (4\\-5, default: 5)\n-.TP\n-\\fB\\-tor=\\fR<ip:port>\n-Use proxy to reach tor hidden services (default: same as \\fB\\-proxy\\fR)\n-.TP\n-\\fB\\-dns\\fR\n-Allow DNS lookups for \\fB\\-addnode\\fR, \\fB\\-seednode\\fR and \\fB\\-connect\\fR\n-.TP\n-\\fB\\-port=\\fR<port>\n-Listen for connections on <port> (default: 8333 or testnet: 18333)\n-.TP\n-\\fB\\-maxconnections=\\fR<n>\n-Maintain at most <n> connections to peers (default: 125)\n-.TP\n-\\fB\\-addnode=\\fR<ip>\n-Add a node to connect to and attempt to keep the connection open\n-.TP\n-\\fB\\-connect=\\fR<ip>\n-Connect only to the specified node(s)\n-.TP\n-\\fB\\-seednode=\\fR<ip>\n-Connect to a node to retrieve peer addresses, and disconnect\n-.TP\n-\\fB\\-externalip=\\fR<ip>\n-Specify your own public address\n-.TP\n-\\fB\\-onlynet=\\fR<net>\n-Only connect to nodes in network <net> (IPv4, IPv6 or Tor)\n-.TP\n-\\fB\\-discover\\fR\n-Discover own IP address (default: 1 when listening and no \\fB\\-externalip\\fR)\n-.TP\n-\\fB\\-checkpoints\\fR\n-Only accept block chain matching built\\-in checkpoints (default: 1)\n-.TP\n-\\fB\\-listen\\fR\n-Accept connections from outside (default: 1 if no \\fB\\-proxy\\fR or \\fB\\-connect\\fR)\n-.TP\n-\\fB\\-bind=\\fR<addr>\n-Bind to given address and always listen on it. Use [host]:port notation for IPv6\n-.TP\n-\\fB\\-dnsseed\\fR\n-Find peers using DNS lookup (default: 1 unless \\fB\\-connect\\fR)\n-.TP\n-\\fB\\-banscore=\\fR<n>\n-Threshold for disconnecting misbehaving peers (default: 100)\n-.TP\n-\\fB\\-bantime=\\fR<n>\n-Number of seconds to keep misbehaving peers from reconnecting (default: 86400)\n-.TP\n-\\fB\\-maxreceivebuffer=\\fR<n>\n-Maximum per\\-connection receive buffer, <n>*1000 bytes (default: 5000)\n-.TP\n-\\fB\\-maxsendbuffer=\\fR<n>\n-Maximum per\\-connection send buffer, <n>*1000 bytes (default: 1000)\n-.TP\n-\\fB\\-upnp\\fR\n-Use UPnP to map the listening port (default: 1 when listening)\n-.TP\n-\\fB\\-paytxfee=\\fR<amt>\n-Fee per KB to add to transactions you send\n-.TP\n-\\fB\\-server\\fR\n-Accept command line and JSON\\-RPC commands\n-.TP\n-\\fB\\-testnet\\fR\n-Use the test network\n-.TP\n-\\fB\\-debug\\fR\n-Output extra debugging information. Implies all other \\fB\\-debug\\fR* options\n-.TP\n-\\fB\\-debugnet\\fR\n-Output extra network debugging information\n-.TP\n-\\fB\\-logtimestamps\\fR\n-Prepend debug output with timestamp\n-.TP\n-\\fB\\-shrinkdebugfile\\fR\n-Shrink debug.log file on client startup (default: 1 when no \\fB\\-debug\\fR)\n-.TP\n-\\fB\\-printtoconsole\\fR\n-Send trace/debug info to console instead of debug.log file\n-.TP\n-\\fB\\-rpcuser=\\fR<user>\n-Username for JSON\\-RPC connections\n-.TP\n-\\fB\\-rpcpassword=\\fR<pw>\n-Password for JSON\\-RPC connections\n-.TP\n-\\fB\\-rpcport=\\fR<port>\n-Listen for JSON\\-RPC connections on <port> (default: 8332 or testnet: 18332)\n-.TP\n-\\fB\\-rpcallowip=\\fR<ip>\n-Allow JSON\\-RPC connections from specified IP address\n-.TP\n-\\fB\\-rpcthreads=\\fR<n>\n-Set the number of threads to service RPC calls (default: 4)\n-.TP\n-\\fB\\-blocknotify=\\fR<cmd>\n-Execute command when the best block changes (%s in cmd is replaced by block hash)\n-.TP\n-\\fB\\-walletnotify=\\fR<cmd>\n-Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)\n-.TP\n-\\fB\\-alertnotify=\\fR<cmd>\n-Execute command when a relevant alert is received (%s in cmd is replaced by message)\n-.TP\n-\\fB\\-upgradewallet\\fR\n-Upgrade wallet to latest format\n-.TP\n-\\fB\\-keypool=\\fR<n>\n-Set key pool size to <n> (default: 100)\n-.TP\n-\\fB\\-rescan\\fR\n-Rescan the block chain for missing wallet transactions\n-.TP\n-\\fB\\-salvagewallet\\fR\n-Attempt to recover private keys from a corrupt wallet.dat\n-.TP\n-\\fB\\-checkblocks=\\fR<n>\n-How many blocks to check at startup (default: 288, 0 = all)\n-.TP\n-\\fB\\-checklevel=\\fR<n>\n-How thorough the block verification is (0\\-4, default: 3)\n-.TP\n-\\fB\\-txindex\\fR\n-Maintain a full transaction index (default: 0)\n-.TP\n-\\fB\\-loadblock=\\fR<file>\n-Imports blocks from external blk000??.dat file\n-.TP\n-\\fB\\-reindex\\fR\n-Rebuild block chain index from current blk000??.dat files\n-.TP\n-\\fB\\-par=\\fR<n>\n-Set the number of script verification threads (1\\-16, 0=auto, default: 0)\n-.SS \"Block creation options:\"\n-.TP\n-\\fB\\-blockminsize=\\fR<n>\n-Set minimum block size in bytes (default: 0)\n-.TP\n-\\fB\\-blockmaxsize=\\fR<n>\n-Set maximum block size in bytes (default: 250000)\n-.HP\n-\\fB\\-blockprioritysize=\\fR<n> Set maximum size of high\\-priority/low\\-fee transactions in bytes (default: 27000)\n-.PP\n-SSL options: (see the Bitcoin Wiki for SSL setup instructions)\n-.TP\n-\\fB\\-rpcssl\\fR\n-Use OpenSSL (https) for JSON\\-RPC connections\n-.TP\n-\\fB\\-rpcsslcertificatechainfile=\\fR<file.cert>\n-Server certificate file (default: server.cert)\n-.TP\n-\\fB\\-rpcsslprivatekeyfile=\\fR<file.pem>\n-Server private key (default: server.pem)\n-.TP\n-\\fB\\-rpcsslciphers=\\fR<ciphers>\n-Acceptable ciphers (default: TLSv1+HIGH:!SSLv2:!aNULL:!eNULL:!AH:!3DES:@STRENGTH)\n-.SS \"UI options:\"\n-.TP\n-\\fB\\-lang=\\fR<lang>\n-Set language, for example \"de_DE\" (default: system locale)\n-.TP\n-\\fB\\-min\\fR\n-Start minimized\n-.TP\n-\\fB\\-splash\\fR\n-Show splash screen on startup (default: 1)\n+List options.\n+.SH \"SEE ALSO\"\n+bitcoind(1)"
      },
      {
        "sha": "839dc26c1aa57da476d26eab3e4271c604540582",
        "filename": "contrib/debian/manpages/bitcoin.conf.5",
        "status": "modified",
        "additions": 4,
        "deletions": 77,
        "changes": 81,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/debian/manpages/bitcoin.conf.5",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/debian/manpages/bitcoin.conf.5",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/manpages/bitcoin.conf.5?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -1,88 +1,15 @@\n-.TH BITCOIN.CONF \"5\" \"January 2011\" \"bitcoin.conf 3.19\"\n+.TH BITCOIN.CONF \"5\" \"February 2016\" \"bitcoin.conf 0.12\"\n .SH NAME\n bitcoin.conf \\- bitcoin configuration file\n .SH SYNOPSIS\n-All command-line options (except for '\\-datadir' and '\\-conf') may be specified in a configuration file, and all configuration file options may also be specified on the command line. Command-line options override values set in the configuration file.\n+All command-line options (except for '\\-conf') may be specified in a configuration file, and all configuration file options may also be specified on the command line. Command-line options override values set in the configuration file.\n .TP\n-The configuration file is a list of 'setting=value' pairs, one per line, with optional comments starting with the '#' character.\n+The configuration file is a list of 'setting=value' pairs, one per line, with optional comments starting with the '#' character. Please refer to bitcoind(1) for a up to date list of valid options.\n .TP\n The configuration file is not automatically created; you can create it using your favorite plain-text editor. By default, bitcoind(1) will look for a file named bitcoin.conf(5) in the bitcoin data directory, but both the data directory and the configuration file path may be changed using the '\\-datadir' and '\\-conf' command-line arguments.\n .SH LOCATION\n bitcoin.conf should be located in $HOME/.bitcoin\n-.SH NETWORK-RELATED SETTINGS\n-.TP\n-.TP\n-\\fBtestnet=\\fR[\\fI'1'\\fR|\\fI'0'\\fR]\n-Enable or disable run on the test network instead of the real *bitcoin* network.\n-.TP\n-\\fBproxy=\\fR\\fI'127.0.0.1:9050'\\fR\n-Connect via a socks4 proxy.\n-.TP\n-\\fBaddnode=\\fR\\fI'10.0.0.2:8333'\\fR\n-Use as many *addnode=* settings as you like to connect to specific peers.\n-.TP\n-\\fBconnect=\\fR\\fI'10.0.0.1:8333'\\fR\n-Use as many *connect=* settings as you like to connect ONLY to specific peers.\n-.TP\n-\\fRmaxconnections=\\fR\\fI'value'\\fR\n-Maximum number of inbound+outbound connections.\n-.SH JSON-RPC OPTIONS\n-.TP\n-\\fBserver=\\fR[\\fI'1'\\fR|\\fI'0'\\fR]\n-Tells *bitcoin* to accept or not accept JSON-RPC commands.\n-.TP\n-\\fBrpcuser=\\fR\\fI'username'\\fR\n-You must set *rpcuser* to secure the JSON-RPC api.\n-.TP\n-\\fBrpcpassword=\\fR\\fI'password'\\fR\n-You must set *rpcpassword* to secure the JSON-RPC api.\n-.TP\n-\\fBrpctimeout=\\fR\\fI'30'\\fR\n-How many seconds *bitcoin* will wait for a complete RPC HTTP request, after the HTTP connection is established.\n-.TP\n-\\fBrpcallowip=\\fR\\fI'192.168.1.*'\\fR\n-By default, only RPC connections from localhost are allowed. Specify as many *rpcallowip=* settings as you like to allow connections from other hosts (and you may use * as a wildcard character).\n-.TP\n-\\fBrpcport=\\fR\\fI'8332'\\fR\n-Listen for RPC connections on this TCP port.\n-.TP\n-\\fBrpcconnect=\\fR\\fI'127.0.0.1'\\fR\n-You can use *bitcoin* or *bitcoind(1)* to send commands to *bitcoin*/*bitcoind(1)* running on another host using this option.\n-.TP\n-\\fBrpcssl=\\fR\\fI'1'\\fR\n-Use Secure Sockets Layer (also known as TLS or HTTPS) to communicate with *bitcoin* '\\-server' or *bitcoind(1)*. Example of OpenSSL settings used when *rpcssl*='1':\n-.TP\n-\\fB\\-rpcsslciphers=\\fR<ciphers>\n-Acceptable ciphers (default: TLSv1+HIGH:\\:!SSLv2:\\:!aNULL:\\:!eNULL:\\:!AH:\\:!3DES:\\:@STRENGTH)\n-.TP\n-\\fBrpcsslcertificatechainfile=\\fR\\fI'server.cert'\\fR\n-.TP\n-\\fBrpcsslprivatekeyfile=\\fR\\fI'server.pem'\\fR\n-.TP\n-.SH MISCELLANEOUS OPTIONS\n-.TP\n-\\fBgen=\\fR[\\fI'0'\\fR|\\fI'1'\\fR]\n-Enable or disable attempt to generate bitcoins.\n-.TP\n-\\fB4way=\\fR[\\fI'0'\\fR|\\fI'1'\\fR]\n-Enable or disable use SSE instructions to try to generate bitcoins faster.\n-.TP\n-\\fBkeypool=\\fR\\fI'100'\\fR\n-Pre-generate this many public/private key pairs, so wallet backups will be valid for both prior transactions and several dozen future transactions.\n-.TP\n-\\fBpaytxfee=\\fR\\fI'0.00'\\fR\n-Pay an optional transaction fee every time you send bitcoins. Transactions with fees are more likely than free transactions to be included in generated blocks, so may be validated sooner.\n-.TP\n-\\fBallowreceivebyip=\\fR\\fI'1'\\fR\n-Allow direct connections for the 'pay via IP address' feature.\n-.TP\n-.SH USER INTERFACE OPTIONS\n-.TP\n-\\fBmin=\\fR[\\fI'0'\\fR|\\fI'1'\\fR]\n-Enable or disable start bitcoind minimized.\n-.TP\n-\\fBminimizetotray=\\fR[\\fI'0'\\fR|\\fI'1'\\fR]\n-Enable or disable minimize to the system tray.\n+\n .SH \"SEE ALSO\"\n bitcoind(1)\n .SH AUTHOR"
      },
      {
        "sha": "5c3e52f441e9ef8eb7ae2261b31f677bcb86cd2d",
        "filename": "contrib/debian/manpages/bitcoind.1",
        "status": "modified",
        "additions": 6,
        "deletions": 185,
        "changes": 191,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/debian/manpages/bitcoind.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/debian/manpages/bitcoind.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/manpages/bitcoind.1?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -1,204 +1,25 @@\n-.TH BITCOIND \"1\" \"January 2011\" \"bitcoind 3.19\" \n+.TH BITCOIND \"1\" \"February 2016\" \"bitcoind 0.12\"\n .SH NAME\n bitcoind \\- peer-to-peer network based digital currency\n .SH SYNOPSIS\n bitcoin [options] <command> [params]  \n .TP\n bitcoin [options] help <command> \\- Get help for a command\n .SH DESCRIPTION\n-This  manual page documents the bitcoind program. Bitcoin is a peer-to-peer digital currency. Peer-to-peer (P2P) means that there is no central authority to issue new money or keep track of transactions. Instead, these tasks are managed collectively by the nodes of the network. Advantages:\n-\n-Bitcoins can be sent easily through the Internet, without having to trust middlemen. Transactions are designed to be irreversible. Be safe from instability caused by fractional reserve banking and central banks. The limited inflation of the Bitcoin system\u2019s money supply is distributed evenly (by CPU power) throughout the network, not monopolized by banks.\n+This  manual page documents the bitcoind program. Bitcoin is an experimental new digital currency that enables instant payments to anyone, anywhere in the world. Bitcoin uses peer-to-peer technology to operate with no central authority: managing transactions and issuing money are carried out collectively by the network. Bitcoin Core is the name of open source software which enables the use of this currency.\n \n .SH OPTIONS\n .TP\n-\\fB\\-conf=\\fR<file>\n-Specify configuration file (default: bitcoin.conf)\n-.TP\n-\\fB\\-gen\\fR\n-Generate coins\n-.TP\n-\\fB\\-gen\\fR=\\fI0\\fR\n-Don't generate coins\n-.TP\n-\\fB\\-min\\fR\n-Start minimized\n-.TP\n-\\fB\\-datadir=\\fR<dir>\n-Specify data directory\n-.TP\n-\\fB\\-proxy=\\fR<ip:port>\n-Connect through socks4 proxy\n-.TP\n-\\fB\\-addnode=\\fR<ip>\n-Add a node to connect to\n-.TP\n-\\fB\\-connect=\\fR<ip>\n-Connect only to the specified node\n-.TP\n-\\fB\\-paytxfee=\\fR<amt>\n-Fee per KB to add to transactions you send\n-.TP\n-\\fB\\-server\\fR\n-Accept command line and JSON\\-RPC commands\n-.TP\n-\\fB\\-daemon\\fR\n-Run in the background as a daemon and accept commands\n-.TP\n-\\fB\\-testnet\\fR\n-Use the test network\n-.TP\n-\\fB\\-rpcuser=\\fR<user>\n-Username for JSON\\-RPC connections\n-.TP\n-\\fB\\-rpcpassword=\\fR<pw>\n-Password for JSON\\-RPC connections\n-.TP\n-\\fB\\-rpcport=\\fR<port>\n-Listen for JSON\\-RPC connections on <port>\n-.TP\n-\\fB\\-rpcallowip=\\fR<ip>\n-Allow JSON\\-RPC connections from specified IP address\n-.TP\n-\\fB\\-rpcconnect=\\fR<ip>\n-Send commands to node running on <ip>\n-.PP\n-SSL options: (see the Bitcoin Wiki for SSL setup instructions)\n-.TP\n-\\fB\\-rpcssl\\fR=\\fI1\\fR\n-Use OpenSSL (https) for JSON\\-RPC connections\n-.TP\n-\\fB\\-rpcsslcertificatchainfile=\\fR<file.cert>\n-Server certificate file (default: server.cert)\n-.TP\n-\\fB\\-rpcsslprivatekeyfile=\\fR<file.pem>\n-Server private key (default: server.pem)\n-.TP\n-\\fB\\-rpcsslciphers=\\fR<ciphers>\n-Acceptable ciphers (default: TLSv1+HIGH:\\:!SSLv2:\\:!aNULL:\\:!eNULL:\\:!AH:\\:!3DES:\\:@STRENGTH)\n-.TP\n \\-?\n-This help message\n+List of possible options.\n .SH COMMANDS\n .TP\n-\\fBbackupwallet 'destination'\\fR\n-Safely copies *wallet.dat* to 'destination', which can be a directory or a path with filename.\n-.TP\n-\\fBgetaccount 'bitcoinaddress'\\fR\n-Returns the account associated with the given address.\n-.TP\n-\\fBsetaccount 'bitcoinaddress' ['account']\\fR\n-Sets the ['account'] associated with the given address. ['account'] may be omitted to remove an address from ['account'].\n-.TP\n-\\fBgetaccountaddress 'account'\\fR\n-Returns a new bitcoin address for 'account'.\n-.TP\n-\\fBgetaddressesbyaccount 'account'\\fR\n-Returns the list of addresses associated with the given 'account'.\n-.TP\n-\\fBgetbalance 'account'\\fR\n-Returns the server's available balance, or the balance for 'account'.\n-.TP\n-\\fBgetblockcount\\fR\n-Returns the number of blocks in the longest block chain.\n-.TP\n-\\fBgetblocknumber\\fR\n-Returns the block number of the latest block in the longest block chain.\n-.TP\n-\\fBgetconnectioncount\\fR\n-Returns the number of connections to other nodes.\n-.TP\n-\\fBgetdifficulty\\fR\n-Returns the proof-of-work difficulty as a multiple of the minimum difficulty.\n-.TP\n-\\fBgetgenerate\\fR\n-Returns boolean true if server is trying to generate bitcoins, false otherwise.\n-.TP\n-\\fBsetgenerate 'generate' ['genproclimit']\\fR\n-Generation is limited to ['genproclimit'] processors, \\-1 is unlimited.\n-.TP\n-\\fBgethashespersec\\fR\n-Returns a recent hashes per second performance measurement while generating.\n-.TP\n-\\fBgetinfo\\fR\n-Returns an object containing server information.\n-.TP\n-\\fBgetnewaddress 'account'\\fR\n-Returns a new bitcoin address for receiving payments. If 'account' is specified (recommended), it is added to the address book so payments received with the address will be credited to 'account'.\n-.TP\n-\\fBgetreceivedbyaccount 'account' ['minconf=1']\\fR\n-Returns the total amount received by addresses associated with 'account' in transactions with at least ['minconf'] confirmations.\n-.TP\n-\\fBgetreceivedbyaddress 'bitcoinaddress' ['minconf=1']\\fR\n-Returns the total amount received by 'bitcoinaddress' in transactions with at least ['minconf'] confirmations.\n-.TP\n-\\fBgettransaction 'txid'\\fR\n-Returns information about a specific transaction, given hexadecimal transaction ID.\n-.TP\n-\\fBgetwork 'data'\\fR\n-If 'data' is specified, tries to solve the block and returns true if it was successful. If 'data' is not specified, returns formatted hash 'data' to work on:\n+\\fBhelp\\fR\n+List commands.\n \n-    \"midstate\" : precomputed hash state after hashing the first half of the data.\n-    \"data\"     : block data.\n-    \"hash1\"    : formatted hash buffer for second hash.\n-    \"target\"   : little endian hash target.\n .TP\n \\fBhelp 'command'\\fR\n-List commands, or get help for a command.\n-.TP\n-\\fBlistaccounts ['minconf=1']\\fR\n-List accounts and their current balances.\n-     *note: requires bitcoin 0.3.20 or later.\n-.TP\n-\\fBlistreceivedbyaccount ['minconf=1'] ['includeempty=false']\\fR\n-['minconf'] is the minimum number of confirmations before payments are included. ['includeempty'] whether to include addresses that haven't received any payments. Returns an array of objects containing:\n-\n-    \"account\"       : the account of the receiving address.\n-    \"amount\"        : total amount received by the address.\n-    \"confirmations\" : number of confirmations of the most recent transaction included.\n-.TP\n-\\fBlistreceivedbyaddress ['minconf=1'] ['includeempty=false']\\fR\n-['minconf'] is the minimum number of confirmations before payments are included. ['includeempty'] whether to include addresses that haven't received any payments. Returns an array of objects containing:\n-\n-    \"address\"       : receiving address.\n-    \"account\"       : the account of the receiving address.\n-    \"amount\"        : total amount received by the address.\n-    \"confirmations\" : number of confirmations of the most recent transaction included.\n-.TP\n-\\fBlisttransactions 'account' ['count=10']\\fR\n-Returns a list of the last ['count'] transactions for 'account' \\- for all accounts if 'account' is not specified or is \"*\". Each entry in the list may contain:\n-\n-    \"category\"      : will be generate, send, receive, or move.\n-    \"amount\"        : amount of transaction.\n-    \"fee\"           : Fee (if any) paid (only for send transactions).\n-    \"confirmations\" : number of confirmations (only for generate/send/receive).\n-    \"txid\"          : transaction ID (only for generate/send/receive).\n-    \"otheraccount\"  : account funds were moved to or from (only for move).\n-    \"message\"       : message associated with transaction (only for send).\n-    \"to\"            : message-to associated with transaction (only for send).\n-\n-    *note: requires bitcoin 0.3.20 or later.\n-.TP\n-\\fBmove <'fromaccount'> <'toaccount'> <'amount'> ['minconf=1'] ['comment']\\fR\n-Moves funds between accounts.\n-.TP\n-\\fBsendfrom* <'account'> <'bitcoinaddress'> <'amount'> ['minconf=1'] ['comment'] ['comment-to']\\fR\n-Sends amount from account's balance to 'bitcoinaddress'. This method will fail if there is less than amount bitcoins with ['minconf'] confirmations in the account's balance (unless account is the empty-string-named default account; it behaves like the *sendtoaddress* method). Returns transaction ID on success.\n-.TP     \n-\\fBsendtoaddress 'bitcoinaddress' 'amount' ['comment'] ['comment-to']\\fR\n-Sends amount from the server's available balance to 'bitcoinaddress'. amount is a real and is rounded to the nearest 0.01. Returns transaction id on success.\n-.TP    \n-\\fBstop\\fR\n-Stops the bitcoin server.\n-.TP    \n-\\fBvalidateaddress 'bitcoinaddress'\\fR\n-Checks that 'bitcoinaddress' looks like a proper bitcoin address. Returns an object containing:\n-\n-    \"isvalid\" : true or false.\n-    \"ismine\"  : true if the address is in the server's wallet.\n-    \"address\" : bitcoinaddress.\n-\n-    *note: ismine and address are only returned if the address is valid.\n+Get help for a command.\n \n .SH \"SEE ALSO\"\n bitcoin.conf(5)"
      },
      {
        "sha": "52b357cf01a5064a90fecb963af15ca80a0beccc",
        "filename": "contrib/debian/rules",
        "status": "modified",
        "additions": 6,
        "deletions": 15,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/debian/rules",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/debian/rules",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/rules?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -11,23 +11,14 @@ DEB_INSTALL_MANPAGES_bitcoind += debian/manpages/*\n %:\n \tdh --with bash-completion $@\n \n-override_dh_auto_build:\n-\tcd src; $(MAKE) -f makefile.unix bitcoind\n-\t$(MAKE)\n-\n override_dh_auto_clean:\n-\tif [ -f Makefile ]; then $(MAKE) clean; else rm -rf build/; rm -f bitcoin-qt; fi\n-\tcd src; $(MAKE) -f makefile.unix clean\n+\tif [ -f Makefile ]; then $(MAKE) distclean; fi\n+\trm -rf Makefile.in aclocal.m4 configure src/Makefile.in src/bitcoin-config.h.in src/build-aux src/qt/Makefile.in src/qt/test/Makefile.in src/test/Makefile.in\n \n+# Yea, autogen should be run on the source archive, but I like doing git archive\n override_dh_auto_configure:\n-\tqmake bitcoin-qt.pro USE_QRCODE=1\n+\t./autogen.sh\n+\t./configure\n \n override_dh_auto_test:\n-\tcd src; $(MAKE) -f makefile.unix test_bitcoin\n-\tsrc/test_bitcoin\n-\n-# Ensure wrapper is set executable\n-binary-post-install/bitcoind:\n-\tchmod +x $(cdbs_curdestdir)usr/bin/bitcoind\n-binary-post-install/bitcoin-qt:\n-\tchmod +x $(cdbs_curdestdir)usr/bin/bitcoin-qt\n+\tmake check"
      },
      {
        "sha": "4d9e0cfa577b6d8acac28a1e005f42388b7255c0",
        "filename": "contrib/debian/watch",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/debian/watch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/debian/watch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/watch?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -1,7 +1,5 @@\n # Run the \"uscan\" command to check for upstream updates and more.\n version=3\n # use qa.debian.org redirector; see man uscan\n-opts=uversionmangle=s/(\\d)(alpha|beta|rc)/$1~$2/;s/\\-src//,dversionmangle=s/~dfsg\\d*// \\\n- http://sf.net/bitcoin/bitcoin-(\\d.*)-linux\\.tar\\.gz debian\n opts=uversionmangle=s/(\\d)(alpha|beta|rc)/$1~$2/,dversionmangle=s/~dfsg\\d*// \\\n  http://githubredir.debian.net/github/bitcoin/bitcoin v(.*).tar.gz"
      },
      {
        "sha": "bb8b9246b87815a988a6290a94ee4214c74467c2",
        "filename": "contrib/devtools/README.md",
        "status": "added",
        "additions": 134,
        "deletions": 0,
        "changes": 134,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/devtools/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/devtools/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/README.md?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,134 @@\n+Contents\n+========\n+This directory contains tools for developers working on this repository.\n+\n+check-doc.py\n+============\n+\n+Check if all command line args are documented. The return value indicates the\n+number of undocumented args.\n+\n+clang-format.py\n+===============\n+\n+A script to format cpp source code according to [.clang-format](../../src/.clang-format). This should only be applied to new files or files which are currently not actively developed on. Also, git subtrees are not subject to formatting.\n+\n+clang-format-diff.py\n+===================\n+\n+A script to format unified git diffs according to [.clang-format](../../src/.clang-format).\n+\n+For instance, to format the last commit with 0 lines of context,\n+the script should be called from the git root folder as follows.\n+\n+```\n+git diff -U0 HEAD~1.. | ./contrib/devtools/clang-format-diff.py -p1 -i -v\n+```\n+\n+fix-copyright-headers.py\n+========================\n+\n+Every year newly updated files need to have its copyright headers updated to reflect the current year.\n+If you run this script from the root folder it will automatically update the year on the copyright header for all\n+source files if these have a git commit from the current year.\n+\n+For example a file changed in 2015 (with 2015 being the current year):\n+\n+```// Copyright (c) 2009-2013 The Bitcoin Core developers```\n+\n+would be changed to:\n+\n+```// Copyright (c) 2009-2015 The Bitcoin Core developers```\n+\n+git-subtree-check.sh\n+====================\n+\n+Run this script from the root of the repository to verify that a subtree matches the contents of\n+the commit it claims to have been updated to.\n+\n+To use, make sure that you have fetched the upstream repository branch in which the subtree is\n+maintained:\n+* for `src/secp256k1`: https://github.com/bitcoin-core/secp256k1.git (branch master)\n+* for `src/leveldb`: https://github.com/bitcoin-core/leveldb.git (branch bitcoin-fork)\n+* for `src/univalue`: https://github.com/bitcoin-core/univalue.git (branch master)\n+\n+Usage: `git-subtree-check.sh DIR COMMIT`\n+\n+`COMMIT` may be omitted, in which case `HEAD` is used.\n+\n+github-merge.py\n+===============\n+\n+A small script to automate merging pull-requests securely and sign them with GPG.\n+\n+For example:\n+\n+  ./github-merge.py 3077\n+\n+(in any git repository) will help you merge pull request #3077 for the\n+bitcoin/bitcoin repository.\n+\n+What it does:\n+* Fetch master and the pull request.\n+* Locally construct a merge commit.\n+* Show the diff that merge results in.\n+* Ask you to verify the resulting source tree (so you can do a make\n+check or whatever).\n+* Ask you whether to GPG sign the merge commit.\n+* Ask you whether to push the result upstream.\n+\n+This means that there are no potential race conditions (where a\n+pullreq gets updated while you're reviewing it, but before you click\n+merge), and when using GPG signatures, that even a compromised github\n+couldn't mess with the sources.\n+\n+Setup\n+---------\n+Configuring the github-merge tool for the bitcoin repository is done in the following way:\n+\n+    git config githubmerge.repository bitcoin/bitcoin\n+    git config githubmerge.testcmd \"make -j4 check\" (adapt to whatever you want to use for testing)\n+    git config --global user.signingkey mykeyid (if you want to GPG sign)\n+\n+optimize-pngs.py\n+================\n+\n+A script to optimize png files in the bitcoin\n+repository (requires pngcrush).\n+\n+security-check.py and test-security-check.py\n+============================================\n+\n+Perform basic ELF security checks on a series of executables.\n+\n+symbol-check.py\n+===============\n+\n+A script to check that the (Linux) executables produced by gitian only contain\n+allowed gcc, glibc and libstdc++ version symbols. This makes sure they are\n+still compatible with the minimum supported Linux distribution versions.\n+\n+Example usage after a gitian build:\n+\n+    find ../gitian-builder/build -type f -executable | xargs python contrib/devtools/symbol-check.py \n+\n+If only supported symbols are used the return value will be 0 and the output will be empty.\n+\n+If there are 'unsupported' symbols, the return value will be 1 a list like this will be printed:\n+\n+    .../64/test_bitcoin: symbol memcpy from unsupported version GLIBC_2.14\n+    .../64/test_bitcoin: symbol __fdelt_chk from unsupported version GLIBC_2.15\n+    .../64/test_bitcoin: symbol std::out_of_range::~out_of_range() from unsupported version GLIBCXX_3.4.15\n+    .../64/test_bitcoin: symbol _ZNSt8__detail15_List_nod from unsupported version GLIBCXX_3.4.15\n+\n+update-translations.py\n+======================\n+\n+Run this script from the root of the repository to update all translations from transifex.\n+It will do the following automatically:\n+\n+- fetch all translations\n+- post-process them into valid and committable format\n+- add missing translations to the build system (TODO)\n+\n+See doc/translation-process.md for more information."
      },
      {
        "sha": "06c9551cebae5bf4aaac785a49e967052ce267d7",
        "filename": "contrib/devtools/check-doc.py",
        "status": "added",
        "additions": 45,
        "deletions": 0,
        "changes": 45,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/devtools/check-doc.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/devtools/check-doc.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/check-doc.py?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,45 @@\n+#!/usr/bin/env python\n+# Copyright (c) 2015 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+'''\n+This checks if all command line args are documented.\n+Return value is 0 to indicate no error.\n+\n+Author: @MarcoFalke\n+'''\n+\n+from subprocess import check_output\n+import re\n+\n+FOLDER_GREP = 'src'\n+FOLDER_TEST = 'src/test/'\n+CMD_ROOT_DIR = '`git rev-parse --show-toplevel`/%s' % FOLDER_GREP\n+CMD_GREP_ARGS = r\"egrep -r -I '(map(Multi)?Args(\\.count\\(|\\[)|Get(Bool)?Arg\\()\\\"\\-[^\\\"]+?\\\"' %s | grep -v '%s'\" % (CMD_ROOT_DIR, FOLDER_TEST)\n+CMD_GREP_DOCS = r\"egrep -r -I 'HelpMessageOpt\\(\\\"\\-[^\\\"=]+?(=|\\\")' %s\" % (CMD_ROOT_DIR)\n+REGEX_ARG = re.compile(r'(?:map(?:Multi)?Args(?:\\.count\\(|\\[)|Get(?:Bool)?Arg\\()\\\"(\\-[^\\\"]+?)\\\"')\n+REGEX_DOC = re.compile(r'HelpMessageOpt\\(\\\"(\\-[^\\\"=]+?)(?:=|\\\")')\n+# list unsupported, deprecated and duplicate args as they need no documentation\n+SET_DOC_OPTIONAL = set(['-rpcssl', '-benchmark', '-h', '-help', '-socks', '-tor', '-debugnet', '-whitelistalwaysrelay', '-prematurewitness', '-walletprematurewitness', '-promiscuousmempoolflags'])\n+\n+def main():\n+  used = check_output(CMD_GREP_ARGS, shell=True)\n+  docd = check_output(CMD_GREP_DOCS, shell=True)\n+\n+  args_used = set(re.findall(REGEX_ARG,used))\n+  args_docd = set(re.findall(REGEX_DOC,docd)).union(SET_DOC_OPTIONAL)\n+  args_need_doc = args_used.difference(args_docd)\n+  args_unknown = args_docd.difference(args_used)\n+\n+  print \"Args used        : %s\" % len(args_used)\n+  print \"Args documented  : %s\" % len(args_docd)\n+  print \"Args undocumented: %s\" % len(args_need_doc)\n+  print args_need_doc\n+  print \"Args unknown     : %s\" % len(args_unknown)\n+  print args_unknown\n+\n+  exit(len(args_need_doc))\n+\n+if __name__ == \"__main__\":\n+    main()"
      },
      {
        "sha": "13d2573b9ff874e0c536e246b6f94310b7c7587f",
        "filename": "contrib/devtools/clang-format-diff.py",
        "status": "added",
        "additions": 164,
        "deletions": 0,
        "changes": 164,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/devtools/clang-format-diff.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/devtools/clang-format-diff.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/clang-format-diff.py?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,164 @@\n+#!/usr/bin/env python\n+#\n+#===- clang-format-diff.py - ClangFormat Diff Reformatter ----*- python -*--===#\n+#\n+#                     The LLVM Compiler Infrastructure\n+#\n+# This file is distributed under the University of Illinois Open Source\n+# License.\n+#\n+#           ============================================================\n+#\n+# University of Illinois/NCSA\n+# Open Source License\n+#\n+# Copyright (c) 2007-2015 University of Illinois at Urbana-Champaign.\n+# All rights reserved.\n+#\n+# Developed by:\n+#\n+#     LLVM Team\n+#\n+#     University of Illinois at Urbana-Champaign\n+#\n+#     http://llvm.org\n+#\n+# Permission is hereby granted, free of charge, to any person obtaining a copy of\n+# this software and associated documentation files (the \"Software\"), to deal with\n+# the Software without restriction, including without limitation the rights to\n+# use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\n+# of the Software, and to permit persons to whom the Software is furnished to do\n+# so, subject to the following conditions:\n+#\n+#     * Redistributions of source code must retain the above copyright notice,\n+#       this list of conditions and the following disclaimers.\n+#\n+#     * Redistributions in binary form must reproduce the above copyright notice,\n+#       this list of conditions and the following disclaimers in the\n+#       documentation and/or other materials provided with the distribution.\n+#\n+#     * Neither the names of the LLVM Team, University of Illinois at\n+#       Urbana-Champaign, nor the names of its contributors may be used to\n+#       endorse or promote products derived from this Software without specific\n+#       prior written permission.\n+#\n+# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n+# FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n+# CONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS WITH THE\n+# SOFTWARE.\n+#\n+#           ============================================================\n+#\n+#===------------------------------------------------------------------------===#\n+\n+r\"\"\"\n+ClangFormat Diff Reformatter\n+============================\n+\n+This script reads input from a unified diff and reformats all the changed\n+lines. This is useful to reformat all the lines touched by a specific patch.\n+Example usage for git/svn users:\n+\n+  git diff -U0 HEAD^ | clang-format-diff.py -p1 -i\n+  svn diff --diff-cmd=diff -x-U0 | clang-format-diff.py -i\n+\n+\"\"\"\n+\n+import argparse\n+import difflib\n+import re\n+import string\n+import subprocess\n+import StringIO\n+import sys\n+\n+\n+# Change this to the full path if clang-format is not on the path.\n+binary = 'clang-format'\n+\n+\n+def main():\n+  parser = argparse.ArgumentParser(description=\n+                                   'Reformat changed lines in diff. Without -i '\n+                                   'option just output the diff that would be '\n+                                   'introduced.')\n+  parser.add_argument('-i', action='store_true', default=False,\n+                      help='apply edits to files instead of displaying a diff')\n+  parser.add_argument('-p', metavar='NUM', default=0,\n+                      help='strip the smallest prefix containing P slashes')\n+  parser.add_argument('-regex', metavar='PATTERN', default=None,\n+                      help='custom pattern selecting file paths to reformat '\n+                      '(case sensitive, overrides -iregex)')\n+  parser.add_argument('-iregex', metavar='PATTERN', default=\n+                      r'.*\\.(cpp|cc|c\\+\\+|cxx|c|cl|h|hpp|m|mm|inc|js|ts|proto'\n+                      r'|protodevel|java)',\n+                      help='custom pattern selecting file paths to reformat '\n+                      '(case insensitive, overridden by -regex)')\n+  parser.add_argument('-sort-includes', action='store_true', default=False,\n+                      help='let clang-format sort include blocks')\n+  parser.add_argument('-v', '--verbose', action='store_true',\n+                      help='be more verbose, ineffective without -i')\n+  args = parser.parse_args()\n+\n+  # Extract changed lines for each file.\n+  filename = None\n+  lines_by_file = {}\n+  for line in sys.stdin:\n+    match = re.search('^\\+\\+\\+\\ (.*?/){%s}(\\S*)' % args.p, line)\n+    if match:\n+      filename = match.group(2)\n+    if filename == None:\n+      continue\n+\n+    if args.regex is not None:\n+      if not re.match('^%s$' % args.regex, filename):\n+        continue\n+    else:\n+      if not re.match('^%s$' % args.iregex, filename, re.IGNORECASE):\n+        continue\n+\n+    match = re.search('^@@.*\\+(\\d+)(,(\\d+))?', line)\n+    if match:\n+      start_line = int(match.group(1))\n+      line_count = 1\n+      if match.group(3):\n+        line_count = int(match.group(3))\n+      if line_count == 0:\n+        continue\n+      end_line = start_line + line_count - 1;\n+      lines_by_file.setdefault(filename, []).extend(\n+          ['-lines', str(start_line) + ':' + str(end_line)])\n+\n+  # Reformat files containing changes in place.\n+  for filename, lines in lines_by_file.iteritems():\n+    if args.i and args.verbose:\n+      print 'Formatting', filename\n+    command = [binary, filename]\n+    if args.i:\n+      command.append('-i')\n+    if args.sort_includes:\n+      command.append('-sort-includes')\n+    command.extend(lines)\n+    command.extend(['-style=file', '-fallback-style=none'])\n+    p = subprocess.Popen(command, stdout=subprocess.PIPE,\n+                         stderr=None, stdin=subprocess.PIPE)\n+    stdout, stderr = p.communicate()\n+    if p.returncode != 0:\n+      sys.exit(p.returncode);\n+\n+    if not args.i:\n+      with open(filename) as f:\n+        code = f.readlines()\n+      formatted_code = StringIO.StringIO(stdout).readlines()\n+      diff = difflib.unified_diff(code, formatted_code,\n+                                  filename, filename,\n+                                  '(before formatting)', '(after formatting)')\n+      diff_string = string.join(diff, '')\n+      if len(diff_string) > 0:\n+        sys.stdout.write(diff_string)\n+\n+if __name__ == '__main__':\n+  main()"
      },
      {
        "sha": "cee99047ac67e69fe767a910ac56811e574cfc8d",
        "filename": "contrib/devtools/clang-format.py",
        "status": "added",
        "additions": 62,
        "deletions": 0,
        "changes": 62,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/devtools/clang-format.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/devtools/clang-format.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/clang-format.py?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,62 @@\n+#!/usr/bin/env python\n+'''\n+Wrapper script for clang-format\n+\n+Copyright (c) 2015 MarcoFalke\n+Copyright (c) 2015 The Bitcoin Core developers\n+Distributed under the MIT software license, see the accompanying\n+file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+'''\n+\n+import os\n+import sys\n+import subprocess\n+\n+tested_versions = ['3.6.0', '3.6.1', '3.6.2'] # A set of versions known to produce the same output\n+accepted_file_extensions = ('.h', '.cpp') # Files to format\n+\n+def check_clang_format_version(clang_format_exe):\n+    try:\n+        output = subprocess.check_output([clang_format_exe, '-version'])\n+        for ver in tested_versions:\n+            if ver in output:\n+                print \"Detected clang-format version \" + ver\n+                return\n+        raise RuntimeError(\"Untested version: \" + output)\n+    except Exception as e:\n+        print 'Could not verify version of ' + clang_format_exe + '.'\n+        raise e\n+\n+def check_command_line_args(argv):\n+    required_args = ['{clang-format-exe}', '{files}']\n+    example_args = ['clang-format-3.x', 'src/main.cpp', 'src/wallet/*']\n+\n+    if(len(argv) < len(required_args) + 1):\n+        for word in (['Usage:', argv[0]] + required_args):\n+            print word,\n+        print ''\n+        for word in (['E.g:', argv[0]] + example_args):\n+            print word,\n+        print ''\n+        sys.exit(1)\n+\n+def run_clang_format(clang_format_exe, files):\n+    for target in files:\n+        if os.path.isdir(target):\n+            for path, dirs, files in os.walk(target):\n+                run_clang_format(clang_format_exe, (os.path.join(path, f) for f in files))\n+        elif target.endswith(accepted_file_extensions):\n+            print \"Format \" + target\n+            subprocess.check_call([clang_format_exe, '-i', '-style=file', target], stdout=open(os.devnull, 'wb'), stderr=subprocess.STDOUT)\n+        else:\n+            print \"Skip \" + target\n+\n+def main(argv):\n+    check_command_line_args(argv)\n+    clang_format_exe = argv[1]\n+    files = argv[2:]\n+    check_clang_format_version(clang_format_exe)\n+    run_clang_format(clang_format_exe, files)\n+\n+if __name__ == \"__main__\":\n+    main(sys.argv)"
      },
      {
        "sha": "b6414a551f8707a032e3f310ea9d1f9badec20e2",
        "filename": "contrib/devtools/fix-copyright-headers.py",
        "status": "added",
        "additions": 46,
        "deletions": 0,
        "changes": 46,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/devtools/fix-copyright-headers.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/devtools/fix-copyright-headers.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/fix-copyright-headers.py?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,46 @@\n+#!/usr/bin/env python\n+'''\n+Run this script to update all the copyright headers of files\n+that were changed this year.\n+\n+For example:\n+\n+// Copyright (c) 2009-2012 The Bitcoin Core developers\n+\n+it will change it to\n+\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n+'''\n+import os\n+import time\n+import re\n+\n+year = time.gmtime()[0]\n+CMD_GIT_DATE = 'git log --format=@%%at -1 %s | date +\"%%Y\" -u -f -'\n+CMD_REGEX= \"perl -pi -e 's/(20\\d\\d)(?:-20\\d\\d)? The Bitcoin/$1-%s The Bitcoin/' %s\"\n+REGEX_CURRENT= re.compile(\"%s The Bitcoin\" % year)\n+CMD_LIST_FILES= \"find %s | grep %s\"\n+\n+FOLDERS = [\"./qa\", \"./src\"]\n+EXTENSIONS = [\".cpp\",\".h\", \".py\"]\n+\n+def get_git_date(file_path):\n+  r = os.popen(CMD_GIT_DATE % file_path)\n+  for l in r:\n+    # Result is one line, so just return\n+    return l.replace(\"\\n\",\"\")\n+  return \"\"\n+\n+n=1\n+for folder in FOLDERS:\n+  for extension in EXTENSIONS:\n+    for file_path in os.popen(CMD_LIST_FILES % (folder, extension)):\n+      file_path = os.getcwd() + file_path[1:-1]\n+      if file_path.endswith(extension):\n+        git_date = get_git_date(file_path)\n+        if str(year) == git_date:\n+          # Only update if current year is not found\n+          if REGEX_CURRENT.search(open(file_path, \"r\").read()) is None:\n+            print n,\"Last git edit\", git_date, \"-\", file_path\n+            os.popen(CMD_REGEX % (year,file_path))\n+            n = n + 1"
      },
      {
        "sha": "1cb82fe6826c74af49cf381ecaf5381ab210bdb7",
        "filename": "contrib/devtools/git-subtree-check.sh",
        "status": "added",
        "additions": 74,
        "deletions": 0,
        "changes": 74,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/devtools/git-subtree-check.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/devtools/git-subtree-check.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/git-subtree-check.sh?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,74 @@\n+#!/bin/sh\n+\n+DIR=\"$1\"\n+COMMIT=\"$2\"\n+if [ -z \"$COMMIT\" ]; then\n+    COMMIT=HEAD\n+fi\n+\n+# Taken from git-subtree (Copyright (C) 2009 Avery Pennarun <apenwarr@gmail.com>)\n+find_latest_squash()\n+{\n+\tdir=\"$1\"\n+\tsq=\n+\tmain=\n+\tsub=\n+\tgit log --grep=\"^git-subtree-dir: $dir/*\\$\" \\\n+\t\t--pretty=format:'START %H%n%s%n%n%b%nEND%n' \"$COMMIT\" |\n+\twhile read a b junk; do\n+\t\tcase \"$a\" in\n+\t\t\tSTART) sq=\"$b\" ;;\n+\t\t\tgit-subtree-mainline:) main=\"$b\" ;;\n+\t\t\tgit-subtree-split:) sub=\"$b\" ;;\n+\t\t\tEND)\n+\t\t\t\tif [ -n \"$sub\" ]; then\n+\t\t\t\t\tif [ -n \"$main\" ]; then\n+\t\t\t\t\t\t# a rejoin commit?\n+\t\t\t\t\t\t# Pretend its sub was a squash.\n+\t\t\t\t\t\tsq=\"$sub\"\n+\t\t\t\t\tfi\n+\t\t\t\t\techo \"$sq\" \"$sub\"\n+\t\t\t\t\tbreak\n+\t\t\t\tfi\n+\t\t\t\tsq=\n+\t\t\t\tmain=\n+\t\t\t\tsub=\n+\t\t\t\t;;\n+\t\tesac\n+\tdone\n+}\n+\n+latest_squash=\"$(find_latest_squash \"$DIR\")\"\n+if [ -z \"$latest_squash\" ]; then\n+    echo \"ERROR: $DIR is not a subtree\" >&2\n+    exit 2\n+fi\n+\n+set $latest_squash\n+old=$1\n+rev=$2\n+if [ \"d$(git cat-file -t $rev 2>/dev/null)\" != dcommit ]; then\n+    echo \"ERROR: subtree commit $rev unavailable. Fetch/update the subtree repository\" >&2\n+    exit 2\n+fi\n+tree_subtree=$(git show -s --format=\"%T\" $rev)\n+echo \"$DIR in $COMMIT was last updated to upstream commit $rev (tree $tree_subtree)\"\n+tree_actual=$(git ls-tree -d \"$COMMIT\" \"$DIR\" | head -n 1)\n+if [ -z \"$tree_actual\" ]; then\n+    echo \"FAIL: subtree directory $DIR not found in $COMMIT\" >&2\n+    exit 1\n+fi\n+set $tree_actual\n+tree_actual_type=$2\n+tree_actual_tree=$3\n+echo \"$DIR in $COMMIT currently refers to $tree_actual_type $tree_actual_tree\"\n+if [ \"d$tree_actual_type\" != \"dtree\" ]; then\n+    echo \"FAIL: subtree directory $DIR is not a tree in $COMMIT\" >&2\n+    exit 1\n+fi\n+if [ \"$tree_actual_tree\" != \"$tree_subtree\" ]; then\n+    git diff-tree $tree_actual_tree $tree_subtree >&2\n+    echo \"FAIL: subtree directory tree doesn't match subtree commit tree\" >&2\n+    exit 1\n+fi\n+echo \"GOOD\""
      },
      {
        "sha": "f82362fe417e3f2e7ed46282420c823414b8c417",
        "filename": "contrib/devtools/github-merge.py",
        "status": "added",
        "additions": 251,
        "deletions": 0,
        "changes": 251,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/devtools/github-merge.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/devtools/github-merge.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/github-merge.py?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,251 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2016 Bitcoin Core Developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+# This script will locally construct a merge commit for a pull request on a\n+# github repository, inspect it, sign it and optionally push it.\n+\n+# The following temporary branches are created/overwritten and deleted:\n+# * pull/$PULL/base (the current master we're merging onto)\n+# * pull/$PULL/head (the current state of the remote pull request)\n+# * pull/$PULL/merge (github's merge)\n+# * pull/$PULL/local-merge (our merge)\n+\n+# In case of a clean merge that is accepted by the user, the local branch with\n+# name $BRANCH is overwritten with the merged result, and optionally pushed.\n+from __future__ import division,print_function,unicode_literals\n+import os,sys\n+from sys import stdin,stdout,stderr\n+import argparse\n+import subprocess\n+import json,codecs\n+try:\n+    from urllib.request import Request,urlopen\n+except:\n+    from urllib2 import Request,urlopen\n+\n+# External tools (can be overridden using environment)\n+GIT = os.getenv('GIT','git')\n+BASH = os.getenv('BASH','bash')\n+\n+# OS specific configuration for terminal attributes\n+ATTR_RESET = ''\n+ATTR_PR = ''\n+COMMIT_FORMAT = '%h %s (%an)%d'\n+if os.name == 'posix': # if posix, assume we can use basic terminal escapes\n+    ATTR_RESET = '\\033[0m'\n+    ATTR_PR = '\\033[1;36m'\n+    COMMIT_FORMAT = '%C(bold blue)%h%Creset %s %C(cyan)(%an)%Creset%C(green)%d%Creset'\n+\n+def git_config_get(option, default=None):\n+    '''\n+    Get named configuration option from git repository.\n+    '''\n+    try:\n+        return subprocess.check_output([GIT,'config','--get',option]).rstrip().decode('utf-8')\n+    except subprocess.CalledProcessError as e:\n+        return default\n+\n+def retrieve_pr_info(repo,pull):\n+    '''\n+    Retrieve pull request information from github.\n+    Return None if no title can be found, or an error happens.\n+    '''\n+    try:\n+        req = Request(\"https://api.github.com/repos/\"+repo+\"/pulls/\"+pull)\n+        result = urlopen(req)\n+        reader = codecs.getreader('utf-8')\n+        obj = json.load(reader(result))\n+        return obj\n+    except Exception as e:\n+        print('Warning: unable to retrieve pull information from github: %s' % e)\n+        return None\n+\n+def ask_prompt(text):\n+    print(text,end=\" \",file=stderr)\n+    stderr.flush()\n+    reply = stdin.readline().rstrip()\n+    print(\"\",file=stderr)\n+    return reply\n+\n+def parse_arguments():\n+    epilog = '''\n+        In addition, you can set the following git configuration variables:\n+        githubmerge.repository (mandatory),\n+        user.signingkey (mandatory),\n+        githubmerge.host (default: git@github.com),\n+        githubmerge.branch (no default),\n+        githubmerge.testcmd (default: none).\n+    '''\n+    parser = argparse.ArgumentParser(description='Utility to merge, sign and push github pull requests',\n+            epilog=epilog)\n+    parser.add_argument('pull', metavar='PULL', type=int, nargs=1,\n+        help='Pull request ID to merge')\n+    parser.add_argument('branch', metavar='BRANCH', type=str, nargs='?',\n+        default=None, help='Branch to merge against (default: githubmerge.branch setting, or base branch for pull, or \\'master\\')')\n+    return parser.parse_args()\n+\n+def main():\n+    # Extract settings from git repo\n+    repo = git_config_get('githubmerge.repository')\n+    host = git_config_get('githubmerge.host','git@github.com')\n+    opt_branch = git_config_get('githubmerge.branch',None)\n+    testcmd = git_config_get('githubmerge.testcmd')\n+    signingkey = git_config_get('user.signingkey')\n+    if repo is None:\n+        print(\"ERROR: No repository configured. Use this command to set:\", file=stderr)\n+        print(\"git config githubmerge.repository <owner>/<repo>\", file=stderr)\n+        exit(1)\n+    if signingkey is None:\n+        print(\"ERROR: No GPG signing key set. Set one using:\",file=stderr)\n+        print(\"git config --global user.signingkey <key>\",file=stderr)\n+        exit(1)\n+\n+    host_repo = host+\":\"+repo # shortcut for push/pull target\n+\n+    # Extract settings from command line\n+    args = parse_arguments()\n+    pull = str(args.pull[0])\n+\n+    # Receive pull information from github\n+    info = retrieve_pr_info(repo,pull)\n+    if info is None:\n+        exit(1)\n+    title = info['title']\n+    # precedence order for destination branch argument:\n+    #   - command line argument\n+    #   - githubmerge.branch setting\n+    #   - base branch for pull (as retrieved from github)\n+    #   - 'master'\n+    branch = args.branch or opt_branch or info['base']['ref'] or 'master'\n+\n+    # Initialize source branches\n+    head_branch = 'pull/'+pull+'/head'\n+    base_branch = 'pull/'+pull+'/base'\n+    merge_branch = 'pull/'+pull+'/merge'\n+    local_merge_branch = 'pull/'+pull+'/local-merge'\n+\n+    devnull = open(os.devnull,'w')\n+    try:\n+        subprocess.check_call([GIT,'checkout','-q',branch])\n+    except subprocess.CalledProcessError as e:\n+        print(\"ERROR: Cannot check out branch %s.\" % (branch), file=stderr)\n+        exit(3)\n+    try:\n+        subprocess.check_call([GIT,'fetch','-q',host_repo,'+refs/pull/'+pull+'/*:refs/heads/pull/'+pull+'/*'])\n+    except subprocess.CalledProcessError as e:\n+        print(\"ERROR: Cannot find pull request #%s on %s.\" % (pull,host_repo), file=stderr)\n+        exit(3)\n+    try:\n+        subprocess.check_call([GIT,'log','-q','-1','refs/heads/'+head_branch], stdout=devnull, stderr=stdout)\n+    except subprocess.CalledProcessError as e:\n+        print(\"ERROR: Cannot find head of pull request #%s on %s.\" % (pull,host_repo), file=stderr)\n+        exit(3)\n+    try:\n+        subprocess.check_call([GIT,'log','-q','-1','refs/heads/'+merge_branch], stdout=devnull, stderr=stdout)\n+    except subprocess.CalledProcessError as e:\n+        print(\"ERROR: Cannot find merge of pull request #%s on %s.\" % (pull,host_repo), file=stderr)\n+        exit(3)\n+    try:\n+        subprocess.check_call([GIT,'fetch','-q',host_repo,'+refs/heads/'+branch+':refs/heads/'+base_branch])\n+    except subprocess.CalledProcessError as e:\n+        print(\"ERROR: Cannot find branch %s on %s.\" % (branch,host_repo), file=stderr)\n+        exit(3)\n+    subprocess.check_call([GIT,'checkout','-q',base_branch])\n+    subprocess.call([GIT,'branch','-q','-D',local_merge_branch], stderr=devnull)\n+    subprocess.check_call([GIT,'checkout','-q','-b',local_merge_branch])\n+\n+    try:\n+        # Create unsigned merge commit.\n+        if title:\n+            firstline = 'Merge #%s: %s' % (pull,title)\n+        else:\n+            firstline = 'Merge #%s' % (pull,)\n+        message = firstline + '\\n\\n'\n+        message += subprocess.check_output([GIT,'log','--no-merges','--topo-order','--pretty=format:%h %s (%an)',base_branch+'..'+head_branch]).decode('utf-8')\n+        try:\n+            subprocess.check_call([GIT,'merge','-q','--commit','--no-edit','--no-ff','-m',message.encode('utf-8'),head_branch])\n+        except subprocess.CalledProcessError as e:\n+            print(\"ERROR: Cannot be merged cleanly.\",file=stderr)\n+            subprocess.check_call([GIT,'merge','--abort'])\n+            exit(4)\n+        logmsg = subprocess.check_output([GIT,'log','--pretty=format:%s','-n','1']).decode('utf-8')\n+        if logmsg.rstrip() != firstline.rstrip():\n+            print(\"ERROR: Creating merge failed (already merged?).\",file=stderr)\n+            exit(4)\n+\n+        print('%s#%s%s %s %sinto %s%s' % (ATTR_RESET+ATTR_PR,pull,ATTR_RESET,title,ATTR_RESET+ATTR_PR,branch,ATTR_RESET))\n+        subprocess.check_call([GIT,'log','--graph','--topo-order','--pretty=format:'+COMMIT_FORMAT,base_branch+'..'+head_branch])\n+        print()\n+        # Run test command if configured.\n+        if testcmd:\n+            # Go up to the repository's root.\n+            toplevel = subprocess.check_output([GIT,'rev-parse','--show-toplevel']).strip()\n+            os.chdir(toplevel)\n+            if subprocess.call(testcmd,shell=True):\n+                print(\"ERROR: Running %s failed.\" % testcmd,file=stderr)\n+                exit(5)\n+\n+            # Show the created merge.\n+            diff = subprocess.check_output([GIT,'diff',merge_branch+'..'+local_merge_branch])\n+            subprocess.check_call([GIT,'diff',base_branch+'..'+local_merge_branch])\n+            if diff:\n+                print(\"WARNING: merge differs from github!\",file=stderr)\n+                reply = ask_prompt(\"Type 'ignore' to continue.\")\n+                if reply.lower() == 'ignore':\n+                    print(\"Difference with github ignored.\",file=stderr)\n+                else:\n+                    exit(6)\n+            reply = ask_prompt(\"Press 'd' to accept the diff.\")\n+            if reply.lower() == 'd':\n+                print(\"Diff accepted.\",file=stderr)\n+            else:\n+                print(\"ERROR: Diff rejected.\",file=stderr)\n+                exit(6)\n+        else:\n+            # Verify the result manually.\n+            print(\"Dropping you on a shell so you can try building/testing the merged source.\",file=stderr)\n+            print(\"Run 'git diff HEAD~' to show the changes being merged.\",file=stderr)\n+            print(\"Type 'exit' when done.\",file=stderr)\n+            if os.path.isfile('/etc/debian_version'): # Show pull number on Debian default prompt\n+                os.putenv('debian_chroot',pull)\n+            subprocess.call([BASH,'-i'])\n+            reply = ask_prompt(\"Type 'm' to accept the merge.\")\n+            if reply.lower() == 'm':\n+                print(\"Merge accepted.\",file=stderr)\n+            else:\n+                print(\"ERROR: Merge rejected.\",file=stderr)\n+                exit(7)\n+\n+        # Sign the merge commit.\n+        reply = ask_prompt(\"Type 's' to sign off on the merge.\")\n+        if reply == 's':\n+            try:\n+                subprocess.check_call([GIT,'commit','-q','--gpg-sign','--amend','--no-edit'])\n+            except subprocess.CalledProcessError as e:\n+                print(\"Error signing, exiting.\",file=stderr)\n+                exit(1)\n+        else:\n+            print(\"Not signing off on merge, exiting.\",file=stderr)\n+            exit(1)\n+\n+        # Put the result in branch.\n+        subprocess.check_call([GIT,'checkout','-q',branch])\n+        subprocess.check_call([GIT,'reset','-q','--hard',local_merge_branch])\n+    finally:\n+        # Clean up temporary branches.\n+        subprocess.call([GIT,'checkout','-q',branch])\n+        subprocess.call([GIT,'branch','-q','-D',head_branch],stderr=devnull)\n+        subprocess.call([GIT,'branch','-q','-D',base_branch],stderr=devnull)\n+        subprocess.call([GIT,'branch','-q','-D',merge_branch],stderr=devnull)\n+        subprocess.call([GIT,'branch','-q','-D',local_merge_branch],stderr=devnull)\n+\n+    # Push the result.\n+    reply = ask_prompt(\"Type 'push' to push the result to %s, branch %s.\" % (host_repo,branch))\n+    if reply.lower() == 'push':\n+        subprocess.check_call([GIT,'push',host_repo,'refs/heads/'+branch])\n+\n+if __name__ == '__main__':\n+    main()\n+"
      },
      {
        "sha": "799e0cc7d0fb15b6e9338c711d5ca4d813a06a32",
        "filename": "contrib/devtools/optimize-pngs.py",
        "status": "added",
        "additions": 75,
        "deletions": 0,
        "changes": 75,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/devtools/optimize-pngs.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/devtools/optimize-pngs.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/optimize-pngs.py?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,75 @@\n+#!/usr/bin/env python\n+'''\n+Run this script every time you change one of the png files. Using pngcrush, it will optimize the png files, remove various color profiles, remove ancillary chunks (alla) and text chunks (text).\n+#pngcrush -brute -ow -rem gAMA -rem cHRM -rem iCCP -rem sRGB -rem alla -rem text\n+'''\n+import os\n+import sys\n+import subprocess\n+import hashlib\n+from PIL import Image\n+\n+def file_hash(filename):\n+    '''Return hash of raw file contents'''\n+    with open(filename, 'rb') as f:\n+        return hashlib.sha256(f.read()).hexdigest()\n+\n+def content_hash(filename):\n+    '''Return hash of RGBA contents of image'''\n+    i = Image.open(filename)\n+    i = i.convert('RGBA')\n+    data = i.tobytes()\n+    return hashlib.sha256(data).hexdigest()\n+\n+pngcrush = 'pngcrush'\n+git = 'git'\n+folders = [\"src/qt/res/movies\", \"src/qt/res/icons\", \"share/pixmaps\"]\n+basePath = subprocess.check_output([git, 'rev-parse', '--show-toplevel']).rstrip('\\n')\n+totalSaveBytes = 0\n+noHashChange = True\n+\n+outputArray = []\n+for folder in folders:\n+    absFolder=os.path.join(basePath, folder)\n+    for file in os.listdir(absFolder):\n+        extension = os.path.splitext(file)[1]\n+        if extension.lower() == '.png':\n+            print(\"optimizing \"+file+\"...\"),\n+            file_path = os.path.join(absFolder, file)\n+            fileMetaMap = {'file' : file, 'osize': os.path.getsize(file_path), 'sha256Old' : file_hash(file_path)};\n+            fileMetaMap['contentHashPre'] = content_hash(file_path)\n+        \n+            pngCrushOutput = \"\"\n+            try:\n+                pngCrushOutput = subprocess.check_output(\n+                        [pngcrush, \"-brute\", \"-ow\", \"-rem\", \"gAMA\", \"-rem\", \"cHRM\", \"-rem\", \"iCCP\", \"-rem\", \"sRGB\", \"-rem\", \"alla\", \"-rem\", \"text\", file_path],\n+                        stderr=subprocess.STDOUT).rstrip('\\n')\n+            except:\n+                print \"pngcrush is not installed, aborting...\"\n+                sys.exit(0)\n+        \n+            #verify\n+            if \"Not a PNG file\" in subprocess.check_output([pngcrush, \"-n\", \"-v\", file_path], stderr=subprocess.STDOUT):\n+                print \"PNG file \"+file+\" is corrupted after crushing, check out pngcursh version\"\n+                sys.exit(1)\n+            \n+            fileMetaMap['sha256New'] = file_hash(file_path)\n+            fileMetaMap['contentHashPost'] = content_hash(file_path)\n+\n+            if fileMetaMap['contentHashPre'] != fileMetaMap['contentHashPost']:\n+                print \"Image contents of PNG file \"+file+\" before and after crushing don't match\"\n+                sys.exit(1)\n+\n+            fileMetaMap['psize'] = os.path.getsize(file_path)\n+            outputArray.append(fileMetaMap)\n+            print(\"done\\n\"),\n+\n+print \"summary:\\n+++++++++++++++++\"\n+for fileDict in outputArray:\n+    oldHash = fileDict['sha256Old']\n+    newHash = fileDict['sha256New']\n+    totalSaveBytes += fileDict['osize'] - fileDict['psize']\n+    noHashChange = noHashChange and (oldHash == newHash)\n+    print fileDict['file']+\"\\n  size diff from: \"+str(fileDict['osize'])+\" to: \"+str(fileDict['psize'])+\"\\n  old sha256: \"+oldHash+\"\\n  new sha256: \"+newHash+\"\\n\"\n+    \n+print \"completed. Checksum stable: \"+str(noHashChange)+\". Total reduction: \"+str(totalSaveBytes)+\" bytes\""
      },
      {
        "sha": "301fea85c1f6f4e26d51efe1ce70297e350f6a01",
        "filename": "contrib/devtools/security-check.py",
        "status": "added",
        "additions": 181,
        "deletions": 0,
        "changes": 181,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/devtools/security-check.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/devtools/security-check.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/security-check.py?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,181 @@\n+#!/usr/bin/python2\n+'''\n+Perform basic ELF security checks on a series of executables.\n+Exit status will be 0 if successful, and the program will be silent.\n+Otherwise the exit status will be 1 and it will log which executables failed which checks.\n+Needs `readelf` (for ELF) and `objdump` (for PE).\n+'''\n+from __future__ import division,print_function,unicode_literals\n+import subprocess\n+import sys\n+import os\n+\n+READELF_CMD = os.getenv('READELF', '/usr/bin/readelf')\n+OBJDUMP_CMD = os.getenv('OBJDUMP', '/usr/bin/objdump')\n+\n+def check_ELF_PIE(executable):\n+    '''\n+    Check for position independent executable (PIE), allowing for address space randomization.\n+    '''\n+    p = subprocess.Popen([READELF_CMD, '-h', '-W', executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE)\n+    (stdout, stderr) = p.communicate()\n+    if p.returncode:\n+        raise IOError('Error opening file')\n+\n+    ok = False\n+    for line in stdout.split(b'\\n'):\n+        line = line.split()\n+        if len(line)>=2 and line[0] == b'Type:' and line[1] == b'DYN':\n+            ok = True\n+    return ok\n+\n+def get_ELF_program_headers(executable):\n+    '''Return type and flags for ELF program headers'''\n+    p = subprocess.Popen([READELF_CMD, '-l', '-W', executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE)\n+    (stdout, stderr) = p.communicate()\n+    if p.returncode:\n+        raise IOError('Error opening file')\n+    in_headers = False\n+    count = 0\n+    headers = []\n+    for line in stdout.split(b'\\n'):\n+        if line.startswith(b'Program Headers:'):\n+            in_headers = True\n+        if line == b'':\n+            in_headers = False\n+        if in_headers:\n+            if count == 1: # header line\n+                ofs_typ = line.find(b'Type')\n+                ofs_offset = line.find(b'Offset')\n+                ofs_flags = line.find(b'Flg')\n+                ofs_align = line.find(b'Align')\n+                if ofs_typ == -1 or ofs_offset == -1 or ofs_flags == -1 or ofs_align  == -1:\n+                    raise ValueError('Cannot parse elfread -lW output')\n+            elif count > 1:\n+                typ = line[ofs_typ:ofs_offset].rstrip()\n+                flags = line[ofs_flags:ofs_align].rstrip()\n+                headers.append((typ, flags))\n+            count += 1\n+    return headers\n+\n+def check_ELF_NX(executable):\n+    '''\n+    Check that no sections are writable and executable (including the stack)\n+    '''\n+    have_wx = False\n+    have_gnu_stack = False\n+    for (typ, flags) in get_ELF_program_headers(executable):\n+        if typ == b'GNU_STACK':\n+            have_gnu_stack = True\n+        if b'W' in flags and b'E' in flags: # section is both writable and executable\n+            have_wx = True\n+    return have_gnu_stack and not have_wx\n+\n+def check_ELF_RELRO(executable):\n+    '''\n+    Check for read-only relocations.\n+    GNU_RELRO program header must exist\n+    Dynamic section must have BIND_NOW flag\n+    '''\n+    have_gnu_relro = False\n+    for (typ, flags) in get_ELF_program_headers(executable):\n+        # Note: not checking flags == 'R': here as linkers set the permission differently\n+        # This does not affect security: the permission flags of the GNU_RELRO program header are ignored, the PT_LOAD header determines the effective permissions.\n+        # However, the dynamic linker need to write to this area so these are RW.\n+        # Glibc itself takes care of mprotecting this area R after relocations are finished.\n+        # See also http://permalink.gmane.org/gmane.comp.gnu.binutils/71347\n+        if typ == b'GNU_RELRO':\n+            have_gnu_relro = True\n+\n+    have_bindnow = False\n+    p = subprocess.Popen([READELF_CMD, '-d', '-W', executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE)\n+    (stdout, stderr) = p.communicate()\n+    if p.returncode:\n+        raise IOError('Error opening file')\n+    for line in stdout.split(b'\\n'):\n+        tokens = line.split()\n+        if len(tokens)>1 and tokens[1] == b'(BIND_NOW)' or (len(tokens)>2 and tokens[1] == b'(FLAGS)' and b'BIND_NOW' in tokens[2]):\n+            have_bindnow = True\n+    return have_gnu_relro and have_bindnow\n+\n+def check_ELF_Canary(executable):\n+    '''\n+    Check for use of stack canary\n+    '''\n+    p = subprocess.Popen([READELF_CMD, '--dyn-syms', '-W', executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE)\n+    (stdout, stderr) = p.communicate()\n+    if p.returncode:\n+        raise IOError('Error opening file')\n+    ok = False\n+    for line in stdout.split(b'\\n'):\n+        if b'__stack_chk_fail' in line:\n+            ok = True\n+    return ok\n+\n+def get_PE_dll_characteristics(executable):\n+    '''\n+    Get PE DllCharacteristics bits\n+    '''\n+    p = subprocess.Popen([OBJDUMP_CMD, '-x',  executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE)\n+    (stdout, stderr) = p.communicate()\n+    if p.returncode:\n+        raise IOError('Error opening file')\n+    for line in stdout.split('\\n'):\n+        tokens = line.split()\n+        if len(tokens)>=2 and tokens[0] == 'DllCharacteristics':\n+            return int(tokens[1],16)\n+    return 0\n+\n+\n+def check_PE_PIE(executable):\n+    '''PIE: DllCharacteristics bit 0x40 signifies dynamicbase (ASLR)'''\n+    return bool(get_PE_dll_characteristics(executable) & 0x40)\n+\n+def check_PE_NX(executable):\n+    '''NX: DllCharacteristics bit 0x100 signifies nxcompat (DEP)'''\n+    return bool(get_PE_dll_characteristics(executable) & 0x100)\n+\n+CHECKS = {\n+'ELF': [\n+    ('PIE', check_ELF_PIE),\n+    ('NX', check_ELF_NX),\n+    ('RELRO', check_ELF_RELRO),\n+    ('Canary', check_ELF_Canary)\n+],\n+'PE': [\n+    ('PIE', check_PE_PIE),\n+    ('NX', check_PE_NX)\n+]\n+}\n+\n+def identify_executable(executable):\n+    with open(filename, 'rb') as f:\n+        magic = f.read(4)\n+    if magic.startswith(b'MZ'):\n+        return 'PE'\n+    elif magic.startswith(b'\\x7fELF'):\n+        return 'ELF'\n+    return None\n+\n+if __name__ == '__main__':\n+    retval = 0\n+    for filename in sys.argv[1:]:\n+        try:\n+            etype = identify_executable(filename)\n+            if etype is None:\n+                print('%s: unknown format' % filename)\n+                retval = 1\n+                continue\n+\n+            failed = []\n+            for (name, func) in CHECKS[etype]:\n+                if not func(filename):\n+                    failed.append(name)\n+            if failed:\n+                print('%s: failed %s' % (filename, ' '.join(failed)))\n+                retval = 1\n+        except IOError:\n+            print('%s: cannot open' % filename)\n+            retval = 1\n+    exit(retval)\n+"
      },
      {
        "sha": "deda49cc541043d0a05aee05038c69ee1dee51b3",
        "filename": "contrib/devtools/split-debug.sh.in",
        "status": "added",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/devtools/split-debug.sh.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/devtools/split-debug.sh.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/split-debug.sh.in?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,10 @@\n+#!/bin/sh\n+\n+if [ $# -ne 3 ];\n+    then echo \"usage: $0 <input> <stripped-binary> <debug-binary>\"\n+fi\n+\n+@OBJCOPY@ --enable-deterministic-archives -p --only-keep-debug $1 $3\n+@OBJCOPY@ --enable-deterministic-archives -p --strip-debug $1 $2\n+@STRIP@ --enable-deterministic-archives -p -s $2\n+@OBJCOPY@ --enable-deterministic-archives -p --add-gnu-debuglink=$3 $2"
      },
      {
        "sha": "e26c0fbb94455c56281f1d1cc524966a807f3750",
        "filename": "contrib/devtools/symbol-check.py",
        "status": "added",
        "additions": 164,
        "deletions": 0,
        "changes": 164,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/devtools/symbol-check.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/devtools/symbol-check.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/symbol-check.py?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,164 @@\n+#!/usr/bin/python2\n+# Copyright (c) 2014 Wladimir J. van der Laan\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+'''\n+A script to check that the (Linux) executables produced by gitian only contain\n+allowed gcc, glibc and libstdc++ version symbols.  This makes sure they are\n+still compatible with the minimum supported Linux distribution versions.\n+\n+Example usage:\n+\n+    find ../gitian-builder/build -type f -executable | xargs python contrib/devtools/symbol-check.py\n+'''\n+from __future__ import division, print_function, unicode_literals\n+import subprocess\n+import re\n+import sys\n+import os\n+\n+# Debian 6.0.9 (Squeeze) has:\n+#\n+# - g++ version 4.4.5 (https://packages.debian.org/search?suite=default&section=all&arch=any&searchon=names&keywords=g%2B%2B)\n+# - libc version 2.11.3 (https://packages.debian.org/search?suite=default&section=all&arch=any&searchon=names&keywords=libc6)\n+# - libstdc++ version 4.4.5 (https://packages.debian.org/search?suite=default&section=all&arch=any&searchon=names&keywords=libstdc%2B%2B6)\n+#\n+# Ubuntu 10.04.4 (Lucid Lynx) has:\n+#\n+# - g++ version 4.4.3 (http://packages.ubuntu.com/search?keywords=g%2B%2B&searchon=names&suite=lucid&section=all)\n+# - libc version 2.11.1 (http://packages.ubuntu.com/search?keywords=libc6&searchon=names&suite=lucid&section=all)\n+# - libstdc++ version 4.4.3 (http://packages.ubuntu.com/search?suite=lucid&section=all&arch=any&keywords=libstdc%2B%2B&searchon=names)\n+#\n+# Taking the minimum of these as our target.\n+#\n+# According to GNU ABI document (http://gcc.gnu.org/onlinedocs/libstdc++/manual/abi.html) this corresponds to:\n+#   GCC 4.4.0: GCC_4.4.0\n+#   GCC 4.4.2: GLIBCXX_3.4.13, CXXABI_1.3.3\n+#   (glibc)    GLIBC_2_11\n+#\n+MAX_VERSIONS = {\n+'GCC':     (4,4,0),\n+'CXXABI':  (1,3,3),\n+'GLIBCXX': (3,4,13),\n+'GLIBC':   (2,11)\n+}\n+# See here for a description of _IO_stdin_used:\n+# https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=634261#109\n+\n+# Ignore symbols that are exported as part of every executable\n+IGNORE_EXPORTS = {\n+b'_edata', b'_end', b'_init', b'__bss_start', b'_fini', b'_IO_stdin_used'\n+}\n+READELF_CMD = os.getenv('READELF', '/usr/bin/readelf')\n+CPPFILT_CMD = os.getenv('CPPFILT', '/usr/bin/c++filt')\n+# Allowed NEEDED libraries\n+ALLOWED_LIBRARIES = {\n+# bitcoind and bitcoin-qt\n+b'libgcc_s.so.1', # GCC base support\n+b'libc.so.6', # C library\n+b'libpthread.so.0', # threading\n+b'libanl.so.1', # DNS resolve\n+b'libm.so.6', # math library\n+b'librt.so.1', # real-time (clock)\n+b'ld-linux-x86-64.so.2', # 64-bit dynamic linker\n+b'ld-linux.so.2', # 32-bit dynamic linker\n+# bitcoin-qt only\n+b'libX11-xcb.so.1', # part of X11\n+b'libX11.so.6', # part of X11\n+b'libxcb.so.1', # part of X11\n+b'libfontconfig.so.1', # font support\n+b'libfreetype.so.6', # font parsing\n+b'libdl.so.2' # programming interface to dynamic linker\n+}\n+\n+class CPPFilt(object):\n+    '''\n+    Demangle C++ symbol names.\n+\n+    Use a pipe to the 'c++filt' command.\n+    '''\n+    def __init__(self):\n+        self.proc = subprocess.Popen(CPPFILT_CMD, stdin=subprocess.PIPE, stdout=subprocess.PIPE)\n+\n+    def __call__(self, mangled):\n+        self.proc.stdin.write(mangled + b'\\n')\n+        self.proc.stdin.flush()\n+        return self.proc.stdout.readline().rstrip()\n+\n+    def close(self):\n+        self.proc.stdin.close()\n+        self.proc.stdout.close()\n+        self.proc.wait()\n+\n+def read_symbols(executable, imports=True):\n+    '''\n+    Parse an ELF executable and return a list of (symbol,version) tuples\n+    for dynamic, imported symbols.\n+    '''\n+    p = subprocess.Popen([READELF_CMD, '--dyn-syms', '-W', executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE)\n+    (stdout, stderr) = p.communicate()\n+    if p.returncode:\n+        raise IOError('Could not read symbols for %s: %s' % (executable, stderr.strip()))\n+    syms = []\n+    for line in stdout.split(b'\\n'):\n+        line = line.split()\n+        if len(line)>7 and re.match(b'[0-9]+:$', line[0]):\n+            (sym, _, version) = line[7].partition(b'@')\n+            is_import = line[6] == b'UND'\n+            if version.startswith(b'@'):\n+                version = version[1:]\n+            if is_import == imports:\n+                syms.append((sym, version))\n+    return syms\n+\n+def check_version(max_versions, version):\n+    if b'_' in version:\n+        (lib, _, ver) = version.rpartition(b'_')\n+    else:\n+        lib = version\n+        ver = '0'\n+    ver = tuple([int(x) for x in ver.split(b'.')])\n+    if not lib in max_versions:\n+        return False\n+    return ver <= max_versions[lib]\n+\n+def read_libraries(filename):\n+    p = subprocess.Popen([READELF_CMD, '-d', '-W', filename], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE)\n+    (stdout, stderr) = p.communicate()\n+    if p.returncode:\n+        raise IOError('Error opening file')\n+    libraries = []\n+    for line in stdout.split(b'\\n'):\n+        tokens = line.split()\n+        if len(tokens)>2 and tokens[1] == b'(NEEDED)':\n+            match = re.match(b'^Shared library: \\[(.*)\\]$', b' '.join(tokens[2:]))\n+            if match:\n+                libraries.append(match.group(1))\n+            else:\n+                raise ValueError('Unparseable (NEEDED) specification')\n+    return libraries\n+\n+if __name__ == '__main__':\n+    cppfilt = CPPFilt()\n+    retval = 0\n+    for filename in sys.argv[1:]:\n+        # Check imported symbols\n+        for sym,version in read_symbols(filename, True):\n+            if version and not check_version(MAX_VERSIONS, version):\n+                print('%s: symbol %s from unsupported version %s' % (filename, cppfilt(sym).decode('utf-8'), version.decode('utf-8')))\n+                retval = 1\n+        # Check exported symbols\n+        for sym,version in read_symbols(filename, False):\n+            if sym in IGNORE_EXPORTS:\n+                continue\n+            print('%s: export of symbol %s not allowed' % (filename, cppfilt(sym).decode('utf-8')))\n+            retval = 1\n+        # Check dependency libraries\n+        for library_name in read_libraries(filename):\n+            if library_name not in ALLOWED_LIBRARIES:\n+                print('%s: NEEDED library %s is not allowed' % (filename, library_name.decode('utf-8')))\n+                retval = 1\n+\n+    exit(retval)\n+\n+"
      },
      {
        "sha": "fed7626aabaaf34a7ab4ed1e13a7b5e47769f950",
        "filename": "contrib/devtools/test-security-check.py",
        "status": "added",
        "additions": 60,
        "deletions": 0,
        "changes": 60,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/devtools/test-security-check.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/devtools/test-security-check.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/test-security-check.py?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,60 @@\n+#!/usr/bin/python2\n+'''\n+Test script for security-check.py\n+'''\n+from __future__ import division,print_function\n+import subprocess\n+import sys\n+import unittest\n+\n+def write_testcode(filename):\n+    with open(filename, 'w') as f:\n+        f.write('''\n+    #include <stdio.h>\n+    int main()\n+    {\n+        printf(\"the quick brown fox jumps over the lazy god\\\\n\");\n+        return 0;\n+    }\n+    ''')\n+\n+def call_security_check(cc, source, executable, options):\n+    subprocess.check_call([cc,source,'-o',executable] + options)\n+    p = subprocess.Popen(['./security-check.py',executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE)\n+    (stdout, stderr) = p.communicate()\n+    return (p.returncode, stdout.rstrip())\n+\n+class TestSecurityChecks(unittest.TestCase):\n+    def test_ELF(self):\n+        source = 'test1.c'\n+        executable = 'test1'\n+        cc = 'gcc'\n+        write_testcode(source)\n+\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-zexecstack','-fno-stack-protector','-Wl,-znorelro']), \n+                (1, executable+': failed PIE NX RELRO Canary'))\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-znoexecstack','-fno-stack-protector','-Wl,-znorelro']), \n+                (1, executable+': failed PIE RELRO Canary'))\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-znoexecstack','-fstack-protector-all','-Wl,-znorelro']), \n+                (1, executable+': failed PIE RELRO'))\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-znoexecstack','-fstack-protector-all','-Wl,-znorelro','-pie','-fPIE']), \n+                (1, executable+': failed RELRO'))\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-znoexecstack','-fstack-protector-all','-Wl,-zrelro','-Wl,-z,now','-pie','-fPIE']), \n+                (0, ''))\n+\n+    def test_PE(self):\n+        source = 'test1.c'\n+        executable = 'test1.exe'\n+        cc = 'i686-w64-mingw32-gcc'\n+        write_testcode(source)\n+\n+        self.assertEqual(call_security_check(cc, source, executable, []), \n+                (1, executable+': failed PIE NX'))\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,--nxcompat']), \n+                (1, executable+': failed PIE'))\n+        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,--nxcompat','-Wl,--dynamicbase']), \n+                (0, ''))\n+\n+if __name__ == '__main__':\n+    unittest.main()\n+"
      },
      {
        "sha": "2b6e807b4718c3c4985d20003eabc4af559bac01",
        "filename": "contrib/devtools/update-translations.py",
        "status": "added",
        "additions": 200,
        "deletions": 0,
        "changes": 200,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/devtools/update-translations.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/devtools/update-translations.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/update-translations.py?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,200 @@\n+#!/usr/bin/python\n+# Copyright (c) 2014 Wladimir J. van der Laan\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+'''\n+Run this script from the root of the repository to update all translations from\n+transifex.\n+It will do the following automatically:\n+\n+- fetch all translations using the tx tool\n+- post-process them into valid and committable format\n+  - remove invalid control characters\n+  - remove location tags (makes diffs less noisy)\n+\n+TODO:\n+- auto-add new translations to the build system according to the translation process\n+'''\n+from __future__ import division, print_function\n+import subprocess\n+import re\n+import sys\n+import os\n+import io\n+import xml.etree.ElementTree as ET\n+\n+# Name of transifex tool\n+TX = 'tx'\n+# Name of source language file\n+SOURCE_LANG = 'bitcoin_en.ts'\n+# Directory with locale files\n+LOCALE_DIR = 'src/qt/locale'\n+# Minimum number of messages for translation to be considered at all\n+MIN_NUM_MESSAGES = 10\n+\n+def check_at_repository_root():\n+    if not os.path.exists('.git'):\n+        print('No .git directory found')\n+        print('Execute this script at the root of the repository', file=sys.stderr)\n+        exit(1)\n+\n+def fetch_all_translations():\n+    if subprocess.call([TX, 'pull', '-f', '-a']):\n+        print('Error while fetching translations', file=sys.stderr)\n+        exit(1)\n+\n+def find_format_specifiers(s):\n+    '''Find all format specifiers in a string.'''\n+    pos = 0\n+    specifiers = []\n+    while True:\n+        percent = s.find('%', pos)\n+        if percent < 0:\n+            break\n+        specifiers.append(s[percent+1])\n+        pos = percent+2\n+    return specifiers\n+\n+def split_format_specifiers(specifiers):\n+    '''Split format specifiers between numeric (Qt) and others (strprintf)'''\n+    numeric = []\n+    other = []\n+    for s in specifiers:\n+        if s in {'1','2','3','4','5','6','7','8','9'}:\n+            numeric.append(s)\n+        else:\n+            other.append(s)\n+\n+    # numeric (Qt) can be present in any order, others (strprintf) must be in specified order\n+    return set(numeric),other\n+\n+def sanitize_string(s):\n+    '''Sanitize string for printing'''\n+    return s.replace('\\n',' ')\n+\n+def check_format_specifiers(source, translation, errors, numerus):\n+    source_f = split_format_specifiers(find_format_specifiers(source))\n+    # assert that no source messages contain both Qt and strprintf format specifiers\n+    # if this fails, go change the source as this is hacky and confusing!\n+    assert(not(source_f[0] and source_f[1]))\n+    try:\n+        translation_f = split_format_specifiers(find_format_specifiers(translation))\n+    except IndexError:\n+        errors.append(\"Parse error in translation for '%s': '%s'\" % (sanitize_string(source), sanitize_string(translation)))\n+        return False\n+    else:\n+        if source_f != translation_f:\n+            if numerus and source_f == (set(), ['n']) and translation_f == (set(), []) and translation.find('%') == -1:\n+                # Allow numerus translations to omit %n specifier (usually when it only has one possible value)\n+                return True\n+            errors.append(\"Mismatch between '%s' and '%s'\" % (sanitize_string(source), sanitize_string(translation)))\n+            return False\n+    return True\n+\n+def all_ts_files(suffix=''):\n+    for filename in os.listdir(LOCALE_DIR):\n+        # process only language files, and do not process source language\n+        if not filename.endswith('.ts'+suffix) or filename == SOURCE_LANG+suffix:\n+            continue\n+        if suffix: # remove provided suffix\n+            filename = filename[0:-len(suffix)]\n+        filepath = os.path.join(LOCALE_DIR, filename)\n+        yield(filename, filepath)\n+\n+FIX_RE = re.compile(b'[\\x00-\\x09\\x0b\\x0c\\x0e-\\x1f]')\n+def remove_invalid_characters(s):\n+    '''Remove invalid characters from translation string'''\n+    return FIX_RE.sub(b'', s)\n+\n+# Override cdata escape function to make our output match Qt's (optional, just for cleaner diffs for\n+# comparison, disable by default)\n+_orig_escape_cdata = None\n+def escape_cdata(text):\n+    text = _orig_escape_cdata(text)\n+    text = text.replace(\"'\", '&apos;')\n+    text = text.replace('\"', '&quot;')\n+    return text\n+\n+def postprocess_translations(reduce_diff_hacks=False):\n+    print('Checking and postprocessing...')\n+\n+    if reduce_diff_hacks:\n+        global _orig_escape_cdata\n+        _orig_escape_cdata = ET._escape_cdata\n+        ET._escape_cdata = escape_cdata\n+\n+    for (filename,filepath) in all_ts_files():\n+        os.rename(filepath, filepath+'.orig')\n+\n+    have_errors = False\n+    for (filename,filepath) in all_ts_files('.orig'):\n+        # pre-fixups to cope with transifex output\n+        parser = ET.XMLParser(encoding='utf-8') # need to override encoding because 'utf8' is not understood only 'utf-8'\n+        with open(filepath + '.orig', 'rb') as f:\n+            data = f.read()\n+        # remove control characters; this must be done over the entire file otherwise the XML parser will fail\n+        data = remove_invalid_characters(data)\n+        tree = ET.parse(io.BytesIO(data), parser=parser)\n+\n+        # iterate over all messages in file\n+        root = tree.getroot()\n+        for context in root.findall('context'):\n+            for message in context.findall('message'):\n+                numerus = message.get('numerus') == 'yes'\n+                source = message.find('source').text\n+                translation_node = message.find('translation')\n+                # pick all numerusforms\n+                if numerus:\n+                    translations = [i.text for i in translation_node.findall('numerusform')]\n+                else:\n+                    translations = [translation_node.text]\n+\n+                for translation in translations:\n+                    if translation is None:\n+                        continue\n+                    errors = []\n+                    valid = check_format_specifiers(source, translation, errors, numerus)\n+\n+                    for error in errors:\n+                        print('%s: %s' % (filename, error))\n+\n+                    if not valid: # set type to unfinished and clear string if invalid\n+                        translation_node.clear()\n+                        translation_node.set('type', 'unfinished')\n+                        have_errors = True\n+\n+                # Remove location tags\n+                for location in message.findall('location'):\n+                    message.remove(location)\n+\n+                # Remove entire message if it is an unfinished translation\n+                if translation_node.get('type') == 'unfinished':\n+                    context.remove(message)\n+\n+        # check if document is (virtually) empty, and remove it if so\n+        num_messages = 0\n+        for context in root.findall('context'):\n+            for message in context.findall('message'):\n+                num_messages += 1\n+        if num_messages < MIN_NUM_MESSAGES:\n+            print('Removing %s, as it contains only %i messages' % (filepath, num_messages))\n+            continue\n+\n+        # write fixed-up tree\n+        # if diff reduction requested, replace some XML to 'sanitize' to qt formatting\n+        if reduce_diff_hacks:\n+            out = io.BytesIO()\n+            tree.write(out, encoding='utf-8')\n+            out = out.getvalue()\n+            out = out.replace(b' />', b'/>')\n+            with open(filepath, 'wb') as f:\n+                f.write(out)\n+        else:\n+            tree.write(filepath, encoding='utf-8')\n+    return have_errors\n+\n+if __name__ == '__main__':\n+    check_at_repository_root()\n+    fetch_all_translations()\n+    postprocess_translations()\n+"
      },
      {
        "sha": "614970659660f8fee76b8859467e192795829de4",
        "filename": "contrib/gitian-descriptors/README.md",
        "status": "modified",
        "additions": 12,
        "deletions": 37,
        "changes": 49,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/gitian-descriptors/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/gitian-descriptors/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/README.md?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -1,8 +1,7 @@\n-### Gavin's notes on getting gitian builds up and running using KVM:###\n+### Gavin's notes on getting gitian builds up and running using KVM\n \n-These instructions distilled from:\n-[  https://help.ubuntu.com/community/KVM/Installation](  https://help.ubuntu.com/community/KVM/Installation)\n-... see there for complete details.\n+These instructions distilled from\n+[https://help.ubuntu.com/community/KVM/Installation](https://help.ubuntu.com/community/KVM/Installation).\n \n You need the right hardware: you need a 64-bit-capable CPU with hardware virtualization support (Intel VT-x or AMD-V). Not all modern CPUs support hardware virtualization.\n \n@@ -25,46 +24,22 @@ Once you've got the right hardware and software:\n     mkdir gitian-builder/inputs\n     cd gitian-builder/inputs\n \n-    # Inputs for Linux and Win32:\n-    wget -O miniupnpc-1.6.tar.gz 'http://miniupnp.tuxfamily.org/files/download.php?file=miniupnpc-1.6.tar.gz'\n-    wget 'http://fukuchi.org/works/qrencode/qrencode-3.2.0.tar.bz2'\n-    \n-\t# Inputs for Win32: (Linux has packages for these)\n-    wget 'https://downloads.sourceforge.net/project/boost/boost/1.50.0/boost_1_50_0.tar.bz2'\n-    wget 'http://www.openssl.org/source/openssl-1.0.1c.tar.gz'\n-    wget 'http://download.oracle.com/berkeley-db/db-4.8.30.NC.tar.gz'\n-    wget 'https://downloads.sourceforge.net/project/libpng/zlib/1.2.6/zlib-1.2.6.tar.gz'\n-    wget 'https://downloads.sourceforge.net/project/libpng/libpng15/older-releases/1.5.9/libpng-1.5.9.tar.gz'\n-    wget 'https://download.qt-project.org/archive/qt/4.8/4.8.3/qt-everywhere-opensource-src-4.8.3.tar.gz'\n-    wget 'http://protobuf.googlecode.com/files/protobuf-2.5.0.tar.bz2'\n-    cd ../..\n-\n+    # Create base images\n     cd gitian-builder\n-    bin/make-base-vm --arch i386\n-    bin/make-base-vm --arch amd64\n+    bin/make-base-vm --suite trusty --arch amd64\n     cd ..\n \n-    # Build Linux release:\n-    cd bitcoin\n-    git pull\n-    cd ../gitian-builder\n-    git pull\n-    ./bin/gbuild --commit bitcoin=HEAD ../bitcoin/contrib/gitian-descriptors/gitian.yml\n-\n-    # Build Win32 dependencies: (only needs to be done once, or when dependency versions change)\n-    ./bin/gbuild --commit bitcoin=HEAD ../bitcoin/contrib/gitian-descriptors/boost-win32.yml\n-    ./bin/gbuild --commit bitcoin=HEAD ../bitcoin/contrib/gitian-descriptors/deps-win32.yml\n-    ./bin/gbuild --commit bitcoin=HEAD ../bitcoin/contrib/gitian-descriptors/qt-win32.yml\n-    ./bin/gbuild --commit bitcoin=HEAD ../bitcoin/contrib/gitian-descriptors/protobuf-win32.yml\n+    # Get inputs (see doc/release-process.md for exact inputs needed and where to get them)\n+    ...\n \n-    # Build Win32 release:\n-    ./bin/gbuild --commit bitcoin=HEAD ../bitcoin/contrib/gitian-descriptors/gitian-win32.yml\n+    # For further build instructions see doc/release-process.md\n+    ...\n \n ---------------------\n \n `gitian-builder` now also supports building using LXC. See\n-[  https://help.ubuntu.com/12.04/serverguide/lxc.html](  https://help.ubuntu.com/12.04/serverguide/lxc.html)\n-... for how to get LXC up and running under Ubuntu.\n+[help.ubuntu.com](https://help.ubuntu.com/14.04/serverguide/lxc.html)\n+for how to get LXC up and running under Ubuntu.\n \n If your main machine is a 64-bit Mac or PC with a few gigabytes of memory\n and at least 10 gigabytes of free disk space, you can `gitian-build` using\n@@ -87,4 +62,4 @@ Here's a description of Gavin's setup on OSX 10.6:\n \n \texport USE_LXC=1\n \tgit clone git://github.com/bitcoin/bitcoin.git\n-\t... etc\n\\ No newline at end of file\n+\t... etc"
      },
      {
        "sha": "b421cbe8c59eea0b61eabaff934eb0658e2de617",
        "filename": "contrib/gitian-descriptors/boost-win32.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 66,
        "changes": 66,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d980f9b7d687a1e60eecf3691b592d9806a30f4a/contrib/gitian-descriptors/boost-win32.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d980f9b7d687a1e60eecf3691b592d9806a30f4a/contrib/gitian-descriptors/boost-win32.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/boost-win32.yml?ref=d980f9b7d687a1e60eecf3691b592d9806a30f4a",
        "patch": "@@ -1,66 +0,0 @@\n----\n-name: \"boost\"\n-suites:\n-- \"precise\"\n-architectures:\n-- \"amd64\"\n-packages:\n-- \"mingw-w64\"\n-- \"g++-mingw-w64\"\n-- \"faketime\"\n-- \"zip\"\n-reference_datetime: \"2011-01-30 00:00:00\"\n-remotes: []\n-files:\n-- \"boost_1_54_0.tar.bz2\"\n-- \"boost-mingw-gas-cross-compile-2013-03-03.patch\"\n-script: |\n-  # Defines\n-  INSTALLPREFIX=\"$OUTDIR/staging/boost\"\n-  HOST=i686-w64-mingw32\n-  # Input Integrity Check\n-  echo \"047e927de336af106a24bceba30069980c191529fd76b8dff8eb9a328b48ae1d  boost_1_54_0.tar.bz2\" | shasum -c\n-  echo \"d2b7f6a1d7051faef3c9cf41a92fa3671d905ef1e1da920d07651a43299f6268  boost-mingw-gas-cross-compile-2013-03-03.patch\" | shasum -c\n-\n-  mkdir -p \"$INSTALLPREFIX\"\n-  tar xjf boost_1_54_0.tar.bz2\n-  cd boost_1_54_0\n-  GCCVERSION=$($HOST-g++ -E -dM $(mktemp --suffix=.h) | grep __VERSION__ | cut -d ' ' -f 3 | cut -d '\"' -f 2)\n-  echo \"using gcc : $GCCVERSION : $HOST-g++\n-        :\n-        <rc>$HOST-windres\n-        <archiver>$HOST-ar\n-        <cxxflags>-frandom-seed=boost1\n-        <ranlib>$HOST-ranlib\n-  ;\" > user-config.jam\n-  ./bootstrap.sh --without-icu\n-\n-  # Workaround: Upstream boost dev refuses to include patch that would allow Free Software cross-compile toolchain to work\n-  #             This patch was authored by the Fedora package developer and ships in Fedora's mingw32-boost.\n-  #             Please obtain the exact patch that matches the above sha256sum from one of the following mirrors.\n-  #\n-  # Read History:   https://svn.boost.org/trac/boost/ticket/7262\n-  # History Mirror: http://rose.makesad.us/~paulproteus/mirrors/7262%20Boost.Context%20fails%20to%20build%20using%20MinGW.html\n-  #\n-  # Patch:          https://svn.boost.org/trac/boost/raw-attachment/ticket/7262/boost-mingw.patch\n-  # Patch Mirror:   http://wtogami.fedorapeople.org/boost-mingw-gas-cross-compile-2013-03-03.patch\n-  # Patch Mirror:   http://mindstalk.net/host/boost-mingw-gas-cross-compile-2013-03-03.patch\n-  # Patch Mirror:   http://rose.makesad.us/~paulproteus/mirrors/boost-mingw-gas-cross-compile-2013-03-03.patch\n-  patch -p0 < ../boost-mingw-gas-cross-compile-2013-03-03.patch\n-\n-  # Bug Workaround: boost-1.54.0 broke the ability to disable zlib\n-  # https://svn.boost.org/trac/boost/ticket/9156\n-  sed -i 's^\\[ ac.check-library /zlib//zlib : <library>/zlib//zlib^^' libs/iostreams/build/Jamfile.v2\n-  sed -i 's^<source>zlib.cpp <source>gzip.cpp \\]^^' libs/iostreams/build/Jamfile.v2\n-\n-  # http://statmt.org/~s0565741/software/boost_1_52_0/libs/context/doc/html/context/requirements.html\n-  # Note: Might need these options in the future for 64bit builds.\n-  # \"Please note that address-model=64 must be given to bjam command line on 64bit Windows for 64bit build; otherwise 32bit code will be generated.\"\n-  # \"For cross-compiling the lib you must specify certain additional properties at bjam command line: target-os, abi, binary-format, architecture and address-model.\"\n-  ./bjam toolset=gcc binary-format=pe target-os=windows threadapi=win32 threading=multi variant=release link=static --user-config=user-config.jam --without-mpi --without-python -sNO_BZIP2=1 -sNO_ZLIB=1 --layout=tagged --build-type=complete --prefix=\"$INSTALLPREFIX\" $MAKEOPTS install\n-\n-  cd \"$INSTALLPREFIX\"\n-  export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1\n-  export FAKETIME=$REFERENCE_DATETIME\n-  zip -r boost-win32-1.54.0-gitian-r6.zip *\n-  cp boost-win32-1.54.0-gitian-r6.zip $OUTDIR"
      },
      {
        "sha": "3f4e4e27f2175e6a21b01a472ba8f216cc9aeff1",
        "filename": "contrib/gitian-descriptors/deps-win32.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 100,
        "changes": 100,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d980f9b7d687a1e60eecf3691b592d9806a30f4a/contrib/gitian-descriptors/deps-win32.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d980f9b7d687a1e60eecf3691b592d9806a30f4a/contrib/gitian-descriptors/deps-win32.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/deps-win32.yml?ref=d980f9b7d687a1e60eecf3691b592d9806a30f4a",
        "patch": "@@ -1,100 +0,0 @@\n----\n-name: \"bitcoin-deps\"\n-suites:\n-- \"precise\"\n-architectures:\n-- \"amd64\"\n-packages:\n-- \"mingw-w64\"\n-- \"g++-mingw-w64\"\n-- \"git-core\"\n-- \"zip\"\n-- \"faketime\"\n-- \"psmisc\"\n-reference_datetime: \"2011-01-30 00:00:00\"\n-remotes: []\n-files:\n-- \"openssl-1.0.1c.tar.gz\"\n-- \"db-4.8.30.NC.tar.gz\"\n-- \"miniupnpc-1.6.tar.gz\"\n-- \"zlib-1.2.6.tar.gz\"\n-- \"libpng-1.5.9.tar.gz\"\n-- \"qrencode-3.2.0.tar.bz2\"\n-script: |\n-  #\n-  export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1\n-  export FAKETIME=$REFERENCE_DATETIME\n-  export TZ=UTC\n-  export INSTALLPREFIX=$OUTDIR/staging/deps\n-  export HOST=i686-w64-mingw32\n-  # Input Integrity Check\n-  echo \"2a9eb3cd4e8b114eb9179c0d3884d61658e7d8e8bf4984798a5f5bd48e325ebe  openssl-1.0.1c.tar.gz\"  | sha256sum -c\n-  echo \"b75dae26151f9b031062c8d2f577a094b08da0ae44fe8c11175d0b9ff434cc02  libpng-1.5.9.tar.gz\"    | sha256sum -c\n-  echo \"12edc0df75bf9abd7f82f821795bcee50f42cb2e5f76a6a281b85732798364ef  db-4.8.30.NC.tar.gz\"    | sha256sum -c\n-  echo \"21235e08552e6feba09ea5e8d750805b3391c62fb81c71a235c0044dc7a8a61b  zlib-1.2.6.tar.gz\"      | sha256sum -c\n-  echo \"b75dae26151f9b031062c8d2f577a094b08da0ae44fe8c11175d0b9ff434cc02  libpng-1.5.9.tar.gz\"    | sha256sum -c\n-  echo \"03c4bc7cd9a75747c3815d509bbe061907d615764f2357923f0db948c567068f  qrencode-3.2.0.tar.bz2\" | sha256sum -c\n-\n-  mkdir -p $INSTALLPREFIX\n-\n-  tar xzf openssl-1.0.1c.tar.gz\n-  cd openssl-1.0.1c\n-  ./Configure --cross-compile-prefix=$HOST- mingw --openssldir=$INSTALLPREFIX\n-  make\n-  make install_sw\n-  cd ..\n-  #\n-  tar xzf db-4.8.30.NC.tar.gz\n-  cd db-4.8.30.NC/build_unix\n-  ../dist/configure --prefix=$INSTALLPREFIX --enable-mingw --enable-cxx --host=$HOST --disable-shared\n-  make $MAKEOPTS library_build\n-  make install_lib install_include\n-  cd ../..\n-  #\n-  tar xzf miniupnpc-1.6.tar.gz\n-  cd miniupnpc-1.6\n-  echo \"\n-  --- miniupnpc-1.6/Makefile.mingw.orig   2013-09-29 18:52:51.014087958 -1000\n-  +++ miniupnpc-1.6/Makefile.mingw        2013-09-29 19:09:29.663318691 -1000\n-  @@ -67,8 +67,8 @@\n-   \n-   wingenminiupnpcstrings.o:\twingenminiupnpcstrings.c\n-   \n-  -miniupnpcstrings.h: miniupnpcstrings.h.in wingenminiupnpcstrings\n-  -\twingenminiupnpcstrings \\$< \\$@\n-  +miniupnpcstrings.h: miniupnpcstrings.h.in \n-  +\tsed -e 's|OS/version|MSWindows/5.1.2600|' -e 's|MINIUPNPC_VERSION_STRING \\\"version\\\"|MINIUPNPC_VERSION_STRING \\\"VERSIONHERE\\\"|' \\$< > \\$@\n-   \n-   minixml.o:\tminixml.c minixml.h miniupnpcstrings.h\n-   \n-  \" | sed \"s/VERSIONHERE/$(cat VERSION)/\" | patch -p1\n-  mkdir -p dll\n-  make -f Makefile.mingw CC=$HOST-gcc AR=$HOST-ar libminiupnpc.a\n-  install -d $INSTALLPREFIX/include/miniupnpc\n-  install *.h $INSTALLPREFIX/include/miniupnpc\n-  install libminiupnpc.a  $INSTALLPREFIX/lib\n-  cd ..\n-  #\n-  tar xzf zlib-1.2.6.tar.gz\n-  cd zlib-1.2.6\n-  CROSS_PREFIX=$HOST- ./configure --prefix=$INSTALLPREFIX --static\n-  make\n-  make install\n-  cd ..\n-  #\n-  tar xzf libpng-1.5.9.tar.gz\n-  cd libpng-1.5.9\n-  CFLAGS=\"-I$INSTALLPREFIX/include\" LDFLAGS=\"-L$INSTALLPREFIX/lib\" ./configure --disable-shared --prefix=$INSTALLPREFIX --host=$HOST\n-  make $MAKEOPTS\n-  make install\n-  cd ..\n-  #\n-  tar xjf qrencode-3.2.0.tar.bz2\n-  cd qrencode-3.2.0\n-  png_CFLAGS=\"-I$INSTALLPREFIX/include\" png_LIBS=\"-L$INSTALLPREFIX/lib -lpng\" ./configure --prefix=$INSTALLPREFIX --host=$HOST\n-  make\n-  make install\n-  cd ..\n-  #\n-  cd $INSTALLPREFIX\n-  zip -r $OUTDIR/bitcoin-deps-win32-gitian-r9.zip include lib"
      },
      {
        "sha": "a2788c9d761690bde12c2d1f3220a1283d0e7b5e",
        "filename": "contrib/gitian-descriptors/gitian-linux.yml",
        "status": "added",
        "additions": 156,
        "deletions": 0,
        "changes": 156,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/gitian-descriptors/gitian-linux.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/gitian-descriptors/gitian-linux.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-linux.yml?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,156 @@\n+---\n+name: \"bitcoin-linux-0.13\"\n+enable_cache: true\n+suites:\n+- \"trusty\"\n+architectures:\n+- \"amd64\"\n+packages:\n+- \"curl\"\n+- \"g++-aarch64-linux-gnu\"\n+- \"g++-4.8-aarch64-linux-gnu\"\n+- \"gcc-4.8-aarch64-linux-gnu\"\n+- \"binutils-aarch64-linux-gnu\"\n+- \"g++-arm-linux-gnueabihf\"\n+- \"g++-4.8-arm-linux-gnueabihf\"\n+- \"gcc-4.8-arm-linux-gnueabihf\"\n+- \"binutils-arm-linux-gnueabihf\"\n+- \"g++-4.8-multilib\"\n+- \"gcc-4.8-multilib\"\n+- \"binutils-gold\"\n+- \"git-core\"\n+- \"pkg-config\"\n+- \"autoconf\"\n+- \"libtool\"\n+- \"automake\"\n+- \"faketime\"\n+- \"bsdmainutils\"\n+- \"ca-certificates\"\n+- \"python\"\n+remotes:\n+- \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n+  \"dir\": \"bitcoin\"\n+files: []\n+script: |\n+\n+  #unlock sudo\n+  echo \"ubuntu\" | sudo -S true\n+\n+  sudo mkdir -p /usr/include/i386-linux-gnu/\n+  sudo ln -s /usr/include/x86_64-linux-gnu/asm /usr/include/i386-linux-gnu/asm\n+\n+  WRAP_DIR=$HOME/wrapped\n+  HOSTS=\"i686-pc-linux-gnu x86_64-linux-gnu arm-linux-gnueabihf aarch64-linux-gnu\"\n+  CONFIGFLAGS=\"--enable-glibc-back-compat --enable-reduce-exports --disable-bench --disable-gui-tests\"\n+  FAKETIME_HOST_PROGS=\"\"\n+  FAKETIME_PROGS=\"date ar ranlib nm\"\n+  HOST_CFLAGS=\"-O2 -g\"\n+  HOST_CXXFLAGS=\"-O2 -g\"\n+  HOST_LDFLAGS=-static-libstdc++\n+\n+  export QT_RCC_TEST=1\n+  export GZIP=\"-9n\"\n+  export TAR_OPTIONS=\"--mtime=\"$REFERENCE_DATE\\\\\\ $REFERENCE_TIME\"\"\n+  export TZ=\"UTC\"\n+  export BUILD_DIR=`pwd`\n+  mkdir -p ${WRAP_DIR}\n+  if test -n \"$GBUILD_CACHE_ENABLED\"; then\n+    export SOURCES_PATH=${GBUILD_COMMON_CACHE}\n+    export BASE_CACHE=${GBUILD_PACKAGE_CACHE}\n+    mkdir -p ${BASE_CACHE} ${SOURCES_PATH}\n+  fi\n+\n+  function create_global_faketime_wrappers {\n+  for prog in ${FAKETIME_PROGS}; do\n+    echo '#!/bin/bash' > ${WRAP_DIR}/${prog}\n+    echo \"REAL=\\`which -a ${prog} | grep -v ${WRAP_DIR}/${prog} | head -1\\`\" >> ${WRAP_DIR}/${prog}\n+    echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${prog}\n+    echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${prog}\n+    echo \"\\$REAL \\$@\" >> $WRAP_DIR/${prog}\n+    chmod +x ${WRAP_DIR}/${prog}\n+  done\n+  }\n+\n+  function create_per-host_faketime_wrappers {\n+  for i in $HOSTS; do\n+    for prog in ${FAKETIME_HOST_PROGS}; do\n+        echo '#!/bin/bash' > ${WRAP_DIR}/${i}-${prog}\n+        echo \"REAL=\\`which -a ${i}-${prog} | grep -v ${WRAP_DIR}/${i}-${prog} | head -1\\`\" >> ${WRAP_DIR}/${i}-${prog}\n+        echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${i}-${prog}\n+        echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${i}-${prog}\n+        echo \"\\$REAL \\$@\" >> $WRAP_DIR/${i}-${prog}\n+        chmod +x ${WRAP_DIR}/${i}-${prog}\n+    done\n+  done\n+  }\n+\n+  # Faketime for depends so intermediate results are comparable\n+  export PATH_orig=${PATH}\n+  create_global_faketime_wrappers \"2000-01-01 12:00:00\"\n+  create_per-host_faketime_wrappers \"2000-01-01 12:00:00\"\n+  export PATH=${WRAP_DIR}:${PATH}\n+\n+  cd bitcoin\n+  BASEPREFIX=`pwd`/depends\n+  # Build dependencies for each host\n+  for i in $HOSTS; do\n+    make ${MAKEOPTS} -C ${BASEPREFIX} HOST=\"${i}\"\n+  done\n+\n+  # Faketime for binaries\n+  export PATH=${PATH_orig}\n+  create_global_faketime_wrappers \"${REFERENCE_DATETIME}\"\n+  create_per-host_faketime_wrappers \"${REFERENCE_DATETIME}\"\n+  export PATH=${WRAP_DIR}:${PATH}\n+\n+  # Create the release tarball using (arbitrarily) the first host\n+  ./autogen.sh\n+  CONFIG_SITE=${BASEPREFIX}/`echo \"${HOSTS}\" | awk '{print $1;}'`/share/config.site ./configure --prefix=/\n+  make dist\n+  SOURCEDIST=`echo bitcoin-*.tar.gz`\n+  DISTNAME=`echo ${SOURCEDIST} | sed 's/.tar.*//'`\n+  # Correct tar file order\n+  mkdir -p temp\n+  pushd temp\n+  tar xf ../$SOURCEDIST\n+  find bitcoin-* | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ../$SOURCEDIST\n+  popd\n+\n+  ORIGPATH=\"$PATH\"\n+  # Extract the release tarball into a dir for each host and build\n+  for i in ${HOSTS}; do\n+    export PATH=${BASEPREFIX}/${i}/native/bin:${ORIGPATH}\n+    mkdir -p distsrc-${i}\n+    cd distsrc-${i}\n+    INSTALLPATH=`pwd`/installed/${DISTNAME}\n+    mkdir -p ${INSTALLPATH}\n+    tar --strip-components=1 -xf ../$SOURCEDIST\n+\n+    CONFIG_SITE=${BASEPREFIX}/${i}/share/config.site ./configure --prefix=/ --disable-ccache --disable-maintainer-mode --disable-dependency-tracking ${CONFIGFLAGS} CFLAGS=\"${HOST_CFLAGS}\" CXXFLAGS=\"${HOST_CXXFLAGS}\" LDFLAGS=\"${HOST_LDFLAGS}\"\n+    make ${MAKEOPTS}\n+    make ${MAKEOPTS} -C src check-security\n+\n+    #TODO: This is a quick hack that disables symbol checking for arm.\n+    #      Instead, we should investigate why these are popping up.\n+    #      For aarch64, we'll need to bump up the min GLIBC version, as the abi\n+    #      support wasn't introduced until 2.17.\n+    case $i in\n+       aarch64-*) : ;;\n+       arm-*) : ;;\n+       *) make ${MAKEOPTS} -C src check-symbols ;;\n+    esac\n+\n+    make install DESTDIR=${INSTALLPATH}\n+    cd installed\n+    find . -name \"lib*.la\" -delete\n+    find . -name \"lib*.a\" -delete\n+    rm -rf ${DISTNAME}/lib/pkgconfig\n+    find ${DISTNAME}/bin -type f -executable -exec ../contrib/devtools/split-debug.sh {} {} {}.dbg \\;\n+    find ${DISTNAME}/lib -type f -exec ../contrib/devtools/split-debug.sh {} {} {}.dbg \\;\n+    find ${DISTNAME} -not -name \"*.dbg\" | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ${OUTDIR}/${DISTNAME}-${i}.tar.gz\n+    find ${DISTNAME} -name \"*.dbg\" | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ${OUTDIR}/${DISTNAME}-${i}-debug.tar.gz\n+    cd ../../\n+    rm -rf distsrc-${i}\n+  done\n+  mkdir -p $OUTDIR/src\n+  mv $SOURCEDIST $OUTDIR/src"
      },
      {
        "sha": "f6e9414ab1bf2ec0fa0f098fa62972bb06281f43",
        "filename": "contrib/gitian-descriptors/gitian-osx-signer.yml",
        "status": "added",
        "additions": 37,
        "deletions": 0,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/gitian-descriptors/gitian-osx-signer.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/gitian-descriptors/gitian-osx-signer.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-osx-signer.yml?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,37 @@\n+---\n+name: \"bitcoin-dmg-signer\"\n+suites:\n+- \"trusty\"\n+architectures:\n+- \"amd64\"\n+packages:\n+- \"faketime\"\n+remotes:\n+- \"url\": \"https://github.com/bitcoin-core/bitcoin-detached-sigs.git\"\n+  \"dir\": \"signature\"\n+files:\n+- \"bitcoin-osx-unsigned.tar.gz\"\n+script: |\n+  WRAP_DIR=$HOME/wrapped\n+  mkdir -p ${WRAP_DIR}\n+  export PATH=`pwd`:$PATH\n+  FAKETIME_PROGS=\"dmg genisoimage\"\n+\n+  # Create global faketime wrappers\n+  for prog in ${FAKETIME_PROGS}; do\n+    echo '#!/bin/bash' > ${WRAP_DIR}/${prog}\n+    echo \"REAL=\\`which -a ${prog} | grep -v ${WRAP_DIR}/${prog} | head -1\\`\" >> ${WRAP_DIR}/${prog}\n+    echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${prog}\n+    echo \"export FAKETIME=\\\"${REFERENCE_DATETIME}\\\"\" >> ${WRAP_DIR}/${prog}\n+    echo \"\\$REAL \\$@\" >> $WRAP_DIR/${prog}\n+    chmod +x ${WRAP_DIR}/${prog}\n+  done\n+\n+  UNSIGNED=bitcoin-osx-unsigned.tar.gz\n+  SIGNED=bitcoin-osx-signed.dmg\n+\n+  tar -xf ${UNSIGNED}\n+  OSX_VOLNAME=\"$(cat osx_volname)\"\n+  ./detached-sig-apply.sh ${UNSIGNED} signature/osx\n+  ${WRAP_DIR}/genisoimage -no-cache-inodes -D -l -probe -V \"${OSX_VOLNAME}\" -no-pad -r -dir-mode 0755 -apple -o uncompressed.dmg signed-app\n+  ${WRAP_DIR}/dmg dmg uncompressed.dmg ${OUTDIR}/${SIGNED}"
      },
      {
        "sha": "991976d59eaa067143af065830859e63aaf92488",
        "filename": "contrib/gitian-descriptors/gitian-osx.yml",
        "status": "added",
        "additions": 158,
        "deletions": 0,
        "changes": 158,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/gitian-descriptors/gitian-osx.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/gitian-descriptors/gitian-osx.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-osx.yml?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,158 @@\n+---\n+name: \"bitcoin-osx-0.13\"\n+enable_cache: true\n+suites:\n+- \"trusty\"\n+architectures:\n+- \"amd64\"\n+packages:\n+- \"ca-certificates\"\n+- \"curl\"\n+- \"g++\"\n+- \"git-core\"\n+- \"pkg-config\"\n+- \"autoconf\"\n+- \"librsvg2-bin\"\n+- \"libtiff-tools\"\n+- \"libtool\"\n+- \"automake\"\n+- \"faketime\"\n+- \"bsdmainutils\"\n+- \"cmake\"\n+- \"imagemagick\"\n+- \"libcap-dev\"\n+- \"libz-dev\"\n+- \"libbz2-dev\"\n+- \"python\"\n+- \"python-dev\"\n+- \"python-setuptools\"\n+- \"fonts-tuffy\"\n+remotes:\n+- \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n+  \"dir\": \"bitcoin\"\n+files:\n+- \"MacOSX10.11.sdk.tar.gz\"\n+script: |\n+  WRAP_DIR=$HOME/wrapped\n+  HOSTS=\"x86_64-apple-darwin11\"\n+  CONFIGFLAGS=\"--enable-reduce-exports --disable-bench --disable-gui-tests GENISOIMAGE=$WRAP_DIR/genisoimage\"\n+  FAKETIME_HOST_PROGS=\"\"\n+  FAKETIME_PROGS=\"ar ranlib date dmg genisoimage\"\n+\n+  export QT_RCC_TEST=1\n+  export GZIP=\"-9n\"\n+  export TAR_OPTIONS=\"--mtime=\"$REFERENCE_DATE\\\\\\ $REFERENCE_TIME\"\"\n+  export TZ=\"UTC\"\n+  export BUILD_DIR=`pwd`\n+  mkdir -p ${WRAP_DIR}\n+  if test -n \"$GBUILD_CACHE_ENABLED\"; then\n+    export SOURCES_PATH=${GBUILD_COMMON_CACHE}\n+    export BASE_CACHE=${GBUILD_PACKAGE_CACHE}\n+    mkdir -p ${BASE_CACHE} ${SOURCES_PATH}\n+  fi\n+\n+  export ZERO_AR_DATE=1\n+\n+  function create_global_faketime_wrappers {\n+  for prog in ${FAKETIME_PROGS}; do\n+    echo '#!/bin/bash' > ${WRAP_DIR}/${prog}\n+    echo \"REAL=\\`which -a ${prog} | grep -v ${WRAP_DIR}/${prog} | head -1\\`\" >> ${WRAP_DIR}/${prog}\n+    echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${prog}\n+    echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${prog}\n+    echo \"\\$REAL \\$@\" >> $WRAP_DIR/${prog}\n+    chmod +x ${WRAP_DIR}/${prog}\n+  done\n+  }\n+\n+  function create_per-host_faketime_wrappers {\n+  for i in $HOSTS; do\n+    for prog in ${FAKETIME_HOST_PROGS}; do\n+        echo '#!/bin/bash' > ${WRAP_DIR}/${i}-${prog}\n+        echo \"REAL=\\`which -a ${i}-${prog} | grep -v ${WRAP_DIR}/${i}-${prog} | head -1\\`\" >> ${WRAP_DIR}/${i}-${prog}\n+        echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${i}-${prog}\n+        echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${i}-${prog}\n+        echo \"\\$REAL \\$@\" >> $WRAP_DIR/${i}-${prog}\n+        chmod +x ${WRAP_DIR}/${i}-${prog}\n+    done\n+  done\n+  }\n+\n+  # Faketime for depends so intermediate results are comparable\n+  export PATH_orig=${PATH}\n+  create_global_faketime_wrappers \"2000-01-01 12:00:00\"\n+  create_per-host_faketime_wrappers \"2000-01-01 12:00:00\"\n+  export PATH=${WRAP_DIR}:${PATH}\n+\n+  cd bitcoin\n+  BASEPREFIX=`pwd`/depends\n+\n+  mkdir -p ${BASEPREFIX}/SDKs\n+  tar -C ${BASEPREFIX}/SDKs -xf ${BUILD_DIR}/MacOSX10.11.sdk.tar.gz\n+\n+  # Build dependencies for each host\n+  for i in $HOSTS; do\n+    make ${MAKEOPTS} -C ${BASEPREFIX} HOST=\"${i}\"\n+  done\n+\n+  # Faketime for binaries\n+  export PATH=${PATH_orig}\n+  create_global_faketime_wrappers \"${REFERENCE_DATETIME}\"\n+  create_per-host_faketime_wrappers \"${REFERENCE_DATETIME}\"\n+  export PATH=${WRAP_DIR}:${PATH}\n+\n+  # Create the release tarball using (arbitrarily) the first host\n+  ./autogen.sh\n+  CONFIG_SITE=${BASEPREFIX}/`echo \"${HOSTS}\" | awk '{print $1;}'`/share/config.site ./configure --prefix=/\n+  make dist\n+  SOURCEDIST=`echo bitcoin-*.tar.gz`\n+  DISTNAME=`echo ${SOURCEDIST} | sed 's/.tar.*//'`\n+\n+  # Correct tar file order\n+  mkdir -p temp\n+  pushd temp\n+  tar xf ../$SOURCEDIST\n+  find bitcoin-* | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ../$SOURCEDIST\n+  popd\n+\n+  ORIGPATH=\"$PATH\"\n+  # Extract the release tarball into a dir for each host and build\n+  for i in ${HOSTS}; do\n+    export PATH=${BASEPREFIX}/${i}/native/bin:${ORIGPATH}\n+    mkdir -p distsrc-${i}\n+    cd distsrc-${i}\n+    INSTALLPATH=`pwd`/installed/${DISTNAME}\n+    mkdir -p ${INSTALLPATH}\n+    tar --strip-components=1 -xf ../$SOURCEDIST\n+\n+    CONFIG_SITE=${BASEPREFIX}/${i}/share/config.site ./configure --prefix=/ --disable-ccache --disable-maintainer-mode --disable-dependency-tracking ${CONFIGFLAGS}\n+    make ${MAKEOPTS}\n+    make install-strip DESTDIR=${INSTALLPATH}\n+\n+    make osx_volname\n+    make deploydir\n+    OSX_VOLNAME=\"$(cat osx_volname)\"\n+    mkdir -p unsigned-app-${i}\n+    cp osx_volname unsigned-app-${i}/\n+    cp contrib/macdeploy/detached-sig-apply.sh unsigned-app-${i}\n+    cp contrib/macdeploy/detached-sig-create.sh unsigned-app-${i}\n+    cp ${BASEPREFIX}/${i}/native/bin/dmg ${BASEPREFIX}/${i}/native/bin/genisoimage unsigned-app-${i}\n+    cp ${BASEPREFIX}/${i}/native/bin/${i}-codesign_allocate unsigned-app-${i}/codesign_allocate\n+    cp ${BASEPREFIX}/${i}/native/bin/${i}-pagestuff unsigned-app-${i}/pagestuff\n+    mv dist unsigned-app-${i}\n+    pushd unsigned-app-${i}\n+    find . | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ${OUTDIR}/${DISTNAME}-osx-unsigned.tar.gz\n+    popd\n+\n+    make deploy\n+    ${WRAP_DIR}/dmg dmg \"${OSX_VOLNAME}.dmg\" ${OUTDIR}/${DISTNAME}-osx-unsigned.dmg\n+\n+    cd installed\n+    find . -name \"lib*.la\" -delete\n+    find . -name \"lib*.a\" -delete\n+    rm -rf ${DISTNAME}/lib/pkgconfig\n+    find ${DISTNAME} | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ${OUTDIR}/${DISTNAME}-${i}.tar.gz\n+    cd ../../\n+  done\n+  mkdir -p $OUTDIR/src\n+  mv $SOURCEDIST $OUTDIR/src\n+  mv ${OUTDIR}/${DISTNAME}-x86_64-*.tar.gz ${OUTDIR}/${DISTNAME}-osx64.tar.gz"
      },
      {
        "sha": "3c1e0214a0aa6bfd31c54fabfdc444aad705c0b0",
        "filename": "contrib/gitian-descriptors/gitian-win-signer.yml",
        "status": "added",
        "additions": 38,
        "deletions": 0,
        "changes": 38,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/gitian-descriptors/gitian-win-signer.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/gitian-descriptors/gitian-win-signer.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-win-signer.yml?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,38 @@\n+---\n+name: \"bitcoin-win-signer\"\n+suites:\n+- \"trusty\"\n+architectures:\n+- \"amd64\"\n+packages:\n+- \"libssl-dev\"\n+- \"autoconf\"\n+remotes:\n+- \"url\": \"https://github.com/bitcoin-core/bitcoin-detached-sigs.git\"\n+  \"dir\": \"signature\"\n+files:\n+- \"osslsigncode-1.7.1.tar.gz\"\n+- \"osslsigncode-Backports-to-1.7.1.patch\"\n+- \"bitcoin-win-unsigned.tar.gz\"\n+script: |\n+  BUILD_DIR=`pwd`\n+  SIGDIR=${BUILD_DIR}/signature/win\n+  UNSIGNED_DIR=${BUILD_DIR}/unsigned\n+\n+  echo \"f9a8cdb38b9c309326764ebc937cba1523a3a751a7ab05df3ecc99d18ae466c9  osslsigncode-1.7.1.tar.gz\" | sha256sum -c\n+  echo \"a8c4e9cafba922f89de0df1f2152e7be286aba73f78505169bc351a7938dd911  osslsigncode-Backports-to-1.7.1.patch\" | sha256sum -c\n+\n+  mkdir -p ${UNSIGNED_DIR}\n+  tar -C ${UNSIGNED_DIR} -xf bitcoin-win-unsigned.tar.gz\n+\n+  tar xf osslsigncode-1.7.1.tar.gz\n+  cd osslsigncode-1.7.1\n+  patch -p1 < ${BUILD_DIR}/osslsigncode-Backports-to-1.7.1.patch\n+\n+  ./configure --without-gsf --without-curl --disable-dependency-tracking\n+  make\n+  find ${UNSIGNED_DIR} -name \"*-unsigned.exe\" | while read i; do\n+    INFILE=\"`basename \"${i}\"`\"\n+    OUTFILE=\"`echo \"${INFILE}\" | sed s/-unsigned//`\"\n+    ./osslsigncode attach-signature -in \"${i}\" -out \"${OUTDIR}/${OUTFILE}\" -sigin \"${SIGDIR}/${INFILE}.pem\"\n+  done"
      },
      {
        "sha": "32b57b3160bd34013bf4fb99e340301c9314066e",
        "filename": "contrib/gitian-descriptors/gitian-win.yml",
        "status": "added",
        "additions": 168,
        "deletions": 0,
        "changes": 168,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/gitian-descriptors/gitian-win.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/gitian-descriptors/gitian-win.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-win.yml?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,168 @@\n+---\n+name: \"bitcoin-win-0.13\"\n+enable_cache: true\n+suites:\n+- \"trusty\"\n+architectures:\n+- \"amd64\"\n+packages:\n+- \"curl\"\n+- \"g++\"\n+- \"git-core\"\n+- \"pkg-config\"\n+- \"autoconf\"\n+- \"libtool\"\n+- \"automake\"\n+- \"faketime\"\n+- \"bsdmainutils\"\n+- \"mingw-w64\"\n+- \"g++-mingw-w64\"\n+- \"nsis\"\n+- \"zip\"\n+- \"ca-certificates\"\n+- \"python\"\n+remotes:\n+- \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n+  \"dir\": \"bitcoin\"\n+files: []\n+script: |\n+  WRAP_DIR=$HOME/wrapped\n+  HOSTS=\"x86_64-w64-mingw32 i686-w64-mingw32\"\n+  CONFIGFLAGS=\"--enable-reduce-exports --disable-bench --disable-gui-tests\"\n+  FAKETIME_HOST_PROGS=\"g++ ar ranlib nm windres strip objcopy\"\n+  FAKETIME_PROGS=\"date makensis zip\"\n+  HOST_CFLAGS=\"-O2 -g\"\n+  HOST_CXXFLAGS=\"-O2 -g\"\n+\n+  export QT_RCC_TEST=1\n+  export GZIP=\"-9n\"\n+  export TAR_OPTIONS=\"--mtime=\"$REFERENCE_DATE\\\\\\ $REFERENCE_TIME\"\"\n+  export TZ=\"UTC\"\n+  export BUILD_DIR=`pwd`\n+  mkdir -p ${WRAP_DIR}\n+  if test -n \"$GBUILD_CACHE_ENABLED\"; then\n+    export SOURCES_PATH=${GBUILD_COMMON_CACHE}\n+    export BASE_CACHE=${GBUILD_PACKAGE_CACHE}\n+    mkdir -p ${BASE_CACHE} ${SOURCES_PATH}\n+  fi\n+\n+  function create_global_faketime_wrappers {\n+  for prog in ${FAKETIME_PROGS}; do\n+    echo '#!/bin/bash' > ${WRAP_DIR}/${prog}\n+    echo \"REAL=\\`which -a ${prog} | grep -v ${WRAP_DIR}/${prog} | head -1\\`\" >> ${WRAP_DIR}/${prog}\n+    echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${prog}\n+    echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${prog}\n+    echo \"\\$REAL \\$@\" >> $WRAP_DIR/${prog}\n+    chmod +x ${WRAP_DIR}/${prog}\n+  done\n+  }\n+\n+  function create_per-host_faketime_wrappers {\n+  for i in $HOSTS; do\n+    for prog in ${FAKETIME_HOST_PROGS}; do\n+        echo '#!/bin/bash' > ${WRAP_DIR}/${i}-${prog}\n+        echo \"REAL=\\`which -a ${i}-${prog} | grep -v ${WRAP_DIR}/${i}-${prog} | head -1\\`\" >> ${WRAP_DIR}/${i}-${prog}\n+        echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${i}-${prog}\n+        echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${i}-${prog}\n+        echo \"\\$REAL \\$@\" >> $WRAP_DIR/${i}-${prog}\n+        chmod +x ${WRAP_DIR}/${i}-${prog}\n+    done\n+  done\n+  }\n+\n+  function create_per-host_linker_wrapper {\n+  # This is only needed for trusty, as the mingw linker leaks a few bytes of\n+  # heap, causing non-determinism. See discussion in https://github.com/bitcoin/bitcoin/pull/6900\n+  for i in $HOSTS; do\n+    mkdir -p ${WRAP_DIR}/${i}\n+    for prog in collect2; do\n+        echo '#!/bin/bash' > ${WRAP_DIR}/${i}/${prog}\n+        REAL=$(${i}-gcc -print-prog-name=${prog})\n+        echo \"export MALLOC_PERTURB_=255\" >> ${WRAP_DIR}/${i}/${prog}\n+        echo \"${REAL} \\$@\" >> $WRAP_DIR/${i}/${prog}\n+        chmod +x ${WRAP_DIR}/${i}/${prog}\n+    done\n+    for prog in gcc g++; do\n+        echo '#!/bin/bash' > ${WRAP_DIR}/${i}-${prog}\n+        echo \"REAL=\\`which -a ${i}-${prog} | grep -v ${WRAP_DIR}/${i}-${prog} | head -1\\`\" >> ${WRAP_DIR}/${i}-${prog}\n+        echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${i}-${prog}\n+        echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${i}-${prog}\n+        echo \"export COMPILER_PATH=${WRAP_DIR}/${i}\" >> ${WRAP_DIR}/${i}-${prog}\n+        echo \"\\$REAL \\$@\" >> $WRAP_DIR/${i}-${prog}\n+        chmod +x ${WRAP_DIR}/${i}-${prog}\n+    done\n+  done\n+  }\n+\n+  # Faketime for depends so intermediate results are comparable\n+  export PATH_orig=${PATH}\n+  create_global_faketime_wrappers \"2000-01-01 12:00:00\"\n+  create_per-host_faketime_wrappers \"2000-01-01 12:00:00\"\n+  create_per-host_linker_wrapper \"2000-01-01 12:00:00\"\n+  export PATH=${WRAP_DIR}:${PATH}\n+\n+  cd bitcoin\n+  BASEPREFIX=`pwd`/depends\n+  # Build dependencies for each host\n+  for i in $HOSTS; do\n+    make ${MAKEOPTS} -C ${BASEPREFIX} HOST=\"${i}\"\n+  done\n+\n+  # Faketime for binaries\n+  export PATH=${PATH_orig}\n+  create_global_faketime_wrappers \"${REFERENCE_DATETIME}\"\n+  create_per-host_faketime_wrappers \"${REFERENCE_DATETIME}\"\n+  create_per-host_linker_wrapper \"${REFERENCE_DATETIME}\"\n+  export PATH=${WRAP_DIR}:${PATH}\n+\n+  # Create the release tarball using (arbitrarily) the first host\n+  ./autogen.sh\n+  CONFIG_SITE=${BASEPREFIX}/`echo \"${HOSTS}\" | awk '{print $1;}'`/share/config.site ./configure --prefix=/\n+  make dist\n+  SOURCEDIST=`echo bitcoin-*.tar.gz`\n+  DISTNAME=`echo ${SOURCEDIST} | sed 's/.tar.*//'`\n+\n+  # Correct tar file order\n+  mkdir -p temp\n+  pushd temp\n+  tar xf ../$SOURCEDIST\n+  find bitcoin-* | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ../$SOURCEDIST\n+  mkdir -p $OUTDIR/src\n+  cp ../$SOURCEDIST $OUTDIR/src\n+  popd\n+\n+  ORIGPATH=\"$PATH\"\n+  # Extract the release tarball into a dir for each host and build\n+  for i in ${HOSTS}; do\n+    export PATH=${BASEPREFIX}/${i}/native/bin:${ORIGPATH}\n+    mkdir -p distsrc-${i}\n+    cd distsrc-${i}\n+    INSTALLPATH=`pwd`/installed/${DISTNAME}\n+    mkdir -p ${INSTALLPATH}\n+    tar --strip-components=1 -xf ../$SOURCEDIST\n+\n+    CONFIG_SITE=${BASEPREFIX}/${i}/share/config.site ./configure --prefix=/ --disable-ccache --disable-maintainer-mode --disable-dependency-tracking ${CONFIGFLAGS} CFLAGS=\"${HOST_CFLAGS}\" CXXFLAGS=\"${HOST_CXXFLAGS}\"\n+    make ${MAKEOPTS}\n+    make ${MAKEOPTS} -C src check-security\n+    make deploy\n+    make install DESTDIR=${INSTALLPATH}\n+    cp -f bitcoin-*setup*.exe $OUTDIR/\n+    cd installed\n+    mv ${DISTNAME}/bin/*.dll ${DISTNAME}/lib/\n+    find . -name \"lib*.la\" -delete\n+    find . -name \"lib*.a\" -delete\n+    rm -rf ${DISTNAME}/lib/pkgconfig\n+    find ${DISTNAME}/bin -type f -executable -exec ${i}-objcopy --only-keep-debug {} {}.dbg \\; -exec ${i}-strip -s {} \\; -exec ${i}-objcopy --add-gnu-debuglink={}.dbg {} \\;\n+    find ${DISTNAME}/lib -type f -exec ${i}-objcopy --only-keep-debug {} {}.dbg \\; -exec ${i}-strip -s {} \\; -exec ${i}-objcopy --add-gnu-debuglink={}.dbg {} \\;\n+    find ${DISTNAME} -not -name \"*.dbg\"  -type f | sort | zip -X@ ${OUTDIR}/${DISTNAME}-${i}.zip\n+    find ${DISTNAME} -name \"*.dbg\"  -type f | sort | zip -X@ ${OUTDIR}/${DISTNAME}-${i}-debug.zip\n+    cd ../../\n+    rm -rf distsrc-${i}\n+  done\n+  cd $OUTDIR\n+  rename 's/-setup\\.exe$/-setup-unsigned.exe/' *-setup.exe\n+  find . -name \"*-setup-unsigned.exe\" | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ${OUTDIR}/${DISTNAME}-win-unsigned.tar.gz\n+  mv ${OUTDIR}/${DISTNAME}-x86_64-*-debug.zip ${OUTDIR}/${DISTNAME}-win64-debug.zip\n+  mv ${OUTDIR}/${DISTNAME}-i686-*-debug.zip ${OUTDIR}/${DISTNAME}-win32-debug.zip\n+  mv ${OUTDIR}/${DISTNAME}-x86_64-*.zip ${OUTDIR}/${DISTNAME}-win64.zip\n+  mv ${OUTDIR}/${DISTNAME}-i686-*.zip ${OUTDIR}/${DISTNAME}-win32.zip"
      },
      {
        "sha": "a8a823cac0540337879381babf55c7fb75695aec",
        "filename": "contrib/gitian-descriptors/gitian-win32.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 61,
        "changes": 61,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d980f9b7d687a1e60eecf3691b592d9806a30f4a/contrib/gitian-descriptors/gitian-win32.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d980f9b7d687a1e60eecf3691b592d9806a30f4a/contrib/gitian-descriptors/gitian-win32.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-win32.yml?ref=d980f9b7d687a1e60eecf3691b592d9806a30f4a",
        "patch": "@@ -1,61 +0,0 @@\n----\n-name: \"bitcoin\"\n-suites:\n-- \"precise\"\n-architectures:\n-- \"amd64\"\n-packages:\n-- \"mingw-w64\"\n-- \"g++-mingw-w64\"\n-- \"git-core\"\n-- \"unzip\"\n-- \"nsis\"\n-- \"faketime\"\n-- \"autoconf2.13\"\n-- \"libtool\"\n-- \"automake\"\n-- \"pkg-config\"\n-- \"bsdmainutils\"\n-\n-reference_datetime: \"2013-06-01 00:00:00\"\n-remotes:\n-- \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n-  \"dir\": \"bitcoin\"\n-files:\n-- \"qt-win32-4.8.3-gitian-r4.zip\"\n-- \"boost-win32-1.54.0-gitian-r6.zip\"\n-- \"bitcoin-deps-win32-gitian-r9.zip\"\n-- \"protobuf-win32-2.5.0-gitian-r3.zip\"\n-script: |\n-  #\n-  STAGING=$HOME/staging\n-  HOST=i686-w64-mingw32\n-  #\n-  mkdir -p $STAGING\n-  cd $STAGING\n-  unzip ../build/qt-win32-4.8.3-gitian-r4.zip\n-  unzip ../build/boost-win32-1.54.0-gitian-r6.zip\n-  unzip ../build/bitcoin-deps-win32-gitian-r9.zip\n-  unzip ../build/protobuf-win32-2.5.0-gitian-r3.zip\n-  cd $HOME/build/\n-  #\n-  cd bitcoin\n-  export PATH=$STAGING/host/bin:$PATH\n-  export TAR_OPTIONS=--mtime=`echo $REFERENCE_DATETIME | awk '{ print $1 }'`\n-  ./autogen.sh\n-  ./configure --bindir=$OUTDIR --prefix=$STAGING --host=$HOST --with-qt-plugindir=$STAGING/plugins  --with-qt-incdir=$STAGING/include --with-qt-bindir=$STAGING/host/bin --with-boost=$STAGING --disable-maintainer-mode --with-protoc-bindir=$STAGING/host/bin --disable-dependency-tracking CPPFLAGS=\"-I$STAGING/include\" LDFLAGS=\"-L$STAGING/lib\" CXXFLAGS=\"-frandom-seed=bitcoin\"\n-  make dist\n-  mkdir -p distsrc\n-  cd distsrc\n-  tar --strip-components=1 -xf ../bitcoin-*.tar.*\n-  ./configure --bindir=$OUTDIR --prefix=$STAGING --host=i686-w64-mingw32 --with-qt-plugindir=$STAGING/plugins  --with-qt-incdir=$STAGING/include --with-qt-bindir=$STAGING/host/bin --with-boost=$STAGING --disable-maintainer-mode --with-protoc-bindir=$STAGING/host/bin --disable-dependency-tracking CPPFLAGS=\"-I$STAGING/include\" LDFLAGS=\"-L$STAGING/lib\" CXXFLAGS=\"-frandom-seed=bitcoin\"\n-  export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1\n-  export FAKETIME=$REFERENCE_DATETIME\n-  export TZ=UTC\n-  make $MAKEOPTS\n-  make deploy\n-  make install-strip\n-  cp -f bitcoin-*setup*.exe $OUTDIR/\n-\n-  mkdir -p $OUTDIR/src\n-  cp -f ../bitcoin-*.tar.* $OUTDIR/src"
      },
      {
        "sha": "e29033d29bc929221b30dae146fd3797c233fd38",
        "filename": "contrib/gitian-descriptors/gitian.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 74,
        "changes": 74,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d980f9b7d687a1e60eecf3691b592d9806a30f4a/contrib/gitian-descriptors/gitian.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d980f9b7d687a1e60eecf3691b592d9806a30f4a/contrib/gitian-descriptors/gitian.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian.yml?ref=d980f9b7d687a1e60eecf3691b592d9806a30f4a",
        "patch": "@@ -1,74 +0,0 @@\n----\n-name: \"bitcoin\"\n-suites:\n-- \"lucid\"\n-architectures:\n-- \"i386\"\n-- \"amd64\"\n-packages: \n-- \"libdb4.8++-dev\"\n-- \"qt4-qmake\"\n-- \"libqt4-dev\"\n-- \"libboost-system-dev\"\n-- \"libboost-filesystem-dev\"\n-- \"libboost-program-options-dev\"\n-- \"libboost-thread-dev\"\n-- \"libboost-test-dev\"\n-- \"libssl-dev\"\n-- \"git-core\"\n-- \"unzip\"\n-- \"pkg-config\"\n-- \"libpng12-dev\"\n-- \"autoconf2.13\"\n-- \"libtool\"\n-- \"automake\"\n-- \"faketime\"\n-- \"bsdmainutils\"\n-reference_datetime: \"2013-06-01 00:00:00\"\n-remotes:\n-- \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n-  \"dir\": \"bitcoin\"\n-files:\n-- \"miniupnpc-1.6.tar.gz\"\n-- \"qrencode-3.2.0.tar.bz2\"\n-- \"protobuf-2.5.0.tar.bz2\"\n-script: |\n-  STAGING=\"$HOME/install\"\n-  export LIBRARY_PATH=\"$STAGING/lib\"\n-  # Integrity Check\n-  echo \"bbd6b756e6af44b5a5b0f9b93eada3fb8922ed1d6451b7d6f184d0ae0c813994  miniupnpc-1.6.tar.gz\"   | sha256sum -c\n-  echo \"03c4bc7cd9a75747c3815d509bbe061907d615764f2357923f0db948c567068f  qrencode-3.2.0.tar.bz2\" | sha256sum -c\n-  echo \"13bfc5ae543cf3aa180ac2485c0bc89495e3ae711fc6fab4f8ffe90dfb4bb677  protobuf-2.5.0.tar.bz2\" | sha256sum -c\n-\n-  tar xzfm miniupnpc-1.6.tar.gz\n-  cd miniupnpc-1.6\n-  INSTALLPREFIX=$STAGING make $MAKEOPTS install\n-  cd ..\n-  #\n-  tar xjfm qrencode-3.2.0.tar.bz2\n-  cd qrencode-3.2.0\n-  sed -i 's/@LIBPTHREAD@//' libqrencode.pc.in\n-  ./configure --prefix=$STAGING --enable-static --disable-shared\n-  make $MAKEOPTS install\n-  cd ..\n-  #\n-  tar xjfm protobuf-2.5.0.tar.bz2\n-  cd protobuf-2.5.0\n-  mkdir -p $STAGING/host/bin\n-  ./configure --prefix=$STAGING --bindir=$STAGING/host/bin --enable-static --disable-shared\n-  make $MAKEOPTS install\n-  cd ..\n-  #\n-  cd bitcoin\n-  export TAR_OPTIONS=--mtime=`echo $REFERENCE_DATETIME | awk '{ print $1 }'`\n-  ./autogen.sh\n-  ./configure --prefix=$STAGING --bindir=$OUTDIR --with-protoc-bindir=$STAGING/host/bin --disable-maintainer-mode --disable-dependency-tracking PKG_CONFIG_PATH=\"$STAGING/lib/pkgconfig\" CPPFLAGS=\"-I$STAGING/include\" LDFLAGS=\"-L$STAGING/lib\" CXXFLAGS=\"-frandom-seed=bitcoin\"\n-  make dist\n-  mkdir -p distsrc\n-  cd distsrc\n-  tar --strip-components=1 -xf ../bitcoin-*.tar.*\n-  ./configure --prefix=$STAGING --bindir=$OUTDIR --with-protoc-bindir=$STAGING/host/bin --disable-maintainer-mode --disable-dependency-tracking PKG_CONFIG_PATH=\"$STAGING/lib/pkgconfig\" CPPFLAGS=\"-I$STAGING/include\" LDFLAGS=\"-L$STAGING/lib\" CXXFLAGS=\"-frandom-seed=bitcoin\"\n-  make $MAKEOPTS\n-  make $MAKEOPTS install-strip\n-  mkdir -p $OUTDIR/src\n-  cp ../bitcoin-*.tar.* $OUTDIR/src"
      },
      {
        "sha": "b2e3d0b46501087255cdaaf54b22996eed77bfcb",
        "filename": "contrib/gitian-descriptors/protobuf-win32.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 44,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d980f9b7d687a1e60eecf3691b592d9806a30f4a/contrib/gitian-descriptors/protobuf-win32.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d980f9b7d687a1e60eecf3691b592d9806a30f4a/contrib/gitian-descriptors/protobuf-win32.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/protobuf-win32.yml?ref=d980f9b7d687a1e60eecf3691b592d9806a30f4a",
        "patch": "@@ -1,44 +0,0 @@\n----\n-name: \"protobuf-win32\"\n-suites:\n-- \"precise\"\n-architectures:\n-- \"amd64\"\n-packages:\n-- \"mingw-w64\"\n-- \"g++-mingw-w64\"\n-- \"zip\"\n-- \"faketime\"\n-reference_datetime: \"2013-04-15 00:00:00\"\n-remotes: []\n-files:\n-- \"protobuf-2.5.0.tar.bz2\"\n-script: |\n-  #\n-  export TZ=UTC\n-  export INSTALLPREFIX=$OUTDIR/staging/deps\n-  export HOST=i686-w64-mingw32\n-  # Integrity Check\n-  echo \"13bfc5ae543cf3aa180ac2485c0bc89495e3ae711fc6fab4f8ffe90dfb4bb677  protobuf-2.5.0.tar.bz2\" | sha256sum -c\n-\n-  #\n-  mkdir -p $INSTALLPREFIX\n-\n-  tar xjf protobuf-2.5.0.tar.bz2\n-  cd protobuf-2.5.0\n-  # First: build a native (linux) protoc\n-  ./configure --enable-shared=no --disable-dependency-tracking\n-  make\n-  mkdir -p $INSTALLPREFIX/host/bin\n-  cp src/protoc $INSTALLPREFIX/host/bin\n-  # Now recompile with the mingw cross-compiler:\n-  make distclean\n-  ./configure --prefix=$INSTALLPREFIX --enable-shared=no --disable-dependency-tracking --with-protoc=$INSTALLPREFIX/host/bin/protoc --host=$HOST CXXFLAGS=-frandom-seed=11\n-  make\n-  make install\n-  cd $INSTALLPREFIX\n-  export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1\n-  export FAKETIME=$REFERENCE_DATETIME\n-  zip -r $OUTDIR/protobuf-win32-2.5.0-gitian-r3.zip include lib host\n-  unset LD_PRELOAD\n-  unset FAKETIME"
      },
      {
        "sha": "ffa8bcab466dc72fb7b51749e129fea6f6f41773",
        "filename": "contrib/gitian-descriptors/qt-win32.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 65,
        "changes": 65,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d980f9b7d687a1e60eecf3691b592d9806a30f4a/contrib/gitian-descriptors/qt-win32.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d980f9b7d687a1e60eecf3691b592d9806a30f4a/contrib/gitian-descriptors/qt-win32.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/qt-win32.yml?ref=d980f9b7d687a1e60eecf3691b592d9806a30f4a",
        "patch": "@@ -1,65 +0,0 @@\n----\n-name: \"qt\"\n-suites:\n-- \"precise\"\n-architectures:\n-- \"amd64\"\n-packages: \n-- \"mingw-w64\"\n-- \"g++-mingw-w64\"\n-- \"zip\"\n-- \"unzip\"\n-- \"faketime\"\n-- \"unzip\"\n-reference_datetime: \"2011-01-30 00:00:00\"\n-remotes: []\n-files:\n-- \"qt-everywhere-opensource-src-4.8.3.tar.gz\"\n-- \"bitcoin-deps-win32-gitian-r9.zip\"\n-script: |\n-  #\n-  HOST=i686-w64-mingw32\n-  INSTDIR=\"$HOME/qt/\"\n-  # Integrity Check\n-  echo \"f1f72974f924861be04019f49f07cd43ab3c95056db2ba8f34b283487cccc728  qt-everywhere-opensource-src-4.8.3.tar.gz\" | sha256sum -c\n-\n-  mkdir $INSTDIR\n-  mkdir -p $INSTDIR/host/bin\n-  #\n-  # Need mingw-compiled openssl from bitcoin-deps:\n-  unzip bitcoin-deps-win32-gitian-r9.zip\n-  DEPSDIR=`pwd`\n-  #\n-  tar xzf qt-everywhere-opensource-src-4.8.3.tar.gz\n-  cd qt-everywhere-opensource-src-4.8.3\n-  sed 's/$TODAY/2011-01-30/' -i configure\n-  sed \"s/i686-pc-mingw32-/$HOST-/\" -i mkspecs/unsupported/win32-g++-cross/qmake.conf\n-  sed --posix \"s|QMAKE_CFLAGS\\t\\t= -pipe|QMAKE_CFLAGS\\t\\t= -pipe -isystem /usr/$HOST/include/ -frandom-seed=qtbuild|\" -i mkspecs/unsupported/win32-g++-cross/qmake.conf\n-  sed 's/QMAKE_CXXFLAGS_EXCEPTIONS_ON = -fexceptions -mthreads/QMAKE_CXXFLAGS_EXCEPTIONS_ON = -fexceptions/' -i mkspecs/unsupported/win32-g++-cross/qmake.conf\n-  sed 's/QMAKE_LFLAGS_EXCEPTIONS_ON = -mthreads/QMAKE_LFLAGS_EXCEPTIONS_ON = -lmingwthrd/' -i mkspecs/unsupported/win32-g++-cross/qmake.conf\n-  sed --posix \"s/QMAKE_MOC\\t\\t= $HOST-moc/QMAKE_MOC\\t\\t= moc/\" -i mkspecs/unsupported/win32-g++-cross/qmake.conf\n-  sed --posix \"s/QMAKE_RCC\\t\\t= $HOST-rcc/QMAKE_RCC\\t\\t= rcc/\" -i mkspecs/unsupported/win32-g++-cross/qmake.conf\n-  sed --posix \"s/QMAKE_UIC\\t\\t= $HOST-uic/QMAKE_UIC\\t\\t= uic/\" -i mkspecs/unsupported/win32-g++-cross/qmake.conf\n-  # ar adds timestamps to every object file included in the static library\n-  # providing -D as ar argument is supposed to solve it, but doesn't work as qmake strips off the arguments and adds -M to pass a script...\n-  # which somehow cannot be combined with other flags.\n-  # use faketime only for ar, as it confuses make/qmake into hanging sometimes\n-  sed --posix \"s|QMAKE_LIB\\t\\t= $HOST-ar -ru|QMAKE_LIB\\t\\t= $HOME/ar -Dr|\" -i mkspecs/unsupported/win32-g++-cross/qmake.conf\n-  echo '#!/bin/bash' > $HOME/ar\n-  echo 'export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1' >> $HOME/ar\n-  echo \"$HOST-ar \\\"\\$@\\\"\" >> $HOME/ar\n-  chmod +x $HOME/ar\n-  #export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1\n-  export FAKETIME=$REFERENCE_DATETIME\n-  export TZ=UTC\n-  # Compile static libraries, and use statically linked openssl (-openssl-linked):\n-  OPENSSL_LIBS=\"-L$DEPSDIR/lib -lssl -lcrypto -lgdi32\" ./configure -prefix $INSTDIR -bindir $INSTDIR/host/bin -I $DEPSDIR/include  -confirm-license -release -opensource -static -no-qt3support -xplatform unsupported/win32-g++-cross -no-multimedia -no-audio-backend -no-phonon -no-phonon-backend -no-declarative -no-script -no-scripttools -no-javascript-jit -no-webkit -no-svg -no-xmlpatterns -no-sql-sqlite -no-nis -no-cups -no-iconv -no-dbus -no-gif -no-libtiff -no-opengl -nomake examples -nomake demos -nomake docs -no-feature-style-plastique -no-feature-style-cleanlooks -no-feature-style-motif -no-feature-style-cde -no-feature-style-windowsce -no-feature-style-windowsmobile -no-feature-style-s60 -openssl-linked\n-  find . -name *.prl | xargs -l sed 's|/\\.||' -i\n-  find . -name *.prl | xargs -l sed 's|/$||' -i\n-  make $MAKEOPTS install\n-  cd $INSTDIR\n-  find . -name *.prl | xargs -l sed 's|/$||' -i\n-\n-  # as zip stores file timestamps, use faketime to intercept stat calls to set dates for all files to reference date\n-  export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1\n-  zip -r $OUTDIR/qt-win32-4.8.3-gitian-r4.zip *"
      },
      {
        "sha": "fb6d9eb28423d2c8ece89179f8e67ae06fa6dc13",
        "filename": "contrib/gitian-downloader/bluematt-key.pgp",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d980f9b7d687a1e60eecf3691b592d9806a30f4a/contrib/gitian-downloader/bluematt-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d980f9b7d687a1e60eecf3691b592d9806a30f4a/contrib/gitian-downloader/bluematt-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/bluematt-key.pgp?ref=d980f9b7d687a1e60eecf3691b592d9806a30f4a"
      },
      {
        "sha": "ae0377a704b77b5dd66d62863525cae1f0f04db3",
        "filename": "contrib/gitian-downloader/linux-download-config",
        "status": "removed",
        "additions": 0,
        "deletions": 46,
        "changes": 46,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d980f9b7d687a1e60eecf3691b592d9806a30f4a/contrib/gitian-downloader/linux-download-config",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d980f9b7d687a1e60eecf3691b592d9806a30f4a/contrib/gitian-downloader/linux-download-config",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/linux-download-config?ref=d980f9b7d687a1e60eecf3691b592d9806a30f4a",
        "patch": "@@ -1,46 +0,0 @@\n---- \n-name: bitcoin\n-urls:\n-- http://bitcoin.org/bitcoin-latest-linux-gitian.zip\n-rss:\n-- url: http://sourceforge.net/api/file/index/project-id/244765/mtime/desc/limit/100/rss\n-  xpath: //item/link/text()\n-  pattern: bitcoin-\\d+.\\d+.\\d+-linux-gitian.zip\n-signers:\n-  0A82509767C7D4A5D14DA2301AE1D35043E08E54:\n-    weight: 40\n-    name: BlueMatt\n-    key: bluematt\n-  BF6273FAEF7CC0BA1F562E50989F6B3048A116B5:\n-    weight: 40\n-    name: Devrandom\n-    key: devrandom\n-  E463A93F5F3117EEDE6C7316BD02942421F4889F:\n-    weight: 40\n-    name: Luke-Jr\n-    key: luke-jr\n-  D762373D24904A3E42F33B08B9A408E71DAAC974:\n-    weight: 40\n-    name: \"Pieter Wuille\"\n-    key: sipa\n-  77E72E69DA7EE0A148C06B21B34821D4944DE5F7:\n-    weight: 40\n-    name: tcatm\n-    key: tcatm\n-  01CDF4627A3B88AAE4A571C87588242FBE38D3A8:\n-    weight: 40\n-    name: \"Gavin Andresen\"\n-    key: gavinandresen\n-  71A3B16735405025D447E8F274810B012346C9A6:\n-    weight: 40\n-    name: \"Wladimir J. van der Laan\"\n-    key: laanwj\n-  AEC1884398647C47413C1C3FB1179EB7347DC10D:\n-    weight: 40\n-    name: \"Warren Togami\"\n-    key: wtogami\n-  9692B91BBF0E8D34DFD33B1882C5C009628ECF0C:\n-    weight: 1\n-    name: michagogo\n-    key: michagogo\n-minimum_weight: 120"
      },
      {
        "sha": "275b041d2059ece19e1a4ade74b32654ab3a2c56",
        "filename": "contrib/gitian-downloader/luke-jr-key.pgp",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d980f9b7d687a1e60eecf3691b592d9806a30f4a/contrib/gitian-downloader/luke-jr-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d980f9b7d687a1e60eecf3691b592d9806a30f4a/contrib/gitian-downloader/luke-jr-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/luke-jr-key.pgp?ref=d980f9b7d687a1e60eecf3691b592d9806a30f4a"
      },
      {
        "sha": "1ead2fddcb872f90917c4636c11e6134594c3875",
        "filename": "contrib/gitian-downloader/win32-download-config",
        "status": "removed",
        "additions": 0,
        "deletions": 46,
        "changes": 46,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d980f9b7d687a1e60eecf3691b592d9806a30f4a/contrib/gitian-downloader/win32-download-config",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d980f9b7d687a1e60eecf3691b592d9806a30f4a/contrib/gitian-downloader/win32-download-config",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/win32-download-config?ref=d980f9b7d687a1e60eecf3691b592d9806a30f4a",
        "patch": "@@ -1,46 +0,0 @@\n---- \n-name: bitcoin\n-urls:\n-- http://bitcoin.org/bitcoin-latest-win32-gitian.zip\n-rss:\n-- url: http://sourceforge.net/api/file/index/project-id/244765/mtime/desc/limit/100/rss\n-  xpath: //item/link/text()\n-  pattern: bitcoin-\\d+.\\d+.\\d+-win32-gitian.zip\n-signers:\n-  0A82509767C7D4A5D14DA2301AE1D35043E08E54:\n-    weight: 40\n-    name: BlueMatt\n-    key: bluematt\n-  BF6273FAEF7CC0BA1F562E50989F6B3048A116B5:\n-    weight: 40\n-    name: Devrandom\n-    key: devrandom\n-  E463A93F5F3117EEDE6C7316BD02942421F4889F:\n-    weight: 40\n-    name: Luke-Jr\n-    key: luke-jr\n-  D762373D24904A3E42F33B08B9A408E71DAAC974:\n-    weight: 40\n-    name: \"Pieter Wuille\"\n-    key: sipa\n-  77E72E69DA7EE0A148C06B21B34821D4944DE5F7:\n-    weight: 40\n-    name: tcatm\n-    key: tcatm\n-  01CDF4627A3B88AAE4A571C87588242FBE38D3A8:\n-    weight: 40\n-    name: \"Gavin Andresen\"\n-    key: gavinandresen\n-  71A3B16735405025D447E8F274810B012346C9A6:\n-    weight: 40\n-    name: \"Wladimir J. van der Laan\"\n-    key: laanwj\n-  AEC1884398647C47413C1C3FB1179EB7347DC10D:\n-    weight: 40\n-    name: \"Warren Togami\"\n-    key: wtogami\n-  9692B91BBF0E8D34DFD33B1882C5C009628ECF0C:\n-    weight: 1\n-    name: michagogo\n-    key: michagogo\n-minimum_weight: 120"
      },
      {
        "sha": "030fd5cf3cd389976b9d07e6e48bb8d3524442fe",
        "filename": "contrib/gitian-keys/achow101-key.pgp",
        "status": "added",
        "additions": 52,
        "deletions": 0,
        "changes": 52,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/gitian-keys/achow101-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/gitian-keys/achow101-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/achow101-key.pgp?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,52 @@\n+-----BEGIN PGP PUBLIC KEY BLOCK-----\n+Version: GnuPG v1\n+\n+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\n+Khvd4+XHE/ecjLOPvLweAg==\n+=+hz7\n+-----END PGP PUBLIC KEY BLOCK-----"
      },
      {
        "sha": "df06e19fa4b109286dbbb7596c86d31fe0f1052f",
        "filename": "contrib/gitian-keys/aschildbach-key.pgp",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/gitian-keys/aschildbach-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/gitian-keys/aschildbach-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/aschildbach-key.pgp?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "2389d4657fb7f5f225f5d76e08841fd6e21d4be9",
        "filename": "contrib/gitian-keys/bluematt-key.pgp",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/gitian-keys/bluematt-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/gitian-keys/bluematt-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/bluematt-key.pgp?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "60d76c0ec7ab86635637ee9f49948e004fadfee4",
        "filename": "contrib/gitian-keys/btcdrak-key.pgp",
        "status": "added",
        "additions": 142,
        "deletions": 0,
        "changes": 142,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/gitian-keys/btcdrak-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/gitian-keys/btcdrak-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/btcdrak-key.pgp?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,142 @@\n+-----BEGIN PGP PUBLIC KEY BLOCK-----\n+Version: GnuPG v2\n+\n+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\n+eEaG0RH54+pi4gw=\n+=fFMC\n+-----END PGP PUBLIC KEY BLOCK-----"
      },
      {
        "sha": "928a74b3155da22877d1b6ad32fa2a7cb745e0ba",
        "filename": "contrib/gitian-keys/cdecker-key.pgp",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/gitian-keys/cdecker-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/gitian-keys/cdecker-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/cdecker-key.pgp?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "71a42e514881bc6383531ea2c82c93998453245e",
        "filename": "contrib/gitian-keys/centaur1-key.pgp",
        "status": "added",
        "additions": 30,
        "deletions": 0,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/gitian-keys/centaur1-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/gitian-keys/centaur1-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/centaur1-key.pgp?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,30 @@\n+-----BEGIN PGP PUBLIC KEY BLOCK-----\n+Version: GnuPG v1.4.12 (GNU/Linux)\n+\n+mQENBFTjy20BCAC7q/tpPQ9tdEALpDqe8kpVAT5ysOJDLDeFEE1J5O8NuDFuibiN\n+XYkb2nAt4Vdr23in9z0LAiTSgr7znndnab/rOSn6pXbXQfLTHrSnAeClTHVQVPSq\n+m5kNg1vWvNxFtIpZ/fGsc6LLmIHxdgeLn+NOpvNx7RzF/N5ctX51vMxMUeDq3daZ\n+tLneJVRj5tXHRJcjW62cyiNFasYAZ3JC8wjwzr0SOndc7kygbEVCTWNkTAGd1Lax\n+KSJW6TjhBPK7j+RljS5nfx/Tf+OG4AoA7/53593YL7Shfx8rwWVIeF4nS6efFnuf\n+eIj+aS5haGyFvNgw8DE7QUCrPiUxeA8wuXu7ABEBAAG0H2NlbnRhdXIgPGNlbnRh\n+dXJAcGhvbmVib29rLmNvbT6JATgEEwECACIFAlTjy20CGwMGCwkIBwMCBhUIAgkK\n+CwQWAgMBAh4BAheAAAoJEP+V+qlxaXQF8r4IAKnE8D9AOTdM/YvYxpCeI6ndEUUs\n+8NcotpbIBJ67vr1Dsot7Ee0PrmIYOiInA+T81lPUDecJYrnemVefhquiyJ5VJ4/d\n+z2zUKBfxjeOsj/PHgcowVxMco8fNEWQa2fZX6X8RVADIsUnIIwpRFVUcbssK/3xJ\n+k46vjWwYNQywht/ZgFBesOgywyz5GozmwrK6TixJxKk8M69GFz2fHhJjp1bxDZuk\n+Rs3YmWeOcCasoJ6GbvIboKQSPHGyEOCqIuiBL63YMa0n1FU0ooDteNZ04eRinIhc\n+fo9JC66fQrUFn8CmmRTtdZOrZ/efYjQtfLAunCkzSM3p6DE9u4Y7d8E5Ar65AQ0E\n+VOPLbQEIANhxtouZuQmw+k89toBWXw75s+csxKHKZuhw8QntaFyFYq3IOnIeV1sK\n+PRENkWsqDInjEM8k9eZ6pnS11EQ1rrFffss+mprTbL3I4S489tJETYZKHrmmox7h\n+ustRi5eXBEmGeKW0mqpb/9r4okpTaIfs+EJ4C9jj0ghWkqU0acyzanJiUY/0R46F\n+vPfGfHnhZ5TAl3eiL0H2JkF6taG8K1XOLemahdZHE9wJh0ZFWnDDkA1l6j2rtYga\n+jEi/ucOp5GkmumxbFiVgponDBqBpsscRrCV6SbZs9gz3dQNgqe5A3CKGZRuVCY6s\n+djRJelgqCF5+dV0fAT0oF3C/3E5KAgcAEQEAAYkBHwQYAQIACQUCVOPLbQIbDAAK\n+CRD/lfqpcWl0BUSxCACjEFwQSHcfZINWD+KdNMayxyHQlBwsEDX+xQkgnn+/Q3hW\n+9VI3SSSfFV3ustlUa3IaNHwuWzsrSqG6mLG47LAQ6vPAWVh723gVCpyJf42Oms/e\n+qeyn0f/PT/6RuNMXQeHbfddmRp4PFjyKOms5Bmf3oi4t4JSvOS4yABBBKzhDQYC9\n+e+qv6Y1sDYpSiCxstQLzIHKiB5bfZ8Szfk09EyyLdqLGkiB0MFhHoXWwQxKiLVc+\n+xNFj2a/jw0rQVgN5DZgHBWU5WqvS5CWIczi+2S9MFI26iBhCn3urZToaaQ/DObqC\n+qmekFrJ/GOj5vB1Mm014lWjG2X3EovLZ1XkgWI7W\n+=vtNZ\n+-----END PGP PUBLIC KEY BLOCK-----"
      },
      {
        "sha": "6b0bd240ba4cf8df485a8caa689717a12ef6b3c8",
        "filename": "contrib/gitian-keys/cfields-key.pgp",
        "status": "added",
        "additions": 52,
        "deletions": 0,
        "changes": 52,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/gitian-keys/cfields-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/gitian-keys/cfields-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/cfields-key.pgp?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,52 @@\n+-----BEGIN PGP PUBLIC KEY BLOCK-----\n+Version: GnuPG v1.4.12 (GNU/Linux)\n+\n+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\n+MrD0ofsytfy1LQ==\n+=DE4h\n+-----END PGP PUBLIC KEY BLOCK-----"
      },
      {
        "sha": "71898127ba0d6c9976ab7225d8c71ffc6380b0a2",
        "filename": "contrib/gitian-keys/devrandom-key.pgp",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/gitian-keys/devrandom-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/gitian-keys/devrandom-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/devrandom-key.pgp?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "previous_filename": "contrib/gitian-downloader/devrandom-key.pgp"
      },
      {
        "sha": "9d3f060627ee9cb4143e3b8945a261e90c39ba13",
        "filename": "contrib/gitian-keys/erkmos.pgp",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/gitian-keys/erkmos.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/gitian-keys/erkmos.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/erkmos.pgp?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "9c03ff45226c5629d24e5f9925da7210df0760a5",
        "filename": "contrib/gitian-keys/fanquake-key.pgp",
        "status": "added",
        "additions": 63,
        "deletions": 0,
        "changes": 63,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/gitian-keys/fanquake-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/gitian-keys/fanquake-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/fanquake-key.pgp?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,63 @@\n+-----BEGIN PGP PUBLIC KEY BLOCK-----\n+Version: GnuPG/MacGPG2 v2.0.26\n+\n+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\n+XwbdK0Zpx/oDtRHpuDMGKJBV2LWAZYkEbFsmtg==\n+=3o2I\n+-----END PGP PUBLIC KEY BLOCK-----"
      },
      {
        "sha": "f81f44e874707837c13446858db2fed14ad5c501",
        "filename": "contrib/gitian-keys/gavinandresen-key.pgp",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/gitian-keys/gavinandresen-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/gitian-keys/gavinandresen-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/gavinandresen-key.pgp?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "previous_filename": "contrib/gitian-downloader/gavinandresen-key.pgp"
      },
      {
        "sha": "b8aad7fd88b42770c4aaab3ca97a115694bcb9c7",
        "filename": "contrib/gitian-keys/jl2012-key.pgp",
        "status": "added",
        "additions": 105,
        "deletions": 0,
        "changes": 105,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/gitian-keys/jl2012-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/gitian-keys/jl2012-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/jl2012-key.pgp?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,105 @@\n+-----BEGIN PGP PUBLIC KEY BLOCK-----\n+Comment: GPGTools - https://gpgtools.org\n+\n+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\n+=1irw\n+-----END PGP PUBLIC KEY BLOCK-----"
      },
      {
        "sha": "3831eaea114f77f30f9638e6772f446055f3c68d",
        "filename": "contrib/gitian-keys/jonasschnelli-key.pgp",
        "status": "added",
        "additions": 110,
        "deletions": 0,
        "changes": 110,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/gitian-keys/jonasschnelli-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/gitian-keys/jonasschnelli-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/jonasschnelli-key.pgp?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,110 @@\n+-----BEGIN PGP PUBLIC KEY BLOCK-----\r\n+Version: GnuPG v1\r\n+\r\n+mQINBFSBrDIBEACrZEqObmtlTf7fOKttE39qqisFfMg0VeEPS37uETMGYsgTEvzv\r\n+kfMsXCGsGFLQ78XsHqUeW4uQrtpJH3nUP/Sua1Q12K3lNKTSvVQyEpKoPJwXZahp\r\n+jm6GA1ApDxZ/KlmxyobR3X0urnMYNZobl5IKJXlxoKGl4OkGNeFlh42pCXZDnR9n\r\n+1Y17ZcDdybkWcqPbDAz8ilOQcFMhDBFg3Di3IVMAaDZP1uwWFb5vx60YB5NhkOpF\r\n+nZUH09NJx/7u7QdGPSHOdzW4Xo1HUYtYNDkdOvgZtxpbYEFIaBtVBURMUGwAFagA\r\n+3a6qaGnCBWEQftyISLiqcKqKqXudOg/cLa1CAiQFkz+IBhY9BCGDRnB8Dcae6EGI\r\n+Djt2lqZTuMSiheTWeNFMGBioHfPLedcwae8KflrIBC+hNS4ay6HJdIc03WMQ4JKK\r\n+At8Y8CRLym30/RlqZ2v8CHYqg9Ddlz3+g5JkRKaJTQwFRcX46/tAX+I2NZ8Ra1ea\r\n+rF5cRHuCk/oaw5ZXYhj4zJO74rjAoSewAARlrTMSM541atJU1u6aWT7rNiF9QKIj\r\n+i8vEufUxN0YfdmvDD3OXwbO7GnfWXS4sPklFIRACp+Y4ib+QnRY0/qGE0yh3RAG4\r\n+r/dyIQ1m3z7Pc9eyPKAhE4S7SxAwoR4yOqQ5NAfZXgFuqWzkW51gkQgGzQARAQAB\r\n+tCtKb25hcyBTY2huZWxsaSA8am9uYXMuc2NobmVsbGlAaW5jbHVkZTcuY2g+iQI+\r\n+BBMBAgAoBQJUgawyAhsDBQkDwmcABgsJCAcDAgYVCAIJCgsEFgIDAQIeAQIXgAAK\r\n+CRAicOMMUic59iKUD/93DF04C3lptLjtrhyd4wgpBMJV8yzagGyG+Wk0UR7elQw4\r\n+F1MIvEtIFpuGrcnNfKcqeGGmnnKFTeBjkmgcYvej2fW9XlRA1HgIS0t0ttDv8uVX\r\n+vy1xVj1qISB+17EiftxJjCOl2pZFEVpLQ7sSgqnVRMsCS45ag6rioGxtq1j3ifQN\r\n+TENnJWhzOXvwzZhLgsyWLjeYvTDbzfAQLpZFowAMibOwu6ObCkn4dhaW+lI3AnPu\r\n+76pLsrOljqGvXes6o2d28vjqMrlmsz2xVEJ4bnRPUbLv3bUl6t+19XpiMj94ZCZX\r\n+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\r\n+S5rowLE=\r\n+=ZVPf\r\n+-----END PGP PUBLIC KEY BLOCK-----\n\\ No newline at end of file"
      },
      {
        "sha": "559295109d9646f4baa3f2d7c1eb374333899fd9",
        "filename": "contrib/gitian-keys/laanwj-key.pgp",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/gitian-keys/laanwj-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/gitian-keys/laanwj-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/laanwj-key.pgp?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "previous_filename": "contrib/gitian-downloader/laanwj-key.pgp"
      },
      {
        "sha": "a2d34e75e1c16c17cb721633038813800dbe45b3",
        "filename": "contrib/gitian-keys/luke-jr-key.pgp",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/gitian-keys/luke-jr-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/gitian-keys/luke-jr-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/luke-jr-key.pgp?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "ee626500a482448cb2c7717ba352260262a3422f",
        "filename": "contrib/gitian-keys/marcofalke-key.pgp",
        "status": "added",
        "additions": 69,
        "deletions": 0,
        "changes": 69,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/gitian-keys/marcofalke-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/gitian-keys/marcofalke-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/marcofalke-key.pgp?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,69 @@\n+-----BEGIN PGP PUBLIC KEY BLOCK-----\n+Version: GnuPG v1\n+\n+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\n+=GC3s\n+-----END PGP PUBLIC KEY BLOCK-----"
      },
      {
        "sha": "47bc404554b41866c5626384c30a9e4f9261958c",
        "filename": "contrib/gitian-keys/michagogo-key.pgp",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/gitian-keys/michagogo-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/gitian-keys/michagogo-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/michagogo-key.pgp?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "previous_filename": "contrib/gitian-downloader/michagogo-key.pgp"
      },
      {
        "sha": "5ee82a6f7ea42f0f4ecacbfc0b2541b3d98a48d7",
        "filename": "contrib/gitian-keys/petertodd-key.pgp",
        "status": "added",
        "additions": 1901,
        "deletions": 0,
        "changes": 1901,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/gitian-keys/petertodd-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/gitian-keys/petertodd-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/petertodd-key.pgp?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "0870c88b9b3608b761565063dcbdc33536250227",
        "filename": "contrib/gitian-keys/prab-key.pgp",
        "status": "added",
        "additions": 81,
        "deletions": 0,
        "changes": 81,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/gitian-keys/prab-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/gitian-keys/prab-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/prab-key.pgp?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,81 @@\n+-----BEGIN PGP PUBLIC KEY BLOCK-----\n+Version: GnuPG v2\n+\n+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\n+RFdDYRHByRDDL1I=\n+=dOwX\n+-----END PGP PUBLIC KEY BLOCK-----"
      },
      {
        "sha": "a1930ddee905f688dcb3a189a88e1317e7006a0f",
        "filename": "contrib/gitian-keys/sipa-key.pgp",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/gitian-keys/sipa-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/gitian-keys/sipa-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/sipa-key.pgp?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "previous_filename": "contrib/gitian-downloader/sipa-key.pgp"
      },
      {
        "sha": "baaec76b8c656a04beb4a91155dff40658c87bd7",
        "filename": "contrib/gitian-keys/tcatm-key.pgp",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/gitian-keys/tcatm-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/gitian-keys/tcatm-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/tcatm-key.pgp?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "previous_filename": "contrib/gitian-downloader/tcatm-key.pgp"
      },
      {
        "sha": "e0f6c4c5fdf56ffbd6308d4e0a6624290feadff6",
        "filename": "contrib/gitian-keys/wtogami-key.pgp",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/gitian-keys/wtogami-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/gitian-keys/wtogami-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/wtogami-key.pgp?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "previous_filename": "contrib/gitian-downloader/wtogami-key.pgp"
      },
      {
        "sha": "eb5d30accef8bfc9dfbf7e4b38b0ca5b924fa508",
        "filename": "contrib/init/README.md",
        "status": "added",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/init/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/init/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/README.md?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,12 @@\n+Sample configuration files for:\n+\n+SystemD: bitcoind.service\n+Upstart: bitcoind.conf\n+OpenRC:  bitcoind.openrc\n+         bitcoind.openrcconf\n+CentOS:  bitcoind.init\n+OS X:    org.bitcoin.bitcoind.plist\n+\n+have been made available to assist packagers in creating node packages here.\n+\n+See doc/init.md for more information."
      },
      {
        "sha": "f9554eecde7f2e536d7ac4422b58e870f2275eaa",
        "filename": "contrib/init/bitcoind.conf",
        "status": "added",
        "additions": 65,
        "deletions": 0,
        "changes": 65,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/init/bitcoind.conf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/init/bitcoind.conf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/bitcoind.conf?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,65 @@\n+description \"Bitcoin Core Daemon\"\n+\n+start on runlevel [2345]\n+stop on starting rc RUNLEVEL=[016]\n+\n+env BITCOIND_BIN=\"/usr/bin/bitcoind\"\n+env BITCOIND_USER=\"bitcoin\"\n+env BITCOIND_GROUP=\"bitcoin\"\n+env BITCOIND_PIDDIR=\"/var/run/bitcoind\"\n+# upstart can't handle variables constructed with other variables\n+env BITCOIND_PIDFILE=\"/var/run/bitcoind/bitcoind.pid\"\n+env BITCOIND_CONFIGFILE=\"/etc/bitcoin/bitcoin.conf\"\n+env BITCOIND_DATADIR=\"/var/lib/bitcoind\"\n+\n+expect fork\n+\n+respawn\n+respawn limit 5 120\n+kill timeout 60\n+\n+pre-start script\n+    # this will catch non-existent config files\n+    # bitcoind will check and exit with this very warning, but it can do so\n+    # long after forking, leaving upstart to think everything started fine.\n+    # since this is a commonly encountered case on install, just check and\n+    # warn here.\n+    if ! grep -qs '^rpcpassword=' \"$BITCOIND_CONFIGFILE\" ; then\n+        echo \"ERROR: You must set a secure rpcpassword to run bitcoind.\"\n+        echo \"The setting must appear in $BITCOIND_CONFIGFILE\"\n+        echo\n+        echo \"This password is security critical to securing wallets \"\n+        echo \"and must not be the same as the rpcuser setting.\"\n+        echo \"You can generate a suitable random password using the following\"\n+        echo \"command from the shell:\"\n+        echo\n+        echo \"bash -c 'tr -dc a-zA-Z0-9 < /dev/urandom | head -c32 && echo'\"\n+        echo\n+        echo \"It is also recommended that you also set alertnotify so you are \"\n+        echo \"notified of problems:\"\n+        echo\n+        echo \"ie: alertnotify=echo %%s | mail -s \\\"Bitcoin Alert\\\"\" \\\n+            \"admin@foo.com\"\n+        echo\n+        exit 1\n+    fi\n+\n+    mkdir -p \"$BITCOIND_PIDDIR\"\n+    chmod 0755 \"$BITCOIND_PIDDIR\"\n+    chown $BITCOIND_USER:$BITCOIND_GROUP \"$BITCOIND_PIDDIR\"\n+    chown $BITCOIND_USER:$BITCOIND_GROUP \"$BITCOIND_CONFIGFILE\"\n+    chmod 0660 \"$BITCOIND_CONFIGFILE\"\n+end script\n+\n+exec start-stop-daemon \\\n+    --start \\\n+    --pidfile \"$BITCOIND_PIDFILE\" \\\n+    --chuid $BITCOIND_USER:$BITCOIND_GROUP \\\n+    --exec \"$BITCOIND_BIN\" \\\n+    -- \\\n+    -pid=\"$BITCOIND_PIDFILE\" \\\n+    -conf=\"$BITCOIND_CONFIGFILE\" \\\n+    -datadir=\"$BITCOIND_DATADIR\" \\\n+    -disablewallet \\\n+    -daemon\n+"
      },
      {
        "sha": "db5061874b3a923278fa11d4f3117fca19da1bcc",
        "filename": "contrib/init/bitcoind.init",
        "status": "added",
        "additions": 67,
        "deletions": 0,
        "changes": 67,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/init/bitcoind.init",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/init/bitcoind.init",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/bitcoind.init?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,67 @@\n+#!/bin/bash\n+#\n+#  bitcoind The bitcoin core server.\n+#\n+#\n+# chkconfig: 345 80 20\n+# description: bitcoind\n+# processname: bitcoind\n+#\n+\n+# Source function library.\n+. /etc/init.d/functions\n+\n+# you can override defaults in /etc/sysconfig/bitcoind, see below\n+if [ -f /etc/sysconfig/bitcoind ]; then\n+        . /etc/sysconfig/bitcoind\n+fi\n+\n+RETVAL=0\n+\n+prog=bitcoind\n+# you can override the lockfile via BITCOIND_LOCKFILE in /etc/sysconfig/bitcoind\n+lockfile=${BITCOIND_LOCKFILE-/var/lock/subsys/bitcoind}\n+\n+# bitcoind defaults to /usr/bin/bitcoind, override with BITCOIND_BIN\n+bitcoind=${BITCOIND_BIN-/usr/bin/bitcoind}\n+\n+# bitcoind opts default to -disablewallet, override with BITCOIND_OPTS\n+bitcoind_opts=${BITCOIND_OPTS--disablewallet}\n+\n+start() {\n+    echo -n $\"Starting $prog: \"\n+    daemon $DAEMONOPTS $bitcoind $bitcoind_opts\n+    RETVAL=$?\n+    echo\n+    [ $RETVAL -eq 0 ] && touch $lockfile\n+    return $RETVAL\n+}\n+\n+stop() {\n+    echo -n $\"Stopping $prog: \"\n+    killproc $prog\n+    RETVAL=$?\n+    echo\n+    [ $RETVAL -eq 0 ] && rm -f $lockfile\n+    return $RETVAL\n+}\n+\n+case \"$1\" in\n+    start)\n+        start\n+        ;;\n+    stop)\n+        stop\n+        ;;\n+    status)\n+        status $prog\n+        ;;\n+    restart)\n+        stop\n+        start\n+        ;;\n+    *)\n+        echo \"Usage: service $prog {start|stop|status|restart}\"\n+        exit 1\n+        ;;\n+esac"
      },
      {
        "sha": "eda1a96fb4fcbaf3a61cafcd80368b5104ec0f56",
        "filename": "contrib/init/bitcoind.openrc",
        "status": "added",
        "additions": 92,
        "deletions": 0,
        "changes": 92,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/init/bitcoind.openrc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/init/bitcoind.openrc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/bitcoind.openrc?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,92 @@\n+#!/sbin/runscript\n+\n+# backward compatibility for existing gentoo layout \n+#\n+if [ -d \"/var/lib/bitcoin/.bitcoin\" ]; then\n+\tBITCOIND_DEFAULT_DATADIR=\"/var/lib/bitcoin/.bitcoin\"\n+else\n+\tBITCOIND_DEFAULT_DATADIR=\"/var/lib/bitcoind\"\n+fi\n+\n+BITCOIND_CONFIGFILE=${BITCOIND_CONFIGFILE:-/etc/bitcoin/bitcoin.conf}\n+BITCOIND_PIDDIR=${BITCOIND_PIDDIR:-/var/run/bitcoind}\n+BITCOIND_PIDFILE=${BITCOIND_PIDFILE:-${BITCOIND_PIDDIR}/bitcoind.pid}\n+BITCOIND_DATADIR=${BITCOIND_DATADIR:-${BITCOIND_DEFAULT_DATADIR}}\n+BITCOIND_USER=${BITCOIND_USER:-${BITCOIN_USER:-bitcoin}}\n+BITCOIND_GROUP=${BITCOIND_GROUP:-bitcoin}\n+BITCOIND_BIN=${BITCOIND_BIN:-/usr/bin/bitcoind}\n+BITCOIND_NICE=${BITCOIND_NICE:-${NICELEVEL:-0}}\n+BITCOIND_OPTS=\"${BITCOIND_OPTS:-${BITCOIN_OPTS}}\"\n+\n+name=\"Bitcoin Core Daemon\"\n+description=\"Bitcoin cryptocurrency P2P network daemon\"\n+\n+command=\"/usr/bin/bitcoind\"\n+command_args=\"-pid=\\\"${BITCOIND_PIDFILE}\\\" \\\n+\t\t-conf=\\\"${BITCOIND_CONFIGFILE}\\\" \\\n+\t\t-datadir=\\\"${BITCOIND_DATADIR}\\\" \\\n+\t\t-daemon \\\n+\t\t${BITCOIND_OPTS}\"\n+\n+required_files=\"${BITCOIND_CONFIGFILE}\"\n+start_stop_daemon_args=\"-u ${BITCOIND_USER} \\\n+\t\t\t-N ${BITCOIND_NICE} -w 2000\"\n+pidfile=\"${BITCOIND_PIDFILE}\"\n+\n+# The retry schedule to use when stopping the daemon. Could be either\n+# a timeout in seconds or multiple signal/timeout pairs (like\n+# \"SIGKILL/180 SIGTERM/300\")\n+retry=\"${BITCOIND_SIGTERM_TIMEOUT}\"\n+\n+depend() {\n+\tneed localmount net\n+}\n+\n+# verify\n+# 1) that the datadir exists and is writable (or create it)\n+# 2) that a directory for the pid exists and is writable\n+# 3) ownership and permissions on the config file\n+start_pre() {\n+\tcheckpath \\\n+\t-d \\\n+\t--mode 0750 \\\n+\t--owner \"${BITCOIND_USER}:${BITCOIND_GROUP}\" \\\n+\t\"${BITCOIND_DATADIR}\"\n+\n+\tcheckpath \\\n+\t-d \\\n+\t--mode 0755 \\\n+\t--owner \"${BITCOIND_USER}:${BITCOIND_GROUP}\" \\\n+\t\"${BITCOIND_PIDDIR}\"\n+\n+\tcheckpath -f \\\n+\t-o ${BITCOIND_USER}:${BITCOIND_GROUP} \\\n+\t-m 0660 \\\n+\t${BITCOIND_CONFIGFILE}\n+\n+\tcheckconfig || return 1\n+}\n+\n+checkconfig()\n+{\n+\tif ! grep -qs '^rpcpassword=' \"${BITCOIND_CONFIGFILE}\" ; then\n+\t\teerror \"\"\n+\t\teerror \"ERROR: You must set a secure rpcpassword to run bitcoind.\"\n+\t\teerror \"The setting must appear in ${BITCOIND_CONFIGFILE}\"\n+\t\teerror \"\"\n+\t\teerror \"This password is security critical to securing wallets \"\n+\t\teerror \"and must not be the same as the rpcuser setting.\"\n+\t\teerror \"You can generate a suitable random password using the following\"\n+\t\teerror \"command from the shell:\"\n+\t\teerror \"\"\n+\t\teerror \"bash -c 'tr -dc a-zA-Z0-9 < /dev/urandom | head -c32 && echo'\"\n+\t\teerror \"\"\n+\t\teerror \"It is also recommended that you also set alertnotify so you are \"\n+\t\teerror \"notified of problems:\"\n+\t\teerror \"\"\n+\t\teerror \"ie: alertnotify=echo %%s | mail -s \\\"Bitcoin Alert\\\"\" \\\n+\t\t\t\"admin@foo.com\"\n+\t\teerror \"\"\n+\t\treturn 1\n+\tfi\n+}"
      },
      {
        "sha": "0cbff6d30d2d66bbafaaf2205f4dd7609b2113a1",
        "filename": "contrib/init/bitcoind.openrcconf",
        "status": "added",
        "additions": 33,
        "deletions": 0,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/init/bitcoind.openrcconf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/init/bitcoind.openrcconf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/bitcoind.openrcconf?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,33 @@\n+# /etc/conf.d/bitcoind: config file for /etc/init.d/bitcoind\n+\n+# Config file location\n+#BITCOIND_CONFIGFILE=\"/etc/bitcoin/bitcoin.conf\"\n+\n+# What directory to write pidfile to?  (created and owned by $BITCOIND_USER)\n+#BITCOIND_PIDDIR=\"/var/run/bitcoind\"\n+\n+# What filename to give the pidfile\n+#BITCOIND_PIDFILE=\"${BITCOIND_PIDDIR}/bitcoind.pid\"\n+\n+# Where to write bitcoind data (be mindful that the blockchain is large)\n+#BITCOIND_DATADIR=\"/var/lib/bitcoind\"\n+\n+# User and group to own bitcoind process\n+#BITCOIND_USER=\"bitcoin\"\n+#BITCOIND_GROUP=\"bitcoin\"\n+\n+# Path to bitcoind executable\n+#BITCOIND_BIN=\"/usr/bin/bitcoind\"\n+\n+# Nice value to run bitcoind under\n+#BITCOIND_NICE=0\n+\n+# Additional options (avoid -conf and -datadir, use flags above)\n+BITCOIND_OPTS=\"-disablewallet\"\n+\n+# The timeout in seconds OpenRC will wait for bitcoind to terminate\n+# after a SIGTERM has been raised.\n+# Note that this will be mapped as argument to start-stop-daemon's\n+# '--retry' option, which means you can specify a retry schedule\n+# here. For more information see man 8 start-stop-daemon.\n+BITCOIND_SIGTERM_TIMEOUT=60"
      },
      {
        "sha": "9132957c38b8d3ed6648b79d3948e41ee3861db0",
        "filename": "contrib/init/bitcoind.service",
        "status": "added",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/init/bitcoind.service",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/init/bitcoind.service",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/bitcoind.service?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,22 @@\n+[Unit]\n+Description=Bitcoin's distributed currency daemon\n+After=network.target\n+\n+[Service]\n+User=bitcoin\n+Group=bitcoin\n+\n+Type=forking\n+PIDFile=/var/lib/bitcoind/bitcoind.pid\n+ExecStart=/usr/bin/bitcoind -daemon -pid=/var/lib/bitcoind/bitcoind.pid \\\n+-conf=/etc/bitcoin/bitcoin.conf -datadir=/var/lib/bitcoind -disablewallet\n+\n+Restart=always\n+PrivateTmp=true\n+TimeoutStopSec=60s\n+TimeoutStartSec=2s\n+StartLimitInterval=120s\n+StartLimitBurst=5\n+\n+[Install]\n+WantedBy=multi-user.target"
      },
      {
        "sha": "e94cd4466d226a992e2bb2e24d594dcb49b58dac",
        "filename": "contrib/init/org.bitcoin.bitcoind.plist",
        "status": "added",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/init/org.bitcoin.bitcoind.plist",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/init/org.bitcoin.bitcoind.plist",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/org.bitcoin.bitcoind.plist?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,15 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n+<plist version=\"1.0\">\n+<dict>\n+\t<key>Label</key>\n+\t<string>org.bitcoin.bitcoind</string>\n+\t<key>ProgramArguments</key>\n+\t<array>\n+\t\t<string>/usr/local/bin/bitcoind</string>\n+\t\t<string>-daemon</string>\n+\t</array>\n+\t<key>RunAtLoad</key>\n+\t<true/>\n+</dict>\n+</plist>"
      },
      {
        "sha": "06f278f3b3c710ed237ee81b1357970b583bd457",
        "filename": "contrib/linearize/README.md",
        "status": "modified",
        "additions": 33,
        "deletions": 2,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/linearize/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/linearize/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/README.md?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -1,2 +1,33 @@\n-### Linearize ###\n-Construct a linear, no-fork, best version of the blockchain.\n\\ No newline at end of file\n+# Linearize\n+Construct a linear, no-fork, best version of the blockchain.\n+\n+## Step 1: Download hash list\n+\n+    $ ./linearize-hashes.py linearize.cfg > hashlist.txt\n+\n+Required configuration file settings for linearize-hashes:\n+* RPC: rpcuser, rpcpassword\n+\n+Optional config file setting for linearize-hashes:\n+* RPC: host, port\n+* Block chain: min_height, max_height\n+\n+## Step 2: Copy local block data\n+\n+    $ ./linearize-data.py linearize.cfg\n+\n+Required configuration file settings:\n+* \"input\": bitcoind blocks/ directory containing blkNNNNN.dat\n+* \"hashlist\": text file containing list of block hashes, linearized-hashes.py\n+output.\n+* \"output_file\": bootstrap.dat\n+      or\n+* \"output\": output directory for linearized blocks/blkNNNNN.dat output\n+\n+Optional config file setting for linearize-data:\n+* \"netmagic\": network magic number\n+* \"max_out_sz\": maximum output file size (default `1000*1000*1000`)\n+* \"split_timestamp\": Split files when a new month is first seen, in addition to\n+reaching a maximum file size.\n+* \"file_timestamp\": Set each file's last-modified time to that of the\n+most recent block in that file."
      },
      {
        "sha": "38da02e66c1e7a46688afea10e8dfc9dbbb38959",
        "filename": "contrib/linearize/example-linearize.cfg",
        "status": "modified",
        "additions": 22,
        "deletions": 5,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/linearize/example-linearize.cfg",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/linearize/example-linearize.cfg",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/example-linearize.cfg?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -1,12 +1,29 @@\n \n-# bitcoind RPC settings\n+# bitcoind RPC settings (linearize-hashes)\n rpcuser=someuser\n-rpcpass=somepassword\n+rpcpassword=somepassword\n host=127.0.0.1\n port=8332\n+#port=18332\n \n-# bootstrap.dat settings\n+# bootstrap.dat hashlist settings (linearize-hashes)\n+max_height=313000\n+\n+# bootstrap.dat input/output settings (linearize-data)\n+\n+# mainnet\n netmagic=f9beb4d9\n-max_height=250000\n-output=bootstrap.dat\n+genesis=000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f\n+input=/home/example/.bitcoin/blocks\n+\n+# testnet\n+#netmagic=0b110907\n+#genesis=000000000933ea01ad0ee984209779baaec3ced90fa3f408719526f8d77f4943\n+#input=/home/example/.bitcoin/testnet3/blocks\n+\n+output_file=/home/example/Downloads/bootstrap.dat\n+hashlist=hashlist.txt\n+split_year=1\n \n+# Maxmimum size in bytes of out-of-order blocks cache in memory\n+out_of_order_cache_sz = 100000000"
      },
      {
        "sha": "0f6fde2a6e05216873f29cb8ec47d416f5c484d3",
        "filename": "contrib/linearize/linearize-data.py",
        "status": "added",
        "additions": 303,
        "deletions": 0,
        "changes": 303,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/linearize/linearize-data.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/linearize/linearize-data.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/linearize-data.py?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,303 @@\n+#!/usr/bin/python\n+#\n+# linearize-data.py: Construct a linear, no-fork version of the chain.\n+#\n+# Copyright (c) 2013-2014 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#\n+\n+from __future__ import print_function, division\n+import json\n+import struct\n+import re\n+import os\n+import os.path\n+import base64\n+import httplib\n+import sys\n+import hashlib\n+import datetime\n+import time\n+from collections import namedtuple\n+\n+settings = {}\n+\n+def uint32(x):\n+\treturn x & 0xffffffffL\n+\n+def bytereverse(x):\n+\treturn uint32(( ((x) << 24) | (((x) << 8) & 0x00ff0000) |\n+\t\t       (((x) >> 8) & 0x0000ff00) | ((x) >> 24) ))\n+\n+def bufreverse(in_buf):\n+\tout_words = []\n+\tfor i in range(0, len(in_buf), 4):\n+\t\tword = struct.unpack('@I', in_buf[i:i+4])[0]\n+\t\tout_words.append(struct.pack('@I', bytereverse(word)))\n+\treturn ''.join(out_words)\n+\n+def wordreverse(in_buf):\n+\tout_words = []\n+\tfor i in range(0, len(in_buf), 4):\n+\t\tout_words.append(in_buf[i:i+4])\n+\tout_words.reverse()\n+\treturn ''.join(out_words)\n+\n+def calc_hdr_hash(blk_hdr):\n+\thash1 = hashlib.sha256()\n+\thash1.update(blk_hdr)\n+\thash1_o = hash1.digest()\n+\n+\thash2 = hashlib.sha256()\n+\thash2.update(hash1_o)\n+\thash2_o = hash2.digest()\n+\n+\treturn hash2_o\n+\n+def calc_hash_str(blk_hdr):\n+\thash = calc_hdr_hash(blk_hdr)\n+\thash = bufreverse(hash)\n+\thash = wordreverse(hash)\n+\thash_str = hash.encode('hex')\n+\treturn hash_str\n+\n+def get_blk_dt(blk_hdr):\n+\tmembers = struct.unpack(\"<I\", blk_hdr[68:68+4])\n+\tnTime = members[0]\n+\tdt = datetime.datetime.fromtimestamp(nTime)\n+\tdt_ym = datetime.datetime(dt.year, dt.month, 1)\n+\treturn (dt_ym, nTime)\n+\n+def get_block_hashes(settings):\n+\tblkindex = []\n+\tf = open(settings['hashlist'], \"r\")\n+\tfor line in f:\n+\t\tline = line.rstrip()\n+\t\tblkindex.append(line)\n+\n+\tprint(\"Read \" + str(len(blkindex)) + \" hashes\")\n+\n+\treturn blkindex\n+\n+def mkblockmap(blkindex):\n+\tblkmap = {}\n+\tfor height,hash in enumerate(blkindex):\n+\t\tblkmap[hash] = height\n+\treturn blkmap\n+\n+# Block header and extent on disk\n+BlockExtent = namedtuple('BlockExtent', ['fn', 'offset', 'inhdr', 'blkhdr', 'size'])\n+\n+class BlockDataCopier:\n+\tdef __init__(self, settings, blkindex, blkmap):\n+\t\tself.settings = settings\n+\t\tself.blkindex = blkindex\n+\t\tself.blkmap = blkmap\n+\n+\t\tself.inFn = 0\n+\t\tself.inF = None\n+\t\tself.outFn = 0\n+\t\tself.outsz = 0\n+\t\tself.outF = None\n+\t\tself.outFname = None\n+\t\tself.blkCountIn = 0\n+\t\tself.blkCountOut = 0\n+\n+\t\tself.lastDate = datetime.datetime(2000, 1, 1)\n+\t\tself.highTS = 1408893517 - 315360000\n+\t\tself.timestampSplit = False\n+\t\tself.fileOutput = True\n+\t\tself.setFileTime = False\n+\t\tself.maxOutSz = settings['max_out_sz']\n+\t\tif 'output' in settings:\n+\t\t\tself.fileOutput = False\n+\t\tif settings['file_timestamp'] != 0:\n+\t\t\tself.setFileTime = True\n+\t\tif settings['split_timestamp'] != 0:\n+\t\t\tself.timestampSplit = True\n+\t\t# Extents and cache for out-of-order blocks\n+\t\tself.blockExtents = {}\n+\t\tself.outOfOrderData = {}\n+\t\tself.outOfOrderSize = 0 # running total size for items in outOfOrderData\n+\n+\tdef writeBlock(self, inhdr, blk_hdr, rawblock):\n+\t\tblockSizeOnDisk = len(inhdr) + len(blk_hdr) + len(rawblock)\n+\t\tif not self.fileOutput and ((self.outsz + blockSizeOnDisk) > self.maxOutSz):\n+\t\t\tself.outF.close()\n+\t\t\tif self.setFileTime:\n+\t\t\t\tos.utime(outFname, (int(time.time()), highTS))\n+\t\t\tself.outF = None\n+\t\t\tself.outFname = None\n+\t\t\tself.outFn = self.outFn + 1\n+\t\t\tself.outsz = 0\n+\n+\t\t(blkDate, blkTS) = get_blk_dt(blk_hdr)\n+\t\tif self.timestampSplit and (blkDate > self.lastDate):\n+\t\t\tprint(\"New month \" + blkDate.strftime(\"%Y-%m\") + \" @ \" + hash_str)\n+\t\t\tlastDate = blkDate\n+\t\t\tif outF:\n+\t\t\t\toutF.close()\n+\t\t\t\tif setFileTime:\n+\t\t\t\t\tos.utime(outFname, (int(time.time()), highTS))\n+\t\t\t\tself.outF = None\n+\t\t\t\tself.outFname = None\n+\t\t\t\tself.outFn = self.outFn + 1\n+\t\t\t\tself.outsz = 0\n+\n+\t\tif not self.outF:\n+\t\t\tif self.fileOutput:\n+\t\t\t\toutFname = self.settings['output_file']\n+\t\t\telse:\n+\t\t\t\toutFname = os.path.join(self.settings['output'], \"blk%05d.dat\" % self.outFn)\n+\t\t\tprint(\"Output file \" + outFname)\n+\t\t\tself.outF = open(outFname, \"wb\")\n+\n+\t\tself.outF.write(inhdr)\n+\t\tself.outF.write(blk_hdr)\n+\t\tself.outF.write(rawblock)\n+\t\tself.outsz = self.outsz + len(inhdr) + len(blk_hdr) + len(rawblock)\n+\n+\t\tself.blkCountOut = self.blkCountOut + 1\n+\t\tif blkTS > self.highTS:\n+\t\t\tself.highTS = blkTS\n+\n+\t\tif (self.blkCountOut % 1000) == 0:\n+\t\t\tprint('%i blocks scanned, %i blocks written (of %i, %.1f%% complete)' % \n+\t\t\t\t\t(self.blkCountIn, self.blkCountOut, len(self.blkindex), 100.0 * self.blkCountOut / len(self.blkindex)))\n+\n+\tdef inFileName(self, fn):\n+\t\treturn os.path.join(self.settings['input'], \"blk%05d.dat\" % fn)\n+\n+\tdef fetchBlock(self, extent):\n+\t\t'''Fetch block contents from disk given extents'''\n+\t\twith open(self.inFileName(extent.fn), \"rb\") as f:\n+\t\t\tf.seek(extent.offset)\n+\t\t\treturn f.read(extent.size)\n+\n+\tdef copyOneBlock(self):\n+\t\t'''Find the next block to be written in the input, and copy it to the output.'''\n+\t\textent = self.blockExtents.pop(self.blkCountOut)\n+\t\tif self.blkCountOut in self.outOfOrderData:\n+\t\t\t# If the data is cached, use it from memory and remove from the cache\n+\t\t\trawblock = self.outOfOrderData.pop(self.blkCountOut)\n+\t\t\tself.outOfOrderSize -= len(rawblock)\n+\t\telse: # Otherwise look up data on disk\n+\t\t\trawblock = self.fetchBlock(extent)\n+\n+\t\tself.writeBlock(extent.inhdr, extent.blkhdr, rawblock)\n+\n+\tdef run(self):\n+\t\twhile self.blkCountOut < len(self.blkindex):\n+\t\t\tif not self.inF:\n+\t\t\t\tfname = self.inFileName(self.inFn)\n+\t\t\t\tprint(\"Input file \" + fname)\n+\t\t\t\ttry:\n+\t\t\t\t\tself.inF = open(fname, \"rb\")\n+\t\t\t\texcept IOError:\n+\t\t\t\t\tprint(\"Premature end of block data\")\n+\t\t\t\t\treturn\n+\n+\t\t\tinhdr = self.inF.read(8)\n+\t\t\tif (not inhdr or (inhdr[0] == \"\\0\")):\n+\t\t\t\tself.inF.close()\n+\t\t\t\tself.inF = None\n+\t\t\t\tself.inFn = self.inFn + 1\n+\t\t\t\tcontinue\n+\n+\t\t\tinMagic = inhdr[:4]\n+\t\t\tif (inMagic != self.settings['netmagic']):\n+\t\t\t\tprint(\"Invalid magic: \" + inMagic.encode('hex'))\n+\t\t\t\treturn\n+\t\t\tinLenLE = inhdr[4:]\n+\t\t\tsu = struct.unpack(\"<I\", inLenLE)\n+\t\t\tinLen = su[0] - 80 # length without header\n+\t\t\tblk_hdr = self.inF.read(80)\n+\t\t\tinExtent = BlockExtent(self.inFn, self.inF.tell(), inhdr, blk_hdr, inLen)\n+\n+\t\t\thash_str = calc_hash_str(blk_hdr)\n+\t\t\tif not hash_str in blkmap:\n+\t\t\t\tprint(\"Skipping unknown block \" + hash_str)\n+\t\t\t\tself.inF.seek(inLen, os.SEEK_CUR)\n+\t\t\t\tcontinue\n+\n+\t\t\tblkHeight = self.blkmap[hash_str]\n+\t\t\tself.blkCountIn += 1\n+\n+\t\t\tif self.blkCountOut == blkHeight:\n+\t\t\t\t# If in-order block, just copy\n+\t\t\t\trawblock = self.inF.read(inLen)\n+\t\t\t\tself.writeBlock(inhdr, blk_hdr, rawblock)\n+\n+\t\t\t\t# See if we can catch up to prior out-of-order blocks\n+\t\t\t\twhile self.blkCountOut in self.blockExtents:\n+\t\t\t\t\tself.copyOneBlock()\n+\n+\t\t\telse: # If out-of-order, skip over block data for now\n+\t\t\t\tself.blockExtents[blkHeight] = inExtent\n+\t\t\t\tif self.outOfOrderSize < self.settings['out_of_order_cache_sz']:\n+\t\t\t\t\t# If there is space in the cache, read the data\n+\t\t\t\t\t# Reading the data in file sequence instead of seeking and fetching it later is preferred,\n+\t\t\t\t\t# but we don't want to fill up memory\n+\t\t\t\t\tself.outOfOrderData[blkHeight] = self.inF.read(inLen)\n+\t\t\t\t\tself.outOfOrderSize += inLen\n+\t\t\t\telse: # If no space in cache, seek forward\n+\t\t\t\t\tself.inF.seek(inLen, os.SEEK_CUR)\n+\n+\t\tprint(\"Done (%i blocks written)\" % (self.blkCountOut))\n+\n+if __name__ == '__main__':\n+\tif len(sys.argv) != 2:\n+\t\tprint(\"Usage: linearize-data.py CONFIG-FILE\")\n+\t\tsys.exit(1)\n+\n+\tf = open(sys.argv[1])\n+\tfor line in f:\n+\t\t# skip comment lines\n+\t\tm = re.search('^\\s*#', line)\n+\t\tif m:\n+\t\t\tcontinue\n+\n+\t\t# parse key=value lines\n+\t\tm = re.search('^(\\w+)\\s*=\\s*(\\S.*)$', line)\n+\t\tif m is None:\n+\t\t\tcontinue\n+\t\tsettings[m.group(1)] = m.group(2)\n+\tf.close()\n+\n+\tif 'netmagic' not in settings:\n+\t\tsettings['netmagic'] = 'f9beb4d9'\n+\tif 'genesis' not in settings:\n+\t\tsettings['genesis'] = '000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f'\n+\tif 'input' not in settings:\n+\t\tsettings['input'] = 'input'\n+\tif 'hashlist' not in settings:\n+\t\tsettings['hashlist'] = 'hashlist.txt'\n+\tif 'file_timestamp' not in settings:\n+\t\tsettings['file_timestamp'] = 0\n+\tif 'split_timestamp' not in settings:\n+\t\tsettings['split_timestamp'] = 0\n+\tif 'max_out_sz' not in settings:\n+\t\tsettings['max_out_sz'] = 1000L * 1000 * 1000\n+\tif 'out_of_order_cache_sz' not in settings:\n+\t\tsettings['out_of_order_cache_sz'] = 100 * 1000 * 1000\n+\n+\tsettings['max_out_sz'] = long(settings['max_out_sz'])\n+\tsettings['split_timestamp'] = int(settings['split_timestamp'])\n+\tsettings['file_timestamp'] = int(settings['file_timestamp'])\n+\tsettings['netmagic'] = settings['netmagic'].decode('hex')\n+\tsettings['out_of_order_cache_sz'] = int(settings['out_of_order_cache_sz'])\n+\n+\tif 'output_file' not in settings and 'output' not in settings:\n+\t\tprint(\"Missing output file / directory\")\n+\t\tsys.exit(1)\n+\n+\tblkindex = get_block_hashes(settings)\n+\tblkmap = mkblockmap(blkindex)\n+\n+\tif not settings['genesis'] in blkmap:\n+\t\tprint(\"Genesis block not found in hashlist\")\n+\telse:\n+\t\tBlockDataCopier(settings, blkindex, blkmap).run()\n+\n+"
      },
      {
        "sha": "854cf1f9eeb3d70e818fea418ffca9620366dde4",
        "filename": "contrib/linearize/linearize-hashes.py",
        "status": "added",
        "additions": 113,
        "deletions": 0,
        "changes": 113,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/linearize/linearize-hashes.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/linearize/linearize-hashes.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/linearize-hashes.py?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,113 @@\n+#!/usr/bin/python\n+#\n+# linearize-hashes.py:  List blocks in a linear, no-fork version of the chain.\n+#\n+# Copyright (c) 2013-2014 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#\n+\n+from __future__ import print_function\n+import json\n+import struct\n+import re\n+import base64\n+import httplib\n+import sys\n+\n+settings = {}\n+\n+class BitcoinRPC:\n+\tdef __init__(self, host, port, username, password):\n+\t\tauthpair = \"%s:%s\" % (username, password)\n+\t\tself.authhdr = \"Basic %s\" % (base64.b64encode(authpair))\n+\t\tself.conn = httplib.HTTPConnection(host, port, False, 30)\n+\n+\tdef execute(self, obj):\n+\t\tself.conn.request('POST', '/', json.dumps(obj),\n+\t\t\t{ 'Authorization' : self.authhdr,\n+\t\t\t  'Content-type' : 'application/json' })\n+\n+\t\tresp = self.conn.getresponse()\n+\t\tif resp is None:\n+\t\t\tprint(\"JSON-RPC: no response\", file=sys.stderr)\n+\t\t\treturn None\n+\n+\t\tbody = resp.read()\n+\t\tresp_obj = json.loads(body)\n+\t\treturn resp_obj\n+\n+\t@staticmethod\n+\tdef build_request(idx, method, params):\n+\t\tobj = { 'version' : '1.1',\n+\t\t\t'method' : method,\n+\t\t\t'id' : idx }\n+\t\tif params is None:\n+\t\t\tobj['params'] = []\n+\t\telse:\n+\t\t\tobj['params'] = params\n+\t\treturn obj\n+\n+\t@staticmethod\n+\tdef response_is_error(resp_obj):\n+\t\treturn 'error' in resp_obj and resp_obj['error'] is not None\n+\n+def get_block_hashes(settings, max_blocks_per_call=10000):\n+\trpc = BitcoinRPC(settings['host'], settings['port'],\n+\t\t\t settings['rpcuser'], settings['rpcpassword'])\n+\n+\theight = settings['min_height']\n+\twhile height < settings['max_height']+1:\n+\t\tnum_blocks = min(settings['max_height']+1-height, max_blocks_per_call)\n+\t\tbatch = []\n+\t\tfor x in range(num_blocks):\n+\t\t\tbatch.append(rpc.build_request(x, 'getblockhash', [height + x]))\n+\n+\t\treply = rpc.execute(batch)\n+\n+\t\tfor x,resp_obj in enumerate(reply):\n+\t\t\tif rpc.response_is_error(resp_obj):\n+\t\t\t\tprint('JSON-RPC: error at height', height+x, ': ', resp_obj['error'], file=sys.stderr)\n+\t\t\t\texit(1)\n+\t\t\tassert(resp_obj['id'] == x) # assume replies are in-sequence\n+\t\t\tprint(resp_obj['result'])\n+\n+\t\theight += num_blocks\n+\n+if __name__ == '__main__':\n+\tif len(sys.argv) != 2:\n+\t\tprint(\"Usage: linearize-hashes.py CONFIG-FILE\")\n+\t\tsys.exit(1)\n+\n+\tf = open(sys.argv[1])\n+\tfor line in f:\n+\t\t# skip comment lines\n+\t\tm = re.search('^\\s*#', line)\n+\t\tif m:\n+\t\t\tcontinue\n+\n+\t\t# parse key=value lines\n+\t\tm = re.search('^(\\w+)\\s*=\\s*(\\S.*)$', line)\n+\t\tif m is None:\n+\t\t\tcontinue\n+\t\tsettings[m.group(1)] = m.group(2)\n+\tf.close()\n+\n+\tif 'host' not in settings:\n+\t\tsettings['host'] = '127.0.0.1'\n+\tif 'port' not in settings:\n+\t\tsettings['port'] = 8332\n+\tif 'min_height' not in settings:\n+\t\tsettings['min_height'] = 0\n+\tif 'max_height' not in settings:\n+\t\tsettings['max_height'] = 313000\n+\tif 'rpcuser' not in settings or 'rpcpassword' not in settings:\n+\t\tprint(\"Missing username and/or password in cfg file\", file=stderr)\n+\t\tsys.exit(1)\n+\n+\tsettings['port'] = int(settings['port'])\n+\tsettings['min_height'] = int(settings['min_height'])\n+\tsettings['max_height'] = int(settings['max_height'])\n+\n+\tget_block_hashes(settings)\n+"
      },
      {
        "sha": "2d8509f83c1c30a3368ae8432d472a22ba340201",
        "filename": "contrib/linearize/linearize.py",
        "status": "removed",
        "additions": 0,
        "deletions": 129,
        "changes": 129,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d980f9b7d687a1e60eecf3691b592d9806a30f4a/contrib/linearize/linearize.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d980f9b7d687a1e60eecf3691b592d9806a30f4a/contrib/linearize/linearize.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/linearize.py?ref=d980f9b7d687a1e60eecf3691b592d9806a30f4a",
        "patch": "@@ -1,129 +0,0 @@\n-#!/usr/bin/python\n-#\n-# linearize.py:  Construct a linear, no-fork, best version of the blockchain.\n-#\n-#\n-# Copyright (c) 2013 The Bitcoin developers\n-# Distributed under the MIT/X11 software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-#\n-\n-import json\n-import struct\n-import re\n-import base64\n-import httplib\n-import sys\n-\n-ERR_SLEEP = 15\n-MAX_NONCE = 1000000L\n-\n-settings = {}\n-\n-class BitcoinRPC:\n-\tOBJID = 1\n-\n-\tdef __init__(self, host, port, username, password):\n-\t\tauthpair = \"%s:%s\" % (username, password)\n-\t\tself.authhdr = \"Basic %s\" % (base64.b64encode(authpair))\n-\t\tself.conn = httplib.HTTPConnection(host, port, False, 30)\n-\tdef rpc(self, method, params=None):\n-\t\tself.OBJID += 1\n-\t\tobj = { 'version' : '1.1',\n-\t\t\t'method' : method,\n-\t\t\t'id' : self.OBJID }\n-\t\tif params is None:\n-\t\t\tobj['params'] = []\n-\t\telse:\n-\t\t\tobj['params'] = params\n-\t\tself.conn.request('POST', '/', json.dumps(obj),\n-\t\t\t{ 'Authorization' : self.authhdr,\n-\t\t\t  'Content-type' : 'application/json' })\n-\n-\t\tresp = self.conn.getresponse()\n-\t\tif resp is None:\n-\t\t\tprint \"JSON-RPC: no response\"\n-\t\t\treturn None\n-\n-\t\tbody = resp.read()\n-\t\tresp_obj = json.loads(body)\n-\t\tif resp_obj is None:\n-\t\t\tprint \"JSON-RPC: cannot JSON-decode body\"\n-\t\t\treturn None\n-\t\tif 'error' in resp_obj and resp_obj['error'] != None:\n-\t\t\treturn resp_obj['error']\n-\t\tif 'result' not in resp_obj:\n-\t\t\tprint \"JSON-RPC: no result in object\"\n-\t\t\treturn None\n-\n-\t\treturn resp_obj['result']\n-\tdef getblock(self, hash, verbose=True):\n-\t\treturn self.rpc('getblock', [hash, verbose])\n-\tdef getblockhash(self, index):\n-\t\treturn self.rpc('getblockhash', [index])\n-\n-def getblock(rpc, settings, n):\n-\thash = rpc.getblockhash(n)\n-\thexdata = rpc.getblock(hash, False)\n-\tdata = hexdata.decode('hex')\n-\n-\treturn data\n-\n-def get_blocks(settings):\n-\trpc = BitcoinRPC(settings['host'], settings['port'],\n-\t\t\t settings['rpcuser'], settings['rpcpass'])\n-\n-\toutf = open(settings['output'], 'wb')\n-\n-\tfor height in xrange(settings['max_height']+1):\n-\t\tdata = getblock(rpc, settings, height)\n-\n-\t\touthdr = settings['netmagic']\n-\t\touthdr += struct.pack(\"<i\", len(data))\n-\n-\t\toutf.write(outhdr)\n-\t\toutf.write(data)\n-\n-\t\tif (height % 1000) == 0:\n-\t\t\tsys.stdout.write(\"Wrote block \" + str(height) + \"\\n\")\n-\n-if __name__ == '__main__':\n-\tif len(sys.argv) != 2:\n-\t\tprint \"Usage: linearize.py CONFIG-FILE\"\n-\t\tsys.exit(1)\n-\n-\tf = open(sys.argv[1])\n-\tfor line in f:\n-\t\t# skip comment lines\n-\t\tm = re.search('^\\s*#', line)\n-\t\tif m:\n-\t\t\tcontinue\n-\n-\t\t# parse key=value lines\n-\t\tm = re.search('^(\\w+)\\s*=\\s*(\\S.*)$', line)\n-\t\tif m is None:\n-\t\t\tcontinue\n-\t\tsettings[m.group(1)] = m.group(2)\n-\tf.close()\n-\n-\tif 'netmagic' not in settings:\n-\t\tsettings['netmagic'] = 'f9beb4d9'\n-\tif 'output' not in settings:\n-\t\tsettings['output'] = 'bootstrap.dat'\n-\tif 'host' not in settings:\n-\t\tsettings['host'] = '127.0.0.1'\n-\tif 'port' not in settings:\n-\t\tsettings['port'] = 8332\n-\tif 'max_height' not in settings:\n-\t\tsettings['max_height'] = 250000\n-\tif 'rpcuser' not in settings or 'rpcpass' not in settings:\n-\t\tprint \"Missing username and/or password in cfg file\"\n-\t\tsys.exit(1)\n-\n-\tsettings['netmagic'] = settings['netmagic'].decode('hex')\n-\tsettings['port'] = int(settings['port'])\n-\tsettings['max_height'] = int(settings['max_height'])\n-\n-\tget_blocks(settings)\n-\n-"
      },
      {
        "sha": "6163734e623bd3a21ac5e1ef83a42dd45febe746",
        "filename": "contrib/macdeploy/README.md",
        "status": "modified",
        "additions": 1,
        "deletions": 5,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/macdeploy/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/macdeploy/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/README.md?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -1,9 +1,5 @@\n ### MacDeploy ###\n \n-You will need the appscript package for the fancy disk image creation to work:\n-\n-\tsudo easy_install appscript\n-\n For Snow Leopard (which uses [Python 2.6](http://www.python.org/download/releases/2.6/)), you will need the param_parser package:\n \t\n \tsudo easy_install argparse\n@@ -15,5 +11,5 @@ This script should not be run manually, instead, after building as usual:\n During the process, the disk image window will pop up briefly where the fancy\n settings are applied. This is normal, please do not interfere.\n \n-When finished, it will produce `Bitcoin-Qt.dmg`.\n+When finished, it will produce `Bitcoin-Core.dmg`.\n "
      },
      {
        "sha": "fce12e380793b5ba9e893d7e1ed4ac75e69fd02d",
        "filename": "contrib/macdeploy/background.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d980f9b7d687a1e60eecf3691b592d9806a30f4a/contrib/macdeploy/background.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d980f9b7d687a1e60eecf3691b592d9806a30f4a/contrib/macdeploy/background.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/background.png?ref=d980f9b7d687a1e60eecf3691b592d9806a30f4a"
      },
      {
        "sha": "5889676f8e3d805568b63d9702eced2376ca8f7e",
        "filename": "contrib/macdeploy/background.psd",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d980f9b7d687a1e60eecf3691b592d9806a30f4a/contrib/macdeploy/background.psd",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d980f9b7d687a1e60eecf3691b592d9806a30f4a/contrib/macdeploy/background.psd",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/background.psd?ref=d980f9b7d687a1e60eecf3691b592d9806a30f4a"
      },
      {
        "sha": "9c330af45142e011e78b4b86874ac4b3457ed457",
        "filename": "contrib/macdeploy/background.svg",
        "status": "added",
        "additions": 34,
        "deletions": 0,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/macdeploy/background.svg",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/macdeploy/background.svg",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/background.svg?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,34 @@\n+<?xml version=\"1.0\" standalone=\"no\"?>\n+<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 20010904//EN\"\n+ \"http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd\">\n+<svg version=\"1.0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1000pt\" height=\"640pt\" viewBox=\"0 0 1000 640\" preserveAspectRatio=\"xMidYMid meet\">\n+\t<!-- kate: space-indent off;\n+\tCopyright (c) 2015 The Bitcoin Core developers\n+\tDistributed under the MIT software license, see the accompanying\n+\tfile COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\t-->\n+\t<style type=\"text/css\"><![CDATA[\n+\t\ttext {\n+\t\t\tfont-family: \"Tuffy\";\n+\t\t\tfont-size: 86px;\n+\t\t\tfill: gray;\n+\t\t\ttext-anchor: middle;\n+\t\t}\n+\t]]></style>\n+\t<defs>\n+\t\t<linearGradient id=\"gradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n+\t\t\t<stop offset=\"0%\" style=\"stop-color:rgb(239,239,239);stop-opacity:1\" />\n+\t\t\t<stop offset=\"33%\" style=\"stop-color:rgb(239,239,239);stop-opacity:1\" />\n+\t\t\t<stop offset=\"80%\" style=\"stop-color:rgb(205,205,205);stop-opacity:1\" />\n+\t\t\t<stop offset=\"100%\" style=\"stop-color:rgb(204,204,204);stop-opacity:1\" />\n+\t\t</linearGradient>\n+\t</defs>\n+\t<rect width=\"1000\" height=\"640\" style=\"fill:url(#gradient);stroke-width:0\" />\n+\t<g transform=\"translate(500,0) scale(0.9, 1)\">\n+\t\t<text x=\"0\" y=\"114\">PACKAGE_NAME</text>\n+\t</g>\n+\t<g transform=\"translate(0.000000,640.000000) scale(0.100000,-0.100000)\"\n+\tfill=\"#000000\" stroke=\"none\">\n+\t\t<path d=\"M4995 3705 c-24 -23 -25 -29 -25 -165 l0 -140 -306 0 -306 0 -29 -29 c-29 -29 -29 -31 -29 -141 0 -110 0 -112 29 -141 l29 -29 306 0 306 0 0 -140 c0 -136 1 -142 25 -165 16 -17 35 -25 57 -25 29 0 72 32 306 226 180 149 274 233 278 250 13 53 -2 70 -278 299 -235 194 -277 225 -306 225 -22 0 -41 -8 -57 -25z\" fixlter=\"url(#glow)\"/>\n+\t</g>\n+</svg>"
      },
      {
        "sha": "03e2325fc0c3cd890c0e22091447d9463c5f3856",
        "filename": "contrib/macdeploy/custom_dsstore.py",
        "status": "added",
        "additions": 60,
        "deletions": 0,
        "changes": 60,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/macdeploy/custom_dsstore.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/macdeploy/custom_dsstore.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/custom_dsstore.py?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,60 @@\n+#!/usr/bin/env python\n+# Copyright (c) 2013-2015 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+from __future__ import division,print_function,unicode_literals\n+import biplist\n+from ds_store import DSStore\n+from mac_alias import Alias\n+import sys\n+\n+output_file = sys.argv[1]\n+package_name_ns = sys.argv[2]\n+\n+ds = DSStore.open(output_file, 'w+')\n+ds['.']['bwsp'] = {\n+    'ShowStatusBar': False,\n+    'WindowBounds': b'{{300, 280}, {500, 343}}',\n+    'ContainerShowSidebar': False,\n+    'SidebarWidth': 0,\n+    'ShowTabView': False,\n+    'PreviewPaneVisibility': False,\n+    'ShowToolbar': False,\n+    'ShowSidebar': False,\n+    'ShowPathbar': True\n+}\n+\n+icvp = {\n+    'gridOffsetX': 0.0,\n+    'textSize': 12.0,\n+    'viewOptionsVersion': 1,\n+    'backgroundImageAlias': b'\\x00\\x00\\x00\\x00\\x02\\x1e\\x00\\x02\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xd1\\x94\\\\\\xb0H+\\x00\\x05\\x00\\x00\\x00\\x98\\x0fbackground.tiff\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x99\\xd19\\xb0\\xf8\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xff\\xff\\xff\\x00\\x00\\r\\x02\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0b.background\\x00\\x00\\x10\\x00\\x08\\x00\\x00\\xd1\\x94\\\\\\xb0\\x00\\x00\\x00\\x11\\x00\\x08\\x00\\x00\\xd19\\xb0\\xf8\\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x98\\x00\\x0e\\x00 \\x00\\x0f\\x00b\\x00a\\x00c\\x00k\\x00g\\x00r\\x00o\\x00u\\x00n\\x00d\\x00.\\x00t\\x00i\\x00f\\x00f\\x00\\x0f\\x00\\x02\\x00\\x00\\x00\\x12\\x00\\x1c/.background/background.tiff\\x00\\x14\\x01\\x06\\x00\\x00\\x00\\x00\\x01\\x06\\x00\\x02\\x00\\x00\\x0cMacintosh HD\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xce\\x97\\xab\\xc3H+\\x00\\x00\\x01\\x88[\\x88\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x02u\\xab\\x8d\\xd1\\x94\\\\\\xb0devrddsk\\xff\\xff\\xff\\xff\\x00\\x00\\t \\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x07bitcoin\\x00\\x00\\x10\\x00\\x08\\x00\\x00\\xce\\x97\\xab\\xc3\\x00\\x00\\x00\\x11\\x00\\x08\\x00\\x00\\xd1\\x94\\\\\\xb0\\x00\\x00\\x00\\x01\\x00\\x14\\x01\\x88[\\x88\\x00\\x16\\xa9\\t\\x00\\x08\\xfaR\\x00\\x08\\xfaQ\\x00\\x02d\\x8e\\x00\\x0e\\x00\\x02\\x00\\x00\\x00\\x0f\\x00\\x1a\\x00\\x0c\\x00M\\x00a\\x00c\\x00i\\x00n\\x00t\\x00o\\x00s\\x00h\\x00 \\x00H\\x00D\\x00\\x13\\x00\\x01/\\x00\\x00\\x15\\x00\\x02\\x00\\x14\\xff\\xff\\x00\\x00\\xff\\xff\\x00\\x00',\n+    'backgroundColorBlue': 1.0,\n+    'iconSize': 96.0,\n+    'backgroundColorGreen': 1.0,\n+    'arrangeBy': 'none',\n+    'showIconPreview': True,\n+    'gridSpacing': 100.0,\n+    'gridOffsetY': 0.0,\n+    'showItemInfo': False,\n+    'labelOnBottom': True,\n+    'backgroundType': 2,\n+    'backgroundColorRed': 1.0\n+}\n+alias = Alias.from_bytes(icvp['backgroundImageAlias'])\n+alias.volume.name = package_name_ns\n+alias.volume.posix_path = '/Volumes/' + package_name_ns\n+alias.volume.disk_image_alias.target.filename = package_name_ns + '.temp.dmg'\n+alias.volume.disk_image_alias.target.carbon_path = 'Macintosh HD:Users:\\x00bitcoinuser:\\x00Documents:\\x00bitcoin:\\x00bitcoin:\\x00' + package_name_ns + '.temp.dmg'\n+alias.volume.disk_image_alias.target.posix_path = 'Users/bitcoinuser/Documents/bitcoin/bitcoin/' + package_name_ns + '.temp.dmg'\n+alias.target.carbon_path = package_name_ns + ':.background:\\x00background.tiff'\n+icvp['backgroundImageAlias'] = biplist.Data(alias.to_bytes())\n+ds['.']['icvp'] = icvp\n+\n+ds['.']['vSrn'] = ('long', 1)\n+\n+ds['Applications']['Iloc'] = (370, 156)\n+ds['Bitcoin-Qt.app']['Iloc'] = (128, 156)\n+\n+ds.flush()\n+ds.close()"
      },
      {
        "sha": "781fe315edab5046fca0ce5dc59090cfe44760ae",
        "filename": "contrib/macdeploy/detached-sig-apply.sh",
        "status": "added",
        "additions": 52,
        "deletions": 0,
        "changes": 52,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/macdeploy/detached-sig-apply.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/macdeploy/detached-sig-apply.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/detached-sig-apply.sh?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,52 @@\n+#!/bin/sh\n+set -e\n+\n+UNSIGNED=\"$1\"\n+SIGNATURE=\"$2\"\n+ARCH=x86_64\n+ROOTDIR=dist\n+TEMPDIR=signed.temp\n+OUTDIR=signed-app\n+\n+if [ -z \"$UNSIGNED\" ]; then\n+  echo \"usage: $0 <unsigned app> <signature>\"\n+  exit 1\n+fi\n+\n+if [ -z \"$SIGNATURE\" ]; then\n+  echo \"usage: $0 <unsigned app> <signature>\"\n+  exit 1\n+fi\n+\n+rm -rf ${TEMPDIR} && mkdir -p ${TEMPDIR}\n+tar -C ${TEMPDIR} -xf ${UNSIGNED}\n+cp -rf \"${SIGNATURE}\"/* ${TEMPDIR}\n+\n+if [ -z \"${PAGESTUFF}\" ]; then\n+  PAGESTUFF=${TEMPDIR}/pagestuff\n+fi\n+\n+if [ -z \"${CODESIGN_ALLOCATE}\" ]; then\n+  CODESIGN_ALLOCATE=${TEMPDIR}/codesign_allocate\n+fi\n+\n+find ${TEMPDIR} -name \"*.sign\" | while read i; do\n+  SIZE=`stat -c %s \"${i}\"`\n+  TARGET_FILE=\"`echo \"${i}\" | sed 's/\\.sign$//'`\"\n+\n+  echo \"Allocating space for the signature of size ${SIZE} in ${TARGET_FILE}\"\n+  ${CODESIGN_ALLOCATE} -i \"${TARGET_FILE}\" -a ${ARCH} ${SIZE} -o \"${i}.tmp\"\n+\n+  OFFSET=`${PAGESTUFF} \"${i}.tmp\" -p | tail -2 | grep offset | sed 's/[^0-9]*//g'`\n+  if [ -z ${QUIET} ]; then\n+    echo \"Attaching signature at offset ${OFFSET}\"\n+  fi\n+\n+  dd if=\"$i\" of=\"${i}.tmp\" bs=1 seek=${OFFSET} count=${SIZE} 2>/dev/null\n+  mv \"${i}.tmp\" \"${TARGET_FILE}\"\n+  rm \"${i}\"\n+  echo \"Success.\"\n+done\n+mv ${TEMPDIR}/${ROOTDIR} ${OUTDIR}\n+rm -rf ${TEMPDIR}\n+echo \"Signed: ${OUTDIR}\""
      },
      {
        "sha": "89a2da32f7a1c9ea34bc4798dbe642c5f2901013",
        "filename": "contrib/macdeploy/detached-sig-create.sh",
        "status": "added",
        "additions": 47,
        "deletions": 0,
        "changes": 47,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/macdeploy/detached-sig-create.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/macdeploy/detached-sig-create.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/detached-sig-create.sh?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,47 @@\n+#!/bin/sh\n+set -e\n+\n+ROOTDIR=dist\n+BUNDLE=\"${ROOTDIR}/Bitcoin-Qt.app\"\n+CODESIGN=codesign\n+TEMPDIR=sign.temp\n+TEMPLIST=${TEMPDIR}/signatures.txt\n+OUT=signature.tar.gz\n+OUTROOT=osx\n+\n+if [ ! -n \"$1\" ]; then\n+  echo \"usage: $0 <codesign args>\"\n+  echo \"example: $0 -s MyIdentity\"\n+  exit 1\n+fi\n+\n+rm -rf ${TEMPDIR} ${TEMPLIST}\n+mkdir -p ${TEMPDIR}\n+\n+${CODESIGN} -f --file-list ${TEMPLIST} \"$@\" \"${BUNDLE}\"\n+\n+grep -v CodeResources < \"${TEMPLIST}\" | while read i; do\n+  TARGETFILE=\"${BUNDLE}/`echo \"${i}\" | sed \"s|.*${BUNDLE}/||\"`\"\n+  SIZE=`pagestuff \"$i\" -p | tail -2 | grep size | sed 's/[^0-9]*//g'`\n+  OFFSET=`pagestuff \"$i\" -p | tail -2 | grep offset | sed 's/[^0-9]*//g'`\n+  SIGNFILE=\"${TEMPDIR}/${OUTROOT}/${TARGETFILE}.sign\"\n+  DIRNAME=\"`dirname \"${SIGNFILE}\"`\"\n+  mkdir -p \"${DIRNAME}\"\n+  echo \"Adding detached signature for: ${TARGETFILE}. Size: ${SIZE}. Offset: ${OFFSET}\"\n+  dd if=\"$i\" of=\"${SIGNFILE}\" bs=1 skip=${OFFSET} count=${SIZE} 2>/dev/null\n+done\n+\n+grep CodeResources < \"${TEMPLIST}\" | while read i; do\n+  TARGETFILE=\"${BUNDLE}/`echo \"${i}\" | sed \"s|.*${BUNDLE}/||\"`\"\n+  RESOURCE=\"${TEMPDIR}/${OUTROOT}/${TARGETFILE}\"\n+  DIRNAME=\"`dirname \"${RESOURCE}\"`\"\n+  mkdir -p \"${DIRNAME}\"\n+  echo \"Adding resource for: \"${TARGETFILE}\"\"\n+  cp \"${i}\" \"${RESOURCE}\"\n+done\n+\n+rm ${TEMPLIST}\n+\n+tar -C \"${TEMPDIR}\" -czf \"${OUT}\" .\n+rm -rf \"${TEMPDIR}\"\n+echo \"Created ${OUT}\""
      },
      {
        "sha": "ef277a7f14ad66ecdb8597a865a54b9506fd0ff9",
        "filename": "contrib/macdeploy/fancy.plist",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/macdeploy/fancy.plist",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/macdeploy/fancy.plist",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/fancy.plist?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -10,7 +10,7 @@\n \t\t<integer>620</integer>\n \t</array>\n \t<key>background_picture</key>\n-\t<string>background.png</string>\n+\t<string>background.tiff</string>\n \t<key>icon_size</key>\n \t<integer>96</integer>\n \t<key>applications_symlink</key>"
      },
      {
        "sha": "f8201e72c649dd6f2f111ed136436c3c5d770762",
        "filename": "contrib/macdeploy/macdeployqtplus",
        "status": "modified",
        "additions": 171,
        "deletions": 105,
        "changes": 276,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/macdeploy/macdeployqtplus",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/macdeploy/macdeployqtplus",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/macdeployqtplus?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python\n-\n+from __future__ import division, print_function, unicode_literals\n #\n # Copyright (C) 2011  Patrick \"p2k\" Schneider <me@p2k-network.org>\n #\n@@ -17,9 +17,8 @@\n # along with this program.  If not, see <http://www.gnu.org/licenses/>.\n #\n \n-import subprocess, sys, re, os, shutil, stat, os.path\n+import subprocess, sys, re, os, shutil, stat, os.path, time\n from string import Template\n-from time import sleep\n from argparse import ArgumentParser\n \n # This is ported from the original macdeployqt with modifications\n@@ -38,7 +37,10 @@ class FrameworkInfo(object):\n         self.sourceFilePath = \"\"\n         self.destinationDirectory = \"\"\n         self.sourceResourcesDirectory = \"\"\n+        self.sourceVersionContentsDirectory = \"\"\n+        self.sourceContentsDirectory = \"\"\n         self.destinationResourcesDirectory = \"\"\n+        self.destinationVersionContentsDirectory = \"\"\n     \n     def __eq__(self, other):\n         if self.__class__ == other.__class__:\n@@ -142,14 +144,18 @@ class FrameworkInfo(object):\n             info.destinationDirectory = os.path.join(cls.bundleFrameworkDirectory, info.frameworkName, info.binaryDirectory)\n             \n             info.sourceResourcesDirectory = os.path.join(info.frameworkPath, \"Resources\")\n+            info.sourceContentsDirectory = os.path.join(info.frameworkPath, \"Contents\")\n+            info.sourceVersionContentsDirectory = os.path.join(info.frameworkPath, \"Versions\", info.version, \"Contents\")\n             info.destinationResourcesDirectory = os.path.join(cls.bundleFrameworkDirectory, info.frameworkName, \"Resources\")\n+            info.destinationContentsDirectory = os.path.join(cls.bundleFrameworkDirectory, info.frameworkName, \"Contents\")\n+            info.destinationVersionContentsDirectory = os.path.join(cls.bundleFrameworkDirectory, info.frameworkName, \"Versions\", info.version, \"Contents\")\n         \n         return info\n \n class ApplicationBundleInfo(object):\n     def __init__(self, path):\n         self.path = path\n-        appName = os.path.splitext(os.path.basename(path))[0]\n+        appName = \"Bitcoin-Qt\"\n         self.binaryPath = os.path.join(path, \"Contents\", \"MacOS\", appName)\n         if not os.path.exists(self.binaryPath):\n             raise RuntimeError(\"Could not find bundle binary for \" + path)\n@@ -195,54 +201,58 @@ class DeploymentInfo(object):\n \n def getFrameworks(binaryPath, verbose):\n     if verbose >= 3:\n-        print \"Inspecting with otool: \" + binaryPath\n-    otool = subprocess.Popen([\"otool\", \"-L\", binaryPath], stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n+        print(\"Inspecting with otool: \" + binaryPath)\n+    otoolbin=os.getenv(\"OTOOL\", \"otool\")\n+    otool = subprocess.Popen([otoolbin, \"-L\", binaryPath], stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n     o_stdout, o_stderr = otool.communicate()\n     if otool.returncode != 0:\n         if verbose >= 1:\n             sys.stderr.write(o_stderr)\n             sys.stderr.flush()\n             raise RuntimeError(\"otool failed with return code %d\" % otool.returncode)\n-    \n-    otoolLines = o_stdout.split(\"\\n\")\n+\n+    otoolLines = o_stdout.decode().split(\"\\n\")\n     otoolLines.pop(0) # First line is the inspected binary\n     if \".framework\" in binaryPath or binaryPath.endswith(\".dylib\"):\n         otoolLines.pop(0) # Frameworks and dylibs list themselves as a dependency.\n     \n     libraries = []\n     for line in otoolLines:\n+        line = line.replace(\"@loader_path\", os.path.dirname(binaryPath))\n         info = FrameworkInfo.fromOtoolLibraryLine(line.strip())\n         if info is not None:\n             if verbose >= 3:\n-                print \"Found framework:\"\n-                print info\n+                print(\"Found framework:\")\n+                print(info)\n             libraries.append(info)\n     \n     return libraries\n \n def runInstallNameTool(action, *args):\n-    subprocess.check_call([\"install_name_tool\", \"-\"+action] + list(args))\n+    installnametoolbin=os.getenv(\"INSTALLNAMETOOL\", \"install_name_tool\")\n+    subprocess.check_call([installnametoolbin, \"-\"+action] + list(args))\n \n def changeInstallName(oldName, newName, binaryPath, verbose):\n     if verbose >= 3:\n-        print \"Using install_name_tool:\"\n-        print \" in\", binaryPath\n-        print \" change reference\", oldName\n-        print \" to\", newName\n+        print(\"Using install_name_tool:\")\n+        print(\" in\", binaryPath)\n+        print(\" change reference\", oldName)\n+        print(\" to\", newName)\n     runInstallNameTool(\"change\", oldName, newName, binaryPath)\n \n def changeIdentification(id, binaryPath, verbose):\n     if verbose >= 3:\n-        print \"Using install_name_tool:\"\n-        print \" change identification in\", binaryPath\n-        print \" to\", id\n+        print(\"Using install_name_tool:\")\n+        print(\" change identification in\", binaryPath)\n+        print(\" to\", id)\n     runInstallNameTool(\"id\", id, binaryPath)\n \n def runStrip(binaryPath, verbose):\n+    stripbin=os.getenv(\"STRIP\", \"strip\")\n     if verbose >= 3:\n-        print \"Using strip:\"\n-        print \" stripped\", binaryPath\n-    subprocess.check_call([\"strip\", \"-x\", binaryPath])\n+        print(\"Using strip:\")\n+        print(\" stripped\", binaryPath)\n+    subprocess.check_call([stripbin, \"-x\", binaryPath])\n \n def copyFramework(framework, path, verbose):\n     if framework.sourceFilePath.startswith(\"Qt\"):\n@@ -264,29 +274,46 @@ def copyFramework(framework, path, verbose):\n     \n     shutil.copy2(fromPath, toPath)\n     if verbose >= 3:\n-        print \"Copied:\", fromPath\n-        print \" to:\", toPath\n+        print(\"Copied:\", fromPath)\n+        print(\" to:\", toPath)\n \n     permissions = os.stat(toPath)\n     if not permissions.st_mode & stat.S_IWRITE:\n       os.chmod(toPath, permissions.st_mode | stat.S_IWRITE)\n \n     if not framework.isDylib(): # Copy resources for real frameworks\n+\n+        linkfrom = os.path.join(path, \"Contents\",\"Frameworks\", framework.frameworkName, \"Versions\", \"Current\")\n+        linkto = framework.version\n+        if not os.path.exists(linkfrom):\n+            os.symlink(linkto, linkfrom)\n+            if verbose >= 2:\n+                print(\"Linked:\", linkfrom, \"->\", linkto)\n         fromResourcesDir = framework.sourceResourcesDirectory\n         if os.path.exists(fromResourcesDir):\n             toResourcesDir = os.path.join(path, framework.destinationResourcesDirectory)\n-            shutil.copytree(fromResourcesDir, toResourcesDir)\n+            shutil.copytree(fromResourcesDir, toResourcesDir, symlinks=True)\n             if verbose >= 3:\n-                print \"Copied resources:\", fromResourcesDir\n-                print \" to:\", toResourcesDir\n+                print(\"Copied resources:\", fromResourcesDir)\n+                print(\" to:\", toResourcesDir)\n+        fromContentsDir = framework.sourceVersionContentsDirectory\n+        if not os.path.exists(fromContentsDir):\n+            fromContentsDir = framework.sourceContentsDirectory\n+        if os.path.exists(fromContentsDir):\n+            toContentsDir = os.path.join(path, framework.destinationVersionContentsDirectory)\n+            shutil.copytree(fromContentsDir, toContentsDir, symlinks=True)\n+            contentslinkfrom = os.path.join(path, framework.destinationContentsDirectory)\n+            if verbose >= 3:\n+                print(\"Copied Contents:\", fromContentsDir)\n+                print(\" to:\", toContentsDir)\n     elif framework.frameworkName.startswith(\"libQtGui\"): # Copy qt_menu.nib (applies to non-framework layout)\n         qtMenuNibSourcePath = os.path.join(framework.frameworkDirectory, \"Resources\", \"qt_menu.nib\")\n         qtMenuNibDestinationPath = os.path.join(path, \"Contents\", \"Resources\", \"qt_menu.nib\")\n         if os.path.exists(qtMenuNibSourcePath) and not os.path.exists(qtMenuNibDestinationPath):\n-            shutil.copytree(qtMenuNibSourcePath, qtMenuNibDestinationPath)\n+            shutil.copytree(qtMenuNibSourcePath, qtMenuNibDestinationPath, symlinks=True)\n             if verbose >= 3:\n-                print \"Copied for libQtGui:\", qtMenuNibSourcePath\n-                print \" to:\", qtMenuNibDestinationPath\n+                print(\"Copied for libQtGui:\", qtMenuNibSourcePath)\n+                print(\" to:\", qtMenuNibDestinationPath)\n     \n     return toPath\n \n@@ -299,15 +326,15 @@ def deployFrameworks(frameworks, bundlePath, binaryPath, strip, verbose, deploym\n         deploymentInfo.deployedFrameworks.append(framework.frameworkName)\n         \n         if verbose >= 2:\n-            print \"Processing\", framework.frameworkName, \"...\"\n+            print(\"Processing\", framework.frameworkName, \"...\")\n         \n         # Get the Qt path from one of the Qt frameworks\n         if deploymentInfo.qtPath is None and framework.isQtFramework():\n             deploymentInfo.detectQtPath(framework.frameworkDirectory)\n         \n-        if framework.installName.startswith(\"@executable_path\"):\n+        if framework.installName.startswith(\"@executable_path\") or framework.installName.startswith(bundlePath):\n             if verbose >= 2:\n-                print framework.frameworkName, \"already deployed, skipping.\"\n+                print(framework.frameworkName, \"already deployed, skipping.\")\n             continue\n         \n         # install_name_tool the new id into the binary\n@@ -339,14 +366,16 @@ def deployFrameworks(frameworks, bundlePath, binaryPath, strip, verbose, deploym\n def deployFrameworksForAppBundle(applicationBundle, strip, verbose):\n     frameworks = getFrameworks(applicationBundle.binaryPath, verbose)\n     if len(frameworks) == 0 and verbose >= 1:\n-        print \"Warning: Could not find any external frameworks to deploy in %s.\" % (applicationBundle.path)\n+        print(\"Warning: Could not find any external frameworks to deploy in %s.\" % (applicationBundle.path))\n         return DeploymentInfo()\n     else:\n         return deployFrameworks(frameworks, applicationBundle.path, applicationBundle.binaryPath, strip, verbose)\n \n def deployPlugins(appBundleInfo, deploymentInfo, strip, verbose):\n     # Lookup available plugins, exclude unneeded\n     plugins = []\n+    if deploymentInfo.pluginPath is None:\n+        return\n     for dirpath, dirnames, filenames in os.walk(deploymentInfo.pluginPath):\n         pluginDirectory = os.path.relpath(dirpath, deploymentInfo.pluginPath)\n         if pluginDirectory == \"designer\":\n@@ -364,15 +393,31 @@ def deployPlugins(appBundleInfo, deploymentInfo, strip, verbose):\n             # Deploy the script plugins only if QtScript is in use\n             if not deploymentInfo.usesFramework(\"QtScript\"):\n                 continue\n-        elif pluginDirectory == \"qmltooling\":\n+        elif pluginDirectory == \"qmltooling\" or pluginDirectory == \"qml1tooling\":\n             # Deploy the qml plugins only if QtDeclarative is in use\n             if not deploymentInfo.usesFramework(\"QtDeclarative\"):\n                 continue\n         elif pluginDirectory == \"bearer\":\n             # Deploy the bearer plugins only if QtNetwork is in use\n             if not deploymentInfo.usesFramework(\"QtNetwork\"):\n                 continue\n-        \n+        elif pluginDirectory == \"position\":\n+            # Deploy the position plugins only if QtPositioning is in use\n+            if not deploymentInfo.usesFramework(\"QtPositioning\"):\n+                continue\n+        elif pluginDirectory == \"sensors\" or pluginDirectory == \"sensorgestures\":\n+            # Deploy the sensor plugins only if QtSensors is in use\n+            if not deploymentInfo.usesFramework(\"QtSensors\"):\n+                continue\n+        elif pluginDirectory == \"audio\" or pluginDirectory == \"playlistformats\":\n+            # Deploy the audio plugins only if QtMultimedia is in use\n+            if not deploymentInfo.usesFramework(\"QtMultimedia\"):\n+                continue\n+        elif pluginDirectory == \"mediaservice\":\n+            # Deploy the mediaservice plugins only if QtMultimediaWidgets is in use\n+            if not deploymentInfo.usesFramework(\"QtMultimediaWidgets\"):\n+                continue\n+\n         for pluginName in filenames:\n             pluginPath = os.path.join(pluginDirectory, pluginName)\n             if pluginName.endswith(\"_debug.dylib\"):\n@@ -390,12 +435,16 @@ def deployPlugins(appBundleInfo, deploymentInfo, strip, verbose):\n                 # Deploy the opengl graphicssystem plugin only if QtOpenGL is in use\n                 if not deploymentInfo.usesFramework(\"QtOpenGL\"):\n                     continue\n-            \n+            elif pluginPath == \"accessible/libqtaccessiblequick.dylib\":\n+                # Deploy the accessible qtquick plugin only if QtQuick is in use\n+                if not deploymentInfo.usesFramework(\"QtQuick\"):\n+                    continue\n+\n             plugins.append((pluginDirectory, pluginName))\n     \n     for pluginDirectory, pluginName in plugins:\n         if verbose >= 2:\n-            print \"Processing plugin\", os.path.join(pluginDirectory, pluginName), \"...\"\n+            print(\"Processing plugin\", os.path.join(pluginDirectory, pluginName), \"...\")\n         \n         sourcePath = os.path.join(deploymentInfo.pluginPath, pluginDirectory, pluginName)\n         destinationDirectory = os.path.join(appBundleInfo.pluginPath, pluginDirectory)\n@@ -405,8 +454,8 @@ def deployPlugins(appBundleInfo, deploymentInfo, strip, verbose):\n         destinationPath = os.path.join(destinationDirectory, pluginName)\n         shutil.copy2(sourcePath, destinationPath)\n         if verbose >= 3:\n-            print \"Copied:\", sourcePath\n-            print \" to:\", destinationPath\n+            print(\"Copied:\", sourcePath)\n+            print(\" to:\", destinationPath)\n         \n         if strip:\n             runStrip(destinationPath, verbose)\n@@ -421,8 +470,8 @@ def deployPlugins(appBundleInfo, deploymentInfo, strip, verbose):\n                 deployFrameworks([dependency], appBundleInfo.path, destinationPath, strip, verbose, deploymentInfo)\n \n qt_conf=\"\"\"[Paths]\n-translations=Resources\n-plugins=PlugIns\n+Translations=Resources\n+Plugins=PlugIns\n \"\"\"\n \n ap = ArgumentParser(description=\"\"\"Improved version of macdeployqt.\n@@ -444,7 +493,9 @@ ap.add_argument(\"-sign\", dest=\"sign\", action=\"store_true\", default=False, help=\"\n ap.add_argument(\"-dmg\", nargs=\"?\", const=\"\", metavar=\"basename\", help=\"create a .dmg disk image; if basename is not specified, a camel-cased version of the app name is used\")\n ap.add_argument(\"-fancy\", nargs=1, metavar=\"plist\", default=[], help=\"make a fancy looking disk image using the given plist file with instructions; requires -dmg to work\")\n ap.add_argument(\"-add-qt-tr\", nargs=1, metavar=\"languages\", default=[], help=\"add Qt translation files to the bundle's ressources; the language list must be separated with commas, not with whitespace\")\n+ap.add_argument(\"-translations-dir\", nargs=1, metavar=\"path\", default=None, help=\"Path to Qt's translation files\")\n ap.add_argument(\"-add-resources\", nargs=\"+\", metavar=\"path\", default=[], help=\"list of additional files or folders to be copied into the bundle's resources; must be the last argument\")\n+ap.add_argument(\"-volname\", nargs=1, metavar=\"volname\", default=[], help=\"custom volume name for dmg\")\n \n config = ap.parse_args()\n \n@@ -462,10 +513,19 @@ if not os.path.exists(app_bundle):\n app_bundle_name = os.path.splitext(os.path.basename(app_bundle))[0]\n \n # ------------------------------------------------\n+translations_dir = None\n+if config.translations_dir and config.translations_dir[0]:\n+    if os.path.exists(config.translations_dir[0]):\n+        translations_dir = config.translations_dir[0]\n+    else:\n+        if verbose >= 1:\n+            sys.stderr.write(\"Error: Could not find translation dir \\\"%s\\\"\\n\" % (translations_dir))\n+        sys.exit(1)\n+# ------------------------------------------------\n \n for p in config.add_resources:\n     if verbose >= 3:\n-        print \"Checking for \\\"%s\\\"...\" % p\n+        print(\"Checking for \\\"%s\\\"...\" % p)\n     if not os.path.exists(p):\n         if verbose >= 1:\n             sys.stderr.write(\"Error: Could not find additional resource file \\\"%s\\\"\\n\" % (p))\n@@ -475,27 +535,17 @@ for p in config.add_resources:\n \n if len(config.fancy) == 1:\n     if verbose >= 3:\n-        print \"Fancy: Importing plistlib...\"\n+        print(\"Fancy: Importing plistlib...\")\n     try:\n         import plistlib\n     except ImportError:\n         if verbose >= 1:\n             sys.stderr.write(\"Error: Could not import plistlib which is required for fancy disk images.\\n\")\n         sys.exit(1)\n     \n-    if verbose >= 3:\n-        print \"Fancy: Importing appscript...\"\n-    try:\n-        import appscript\n-    except ImportError:\n-        if verbose >= 1:\n-            sys.stderr.write(\"Error: Could not import appscript which is required for fancy disk images.\\n\")\n-            sys.stderr.write(\"Please install it e.g. with \\\"sudo easy_install appscript\\\".\\n\")\n-        sys.exit(1)\n-    \n     p = config.fancy[0]\n     if verbose >= 3:\n-        print \"Fancy: Loading \\\"%s\\\"...\" % p\n+        print(\"Fancy: Loading \\\"%s\\\"...\" % p)\n     if not os.path.exists(p):\n         if verbose >= 1:\n             sys.stderr.write(\"Error: Could not find fancy disk image plist at \\\"%s\\\"\\n\" % (p))\n@@ -509,23 +559,23 @@ if len(config.fancy) == 1:\n         sys.exit(1)\n     \n     try:\n-        assert not fancy.has_key(\"window_bounds\") or (isinstance(fancy[\"window_bounds\"], list) and len(fancy[\"window_bounds\"]) == 4)\n-        assert not fancy.has_key(\"background_picture\") or isinstance(fancy[\"background_picture\"], str)\n-        assert not fancy.has_key(\"icon_size\") or isinstance(fancy[\"icon_size\"], int)\n-        assert not fancy.has_key(\"applications_symlink\") or isinstance(fancy[\"applications_symlink\"], bool)\n-        if fancy.has_key(\"items_position\"):\n+        assert \"window_bounds\" not in fancy or (isinstance(fancy[\"window_bounds\"], list) and len(fancy[\"window_bounds\"]) == 4)\n+        assert \"background_picture\" not in fancy or isinstance(fancy[\"background_picture\"], str)\n+        assert \"icon_size\" not in fancy or isinstance(fancy[\"icon_size\"], int)\n+        assert \"applications_symlink\" not in fancy or isinstance(fancy[\"applications_symlink\"], bool)\n+        if \"items_position\" in fancy:\n             assert isinstance(fancy[\"items_position\"], dict)\n-            for key, value in fancy[\"items_position\"].iteritems():\n+            for key, value in fancy[\"items_position\"].items():\n                 assert isinstance(value, list) and len(value) == 2 and isinstance(value[0], int) and isinstance(value[1], int)\n     except:\n         if verbose >= 1:\n             sys.stderr.write(\"Error: Bad format of fancy disk image plist at \\\"%s\\\"\\n\" % (p))\n         sys.exit(1)\n     \n-    if fancy.has_key(\"background_picture\"):\n+    if \"background_picture\" in fancy:\n         bp = fancy[\"background_picture\"]\n         if verbose >= 3:\n-            print \"Fancy: Resolving background picture \\\"%s\\\"...\" % bp\n+            print(\"Fancy: Resolving background picture \\\"%s\\\"...\" % bp)\n         if not os.path.exists(bp):\n             bp = os.path.join(os.path.dirname(p), bp)\n             if not os.path.exists(bp):\n@@ -541,28 +591,35 @@ else:\n \n if os.path.exists(\"dist\"):\n     if verbose >= 2:\n-        print \"+ Removing old dist folder +\"\n+        print(\"+ Removing old dist folder +\")\n     \n     shutil.rmtree(\"dist\")\n \n # ------------------------------------------------\n \n-target = os.path.join(\"dist\", app_bundle)\n+if len(config.volname) == 1:\n+    volname = config.volname[0]\n+else:\n+    volname = app_bundle_name\n+\n+# ------------------------------------------------\n+\n+target = os.path.join(\"dist\", \"Bitcoin-Qt.app\")\n \n if verbose >= 2:\n-    print \"+ Copying source bundle +\"\n+    print(\"+ Copying source bundle +\")\n if verbose >= 3:\n-    print app_bundle, \"->\", target\n+    print(app_bundle, \"->\", target)\n \n os.mkdir(\"dist\")\n-shutil.copytree(app_bundle, target)\n+shutil.copytree(app_bundle, target, symlinks=True)\n \n applicationBundle = ApplicationBundleInfo(target)\n \n # ------------------------------------------------\n \n if verbose >= 2:\n-    print \"+ Deploying frameworks +\"\n+    print(\"+ Deploying frameworks +\")\n \n try:\n     deploymentInfo = deployFrameworksForAppBundle(applicationBundle, config.strip, verbose)\n@@ -575,32 +632,39 @@ try:\n except RuntimeError as e:\n     if verbose >= 1:\n         sys.stderr.write(\"Error: %s\\n\" % str(e))\n-    sys.exit(ret)\n+    sys.exit(1)\n \n # ------------------------------------------------\n \n if config.plugins:\n     if verbose >= 2:\n-        print \"+ Deploying plugins +\"\n+        print(\"+ Deploying plugins +\")\n     \n     try:\n         deployPlugins(applicationBundle, deploymentInfo, config.strip, verbose)\n     except RuntimeError as e:\n         if verbose >= 1:\n             sys.stderr.write(\"Error: %s\\n\" % str(e))\n-        sys.exit(ret)\n+        sys.exit(1)\n \n # ------------------------------------------------\n \n if len(config.add_qt_tr) == 0:\n     add_qt_tr = []\n else:\n-    qt_tr_dir = os.path.join(deploymentInfo.qtPath, \"translations\")\n+    if translations_dir is not None:\n+        qt_tr_dir = translations_dir\n+    else:\n+        if deploymentInfo.qtPath is not None:\n+            qt_tr_dir = os.path.join(deploymentInfo.qtPath, \"translations\")\n+        else:\n+            sys.stderr.write(\"Error: Could not find Qt translation path\\n\")\n+            sys.exit(1)\n     add_qt_tr = [\"qt_%s.qm\" % lng for lng in config.add_qt_tr[0].split(\",\")]\n     for lng_file in add_qt_tr:\n         p = os.path.join(qt_tr_dir, lng_file)\n         if verbose >= 3:\n-            print \"Checking for \\\"%s\\\"...\" % p\n+            print(\"Checking for \\\"%s\\\"...\" % p)\n         if not os.path.exists(p):\n             if verbose >= 1:\n                 sys.stderr.write(\"Error: Could not find Qt translation file \\\"%s\\\"\\n\" % (lng_file))\n@@ -609,43 +673,43 @@ else:\n # ------------------------------------------------\n \n if verbose >= 2:\n-    print \"+ Installing qt.conf +\"\n+    print(\"+ Installing qt.conf +\")\n \n f = open(os.path.join(applicationBundle.resourcesPath, \"qt.conf\"), \"wb\")\n-f.write(qt_conf)\n+f.write(qt_conf.encode())\n f.close()\n \n # ------------------------------------------------\n \n if len(add_qt_tr) > 0 and verbose >= 2:\n-    print \"+ Adding Qt translations +\"\n+    print(\"+ Adding Qt translations +\")\n \n for lng_file in add_qt_tr:\n     if verbose >= 3:\n-        print os.path.join(qt_tr_dir, lng_file), \"->\", os.path.join(applicationBundle.resourcesPath, lng_file)\n+        print(os.path.join(qt_tr_dir, lng_file), \"->\", os.path.join(applicationBundle.resourcesPath, lng_file))\n     shutil.copy2(os.path.join(qt_tr_dir, lng_file), os.path.join(applicationBundle.resourcesPath, lng_file))\n \n # ------------------------------------------------\n \n if len(config.add_resources) > 0 and verbose >= 2:\n-    print \"+ Adding additional resources +\"\n+    print(\"+ Adding additional resources +\")\n \n for p in config.add_resources:\n     t = os.path.join(applicationBundle.resourcesPath, os.path.basename(p))\n     if verbose >= 3:\n-        print p, \"->\", t\n+        print(p, \"->\", t)\n     if os.path.isdir(p):\n-        shutil.copytree(p, t)\n+        shutil.copytree(p, t, symlinks=True)\n     else:\n         shutil.copy2(p, t)\n \n # ------------------------------------------------\n \n if config.sign and 'CODESIGNARGS' not in os.environ:\n-    print \"You must set the CODESIGNARGS environment variable. Skipping signing.\"\n+    print(\"You must set the CODESIGNARGS environment variable. Skipping signing.\")\n elif config.sign:\n     if verbose >= 1:\n-        print \"Code-signing app bundle %s\"%(target,)\n+        print(\"Code-signing app bundle %s\"%(target,))\n     subprocess.check_call(\"codesign --force %s %s\"%(os.environ['CODESIGNARGS'], target), shell=True)\n \n # ------------------------------------------------\n@@ -670,7 +734,7 @@ if config.dmg is not None:\n \n     def runHDIUtil(verb, image_basename, **kwargs):\n         hdiutil_args = [\"hdiutil\", verb, image_basename + \".dmg\"]\n-        if kwargs.has_key(\"capture_stdout\"):\n+        if \"capture_stdout\" in kwargs:\n             del kwargs[\"capture_stdout\"]\n             run = subprocess.check_output\n         else:\n@@ -680,7 +744,7 @@ if config.dmg is not None:\n                 hdiutil_args.append(\"-verbose\")\n             run = subprocess.check_call\n         \n-        for key, value in kwargs.iteritems():\n+        for key, value in kwargs.items():\n             hdiutil_args.append(\"-\" + key)\n             if not value is True:\n                 hdiutil_args.append(str(value))\n@@ -689,9 +753,9 @@ if config.dmg is not None:\n     \n     if verbose >= 2:\n         if fancy is None:\n-            print \"+ Creating .dmg disk image +\"\n+            print(\"+ Creating .dmg disk image +\")\n         else:\n-            print \"+ Preparing .dmg disk image +\"\n+            print(\"+ Preparing .dmg disk image +\")\n     \n     if config.dmg != \"\":\n         dmg_name = config.dmg\n@@ -701,27 +765,27 @@ if config.dmg is not None:\n     \n     if fancy is None:\n         try:\n-            runHDIUtil(\"create\", dmg_name, srcfolder=\"dist\", format=\"UDBZ\", volname=app_bundle_name, ov=True)\n+            runHDIUtil(\"create\", dmg_name, srcfolder=\"dist\", format=\"UDBZ\", volname=volname, ov=True)\n         except subprocess.CalledProcessError as e:\n             sys.exit(e.returncode)\n     else:\n         if verbose >= 3:\n-            print \"Determining size of \\\"dist\\\"...\"\n+            print(\"Determining size of \\\"dist\\\"...\")\n         size = 0\n         for path, dirs, files in os.walk(\"dist\"):\n             for file in files:\n                 size += os.path.getsize(os.path.join(path, file))\n-        size += int(size * 0.1)\n+        size += int(size * 0.15)\n         \n         if verbose >= 3:\n-            print \"Creating temp image for modification...\"\n+            print(\"Creating temp image for modification...\")\n         try:\n-            runHDIUtil(\"create\", dmg_name + \".temp\", srcfolder=\"dist\", format=\"UDRW\", size=size, volname=app_bundle_name, ov=True)\n+            runHDIUtil(\"create\", dmg_name + \".temp\", srcfolder=\"dist\", format=\"UDRW\", size=size, volname=volname, ov=True)\n         except subprocess.CalledProcessError as e:\n             sys.exit(e.returncode)\n         \n         if verbose >= 3:\n-            print \"Attaching temp image...\"\n+            print(\"Attaching temp image...\")\n         try:\n             output = runHDIUtil(\"attach\", dmg_name + \".temp\", readwrite=True, noverify=True, noautoopen=True, capture_stdout=True)\n         except subprocess.CalledProcessError as e:\n@@ -732,12 +796,13 @@ if config.dmg is not None:\n         disk_name = m.group(1)\n         \n         if verbose >= 2:\n-            print \"+ Applying fancy settings +\"\n+            print(\"+ Applying fancy settings +\")\n         \n-        if fancy.has_key(\"background_picture\"):\n-            bg_path = os.path.join(disk_root, os.path.basename(fancy[\"background_picture\"]))\n+        if \"background_picture\" in fancy:\n+            bg_path = os.path.join(disk_root, \".background\", os.path.basename(fancy[\"background_picture\"]))\n+            os.mkdir(os.path.dirname(bg_path))\n             if verbose >= 3:\n-                print fancy[\"background_picture\"], \"->\", bg_path\n+                print(fancy[\"background_picture\"], \"->\", bg_path)\n             shutil.copy2(fancy[\"background_picture\"], bg_path)\n         else:\n             bg_path = None\n@@ -774,27 +839,27 @@ if config.dmg is not None:\n \n         itemscript = Template('set position of item \"${item}\" of container window to {${position}}')\n         items_positions = []\n-        if fancy.has_key(\"items_position\"):\n-            for name, position in fancy[\"items_position\"].iteritems():\n+        if \"items_position\" in fancy:\n+            for name, position in fancy[\"items_position\"].items():\n                 params = { \"item\" : name, \"position\" : \",\".join([str(p) for p in position]) }\n                 items_positions.append(itemscript.substitute(params))\n \n         params = {\n-            \"disk\" : \"Bitcoin-Qt\",\n+            \"disk\" : volname,\n             \"window_bounds\" : \"300,300,800,620\",\n             \"icon_size\" : \"96\",\n             \"background_commands\" : \"\",\n             \"items_positions\" : \"\\n                   \".join(items_positions)\n             }\n-        if fancy.has_key(\"window_bounds\"):\n+        if \"window_bounds\" in fancy:\n             params[\"window.bounds\"] = \",\".join([str(p) for p in fancy[\"window_bounds\"]])\n-        if fancy.has_key(\"icon_size\"):\n+        if \"icon_size\" in fancy:\n             params[\"icon_size\"] = str(fancy[\"icon_size\"])\n         if bg_path is not None:\n             # Set background file, then call SetFile to make it invisible.\n             # (note: making it invisible first makes set background picture fail)\n-            bgscript = Template(\"\"\"set background picture of theViewOptions to file \"$bgpic\"\n-                   do shell script \"SetFile -a V /Volumes/$disk/$bgpic\" \"\"\")\n+            bgscript = Template(\"\"\"set background picture of theViewOptions to file \".background:$bgpic\"\n+                   do shell script \"SetFile -a V /Volumes/$disk/.background/$bgpic\" \"\"\")\n             params[\"background_commands\"] = bgscript.substitute({\"bgpic\" : os.path.basename(bg_path), \"disk\" : params[\"disk\"]})\n \n         s = appscript.substitute(params)\n@@ -808,7 +873,8 @@ if config.dmg is not None:\n             print(\"Error running osascript.\")\n \n         if verbose >= 2:\n-            print \"+ Finalizing .dmg disk image +\"\n+            print(\"+ Finalizing .dmg disk image +\")\n+            time.sleep(5)\n         \n         try:\n             runHDIUtil(\"convert\", dmg_name + \".temp\", format=\"UDBZ\", o=dmg_name + \".dmg\", ov=True)\n@@ -820,6 +886,6 @@ if config.dmg is not None:\n # ------------------------------------------------\n \n if verbose >= 2:\n-    print \"+ Done +\"\n+    print(\"+ Done +\")\n \n sys.exit(0)"
      },
      {
        "sha": "3b20f2fdeac1f703108536933497c69d1ed4acef",
        "filename": "contrib/pyminer/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 8,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d980f9b7d687a1e60eecf3691b592d9806a30f4a/contrib/pyminer/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d980f9b7d687a1e60eecf3691b592d9806a30f4a/contrib/pyminer/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/pyminer/README.md?ref=d980f9b7d687a1e60eecf3691b592d9806a30f4a",
        "patch": "@@ -1,8 +0,0 @@\n-### PyMiner ###\n-\n-This is a 'getwork' CPU mining client for Bitcoin. It is pure-python, and therefore very, very slow.  The purpose is to provide a reference implementation of a miner, for study.\n-\n-### Other Resources ###\n-\n-- [BitcoinTalk Thread](https://bitcointalk.org/index.php?topic=3546.0)\n-- [Jgarzik Repo](https://github.com/jgarzik/pyminer)\n\\ No newline at end of file"
      },
      {
        "sha": "103e7c1372598d2a4d2ef758aa39dc70b52560fc",
        "filename": "contrib/pyminer/example-config.cfg",
        "status": "removed",
        "additions": 0,
        "deletions": 32,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d980f9b7d687a1e60eecf3691b592d9806a30f4a/contrib/pyminer/example-config.cfg",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d980f9b7d687a1e60eecf3691b592d9806a30f4a/contrib/pyminer/example-config.cfg",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/pyminer/example-config.cfg?ref=d980f9b7d687a1e60eecf3691b592d9806a30f4a",
        "patch": "@@ -1,32 +0,0 @@\n-\n-#\n-# RPC login details\n-#\n-host=127.0.0.1\n-port=8332\n-\n-rpcuser=myusername\n-rpcpass=mypass\n-\n-\n-#\n-# mining details\n-#\n-\n-threads=4\n-\n-# periodic rate for requesting new work, if solution not found\n-scantime=60\n-\n-\n-#\n-# misc.\n-#\n-\n-# not really used right now\n-logdir=/tmp/pyminer\n-\n-# set to 1, to enable hashmeter output\n-hashmeter=0\n-\n-"
      },
      {
        "sha": "0a2932d66e7c1307a218a8922d71cc66cb36f18d",
        "filename": "contrib/pyminer/pyminer.py",
        "status": "removed",
        "additions": 0,
        "deletions": 252,
        "changes": 252,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d980f9b7d687a1e60eecf3691b592d9806a30f4a/contrib/pyminer/pyminer.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d980f9b7d687a1e60eecf3691b592d9806a30f4a/contrib/pyminer/pyminer.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/pyminer/pyminer.py?ref=d980f9b7d687a1e60eecf3691b592d9806a30f4a",
        "patch": "@@ -1,252 +0,0 @@\n-#!/usr/bin/python\n-#\n-# Copyright (c) 2011 The Bitcoin developers\n-# Distributed under the MIT/X11 software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-#\n-\n-import time\n-import json\n-import pprint\n-import hashlib\n-import struct\n-import re\n-import base64\n-import httplib\n-import sys\n-from multiprocessing import Process\n-\n-ERR_SLEEP = 15\n-MAX_NONCE = 1000000L\n-\n-settings = {}\n-pp = pprint.PrettyPrinter(indent=4)\n-\n-class BitcoinRPC:\n-\tOBJID = 1\n-\n-\tdef __init__(self, host, port, username, password):\n-\t\tauthpair = \"%s:%s\" % (username, password)\n-\t\tself.authhdr = \"Basic %s\" % (base64.b64encode(authpair))\n-\t\tself.conn = httplib.HTTPConnection(host, port, False, 30)\n-\tdef rpc(self, method, params=None):\n-\t\tself.OBJID += 1\n-\t\tobj = { 'version' : '1.1',\n-\t\t\t'method' : method,\n-\t\t\t'id' : self.OBJID }\n-\t\tif params is None:\n-\t\t\tobj['params'] = []\n-\t\telse:\n-\t\t\tobj['params'] = params\n-\t\tself.conn.request('POST', '/', json.dumps(obj),\n-\t\t\t{ 'Authorization' : self.authhdr,\n-\t\t\t  'Content-type' : 'application/json' })\n-\n-\t\tresp = self.conn.getresponse()\n-\t\tif resp is None:\n-\t\t\tprint \"JSON-RPC: no response\"\n-\t\t\treturn None\n-\n-\t\tbody = resp.read()\n-\t\tresp_obj = json.loads(body)\n-\t\tif resp_obj is None:\n-\t\t\tprint \"JSON-RPC: cannot JSON-decode body\"\n-\t\t\treturn None\n-\t\tif 'error' in resp_obj and resp_obj['error'] != None:\n-\t\t\treturn resp_obj['error']\n-\t\tif 'result' not in resp_obj:\n-\t\t\tprint \"JSON-RPC: no result in object\"\n-\t\t\treturn None\n-\n-\t\treturn resp_obj['result']\n-\tdef getblockcount(self):\n-\t\treturn self.rpc('getblockcount')\n-\tdef getwork(self, data=None):\n-\t\treturn self.rpc('getwork', data)\n-\n-def uint32(x):\n-\treturn x & 0xffffffffL\n-\n-def bytereverse(x):\n-\treturn uint32(( ((x) << 24) | (((x) << 8) & 0x00ff0000) |\n-\t\t\t(((x) >> 8) & 0x0000ff00) | ((x) >> 24) ))\n-\n-def bufreverse(in_buf):\n-\tout_words = []\n-\tfor i in range(0, len(in_buf), 4):\n-\t\tword = struct.unpack('@I', in_buf[i:i+4])[0]\n-\t\tout_words.append(struct.pack('@I', bytereverse(word)))\n-\treturn ''.join(out_words)\n-\n-def wordreverse(in_buf):\n-\tout_words = []\n-\tfor i in range(0, len(in_buf), 4):\n-\t\tout_words.append(in_buf[i:i+4])\n-\tout_words.reverse()\n-\treturn ''.join(out_words)\n-\n-class Miner:\n-\tdef __init__(self, id):\n-\t\tself.id = id\n-\t\tself.max_nonce = MAX_NONCE\n-\n-\tdef work(self, datastr, targetstr):\n-\t\t# decode work data hex string to binary\n-\t\tstatic_data = datastr.decode('hex')\n-\t\tstatic_data = bufreverse(static_data)\n-\n-\t\t# the first 76b of 80b do not change\n-\t\tblk_hdr = static_data[:76]\n-\n-\t\t# decode 256-bit target value\n-\t\ttargetbin = targetstr.decode('hex')\n-\t\ttargetbin = targetbin[::-1]\t# byte-swap and dword-swap\n-\t\ttargetbin_str = targetbin.encode('hex')\n-\t\ttarget = long(targetbin_str, 16)\n-\n-\t\t# pre-hash first 76b of block header\n-\t\tstatic_hash = hashlib.sha256()\n-\t\tstatic_hash.update(blk_hdr)\n-\n-\t\tfor nonce in xrange(self.max_nonce):\n-\n-\t\t\t# encode 32-bit nonce value\n-\t\t\tnonce_bin = struct.pack(\"<I\", nonce)\n-\n-\t\t\t# hash final 4b, the nonce value\n-\t\t\thash1_o = static_hash.copy()\n-\t\t\thash1_o.update(nonce_bin)\n-\t\t\thash1 = hash1_o.digest()\n-\n-\t\t\t# sha256 hash of sha256 hash\n-\t\t\thash_o = hashlib.sha256()\n-\t\t\thash_o.update(hash1)\n-\t\t\thash = hash_o.digest()\n-\n-\t\t\t# quick test for winning solution: high 32 bits zero?\n-\t\t\tif hash[-4:] != '\\0\\0\\0\\0':\n-\t\t\t\tcontinue\n-\n-\t\t\t# convert binary hash to 256-bit Python long\n-\t\t\thash = bufreverse(hash)\n-\t\t\thash = wordreverse(hash)\n-\n-\t\t\thash_str = hash.encode('hex')\n-\t\t\tl = long(hash_str, 16)\n-\n-\t\t\t# proof-of-work test:  hash < target\n-\t\t\tif l < target:\n-\t\t\t\tprint time.asctime(), \"PROOF-OF-WORK found: %064x\" % (l,)\n-\t\t\t\treturn (nonce + 1, nonce_bin)\n-\t\t\telse:\n-\t\t\t\tprint time.asctime(), \"PROOF-OF-WORK false positive %064x\" % (l,)\n-#\t\t\t\treturn (nonce + 1, nonce_bin)\n-\n-\t\treturn (nonce + 1, None)\n-\n-\tdef submit_work(self, rpc, original_data, nonce_bin):\n-\t\tnonce_bin = bufreverse(nonce_bin)\n-\t\tnonce = nonce_bin.encode('hex')\n-\t\tsolution = original_data[:152] + nonce + original_data[160:256]\n-\t\tparam_arr = [ solution ]\n-\t\tresult = rpc.getwork(param_arr)\n-\t\tprint time.asctime(), \"--> Upstream RPC result:\", result\n-\n-\tdef iterate(self, rpc):\n-\t\twork = rpc.getwork()\n-\t\tif work is None:\n-\t\t\ttime.sleep(ERR_SLEEP)\n-\t\t\treturn\n-\t\tif 'data' not in work or 'target' not in work:\n-\t\t\ttime.sleep(ERR_SLEEP)\n-\t\t\treturn\n-\n-\t\ttime_start = time.time()\n-\n-\t\t(hashes_done, nonce_bin) = self.work(work['data'],\n-\t\t\t\t\t\t     work['target'])\n-\n-\t\ttime_end = time.time()\n-\t\ttime_diff = time_end - time_start\n-\n-\t\tself.max_nonce = long(\n-\t\t\t(hashes_done * settings['scantime']) / time_diff)\n-\t\tif self.max_nonce > 0xfffffffaL:\n-\t\t\tself.max_nonce = 0xfffffffaL\n-\n-\t\tif settings['hashmeter']:\n-\t\t\tprint \"HashMeter(%d): %d hashes, %.2f Khash/sec\" % (\n-\t\t\t      self.id, hashes_done,\n-\t\t\t      (hashes_done / 1000.0) / time_diff)\n-\n-\t\tif nonce_bin is not None:\n-\t\t\tself.submit_work(rpc, work['data'], nonce_bin)\n-\n-\tdef loop(self):\n-\t\trpc = BitcoinRPC(settings['host'], settings['port'],\n-\t\t\t\t settings['rpcuser'], settings['rpcpass'])\n-\t\tif rpc is None:\n-\t\t\treturn\n-\n-\t\twhile True:\n-\t\t\tself.iterate(rpc)\n-\n-def miner_thread(id):\n-\tminer = Miner(id)\n-\tminer.loop()\n-\n-if __name__ == '__main__':\n-\tif len(sys.argv) != 2:\n-\t\tprint \"Usage: pyminer.py CONFIG-FILE\"\n-\t\tsys.exit(1)\n-\n-\tf = open(sys.argv[1])\n-\tfor line in f:\n-\t\t# skip comment lines\n-\t\tm = re.search('^\\s*#', line)\n-\t\tif m:\n-\t\t\tcontinue\n-\n-\t\t# parse key=value lines\n-\t\tm = re.search('^(\\w+)\\s*=\\s*(\\S.*)$', line)\n-\t\tif m is None:\n-\t\t\tcontinue\n-\t\tsettings[m.group(1)] = m.group(2)\n-\tf.close()\n-\n-\tif 'host' not in settings:\n-\t\tsettings['host'] = '127.0.0.1'\n-\tif 'port' not in settings:\n-\t\tsettings['port'] = 8332\n-\tif 'threads' not in settings:\n-\t\tsettings['threads'] = 1\n-\tif 'hashmeter' not in settings:\n-\t\tsettings['hashmeter'] = 0\n-\tif 'scantime' not in settings:\n-\t\tsettings['scantime'] = 30L\n-\tif 'rpcuser' not in settings or 'rpcpass' not in settings:\n-\t\tprint \"Missing username and/or password in cfg file\"\n-\t\tsys.exit(1)\n-\n-\tsettings['port'] = int(settings['port'])\n-\tsettings['threads'] = int(settings['threads'])\n-\tsettings['hashmeter'] = int(settings['hashmeter'])\n-\tsettings['scantime'] = long(settings['scantime'])\n-\n-\tthr_list = []\n-\tfor thr_id in range(settings['threads']):\n-\t\tp = Process(target=miner_thread, args=(thr_id,))\n-\t\tp.start()\n-\t\tthr_list.append(p)\n-\t\ttime.sleep(1)\t\t\t# stagger threads\n-\n-\tprint settings['threads'], \"mining threads started\"\n-\n-\tprint time.asctime(), \"Miner Starts - %s:%s\" % (settings['host'], settings['port'])\n-\ttry:\n-\t\tfor thr_proc in thr_list:\n-\t\t\tthr_proc.join()\n-\texcept KeyboardInterrupt:\n-\t\tpass\n-\tprint time.asctime(), \"Miner Stops - %s:%s\" % (settings['host'], settings['port'])\n-"
      },
      {
        "sha": "aecb3ba84f20d4575569fb1fc2e4eddb5018c645",
        "filename": "contrib/rpm/README.md",
        "status": "added",
        "additions": 185,
        "deletions": 0,
        "changes": 185,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/rpm/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/rpm/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/rpm/README.md?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,185 @@\n+RPM Spec File Notes\n+-------------------\n+\n+The RPM spec file provided here is for Bitcoin-Core 0.12.0 and builds on CentOS\n+7 with either the CentOS provided OpenSSL library or with LibreSSL as packaged\n+at [LibreLAMP.com](https://librelamp.com/). It should hopefully not be too\n+difficult to port the RPM spec file to most RPM based Linux distributions.\n+\n+When porting the spec file to build for a particular distribution, there are\n+some important notes.\n+\n+## Sources\n+\n+It is considered good form for all sources to reference a URL where the source\n+can be downloaded.\n+\n+Sources 0-9 should be reserved for source code tarballs. `Source0` should\n+reference the release tarball available from https://bitcoin.org/bin/ and\n+`Source1` should reference the BerkeleyDB source.\n+\n+Sources 10-99 are for source files that are maintained in the\n+[Bitcoin git repository](https://github.com/bitcoin/bitcoin) but are not part of\n+the release tarball. Most of these will reside in the `contrib` sub-directory.\n+\n+Sources 10-19 should be reserved for miscellaneous configuration files.\n+Currently only `Source10` is used, for the example `bitcoin.conf` file.\n+\n+Sources 20-29 should be reserved for man pages. Currently only `Source20`\n+through `Source23` are used.\n+\n+Sources 30-39 should be reserved for SELinux related files. Currently only\n+`Source30` through `Source32` are used. Until those files are in a tagged\n+release, the full URL specified in the RPM spec file will not work. You can get\n+them from the git ropository where you retrieved this file.\n+\n+Sources 100+ are for files that are not source tarballs and are not maintained\n+in the bitcoin git repository. At present only an SVG version of the Bitcoin\n+icon is used.\n+\n+## Patches\n+\n+In general, patches should be avoided. When a packager feels a patch is\n+necessary, the packager should bring the problem to the attention of the bitcoin\n+developers so that an official fix to the issue can make it into the next\n+release.\n+\n+### Patch0 bitcoin-0.12.0-libressl.patch\n+\n+This patch is only needed if building against LibreSSL. LibreSSL is not the\n+standard TLS library on most Linux distributions. The patch will likely not be\n+needed when 0.12.1 is released, a proper fix is already in the Bitcoin git\n+master branch.\n+\n+## BuildRequires\n+\n+The packages specified in the `BuildRequires` are specified according to the\n+package naming convention currently used in CentOS 7 and EPEL for CentOS 7. You\n+may need to change some of the package names for other distributions. This is\n+most likely to be the case with the Qt packages.\n+\n+## BerkeleyDB\n+\n+The `build-unix.md` file recommends building against BerkeleyDB 4.8.30. Even if\n+that is the version your Linux distribution ships with, it probably is a good\n+idea to build Bitcoin Core against a static version of that library compiled\n+according to the instructions in the `build-unix.md` file so that any changes\n+the distribution may make in the future will not result in a problem for users.\n+\n+The problem that can exist, clients built against different versions of\n+BerkeleyDB may not be able read each other's `wallet.dat` file which can make it\n+difficult for a user to recover from backup in the event of a system failure.\n+\n+## Graphical User Interface and Qt Version\n+\n+The RPM spec file will by default build the GUI client linked against the Qt5\n+libraries. If you wish instead to link against the Qt4 libraries you need to\n+pass the switch `-D '_use_qt4 1'` at build time to the `rpmbuild` or `mock`\n+command used to build the packages.\n+\n+If you would prefer not to build the GUI at all, you can pass the switch\n+`-D '_no_gui 1'` to the `rpmbuild` or `mock` build command.\n+\n+## Desktop and KDE Files\n+\n+The desktop and KDE meta files are created in the spec file itself with the\n+`cat` command. This is done to allow easy distribution specific changes without\n+needing to use any patches. A specific time stamp is given to the files so that\n+it does not they do not appear to have been updated every time the package is\n+built. If you do make changes to them, you probably should update time stamp\n+assigned to them in the `touch` command that specifies the time stamp.\n+\n+## SVG, PNG, and XPM Icons\n+\n+The `bitcoin.svg` file is from the source listed as `Source100`. It is used as\n+the source for the PNG and XPM files. The generated PNG and XPM files are given\n+the same time stamp as the source SVG file as a means of indicating they are\n+derived from it.\n+\n+## Systemd\n+\n+This spec file assumes the target distribution uses systemd. That really only\n+matters for the `bitcoin-server` package. At this point, most RPM based\n+distributions that still receive vendor updates do in fact use systemd.\n+\n+The files to control the service are created in the RPM spec file itself using\n+the `cat` command. This is done to make it easy to modify for other\n+distributions that may implement things differently without needing to patch\n+source. A specific time stamp is given to the files so that they do not appear\n+to have been updated every time the package is built. If you do make changes to\n+them, you probably should update the time stamp assigned to them in the `touch`\n+command that specifies the time stamp.\n+\n+## SELinux\n+\n+The `bitcoin-server` package should have SELinux support. How to properly do\n+that *may* vary by distribution and version of distribution.\n+\n+The SELinux stuff in this RPM spec file *should* be correct for CentOS, RHEL,\n+and Fedora but it would be a good idea to review it before building the package\n+on other distributions.\n+\n+## Tests\n+\n+The `%check` section takes a very long time to run. If your build system has a\n+time limit for package build, you may need to make an exception for this\n+package. On CentOS 7 the `%check` section completes successfully with both\n+OpenSSL and LibreSSL, a failure really does mean something is wrong.\n+\n+## LibreSSL Build Notes\n+\n+To build against LibreSSL you will need to pass the switch\n+`-D '_use_libressl 1'` to the `rpmbuild` or `mock` command or the spec file will\n+want the OpenSSL development files.\n+\n+### LibreSSL and Boost\n+\n+LibreSSL (and some newer builds of OpenSSL) do not have support for SSLv3. This\n+can cause issues with the Boost package if the Boost package has not been\n+patched accordingly. On those distributions, you will either need to build\n+Bitcoin-Core against OpenSSL or use a patched version of Boost in the build\n+system.\n+\n+As SSLv3 is no longer safe, distributions that have not patched Boost to work\n+with TLS libraries that do not support SSLv3 should have bug reports filed\n+against the Boost package. This bug report has already been filed for RHEL 7 but\n+it may need to be filed for other distributions.\n+\n+A patch for Boost: https://github.com/boostorg/asio/pull/23/files\n+\n+## ZeroMQ\n+\n+At this time, this RPM spec file does not support the ZeroMQ build options. A\n+suitable version of ZeroMQ is not available for the platform this spec file was\n+developed on (CentOS 7).\n+\n+## Legacy Credit\n+\n+This RPM spec file is largely based upon the work of Michael Hampton at\n+[Ringing Liberty](https://www.ringingliberty.com/bitcoin/). He has been\n+packaging Bitcoin for Fedora at least since 2012.\n+\n+Most of the differences between his packaging and this package are stylistic in\n+nature. The major differences:\n+\n+1. He builds from a github tagged release rather than a release tarball. This\n+should not result in different source code.\n+\n+2. He does not build BerkeleyDB but instead uses the BerkeleyDB provided by the\n+Linux distribution. For the distributions he packages for, they currently all\n+use the same version of BerkeleyDB so that difference is *probably* just\n+academic.\n+\n+3. As of his 10.11.2 package he did not allow for building against LibreSSL,\n+specifying a build without the Qt GUI, or specifying which version of the Qt\n+libraries to use.\n+\n+4. I renamed the `bitcoin` package that contains the Qt GUI to `bitcoin-core` as\n+that appears to be how the general population refers to it, in contrast to\n+`bitcoin-xt` or `bitcoin-classic`. I wanted to make sure the general population\n+knows what they are getting when installing the GUI package.\n+\n+As far as minor differences, I generally prefer to assign the file permissions\n+in the `%files` portion of an RPM spec file rather than specifying the\n+permissions of a file during `%install` and other minor things like that that\n+are largely just cosmetic."
      },
      {
        "sha": "555614a06d49ab820fce1e08f723005b26cdcb01",
        "filename": "contrib/rpm/bitcoin-0.12.0-libressl.patch",
        "status": "added",
        "additions": 24,
        "deletions": 0,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/rpm/bitcoin-0.12.0-libressl.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/rpm/bitcoin-0.12.0-libressl.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/rpm/bitcoin-0.12.0-libressl.patch?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,24 @@\n+diff -ur bitcoin-0.12.0.orig/src/init.cpp bitcoin-0.12.0/src/init.cpp\n+--- bitcoin-0.12.0.orig/src/init.cpp\t2015-12-31 16:00:00.000000000 -0800\n++++ bitcoin-0.12.0/src/init.cpp\t2016-02-23 06:03:47.133227757 -0800\n+@@ -1075,7 +1075,7 @@\n+     if (fPrintToDebugLog)\n+         OpenDebugLog();\n+ \n+-#if (OPENSSL_VERSION_NUMBER < 0x10100000L)\n++#if defined(LIBRESSL_VERSION_NUMBER) || (OPENSSL_VERSION_NUMBER < 0x10100000L)\n+     LogPrintf(\"Using OpenSSL version %s\\n\", SSLeay_version(SSLEAY_VERSION));\n+ #else\n+     LogPrintf(\"Using OpenSSL version %s\\n\", OpenSSL_version(OPENSSL_VERSION));\n+diff -ur bitcoin-0.12.0.orig/src/qt/rpcconsole.cpp bitcoin-0.12.0/src/qt/rpcconsole.cpp\n+--- bitcoin-0.12.0.orig/src/qt/rpcconsole.cpp\t2015-12-31 16:00:00.000000000 -0800\n++++ bitcoin-0.12.0/src/qt/rpcconsole.cpp\t2016-02-23 15:09:42.881126841 -0800\n+@@ -264,7 +264,7 @@\n+ \n+     // set library version labels\n+ \n+-#if (OPENSSL_VERSION_NUMBER < 0x10100000L)\n++#if defined(LIBRESSL_VERSION_NUMBER) || (OPENSSL_VERSION_NUMBER < 0x10100000L)\n+     ui->openSSLVersion->setText(SSLeay_version(SSLEAY_VERSION));\n+ #else\n+     ui->openSSLVersion->setText(OpenSSL_version(OPENSSL_VERSION));"
      },
      {
        "sha": "6f5eef6375255381f7c4552715ffdaf329e4a502",
        "filename": "contrib/rpm/bitcoin.fc",
        "status": "added",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/rpm/bitcoin.fc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/rpm/bitcoin.fc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/rpm/bitcoin.fc?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,8 @@\n+/usr/bin/bitcoin-cli\t\t--\tgen_context(system_u:object_r:bitcoin_exec_t,s0)\n+/usr/sbin/bitcoind\t\t--\tgen_context(system_u:object_r:bitcoin_exec_t,s0)\n+/usr/lib(64)?/bitcoin/bitcoind\t\t--\tgen_context(system_u:object_r:bitcoin_exec_t,s0)\n+\n+/etc/bitcoin(/.*)?\t\tgen_context(system_u:object_r:bitcoin_conf_t,s0)\n+/var/lib/bitcoin(/.*)?\t\tgen_context(system_u:object_r:bitcoin_var_lib_t,s0)\n+\n+(/var)?/run/bitcoind(/.*)?   gen_context(system_u:object_r:bitcoin_var_run_t,s0)"
      },
      {
        "sha": "2b096c24dc32396ef071aedecc6907c28bfba855",
        "filename": "contrib/rpm/bitcoin.if",
        "status": "added",
        "additions": 157,
        "deletions": 0,
        "changes": 157,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/rpm/bitcoin.if",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/rpm/bitcoin.if",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/rpm/bitcoin.if?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,157 @@\n+\n+## <summary>policy for bitcoin</summary>\n+\n+\n+########################################\n+## <summary>\n+##\tTransition to bitcoin.\n+## </summary>\n+## <param name=\"domain\">\n+## <summary>\n+##\tDomain allowed to transition.\n+## </summary>\n+## </param>\n+#\n+interface(`bitcoin_domtrans',`\n+\tgen_require(`\n+\t\ttype bitcoin_t, bitcoin_exec_t;\n+\t')\n+\n+\tcorecmd_search_bin($1)\n+\tdomtrans_pattern($1, bitcoin_exec_t, bitcoin_t)\n+')\n+\n+\n+########################################\n+## <summary>\n+##\tExecute bitcoin server in the bitcoin domain.\n+## </summary>\n+## <param name=\"domain\">\n+##\t<summary>\n+##\tDomain allowed access.\n+##\t</summary>\n+## </param>\n+#\n+interface(`bitcoin_initrc_domtrans',`\n+\tgen_require(`\n+\t\ttype bitcoin_initrc_exec_t;\n+\t')\n+\n+\tinit_labeled_script_domtrans($1, bitcoin_initrc_exec_t)\n+')\n+\n+\n+########################################\n+## <summary>\n+##\tSearch bitcoin lib directories.\n+## </summary>\n+## <param name=\"domain\">\n+##\t<summary>\n+##\tDomain allowed access.\n+##\t</summary>\n+## </param>\n+#\n+interface(`bitcoin_search_lib',`\n+\tgen_require(`\n+\t\ttype bitcoin_var_lib_t;\n+\t')\n+\n+\tallow $1 bitcoin_var_lib_t:dir search_dir_perms;\n+\tfiles_search_var_lib($1)\n+')\n+\n+########################################\n+## <summary>\n+##\tRead bitcoin lib files.\n+## </summary>\n+## <param name=\"domain\">\n+##\t<summary>\n+##\tDomain allowed access.\n+##\t</summary>\n+## </param>\n+#\n+interface(`bitcoin_read_lib_files',`\n+\tgen_require(`\n+\t\ttype bitcoin_var_lib_t;\n+\t')\n+\n+\tfiles_search_var_lib($1)\n+\tread_files_pattern($1, bitcoin_var_lib_t, bitcoin_var_lib_t)\n+')\n+\n+########################################\n+## <summary>\n+##\tManage bitcoin lib files.\n+## </summary>\n+## <param name=\"domain\">\n+##\t<summary>\n+##\tDomain allowed access.\n+##\t</summary>\n+## </param>\n+#\n+interface(`bitcoin_manage_lib_files',`\n+\tgen_require(`\n+\t\ttype bitcoin_var_lib_t;\n+\t')\n+\n+\tfiles_search_var_lib($1)\n+\tmanage_files_pattern($1, bitcoin_var_lib_t, bitcoin_var_lib_t)\n+')\n+\n+########################################\n+## <summary>\n+##\tManage bitcoin lib directories.\n+## </summary>\n+## <param name=\"domain\">\n+##\t<summary>\n+##\tDomain allowed access.\n+##\t</summary>\n+## </param>\n+#\n+interface(`bitcoin_manage_lib_dirs',`\n+\tgen_require(`\n+\t\ttype bitcoin_var_lib_t;\n+\t')\n+\n+\tfiles_search_var_lib($1)\n+\tmanage_dirs_pattern($1, bitcoin_var_lib_t, bitcoin_var_lib_t)\n+')\n+\n+\n+########################################\n+## <summary>\n+##\tAll of the rules required to administrate\n+##\tan bitcoin environment\n+## </summary>\n+## <param name=\"domain\">\n+##\t<summary>\n+##\tDomain allowed access.\n+##\t</summary>\n+## </param>\n+## <param name=\"role\">\n+##\t<summary>\n+##\tRole allowed access.\n+##\t</summary>\n+## </param>\n+## <rolecap/>\n+#\n+interface(`bitcoin_admin',`\n+\tgen_require(`\n+\t\ttype bitcoin_t;\n+\t\ttype bitcoin_initrc_exec_t;\n+\t\ttype bitcoin_var_lib_t;\n+\t')\n+\n+\tallow $1 bitcoin_t:process { ptrace signal_perms };\n+\tps_process_pattern($1, bitcoin_t)\n+\n+\tbitcoin_initrc_domtrans($1)\n+\tdomain_system_change_exemption($1)\n+\trole_transition $2 bitcoin_initrc_exec_t system_r;\n+\tallow $2 system_r;\n+\n+\tfiles_search_var_lib($1)\n+\tadmin_pattern($1, bitcoin_var_lib_t)\n+\n+')\n+"
      },
      {
        "sha": "38ae0381807661da3b53ee2af5493ab7ca1e3cd1",
        "filename": "contrib/rpm/bitcoin.spec",
        "status": "added",
        "additions": 444,
        "deletions": 0,
        "changes": 444,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/rpm/bitcoin.spec",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/rpm/bitcoin.spec",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/rpm/bitcoin.spec?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,444 @@\n+%define bdbv 4.8.30\n+%global selinux_variants mls strict targeted\n+\n+%if 0%{?_no_gui:1}\n+%define _buildqt 0\n+%define buildargs --with-gui=no\n+%else\n+%define _buildqt 1\n+%if 0%{?_use_qt4}\n+%define buildargs --with-qrencode --with-gui=qt4\n+%else\n+%define buildargs --with-qrencode --with-gui=qt5\n+%endif\n+%endif\n+\n+Name:\t\tbitcoin\n+Version:\t0.12.0\n+Release:\t2%{?dist}\n+Summary:\tPeer to Peer Cryptographic Currency\n+\n+Group:\t\tApplications/System\n+License:\tMIT\n+URL:\t\thttps://bitcoin.org/\n+Source0:\thttps://bitcoin.org/bin/bitcoin-core-%{version}/bitcoin-%{version}.tar.gz\n+Source1:\thttp://download.oracle.com/berkeley-db/db-%{bdbv}.NC.tar.gz\n+\n+Source10:\thttps://raw.githubusercontent.com/bitcoin/bitcoin/v%{version}/contrib/debian/examples/bitcoin.conf\n+\n+#man pages\n+Source20:\thttps://raw.githubusercontent.com/bitcoin/bitcoin/v%{version}/contrib/debian/manpages/bitcoind.1\n+Source21:\thttps://raw.githubusercontent.com/bitcoin/bitcoin/v%{version}/contrib/debian/manpages/bitcoin-cli.1\n+Source22:\thttps://raw.githubusercontent.com/bitcoin/bitcoin/v%{version}/contrib/debian/manpages/bitcoin-qt.1\n+Source23:\thttps://raw.githubusercontent.com/bitcoin/bitcoin/v%{version}/contrib/debian/manpages/bitcoin.conf.5\n+\n+#selinux\n+Source30:\thttps://raw.githubusercontent.com/bitcoin/bitcoin/v%{version}/contrib/rpm/bitcoin.te\n+# Source31 - what about bitcoin-tx and bench_bitcoin ???\n+Source31:\thttps://raw.githubusercontent.com/bitcoin/bitcoin/v%{version}/contrib/rpm/bitcoin.fc\n+Source32:\thttps://raw.githubusercontent.com/bitcoin/bitcoin/v%{version}/contrib/rpm/bitcoin.if\n+\n+Source100:\thttps://upload.wikimedia.org/wikipedia/commons/4/46/Bitcoin.svg\n+\n+%if 0%{?_use_libressl:1}\n+BuildRequires:\tlibressl-devel\n+%else\n+BuildRequires:\topenssl-devel\n+%endif\n+BuildRequires:\tboost-devel\n+BuildRequires:\tminiupnpc-devel\n+BuildRequires:\tautoconf automake libtool\n+BuildRequires:\tlibevent-devel\n+\n+\n+Patch0:\t\tbitcoin-0.12.0-libressl.patch\n+\n+\n+%description\n+Bitcoin is a digital cryptographic currency that uses peer-to-peer technology to\n+operate with no central authority or banks; managing transactions and the\n+issuing of bitcoins is carried out collectively by the network.\n+\n+%if %{_buildqt}\n+%package core\n+Summary:\tPeer to Peer Cryptographic Currency\n+Group:\t\tApplications/System\n+Obsoletes:\t%{name} < %{version}-%{release}\n+Provides:\t%{name} = %{version}-%{release}\n+%if 0%{?_use_qt4}\n+BuildRequires:\tqt-devel\n+%else\n+BuildRequires:\tqt5-qtbase-devel\n+# for /usr/bin/lrelease-qt5\n+BuildRequires:\tqt5-linguist\n+%endif\n+BuildRequires:\tprotobuf-devel\n+BuildRequires:\tqrencode-devel\n+BuildRequires:\t%{_bindir}/desktop-file-validate\n+# for icon generation from SVG\n+BuildRequires:\t%{_bindir}/inkscape\n+BuildRequires:\t%{_bindir}/convert\n+\n+%description core\n+Bitcoin is a digital cryptographic currency that uses peer-to-peer technology to\n+operate with no central authority or banks; managing transactions and the\n+issuing of bitcoins is carried out collectively by the network.\n+\n+This package contains the Qt based graphical client and node. If you are looking\n+to run a Bitcoin wallet, this is probably the package you want.\n+%endif\n+\n+\n+%package libs\n+Summary:\tBitcoin shared libraries\n+Group:\t\tSystem Environment/Libraries\n+\n+%description libs\n+This package provides the bitcoinconsensus shared libraries. These libraries\n+may be used by third party software to provide consensus verification\n+functionality.\n+\n+Unless you know need this package, you probably do not.\n+\n+%package devel\n+Summary:\tDevelopment files for bitcoin\n+Group:\t\tDevelopment/Libraries\n+Requires:\t%{name}-libs = %{version}-%{release}\n+\n+%description devel\n+This package contains the header files and static library for the\n+bitcoinconsensus shared library. If you are developing or compiling software\n+that wants to link against that library, then you need this package installed.\n+\n+Most people do not need this package installed.\n+\n+%package server\n+Summary:\tThe bitcoin daemon\n+Group:\t\tSystem Environment/Daemons\n+Requires:\tbitcoin-utils = %{version}-%{release}\n+Requires:\tselinux-policy policycoreutils-python\n+Requires(pre):\tshadow-utils\n+Requires(post):\t%{_sbindir}/semodule %{_sbindir}/restorecon %{_sbindir}/fixfiles %{_sbindir}/sestatus\n+Requires(postun):\t%{_sbindir}/semodule %{_sbindir}/restorecon %{_sbindir}/fixfiles %{_sbindir}/sestatus\n+BuildRequires:\tsystemd\n+BuildRequires:\tcheckpolicy\n+BuildRequires:\t%{_datadir}/selinux/devel/Makefile\n+\n+%description server\n+This package provides a stand-alone bitcoin-core daemon. For most users, this\n+package is only needed if they need a full-node without the graphical client.\n+\n+Some third party wallet software will want this package to provide the actual\n+bitcoin-core node they use to connect to the network.\n+\n+If you use the graphical bitcoin-core client then you almost certainly do not\n+need this package.\n+\n+%package utils\n+Summary:\tBitcoin utilities\n+Group:\t\tApplications/System\n+\n+%description utils\n+This package provides several command line utilities for interacting with a\n+bitcoin-core daemon.\n+\n+The bitcoin-cli utility allows you to communicate and control a bitcoin daemon\n+over RPC, the bitcoin-tx utility allows you to create a custom transaction, and\n+the bench_bitcoin utility can be used to perform some benchmarks.\n+\n+This package contains utilities needed by the bitcoin-server package.\n+\n+\n+%prep\n+%setup -q\n+%patch0 -p1 -b .libressl\n+cp -p %{SOURCE10} ./bitcoin.conf.example\n+tar -zxf %{SOURCE1}\n+cp -p db-%{bdbv}.NC/LICENSE ./db-%{bdbv}.NC-LICENSE\n+mkdir db4 SELinux\n+cp -p %{SOURCE30} %{SOURCE31} %{SOURCE32} SELinux/\n+\n+\n+%build\n+CWD=`pwd`\n+cd db-%{bdbv}.NC/build_unix/\n+../dist/configure --enable-cxx --disable-shared --with-pic --prefix=${CWD}/db4\n+make install\n+cd ../..\n+\n+./autogen.sh\n+%configure LDFLAGS=\"-L${CWD}/db4/lib/\" CPPFLAGS=\"-I${CWD}/db4/include/\" --with-miniupnpc --enable-glibc-back-compat %{buildargs}\n+make %{?_smp_mflags}\n+\n+pushd SELinux\n+for selinuxvariant in %{selinux_variants}; do\n+\tmake NAME=${selinuxvariant} -f %{_datadir}/selinux/devel/Makefile\n+\tmv bitcoin.pp bitcoin.pp.${selinuxvariant}\n+\tmake NAME=${selinuxvariant} -f %{_datadir}/selinux/devel/Makefile clean\n+done\n+popd\n+\n+\n+%install\n+make install DESTDIR=%{buildroot}\n+\n+mkdir -p -m755 %{buildroot}%{_sbindir}\n+mv %{buildroot}%{_bindir}/bitcoind %{buildroot}%{_sbindir}/bitcoind\n+\n+# systemd stuff\n+mkdir -p %{buildroot}%{_tmpfilesdir}\n+cat <<EOF > %{buildroot}%{_tmpfilesdir}/bitcoin.conf\n+d /run/bitcoind 0750 bitcoin bitcoin -\n+EOF\n+touch -a -m -t 201504280000 %{buildroot}%{_tmpfilesdir}/bitcoin.conf\n+\n+mkdir -p %{buildroot}%{_sysconfdir}/sysconfig\n+cat <<EOF > %{buildroot}%{_sysconfdir}/sysconfig/bitcoin\n+# Provide options to the bitcoin daemon here, for example\n+# OPTIONS=\"-testnet -disable-wallet\"\n+\n+OPTIONS=\"\"\n+\n+# System service defaults.\n+# Don't change these unless you know what you're doing.\n+CONFIG_FILE=\"%{_sysconfdir}/bitcoin/bitcoin.conf\"\n+DATA_DIR=\"%{_localstatedir}/lib/bitcoin\"\n+PID_FILE=\"/run/bitcoind/bitcoind.pid\"\n+EOF\n+touch -a -m -t 201504280000 %{buildroot}%{_sysconfdir}/sysconfig/bitcoin\n+\n+mkdir -p %{buildroot}%{_unitdir}\n+cat <<EOF > %{buildroot}%{_unitdir}/bitcoin.service\n+[Unit]\n+Description=Bitcoin daemon\n+After=syslog.target network.target\n+\n+[Service]\n+Type=forking\n+ExecStart=%{_sbindir}/bitcoind -daemon -conf=\\${CONFIG_FILE} -datadir=\\${DATA_DIR} -pid=\\${PID_FILE} \\$OPTIONS\n+EnvironmentFile=%{_sysconfdir}/sysconfig/bitcoin\n+User=bitcoin\n+Group=bitcoin\n+\n+Restart=on-failure\n+PrivateTmp=true\n+TimeoutStopSec=120\n+TimeoutStartSec=60\n+StartLimitInterval=240\n+StartLimitBurst=5\n+\n+[Install]\n+WantedBy=multi-user.target\n+EOF\n+touch -a -m -t 201504280000 %{buildroot}%{_unitdir}/bitcoin.service\n+#end systemd stuff\n+\n+mkdir %{buildroot}%{_sysconfdir}/bitcoin\n+mkdir -p %{buildroot}%{_localstatedir}/lib/bitcoin\n+\n+#SELinux\n+for selinuxvariant in %{selinux_variants}; do\n+\tinstall -d %{buildroot}%{_datadir}/selinux/${selinuxvariant}\n+\tinstall -p -m 644 SELinux/bitcoin.pp.${selinuxvariant} %{buildroot}%{_datadir}/selinux/${selinuxvariant}/bitcoin.pp\n+done\n+\n+%if %{_buildqt}\n+# qt icons\n+install -D -p share/pixmaps/bitcoin.ico %{buildroot}%{_datadir}/pixmaps/bitcoin.ico\n+install -p share/pixmaps/nsis-header.bmp %{buildroot}%{_datadir}/pixmaps/\n+install -p share/pixmaps/nsis-wizard.bmp %{buildroot}%{_datadir}/pixmaps/\n+install -p %{SOURCE100} %{buildroot}%{_datadir}/pixmaps/bitcoin.svg\n+%{_bindir}/inkscape %{SOURCE100} --export-png=%{buildroot}%{_datadir}/pixmaps/bitcoin16.png -w16 -h16\n+%{_bindir}/inkscape %{SOURCE100} --export-png=%{buildroot}%{_datadir}/pixmaps/bitcoin32.png -w32 -h32\n+%{_bindir}/inkscape %{SOURCE100} --export-png=%{buildroot}%{_datadir}/pixmaps/bitcoin64.png -w64 -h64\n+%{_bindir}/inkscape %{SOURCE100} --export-png=%{buildroot}%{_datadir}/pixmaps/bitcoin128.png -w128 -h128\n+%{_bindir}/inkscape %{SOURCE100} --export-png=%{buildroot}%{_datadir}/pixmaps/bitcoin256.png -w256 -h256\n+%{_bindir}/convert -resize 16x16 %{buildroot}%{_datadir}/pixmaps/bitcoin256.png %{buildroot}%{_datadir}/pixmaps/bitcoin16.xpm\n+%{_bindir}/convert -resize 32x32 %{buildroot}%{_datadir}/pixmaps/bitcoin256.png %{buildroot}%{_datadir}/pixmaps/bitcoin32.xpm\n+%{_bindir}/convert -resize 64x64 %{buildroot}%{_datadir}/pixmaps/bitcoin256.png %{buildroot}%{_datadir}/pixmaps/bitcoin64.xpm\n+%{_bindir}/convert -resize 128x128 %{buildroot}%{_datadir}/pixmaps/bitcoin256.png %{buildroot}%{_datadir}/pixmaps/bitcoin128.xpm\n+%{_bindir}/convert %{buildroot}%{_datadir}/pixmaps/bitcoin256.png %{buildroot}%{_datadir}/pixmaps/bitcoin256.xpm\n+touch %{buildroot}%{_datadir}/pixmaps/*.png -r %{SOURCE100}\n+touch %{buildroot}%{_datadir}/pixmaps/*.xpm -r %{SOURCE100}\n+\n+# Desktop File - change the touch timestamp if modifying\n+mkdir -p %{buildroot}%{_datadir}/applications\n+cat <<EOF > %{buildroot}%{_datadir}/applications/bitcoin-core.desktop\n+[Desktop Entry]\n+Encoding=UTF-8\n+Name=Bitcoin\n+Comment=Bitcoin P2P Cryptocurrency\n+Comment[fr]=Bitcoin, monnaie virtuelle cryptographique pair \u00e0 pair\n+Comment[tr]=Bitcoin, e\u015ften e\u015fe kriptografik sanal para birimi\n+Exec=bitcoin-qt %u\n+Terminal=false\n+Type=Application\n+Icon=bitcoin128\n+MimeType=x-scheme-handler/bitcoin;\n+Categories=Office;Finance;\n+EOF\n+# change touch date when modifying desktop\n+touch -a -m -t 201511100546 %{buildroot}%{_datadir}/applications/bitcoin-core.desktop\n+%{_bindir}/desktop-file-validate %{buildroot}%{_datadir}/applications/bitcoin-core.desktop\n+\n+# KDE protocol - change the touch timestamp if modifying\n+mkdir -p %{buildroot}%{_datadir}/kde4/services\n+cat <<EOF > %{buildroot}%{_datadir}/kde4/services/bitcoin-core.protocol\n+[Protocol]\n+exec=bitcoin-qt '%u'\n+protocol=bitcoin\n+input=none\n+output=none\n+helper=true\n+listing=\n+reading=false\n+writing=false\n+makedir=false\n+deleting=false\n+EOF\n+# change touch date when modifying protocol\n+touch -a -m -t 201511100546 %{buildroot}%{_datadir}/kde4/services/bitcoin-core.protocol\n+%endif\n+\n+# man pages\n+install -D -p %{SOURCE20} %{buildroot}%{_mandir}/man1/bitcoind.1\n+install -p %{SOURCE21} %{buildroot}%{_mandir}/man1/bitcoin-cli.1\n+%if %{_buildqt}\n+install -p %{SOURCE22} %{buildroot}%{_mandir}/man1/bitcoin-qt.1\n+%endif\n+install -D -p %{SOURCE23} %{buildroot}%{_mandir}/man5/bitcoin.conf.5\n+\n+# nuke these, we do extensive testing of binaries in %%check before packaging\n+rm -f %{buildroot}%{_bindir}/test_*\n+\n+%check\n+make check\n+pushd src\n+srcdir=. test/bitcoin-util-test.py\n+popd\n+qa/pull-tester/rpc-tests.py -extended\n+\n+%post libs -p /sbin/ldconfig\n+\n+%postun libs -p /sbin/ldconfig\n+\n+%pre server\n+getent group bitcoin >/dev/null || groupadd -r bitcoin\n+getent passwd bitcoin >/dev/null ||\n+\tuseradd -r -g bitcoin -d /var/lib/bitcoin -s /sbin/nologin \\\n+\t-c \"Bitcoin wallet server\" bitcoin\n+exit 0\n+\n+%post server\n+%systemd_post bitcoin.service\n+# SELinux\n+if [ `%{_sbindir}/sestatus |grep -c \"disabled\"` -eq 0 ]; then\n+for selinuxvariant in %{selinux_variants}; do\n+\t%{_sbindir}/semodule -s ${selinuxvariant} -i %{_datadir}/selinux/${selinuxvariant}/bitcoin.pp &> /dev/null || :\n+done\n+%{_sbindir}/semanage port -a -t bitcoin_port_t -p tcp 8332\n+%{_sbindir}/semanage port -a -t bitcoin_port_t -p tcp 8333\n+%{_sbindir}/semanage port -a -t bitcoin_port_t -p tcp 18332\n+%{_sbindir}/semanage port -a -t bitcoin_port_t -p tcp 18333\n+%{_sbindir}/fixfiles -R bitcoin-server restore &> /dev/null || :\n+%{_sbindir}/restorecon -R %{_localstatedir}/lib/bitcoin || :\n+fi\n+\n+%posttrans server\n+%{_bindir}/systemd-tmpfiles --create\n+\n+%preun server\n+%systemd_preun bitcoin.service\n+\n+%postun server\n+%systemd_postun bitcoin.service\n+# SELinux\n+if [ $1 -eq 0 ]; then\n+\tif [ `%{_sbindir}/sestatus |grep -c \"disabled\"` -eq 0 ]; then\n+\t%{_sbindir}/semanage port -d -p tcp 8332\n+\t%{_sbindir}/semanage port -d -p tcp 8333\n+\t%{_sbindir}/semanage port -d -p tcp 18332\n+\t%{_sbindir}/semanage port -d -p tcp 18333\n+\tfor selinuxvariant in %{selinux_variants}; do\n+\t\t%{_sbindir}/semodule -s ${selinuxvariant} -r bitcoin &> /dev/null || :\n+\tdone\n+\t%{_sbindir}/fixfiles -R bitcoin-server restore &> /dev/null || :\n+\t[ -d %{_localstatedir}/lib/bitcoin ] && \\\n+\t\t%{_sbindir}/restorecon -R %{_localstatedir}/lib/bitcoin &> /dev/null || :\n+\tfi\n+fi\n+\n+%clean\n+rm -rf %{buildroot}\n+\n+%if %{_buildqt}\n+%files core\n+%defattr(-,root,root,-)\n+%license COPYING db-%{bdbv}.NC-LICENSE\n+%doc COPYING bitcoin.conf.example doc/README.md doc/bips.md doc/files.md doc/multiwallet-qt.md doc/reduce-traffic.md doc/release-notes.md doc/tor.md\n+%attr(0755,root,root) %{_bindir}/bitcoin-qt\n+%attr(0644,root,root) %{_datadir}/applications/bitcoin-core.desktop\n+%attr(0644,root,root) %{_datadir}/kde4/services/bitcoin-core.protocol\n+%attr(0644,root,root) %{_datadir}/pixmaps/*.ico\n+%attr(0644,root,root) %{_datadir}/pixmaps/*.bmp\n+%attr(0644,root,root) %{_datadir}/pixmaps/*.svg\n+%attr(0644,root,root) %{_datadir}/pixmaps/*.png\n+%attr(0644,root,root) %{_datadir}/pixmaps/*.xpm\n+%attr(0644,root,root) %{_mandir}/man1/bitcoin-qt.1*\n+%endif\n+\n+%files libs\n+%defattr(-,root,root,-)\n+%license COPYING\n+%doc COPYING doc/README.md doc/shared-libraries.md\n+%{_libdir}/lib*.so.*\n+\n+%files devel\n+%defattr(-,root,root,-)\n+%license COPYING\n+%doc COPYING doc/README.md doc/developer-notes.md doc/shared-libraries.md\n+%attr(0644,root,root) %{_includedir}/*.h\n+%{_libdir}/*.so\n+%{_libdir}/*.a\n+%{_libdir}/*.la\n+%attr(0644,root,root) %{_libdir}/pkgconfig/*.pc\n+\n+%files server\n+%defattr(-,root,root,-)\n+%license COPYING db-%{bdbv}.NC-LICENSE\n+%doc COPYING bitcoin.conf.example doc/README.md doc/REST-interface.md doc/bips.md doc/dnsseed-policy.md doc/files.md doc/reduce-traffic.md doc/release-notes.md doc/tor.md\n+%attr(0755,root,root) %{_sbindir}/bitcoind\n+%attr(0644,root,root) %{_tmpfilesdir}/bitcoin.conf\n+%attr(0644,root,root) %{_unitdir}/bitcoin.service\n+%dir %attr(0750,bitcoin,bitcoin) %{_sysconfdir}/bitcoin\n+%dir %attr(0750,bitcoin,bitcoin) %{_localstatedir}/lib/bitcoin\n+%config(noreplace) %attr(0600,root,root) %{_sysconfdir}/sysconfig/bitcoin\n+%attr(0644,root,root) %{_datadir}/selinux/*/*.pp\n+%attr(0644,root,root) %{_mandir}/man1/bitcoind.1*\n+%attr(0644,root,root) %{_mandir}/man5/bitcoin.conf.5*\n+\n+%files utils\n+%defattr(-,root,root,-)\n+%license COPYING\n+%doc COPYING bitcoin.conf.example doc/README.md\n+%attr(0755,root,root) %{_bindir}/bitcoin-cli\n+%attr(0755,root,root) %{_bindir}/bitcoin-tx\n+%attr(0755,root,root) %{_bindir}/bench_bitcoin\n+%attr(0644,root,root) %{_mandir}/man1/bitcoin-cli.1*\n+%attr(0644,root,root) %{_mandir}/man5/bitcoin.conf.5*\n+\n+\n+\n+%changelog\n+* Fri Feb 26 2016 Alice Wonder <buildmaster@librelamp.com> - 0.12.0-2\n+- Rename Qt package from bitcoin to bitcoin-core\n+- Make building of the Qt package optional\n+- When building the Qt package, default to Qt5 but allow building\n+-  against Qt4\n+- Only run SELinux stuff in post scripts if it is not set to disabled\n+\n+* Wed Feb 24 2016 Alice Wonder <buildmaster@librelamp.com> - 0.12.0-1\n+- Initial spec file for 0.12.0 release\n+\n+# This spec file is written from scratch but a lot of the packaging decisions are directly\n+# based upon the 0.11.2 package spec file from https://www.ringingliberty.com/bitcoin/"
      },
      {
        "sha": "d6231c591a24312b3c073f7658533587279aeba7",
        "filename": "contrib/rpm/bitcoin.te",
        "status": "added",
        "additions": 81,
        "deletions": 0,
        "changes": 81,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/rpm/bitcoin.te",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/rpm/bitcoin.te",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/rpm/bitcoin.te?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,81 @@\n+policy_module(bitcoin, 1.100.1)\n+\n+########################################\n+#\n+# Declarations\n+#\n+\n+type bitcoin_t;\n+type bitcoin_exec_t;\n+init_daemon_domain(bitcoin_t, bitcoin_exec_t)\n+\n+permissive bitcoin_t;\n+\n+type bitcoin_initrc_exec_t;\n+init_script_file(bitcoin_initrc_exec_t)\n+\n+type bitcoin_conf_t;\n+files_type(bitcoin_conf_t)\n+\n+type bitcoin_var_lib_t;\n+files_type(bitcoin_var_lib_t)\n+\n+type bitcoin_var_run_t;\n+files_type(bitcoin_var_run_t)\n+\n+type bitcoin_port_t;\n+corenet_port(bitcoin_port_t)\n+\n+########################################\n+#\n+# bitcoin local policy\n+#\n+allow bitcoin_t self:process { fork };\n+\n+allow bitcoin_t self:fifo_file rw_fifo_file_perms;\n+allow bitcoin_t self:unix_stream_socket create_stream_socket_perms;\n+\n+manage_dirs_pattern(bitcoin_t, bitcoin_conf_t, bitcoin_conf_t)\n+manage_files_pattern(bitcoin_t, bitcoin_conf_t, bitcoin_conf_t)\n+\n+manage_dirs_pattern(bitcoin_t, bitcoin_var_lib_t, bitcoin_var_lib_t)\n+manage_files_pattern(bitcoin_t, bitcoin_var_lib_t, bitcoin_var_lib_t)\n+files_var_lib_filetrans(bitcoin_t, bitcoin_var_lib_t, { dir file })\n+\n+manage_dirs_pattern(bitcoin_t, bitcoin_var_run_t, bitcoin_var_run_t)\n+manage_files_pattern(bitcoin_t, bitcoin_var_run_t, bitcoin_var_run_t)\n+\n+sysnet_dns_name_resolve(bitcoin_t)\n+corenet_all_recvfrom_unlabeled(bitcoin_t)\n+\n+allow bitcoin_t self:tcp_socket create_stream_socket_perms;\n+corenet_tcp_sendrecv_generic_if(bitcoin_t)\n+corenet_tcp_sendrecv_generic_node(bitcoin_t)\n+corenet_tcp_sendrecv_all_ports(bitcoin_t)\n+corenet_tcp_bind_generic_node(bitcoin_t)\n+\n+gen_require(`\n+    type bitcoin_port_t;\n+')\n+allow bitcoin_t bitcoin_port_t:tcp_socket name_bind;\n+\n+gen_require(`\n+    type bitcoin_port_t;\n+')\n+allow bitcoin_t bitcoin_port_t:tcp_socket name_connect;\n+\n+domain_use_interactive_fds(bitcoin_t)\n+\n+files_read_etc_files(bitcoin_t)\n+\n+miscfiles_read_localization(bitcoin_t)\n+\n+sysnet_dns_name_resolve(bitcoin_t)\n+\n+allow bitcoin_t bitcoin_exec_t:file execute_no_trans;\n+allow bitcoin_t self:process setsched;\n+corecmd_exec_ls(bitcoin_t)\n+corenet_tcp_connect_http_port(bitcoin_t)\n+dev_read_urand(bitcoin_t)\n+fs_getattr_xattr_fs(bitcoin_t)\n+kernel_read_system_state(bitcoin_t)"
      },
      {
        "sha": "c595f83eb95b20eea68f5f54a2ec0a715f6d75de",
        "filename": "contrib/seeds/README.md",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/seeds/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/seeds/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/README.md?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -1,11 +1,11 @@\n ### Seeds ###\n \n-Utility to generate the pnSeed[] array that is compiled into the client\n-(see [src/net.cpp](/src/net.cpp)).\n+Utility to generate the seeds.txt list that is compiled into the client\n+(see [src/chainparamsseeds.h](/src/chainparamsseeds.h) and other utilities in [contrib/seeds](/contrib/seeds)).\n \n-The 600 seeds compiled into the 0.8 release were created from sipa's DNS seed data, like this:\n+The seeds compiled into the release are created from sipa's DNS seed data, like this:\n \n-\tcurl -s http://bitcoin.sipa.be/seeds.txt | head -1000 | makeseeds.py\n+    curl -s http://bitcoin.sipa.be/seeds.txt > seeds_main.txt\n+    python makeseeds.py < seeds_main.txt > nodes_main.txt\n+    python generate-seeds.py . > ../../src/chainparamsseeds.h\n \n-The input to makeseeds.py is assumed to be approximately sorted from most-reliable to least-reliable,\n-with IP:port first on each line (lines that don't match IPv4:port are ignored)."
      },
      {
        "sha": "a3d035218789b8f74871a5c7885d4aa7a55c0b79",
        "filename": "contrib/seeds/generate-seeds.py",
        "status": "added",
        "additions": 138,
        "deletions": 0,
        "changes": 138,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/seeds/generate-seeds.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/seeds/generate-seeds.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/generate-seeds.py?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,138 @@\n+#!/usr/bin/python\n+# Copyright (c) 2014 Wladimir J. van der Laan\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+'''\n+Script to generate list of seed nodes for chainparams.cpp.\n+\n+This script expects two text files in the directory that is passed as an\n+argument:\n+\n+    nodes_main.txt\n+    nodes_test.txt\n+\n+These files must consist of lines in the format \n+\n+    <ip>\n+    <ip>:<port>\n+    [<ipv6>]\n+    [<ipv6>]:<port>\n+    <onion>.onion\n+    0xDDBBCCAA (IPv4 little-endian old pnSeeds format)\n+\n+The output will be two data structures with the peers in binary format:\n+\n+   static SeedSpec6 pnSeed6_main[]={\n+   ...\n+   }\n+   static SeedSpec6 pnSeed6_test[]={\n+   ...\n+   }\n+\n+These should be pasted into `src/chainparamsseeds.h`.\n+'''\n+from __future__ import print_function, division\n+from base64 import b32decode\n+from binascii import a2b_hex\n+import sys, os\n+import re\n+\n+# ipv4 in ipv6 prefix\n+pchIPv4 = bytearray([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0xff, 0xff])\n+# tor-specific ipv6 prefix\n+pchOnionCat = bytearray([0xFD,0x87,0xD8,0x7E,0xEB,0x43])\n+\n+def name_to_ipv6(addr):\n+    if len(addr)>6 and addr.endswith('.onion'):\n+        vchAddr = b32decode(addr[0:-6], True)\n+        if len(vchAddr) != 16-len(pchOnionCat):\n+            raise ValueError('Invalid onion %s' % s)\n+        return pchOnionCat + vchAddr\n+    elif '.' in addr: # IPv4\n+        return pchIPv4 + bytearray((int(x) for x in addr.split('.')))\n+    elif ':' in addr: # IPv6\n+        sub = [[], []] # prefix, suffix\n+        x = 0\n+        addr = addr.split(':')\n+        for i,comp in enumerate(addr):\n+            if comp == '':\n+                if i == 0 or i == (len(addr)-1): # skip empty component at beginning or end\n+                    continue\n+                x += 1 # :: skips to suffix\n+                assert(x < 2)\n+            else: # two bytes per component\n+                val = int(comp, 16)\n+                sub[x].append(val >> 8)\n+                sub[x].append(val & 0xff)\n+        nullbytes = 16 - len(sub[0]) - len(sub[1])\n+        assert((x == 0 and nullbytes == 0) or (x == 1 and nullbytes > 0))\n+        return bytearray(sub[0] + ([0] * nullbytes) + sub[1])\n+    elif addr.startswith('0x'): # IPv4-in-little-endian\n+        return pchIPv4 + bytearray(reversed(a2b_hex(addr[2:])))\n+    else:\n+        raise ValueError('Could not parse address %s' % addr)\n+\n+def parse_spec(s, defaultport):\n+    match = re.match('\\[([0-9a-fA-F:]+)\\](?::([0-9]+))?$', s)\n+    if match: # ipv6\n+        host = match.group(1)\n+        port = match.group(2)\n+    elif s.count(':') > 1: # ipv6, no port\n+        host = s\n+        port = ''\n+    else:\n+        (host,_,port) = s.partition(':')\n+\n+    if not port:\n+        port = defaultport\n+    else:\n+        port = int(port)\n+\n+    host = name_to_ipv6(host)\n+\n+    return (host,port)\n+\n+def process_nodes(g, f, structname, defaultport):\n+    g.write('static SeedSpec6 %s[] = {\\n' % structname)\n+    first = True\n+    for line in f:\n+        comment = line.find('#')\n+        if comment != -1:\n+            line = line[0:comment]\n+        line = line.strip()\n+        if not line:\n+            continue\n+        if not first:\n+            g.write(',\\n')\n+        first = False\n+\n+        (host,port) = parse_spec(line, defaultport)\n+        hoststr = ','.join(('0x%02x' % b) for b in host)\n+        g.write('    {{%s}, %i}' % (hoststr, port))\n+    g.write('\\n};\\n')\n+\n+def main():\n+    if len(sys.argv)<2:\n+        print(('Usage: %s <path_to_nodes_txt>' % sys.argv[0]), file=sys.stderr)\n+        exit(1)\n+    g = sys.stdout\n+    indir = sys.argv[1]\n+    g.write('#ifndef BITCOIN_CHAINPARAMSSEEDS_H\\n')\n+    g.write('#define BITCOIN_CHAINPARAMSSEEDS_H\\n')\n+    g.write('/**\\n')\n+    g.write(' * List of fixed seed nodes for the bitcoin network\\n')\n+    g.write(' * AUTOGENERATED by contrib/seeds/generate-seeds.py\\n')\n+    g.write(' *\\n')\n+    g.write(' * Each line contains a 16-byte IPv6 address and a port.\\n')\n+    g.write(' * IPv4 as well as onion addresses are wrapped inside a IPv6 address accordingly.\\n')\n+    g.write(' */\\n')\n+    with open(os.path.join(indir,'nodes_main.txt'),'r') as f:\n+        process_nodes(g, f, 'pnSeed6_main', 8333)\n+    g.write('\\n')\n+    with open(os.path.join(indir,'nodes_test.txt'),'r') as f:\n+        process_nodes(g, f, 'pnSeed6_test', 18333)\n+    g.write('#endif // BITCOIN_CHAINPARAMSSEEDS_H\\n')\n+            \n+if __name__ == '__main__':\n+    main()\n+"
      },
      {
        "sha": "4072405ef509a80176bf7314b46eca525cffe1da",
        "filename": "contrib/seeds/makeseeds.py",
        "status": "modified",
        "additions": 152,
        "deletions": 15,
        "changes": 167,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/seeds/makeseeds.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/seeds/makeseeds.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/makeseeds.py?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -1,32 +1,169 @@\n #!/usr/bin/env python\n #\n-# Generate pnSeed[] from Pieter's DNS seeder\n+# Generate seeds.txt from Pieter's DNS seeder\n #\n \n-NSEEDS=600\n+NSEEDS=512\n+\n+MAX_SEEDS_PER_ASN=2\n+\n+MIN_BLOCKS = 337600\n+\n+# These are hosts that have been observed to be behaving strangely (e.g.\n+# aggressively connecting to every node).\n+SUSPICIOUS_HOSTS = set([\n+    \"130.211.129.106\", \"178.63.107.226\",\n+    \"83.81.130.26\", \"88.198.17.7\", \"148.251.238.178\", \"176.9.46.6\",\n+    \"54.173.72.127\", \"54.174.10.182\", \"54.183.64.54\", \"54.194.231.211\",\n+    \"54.66.214.167\", \"54.66.220.137\", \"54.67.33.14\", \"54.77.251.214\",\n+    \"54.94.195.96\", \"54.94.200.247\"\n+])\n \n import re\n import sys\n-from subprocess import check_output\n+import dns.resolver\n+import collections\n \n-def main():\n-    lines = sys.stdin.readlines()\n+PATTERN_IPV4 = re.compile(r\"^((\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})):(\\d+)$\")\n+PATTERN_IPV6 = re.compile(r\"^\\[([0-9a-z:]+)\\]:(\\d+)$\")\n+PATTERN_ONION = re.compile(r\"^([abcdefghijklmnopqrstuvwxyz234567]{16}\\.onion):(\\d+)$\")\n+PATTERN_AGENT = re.compile(r\"^(\\/Satoshi:0\\.8\\.6\\/|\\/Satoshi:0\\.9\\.(2|3|4|5)\\/|\\/Satoshi:0\\.10\\.\\d{1,2}\\/|\\/Satoshi:0\\.11\\.\\d{1,2}\\/)$\")\n \n-    ips = []\n-    pattern = re.compile(r\"^(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3}):8333\")\n-    for line in lines:\n-        m = pattern.match(line)\n+def parseline(line):\n+    sline = line.split()\n+    if len(sline) < 11:\n+       return None\n+    m = PATTERN_IPV4.match(sline[0])\n+    sortkey = None\n+    ip = None\n+    if m is None:\n+        m = PATTERN_IPV6.match(sline[0])\n         if m is None:\n-            continue\n+            m = PATTERN_ONION.match(sline[0])\n+            if m is None:\n+                return None\n+            else:\n+                net = 'onion'\n+                ipstr = sortkey = m.group(1)\n+                port = int(m.group(2))\n+        else:\n+            net = 'ipv6'\n+            if m.group(1) in ['::']: # Not interested in localhost\n+                return None\n+            ipstr = m.group(1)\n+            sortkey = ipstr # XXX parse IPv6 into number, could use name_to_ipv6 from generate-seeds\n+            port = int(m.group(2))\n+    else:\n+        # Do IPv4 sanity check\n         ip = 0\n         for i in range(0,4):\n-            ip = ip + (int(m.group(i+1)) << (8*(i)))\n+            if int(m.group(i+2)) < 0 or int(m.group(i+2)) > 255:\n+                return None\n+            ip = ip + (int(m.group(i+2)) << (8*(3-i)))\n         if ip == 0:\n-            continue\n-        ips.append(ip)\n+            return None\n+        net = 'ipv4'\n+        sortkey = ip\n+        ipstr = m.group(1)\n+        port = int(m.group(6))\n+    # Skip bad results.\n+    if sline[1] == 0:\n+        return None\n+    # Extract uptime %.\n+    uptime30 = float(sline[7][:-1])\n+    # Extract Unix timestamp of last success.\n+    lastsuccess = int(sline[2])\n+    # Extract protocol version.\n+    version = int(sline[10])\n+    # Extract user agent.\n+    agent = sline[11][1:-1]\n+    # Extract service flags.\n+    service = int(sline[9], 16)\n+    # Extract blocks.\n+    blocks = int(sline[8])\n+    # Construct result.\n+    return {\n+        'net': net,\n+        'ip': ipstr,\n+        'port': port,\n+        'ipnum': ip,\n+        'uptime': uptime30,\n+        'lastsuccess': lastsuccess,\n+        'version': version,\n+        'agent': agent,\n+        'service': service,\n+        'blocks': blocks,\n+        'sortkey': sortkey,\n+    }\n+\n+def filtermultiport(ips):\n+    '''Filter out hosts with more nodes per IP'''\n+    hist = collections.defaultdict(list)\n+    for ip in ips:\n+        hist[ip['sortkey']].append(ip)\n+    return [value[0] for (key,value) in hist.items() if len(value)==1]\n+\n+# Based on Greg Maxwell's seed_filter.py\n+def filterbyasn(ips, max_per_asn, max_total):\n+    # Sift out ips by type\n+    ips_ipv4 = [ip for ip in ips if ip['net'] == 'ipv4']\n+    ips_ipv6 = [ip for ip in ips if ip['net'] == 'ipv6']\n+    ips_onion = [ip for ip in ips if ip['net'] == 'onion']\n+\n+    # Filter IPv4 by ASN\n+    result = []\n+    asn_count = {}\n+    for ip in ips_ipv4:\n+        if len(result) == max_total:\n+            break\n+        try:\n+            asn = int([x.to_text() for x in dns.resolver.query('.'.join(reversed(ip['ip'].split('.'))) + '.origin.asn.cymru.com', 'TXT').response.answer][0].split('\\\"')[1].split(' ')[0])\n+            if asn not in asn_count:\n+                asn_count[asn] = 0\n+            if asn_count[asn] == max_per_asn:\n+                continue\n+            asn_count[asn] += 1\n+            result.append(ip)\n+        except:\n+            sys.stderr.write('ERR: Could not resolve ASN for \"' + ip['ip'] + '\"\\n')\n+\n+    # TODO: filter IPv6 by ASN\n+\n+    # Add back non-IPv4\n+    result.extend(ips_ipv6)\n+    result.extend(ips_onion)\n+    return result\n+\n+def main():\n+    lines = sys.stdin.readlines()\n+    ips = [parseline(line) for line in lines]\n+\n+    # Skip entries with valid address.\n+    ips = [ip for ip in ips if ip is not None]\n+    # Skip entries from suspicious hosts.\n+    ips = [ip for ip in ips if ip['ip'] not in SUSPICIOUS_HOSTS]\n+    # Enforce minimal number of blocks.\n+    ips = [ip for ip in ips if ip['blocks'] >= MIN_BLOCKS]\n+    # Require service bit 1.\n+    ips = [ip for ip in ips if (ip['service'] & 1) == 1]\n+    # Require at least 50% 30-day uptime.\n+    ips = [ip for ip in ips if ip['uptime'] > 50]\n+    # Require a known and recent user agent.\n+    ips = [ip for ip in ips if PATTERN_AGENT.match(ip['agent'])]\n+    # Sort by availability (and use last success as tie breaker)\n+    ips.sort(key=lambda x: (x['uptime'], x['lastsuccess'], x['ip']), reverse=True)\n+    # Filter out hosts with multiple bitcoin ports, these are likely abusive\n+    ips = filtermultiport(ips)\n+    # Look up ASNs and limit results, both per ASN and globally.\n+    ips = filterbyasn(ips, MAX_SEEDS_PER_ASN, NSEEDS)\n+    # Sort the results by IP address (for deterministic output).\n+    ips.sort(key=lambda x: (x['net'], x['sortkey']))\n \n-    for row in range(0, min(NSEEDS,len(ips)), 8):\n-        print \"    \" + \", \".join([ \"0x%08x\"%i for i in ips[row:row+8] ]) + \",\"\n+    for ip in ips:\n+        if ip['net'] == 'ipv6':\n+            print '[%s]:%i' % (ip['ip'], ip['port'])\n+        else:\n+            print '%s:%i' % (ip['ip'], ip['port'])\n \n if __name__ == '__main__':\n     main()"
      },
      {
        "sha": "f1854b27f9a5983ca77e3bec8005aede562cedb8",
        "filename": "contrib/seeds/nodes_main.txt",
        "status": "added",
        "additions": 937,
        "deletions": 0,
        "changes": 937,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/seeds/nodes_main.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/seeds/nodes_main.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/nodes_main.txt?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,937 @@\n+5.2.145.201:8333\n+5.22.142.214:8333\n+5.53.172.197:8333\n+5.189.161.164:8333\n+5.230.140.166:8333\n+5.231.3.130:8333\n+5.255.80.103:8333\n+14.202.230.49:8333\n+18.85.11.130:8333\n+23.91.97.25:8333\n+23.94.100.122:8333\n+23.95.99.132:8333\n+24.115.8.206:8333\n+24.127.128.191:8333\n+24.154.178.25:8333\n+24.207.103.43:8333\n+24.207.104.105:8333\n+24.210.230.150:8333\n+24.224.18.84:8333\n+24.246.168.106:8333\n+27.254.64.47:8333\n+31.6.71.123:8333\n+31.6.71.124:8333\n+31.14.134.13:8333\n+31.30.36.220:8333\n+31.164.6.104:8333\n+31.170.106.203:8333\n+31.185.134.201:8333\n+31.204.128.99:8333\n+31.204.128.219:8333\n+37.1.219.88:8333\n+37.97.132.109:8333\n+37.120.160.55:8333\n+37.120.169.123:8333\n+37.139.32.46:8333\n+37.221.163.218:8333\n+38.130.192.72:8333\n+41.75.96.80:8333\n+45.3.0.49:8333\n+45.33.72.185:8333\n+45.33.96.129:8333\n+45.56.4.63:8333\n+45.79.0.127:8333\n+45.79.80.102:8333\n+45.79.97.30:8333\n+45.79.132.219:8333\n+46.21.97.135:8333\n+46.28.205.67:8333\n+46.28.206.188:8333\n+46.29.20.209:8333\n+46.50.234.179:8333\n+46.101.160.168:8333\n+46.166.161.35:8333\n+46.166.161.103:8333\n+46.182.132.100:8333\n+46.218.227.92:8333\n+46.226.109.20:8333\n+46.227.66.132:8333\n+46.227.66.138:8333\n+46.229.165.154:8333\n+46.229.165.155:8333\n+46.229.238.187:8333\n+46.234.104.48:8333\n+46.239.107.74:8333\n+46.244.0.138:8333\n+46.254.72.195:8333\n+50.5.13.44:8333\n+50.7.37.114:8333\n+50.30.37.103:8333\n+50.39.105.60:8333\n+50.106.40.231:8333\n+52.29.0.37:8333\n+52.76.192.246:8333\n+54.152.192.179:8333\n+54.169.64.174:8333\n+54.175.160.22:8333\n+54.199.128.0:8333\n+58.96.171.129:8333\n+58.161.238.57:8333\n+60.251.195.221:8333\n+61.35.225.19:8333\n+62.43.130.178:8333\n+62.65.39.12:8333\n+62.107.200.30:8333\n+62.133.194.2:8333\n+62.181.238.186:8333\n+62.183.22.50:8333\n+62.210.85.120:8333\n+62.210.162.89:8333\n+62.238.34.125:8333\n+64.25.171.73:8333\n+64.27.166.30:8333\n+64.53.137.101:8333\n+64.71.72.44:8333\n+64.83.225.146:8333\n+64.121.3.163:8333\n+64.203.102.86:8333\n+65.94.131.59:8333\n+65.188.136.233:8333\n+66.11.162.218:8333\n+66.23.228.133:8333\n+66.90.137.89:8333\n+66.114.33.49:8333\n+66.150.105.77:8333\n+66.172.10.4:8333\n+66.194.38.250:8333\n+66.194.38.253:8333\n+66.194.38.254:8333\n+66.231.97.172:8333\n+66.240.237.155:8333\n+67.159.13.34:8333\n+67.205.74.206:8333\n+67.221.193.55:8333\n+67.227.72.17:8333\n+68.65.120.53:8333\n+68.65.205.226:9000\n+68.144.4.34:8333\n+69.39.49.199:8333\n+69.50.171.205:8333\n+69.65.41.21:8333\n+69.113.98.61:8333\n+69.119.97.39:8333\n+69.146.70.124:8333\n+69.193.71.2:8333\n+70.46.10.237:8333\n+70.80.200.187:8333\n+70.185.97.117:8333\n+71.254.160.25:8333\n+72.28.203.5:8333\n+72.52.130.110:8333\n+72.83.194.122:8333\n+72.128.32.167:8333\n+72.179.136.80:8333\n+72.235.38.70:8333\n+74.50.44.193:8333\n+74.72.60.83:8333\n+74.80.234.116:8333\n+74.207.233.193:8333\n+75.112.233.128:8333\n+75.118.166.197:8333\n+75.140.0.241:8333\n+75.159.240.66:8333\n+75.174.5.26:8333\n+76.72.160.252:8333\n+76.72.160.254:8333\n+76.74.170.112:8333\n+76.79.201.54:8333\n+76.175.166.164:8333\n+76.179.105.27:8333\n+77.68.37.200:8333\n+77.234.49.196:8333\n+77.247.229.93:8333\n+78.24.72.78:8333\n+78.47.32.147:8333\n+78.84.100.95:8333\n+78.121.69.23:8333\n+78.129.167.5:8333\n+78.193.96.155:8333\n+79.19.37.179:8333\n+79.132.230.144:8333\n+79.133.43.63:8333\n+79.134.201.66:8333\n+79.169.35.235:8333\n+80.57.227.14:8333\n+80.64.65.87:8333\n+80.86.92.70:8333\n+80.100.203.151:8333\n+80.101.32.121:8333\n+80.161.178.73:8333\n+80.240.129.170:8333\n+81.7.11.50:8333\n+81.7.11.55:8333\n+81.17.17.40:9333\n+81.30.39.83:8333\n+81.90.36.7:9444\n+81.136.224.77:8333\n+81.162.231.211:8333\n+81.184.0.143:8333\n+81.198.128.86:8333\n+82.11.33.229:8333\n+82.79.128.134:8333\n+82.118.233.111:8333\n+82.135.139.30:8333\n+82.199.102.10:8333\n+82.221.106.17:8333\n+82.221.108.21:8333\n+82.221.108.27:8333\n+83.137.41.3:8333\n+83.142.197.168:8333\n+83.143.130.19:8333\n+83.150.9.196:8333\n+83.183.17.191:8333\n+83.227.173.83:8333\n+83.230.5.15:8333\n+83.233.105.151:443\n+83.246.75.8:8333\n+83.250.133.158:8333\n+83.255.66.118:8334\n+84.24.69.59:8333\n+84.42.193.6:8333\n+84.45.98.87:8333\n+84.54.128.11:8333\n+84.212.200.24:8333\n+84.215.198.109:8333\n+84.230.4.177:8333\n+85.95.228.83:8333\n+85.95.228.123:8333\n+85.114.128.134:8333\n+85.214.66.168:8333\n+85.214.147.162:8333\n+85.243.168.4:8333\n+86.1.0.18:8333\n+87.79.77.106:8333\n+87.91.156.110:8333\n+87.236.196.222:8333\n+88.85.75.152:8333\n+88.87.1.230:8333\n+88.87.92.102:8333\n+88.89.69.202:8333\n+88.97.72.229:8333\n+88.164.117.99:8333\n+88.198.32.131:8333\n+88.202.230.87:8333\n+88.214.193.154:8343\n+88.214.194.226:8343\n+89.10.155.88:8333\n+89.46.101.44:8333\n+89.163.224.212:8333\n+89.174.248.20:8333\n+89.202.231.198:8333\n+89.212.75.6:8333\n+90.149.38.172:8333\n+90.169.106.139:8333\n+91.64.101.150:8333\n+91.65.196.179:8333\n+91.121.80.17:8333\n+91.126.77.77:8333\n+91.145.76.156:8333\n+91.152.150.35:8333\n+91.192.137.17:8333\n+91.196.170.110:8333\n+91.197.44.133:8333\n+91.207.68.144:8333\n+91.210.105.28:8333\n+91.211.102.101:8333\n+91.211.106.34:8333\n+91.214.200.205:8333\n+91.220.43.146:8333\n+91.222.71.89:8333\n+91.224.140.242:8333\n+91.229.76.14:8333\n+92.27.7.209:8333\n+92.51.167.88:8333\n+92.247.229.163:8333\n+93.84.114.106:8333\n+93.113.36.172:8333\n+93.188.224.253:8333\n+94.75.239.69:8333\n+94.190.227.112:8333\n+94.214.2.74:8333\n+94.224.162.65:8333\n+94.236.198.253:8333\n+94.242.229.158:8333\n+95.84.138.99:8333\n+95.95.168.87:8333\n+95.110.234.93:8333\n+95.130.9.200:8333\n+95.165.168.168:8333\n+95.170.235.254:8333\n+95.211.130.154:8333\n+96.46.68.104:8333\n+96.127.202.148:8333\n+97.76.171.35:8333\n+98.160.160.67:8333\n+99.126.197.187:8333\n+99.198.173.1:8333\n+101.100.174.138:8333\n+101.164.201.208:8333\n+103.224.165.48:8333\n+104.128.225.223:8333\n+104.128.228.252:8333\n+104.131.192.94:8333\n+104.155.45.201:8334\n+104.194.28.195:8663\n+104.211.1.27:8333\n+104.221.38.177:8333\n+104.236.9.79:8333\n+104.236.129.178:8333\n+104.236.186.249:8333\n+104.236.194.15:8333\n+104.238.128.214:8333\n+104.238.130.182:8333\n+106.38.234.84:8333\n+106.185.36.204:8333\n+106.185.38.67:8333\n+107.6.4.145:8333\n+107.150.2.6:8333\n+107.150.40.234:8333\n+107.170.13.184:8333\n+107.181.250.216:8333\n+107.191.101.111:8333\n+107.191.106.115:8333\n+108.59.12.163:8333\n+108.161.129.247:8333\n+109.193.160.140:8333\n+109.197.13.54:8333\n+109.230.7.248:8333\n+109.234.106.191:8333\n+109.236.137.80:8333\n+109.251.161.121:8333\n+112.65.231.226:8333\n+115.70.166.57:8333\n+115.159.42.80:8333\n+117.18.73.34:8333\n+118.67.201.40:8333\n+118.100.86.246:8333\n+118.110.104.152:8333\n+119.224.64.141:8333\n+120.55.193.136:8333\n+122.106.169.178:8333\n+123.203.174.15:8333\n+123.255.232.94:8333\n+124.148.165.165:8333\n+124.232.141.31:8333\n+128.30.92.69:8333\n+128.39.141.182:8333\n+128.84.167.20:8333\n+128.111.73.10:8333\n+128.127.38.195:8333\n+128.140.224.162:8333\n+128.199.101.104:8333\n+128.233.224.35:8333\n+128.253.3.193:20020\n+130.180.228.138:8333\n+130.185.144.213:8333\n+130.255.73.207:8333\n+133.218.233.11:8333\n+134.249.128.23:8333\n+136.159.234.234:8333\n+137.116.160.176:8333\n+139.162.2.145:8333\n+139.162.23.117:8333\n+141.134.69.253:8333\n+141.255.162.215:8333\n+144.122.163.187:8333\n+145.131.3.54:8333\n+145.255.4.94:8333\n+146.0.32.101:8337\n+147.83.72.91:8333\n+148.103.28.68:8333\n+149.5.32.102:8333\n+149.210.164.195:8333\n+150.101.163.241:8333\n+151.236.11.189:8333\n+152.3.136.56:8333\n+154.20.208.25:8333\n+158.181.104.149:8333\n+159.253.96.226:8333\n+160.36.130.180:8333\n+162.209.1.233:8333\n+162.209.4.125:8333\n+162.209.106.123:8333\n+162.210.198.184:8333\n+162.248.99.164:53011\n+162.248.102.117:8333\n+162.251.108.53:8333\n+163.44.2.48:8333\n+163.158.36.17:8333\n+166.230.71.67:8333\n+167.160.36.62:8333\n+167.160.169.92:8333\n+168.93.129.220:8333\n+169.55.99.84:8333\n+169.228.66.43:8333\n+172.9.169.242:8333\n+173.32.11.194:8333\n+173.230.228.136:8333\n+173.246.107.34:8333\n+173.254.235.34:8333\n+174.0.128.222:8333\n+174.25.130.148:8333\n+174.50.64.101:8333\n+175.140.232.141:8333\n+176.36.37.62:8333\n+176.46.9.96:8333\n+176.124.110.27:8333\n+177.39.16.102:8333\n+178.17.173.2:8333\n+178.62.5.248:8333\n+178.62.70.16:8333\n+178.62.203.185:8333\n+178.79.160.118:8333\n+178.169.206.244:8333\n+178.193.234.62:8333\n+178.199.96.108:8333\n+178.254.18.96:8333\n+178.254.34.161:8333\n+178.255.41.123:8333\n+180.210.34.58:9801\n+182.92.226.212:8333\n+182.171.246.142:8333\n+184.23.8.9:8333\n+184.58.162.35:8333\n+184.154.9.170:8333\n+185.8.238.165:8333\n+185.24.97.11:8333\n+185.31.137.139:8333\n+185.38.44.64:8333\n+185.53.128.180:8333\n+185.53.129.244:8333\n+185.77.129.119:8333\n+185.77.129.156:8333\n+185.82.203.92:8333\n+188.20.97.18:8333\n+188.126.8.14:8333\n+188.138.33.239:8333\n+188.155.136.70:8333\n+188.166.229.112:8333\n+188.182.108.129:8333\n+188.226.225.174:8010\n+188.242.171.8:8333\n+188.243.4.139:8333\n+190.10.9.234:8333\n+190.10.10.147:8333\n+190.81.160.184:8333\n+190.85.201.37:8333\n+192.34.227.230:8333\n+192.77.189.200:8333\n+192.124.224.7:8333\n+192.146.137.1:8333\n+192.203.228.71:8333\n+192.206.202.20:8333\n+193.0.109.3:8333\n+193.41.229.130:8333\n+193.41.229.156:8333\n+193.49.43.219:8333\n+193.147.71.120:8333\n+193.179.65.233:8333\n+193.183.99.46:8333\n+193.192.37.135:8333\n+193.234.224.195:8333\n+194.58.108.213:8333\n+194.187.96.2:8333\n+194.255.31.59:8333\n+195.36.6.101:8333\n+195.58.238.243:8333\n+195.197.175.190:8333\n+195.239.1.66:8333\n+198.48.196.230:8333\n+198.50.192.160:8333\n+198.57.210.27:8333\n+198.84.195.179:8333\n+198.167.140.8:8333\n+198.204.224.106:8333\n+199.127.226.245:8333\n+199.201.110.8:8333\n+199.233.234.90:8333\n+200.116.98.185:8333\n+202.60.70.18:8333\n+203.151.140.14:8333\n+204.112.203.52:8333\n+205.200.247.149:8333\n+207.226.141.253:8333\n+207.255.42.202:8333\n+208.53.164.19:8333\n+208.66.68.127:8333\n+208.66.68.130:8333\n+208.71.171.232:8341\n+208.76.200.200:8333\n+208.82.98.189:8333\n+208.85.193.31:8333\n+208.111.48.41:8333\n+208.111.48.45:8333\n+209.34.232.72:8333\n+209.81.9.223:8333\n+209.90.224.2:8333\n+209.90.224.4:8333\n+209.126.98.174:8333\n+209.136.72.69:8333\n+209.195.4.74:8333\n+209.197.13.62:8333\n+211.72.227.8:8333\n+212.51.144.42:8333\n+212.71.233.127:8333\n+212.126.14.122:8333\n+212.159.44.50:8333\n+213.5.36.58:8333\n+213.57.33.10:8333\n+213.66.205.194:8333\n+213.136.73.125:8333\n+213.155.3.216:8333\n+213.155.7.24:8333\n+213.167.17.6:8333\n+213.223.138.13:8333\n+216.15.78.182:8333\n+216.38.129.164:8333\n+216.48.168.8:8333\n+216.169.141.169:8333\n+216.245.206.181:8333\n+216.249.204.161:8333\n+216.250.138.230:8333\n+217.11.225.189:8333\n+217.12.34.158:8333\n+217.12.202.33:8333\n+217.20.171.43:8333\n+217.23.1.126:8333\n+217.23.11.138:8333\n+217.111.66.79:8333\n+217.155.202.191:8333\n+217.158.9.102:8333\n+217.172.32.18:20993\n+220.245.196.37:8333\n+[2001:1291:2bf:1::100]:8333\n+[2001:1620:f00:282::2]:8333\n+[2001:1620:f00:8282::1]:8333\n+[2001:19f0:5000:8de8:5400:ff:fe12:55e4]:8333\n+[2001:19f0:6c00:9103:5400:ff:fe10:a8d3]:8333\n+[2001:1b60:3:172:142b:6dff:fe7a:117]:8333\n+[2001:410:a000:4050:8463:90b0:fffb:4e58]:8333\n+[2001:4128:6135:2010:21e:bff:fee8:a3c0]:8333\n+[2001:41d0:1008:761::17c]:8333\n+[2001:41d0:1:45d8::1]:8333\n+[2001:41d0:1:6cd3::]:8333\n+[2001:41d0:1:8b26::1]:8333\n+[2001:41d0:1:afda::]:8200\n+[2001:41d0:1:b26b::1]:8333\n+[2001:41d0:1:c139::1]:8333\n+[2001:41d0:1:c8d7::1]:8333\n+[2001:41d0:1:f59f::33]:8333\n+[2001:41d0:1:f7cc::1]:8333\n+[2001:41d0:2:1021::1]:8333\n+[2001:41d0:2:37c3::]:8200\n+[2001:41d0:2:4797:2323:2323:2323:2323]:8333\n+[2001:41d0:2:53df::]:8333\n+[2001:41d0:2:9c94::1]:8333\n+[2001:41d0:2:9d3e::1]:8333\n+[2001:41d0:2:a24f::]:8333\n+[2001:41d0:2:a35a::]:8333\n+[2001:41d0:2:b2b8::]:8333\n+[2001:41d0:2:c1d9::]:8333\n+[2001:41d0:2:c6e::]:8333\n+[2001:41d0:2:c9bf::]:8333\n+[2001:41d0:2:f1a5::]:8333\n+[2001:41d0:52:a00::105f]:8333\n+[2001:41d0:52:cff::6f5]:8333\n+[2001:41d0:52:d00::6e2]:8333\n+[2001:41d0:8:3e75::1]:8333\n+[2001:41d0:8:62ab::1]:8333\n+[2001:41d0:8:6728::]:8333\n+[2001:41d0:8:b30a::1]:8333\n+[2001:41d0:8:bc26::1]:8333\n+[2001:41d0:8:be9a::1]:8333\n+[2001:41d0:8:d984::]:8333\n+[2001:41d0:8:eb8b::]:8333\n+[2001:41d0:a:13a2::1]:8333\n+[2001:41d0:a:2b18::1]:8333\n+[2001:41d0:a:2d14::]:8333\n+[2001:41d0:a:4558::1df2:76d3]:8333\n+[2001:41d0:a:4aaa::]:8333\n+[2001:41d0:a:635b::1]:8333\n+[2001:41d0:a:63d8::1]:8333\n+[2001:41d0:a:6c29::1]:8333\n+[2001:41d0:a:f9cd::1]:8333\n+[2001:41d0:d:20a4::]:8333\n+[2001:41d0:e:26b::1]:8333\n+[2001:41d0:fc8c:a200:7a24:afff:fe9d:c69b]:8333\n+[2001:41f0:61::7]:8333\n+[2001:41f0::2]:8333\n+[2001:44b8:41bd:6101:148e:4022:4950:e861]:8333\n+[2001:470:1:2f9:0:1:107a:a301]:8333\n+[2001:470:1f0b:ad6::2]:8333\n+[2001:470:1f11:12d5::ae1:5611]:8333\n+[2001:470:1f14:7d::2]:8333\n+[2001:470:27:ce::2]:8333\n+[2001:470:41:6::2]:8333\n+[2001:470:507d:0:6ab5:99ff:fe73:ac18]:8333\n+[2001:470:583e::2a]:8333\n+[2001:470:5f:5f::232]:8333\n+[2001:470:66:119::2]:8333\n+[2001:470:6c4f::cafe]:8333\n+[2001:470:6f:327:913b:7fe:8545:a4f5]:8333\n+[2001:470:7dda:1::1]:8333\n+[2001:470:95c1::2]:8333\n+[2001:470:b1d0:ffff::1000]:8333\n+[2001:470:d00d:0:3664:a9ff:fe9a:5150]:8333\n+[2001:470:fab7:1::1]:8333\n+[2001:4800:7819:104:be76:4eff:fe05:c828]:8333\n+[2001:4800:7819:104:be76:4eff:fe05:c9a0]:8333\n+[2001:4801:7819:74:b745:b9d5:ff10:a61a]:8333\n+[2001:4801:7819:74:b745:b9d5:ff10:aaec]:8333\n+[2001:4801:7828:104:be76:4eff:fe10:1325]:8333\n+[2001:4802:7800:1:be76:4eff:fe20:f023]:8333\n+[2001:4802:7800:2:30d7:1775:ff20:1858]:8333\n+[2001:4802:7800:2:be76:4eff:fe20:6c26]:8333\n+[2001:4802:7802:101:be76:4eff:fe20:256]:8333\n+[2001:4802:7802:103:be76:4eff:fe20:2de8]:8333\n+[2001:4830:1100:2e8::2]:8333\n+[2001:4b98:dc2:41:216:3eff:fe56:f659]:8333\n+[2001:4ba0:fffa:5d::93]:8333\n+[2001:4ba0:ffff:1be:1:1005:0:1]:8333\n+[2001:4dd0:ff00:867f::3]:8333\n+[2001:4dd0:ff00:9a67::9]:8333\n+[2001:5c0:1400:b::3cc7]:8333\n+[2001:610:1b19::3]:8333\n+[2001:610:600:a41::2]:8333\n+[2001:67c:26b4::]:8333\n+[2001:8d8:840:500::39:1ae]:8333\n+[2001:8d8:965:4a00::10:9343]:8333\n+[2001:980:4650:1:2e0:53ff:fe13:2449]:8333\n+[2001:981:46:1:ba27:ebff:fe5b:edee]:8333\n+[2001:9c8:53e9:369a:226:2dff:fe1b:7472]:8333\n+[2001:9d8:cafe:3::87]:8333\n+[2001:b10:11:21:3e07:54ff:fe48:7248]:8333\n+[2001:ba8:1f1:f34c::2]:8333\n+[2001:bc8:2310:100::1]:8333\n+[2001:bc8:3427:101:7a4f:8be:2611:6e79]:8333\n+[2001:bc8:3505:200::1]:8333\n+[2001:cc0:a004::30:1d]:8333\n+[2001:e42:102:1209:153:121:76:171]:8333\n+[2002:17ea:14eb::17ea:14eb]:8333\n+[2002:2f8:2bc5::2f8:2bc5]:8333\n+[2002:4047:482c::4047:482c]:8333\n+[2002:45c3:8cca::45c3:8cca]:8333\n+[2002:46bb:8a41:0:226:b0ff:feed:5f12]:8888\n+[2002:46bb:8c3c:0:8d55:8fbb:15fa:f4e0]:8765\n+[2002:4c48:a0fe::4c48:a0fe]:8333\n+[2002:4d44:25c8::4d44:25c8]:8333\n+[2002:505f:aaa2::505f:aaa2]:8333\n+[2002:5bc1:799d::5bc1:799d]:8333\n+[2002:6dec:5472::6dec:5472]:8333\n+[2002:8c6d:6521:9617:12bf:48ff:fed8:1724]:8333\n+[2002:ac52:94e2::ac52:94e2]:8333\n+[2002:af7e:3eca::af7e:3eca]:8333\n+[2002:b009:20c5::b009:20c5]:8333\n+[2002:c06f:39a0::c06f:39a0]:8333\n+[2002:c23a:738a::c23a:738a]:8333\n+[2002:c70f:7442::c70f:7442]:8333\n+[2002:cec5:be4f::cec5:be4f]:8333\n+[2002:d149:9e3a::d149:9e3a]:8333\n+[2002:d917:ca5::d917:ca5]:8333\n+[2400:8900::f03c:91ff:fe50:153f]:8333\n+[2400:8900::f03c:91ff:fe6e:823e]:8333\n+[2400:8900::f03c:91ff:fea8:1934]:8333\n+[2400:8901::f03c:91ff:fe26:c4d6]:8333\n+[2400:8901::f03c:91ff:fec8:4280]:8333\n+[2400:8901::f03c:91ff:fec8:660f]:8333\n+[2401:1800:7800:102:be76:4eff:fe1c:559]:8333\n+[2401:1800:7800:102:be76:4eff:fe1c:a7d]:8333\n+[2405:aa00:2::40]:8333\n+[2600:3c00::f03c:91ff:fe18:59b2]:8333\n+[2600:3c00::f03c:91ff:fe26:bfb6]:8333\n+[2600:3c00::f03c:91ff:fe33:88e3]:8333\n+[2600:3c00::f03c:91ff:fe6e:7297]:8333\n+[2600:3c00::f03c:91ff:fe84:8a6e]:8333\n+[2600:3c01::f03c:91ff:fe18:6adf]:8333\n+[2600:3c01::f03c:91ff:fe26:c4b8]:8333\n+[2600:3c01::f03c:91ff:fe3b:1f76]:8333\n+[2600:3c01::f03c:91ff:fe50:5e06]:8333\n+[2600:3c01::f03c:91ff:fe61:289b]:8333\n+[2600:3c01::f03c:91ff:fe69:89e9]:8333\n+[2600:3c01::f03c:91ff:fe84:ac15]:8333\n+[2600:3c01::f03c:91ff:fe98:68bb]:8333\n+[2600:3c02::f03c:91ff:fe26:713]:8333\n+[2600:3c02::f03c:91ff:fe26:c49e]:8333\n+[2600:3c02::f03c:91ff:fe84:97d8]:8333\n+[2600:3c02::f03c:91ff:fec8:8feb]:8333\n+[2600:3c03::f03c:91ff:fe18:da80]:8333\n+[2600:3c03::f03c:91ff:fe26:c49b]:8333\n+[2600:3c03::f03c:91ff:fe50:5fa7]:8333\n+[2600:3c03::f03c:91ff:fe67:d2e]:8333\n+[2600:3c03::f03c:91ff:fe6e:1803]:8333\n+[2600:3c03::f03c:91ff:fec8:4bbe]:8333\n+[2600:3c03::f03c:91ff:fee4:4e16]:8333\n+[2601:18d:8300:58a6::2e4]:8333\n+[2601:240:4600:40c0:250:56ff:fea4:6305]:8333\n+[2601:581:c200:a719:542c:9cd5:4852:f7d9]:8333\n+[2601:647:4900:85f1:ca2a:14ff:fe51:bb35]:8333\n+[2601:c2:c002:b300:54a0:15b5:19f7:530d]:8333\n+[2602:306:ccff:ad7f:b116:52be:64ba:db3a]:8333\n+[2602:ae:1982:9400:846:f78c:fec:4d57]:8333\n+[2602:ffc5:1f::1f:2d61]:8333\n+[2602:ffc5:1f::1f:9211]:8333\n+[2602:ffc5::75d5:c1c3]:8333\n+[2602:ffc5::ffc5:b844]:8333\n+[2602:ffe8:100:2::457:936b]:8333\n+[2602:ffe8:100:2::9d20:2e3c]:8333\n+[2602:ffea:1001:72b::578b]:8333\n+[2602:ffea:a::24c4:d9fd]:8333\n+[2604:0:c1:100:1ec1:deff:fe54:2235]:8333\n+[2604:180:1:1af::42a9]:8333\n+[2604:180:3:702::c9de]:8333\n+[2604:4080:1114:0:3285:a9ff:fe93:850c]:8333\n+[2604:6000:ffc0:3c:64a3:94d0:4f1d:1da8]:8333\n+[2605:6000:f380:9a01:ba09:8aff:fed4:3511]:8333\n+[2605:6001:e00f:7b00:c587:6d91:6eff:eeba]:8333\n+[2605:f700:c0:1::25c3:2a3e]:8333\n+[2606:6000:a441:9903:5054:ff:fe78:66ff]:8333\n+[2607:5300:100:200::1c83]:9334\n+[2607:5300:10::a1]:8333\n+[2607:5300:60:1c2f::1]:8333\n+[2607:5300:60:2b90::1]:8333\n+[2607:5300:60:3320::1]:8333\n+[2607:5300:60:385::1]:8333\n+[2607:5300:60:4a85::]:8333\n+[2607:5300:60:65e4::]:8333\n+[2607:5300:60:6918::]:8333\n+[2607:5300:60:711a:78::a7b5]:8333\n+[2607:5300:60:714::1]:8333\n+[2607:5300:60:870::1]:8333\n+[2607:5300:60:952e:3733::1414]:8333\n+[2607:f1c0:848:1000::48:943c]:8333\n+[2607:f2e0:f:5df::2]:8333\n+[2607:f748:1200:f8:21e:67ff:fe99:8f07]:8333\n+[2607:f948:0:1::7]:8333\n+[2607:ff68:100:36::131]:8333\n+[2803:6900:1::117]:8333\n+[2a00:1098:0:80:1000:25:0:1]:8333\n+[2a00:1178:2:43:5054:ff:fe84:f86f]:8333\n+[2a00:1178:2:43:5054:ff:fee7:2eb6]:8333\n+[2a00:1178:2:43:8983:cc27:d72:d97a]:8333\n+[2a00:1328:e100:cc42:230:48ff:fe92:55c]:8333\n+[2a00:14f0:e000:80d2:cd1a::1]:8333\n+[2a00:1630:2:1802:188:122:91:11]:8333\n+[2a00:18e0:0:1800::1]:8333\n+[2a00:18e0:0:dcc5:109:234:106:191]:8333\n+[2a00:1a28:1157:87::94c7]:8333\n+[2a00:1ca8:37::a5fc:40d1]:8333\n+[2a00:1ca8:37::ab6d:ce2c]:8333\n+[2a00:7143:100:0:216:3eff:fe2e:74a3]:8333\n+[2a00:7143:100:0:216:3eff:fed3:5c21]:8333\n+[2a00:7c80:0:45::123]:8333\n+[2a00:dcc0:eda:98:183:193:c382:6bdb]:8333\n+[2a00:dcc0:eda:98:183:193:f72e:d943]:8333\n+[2a00:f820:17::4af:1]:8333\n+[2a00:f940:2:1:2::101d]:8333\n+[2a00:f940:2:1:2::6ac]:8333\n+[2a01:1b0:7999:402::131]:8333\n+[2a01:238:42dd:f900:7a6c:2bc6:4041:c43]:8333\n+[2a01:238:4313:6300:2189:1c97:696b:5ea]:8333\n+[2a01:488:66:1000:5c33:91f9:0:1]:8333\n+[2a01:488:66:1000:b01c:178d:0:1]:8333\n+[2a01:4f8:100:34ce::2]:8333\n+[2a01:4f8:100:34e4::2]:8333\n+[2a01:4f8:100:44e7::2]:8333\n+[2a01:4f8:100:510e::2]:8333\n+[2a01:4f8:100:5128::2]:8333\n+[2a01:4f8:110:5105::2]:8333\n+[2a01:4f8:110:516c::2]:8333\n+[2a01:4f8:120:43e4::2]:8333\n+[2a01:4f8:120:62e6::2]:8333\n+[2a01:4f8:120:702e::2]:8333\n+[2a01:4f8:120:8203::2]:8333\n+[2a01:4f8:121:234d::2]:8333\n+[2a01:4f8:121:261::2]:8333\n+[2a01:4f8:130:11ea::2]:8333\n+[2a01:4f8:130:3332::2]:8333\n+[2a01:4f8:130:40ab::2]:8333\n+[2a01:4f8:130:632c::2]:8333\n+[2a01:4f8:130:6366::2]:8333\n+[2a01:4f8:130:934f::2]:8333\n+[2a01:4f8:131:33ad:fea1::666]:8333\n+[2a01:4f8:140:2195::2]:8333\n+[2a01:4f8:140:6333::2]:8333\n+[2a01:4f8:140:930d::2]:8333\n+[2a01:4f8:140:93b0::2]:8333\n+[2a01:4f8:141:1167::2]:8333\n+[2a01:4f8:141:186::2]:8333\n+[2a01:4f8:141:53f0::2]:8333\n+[2a01:4f8:150:336a::2]:8333\n+[2a01:4f8:150:72ee::4202]:8333\n+[2a01:4f8:150:8324::2]:9001\n+[2a01:4f8:151:21ca::2]:8333\n+[2a01:4f8:151:41c2:0:5404:a67e:f250]:8333\n+[2a01:4f8:151:5128::2]:8333\n+[2a01:4f8:151:52c6::154]:8333\n+[2a01:4f8:151:6347::2]:9001\n+[2a01:4f8:160:5136::2]:8333\n+[2a01:4f8:160:72c5::2858:e1c5]:8333\n+[2a01:4f8:160:72c5::593b:60d5]:8333\n+[2a01:4f8:160:814f::2]:8333\n+[2a01:4f8:161:13d0::2]:8333\n+[2a01:4f8:161:228f::2]:8333\n+[2a01:4f8:161:51c4::2]:8333\n+[2a01:4f8:161:60a7::2]:8333\n+[2a01:4f8:161:7026::2]:8333\n+[2a01:4f8:161:9184::2]:8333\n+[2a01:4f8:162:2108::2]:8333\n+[2a01:4f8:162:218c::2]:8333\n+[2a01:4f8:162:4443::2]:8333\n+[2a01:4f8:162:51a3::2]:8333\n+[2a01:4f8:171:b93::2]:8333\n+[2a01:4f8:190:1483::1]:8333\n+[2a01:4f8:190:4495::2]:8333\n+[2a01:4f8:190:64c9::2]:8333\n+[2a01:4f8:190:91ce::2]:8333\n+[2a01:4f8:191:2194::83]:8333\n+[2a01:4f8:191:40e8::2]:8333\n+[2a01:4f8:191:44b4::2]:8333\n+[2a01:4f8:191:8242::2]:8333\n+[2a01:4f8:191:83a2::2]:8333\n+[2a01:4f8:192:11b2::2]:8333\n+[2a01:4f8:192:216c::2]:8333\n+[2a01:4f8:192:22b3::2]:8333\n+[2a01:4f8:192:440b::2]:8333\n+[2a01:4f8:192:db::2]:8333\n+[2a01:4f8:200:1012::2]:8333\n+[2a01:4f8:200:23d1::dead:beef]:8333\n+[2a01:4f8:200:506d::2]:8333\n+[2a01:4f8:200:51f0::2]:8333\n+[2a01:4f8:200:5389::2]:8333\n+[2a01:4f8:200:53e3::2]:8333\n+[2a01:4f8:200:6344::2]:8333\n+[2a01:4f8:200:6396::2]:8333\n+[2a01:4f8:200:63af::119]:8333\n+[2a01:4f8:200:71e3:78b4:f3ff:fead:e8cf]:8333\n+[2a01:4f8:201:214c::2]:8333\n+[2a01:4f8:201:233:1::3]:8333\n+[2a01:4f8:201:3e3::2]:8333\n+[2a01:4f8:201:6011::4]:8333\n+[2a01:4f8:201:60d5::2]:8333\n+[2a01:4f8:202:265::2]:8333\n+[2a01:4f8:202:3115::2]:8333\n+[2a01:4f8:202:31e3::2]:8333\n+[2a01:4f8:202:31ef::2]:8333\n+[2a01:4f8:202:3392::2]:8333\n+[2a01:4f8:202:53c3::2]:8333\n+[2a01:4f8:202:63f4::2]:8333\n+[2a01:4f8:202:7227::2]:8333\n+[2a01:4f8:210:2227::2]:8333\n+[2a01:4f8:210:24aa::2]:8333\n+[2a01:4f8:211:14cf::2]:8333\n+[2a01:4f8:211:181b::2]:8333\n+[2a01:4f8:212:289e::2]:8333\n+[2a01:4f8:212:33db::2]:18333\n+[2a01:4f8:a0:112f::2]:8333\n+[2a01:4f8:a0:3174::2]:8333\n+[2a01:4f8:a0:328c::2]:8333\n+[2a01:4f8:a0:5243::2]:8333\n+[2a01:4f8:c17:19b9::2]:8333\n+[2a01:4f8:c17:1a41::2]:8333\n+[2a01:4f8:c17:1a92::2]:8333\n+[2a01:4f8:c17:273::2]:8333\n+[2a01:4f8:c17:435::2]:8333\n+[2a01:4f8:c17:755::2]:8333\n+[2a01:4f8:c17:b54::2]:8333\n+[2a01:4f8:d16:9384::2]:8333\n+[2a01:608:ffff:a009:8bf5:879d:e51a:f837]:8333\n+[2a01:680:10:10:f2de:f1ff:fec9:dc0]:8333\n+[2a01:7c8:aaac:1f6:5054:ff:fe30:e585]:8333\n+[2a01:7c8:aaac:20b:5054:ff:fe24:435e]:8333\n+[2a01:7c8:aaac:43d:5054:ff:fe4e:3dd4]:8333\n+[2a01:7c8:aaad:256::1]:8333\n+[2a01:7c8:aab6:ea:5054:ff:feff:eac3]:8333\n+[2a01:7c8:aab9:5a:5054:ff:fe89:7b26]:8333\n+[2a01:7c8:aabc:2c8:5054:ff:fe35:6581]:8333\n+[2a01:7e00::f03c:91ff:fe18:301e]:8333\n+[2a01:7e00::f03c:91ff:fe18:3942]:8333\n+[2a01:7e00::f03c:91ff:fe26:8c87]:8333\n+[2a01:7e00::f03c:91ff:fe50:6206]:8333\n+[2a01:7e00::f03c:91ff:fe67:559d]:8333\n+[2a01:7e00::f03c:91ff:fe84:434f]:8333\n+[2a01:7e00::f03c:91ff:fe89:1143]:8333\n+[2a01:7e00::f03c:91ff:fe98:2505]:8333\n+[2a01:7e00::f03c:91ff:fedb:352e]:8333\n+[2a01:7e01::f03c:91ff:fec8:d7b5]:8333\n+[2a01:e34:ee33:1640:c504:f677:b28a:ba42]:8333\n+[2a01:e35:2e7e:bc0:e079:f55e:cef3:b5d7]:8333\n+[2a01:e35:2ee5:610:21f:d0ff:fe4e:7460]:8333\n+[2a01:e35:8a3f:47c0:c617:feff:fe3c:9fbd]:8333\n+[2a01:e35:8aca:6a0:211:aff:fe5e:295e]:8333\n+[2a02:180:a:18:81:7:11:50]:8333\n+[2a02:1810:1d87:6a00:5604:a6ff:fe60:d87d]:8333\n+[2a02:2168:1144:5c01:d63d:7eff:fedd:4f8e]:8333\n+[2a02:2498:6d7b:7001:b508:b39d:2cea:5b7a]:8333\n+[2a02:2528:503:2::15]:8333\n+[2a02:2528:fa:1a56:216:44ff:fe6a:d112]:8333\n+[2a02:27f8:2012:0:e9f7:268f:c441:6129]:8333\n+[2a02:348:86:3011::1]:8333\n+[2a02:4780:1:1::1:8a01]:8333\n+[2a02:578:5002:116::2]:8333\n+[2a02:6080::1:190b:69e3]:8333\n+[2a02:6080::1:e893:d9d6]:8333\n+[2a02:770:4000::139]:8333\n+[2a02:7aa0:1201::deb3:81a2]:8333\n+[2a02:8010:b001::5860:59b5]:8333\n+[2a02:810d:21c0:f00:a248:1cff:feb8:5348]:8333\n+[2a02:a50::21b:24ff:fe93:4e39]:8333\n+[2a02:a80:0:1200::2]:8333\n+[2a02:c200:0:10:2:1:5830:1]:8333\n+[2a02:c200:0:10:2:5:4692:1]:8333\n+[2a02:c200:0:10:3:0:7158:1]:8333\n+[2a02:c200:0:10::2244:1]:8333\n+[2a02:c200:1:10:2:3:3339:1]:8333\n+[2a02:c200:1:10:2:3:7844:1]:8333\n+[2a02:c200:1:10:2:5:6288:1]:8333\n+[2a02:c200:1:10:3:0:5912:1]:8333\n+[2a03:4000:2:496::8]:8333\n+[2a03:4000:6:8009::1]:8333\n+[2a03:4000:6:8063::bcd0]:8333\n+[2a03:4900:fffc:b::2]:8333\n+[2a03:b0c0:1:d0::d:5001]:8333\n+[2a03:f80:ed15:149:154:155:235:1]:8333\n+[2a03:f80:ed15:149:154:155:241:1]:8333\n+[2a03:f80:ed16:ca7:ea75:b12d:2af:9e2a]:8333\n+[2a04:1980:3100:1aab:290:faff:fe70:a3d8]:8333\n+[2a04:1980:3100:1aab:e61d:2dff:fe29:f590]:8333\n+[2a04:2f80:6:200::89]:8333\n+[2a04:ac00:1:4a0b:5054:ff:fe00:5af5]:8333\n+[2a04:ad80:0:68::35da]:8333\n+3ffk7iumtx3cegbi.onion:8333\n+3nmbbakinewlgdln.onion:8333\n+4j77gihpokxu2kj4.onion:8333\n+546esc6botbjfbxb.onion:8333\n+5at7sq5nm76xijkd.onion:8333\n+77mx2jsxaoyesz2p.onion:8333\n+7g7j54btiaxhtsiy.onion:8333\n+a6obdgzn67l7exu3.onion:8333\n+ab64h7olpl7qpxci.onion:8333\n+am2a4rahltfuxz6l.onion:8333\n+azuxls4ihrr2mep7.onion:8333\n+bitcoin7bi4op7wb.onion:8333\n+bitcoinostk4e4re.onion:8333\n+bk7yp6epnmcllq72.onion:8333\n+bmutjfrj5btseddb.onion:8333\n+ceeji4qpfs3ms3zc.onion:8333\n+clexmzqio7yhdao4.onion:8333\n+gb5ypqt63du3wfhn.onion:8333\n+h2vlpudzphzqxutd.onion:8333\n+n42h7r6oumcfsbrs.onion:4176\n+ncwk3lutemffcpc4.onion:8333\n+okdzjarwekbshnof.onion:8333\n+pjghcivzkoersesd.onion:8333\n+rw7ocjltix26mefn.onion:8333\n+uws7itep7o3yinxo.onion:8333\n+vk3qjdehyy4dwcxw.onion:8333\n+vqpye2k5rcqvj5mq.onion:8333\n+wpi7rpvhnndl52ee.onion:8333"
      },
      {
        "sha": "98365ee505ced2410cdc7ea841bf52198b405662",
        "filename": "contrib/seeds/nodes_test.txt",
        "status": "added",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/seeds/nodes_test.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/seeds/nodes_test.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/nodes_test.txt?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,11 @@\n+# List of fixed seed nodes for testnet\n+\n+# Onion nodes\n+thfsmmn2jbitcoin.onion\n+it2pj4f7657g3rhi.onion\n+nkf5e6b7pl4jfd4a.onion\n+4zhkir2ofl7orfom.onion\n+t6xj6wilh4ytvcs7.onion\n+i6y6ivorwakd7nw3.onion\n+ubqj4rsu3nqtxmtp.onion\n+"
      },
      {
        "sha": "c0a9c9ccf93d335a7092e383ff8a59ae410e549d",
        "filename": "contrib/spendfrom/README.md",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/spendfrom/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/spendfrom/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/spendfrom/README.md?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -15,7 +15,7 @@ With arguments, sends coins received by the `FROMADDRESS` addresses to the `TOAD\n \n ### Notes ###\n \n-- You may explictly specify how much fee to pay (a fee more than 1% of the amount\n+- You may explicitly specify how much fee to pay (a fee more than 1% of the amount\n will fail,  though, to prevent bitcoin-losing accidents). Spendfrom may fail if\n it thinks the transaction would never be confirmed (if the amount being sent is\n too small, or if the transaction is too many bytes for the fee).\n@@ -25,7 +25,7 @@ too small, or if the transaction is too many bytes for the fee).\n \n - If `--datadir` is not specified, the default datadir is used.\n \n-- The `--dry_run` option will just create and sign the the transaction and print\n+- The `--dry_run` option will just create and sign the transaction and print\n the transaction data (as hexadecimal), instead of broadcasting it.\n \n - If the transaction is created and broadcast successfully, a transaction id"
      },
      {
        "sha": "def40b0d6c2a5459ce26df10258a0485ecdb5bd1",
        "filename": "contrib/test-patches/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 7,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d980f9b7d687a1e60eecf3691b592d9806a30f4a/contrib/test-patches/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d980f9b7d687a1e60eecf3691b592d9806a30f4a/contrib/test-patches/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/test-patches/README.md?ref=d980f9b7d687a1e60eecf3691b592d9806a30f4a",
        "patch": "@@ -1,7 +0,0 @@\n-### Test Patches ###\n-\n-These patches are applied when the automated pull-tester\n-tests each pull and when master is tested using jenkins.\n-You can find more information about the tests run at\n-[http://jenkins.bluematt.me/pull-tester/files/\n-](http://jenkins.bluematt.me/pull-tester/files/)\n\\ No newline at end of file"
      },
      {
        "sha": "1cd043d0d7739e927c297ec93afad552525aed7b",
        "filename": "contrib/test-patches/temp-revert-2.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 20,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d980f9b7d687a1e60eecf3691b592d9806a30f4a/contrib/test-patches/temp-revert-2.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d980f9b7d687a1e60eecf3691b592d9806a30f4a/contrib/test-patches/temp-revert-2.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/test-patches/temp-revert-2.patch?ref=d980f9b7d687a1e60eecf3691b592d9806a30f4a",
        "patch": "@@ -1,20 +0,0 @@\n-commit cfae26916dba311f6f75d444301c1f9362267c3e\n-Author: Matt Corallo <git@bluematt.me>\n-Date:   Sun Mar 24 20:45:50 2013 -0400\n-\n-    Revert \"Checkpoint at first block in 11 March chain fork\"\n-    \n-    This reverts commit f817c496a1482d05b22c8e539de67f07db1c09d9.\n-\n-diff --git a/src/checkpoints.cpp b/src/checkpoints.cpp\n-index 62234b9..9b11f0b 100644\n---- a/src/checkpoints.cpp\n-+++ b/src/checkpoints.cpp\n-@@ -44,7 +44,6 @@ namespace Checkpoints\n-         (193000, uint256(\"0x000000000000059f452a5f7340de6682a977387c17010ff6e6c3bd83ca8b1317\"))\n-         (210000, uint256(\"0x000000000000048b95347e83192f69cf0366076336c639f9b7228e9ba171342e\"))\n-         (216116, uint256(\"0x00000000000001b4f4b433e81ee46494af945cf96014816a4e2370f11b23df4e\"))\n--        (225430, uint256(\"0x00000000000001c108384350f74090433e7fcf79a606b8e797f065b130575932\"))\n-         ;\n-     static const CCheckpointData data = {\n-         &mapCheckpoints,"
      },
      {
        "sha": "e9e3f65da292a5bd80377f43cbc21cdb9e7f2c37",
        "filename": "contrib/verify-commits/README.md",
        "status": "added",
        "additions": 26,
        "deletions": 0,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/verify-commits/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/verify-commits/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/README.md?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,26 @@\n+Tooling for verification of PGP signed commits\n+----------------------------------------------\n+\n+This is an incomplete work in progress, but currently includes a pre-push hook\n+script (`pre-push-hook.sh`) for maintainers to ensure that their own commits\n+are PGP signed (nearly always merge commits), as well as a script to verify\n+commits against a trusted keys list.\n+\n+\n+Using verify-commits.sh safely\n+------------------------------\n+\n+Remember that you can't use an untrusted script to verify itself. This means\n+that checking out code, then running `verify-commits.sh` against `HEAD` is\n+_not_ safe, because the version of `verify-commits.sh` that you just ran could\n+be backdoored. Instead, you need to use a trusted version of verify-commits\n+prior to checkout to make sure you're checking out only code signed by trusted\n+keys:\n+\n+    git fetch origin && \\\n+      ./contrib/verify-commits/verify-commits.sh origin/master && \\\n+      git checkout origin/master\n+\n+Note that the above isn't a good UI/UX yet, and needs significant improvements\n+to make it more convenient and reduce the chance of errors; pull-reqs\n+improving this process would be much appreciated."
      },
      {
        "sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
        "filename": "contrib/verify-commits/allow-revsig-commits",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/verify-commits/allow-revsig-commits",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/verify-commits/allow-revsig-commits",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/allow-revsig-commits?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "375d71172570773c38647c2f58bdbfa5aa41384f",
        "filename": "contrib/verify-commits/gpg.sh",
        "status": "added",
        "additions": 33,
        "deletions": 0,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/verify-commits/gpg.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/verify-commits/gpg.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/gpg.sh?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,33 @@\n+#!/bin/sh\n+INPUT=$(cat /dev/stdin)\n+VALID=false\n+REVSIG=false\n+IFS='\n+'\n+for LINE in $(echo \"$INPUT\" | gpg --trust-model always \"$@\" 2>/dev/null); do\n+\tcase \"$LINE\" in\n+\t\"[GNUPG:] VALIDSIG \"*)\n+\t\twhile read KEY; do\n+\t\t\tcase \"$LINE\" in \"[GNUPG:] VALIDSIG $KEY \"*) VALID=true;; esac\n+\t\tdone < ./contrib/verify-commits/trusted-keys\n+\t\t;;\n+\t\"[GNUPG:] REVKEYSIG \"*)\n+\t\t[ \"$BITCOIN_VERIFY_COMMITS_ALLOW_REVSIG\" != 1 ] && exit 1\n+\t\twhile read KEY; do\n+\t\t\tcase \"$LINE\" in \"[GNUPG:] REVKEYSIG ${KEY#????????????????????????} \"*)\n+\t\t\t\tREVSIG=true\n+\t\t\t\tGOODREVSIG=\"[GNUPG:] GOODSIG ${KEY#????????????????????????} \"\n+\t\t\tesac\n+\t\tdone < ./contrib/verify-commits/trusted-keys\n+\t\t;;\n+\tesac\n+done\n+if ! $VALID; then\n+\texit 1\n+fi\n+if $VALID && $REVSIG; then\n+\techo \"$INPUT\" | gpg --trust-model always \"$@\" | grep \"\\[GNUPG:\\] \\(NEWSIG\\|SIG_ID\\|VALIDSIG\\)\" 2>/dev/null\n+\techo \"$GOODREVSIG\"\n+else\n+\techo \"$INPUT\" | gpg --trust-model always \"$@\" 2>/dev/null\n+fi"
      },
      {
        "sha": "c57222818ab8a3deb8a78a338e6792f204f97c91",
        "filename": "contrib/verify-commits/pre-push-hook.sh",
        "status": "added",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/verify-commits/pre-push-hook.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/verify-commits/pre-push-hook.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/pre-push-hook.sh?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,16 @@\n+#!/bin/bash\n+if ! [[ \"$2\" =~ ^(git@)?(www.)?github.com(:|/)bitcoin/bitcoin(.git)?$ ]]; then\n+    exit 0\n+fi\n+\n+while read LINE; do\n+    set -- A $LINE\n+    if [ \"$4\" != \"refs/heads/master\" ]; then\n+        continue\n+    fi\n+    if ! ./contrib/verify-commits/verify-commits.sh $3 > /dev/null 2>&1; then\n+        echo \"ERROR: A commit is not signed, can't push\"\n+        ./contrib/verify-commits/verify-commits.sh\n+        exit 1\n+    fi\n+done < /dev/stdin"
      },
      {
        "sha": "c60f8ab695e9c0fb01feafb1c28074cb98ab122d",
        "filename": "contrib/verify-commits/trusted-git-root",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/verify-commits/trusted-git-root",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/verify-commits/trusted-git-root",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/trusted-git-root?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1 @@\n+82bcf405f6db1d55b684a1f63a4aabad376cdad7"
      },
      {
        "sha": "75242c2a9760b6c500a38ff62ccacd89c766cb0a",
        "filename": "contrib/verify-commits/trusted-keys",
        "status": "added",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/verify-commits/trusted-keys",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/verify-commits/trusted-keys",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/trusted-keys?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,4 @@\n+71A3B16735405025D447E8F274810B012346C9A6\n+3F1888C6DCA92A6499C4911FDBA1A67379A1A931\n+32EE5C4C3FA15CCADB46ABE529D4BCB6416F53EC\n+FE09B823E6D83A3BC7983EAA2D7F2372E50FE137"
      },
      {
        "sha": "5219331e2e5bc7da41ac1175662ba0800bfea62a",
        "filename": "contrib/verify-commits/verify-commits.sh",
        "status": "added",
        "additions": 58,
        "deletions": 0,
        "changes": 58,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/verify-commits/verify-commits.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/verify-commits/verify-commits.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/verify-commits.sh?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,58 @@\n+#!/bin/sh\n+# Not technically POSIX-compliant due to use of \"local\", but almost every\n+# shell anyone uses today supports it, so its probably fine\n+\n+DIR=$(dirname \"$0\")\n+[ \"/${DIR#/}\" != \"$DIR\" ] && DIR=$(dirname \"$(pwd)/$0\")\n+\n+VERIFIED_ROOT=$(cat \"${DIR}/trusted-git-root\")\n+REVSIG_ALLOWED=$(cat \"${DIR}/allow-revsig-commits\")\n+\n+HAVE_FAILED=false\n+IS_SIGNED () {\n+\tif [ $1 = $VERIFIED_ROOT ]; then\n+\t\treturn 0;\n+\tfi\n+\tif [ \"${REVSIG_ALLOWED#*$1}\" != \"$REVSIG_ALLOWED\" ]; then\n+\t\texport BITCOIN_VERIFY_COMMITS_ALLOW_REVSIG=1\n+\telse\n+\t\texport BITCOIN_VERIFY_COMMITS_ALLOW_REVSIG=0\n+\tfi\n+\tif ! git -c \"gpg.program=${DIR}/gpg.sh\" verify-commit $1 > /dev/null 2>&1; then\n+\t\treturn 1;\n+\tfi\n+\tlocal PARENTS\n+\tPARENTS=$(git show -s --format=format:%P $1)\n+\tfor PARENT in $PARENTS; do\n+\t\tif IS_SIGNED $PARENT > /dev/null; then\n+\t\t\treturn 0;\n+\t\tfi\n+\tdone\n+\tif ! \"$HAVE_FAILED\"; then\n+\t\techo \"No parent of $1 was signed with a trusted key!\" > /dev/stderr\n+\t\techo \"Parents are:\" > /dev/stderr\n+\t\tfor PARENT in $PARENTS; do\n+\t\t\tgit show -s $PARENT > /dev/stderr\n+\t\tdone\n+\t\tHAVE_FAILED=true\n+\tfi\n+\treturn 1;\n+}\n+\n+if [ x\"$1\" = \"x\" ]; then\n+\tTEST_COMMIT=\"HEAD\"\n+else\n+\tTEST_COMMIT=\"$1\"\n+fi\n+\n+IS_SIGNED \"$TEST_COMMIT\"\n+RES=$?\n+if [ \"$RES\" = 1 ]; then\n+\tif ! \"$HAVE_FAILED\"; then\n+\t\techo \"$TEST_COMMIT was not signed with a trusted key!\"\n+\tfi\n+else\n+\techo \"There is a valid path from $TEST_COMMIT to $VERIFIED_ROOT where all commits are signed!\"\n+fi\n+\n+exit $RES"
      },
      {
        "sha": "8970f3daa406ad19a5d1d029346b22826efe6917",
        "filename": "contrib/verifybinaries/README.md",
        "status": "renamed",
        "additions": 10,
        "deletions": 3,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/verifybinaries/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/verifybinaries/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verifybinaries/README.md?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -1,6 +1,13 @@\n-### Verify SF Binaries ###\n-This script attempts to download the signature file `SHA256SUMS.asc` from SourceForge.\n+### Verify Binaries\n+This script attempts to download the signature file `SHA256SUMS.asc` from https://bitcoin.org.\n \n It first checks if the signature passes, and then downloads the files specified in the file, and checks if the hashes of these files match those that are specified in the signature file.\n \n-The script returns 0 if everything passes the checks. It returns 1 if either the signature check or the hash check doesn't pass. If an error occurs the return value is 2.\n\\ No newline at end of file\n+The script returns 0 if everything passes the checks. It returns 1 if either the signature check or the hash check doesn't pass. If an error occurs the return value is 2.\n+\n+Usage:\n+\n+```sh\n+./verify.sh bitcoin-core-0.11.2\n+./verify.sh bitcoin-core-0.12.0\n+```",
        "previous_filename": "contrib/verifysfbinaries/README.md"
      },
      {
        "sha": "657c3bd33c2e26f150733b2146c066d5e45ee06d",
        "filename": "contrib/verifybinaries/verify.sh",
        "status": "renamed",
        "additions": 9,
        "deletions": 9,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/verifybinaries/verify.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/verifybinaries/verify.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verifybinaries/verify.sh?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -1,6 +1,6 @@\n #!/bin/bash\n \n-###   This script attempts to download the signature file SHA256SUMS.asc from SourceForge\n+###   This script attempts to download the signature file SHA256SUMS.asc from bitcoin.org\n ###   It first checks if the signature passes, and then downloads the files specified in\n ###   the file, and checks if the hashes of these files match those that are specified\n ###   in the signature file.\n@@ -17,13 +17,10 @@ function clean_up {\n WORKINGDIR=\"/tmp/bitcoin\"\n TMPFILE=\"hashes.tmp\"\n \n-#this URL is used if a version number is not specified as an argument to the script\n-SIGNATUREFILE=\"http://downloads.sourceforge.net/project/bitcoin/Bitcoin/bitcoin-0.8.2/SHA256SUMS.asc\"\n-\n SIGNATUREFILENAME=\"SHA256SUMS.asc\"\n RCSUBDIR=\"test/\"\n-BASEDIR=\"http://downloads.sourceforge.net/project/bitcoin/Bitcoin/\"\n-VERSIONPREFIX=\"bitcoin-\"\n+BASEDIR=\"https://bitcoin.org/bin/\"\n+VERSIONPREFIX=\"bitcoin-core-\"\n RCVERSIONSTRING=\"rc\"\n \n if [ ! -d \"$WORKINGDIR\" ]; then\n@@ -53,7 +50,8 @@ if [ -n \"$1\" ]; then\n \n    SIGNATUREFILE=\"$BASEDIR$SIGNATUREFILENAME\"\n else\n-   BASEDIR=\"${SIGNATUREFILE%/*}/\"\n+   echo \"Error: need to specify a version on the command line\"\n+   exit 2\n fi\n \n #first we fetch the file containing the signature\n@@ -62,7 +60,7 @@ WGETOUT=$(wget -N \"$BASEDIR$SIGNATUREFILENAME\" 2>&1)\n #and then see if wget completed successfully\n if [ $? -ne 0 ]; then\n    echo \"Error: couldn't fetch signature file. Have you specified the version number in the following format?\"\n-   echo \"[bitcoin-]<version>-[rc[0-9]] (example: bitcoin-0.7.1-rc1)\"\n+   echo \"[$VERSIONPREFIX]<version>-[$RCVERSIONSTRING[0-9]] (example: \"$VERSIONPREFIX\"0.10.4-\"$RCVERSIONSTRING\"1)\"\n    echo \"wget output:\"\n    echo \"$WGETOUT\"|sed 's/^/\\t/g'\n    exit 2\n@@ -82,7 +80,7 @@ if [ $RET -ne 0 ]; then\n       echo \"Bad signature.\"\n    elif [ $RET -eq 2 ]; then\n       #or if a gpg error has occurred\n-      echo \"gpg error. Do you have Gavin's code signing key installed?\"\n+      echo \"gpg error. Do you have the Bitcoin Core binary release signing key installed?\"\n    fi\n \n    echo \"gpg output:\"\n@@ -116,4 +114,6 @@ fi\n #everything matches! clean up the mess\n clean_up $FILES $SIGNATUREFILENAME $TMPFILE\n \n+echo -e \"Verified hashes of \\n$FILES\"\n+\n exit 0",
        "previous_filename": "contrib/verifysfbinaries/verify.sh"
      },
      {
        "sha": "6268123dd8e5302917ce1d7e2bc7de8efd2c9b5d",
        "filename": "contrib/zmq/zmq_sub.py",
        "status": "added",
        "additions": 41,
        "deletions": 0,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/zmq/zmq_sub.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/contrib/zmq/zmq_sub.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/zmq/zmq_sub.py?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,41 @@\n+#!/usr/bin/env python2\n+\n+import array\n+import binascii\n+import zmq\n+import struct\n+\n+port = 28332\n+\n+zmqContext = zmq.Context()\n+zmqSubSocket = zmqContext.socket(zmq.SUB)\n+zmqSubSocket.setsockopt(zmq.SUBSCRIBE, \"hashblock\")\n+zmqSubSocket.setsockopt(zmq.SUBSCRIBE, \"hashtx\")\n+zmqSubSocket.setsockopt(zmq.SUBSCRIBE, \"rawblock\")\n+zmqSubSocket.setsockopt(zmq.SUBSCRIBE, \"rawtx\")\n+zmqSubSocket.connect(\"tcp://127.0.0.1:%i\" % port)\n+\n+try:\n+    while True:\n+        msg = zmqSubSocket.recv_multipart()\n+        topic = str(msg[0])\n+        body = msg[1]\n+        sequence = \"Unknown\";\n+        if len(msg[-1]) == 4:\n+          msgSequence = struct.unpack('<I', msg[-1])[-1]\n+          sequence = str(msgSequence)\n+        if topic == \"hashblock\":\n+            print '- HASH BLOCK ('+sequence+') -'\n+            print binascii.hexlify(body)\n+        elif topic == \"hashtx\":\n+            print '- HASH TX  ('+sequence+') -'\n+            print binascii.hexlify(body)\n+        elif topic == \"rawblock\":\n+            print '- RAW BLOCK HEADER ('+sequence+') -'\n+            print binascii.hexlify(body[:80])\n+        elif topic == \"rawtx\":\n+            print '- RAW TX ('+sequence+') -'\n+            print binascii.hexlify(body)\n+\n+except KeyboardInterrupt:\n+    zmqContext.destroy()"
      },
      {
        "sha": "3cb4b9ac15557906446b56ab75eb2d23ec0187e9",
        "filename": "depends/.gitignore",
        "status": "added",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/.gitignore?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,10 @@\n+SDKs/\n+work/\n+built/\n+sources/\n+config.site\n+x86_64*\n+i686*\n+mips*\n+arm*\n+aarch64*"
      },
      {
        "sha": "dedb0674cf14974702cefc520b4ad0da309a940b",
        "filename": "depends/Makefile",
        "status": "added",
        "additions": 181,
        "deletions": 0,
        "changes": 181,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/Makefile",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/Makefile",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/Makefile?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,181 @@\n+.NOTPARALLEL :\n+\n+SOURCES_PATH ?= $(BASEDIR)/sources\n+BASE_CACHE ?= $(BASEDIR)/built\n+SDK_PATH ?= $(BASEDIR)/SDKs\n+NO_QT ?=\n+NO_WALLET ?=\n+NO_UPNP ?=\n+FALLBACK_DOWNLOAD_PATH ?= https://bitcoincore.org/depends-sources\n+\n+BUILD = $(shell ./config.guess)\n+HOST ?= $(BUILD)\n+PATCHES_PATH = $(BASEDIR)/patches\n+BASEDIR = $(CURDIR)\n+HASH_LENGTH:=11\n+DOWNLOAD_CONNECT_TIMEOUT:=10\n+DOWNLOAD_RETRIES:=3\n+HOST_ID_SALT ?= salt\n+BUILD_ID_SALT ?= salt\n+\n+host:=$(BUILD)\n+ifneq ($(HOST),)\n+host:=$(HOST)\n+host_toolchain:=$(HOST)-\n+endif\n+\n+ifneq ($(DEBUG),)\n+release_type=debug\n+else\n+release_type=release\n+endif\n+\n+base_build_dir=$(BASEDIR)/work/build\n+base_staging_dir=$(BASEDIR)/work/staging\n+base_download_dir=$(BASEDIR)/work/download\n+canonical_host:=$(shell ./config.sub $(HOST))\n+build:=$(shell ./config.sub $(BUILD))\n+\n+build_arch =$(firstword $(subst -, ,$(build)))\n+build_vendor=$(word 2,$(subst -, ,$(build)))\n+full_build_os:=$(subst $(build_arch)-$(build_vendor)-,,$(build))\n+build_os:=$(findstring linux,$(full_build_os))\n+build_os+=$(findstring darwin,$(full_build_os))\n+build_os:=$(strip $(build_os))\n+ifeq ($(build_os),)\n+build_os=$(full_build_os)\n+endif\n+\n+host_arch=$(firstword $(subst -, ,$(canonical_host)))\n+host_vendor=$(word 2,$(subst -, ,$(canonical_host)))\n+full_host_os:=$(subst $(host_arch)-$(host_vendor)-,,$(canonical_host))\n+host_os:=$(findstring linux,$(full_host_os))\n+host_os+=$(findstring darwin,$(full_host_os))\n+host_os+=$(findstring mingw32,$(full_host_os))\n+host_os:=$(strip $(host_os))\n+ifeq ($(host_os),)\n+host_os=$(full_host_os)\n+endif\n+\n+$(host_arch)_$(host_os)_prefix=$(BASEDIR)/$(host)\n+$(host_arch)_$(host_os)_host=$(host)\n+host_prefix=$($(host_arch)_$(host_os)_prefix)\n+build_prefix=$(host_prefix)/native\n+build_host=$(build)\n+\n+AT_$(V):=\n+AT_:=@\n+AT:=$(AT_$(V))\n+\n+all: install\n+\n+include hosts/$(host_os).mk\n+include hosts/default.mk\n+include builders/$(build_os).mk\n+include builders/default.mk\n+include packages/packages.mk\n+\n+build_id_string:=$(BUILD_ID_SALT)\n+build_id_string+=$(shell $(build_CC) --version 2>/dev/null)\n+build_id_string+=$(shell $(build_AR) --version 2>/dev/null)\n+build_id_string+=$(shell $(build_CXX) --version 2>/dev/null)\n+build_id_string+=$(shell $(build_RANLIB) --version 2>/dev/null)\n+build_id_string+=$(shell $(build_STRIP) --version 2>/dev/null)\n+\n+$(host_arch)_$(host_os)_id_string:=$(HOST_ID_SALT)\n+$(host_arch)_$(host_os)_id_string+=$(shell $(host_CC) --version 2>/dev/null)\n+$(host_arch)_$(host_os)_id_string+=$(shell $(host_AR) --version 2>/dev/null)\n+$(host_arch)_$(host_os)_id_string+=$(shell $(host_CXX) --version 2>/dev/null)\n+$(host_arch)_$(host_os)_id_string+=$(shell $(host_RANLIB) --version 2>/dev/null)\n+$(host_arch)_$(host_os)_id_string+=$(shell $(host_STRIP) --version 2>/dev/null)\n+\n+qt_packages_$(NO_QT) = $(qt_packages) $(qt_$(host_os)_packages) $(qt_$(host_arch)_$(host_os)_packages)\n+wallet_packages_$(NO_WALLET) = $(wallet_packages)\n+upnp_packages_$(NO_UPNP) = $(upnp_packages)\n+\n+packages += $($(host_arch)_$(host_os)_packages) $($(host_os)_packages) $(qt_packages_) $(wallet_packages_) $(upnp_packages_)\n+native_packages += $($(host_arch)_$(host_os)_native_packages) $($(host_os)_native_packages)\n+\n+ifneq ($(qt_packages_),)\n+native_packages += $(qt_native_packages)\n+endif\n+\n+all_packages = $(packages) $(native_packages)\n+\n+meta_depends = Makefile funcs.mk builders/default.mk hosts/default.mk hosts/$(host_os).mk builders/$(build_os).mk\n+\n+$(host_arch)_$(host_os)_native_toolchain?=$($(host_os)_native_toolchain)\n+\n+include funcs.mk\n+\n+toolchain_path=$($($(host_arch)_$(host_os)_native_toolchain)_prefixbin)\n+final_build_id_long+=$(shell $(build_SHA256SUM) config.site.in)\n+final_build_id+=$(shell echo -n \"$(final_build_id_long)\" | $(build_SHA256SUM) | cut -c-$(HASH_LENGTH))\n+$(host_prefix)/.stamp_$(final_build_id): $(native_packages) $(packages)\n+\t$(AT)rm -rf $(@D)\n+\t$(AT)mkdir -p $(@D)\n+\t$(AT)echo copying packages: $^\n+\t$(AT)echo to: $(@D)\n+\t$(AT)cd $(@D); $(foreach package,$^, tar xf $($(package)_cached); )\n+\t$(AT)touch $@\n+\n+$(host_prefix)/share/config.site : config.site.in $(host_prefix)/.stamp_$(final_build_id)\n+\t$(AT)@mkdir -p $(@D)\n+\t$(AT)sed -e 's|@HOST@|$(host)|' \\\n+            -e 's|@CC@|$(toolchain_path)$(host_CC)|' \\\n+            -e 's|@CXX@|$(toolchain_path)$(host_CXX)|' \\\n+            -e 's|@AR@|$(toolchain_path)$(host_AR)|' \\\n+            -e 's|@RANLIB@|$(toolchain_path)$(host_RANLIB)|' \\\n+            -e 's|@NM@|$(toolchain_path)$(host_NM)|' \\\n+            -e 's|@STRIP@|$(toolchain_path)$(host_STRIP)|' \\\n+            -e 's|@build_os@|$(build_os)|' \\\n+            -e 's|@host_os@|$(host_os)|' \\\n+            -e 's|@CFLAGS@|$(strip $(host_CFLAGS) $(host_$(release_type)_CFLAGS))|' \\\n+            -e 's|@CXXFLAGS@|$(strip $(host_CXXFLAGS) $(host_$(release_type)_CXXFLAGS))|' \\\n+            -e 's|@CPPFLAGS@|$(strip $(host_CPPFLAGS) $(host_$(release_type)_CPPFLAGS))|' \\\n+            -e 's|@LDFLAGS@|$(strip $(host_LDFLAGS) $(host_$(release_type)_LDFLAGS))|' \\\n+            -e 's|@no_qt@|$(NO_QT)|' \\\n+            -e 's|@no_wallet@|$(NO_WALLET)|' \\\n+            -e 's|@no_upnp@|$(NO_UPNP)|' \\\n+            -e 's|@debug@|$(DEBUG)|' \\\n+            $< > $@\n+\t$(AT)touch $@\n+\n+\n+define check_or_remove_cached\n+  mkdir -p $(BASE_CACHE)/$(host)/$(package) && cd $(BASE_CACHE)/$(host)/$(package); \\\n+  $(build_SHA256SUM) -c $($(package)_cached_checksum) >/dev/null 2>/dev/null || \\\n+  ( rm -f $($(package)_cached_checksum); \\\n+    if test -f \"$($(package)_cached)\"; then echo \"Checksum mismatch for $(package). Forcing rebuild..\"; rm -f $($(package)_cached_checksum) $($(package)_cached); fi )\n+endef\n+\n+define check_or_remove_sources\n+  mkdir -p $($(package)_source_dir); cd $($(package)_source_dir); \\\n+  test -f $($(package)_fetched) && ( $(build_SHA256SUM) -c $($(package)_fetched) >/dev/null 2>/dev/null || \\\n+    ( echo \"Checksum missing or mismatched for $(package) source. Forcing re-download.\"; \\\n+      rm -f $($(package)_all_sources) $($(1)_fetched))) || true\n+endef\n+\n+check-packages:\n+\t@$(foreach package,$(all_packages),$(call check_or_remove_cached,$(package));)\n+check-sources:\n+\t@$(foreach package,$(all_packages),$(call check_or_remove_sources,$(package));)\n+\n+$(host_prefix)/share/config.site: check-packages\n+\n+check-packages: check-sources\n+\n+install: check-packages $(host_prefix)/share/config.site\n+\n+\n+download-one: check-sources $(all_sources)\n+\n+download-osx:\n+\t@$(MAKE) -s HOST=x86_64-apple-darwin11 download-one\n+download-linux:\n+\t@$(MAKE) -s HOST=x86_64-unknown-linux-gnu download-one\n+download-win:\n+\t@$(MAKE) -s HOST=x86_64-w64-mingw32 download-one\n+download: download-osx download-linux download-win\n+\n+.PHONY: install cached download-one download-osx download-linux download-win download check-packages check-sources"
      },
      {
        "sha": "6053c531b46a7130fbc0f5b308d1e7258ecbbe80",
        "filename": "depends/README.md",
        "status": "added",
        "additions": 59,
        "deletions": 0,
        "changes": 59,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/README.md?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,59 @@\n+### Usage\n+\n+To build dependencies for the current arch+OS:\n+\n+    make\n+\n+To build for another arch/OS:\n+\n+    make HOST=host-platform-triplet\n+\n+For example:\n+\n+    make HOST=x86_64-w64-mingw32 -j4\n+\n+A prefix will be generated that's suitable for plugging into Bitcoin's\n+configure. In the above example, a dir named x86_64-w64-mingw32 will be\n+created. To use it for Bitcoin:\n+\n+    ./configure --prefix=`pwd`/depends/x86_64-w64-mingw32\n+\n+Common `host-platform-triplets` for cross compilation are:\n+\n+- `i686-w64-mingw32` for Win32\n+- `x86_64-w64-mingw32` for Win64\n+- `x86_64-apple-darwin11` for MacOSX\n+- `arm-linux-gnueabihf` for Linux ARM 32 bit\n+- `aarch64-linux-gnu` for Linux ARM 64 bit\n+\n+No other options are needed, the paths are automatically configured.\n+\n+Dependency Options:\n+The following can be set when running make: make FOO=bar\n+\n+    SOURCES_PATH: downloaded sources will be placed here\n+    BASE_CACHE: built packages will be placed here\n+    SDK_PATH: Path where sdk's can be found (used by OSX)\n+    FALLBACK_DOWNLOAD_PATH: If a source file can't be fetched, try here before giving up\n+    NO_QT: Don't download/build/cache qt and its dependencies\n+    NO_WALLET: Don't download/build/cache libs needed to enable the wallet\n+    NO_UPNP: Don't download/build/cache packages needed for enabling upnp\n+    DEBUG: disable some optimizations and enable more runtime checking\n+    HOST_ID_SALT: Optional salt to use when generating host package ids\n+    BUILD_ID_SALT: Optional salt to use when generating build package ids\n+\n+If some packages are not built, for example `make NO_WALLET=1`, the appropriate\n+options will be passed to bitcoin's configure. In this case, `--disable-wallet`.\n+\n+Additional targets:\n+\n+    download: run 'make download' to fetch all sources without building them\n+    download-osx: run 'make download-osx' to fetch all sources needed for osx builds\n+    download-win: run 'make download-win' to fetch all sources needed for win builds\n+    download-linux: run 'make download-linux' to fetch all sources needed for linux builds\n+\n+### Other documentation\n+\n+- [description.md](description.md): General description of the depends system\n+- [packages.md](packages.md): Steps for adding packages\n+"
      },
      {
        "sha": "27f550ab036aeea9ced0a003d40aceaff5e3dc9c",
        "filename": "depends/builders/darwin.mk",
        "status": "added",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/builders/darwin.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/builders/darwin.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/builders/darwin.mk?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,22 @@\n+build_darwin_CC: = $(shell xcrun -f clang)\n+build_darwin_CXX: = $(shell xcrun -f clang++)\n+build_darwin_AR: = $(shell xcrun -f ar)\n+build_darwin_RANLIB: = $(shell xcrun -f ranlib)\n+build_darwin_STRIP: = $(shell xcrun -f strip)\n+build_darwin_OTOOL: = $(shell xcrun -f otool)\n+build_darwin_NM: = $(shell xcrun -f nm)\n+build_darwin_INSTALL_NAME_TOOL:=$(shell xcrun -f install_name_tool)\n+build_darwin_SHA256SUM = shasum -a 256\n+build_darwin_DOWNLOAD = curl --location --fail --connect-timeout $(DOWNLOAD_CONNECT_TIMEOUT) --retry $(DOWNLOAD_RETRIES) -o\n+\n+#darwin host on darwin builder. overrides darwin host preferences.\n+darwin_CC=$(shell xcrun -f clang) -mmacosx-version-min=$(OSX_MIN_VERSION)\n+darwin_CXX:=$(shell xcrun -f clang++) -mmacosx-version-min=$(OSX_MIN_VERSION) -stdlib=libc++\n+darwin_AR:=$(shell xcrun -f ar)\n+darwin_RANLIB:=$(shell xcrun -f ranlib)\n+darwin_STRIP:=$(shell xcrun -f strip)\n+darwin_LIBTOOL:=$(shell xcrun -f libtool)\n+darwin_OTOOL:=$(shell xcrun -f otool)\n+darwin_NM:=$(shell xcrun -f nm)\n+darwin_INSTALL_NAME_TOOL:=$(shell xcrun -f install_name_tool)\n+darwin_native_toolchain="
      },
      {
        "sha": "f097db65d603d596c5ceabeadfe32fa3a296a91d",
        "filename": "depends/builders/default.mk",
        "status": "added",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/builders/default.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/builders/default.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/builders/default.mk?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,20 @@\n+default_build_CC = gcc\n+default_build_CXX = g++\n+default_build_AR = ar\n+default_build_RANLIB = ranlib\n+default_build_STRIP = strip\n+default_build_NM = nm\n+default_build_OTOOL = otool\n+default_build_INSTALL_NAME_TOOL = install_name_tool\n+\n+define add_build_tool_func\n+build_$(build_os)_$1 ?= $$(default_build_$1)\n+build_$(build_arch)_$(build_os)_$1 ?= $$(build_$(build_os)_$1)\n+build_$1=$$(build_$(build_arch)_$(build_os)_$1)\n+endef\n+$(foreach var,CC CXX AR RANLIB NM STRIP SHA256SUM DOWNLOAD OTOOL INSTALL_NAME_TOOL,$(eval $(call add_build_tool_func,$(var))))\n+define add_build_flags_func\n+build_$(build_arch)_$(build_os)_$1 += $(build_$(build_os)_$1)\n+build_$1=$$(build_$(build_arch)_$(build_os)_$1)\n+endef\n+$(foreach flags, CFLAGS CXXFLAGS LDFLAGS, $(eval $(call add_build_flags_func,$(flags))))"
      },
      {
        "sha": "b03f42401047adf98bc997a7eece42c2c79a2c2c",
        "filename": "depends/builders/linux.mk",
        "status": "added",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/builders/linux.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/builders/linux.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/builders/linux.mk?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,2 @@\n+build_linux_SHA256SUM = sha256sum\n+build_linux_DOWNLOAD = curl --location --fail --connect-timeout $(DOWNLOAD_CONNECT_TIMEOUT) --retry $(DOWNLOAD_RETRIES) -o"
      },
      {
        "sha": "c4bd827a7bedcf6f78866a27bf01d896c047b516",
        "filename": "depends/config.guess",
        "status": "added",
        "additions": 1456,
        "deletions": 0,
        "changes": 1456,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/config.guess",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/config.guess",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/config.guess?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,1456 @@\n+#! /bin/sh\n+# Attempt to guess a canonical system name.\n+#   Copyright 1992-2016 Free Software Foundation, Inc.\n+\n+timestamp='2016-05-15'\n+\n+# This file is free software; you can redistribute it and/or modify it\n+# under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful, but\n+# WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+# General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program; if not, see <http://www.gnu.org/licenses/>.\n+#\n+# As a special exception to the GNU General Public License, if you\n+# distribute this file as part of a program that contains a\n+# configuration script generated by Autoconf, you may include it under\n+# the same distribution terms that you use for the rest of that\n+# program.  This Exception is an additional permission under section 7\n+# of the GNU General Public License, version 3 (\"GPLv3\").\n+#\n+# Originally written by Per Bothner; maintained since 2000 by Ben Elliston.\n+#\n+# You can get the latest version of this script from:\n+# http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.guess\n+#\n+# Please send patches to <config-patches@gnu.org>.\n+\n+\n+me=`echo \"$0\" | sed -e 's,.*/,,'`\n+\n+usage=\"\\\n+Usage: $0 [OPTION]\n+\n+Output the configuration name of the system \\`$me' is run on.\n+\n+Operation modes:\n+  -h, --help         print this help, then exit\n+  -t, --time-stamp   print date of last modification, then exit\n+  -v, --version      print version number, then exit\n+\n+Report bugs and patches to <config-patches@gnu.org>.\"\n+\n+version=\"\\\n+GNU config.guess ($timestamp)\n+\n+Originally written by Per Bothner.\n+Copyright 1992-2016 Free Software Foundation, Inc.\n+\n+This is free software; see the source for copying conditions.  There is NO\n+warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\"\n+\n+help=\"\n+Try \\`$me --help' for more information.\"\n+\n+# Parse command line\n+while test $# -gt 0 ; do\n+  case $1 in\n+    --time-stamp | --time* | -t )\n+       echo \"$timestamp\" ; exit ;;\n+    --version | -v )\n+       echo \"$version\" ; exit ;;\n+    --help | --h* | -h )\n+       echo \"$usage\"; exit ;;\n+    -- )     # Stop option processing\n+       shift; break ;;\n+    - )\t# Use stdin as input.\n+       break ;;\n+    -* )\n+       echo \"$me: invalid option $1$help\" >&2\n+       exit 1 ;;\n+    * )\n+       break ;;\n+  esac\n+done\n+\n+if test $# != 0; then\n+  echo \"$me: too many arguments$help\" >&2\n+  exit 1\n+fi\n+\n+trap 'exit 1' 1 2 15\n+\n+# CC_FOR_BUILD -- compiler used by this script. Note that the use of a\n+# compiler to aid in system detection is discouraged as it requires\n+# temporary files to be created and, as you can see below, it is a\n+# headache to deal with in a portable fashion.\n+\n+# Historically, `CC_FOR_BUILD' used to be named `HOST_CC'. We still\n+# use `HOST_CC' if defined, but it is deprecated.\n+\n+# Portable tmp directory creation inspired by the Autoconf team.\n+\n+set_cc_for_build='\n+trap \"exitcode=\\$?; (rm -f \\$tmpfiles 2>/dev/null; rmdir \\$tmp 2>/dev/null) && exit \\$exitcode\" 0 ;\n+trap \"rm -f \\$tmpfiles 2>/dev/null; rmdir \\$tmp 2>/dev/null; exit 1\" 1 2 13 15 ;\n+: ${TMPDIR=/tmp} ;\n+ { tmp=`(umask 077 && mktemp -d \"$TMPDIR/cgXXXXXX\") 2>/dev/null` && test -n \"$tmp\" && test -d \"$tmp\" ; } ||\n+ { test -n \"$RANDOM\" && tmp=$TMPDIR/cg$$-$RANDOM && (umask 077 && mkdir $tmp) ; } ||\n+ { tmp=$TMPDIR/cg-$$ && (umask 077 && mkdir $tmp) && echo \"Warning: creating insecure temp directory\" >&2 ; } ||\n+ { echo \"$me: cannot create a temporary directory in $TMPDIR\" >&2 ; exit 1 ; } ;\n+dummy=$tmp/dummy ;\n+tmpfiles=\"$dummy.c $dummy.o $dummy.rel $dummy\" ;\n+case $CC_FOR_BUILD,$HOST_CC,$CC in\n+ ,,)    echo \"int x;\" > $dummy.c ;\n+\tfor c in cc gcc c89 c99 ; do\n+\t  if ($c -c -o $dummy.o $dummy.c) >/dev/null 2>&1 ; then\n+\t     CC_FOR_BUILD=\"$c\"; break ;\n+\t  fi ;\n+\tdone ;\n+\tif test x\"$CC_FOR_BUILD\" = x ; then\n+\t  CC_FOR_BUILD=no_compiler_found ;\n+\tfi\n+\t;;\n+ ,,*)   CC_FOR_BUILD=$CC ;;\n+ ,*,*)  CC_FOR_BUILD=$HOST_CC ;;\n+esac ; set_cc_for_build= ;'\n+\n+# This is needed to find uname on a Pyramid OSx when run in the BSD universe.\n+# (ghazi@noc.rutgers.edu 1994-08-24)\n+if (test -f /.attbin/uname) >/dev/null 2>&1 ; then\n+\tPATH=$PATH:/.attbin ; export PATH\n+fi\n+\n+UNAME_MACHINE=`(uname -m) 2>/dev/null` || UNAME_MACHINE=unknown\n+UNAME_RELEASE=`(uname -r) 2>/dev/null` || UNAME_RELEASE=unknown\n+UNAME_SYSTEM=`(uname -s) 2>/dev/null`  || UNAME_SYSTEM=unknown\n+UNAME_VERSION=`(uname -v) 2>/dev/null` || UNAME_VERSION=unknown\n+\n+case \"${UNAME_SYSTEM}\" in\n+Linux|GNU|GNU/*)\n+\t# If the system lacks a compiler, then just pick glibc.\n+\t# We could probably try harder.\n+\tLIBC=gnu\n+\n+\teval $set_cc_for_build\n+\tcat <<-EOF > $dummy.c\n+\t#include <features.h>\n+\t#if defined(__UCLIBC__)\n+\tLIBC=uclibc\n+\t#elif defined(__dietlibc__)\n+\tLIBC=dietlibc\n+\t#else\n+\tLIBC=gnu\n+\t#endif\n+\tEOF\n+\teval `$CC_FOR_BUILD -E $dummy.c 2>/dev/null | grep '^LIBC' | sed 's, ,,g'`\n+\t;;\n+esac\n+\n+# Note: order is significant - the case branches are not exclusive.\n+\n+case \"${UNAME_MACHINE}:${UNAME_SYSTEM}:${UNAME_RELEASE}:${UNAME_VERSION}\" in\n+    *:NetBSD:*:*)\n+\t# NetBSD (nbsd) targets should (where applicable) match one or\n+\t# more of the tuples: *-*-netbsdelf*, *-*-netbsdaout*,\n+\t# *-*-netbsdecoff* and *-*-netbsd*.  For targets that recently\n+\t# switched to ELF, *-*-netbsd* would select the old\n+\t# object file format.  This provides both forward\n+\t# compatibility and a consistent mechanism for selecting the\n+\t# object file format.\n+\t#\n+\t# Note: NetBSD doesn't particularly care about the vendor\n+\t# portion of the name.  We always set it to \"unknown\".\n+\tsysctl=\"sysctl -n hw.machine_arch\"\n+\tUNAME_MACHINE_ARCH=`(uname -p 2>/dev/null || \\\n+\t    /sbin/$sysctl 2>/dev/null || \\\n+\t    /usr/sbin/$sysctl 2>/dev/null || \\\n+\t    echo unknown)`\n+\tcase \"${UNAME_MACHINE_ARCH}\" in\n+\t    armeb) machine=armeb-unknown ;;\n+\t    arm*) machine=arm-unknown ;;\n+\t    sh3el) machine=shl-unknown ;;\n+\t    sh3eb) machine=sh-unknown ;;\n+\t    sh5el) machine=sh5le-unknown ;;\n+\t    earmv*)\n+\t\tarch=`echo ${UNAME_MACHINE_ARCH} | sed -e 's,^e\\(armv[0-9]\\).*$,\\1,'`\n+\t\tendian=`echo ${UNAME_MACHINE_ARCH} | sed -ne 's,^.*\\(eb\\)$,\\1,p'`\n+\t\tmachine=${arch}${endian}-unknown\n+\t\t;;\n+\t    *) machine=${UNAME_MACHINE_ARCH}-unknown ;;\n+\tesac\n+\t# The Operating System including object format, if it has switched\n+\t# to ELF recently (or will in the future) and ABI.\n+\tcase \"${UNAME_MACHINE_ARCH}\" in\n+\t    earm*)\n+\t\tos=netbsdelf\n+\t\t;;\n+\t    arm*|i386|m68k|ns32k|sh3*|sparc|vax)\n+\t\teval $set_cc_for_build\n+\t\tif echo __ELF__ | $CC_FOR_BUILD -E - 2>/dev/null \\\n+\t\t\t| grep -q __ELF__\n+\t\tthen\n+\t\t    # Once all utilities can be ECOFF (netbsdecoff) or a.out (netbsdaout).\n+\t\t    # Return netbsd for either.  FIX?\n+\t\t    os=netbsd\n+\t\telse\n+\t\t    os=netbsdelf\n+\t\tfi\n+\t\t;;\n+\t    *)\n+\t\tos=netbsd\n+\t\t;;\n+\tesac\n+\t# Determine ABI tags.\n+\tcase \"${UNAME_MACHINE_ARCH}\" in\n+\t    earm*)\n+\t\texpr='s/^earmv[0-9]/-eabi/;s/eb$//'\n+\t\tabi=`echo ${UNAME_MACHINE_ARCH} | sed -e \"$expr\"`\n+\t\t;;\n+\tesac\n+\t# The OS release\n+\t# Debian GNU/NetBSD machines have a different userland, and\n+\t# thus, need a distinct triplet. However, they do not need\n+\t# kernel version information, so it can be replaced with a\n+\t# suitable tag, in the style of linux-gnu.\n+\tcase \"${UNAME_VERSION}\" in\n+\t    Debian*)\n+\t\trelease='-gnu'\n+\t\t;;\n+\t    *)\n+\t\trelease=`echo ${UNAME_RELEASE} | sed -e 's/[-_].*//' | cut -d. -f1,2`\n+\t\t;;\n+\tesac\n+\t# Since CPU_TYPE-MANUFACTURER-KERNEL-OPERATING_SYSTEM:\n+\t# contains redundant information, the shorter form:\n+\t# CPU_TYPE-MANUFACTURER-OPERATING_SYSTEM is used.\n+\techo \"${machine}-${os}${release}${abi}\"\n+\texit ;;\n+    *:Bitrig:*:*)\n+\tUNAME_MACHINE_ARCH=`arch | sed 's/Bitrig.//'`\n+\techo ${UNAME_MACHINE_ARCH}-unknown-bitrig${UNAME_RELEASE}\n+\texit ;;\n+    *:OpenBSD:*:*)\n+\tUNAME_MACHINE_ARCH=`arch | sed 's/OpenBSD.//'`\n+\techo ${UNAME_MACHINE_ARCH}-unknown-openbsd${UNAME_RELEASE}\n+\texit ;;\n+    *:LibertyBSD:*:*)\n+\tUNAME_MACHINE_ARCH=`arch | sed 's/^.*BSD\\.//'`\n+\techo ${UNAME_MACHINE_ARCH}-unknown-libertybsd${UNAME_RELEASE}\n+\texit ;;\n+    *:ekkoBSD:*:*)\n+\techo ${UNAME_MACHINE}-unknown-ekkobsd${UNAME_RELEASE}\n+\texit ;;\n+    *:SolidBSD:*:*)\n+\techo ${UNAME_MACHINE}-unknown-solidbsd${UNAME_RELEASE}\n+\texit ;;\n+    macppc:MirBSD:*:*)\n+\techo powerpc-unknown-mirbsd${UNAME_RELEASE}\n+\texit ;;\n+    *:MirBSD:*:*)\n+\techo ${UNAME_MACHINE}-unknown-mirbsd${UNAME_RELEASE}\n+\texit ;;\n+    *:Sortix:*:*)\n+\techo ${UNAME_MACHINE}-unknown-sortix\n+\texit ;;\n+    alpha:OSF1:*:*)\n+\tcase $UNAME_RELEASE in\n+\t*4.0)\n+\t\tUNAME_RELEASE=`/usr/sbin/sizer -v | awk '{print $3}'`\n+\t\t;;\n+\t*5.*)\n+\t\tUNAME_RELEASE=`/usr/sbin/sizer -v | awk '{print $4}'`\n+\t\t;;\n+\tesac\n+\t# According to Compaq, /usr/sbin/psrinfo has been available on\n+\t# OSF/1 and Tru64 systems produced since 1995.  I hope that\n+\t# covers most systems running today.  This code pipes the CPU\n+\t# types through head -n 1, so we only detect the type of CPU 0.\n+\tALPHA_CPU_TYPE=`/usr/sbin/psrinfo -v | sed -n -e 's/^  The alpha \\(.*\\) processor.*$/\\1/p' | head -n 1`\n+\tcase \"$ALPHA_CPU_TYPE\" in\n+\t    \"EV4 (21064)\")\n+\t\tUNAME_MACHINE=alpha ;;\n+\t    \"EV4.5 (21064)\")\n+\t\tUNAME_MACHINE=alpha ;;\n+\t    \"LCA4 (21066/21068)\")\n+\t\tUNAME_MACHINE=alpha ;;\n+\t    \"EV5 (21164)\")\n+\t\tUNAME_MACHINE=alphaev5 ;;\n+\t    \"EV5.6 (21164A)\")\n+\t\tUNAME_MACHINE=alphaev56 ;;\n+\t    \"EV5.6 (21164PC)\")\n+\t\tUNAME_MACHINE=alphapca56 ;;\n+\t    \"EV5.7 (21164PC)\")\n+\t\tUNAME_MACHINE=alphapca57 ;;\n+\t    \"EV6 (21264)\")\n+\t\tUNAME_MACHINE=alphaev6 ;;\n+\t    \"EV6.7 (21264A)\")\n+\t\tUNAME_MACHINE=alphaev67 ;;\n+\t    \"EV6.8CB (21264C)\")\n+\t\tUNAME_MACHINE=alphaev68 ;;\n+\t    \"EV6.8AL (21264B)\")\n+\t\tUNAME_MACHINE=alphaev68 ;;\n+\t    \"EV6.8CX (21264D)\")\n+\t\tUNAME_MACHINE=alphaev68 ;;\n+\t    \"EV6.9A (21264/EV69A)\")\n+\t\tUNAME_MACHINE=alphaev69 ;;\n+\t    \"EV7 (21364)\")\n+\t\tUNAME_MACHINE=alphaev7 ;;\n+\t    \"EV7.9 (21364A)\")\n+\t\tUNAME_MACHINE=alphaev79 ;;\n+\tesac\n+\t# A Pn.n version is a patched version.\n+\t# A Vn.n version is a released version.\n+\t# A Tn.n version is a released field test version.\n+\t# A Xn.n version is an unreleased experimental baselevel.\n+\t# 1.2 uses \"1.2\" for uname -r.\n+\techo ${UNAME_MACHINE}-dec-osf`echo ${UNAME_RELEASE} | sed -e 's/^[PVTX]//' | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz`\n+\t# Reset EXIT trap before exiting to avoid spurious non-zero exit code.\n+\texitcode=$?\n+\ttrap '' 0\n+\texit $exitcode ;;\n+    Alpha\\ *:Windows_NT*:*)\n+\t# How do we know it's Interix rather than the generic POSIX subsystem?\n+\t# Should we change UNAME_MACHINE based on the output of uname instead\n+\t# of the specific Alpha model?\n+\techo alpha-pc-interix\n+\texit ;;\n+    21064:Windows_NT:50:3)\n+\techo alpha-dec-winnt3.5\n+\texit ;;\n+    Amiga*:UNIX_System_V:4.0:*)\n+\techo m68k-unknown-sysv4\n+\texit ;;\n+    *:[Aa]miga[Oo][Ss]:*:*)\n+\techo ${UNAME_MACHINE}-unknown-amigaos\n+\texit ;;\n+    *:[Mm]orph[Oo][Ss]:*:*)\n+\techo ${UNAME_MACHINE}-unknown-morphos\n+\texit ;;\n+    *:OS/390:*:*)\n+\techo i370-ibm-openedition\n+\texit ;;\n+    *:z/VM:*:*)\n+\techo s390-ibm-zvmoe\n+\texit ;;\n+    *:OS400:*:*)\n+\techo powerpc-ibm-os400\n+\texit ;;\n+    arm:RISC*:1.[012]*:*|arm:riscix:1.[012]*:*)\n+\techo arm-acorn-riscix${UNAME_RELEASE}\n+\texit ;;\n+    arm*:riscos:*:*|arm*:RISCOS:*:*)\n+\techo arm-unknown-riscos\n+\texit ;;\n+    SR2?01:HI-UX/MPP:*:* | SR8000:HI-UX/MPP:*:*)\n+\techo hppa1.1-hitachi-hiuxmpp\n+\texit ;;\n+    Pyramid*:OSx*:*:* | MIS*:OSx*:*:* | MIS*:SMP_DC-OSx*:*:*)\n+\t# akee@wpdis03.wpafb.af.mil (Earle F. Ake) contributed MIS and NILE.\n+\tif test \"`(/bin/universe) 2>/dev/null`\" = att ; then\n+\t\techo pyramid-pyramid-sysv3\n+\telse\n+\t\techo pyramid-pyramid-bsd\n+\tfi\n+\texit ;;\n+    NILE*:*:*:dcosx)\n+\techo pyramid-pyramid-svr4\n+\texit ;;\n+    DRS?6000:unix:4.0:6*)\n+\techo sparc-icl-nx6\n+\texit ;;\n+    DRS?6000:UNIX_SV:4.2*:7* | DRS?6000:isis:4.2*:7*)\n+\tcase `/usr/bin/uname -p` in\n+\t    sparc) echo sparc-icl-nx7; exit ;;\n+\tesac ;;\n+    s390x:SunOS:*:*)\n+\techo ${UNAME_MACHINE}-ibm-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`\n+\texit ;;\n+    sun4H:SunOS:5.*:*)\n+\techo sparc-hal-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`\n+\texit ;;\n+    sun4*:SunOS:5.*:* | tadpole*:SunOS:5.*:*)\n+\techo sparc-sun-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`\n+\texit ;;\n+    i86pc:AuroraUX:5.*:* | i86xen:AuroraUX:5.*:*)\n+\techo i386-pc-auroraux${UNAME_RELEASE}\n+\texit ;;\n+    i86pc:SunOS:5.*:* | i86xen:SunOS:5.*:*)\n+\teval $set_cc_for_build\n+\tSUN_ARCH=i386\n+\t# If there is a compiler, see if it is configured for 64-bit objects.\n+\t# Note that the Sun cc does not turn __LP64__ into 1 like gcc does.\n+\t# This test works for both compilers.\n+\tif [ \"$CC_FOR_BUILD\" != no_compiler_found ]; then\n+\t    if (echo '#ifdef __amd64'; echo IS_64BIT_ARCH; echo '#endif') | \\\n+\t\t(CCOPTS=\"\" $CC_FOR_BUILD -E - 2>/dev/null) | \\\n+\t\tgrep IS_64BIT_ARCH >/dev/null\n+\t    then\n+\t\tSUN_ARCH=x86_64\n+\t    fi\n+\tfi\n+\techo ${SUN_ARCH}-pc-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`\n+\texit ;;\n+    sun4*:SunOS:6*:*)\n+\t# According to config.sub, this is the proper way to canonicalize\n+\t# SunOS6.  Hard to guess exactly what SunOS6 will be like, but\n+\t# it's likely to be more like Solaris than SunOS4.\n+\techo sparc-sun-solaris3`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`\n+\texit ;;\n+    sun4*:SunOS:*:*)\n+\tcase \"`/usr/bin/arch -k`\" in\n+\t    Series*|S4*)\n+\t\tUNAME_RELEASE=`uname -v`\n+\t\t;;\n+\tesac\n+\t# Japanese Language versions have a version number like `4.1.3-JL'.\n+\techo sparc-sun-sunos`echo ${UNAME_RELEASE}|sed -e 's/-/_/'`\n+\texit ;;\n+    sun3*:SunOS:*:*)\n+\techo m68k-sun-sunos${UNAME_RELEASE}\n+\texit ;;\n+    sun*:*:4.2BSD:*)\n+\tUNAME_RELEASE=`(sed 1q /etc/motd | awk '{print substr($5,1,3)}') 2>/dev/null`\n+\ttest \"x${UNAME_RELEASE}\" = x && UNAME_RELEASE=3\n+\tcase \"`/bin/arch`\" in\n+\t    sun3)\n+\t\techo m68k-sun-sunos${UNAME_RELEASE}\n+\t\t;;\n+\t    sun4)\n+\t\techo sparc-sun-sunos${UNAME_RELEASE}\n+\t\t;;\n+\tesac\n+\texit ;;\n+    aushp:SunOS:*:*)\n+\techo sparc-auspex-sunos${UNAME_RELEASE}\n+\texit ;;\n+    # The situation for MiNT is a little confusing.  The machine name\n+    # can be virtually everything (everything which is not\n+    # \"atarist\" or \"atariste\" at least should have a processor\n+    # > m68000).  The system name ranges from \"MiNT\" over \"FreeMiNT\"\n+    # to the lowercase version \"mint\" (or \"freemint\").  Finally\n+    # the system name \"TOS\" denotes a system which is actually not\n+    # MiNT.  But MiNT is downward compatible to TOS, so this should\n+    # be no problem.\n+    atarist[e]:*MiNT:*:* | atarist[e]:*mint:*:* | atarist[e]:*TOS:*:*)\n+\techo m68k-atari-mint${UNAME_RELEASE}\n+\texit ;;\n+    atari*:*MiNT:*:* | atari*:*mint:*:* | atarist[e]:*TOS:*:*)\n+\techo m68k-atari-mint${UNAME_RELEASE}\n+\texit ;;\n+    *falcon*:*MiNT:*:* | *falcon*:*mint:*:* | *falcon*:*TOS:*:*)\n+\techo m68k-atari-mint${UNAME_RELEASE}\n+\texit ;;\n+    milan*:*MiNT:*:* | milan*:*mint:*:* | *milan*:*TOS:*:*)\n+\techo m68k-milan-mint${UNAME_RELEASE}\n+\texit ;;\n+    hades*:*MiNT:*:* | hades*:*mint:*:* | *hades*:*TOS:*:*)\n+\techo m68k-hades-mint${UNAME_RELEASE}\n+\texit ;;\n+    *:*MiNT:*:* | *:*mint:*:* | *:*TOS:*:*)\n+\techo m68k-unknown-mint${UNAME_RELEASE}\n+\texit ;;\n+    m68k:machten:*:*)\n+\techo m68k-apple-machten${UNAME_RELEASE}\n+\texit ;;\n+    powerpc:machten:*:*)\n+\techo powerpc-apple-machten${UNAME_RELEASE}\n+\texit ;;\n+    RISC*:Mach:*:*)\n+\techo mips-dec-mach_bsd4.3\n+\texit ;;\n+    RISC*:ULTRIX:*:*)\n+\techo mips-dec-ultrix${UNAME_RELEASE}\n+\texit ;;\n+    VAX*:ULTRIX*:*:*)\n+\techo vax-dec-ultrix${UNAME_RELEASE}\n+\texit ;;\n+    2020:CLIX:*:* | 2430:CLIX:*:*)\n+\techo clipper-intergraph-clix${UNAME_RELEASE}\n+\texit ;;\n+    mips:*:*:UMIPS | mips:*:*:RISCos)\n+\teval $set_cc_for_build\n+\tsed 's/^\t//' << EOF >$dummy.c\n+#ifdef __cplusplus\n+#include <stdio.h>  /* for printf() prototype */\n+\tint main (int argc, char *argv[]) {\n+#else\n+\tint main (argc, argv) int argc; char *argv[]; {\n+#endif\n+\t#if defined (host_mips) && defined (MIPSEB)\n+\t#if defined (SYSTYPE_SYSV)\n+\t  printf (\"mips-mips-riscos%ssysv\\n\", argv[1]); exit (0);\n+\t#endif\n+\t#if defined (SYSTYPE_SVR4)\n+\t  printf (\"mips-mips-riscos%ssvr4\\n\", argv[1]); exit (0);\n+\t#endif\n+\t#if defined (SYSTYPE_BSD43) || defined(SYSTYPE_BSD)\n+\t  printf (\"mips-mips-riscos%sbsd\\n\", argv[1]); exit (0);\n+\t#endif\n+\t#endif\n+\t  exit (-1);\n+\t}\n+EOF\n+\t$CC_FOR_BUILD -o $dummy $dummy.c &&\n+\t  dummyarg=`echo \"${UNAME_RELEASE}\" | sed -n 's/\\([0-9]*\\).*/\\1/p'` &&\n+\t  SYSTEM_NAME=`$dummy $dummyarg` &&\n+\t    { echo \"$SYSTEM_NAME\"; exit; }\n+\techo mips-mips-riscos${UNAME_RELEASE}\n+\texit ;;\n+    Motorola:PowerMAX_OS:*:*)\n+\techo powerpc-motorola-powermax\n+\texit ;;\n+    Motorola:*:4.3:PL8-*)\n+\techo powerpc-harris-powermax\n+\texit ;;\n+    Night_Hawk:*:*:PowerMAX_OS | Synergy:PowerMAX_OS:*:*)\n+\techo powerpc-harris-powermax\n+\texit ;;\n+    Night_Hawk:Power_UNIX:*:*)\n+\techo powerpc-harris-powerunix\n+\texit ;;\n+    m88k:CX/UX:7*:*)\n+\techo m88k-harris-cxux7\n+\texit ;;\n+    m88k:*:4*:R4*)\n+\techo m88k-motorola-sysv4\n+\texit ;;\n+    m88k:*:3*:R3*)\n+\techo m88k-motorola-sysv3\n+\texit ;;\n+    AViiON:dgux:*:*)\n+\t# DG/UX returns AViiON for all architectures\n+\tUNAME_PROCESSOR=`/usr/bin/uname -p`\n+\tif [ $UNAME_PROCESSOR = mc88100 ] || [ $UNAME_PROCESSOR = mc88110 ]\n+\tthen\n+\t    if [ ${TARGET_BINARY_INTERFACE}x = m88kdguxelfx ] || \\\n+\t       [ ${TARGET_BINARY_INTERFACE}x = x ]\n+\t    then\n+\t\techo m88k-dg-dgux${UNAME_RELEASE}\n+\t    else\n+\t\techo m88k-dg-dguxbcs${UNAME_RELEASE}\n+\t    fi\n+\telse\n+\t    echo i586-dg-dgux${UNAME_RELEASE}\n+\tfi\n+\texit ;;\n+    M88*:DolphinOS:*:*)\t# DolphinOS (SVR3)\n+\techo m88k-dolphin-sysv3\n+\texit ;;\n+    M88*:*:R3*:*)\n+\t# Delta 88k system running SVR3\n+\techo m88k-motorola-sysv3\n+\texit ;;\n+    XD88*:*:*:*) # Tektronix XD88 system running UTekV (SVR3)\n+\techo m88k-tektronix-sysv3\n+\texit ;;\n+    Tek43[0-9][0-9]:UTek:*:*) # Tektronix 4300 system running UTek (BSD)\n+\techo m68k-tektronix-bsd\n+\texit ;;\n+    *:IRIX*:*:*)\n+\techo mips-sgi-irix`echo ${UNAME_RELEASE}|sed -e 's/-/_/g'`\n+\texit ;;\n+    ????????:AIX?:[12].1:2)   # AIX 2.2.1 or AIX 2.1.1 is RT/PC AIX.\n+\techo romp-ibm-aix     # uname -m gives an 8 hex-code CPU id\n+\texit ;;               # Note that: echo \"'`uname -s`'\" gives 'AIX '\n+    i*86:AIX:*:*)\n+\techo i386-ibm-aix\n+\texit ;;\n+    ia64:AIX:*:*)\n+\tif [ -x /usr/bin/oslevel ] ; then\n+\t\tIBM_REV=`/usr/bin/oslevel`\n+\telse\n+\t\tIBM_REV=${UNAME_VERSION}.${UNAME_RELEASE}\n+\tfi\n+\techo ${UNAME_MACHINE}-ibm-aix${IBM_REV}\n+\texit ;;\n+    *:AIX:2:3)\n+\tif grep bos325 /usr/include/stdio.h >/dev/null 2>&1; then\n+\t\teval $set_cc_for_build\n+\t\tsed 's/^\t\t//' << EOF >$dummy.c\n+\t\t#include <sys/systemcfg.h>\n+\n+\t\tmain()\n+\t\t\t{\n+\t\t\tif (!__power_pc())\n+\t\t\t\texit(1);\n+\t\t\tputs(\"powerpc-ibm-aix3.2.5\");\n+\t\t\texit(0);\n+\t\t\t}\n+EOF\n+\t\tif $CC_FOR_BUILD -o $dummy $dummy.c && SYSTEM_NAME=`$dummy`\n+\t\tthen\n+\t\t\techo \"$SYSTEM_NAME\"\n+\t\telse\n+\t\t\techo rs6000-ibm-aix3.2.5\n+\t\tfi\n+\telif grep bos324 /usr/include/stdio.h >/dev/null 2>&1; then\n+\t\techo rs6000-ibm-aix3.2.4\n+\telse\n+\t\techo rs6000-ibm-aix3.2\n+\tfi\n+\texit ;;\n+    *:AIX:*:[4567])\n+\tIBM_CPU_ID=`/usr/sbin/lsdev -C -c processor -S available | sed 1q | awk '{ print $1 }'`\n+\tif /usr/sbin/lsattr -El ${IBM_CPU_ID} | grep ' POWER' >/dev/null 2>&1; then\n+\t\tIBM_ARCH=rs6000\n+\telse\n+\t\tIBM_ARCH=powerpc\n+\tfi\n+\tif [ -x /usr/bin/lslpp ] ; then\n+\t\tIBM_REV=`/usr/bin/lslpp -Lqc bos.rte.libc |\n+\t\t\t   awk -F: '{ print $3 }' | sed s/[0-9]*$/0/`\n+\telse\n+\t\tIBM_REV=${UNAME_VERSION}.${UNAME_RELEASE}\n+\tfi\n+\techo ${IBM_ARCH}-ibm-aix${IBM_REV}\n+\texit ;;\n+    *:AIX:*:*)\n+\techo rs6000-ibm-aix\n+\texit ;;\n+    ibmrt:4.4BSD:*|romp-ibm:BSD:*)\n+\techo romp-ibm-bsd4.4\n+\texit ;;\n+    ibmrt:*BSD:*|romp-ibm:BSD:*)            # covers RT/PC BSD and\n+\techo romp-ibm-bsd${UNAME_RELEASE}   # 4.3 with uname added to\n+\texit ;;                             # report: romp-ibm BSD 4.3\n+    *:BOSX:*:*)\n+\techo rs6000-bull-bosx\n+\texit ;;\n+    DPX/2?00:B.O.S.:*:*)\n+\techo m68k-bull-sysv3\n+\texit ;;\n+    9000/[34]??:4.3bsd:1.*:*)\n+\techo m68k-hp-bsd\n+\texit ;;\n+    hp300:4.4BSD:*:* | 9000/[34]??:4.3bsd:2.*:*)\n+\techo m68k-hp-bsd4.4\n+\texit ;;\n+    9000/[34678]??:HP-UX:*:*)\n+\tHPUX_REV=`echo ${UNAME_RELEASE}|sed -e 's/[^.]*.[0B]*//'`\n+\tcase \"${UNAME_MACHINE}\" in\n+\t    9000/31? )            HP_ARCH=m68000 ;;\n+\t    9000/[34]?? )         HP_ARCH=m68k ;;\n+\t    9000/[678][0-9][0-9])\n+\t\tif [ -x /usr/bin/getconf ]; then\n+\t\t    sc_cpu_version=`/usr/bin/getconf SC_CPU_VERSION 2>/dev/null`\n+\t\t    sc_kernel_bits=`/usr/bin/getconf SC_KERNEL_BITS 2>/dev/null`\n+\t\t    case \"${sc_cpu_version}\" in\n+\t\t      523) HP_ARCH=hppa1.0 ;; # CPU_PA_RISC1_0\n+\t\t      528) HP_ARCH=hppa1.1 ;; # CPU_PA_RISC1_1\n+\t\t      532)                      # CPU_PA_RISC2_0\n+\t\t\tcase \"${sc_kernel_bits}\" in\n+\t\t\t  32) HP_ARCH=hppa2.0n ;;\n+\t\t\t  64) HP_ARCH=hppa2.0w ;;\n+\t\t\t  '') HP_ARCH=hppa2.0 ;;   # HP-UX 10.20\n+\t\t\tesac ;;\n+\t\t    esac\n+\t\tfi\n+\t\tif [ \"${HP_ARCH}\" = \"\" ]; then\n+\t\t    eval $set_cc_for_build\n+\t\t    sed 's/^\t\t//' << EOF >$dummy.c\n+\n+\t\t#define _HPUX_SOURCE\n+\t\t#include <stdlib.h>\n+\t\t#include <unistd.h>\n+\n+\t\tint main ()\n+\t\t{\n+\t\t#if defined(_SC_KERNEL_BITS)\n+\t\t    long bits = sysconf(_SC_KERNEL_BITS);\n+\t\t#endif\n+\t\t    long cpu  = sysconf (_SC_CPU_VERSION);\n+\n+\t\t    switch (cpu)\n+\t\t\t{\n+\t\t\tcase CPU_PA_RISC1_0: puts (\"hppa1.0\"); break;\n+\t\t\tcase CPU_PA_RISC1_1: puts (\"hppa1.1\"); break;\n+\t\t\tcase CPU_PA_RISC2_0:\n+\t\t#if defined(_SC_KERNEL_BITS)\n+\t\t\t    switch (bits)\n+\t\t\t\t{\n+\t\t\t\tcase 64: puts (\"hppa2.0w\"); break;\n+\t\t\t\tcase 32: puts (\"hppa2.0n\"); break;\n+\t\t\t\tdefault: puts (\"hppa2.0\"); break;\n+\t\t\t\t} break;\n+\t\t#else  /* !defined(_SC_KERNEL_BITS) */\n+\t\t\t    puts (\"hppa2.0\"); break;\n+\t\t#endif\n+\t\t\tdefault: puts (\"hppa1.0\"); break;\n+\t\t\t}\n+\t\t    exit (0);\n+\t\t}\n+EOF\n+\t\t    (CCOPTS=\"\" $CC_FOR_BUILD -o $dummy $dummy.c 2>/dev/null) && HP_ARCH=`$dummy`\n+\t\t    test -z \"$HP_ARCH\" && HP_ARCH=hppa\n+\t\tfi ;;\n+\tesac\n+\tif [ ${HP_ARCH} = hppa2.0w ]\n+\tthen\n+\t    eval $set_cc_for_build\n+\n+\t    # hppa2.0w-hp-hpux* has a 64-bit kernel and a compiler generating\n+\t    # 32-bit code.  hppa64-hp-hpux* has the same kernel and a compiler\n+\t    # generating 64-bit code.  GNU and HP use different nomenclature:\n+\t    #\n+\t    # $ CC_FOR_BUILD=cc ./config.guess\n+\t    # => hppa2.0w-hp-hpux11.23\n+\t    # $ CC_FOR_BUILD=\"cc +DA2.0w\" ./config.guess\n+\t    # => hppa64-hp-hpux11.23\n+\n+\t    if echo __LP64__ | (CCOPTS=\"\" $CC_FOR_BUILD -E - 2>/dev/null) |\n+\t\tgrep -q __LP64__\n+\t    then\n+\t\tHP_ARCH=hppa2.0w\n+\t    else\n+\t\tHP_ARCH=hppa64\n+\t    fi\n+\tfi\n+\techo ${HP_ARCH}-hp-hpux${HPUX_REV}\n+\texit ;;\n+    ia64:HP-UX:*:*)\n+\tHPUX_REV=`echo ${UNAME_RELEASE}|sed -e 's/[^.]*.[0B]*//'`\n+\techo ia64-hp-hpux${HPUX_REV}\n+\texit ;;\n+    3050*:HI-UX:*:*)\n+\teval $set_cc_for_build\n+\tsed 's/^\t//' << EOF >$dummy.c\n+\t#include <unistd.h>\n+\tint\n+\tmain ()\n+\t{\n+\t  long cpu = sysconf (_SC_CPU_VERSION);\n+\t  /* The order matters, because CPU_IS_HP_MC68K erroneously returns\n+\t     true for CPU_PA_RISC1_0.  CPU_IS_PA_RISC returns correct\n+\t     results, however.  */\n+\t  if (CPU_IS_PA_RISC (cpu))\n+\t    {\n+\t      switch (cpu)\n+\t\t{\n+\t\t  case CPU_PA_RISC1_0: puts (\"hppa1.0-hitachi-hiuxwe2\"); break;\n+\t\t  case CPU_PA_RISC1_1: puts (\"hppa1.1-hitachi-hiuxwe2\"); break;\n+\t\t  case CPU_PA_RISC2_0: puts (\"hppa2.0-hitachi-hiuxwe2\"); break;\n+\t\t  default: puts (\"hppa-hitachi-hiuxwe2\"); break;\n+\t\t}\n+\t    }\n+\t  else if (CPU_IS_HP_MC68K (cpu))\n+\t    puts (\"m68k-hitachi-hiuxwe2\");\n+\t  else puts (\"unknown-hitachi-hiuxwe2\");\n+\t  exit (0);\n+\t}\n+EOF\n+\t$CC_FOR_BUILD -o $dummy $dummy.c && SYSTEM_NAME=`$dummy` &&\n+\t\t{ echo \"$SYSTEM_NAME\"; exit; }\n+\techo unknown-hitachi-hiuxwe2\n+\texit ;;\n+    9000/7??:4.3bsd:*:* | 9000/8?[79]:4.3bsd:*:* )\n+\techo hppa1.1-hp-bsd\n+\texit ;;\n+    9000/8??:4.3bsd:*:*)\n+\techo hppa1.0-hp-bsd\n+\texit ;;\n+    *9??*:MPE/iX:*:* | *3000*:MPE/iX:*:*)\n+\techo hppa1.0-hp-mpeix\n+\texit ;;\n+    hp7??:OSF1:*:* | hp8?[79]:OSF1:*:* )\n+\techo hppa1.1-hp-osf\n+\texit ;;\n+    hp8??:OSF1:*:*)\n+\techo hppa1.0-hp-osf\n+\texit ;;\n+    i*86:OSF1:*:*)\n+\tif [ -x /usr/sbin/sysversion ] ; then\n+\t    echo ${UNAME_MACHINE}-unknown-osf1mk\n+\telse\n+\t    echo ${UNAME_MACHINE}-unknown-osf1\n+\tfi\n+\texit ;;\n+    parisc*:Lites*:*:*)\n+\techo hppa1.1-hp-lites\n+\texit ;;\n+    C1*:ConvexOS:*:* | convex:ConvexOS:C1*:*)\n+\techo c1-convex-bsd\n+\texit ;;\n+    C2*:ConvexOS:*:* | convex:ConvexOS:C2*:*)\n+\tif getsysinfo -f scalar_acc\n+\tthen echo c32-convex-bsd\n+\telse echo c2-convex-bsd\n+\tfi\n+\texit ;;\n+    C34*:ConvexOS:*:* | convex:ConvexOS:C34*:*)\n+\techo c34-convex-bsd\n+\texit ;;\n+    C38*:ConvexOS:*:* | convex:ConvexOS:C38*:*)\n+\techo c38-convex-bsd\n+\texit ;;\n+    C4*:ConvexOS:*:* | convex:ConvexOS:C4*:*)\n+\techo c4-convex-bsd\n+\texit ;;\n+    CRAY*Y-MP:*:*:*)\n+\techo ymp-cray-unicos${UNAME_RELEASE} | sed -e 's/\\.[^.]*$/.X/'\n+\texit ;;\n+    CRAY*[A-Z]90:*:*:*)\n+\techo ${UNAME_MACHINE}-cray-unicos${UNAME_RELEASE} \\\n+\t| sed -e 's/CRAY.*\\([A-Z]90\\)/\\1/' \\\n+\t      -e y/ABCDEFGHIJKLMNOPQRSTUVWXYZ/abcdefghijklmnopqrstuvwxyz/ \\\n+\t      -e 's/\\.[^.]*$/.X/'\n+\texit ;;\n+    CRAY*TS:*:*:*)\n+\techo t90-cray-unicos${UNAME_RELEASE} | sed -e 's/\\.[^.]*$/.X/'\n+\texit ;;\n+    CRAY*T3E:*:*:*)\n+\techo alphaev5-cray-unicosmk${UNAME_RELEASE} | sed -e 's/\\.[^.]*$/.X/'\n+\texit ;;\n+    CRAY*SV1:*:*:*)\n+\techo sv1-cray-unicos${UNAME_RELEASE} | sed -e 's/\\.[^.]*$/.X/'\n+\texit ;;\n+    *:UNICOS/mp:*:*)\n+\techo craynv-cray-unicosmp${UNAME_RELEASE} | sed -e 's/\\.[^.]*$/.X/'\n+\texit ;;\n+    F30[01]:UNIX_System_V:*:* | F700:UNIX_System_V:*:*)\n+\tFUJITSU_PROC=`uname -m | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz`\n+\tFUJITSU_SYS=`uname -p | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz | sed -e 's/\\///'`\n+\tFUJITSU_REL=`echo ${UNAME_RELEASE} | sed -e 's/ /_/'`\n+\techo \"${FUJITSU_PROC}-fujitsu-${FUJITSU_SYS}${FUJITSU_REL}\"\n+\texit ;;\n+    5000:UNIX_System_V:4.*:*)\n+\tFUJITSU_SYS=`uname -p | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz | sed -e 's/\\///'`\n+\tFUJITSU_REL=`echo ${UNAME_RELEASE} | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz | sed -e 's/ /_/'`\n+\techo \"sparc-fujitsu-${FUJITSU_SYS}${FUJITSU_REL}\"\n+\texit ;;\n+    i*86:BSD/386:*:* | i*86:BSD/OS:*:* | *:Ascend\\ Embedded/OS:*:*)\n+\techo ${UNAME_MACHINE}-pc-bsdi${UNAME_RELEASE}\n+\texit ;;\n+    sparc*:BSD/OS:*:*)\n+\techo sparc-unknown-bsdi${UNAME_RELEASE}\n+\texit ;;\n+    *:BSD/OS:*:*)\n+\techo ${UNAME_MACHINE}-unknown-bsdi${UNAME_RELEASE}\n+\texit ;;\n+    *:FreeBSD:*:*)\n+\tUNAME_PROCESSOR=`/usr/bin/uname -p`\n+\tcase ${UNAME_PROCESSOR} in\n+\t    amd64)\n+\t\techo x86_64-unknown-freebsd`echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'` ;;\n+\t    *)\n+\t\techo ${UNAME_PROCESSOR}-unknown-freebsd`echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'` ;;\n+\tesac\n+\texit ;;\n+    i*:CYGWIN*:*)\n+\techo ${UNAME_MACHINE}-pc-cygwin\n+\texit ;;\n+    *:MINGW64*:*)\n+\techo ${UNAME_MACHINE}-pc-mingw64\n+\texit ;;\n+    *:MINGW*:*)\n+\techo ${UNAME_MACHINE}-pc-mingw32\n+\texit ;;\n+    *:MSYS*:*)\n+\techo ${UNAME_MACHINE}-pc-msys\n+\texit ;;\n+    i*:windows32*:*)\n+\t# uname -m includes \"-pc\" on this system.\n+\techo ${UNAME_MACHINE}-mingw32\n+\texit ;;\n+    i*:PW*:*)\n+\techo ${UNAME_MACHINE}-pc-pw32\n+\texit ;;\n+    *:Interix*:*)\n+\tcase ${UNAME_MACHINE} in\n+\t    x86)\n+\t\techo i586-pc-interix${UNAME_RELEASE}\n+\t\texit ;;\n+\t    authenticamd | genuineintel | EM64T)\n+\t\techo x86_64-unknown-interix${UNAME_RELEASE}\n+\t\texit ;;\n+\t    IA64)\n+\t\techo ia64-unknown-interix${UNAME_RELEASE}\n+\t\texit ;;\n+\tesac ;;\n+    [345]86:Windows_95:* | [345]86:Windows_98:* | [345]86:Windows_NT:*)\n+\techo i${UNAME_MACHINE}-pc-mks\n+\texit ;;\n+    8664:Windows_NT:*)\n+\techo x86_64-pc-mks\n+\texit ;;\n+    i*:Windows_NT*:* | Pentium*:Windows_NT*:*)\n+\t# How do we know it's Interix rather than the generic POSIX subsystem?\n+\t# It also conflicts with pre-2.0 versions of AT&T UWIN. Should we\n+\t# UNAME_MACHINE based on the output of uname instead of i386?\n+\techo i586-pc-interix\n+\texit ;;\n+    i*:UWIN*:*)\n+\techo ${UNAME_MACHINE}-pc-uwin\n+\texit ;;\n+    amd64:CYGWIN*:*:* | x86_64:CYGWIN*:*:*)\n+\techo x86_64-unknown-cygwin\n+\texit ;;\n+    p*:CYGWIN*:*)\n+\techo powerpcle-unknown-cygwin\n+\texit ;;\n+    prep*:SunOS:5.*:*)\n+\techo powerpcle-unknown-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`\n+\texit ;;\n+    *:GNU:*:*)\n+\t# the GNU system\n+\techo `echo ${UNAME_MACHINE}|sed -e 's,[-/].*$,,'`-unknown-${LIBC}`echo ${UNAME_RELEASE}|sed -e 's,/.*$,,'`\n+\texit ;;\n+    *:GNU/*:*:*)\n+\t# other systems with GNU libc and userland\n+\techo ${UNAME_MACHINE}-unknown-`echo ${UNAME_SYSTEM} | sed 's,^[^/]*/,,' | tr \"[:upper:]\" \"[:lower:]\"``echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'`-${LIBC}\n+\texit ;;\n+    i*86:Minix:*:*)\n+\techo ${UNAME_MACHINE}-pc-minix\n+\texit ;;\n+    aarch64:Linux:*:*)\n+\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n+\texit ;;\n+    aarch64_be:Linux:*:*)\n+\tUNAME_MACHINE=aarch64_be\n+\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n+\texit ;;\n+    alpha:Linux:*:*)\n+\tcase `sed -n '/^cpu model/s/^.*: \\(.*\\)/\\1/p' < /proc/cpuinfo` in\n+\t  EV5)   UNAME_MACHINE=alphaev5 ;;\n+\t  EV56)  UNAME_MACHINE=alphaev56 ;;\n+\t  PCA56) UNAME_MACHINE=alphapca56 ;;\n+\t  PCA57) UNAME_MACHINE=alphapca56 ;;\n+\t  EV6)   UNAME_MACHINE=alphaev6 ;;\n+\t  EV67)  UNAME_MACHINE=alphaev67 ;;\n+\t  EV68*) UNAME_MACHINE=alphaev68 ;;\n+\tesac\n+\tobjdump --private-headers /bin/sh | grep -q ld.so.1\n+\tif test \"$?\" = 0 ; then LIBC=gnulibc1 ; fi\n+\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n+\texit ;;\n+    arc:Linux:*:* | arceb:Linux:*:*)\n+\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n+\texit ;;\n+    arm*:Linux:*:*)\n+\teval $set_cc_for_build\n+\tif echo __ARM_EABI__ | $CC_FOR_BUILD -E - 2>/dev/null \\\n+\t    | grep -q __ARM_EABI__\n+\tthen\n+\t    echo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n+\telse\n+\t    if echo __ARM_PCS_VFP | $CC_FOR_BUILD -E - 2>/dev/null \\\n+\t\t| grep -q __ARM_PCS_VFP\n+\t    then\n+\t\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}eabi\n+\t    else\n+\t\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}eabihf\n+\t    fi\n+\tfi\n+\texit ;;\n+    avr32*:Linux:*:*)\n+\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n+\texit ;;\n+    cris:Linux:*:*)\n+\techo ${UNAME_MACHINE}-axis-linux-${LIBC}\n+\texit ;;\n+    crisv32:Linux:*:*)\n+\techo ${UNAME_MACHINE}-axis-linux-${LIBC}\n+\texit ;;\n+    e2k:Linux:*:*)\n+\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n+\texit ;;\n+    frv:Linux:*:*)\n+\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n+\texit ;;\n+    hexagon:Linux:*:*)\n+\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n+\texit ;;\n+    i*86:Linux:*:*)\n+\techo ${UNAME_MACHINE}-pc-linux-${LIBC}\n+\texit ;;\n+    ia64:Linux:*:*)\n+\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n+\texit ;;\n+    k1om:Linux:*:*)\n+\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n+\texit ;;\n+    m32r*:Linux:*:*)\n+\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n+\texit ;;\n+    m68*:Linux:*:*)\n+\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n+\texit ;;\n+    mips:Linux:*:* | mips64:Linux:*:*)\n+\teval $set_cc_for_build\n+\tsed 's/^\t//' << EOF >$dummy.c\n+\t#undef CPU\n+\t#undef ${UNAME_MACHINE}\n+\t#undef ${UNAME_MACHINE}el\n+\t#if defined(__MIPSEL__) || defined(__MIPSEL) || defined(_MIPSEL) || defined(MIPSEL)\n+\tCPU=${UNAME_MACHINE}el\n+\t#else\n+\t#if defined(__MIPSEB__) || defined(__MIPSEB) || defined(_MIPSEB) || defined(MIPSEB)\n+\tCPU=${UNAME_MACHINE}\n+\t#else\n+\tCPU=\n+\t#endif\n+\t#endif\n+EOF\n+\teval `$CC_FOR_BUILD -E $dummy.c 2>/dev/null | grep '^CPU'`\n+\ttest x\"${CPU}\" != x && { echo \"${CPU}-unknown-linux-${LIBC}\"; exit; }\n+\t;;\n+    openrisc*:Linux:*:*)\n+\techo or1k-unknown-linux-${LIBC}\n+\texit ;;\n+    or32:Linux:*:* | or1k*:Linux:*:*)\n+\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n+\texit ;;\n+    padre:Linux:*:*)\n+\techo sparc-unknown-linux-${LIBC}\n+\texit ;;\n+    parisc64:Linux:*:* | hppa64:Linux:*:*)\n+\techo hppa64-unknown-linux-${LIBC}\n+\texit ;;\n+    parisc:Linux:*:* | hppa:Linux:*:*)\n+\t# Look for CPU level\n+\tcase `grep '^cpu[^a-z]*:' /proc/cpuinfo 2>/dev/null | cut -d' ' -f2` in\n+\t  PA7*) echo hppa1.1-unknown-linux-${LIBC} ;;\n+\t  PA8*) echo hppa2.0-unknown-linux-${LIBC} ;;\n+\t  *)    echo hppa-unknown-linux-${LIBC} ;;\n+\tesac\n+\texit ;;\n+    ppc64:Linux:*:*)\n+\techo powerpc64-unknown-linux-${LIBC}\n+\texit ;;\n+    ppc:Linux:*:*)\n+\techo powerpc-unknown-linux-${LIBC}\n+\texit ;;\n+    ppc64le:Linux:*:*)\n+\techo powerpc64le-unknown-linux-${LIBC}\n+\texit ;;\n+    ppcle:Linux:*:*)\n+\techo powerpcle-unknown-linux-${LIBC}\n+\texit ;;\n+    s390:Linux:*:* | s390x:Linux:*:*)\n+\techo ${UNAME_MACHINE}-ibm-linux-${LIBC}\n+\texit ;;\n+    sh64*:Linux:*:*)\n+\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n+\texit ;;\n+    sh*:Linux:*:*)\n+\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n+\texit ;;\n+    sparc:Linux:*:* | sparc64:Linux:*:*)\n+\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n+\texit ;;\n+    tile*:Linux:*:*)\n+\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n+\texit ;;\n+    vax:Linux:*:*)\n+\techo ${UNAME_MACHINE}-dec-linux-${LIBC}\n+\texit ;;\n+    x86_64:Linux:*:*)\n+\techo ${UNAME_MACHINE}-pc-linux-${LIBC}\n+\texit ;;\n+    xtensa*:Linux:*:*)\n+\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n+\texit ;;\n+    i*86:DYNIX/ptx:4*:*)\n+\t# ptx 4.0 does uname -s correctly, with DYNIX/ptx in there.\n+\t# earlier versions are messed up and put the nodename in both\n+\t# sysname and nodename.\n+\techo i386-sequent-sysv4\n+\texit ;;\n+    i*86:UNIX_SV:4.2MP:2.*)\n+\t# Unixware is an offshoot of SVR4, but it has its own version\n+\t# number series starting with 2...\n+\t# I am not positive that other SVR4 systems won't match this,\n+\t# I just have to hope.  -- rms.\n+\t# Use sysv4.2uw... so that sysv4* matches it.\n+\techo ${UNAME_MACHINE}-pc-sysv4.2uw${UNAME_VERSION}\n+\texit ;;\n+    i*86:OS/2:*:*)\n+\t# If we were able to find `uname', then EMX Unix compatibility\n+\t# is probably installed.\n+\techo ${UNAME_MACHINE}-pc-os2-emx\n+\texit ;;\n+    i*86:XTS-300:*:STOP)\n+\techo ${UNAME_MACHINE}-unknown-stop\n+\texit ;;\n+    i*86:atheos:*:*)\n+\techo ${UNAME_MACHINE}-unknown-atheos\n+\texit ;;\n+    i*86:syllable:*:*)\n+\techo ${UNAME_MACHINE}-pc-syllable\n+\texit ;;\n+    i*86:LynxOS:2.*:* | i*86:LynxOS:3.[01]*:* | i*86:LynxOS:4.[02]*:*)\n+\techo i386-unknown-lynxos${UNAME_RELEASE}\n+\texit ;;\n+    i*86:*DOS:*:*)\n+\techo ${UNAME_MACHINE}-pc-msdosdjgpp\n+\texit ;;\n+    i*86:*:4.*:* | i*86:SYSTEM_V:4.*:*)\n+\tUNAME_REL=`echo ${UNAME_RELEASE} | sed 's/\\/MP$//'`\n+\tif grep Novell /usr/include/link.h >/dev/null 2>/dev/null; then\n+\t\techo ${UNAME_MACHINE}-univel-sysv${UNAME_REL}\n+\telse\n+\t\techo ${UNAME_MACHINE}-pc-sysv${UNAME_REL}\n+\tfi\n+\texit ;;\n+    i*86:*:5:[678]*)\n+\t# UnixWare 7.x, OpenUNIX and OpenServer 6.\n+\tcase `/bin/uname -X | grep \"^Machine\"` in\n+\t    *486*)\t     UNAME_MACHINE=i486 ;;\n+\t    *Pentium)\t     UNAME_MACHINE=i586 ;;\n+\t    *Pent*|*Celeron) UNAME_MACHINE=i686 ;;\n+\tesac\n+\techo ${UNAME_MACHINE}-unknown-sysv${UNAME_RELEASE}${UNAME_SYSTEM}${UNAME_VERSION}\n+\texit ;;\n+    i*86:*:3.2:*)\n+\tif test -f /usr/options/cb.name; then\n+\t\tUNAME_REL=`sed -n 's/.*Version //p' </usr/options/cb.name`\n+\t\techo ${UNAME_MACHINE}-pc-isc$UNAME_REL\n+\telif /bin/uname -X 2>/dev/null >/dev/null ; then\n+\t\tUNAME_REL=`(/bin/uname -X|grep Release|sed -e 's/.*= //')`\n+\t\t(/bin/uname -X|grep i80486 >/dev/null) && UNAME_MACHINE=i486\n+\t\t(/bin/uname -X|grep '^Machine.*Pentium' >/dev/null) \\\n+\t\t\t&& UNAME_MACHINE=i586\n+\t\t(/bin/uname -X|grep '^Machine.*Pent *II' >/dev/null) \\\n+\t\t\t&& UNAME_MACHINE=i686\n+\t\t(/bin/uname -X|grep '^Machine.*Pentium Pro' >/dev/null) \\\n+\t\t\t&& UNAME_MACHINE=i686\n+\t\techo ${UNAME_MACHINE}-pc-sco$UNAME_REL\n+\telse\n+\t\techo ${UNAME_MACHINE}-pc-sysv32\n+\tfi\n+\texit ;;\n+    pc:*:*:*)\n+\t# Left here for compatibility:\n+\t# uname -m prints for DJGPP always 'pc', but it prints nothing about\n+\t# the processor, so we play safe by assuming i586.\n+\t# Note: whatever this is, it MUST be the same as what config.sub\n+\t# prints for the \"djgpp\" host, or else GDB configure will decide that\n+\t# this is a cross-build.\n+\techo i586-pc-msdosdjgpp\n+\texit ;;\n+    Intel:Mach:3*:*)\n+\techo i386-pc-mach3\n+\texit ;;\n+    paragon:*:*:*)\n+\techo i860-intel-osf1\n+\texit ;;\n+    i860:*:4.*:*) # i860-SVR4\n+\tif grep Stardent /usr/include/sys/uadmin.h >/dev/null 2>&1 ; then\n+\t  echo i860-stardent-sysv${UNAME_RELEASE} # Stardent Vistra i860-SVR4\n+\telse # Add other i860-SVR4 vendors below as they are discovered.\n+\t  echo i860-unknown-sysv${UNAME_RELEASE}  # Unknown i860-SVR4\n+\tfi\n+\texit ;;\n+    mini*:CTIX:SYS*5:*)\n+\t# \"miniframe\"\n+\techo m68010-convergent-sysv\n+\texit ;;\n+    mc68k:UNIX:SYSTEM5:3.51m)\n+\techo m68k-convergent-sysv\n+\texit ;;\n+    M680?0:D-NIX:5.3:*)\n+\techo m68k-diab-dnix\n+\texit ;;\n+    M68*:*:R3V[5678]*:*)\n+\ttest -r /sysV68 && { echo 'm68k-motorola-sysv'; exit; } ;;\n+    3[345]??:*:4.0:3.0 | 3[34]??A:*:4.0:3.0 | 3[34]??,*:*:4.0:3.0 | 3[34]??/*:*:4.0:3.0 | 4400:*:4.0:3.0 | 4850:*:4.0:3.0 | SKA40:*:4.0:3.0 | SDS2:*:4.0:3.0 | SHG2:*:4.0:3.0 | S7501*:*:4.0:3.0)\n+\tOS_REL=''\n+\ttest -r /etc/.relid \\\n+\t&& OS_REL=.`sed -n 's/[^ ]* [^ ]* \\([0-9][0-9]\\).*/\\1/p' < /etc/.relid`\n+\t/bin/uname -p 2>/dev/null | grep 86 >/dev/null \\\n+\t  && { echo i486-ncr-sysv4.3${OS_REL}; exit; }\n+\t/bin/uname -p 2>/dev/null | /bin/grep entium >/dev/null \\\n+\t  && { echo i586-ncr-sysv4.3${OS_REL}; exit; } ;;\n+    3[34]??:*:4.0:* | 3[34]??,*:*:4.0:*)\n+\t/bin/uname -p 2>/dev/null | grep 86 >/dev/null \\\n+\t  && { echo i486-ncr-sysv4; exit; } ;;\n+    NCR*:*:4.2:* | MPRAS*:*:4.2:*)\n+\tOS_REL='.3'\n+\ttest -r /etc/.relid \\\n+\t    && OS_REL=.`sed -n 's/[^ ]* [^ ]* \\([0-9][0-9]\\).*/\\1/p' < /etc/.relid`\n+\t/bin/uname -p 2>/dev/null | grep 86 >/dev/null \\\n+\t    && { echo i486-ncr-sysv4.3${OS_REL}; exit; }\n+\t/bin/uname -p 2>/dev/null | /bin/grep entium >/dev/null \\\n+\t    && { echo i586-ncr-sysv4.3${OS_REL}; exit; }\n+\t/bin/uname -p 2>/dev/null | /bin/grep pteron >/dev/null \\\n+\t    && { echo i586-ncr-sysv4.3${OS_REL}; exit; } ;;\n+    m68*:LynxOS:2.*:* | m68*:LynxOS:3.0*:*)\n+\techo m68k-unknown-lynxos${UNAME_RELEASE}\n+\texit ;;\n+    mc68030:UNIX_System_V:4.*:*)\n+\techo m68k-atari-sysv4\n+\texit ;;\n+    TSUNAMI:LynxOS:2.*:*)\n+\techo sparc-unknown-lynxos${UNAME_RELEASE}\n+\texit ;;\n+    rs6000:LynxOS:2.*:*)\n+\techo rs6000-unknown-lynxos${UNAME_RELEASE}\n+\texit ;;\n+    PowerPC:LynxOS:2.*:* | PowerPC:LynxOS:3.[01]*:* | PowerPC:LynxOS:4.[02]*:*)\n+\techo powerpc-unknown-lynxos${UNAME_RELEASE}\n+\texit ;;\n+    SM[BE]S:UNIX_SV:*:*)\n+\techo mips-dde-sysv${UNAME_RELEASE}\n+\texit ;;\n+    RM*:ReliantUNIX-*:*:*)\n+\techo mips-sni-sysv4\n+\texit ;;\n+    RM*:SINIX-*:*:*)\n+\techo mips-sni-sysv4\n+\texit ;;\n+    *:SINIX-*:*:*)\n+\tif uname -p 2>/dev/null >/dev/null ; then\n+\t\tUNAME_MACHINE=`(uname -p) 2>/dev/null`\n+\t\techo ${UNAME_MACHINE}-sni-sysv4\n+\telse\n+\t\techo ns32k-sni-sysv\n+\tfi\n+\texit ;;\n+    PENTIUM:*:4.0*:*)\t# Unisys `ClearPath HMP IX 4000' SVR4/MP effort\n+\t\t\t# says <Richard.M.Bartel@ccMail.Census.GOV>\n+\techo i586-unisys-sysv4\n+\texit ;;\n+    *:UNIX_System_V:4*:FTX*)\n+\t# From Gerald Hewes <hewes@openmarket.com>.\n+\t# How about differentiating between stratus architectures? -djm\n+\techo hppa1.1-stratus-sysv4\n+\texit ;;\n+    *:*:*:FTX*)\n+\t# From seanf@swdc.stratus.com.\n+\techo i860-stratus-sysv4\n+\texit ;;\n+    i*86:VOS:*:*)\n+\t# From Paul.Green@stratus.com.\n+\techo ${UNAME_MACHINE}-stratus-vos\n+\texit ;;\n+    *:VOS:*:*)\n+\t# From Paul.Green@stratus.com.\n+\techo hppa1.1-stratus-vos\n+\texit ;;\n+    mc68*:A/UX:*:*)\n+\techo m68k-apple-aux${UNAME_RELEASE}\n+\texit ;;\n+    news*:NEWS-OS:6*:*)\n+\techo mips-sony-newsos6\n+\texit ;;\n+    R[34]000:*System_V*:*:* | R4000:UNIX_SYSV:*:* | R*000:UNIX_SV:*:*)\n+\tif [ -d /usr/nec ]; then\n+\t\techo mips-nec-sysv${UNAME_RELEASE}\n+\telse\n+\t\techo mips-unknown-sysv${UNAME_RELEASE}\n+\tfi\n+\texit ;;\n+    BeBox:BeOS:*:*)\t# BeOS running on hardware made by Be, PPC only.\n+\techo powerpc-be-beos\n+\texit ;;\n+    BeMac:BeOS:*:*)\t# BeOS running on Mac or Mac clone, PPC only.\n+\techo powerpc-apple-beos\n+\texit ;;\n+    BePC:BeOS:*:*)\t# BeOS running on Intel PC compatible.\n+\techo i586-pc-beos\n+\texit ;;\n+    BePC:Haiku:*:*)\t# Haiku running on Intel PC compatible.\n+\techo i586-pc-haiku\n+\texit ;;\n+    x86_64:Haiku:*:*)\n+\techo x86_64-unknown-haiku\n+\texit ;;\n+    SX-4:SUPER-UX:*:*)\n+\techo sx4-nec-superux${UNAME_RELEASE}\n+\texit ;;\n+    SX-5:SUPER-UX:*:*)\n+\techo sx5-nec-superux${UNAME_RELEASE}\n+\texit ;;\n+    SX-6:SUPER-UX:*:*)\n+\techo sx6-nec-superux${UNAME_RELEASE}\n+\texit ;;\n+    SX-7:SUPER-UX:*:*)\n+\techo sx7-nec-superux${UNAME_RELEASE}\n+\texit ;;\n+    SX-8:SUPER-UX:*:*)\n+\techo sx8-nec-superux${UNAME_RELEASE}\n+\texit ;;\n+    SX-8R:SUPER-UX:*:*)\n+\techo sx8r-nec-superux${UNAME_RELEASE}\n+\texit ;;\n+    SX-ACE:SUPER-UX:*:*)\n+\techo sxace-nec-superux${UNAME_RELEASE}\n+\texit ;;\n+    Power*:Rhapsody:*:*)\n+\techo powerpc-apple-rhapsody${UNAME_RELEASE}\n+\texit ;;\n+    *:Rhapsody:*:*)\n+\techo ${UNAME_MACHINE}-apple-rhapsody${UNAME_RELEASE}\n+\texit ;;\n+    *:Darwin:*:*)\n+\tUNAME_PROCESSOR=`uname -p` || UNAME_PROCESSOR=unknown\n+\teval $set_cc_for_build\n+\tif test \"$UNAME_PROCESSOR\" = unknown ; then\n+\t    UNAME_PROCESSOR=powerpc\n+\tfi\n+\tif test `echo \"$UNAME_RELEASE\" | sed -e 's/\\..*//'` -le 10 ; then\n+\t    if [ \"$CC_FOR_BUILD\" != no_compiler_found ]; then\n+\t\tif (echo '#ifdef __LP64__'; echo IS_64BIT_ARCH; echo '#endif') | \\\n+\t\t    (CCOPTS=\"\" $CC_FOR_BUILD -E - 2>/dev/null) | \\\n+\t\t    grep IS_64BIT_ARCH >/dev/null\n+\t\tthen\n+\t\t    case $UNAME_PROCESSOR in\n+\t\t\ti386) UNAME_PROCESSOR=x86_64 ;;\n+\t\t\tpowerpc) UNAME_PROCESSOR=powerpc64 ;;\n+\t\t    esac\n+\t\tfi\n+\t    fi\n+\telif test \"$UNAME_PROCESSOR\" = i386 ; then\n+\t    # Avoid executing cc on OS X 10.9, as it ships with a stub\n+\t    # that puts up a graphical alert prompting to install\n+\t    # developer tools.  Any system running Mac OS X 10.7 or\n+\t    # later (Darwin 11 and later) is required to have a 64-bit\n+\t    # processor. This is not true of the ARM version of Darwin\n+\t    # that Apple uses in portable devices.\n+\t    UNAME_PROCESSOR=x86_64\n+\tfi\n+\techo ${UNAME_PROCESSOR}-apple-darwin${UNAME_RELEASE}\n+\texit ;;\n+    *:procnto*:*:* | *:QNX:[0123456789]*:*)\n+\tUNAME_PROCESSOR=`uname -p`\n+\tif test \"$UNAME_PROCESSOR\" = x86; then\n+\t\tUNAME_PROCESSOR=i386\n+\t\tUNAME_MACHINE=pc\n+\tfi\n+\techo ${UNAME_PROCESSOR}-${UNAME_MACHINE}-nto-qnx${UNAME_RELEASE}\n+\texit ;;\n+    *:QNX:*:4*)\n+\techo i386-pc-qnx\n+\texit ;;\n+    NEO-?:NONSTOP_KERNEL:*:*)\n+\techo neo-tandem-nsk${UNAME_RELEASE}\n+\texit ;;\n+    NSE-*:NONSTOP_KERNEL:*:*)\n+\techo nse-tandem-nsk${UNAME_RELEASE}\n+\texit ;;\n+    NSR-?:NONSTOP_KERNEL:*:*)\n+\techo nsr-tandem-nsk${UNAME_RELEASE}\n+\texit ;;\n+    *:NonStop-UX:*:*)\n+\techo mips-compaq-nonstopux\n+\texit ;;\n+    BS2000:POSIX*:*:*)\n+\techo bs2000-siemens-sysv\n+\texit ;;\n+    DS/*:UNIX_System_V:*:*)\n+\techo ${UNAME_MACHINE}-${UNAME_SYSTEM}-${UNAME_RELEASE}\n+\texit ;;\n+    *:Plan9:*:*)\n+\t# \"uname -m\" is not consistent, so use $cputype instead. 386\n+\t# is converted to i386 for consistency with other x86\n+\t# operating systems.\n+\tif test \"$cputype\" = 386; then\n+\t    UNAME_MACHINE=i386\n+\telse\n+\t    UNAME_MACHINE=\"$cputype\"\n+\tfi\n+\techo ${UNAME_MACHINE}-unknown-plan9\n+\texit ;;\n+    *:TOPS-10:*:*)\n+\techo pdp10-unknown-tops10\n+\texit ;;\n+    *:TENEX:*:*)\n+\techo pdp10-unknown-tenex\n+\texit ;;\n+    KS10:TOPS-20:*:* | KL10:TOPS-20:*:* | TYPE4:TOPS-20:*:*)\n+\techo pdp10-dec-tops20\n+\texit ;;\n+    XKL-1:TOPS-20:*:* | TYPE5:TOPS-20:*:*)\n+\techo pdp10-xkl-tops20\n+\texit ;;\n+    *:TOPS-20:*:*)\n+\techo pdp10-unknown-tops20\n+\texit ;;\n+    *:ITS:*:*)\n+\techo pdp10-unknown-its\n+\texit ;;\n+    SEI:*:*:SEIUX)\n+\techo mips-sei-seiux${UNAME_RELEASE}\n+\texit ;;\n+    *:DragonFly:*:*)\n+\techo ${UNAME_MACHINE}-unknown-dragonfly`echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'`\n+\texit ;;\n+    *:*VMS:*:*)\n+\tUNAME_MACHINE=`(uname -p) 2>/dev/null`\n+\tcase \"${UNAME_MACHINE}\" in\n+\t    A*) echo alpha-dec-vms ; exit ;;\n+\t    I*) echo ia64-dec-vms ; exit ;;\n+\t    V*) echo vax-dec-vms ; exit ;;\n+\tesac ;;\n+    *:XENIX:*:SysV)\n+\techo i386-pc-xenix\n+\texit ;;\n+    i*86:skyos:*:*)\n+\techo ${UNAME_MACHINE}-pc-skyos`echo ${UNAME_RELEASE} | sed -e 's/ .*$//'`\n+\texit ;;\n+    i*86:rdos:*:*)\n+\techo ${UNAME_MACHINE}-pc-rdos\n+\texit ;;\n+    i*86:AROS:*:*)\n+\techo ${UNAME_MACHINE}-pc-aros\n+\texit ;;\n+    x86_64:VMkernel:*:*)\n+\techo ${UNAME_MACHINE}-unknown-esx\n+\texit ;;\n+    amd64:Isilon\\ OneFS:*:*)\n+\techo x86_64-unknown-onefs\n+\texit ;;\n+esac\n+\n+cat >&2 <<EOF\n+$0: unable to guess system type\n+\n+This script (version $timestamp), has failed to recognize the\n+operating system you are using. If your script is old, overwrite\n+config.guess and config.sub with the latest versions from:\n+\n+  http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.guess\n+and\n+  http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.sub\n+\n+If $0 has already been updated, send the following data and any\n+information you think might be pertinent to config-patches@gnu.org to\n+provide the necessary information to handle your system.\n+\n+config.guess timestamp = $timestamp\n+\n+uname -m = `(uname -m) 2>/dev/null || echo unknown`\n+uname -r = `(uname -r) 2>/dev/null || echo unknown`\n+uname -s = `(uname -s) 2>/dev/null || echo unknown`\n+uname -v = `(uname -v) 2>/dev/null || echo unknown`\n+\n+/usr/bin/uname -p = `(/usr/bin/uname -p) 2>/dev/null`\n+/bin/uname -X     = `(/bin/uname -X) 2>/dev/null`\n+\n+hostinfo               = `(hostinfo) 2>/dev/null`\n+/bin/universe          = `(/bin/universe) 2>/dev/null`\n+/usr/bin/arch -k       = `(/usr/bin/arch -k) 2>/dev/null`\n+/bin/arch              = `(/bin/arch) 2>/dev/null`\n+/usr/bin/oslevel       = `(/usr/bin/oslevel) 2>/dev/null`\n+/usr/convex/getsysinfo = `(/usr/convex/getsysinfo) 2>/dev/null`\n+\n+UNAME_MACHINE = ${UNAME_MACHINE}\n+UNAME_RELEASE = ${UNAME_RELEASE}\n+UNAME_SYSTEM  = ${UNAME_SYSTEM}\n+UNAME_VERSION = ${UNAME_VERSION}\n+EOF\n+\n+exit 1\n+\n+# Local variables:\n+# eval: (add-hook 'write-file-hooks 'time-stamp)\n+# time-stamp-start: \"timestamp='\"\n+# time-stamp-format: \"%:y-%02m-%02d\"\n+# time-stamp-end: \"'\"\n+# End:"
      },
      {
        "sha": "e731537bf76bde92e429612dcffa5044ca743f88",
        "filename": "depends/config.site.in",
        "status": "added",
        "additions": 103,
        "deletions": 0,
        "changes": 103,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/config.site.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/config.site.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/config.site.in?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,103 @@\n+depends_prefix=\"`dirname ${ac_site_file}`/..\"\n+\n+cross_compiling=maybe\n+host_alias=@HOST@\n+ac_tool_prefix=${host_alias}-\n+\n+if test -z $with_boost; then\n+  with_boost=$depends_prefix\n+fi\n+if test -z $with_qt_plugindir; then\n+  with_qt_plugindir=$depends_prefix/plugins\n+fi\n+if test -z $with_qt_translationdir; then\n+  with_qt_translationdir=$depends_prefix/translations\n+fi\n+if test -z $with_qt_bindir; then\n+  with_qt_bindir=$depends_prefix/native/bin\n+fi\n+if test -z $with_protoc_bindir; then\n+  with_protoc_bindir=$depends_prefix/native/bin\n+fi\n+if test -z $with_comparison_tool; then\n+  with_comparison_tool=$depends_prefix/native/share/BitcoindComparisonTool_jar/BitcoindComparisonTool.jar\n+fi\n+\n+\n+if test -z $enable_wallet && test -n \"@no_wallet@\"; then\n+  enable_wallet=no\n+fi\n+\n+if test -z $with_miniupnpc && test -n \"@no_upnp@\"; then\n+  with_miniupnpc=no\n+fi\n+\n+if test -z $with_gui && test -n \"@no_qt@\"; then\n+  with_gui=no\n+fi\n+\n+if test x@host_os@ = xdarwin; then\n+  BREW=no\n+  PORT=no\n+fi\n+\n+if test x@host_os@ = xmingw32; then\n+  if test -z $with_qt_incdir; then\n+    with_qt_incdir=$depends_prefix/include\n+  fi\n+  if test -z $with_qt_libdir; then\n+    with_qt_libdir=$depends_prefix/lib\n+  fi\n+fi\n+\n+PATH=$depends_prefix/native/bin:$PATH\n+PKG_CONFIG=\"`which pkg-config` --static\"\n+\n+# These two need to remain exported because pkg-config does not see them\n+# otherwise. That means they must be unexported at the end of configure.ac to\n+# avoid ruining the cache. Sigh.\n+\n+export PKG_CONFIG_LIBDIR=$depends_prefix/lib/pkgconfig\n+export PKG_CONFIG_PATH=$depends_prefix/share/pkgconfig\n+\n+CPPFLAGS=\"-I$depends_prefix/include/ $CPPFLAGS\"\n+LDFLAGS=\"-L$depends_prefix/lib $LDFLAGS\"\n+\n+CC=\"@CC@\"\n+CXX=\"@CXX@\"\n+OBJC=\"${CC}\"\n+OBJCXX=\"${CXX}\"\n+CCACHE=$depends_prefix/native/bin/ccache\n+PYTHONPATH=$depends_prefix/native/lib/python/dist-packages:$PYTHONPATH\n+\n+if test -n \"@AR@\"; then\n+  AR=@AR@\n+  ac_cv_path_ac_pt_AR=${AR}\n+fi\n+\n+if test -n \"@RANLIB@\"; then\n+  RANLIB=@RANLIB@\n+  ac_cv_path_ac_pt_RANLIB=${RANLIB}\n+fi\n+\n+if test -n \"@NM@\"; then\n+  NM=@NM@\n+  ac_cv_path_ac_pt_NM=${NM}\n+fi\n+\n+if test -n \"@debug@\"; then\n+  enable_reduce_exports=no\n+fi\n+\n+if test -n \"@CFLAGS@\"; then\n+  CFLAGS=\"@CFLAGS@ $CFLAGS\"\n+fi\n+if test -n \"@CXXFLAGS@\"; then\n+  CXXFLAGS=\"@CXXFLAGS@ $CXXFLAGS\"\n+fi\n+if test -n \"@CPPFLAGS@\"; then\n+  CPPFLAGS=\"@CPPFLAGS@ $CPPFLAGS\"\n+fi\n+if test -n \"@LDFLAGS@\"; then\n+  LDFLAGS=\"@LDFLAGS@ $LDFLAGS\"\n+fi"
      },
      {
        "sha": "6d86a1e2f77b3f89d0ce8efa7741c611aa2d6edf",
        "filename": "depends/config.sub",
        "status": "added",
        "additions": 1815,
        "deletions": 0,
        "changes": 1815,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/config.sub",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/config.sub",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/config.sub?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,1815 @@\n+#! /bin/sh\n+# Configuration validation subroutine script.\n+#   Copyright 1992-2016 Free Software Foundation, Inc.\n+\n+timestamp='2016-05-10'\n+\n+# This file is free software; you can redistribute it and/or modify it\n+# under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful, but\n+# WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+# General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with this program; if not, see <http://www.gnu.org/licenses/>.\n+#\n+# As a special exception to the GNU General Public License, if you\n+# distribute this file as part of a program that contains a\n+# configuration script generated by Autoconf, you may include it under\n+# the same distribution terms that you use for the rest of that\n+# program.  This Exception is an additional permission under section 7\n+# of the GNU General Public License, version 3 (\"GPLv3\").\n+\n+\n+# Please send patches to <config-patches@gnu.org>.\n+#\n+# Configuration subroutine to validate and canonicalize a configuration type.\n+# Supply the specified configuration type as an argument.\n+# If it is invalid, we print an error message on stderr and exit with code 1.\n+# Otherwise, we print the canonical config type on stdout and succeed.\n+\n+# You can get the latest version of this script from:\n+# http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.sub\n+\n+# This file is supposed to be the same for all GNU packages\n+# and recognize all the CPU types, system types and aliases\n+# that are meaningful with *any* GNU software.\n+# Each package is responsible for reporting which valid configurations\n+# it does not support.  The user should be able to distinguish\n+# a failure to support a valid configuration from a meaningless\n+# configuration.\n+\n+# The goal of this file is to map all the various variations of a given\n+# machine specification into a single specification in the form:\n+#\tCPU_TYPE-MANUFACTURER-OPERATING_SYSTEM\n+# or in some cases, the newer four-part form:\n+#\tCPU_TYPE-MANUFACTURER-KERNEL-OPERATING_SYSTEM\n+# It is wrong to echo any other type of specification.\n+\n+me=`echo \"$0\" | sed -e 's,.*/,,'`\n+\n+usage=\"\\\n+Usage: $0 [OPTION] CPU-MFR-OPSYS or ALIAS\n+\n+Canonicalize a configuration name.\n+\n+Operation modes:\n+  -h, --help         print this help, then exit\n+  -t, --time-stamp   print date of last modification, then exit\n+  -v, --version      print version number, then exit\n+\n+Report bugs and patches to <config-patches@gnu.org>.\"\n+\n+version=\"\\\n+GNU config.sub ($timestamp)\n+\n+Copyright 1992-2016 Free Software Foundation, Inc.\n+\n+This is free software; see the source for copying conditions.  There is NO\n+warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\"\n+\n+help=\"\n+Try \\`$me --help' for more information.\"\n+\n+# Parse command line\n+while test $# -gt 0 ; do\n+  case $1 in\n+    --time-stamp | --time* | -t )\n+       echo \"$timestamp\" ; exit ;;\n+    --version | -v )\n+       echo \"$version\" ; exit ;;\n+    --help | --h* | -h )\n+       echo \"$usage\"; exit ;;\n+    -- )     # Stop option processing\n+       shift; break ;;\n+    - )\t# Use stdin as input.\n+       break ;;\n+    -* )\n+       echo \"$me: invalid option $1$help\"\n+       exit 1 ;;\n+\n+    *local*)\n+       # First pass through any local machine types.\n+       echo $1\n+       exit ;;\n+\n+    * )\n+       break ;;\n+  esac\n+done\n+\n+case $# in\n+ 0) echo \"$me: missing argument$help\" >&2\n+    exit 1;;\n+ 1) ;;\n+ *) echo \"$me: too many arguments$help\" >&2\n+    exit 1;;\n+esac\n+\n+# Separate what the user gave into CPU-COMPANY and OS or KERNEL-OS (if any).\n+# Here we must recognize all the valid KERNEL-OS combinations.\n+maybe_os=`echo $1 | sed 's/^\\(.*\\)-\\([^-]*-[^-]*\\)$/\\2/'`\n+case $maybe_os in\n+  nto-qnx* | linux-gnu* | linux-android* | linux-dietlibc | linux-newlib* | \\\n+  linux-musl* | linux-uclibc* | uclinux-uclibc* | uclinux-gnu* | kfreebsd*-gnu* | \\\n+  knetbsd*-gnu* | netbsd*-gnu* | netbsd*-eabi* | \\\n+  kopensolaris*-gnu* | \\\n+  storm-chaos* | os2-emx* | rtmk-nova*)\n+    os=-$maybe_os\n+    basic_machine=`echo $1 | sed 's/^\\(.*\\)-\\([^-]*-[^-]*\\)$/\\1/'`\n+    ;;\n+  android-linux)\n+    os=-linux-android\n+    basic_machine=`echo $1 | sed 's/^\\(.*\\)-\\([^-]*-[^-]*\\)$/\\1/'`-unknown\n+    ;;\n+  *)\n+    basic_machine=`echo $1 | sed 's/-[^-]*$//'`\n+    if [ $basic_machine != $1 ]\n+    then os=`echo $1 | sed 's/.*-/-/'`\n+    else os=; fi\n+    ;;\n+esac\n+\n+### Let's recognize common machines as not being operating systems so\n+### that things like config.sub decstation-3100 work.  We also\n+### recognize some manufacturers as not being operating systems, so we\n+### can provide default operating systems below.\n+case $os in\n+\t-sun*os*)\n+\t\t# Prevent following clause from handling this invalid input.\n+\t\t;;\n+\t-dec* | -mips* | -sequent* | -encore* | -pc532* | -sgi* | -sony* | \\\n+\t-att* | -7300* | -3300* | -delta* | -motorola* | -sun[234]* | \\\n+\t-unicom* | -ibm* | -next | -hp | -isi* | -apollo | -altos* | \\\n+\t-convergent* | -ncr* | -news | -32* | -3600* | -3100* | -hitachi* |\\\n+\t-c[123]* | -convex* | -sun | -crds | -omron* | -dg | -ultra | -tti* | \\\n+\t-harris | -dolphin | -highlevel | -gould | -cbm | -ns | -masscomp | \\\n+\t-apple | -axis | -knuth | -cray | -microblaze*)\n+\t\tos=\n+\t\tbasic_machine=$1\n+\t\t;;\n+\t-bluegene*)\n+\t\tos=-cnk\n+\t\t;;\n+\t-sim | -cisco | -oki | -wec | -winbond)\n+\t\tos=\n+\t\tbasic_machine=$1\n+\t\t;;\n+\t-scout)\n+\t\t;;\n+\t-wrs)\n+\t\tos=-vxworks\n+\t\tbasic_machine=$1\n+\t\t;;\n+\t-chorusos*)\n+\t\tos=-chorusos\n+\t\tbasic_machine=$1\n+\t\t;;\n+\t-chorusrdb)\n+\t\tos=-chorusrdb\n+\t\tbasic_machine=$1\n+\t\t;;\n+\t-hiux*)\n+\t\tos=-hiuxwe2\n+\t\t;;\n+\t-sco6)\n+\t\tos=-sco5v6\n+\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`\n+\t\t;;\n+\t-sco5)\n+\t\tos=-sco3.2v5\n+\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`\n+\t\t;;\n+\t-sco4)\n+\t\tos=-sco3.2v4\n+\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`\n+\t\t;;\n+\t-sco3.2.[4-9]*)\n+\t\tos=`echo $os | sed -e 's/sco3.2./sco3.2v/'`\n+\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`\n+\t\t;;\n+\t-sco3.2v[4-9]*)\n+\t\t# Don't forget version if it is 3.2v4 or newer.\n+\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`\n+\t\t;;\n+\t-sco5v6*)\n+\t\t# Don't forget version if it is 3.2v4 or newer.\n+\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`\n+\t\t;;\n+\t-sco*)\n+\t\tos=-sco3.2v2\n+\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`\n+\t\t;;\n+\t-udk*)\n+\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`\n+\t\t;;\n+\t-isc)\n+\t\tos=-isc2.2\n+\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`\n+\t\t;;\n+\t-clix*)\n+\t\tbasic_machine=clipper-intergraph\n+\t\t;;\n+\t-isc*)\n+\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`\n+\t\t;;\n+\t-lynx*178)\n+\t\tos=-lynxos178\n+\t\t;;\n+\t-lynx*5)\n+\t\tos=-lynxos5\n+\t\t;;\n+\t-lynx*)\n+\t\tos=-lynxos\n+\t\t;;\n+\t-ptx*)\n+\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-sequent/'`\n+\t\t;;\n+\t-windowsnt*)\n+\t\tos=`echo $os | sed -e 's/windowsnt/winnt/'`\n+\t\t;;\n+\t-psos*)\n+\t\tos=-psos\n+\t\t;;\n+\t-mint | -mint[0-9]*)\n+\t\tbasic_machine=m68k-atari\n+\t\tos=-mint\n+\t\t;;\n+esac\n+\n+# Decode aliases for certain CPU-COMPANY combinations.\n+case $basic_machine in\n+\t# Recognize the basic CPU types without company name.\n+\t# Some are omitted here because they have special meanings below.\n+\t1750a | 580 \\\n+\t| a29k \\\n+\t| aarch64 | aarch64_be \\\n+\t| alpha | alphaev[4-8] | alphaev56 | alphaev6[78] | alphapca5[67] \\\n+\t| alpha64 | alpha64ev[4-8] | alpha64ev56 | alpha64ev6[78] | alpha64pca5[67] \\\n+\t| am33_2.0 \\\n+\t| arc | arceb \\\n+\t| arm | arm[bl]e | arme[lb] | armv[2-8] | armv[3-8][lb] | armv7[arm] \\\n+\t| avr | avr32 \\\n+\t| ba \\\n+\t| be32 | be64 \\\n+\t| bfin \\\n+\t| c4x | c8051 | clipper \\\n+\t| d10v | d30v | dlx | dsp16xx \\\n+\t| e2k | epiphany \\\n+\t| fido | fr30 | frv | ft32 \\\n+\t| h8300 | h8500 | hppa | hppa1.[01] | hppa2.0 | hppa2.0[nw] | hppa64 \\\n+\t| hexagon \\\n+\t| i370 | i860 | i960 | ia64 \\\n+\t| ip2k | iq2000 \\\n+\t| k1om \\\n+\t| le32 | le64 \\\n+\t| lm32 \\\n+\t| m32c | m32r | m32rle | m68000 | m68k | m88k \\\n+\t| maxq | mb | microblaze | microblazeel | mcore | mep | metag \\\n+\t| mips | mipsbe | mipseb | mipsel | mipsle \\\n+\t| mips16 \\\n+\t| mips64 | mips64el \\\n+\t| mips64octeon | mips64octeonel \\\n+\t| mips64orion | mips64orionel \\\n+\t| mips64r5900 | mips64r5900el \\\n+\t| mips64vr | mips64vrel \\\n+\t| mips64vr4100 | mips64vr4100el \\\n+\t| mips64vr4300 | mips64vr4300el \\\n+\t| mips64vr5000 | mips64vr5000el \\\n+\t| mips64vr5900 | mips64vr5900el \\\n+\t| mipsisa32 | mipsisa32el \\\n+\t| mipsisa32r2 | mipsisa32r2el \\\n+\t| mipsisa32r6 | mipsisa32r6el \\\n+\t| mipsisa64 | mipsisa64el \\\n+\t| mipsisa64r2 | mipsisa64r2el \\\n+\t| mipsisa64r6 | mipsisa64r6el \\\n+\t| mipsisa64sb1 | mipsisa64sb1el \\\n+\t| mipsisa64sr71k | mipsisa64sr71kel \\\n+\t| mipsr5900 | mipsr5900el \\\n+\t| mipstx39 | mipstx39el \\\n+\t| mn10200 | mn10300 \\\n+\t| moxie \\\n+\t| mt \\\n+\t| msp430 \\\n+\t| nds32 | nds32le | nds32be \\\n+\t| nios | nios2 | nios2eb | nios2el \\\n+\t| ns16k | ns32k \\\n+\t| open8 | or1k | or1knd | or32 \\\n+\t| pdp10 | pdp11 | pj | pjl \\\n+\t| powerpc | powerpc64 | powerpc64le | powerpcle \\\n+\t| pyramid \\\n+\t| riscv32 | riscv64 \\\n+\t| rl78 | rx \\\n+\t| score \\\n+\t| sh | sh[1234] | sh[24]a | sh[24]aeb | sh[23]e | sh[234]eb | sheb | shbe | shle | sh[1234]le | sh3ele \\\n+\t| sh64 | sh64le \\\n+\t| sparc | sparc64 | sparc64b | sparc64v | sparc86x | sparclet | sparclite \\\n+\t| sparcv8 | sparcv9 | sparcv9b | sparcv9v \\\n+\t| spu \\\n+\t| tahoe | tic4x | tic54x | tic55x | tic6x | tic80 | tron \\\n+\t| ubicom32 \\\n+\t| v850 | v850e | v850e1 | v850e2 | v850es | v850e2v3 \\\n+\t| visium \\\n+\t| we32k \\\n+\t| x86 | xc16x | xstormy16 | xtensa \\\n+\t| z8k | z80)\n+\t\tbasic_machine=$basic_machine-unknown\n+\t\t;;\n+\tc54x)\n+\t\tbasic_machine=tic54x-unknown\n+\t\t;;\n+\tc55x)\n+\t\tbasic_machine=tic55x-unknown\n+\t\t;;\n+\tc6x)\n+\t\tbasic_machine=tic6x-unknown\n+\t\t;;\n+\tleon|leon[3-9])\n+\t\tbasic_machine=sparc-$basic_machine\n+\t\t;;\n+\tm6811 | m68hc11 | m6812 | m68hc12 | m68hcs12x | nvptx | picochip)\n+\t\tbasic_machine=$basic_machine-unknown\n+\t\tos=-none\n+\t\t;;\n+\tm88110 | m680[12346]0 | m683?2 | m68360 | m5200 | v70 | w65 | z8k)\n+\t\t;;\n+\tms1)\n+\t\tbasic_machine=mt-unknown\n+\t\t;;\n+\n+\tstrongarm | thumb | xscale)\n+\t\tbasic_machine=arm-unknown\n+\t\t;;\n+\txgate)\n+\t\tbasic_machine=$basic_machine-unknown\n+\t\tos=-none\n+\t\t;;\n+\txscaleeb)\n+\t\tbasic_machine=armeb-unknown\n+\t\t;;\n+\n+\txscaleel)\n+\t\tbasic_machine=armel-unknown\n+\t\t;;\n+\n+\t# We use `pc' rather than `unknown'\n+\t# because (1) that's what they normally are, and\n+\t# (2) the word \"unknown\" tends to confuse beginning users.\n+\ti*86 | x86_64)\n+\t  basic_machine=$basic_machine-pc\n+\t  ;;\n+\t# Object if more than one company name word.\n+\t*-*-*)\n+\t\techo Invalid configuration \\`$1\\': machine \\`$basic_machine\\' not recognized 1>&2\n+\t\texit 1\n+\t\t;;\n+\t# Recognize the basic CPU types with company name.\n+\t580-* \\\n+\t| a29k-* \\\n+\t| aarch64-* | aarch64_be-* \\\n+\t| alpha-* | alphaev[4-8]-* | alphaev56-* | alphaev6[78]-* \\\n+\t| alpha64-* | alpha64ev[4-8]-* | alpha64ev56-* | alpha64ev6[78]-* \\\n+\t| alphapca5[67]-* | alpha64pca5[67]-* | arc-* | arceb-* \\\n+\t| arm-*  | armbe-* | armle-* | armeb-* | armv*-* \\\n+\t| avr-* | avr32-* \\\n+\t| ba-* \\\n+\t| be32-* | be64-* \\\n+\t| bfin-* | bs2000-* \\\n+\t| c[123]* | c30-* | [cjt]90-* | c4x-* \\\n+\t| c8051-* | clipper-* | craynv-* | cydra-* \\\n+\t| d10v-* | d30v-* | dlx-* \\\n+\t| e2k-* | elxsi-* \\\n+\t| f30[01]-* | f700-* | fido-* | fr30-* | frv-* | fx80-* \\\n+\t| h8300-* | h8500-* \\\n+\t| hppa-* | hppa1.[01]-* | hppa2.0-* | hppa2.0[nw]-* | hppa64-* \\\n+\t| hexagon-* \\\n+\t| i*86-* | i860-* | i960-* | ia64-* \\\n+\t| ip2k-* | iq2000-* \\\n+\t| k1om-* \\\n+\t| le32-* | le64-* \\\n+\t| lm32-* \\\n+\t| m32c-* | m32r-* | m32rle-* \\\n+\t| m68000-* | m680[012346]0-* | m68360-* | m683?2-* | m68k-* \\\n+\t| m88110-* | m88k-* | maxq-* | mcore-* | metag-* \\\n+\t| microblaze-* | microblazeel-* \\\n+\t| mips-* | mipsbe-* | mipseb-* | mipsel-* | mipsle-* \\\n+\t| mips16-* \\\n+\t| mips64-* | mips64el-* \\\n+\t| mips64octeon-* | mips64octeonel-* \\\n+\t| mips64orion-* | mips64orionel-* \\\n+\t| mips64r5900-* | mips64r5900el-* \\\n+\t| mips64vr-* | mips64vrel-* \\\n+\t| mips64vr4100-* | mips64vr4100el-* \\\n+\t| mips64vr4300-* | mips64vr4300el-* \\\n+\t| mips64vr5000-* | mips64vr5000el-* \\\n+\t| mips64vr5900-* | mips64vr5900el-* \\\n+\t| mipsisa32-* | mipsisa32el-* \\\n+\t| mipsisa32r2-* | mipsisa32r2el-* \\\n+\t| mipsisa32r6-* | mipsisa32r6el-* \\\n+\t| mipsisa64-* | mipsisa64el-* \\\n+\t| mipsisa64r2-* | mipsisa64r2el-* \\\n+\t| mipsisa64r6-* | mipsisa64r6el-* \\\n+\t| mipsisa64sb1-* | mipsisa64sb1el-* \\\n+\t| mipsisa64sr71k-* | mipsisa64sr71kel-* \\\n+\t| mipsr5900-* | mipsr5900el-* \\\n+\t| mipstx39-* | mipstx39el-* \\\n+\t| mmix-* \\\n+\t| mt-* \\\n+\t| msp430-* \\\n+\t| nds32-* | nds32le-* | nds32be-* \\\n+\t| nios-* | nios2-* | nios2eb-* | nios2el-* \\\n+\t| none-* | np1-* | ns16k-* | ns32k-* \\\n+\t| open8-* \\\n+\t| or1k*-* \\\n+\t| orion-* \\\n+\t| pdp10-* | pdp11-* | pj-* | pjl-* | pn-* | power-* \\\n+\t| powerpc-* | powerpc64-* | powerpc64le-* | powerpcle-* \\\n+\t| pyramid-* \\\n+\t| riscv32-* | riscv64-* \\\n+\t| rl78-* | romp-* | rs6000-* | rx-* \\\n+\t| sh-* | sh[1234]-* | sh[24]a-* | sh[24]aeb-* | sh[23]e-* | sh[34]eb-* | sheb-* | shbe-* \\\n+\t| shle-* | sh[1234]le-* | sh3ele-* | sh64-* | sh64le-* \\\n+\t| sparc-* | sparc64-* | sparc64b-* | sparc64v-* | sparc86x-* | sparclet-* \\\n+\t| sparclite-* \\\n+\t| sparcv8-* | sparcv9-* | sparcv9b-* | sparcv9v-* | sv1-* | sx*-* \\\n+\t| tahoe-* \\\n+\t| tic30-* | tic4x-* | tic54x-* | tic55x-* | tic6x-* | tic80-* \\\n+\t| tile*-* \\\n+\t| tron-* \\\n+\t| ubicom32-* \\\n+\t| v850-* | v850e-* | v850e1-* | v850es-* | v850e2-* | v850e2v3-* \\\n+\t| vax-* \\\n+\t| visium-* \\\n+\t| we32k-* \\\n+\t| x86-* | x86_64-* | xc16x-* | xps100-* \\\n+\t| xstormy16-* | xtensa*-* \\\n+\t| ymp-* \\\n+\t| z8k-* | z80-*)\n+\t\t;;\n+\t# Recognize the basic CPU types without company name, with glob match.\n+\txtensa*)\n+\t\tbasic_machine=$basic_machine-unknown\n+\t\t;;\n+\t# Recognize the various machine names and aliases which stand\n+\t# for a CPU type and a company and sometimes even an OS.\n+\t386bsd)\n+\t\tbasic_machine=i386-unknown\n+\t\tos=-bsd\n+\t\t;;\n+\t3b1 | 7300 | 7300-att | att-7300 | pc7300 | safari | unixpc)\n+\t\tbasic_machine=m68000-att\n+\t\t;;\n+\t3b*)\n+\t\tbasic_machine=we32k-att\n+\t\t;;\n+\ta29khif)\n+\t\tbasic_machine=a29k-amd\n+\t\tos=-udi\n+\t\t;;\n+\tabacus)\n+\t\tbasic_machine=abacus-unknown\n+\t\t;;\n+\tadobe68k)\n+\t\tbasic_machine=m68010-adobe\n+\t\tos=-scout\n+\t\t;;\n+\talliant | fx80)\n+\t\tbasic_machine=fx80-alliant\n+\t\t;;\n+\taltos | altos3068)\n+\t\tbasic_machine=m68k-altos\n+\t\t;;\n+\tam29k)\n+\t\tbasic_machine=a29k-none\n+\t\tos=-bsd\n+\t\t;;\n+\tamd64)\n+\t\tbasic_machine=x86_64-pc\n+\t\t;;\n+\tamd64-*)\n+\t\tbasic_machine=x86_64-`echo $basic_machine | sed 's/^[^-]*-//'`\n+\t\t;;\n+\tamdahl)\n+\t\tbasic_machine=580-amdahl\n+\t\tos=-sysv\n+\t\t;;\n+\tamiga | amiga-*)\n+\t\tbasic_machine=m68k-unknown\n+\t\t;;\n+\tamigaos | amigados)\n+\t\tbasic_machine=m68k-unknown\n+\t\tos=-amigaos\n+\t\t;;\n+\tamigaunix | amix)\n+\t\tbasic_machine=m68k-unknown\n+\t\tos=-sysv4\n+\t\t;;\n+\tapollo68)\n+\t\tbasic_machine=m68k-apollo\n+\t\tos=-sysv\n+\t\t;;\n+\tapollo68bsd)\n+\t\tbasic_machine=m68k-apollo\n+\t\tos=-bsd\n+\t\t;;\n+\taros)\n+\t\tbasic_machine=i386-pc\n+\t\tos=-aros\n+\t\t;;\n+\tasmjs)\n+\t\tbasic_machine=asmjs-unknown\n+\t\t;;\n+\taux)\n+\t\tbasic_machine=m68k-apple\n+\t\tos=-aux\n+\t\t;;\n+\tbalance)\n+\t\tbasic_machine=ns32k-sequent\n+\t\tos=-dynix\n+\t\t;;\n+\tblackfin)\n+\t\tbasic_machine=bfin-unknown\n+\t\tos=-linux\n+\t\t;;\n+\tblackfin-*)\n+\t\tbasic_machine=bfin-`echo $basic_machine | sed 's/^[^-]*-//'`\n+\t\tos=-linux\n+\t\t;;\n+\tbluegene*)\n+\t\tbasic_machine=powerpc-ibm\n+\t\tos=-cnk\n+\t\t;;\n+\tc54x-*)\n+\t\tbasic_machine=tic54x-`echo $basic_machine | sed 's/^[^-]*-//'`\n+\t\t;;\n+\tc55x-*)\n+\t\tbasic_machine=tic55x-`echo $basic_machine | sed 's/^[^-]*-//'`\n+\t\t;;\n+\tc6x-*)\n+\t\tbasic_machine=tic6x-`echo $basic_machine | sed 's/^[^-]*-//'`\n+\t\t;;\n+\tc90)\n+\t\tbasic_machine=c90-cray\n+\t\tos=-unicos\n+\t\t;;\n+\tcegcc)\n+\t\tbasic_machine=arm-unknown\n+\t\tos=-cegcc\n+\t\t;;\n+\tconvex-c1)\n+\t\tbasic_machine=c1-convex\n+\t\tos=-bsd\n+\t\t;;\n+\tconvex-c2)\n+\t\tbasic_machine=c2-convex\n+\t\tos=-bsd\n+\t\t;;\n+\tconvex-c32)\n+\t\tbasic_machine=c32-convex\n+\t\tos=-bsd\n+\t\t;;\n+\tconvex-c34)\n+\t\tbasic_machine=c34-convex\n+\t\tos=-bsd\n+\t\t;;\n+\tconvex-c38)\n+\t\tbasic_machine=c38-convex\n+\t\tos=-bsd\n+\t\t;;\n+\tcray | j90)\n+\t\tbasic_machine=j90-cray\n+\t\tos=-unicos\n+\t\t;;\n+\tcraynv)\n+\t\tbasic_machine=craynv-cray\n+\t\tos=-unicosmp\n+\t\t;;\n+\tcr16 | cr16-*)\n+\t\tbasic_machine=cr16-unknown\n+\t\tos=-elf\n+\t\t;;\n+\tcrds | unos)\n+\t\tbasic_machine=m68k-crds\n+\t\t;;\n+\tcrisv32 | crisv32-* | etraxfs*)\n+\t\tbasic_machine=crisv32-axis\n+\t\t;;\n+\tcris | cris-* | etrax*)\n+\t\tbasic_machine=cris-axis\n+\t\t;;\n+\tcrx)\n+\t\tbasic_machine=crx-unknown\n+\t\tos=-elf\n+\t\t;;\n+\tda30 | da30-*)\n+\t\tbasic_machine=m68k-da30\n+\t\t;;\n+\tdecstation | decstation-3100 | pmax | pmax-* | pmin | dec3100 | decstatn)\n+\t\tbasic_machine=mips-dec\n+\t\t;;\n+\tdecsystem10* | dec10*)\n+\t\tbasic_machine=pdp10-dec\n+\t\tos=-tops10\n+\t\t;;\n+\tdecsystem20* | dec20*)\n+\t\tbasic_machine=pdp10-dec\n+\t\tos=-tops20\n+\t\t;;\n+\tdelta | 3300 | motorola-3300 | motorola-delta \\\n+\t      | 3300-motorola | delta-motorola)\n+\t\tbasic_machine=m68k-motorola\n+\t\t;;\n+\tdelta88)\n+\t\tbasic_machine=m88k-motorola\n+\t\tos=-sysv3\n+\t\t;;\n+\tdicos)\n+\t\tbasic_machine=i686-pc\n+\t\tos=-dicos\n+\t\t;;\n+\tdjgpp)\n+\t\tbasic_machine=i586-pc\n+\t\tos=-msdosdjgpp\n+\t\t;;\n+\tdpx20 | dpx20-*)\n+\t\tbasic_machine=rs6000-bull\n+\t\tos=-bosx\n+\t\t;;\n+\tdpx2* | dpx2*-bull)\n+\t\tbasic_machine=m68k-bull\n+\t\tos=-sysv3\n+\t\t;;\n+\tebmon29k)\n+\t\tbasic_machine=a29k-amd\n+\t\tos=-ebmon\n+\t\t;;\n+\telxsi)\n+\t\tbasic_machine=elxsi-elxsi\n+\t\tos=-bsd\n+\t\t;;\n+\tencore | umax | mmax)\n+\t\tbasic_machine=ns32k-encore\n+\t\t;;\n+\tes1800 | OSE68k | ose68k | ose | OSE)\n+\t\tbasic_machine=m68k-ericsson\n+\t\tos=-ose\n+\t\t;;\n+\tfx2800)\n+\t\tbasic_machine=i860-alliant\n+\t\t;;\n+\tgenix)\n+\t\tbasic_machine=ns32k-ns\n+\t\t;;\n+\tgmicro)\n+\t\tbasic_machine=tron-gmicro\n+\t\tos=-sysv\n+\t\t;;\n+\tgo32)\n+\t\tbasic_machine=i386-pc\n+\t\tos=-go32\n+\t\t;;\n+\th3050r* | hiux*)\n+\t\tbasic_machine=hppa1.1-hitachi\n+\t\tos=-hiuxwe2\n+\t\t;;\n+\th8300hms)\n+\t\tbasic_machine=h8300-hitachi\n+\t\tos=-hms\n+\t\t;;\n+\th8300xray)\n+\t\tbasic_machine=h8300-hitachi\n+\t\tos=-xray\n+\t\t;;\n+\th8500hms)\n+\t\tbasic_machine=h8500-hitachi\n+\t\tos=-hms\n+\t\t;;\n+\tharris)\n+\t\tbasic_machine=m88k-harris\n+\t\tos=-sysv3\n+\t\t;;\n+\thp300-*)\n+\t\tbasic_machine=m68k-hp\n+\t\t;;\n+\thp300bsd)\n+\t\tbasic_machine=m68k-hp\n+\t\tos=-bsd\n+\t\t;;\n+\thp300hpux)\n+\t\tbasic_machine=m68k-hp\n+\t\tos=-hpux\n+\t\t;;\n+\thp3k9[0-9][0-9] | hp9[0-9][0-9])\n+\t\tbasic_machine=hppa1.0-hp\n+\t\t;;\n+\thp9k2[0-9][0-9] | hp9k31[0-9])\n+\t\tbasic_machine=m68000-hp\n+\t\t;;\n+\thp9k3[2-9][0-9])\n+\t\tbasic_machine=m68k-hp\n+\t\t;;\n+\thp9k6[0-9][0-9] | hp6[0-9][0-9])\n+\t\tbasic_machine=hppa1.0-hp\n+\t\t;;\n+\thp9k7[0-79][0-9] | hp7[0-79][0-9])\n+\t\tbasic_machine=hppa1.1-hp\n+\t\t;;\n+\thp9k78[0-9] | hp78[0-9])\n+\t\t# FIXME: really hppa2.0-hp\n+\t\tbasic_machine=hppa1.1-hp\n+\t\t;;\n+\thp9k8[67]1 | hp8[67]1 | hp9k80[24] | hp80[24] | hp9k8[78]9 | hp8[78]9 | hp9k893 | hp893)\n+\t\t# FIXME: really hppa2.0-hp\n+\t\tbasic_machine=hppa1.1-hp\n+\t\t;;\n+\thp9k8[0-9][13679] | hp8[0-9][13679])\n+\t\tbasic_machine=hppa1.1-hp\n+\t\t;;\n+\thp9k8[0-9][0-9] | hp8[0-9][0-9])\n+\t\tbasic_machine=hppa1.0-hp\n+\t\t;;\n+\thppa-next)\n+\t\tos=-nextstep3\n+\t\t;;\n+\thppaosf)\n+\t\tbasic_machine=hppa1.1-hp\n+\t\tos=-osf\n+\t\t;;\n+\thppro)\n+\t\tbasic_machine=hppa1.1-hp\n+\t\tos=-proelf\n+\t\t;;\n+\ti370-ibm* | ibm*)\n+\t\tbasic_machine=i370-ibm\n+\t\t;;\n+\ti*86v32)\n+\t\tbasic_machine=`echo $1 | sed -e 's/86.*/86-pc/'`\n+\t\tos=-sysv32\n+\t\t;;\n+\ti*86v4*)\n+\t\tbasic_machine=`echo $1 | sed -e 's/86.*/86-pc/'`\n+\t\tos=-sysv4\n+\t\t;;\n+\ti*86v)\n+\t\tbasic_machine=`echo $1 | sed -e 's/86.*/86-pc/'`\n+\t\tos=-sysv\n+\t\t;;\n+\ti*86sol2)\n+\t\tbasic_machine=`echo $1 | sed -e 's/86.*/86-pc/'`\n+\t\tos=-solaris2\n+\t\t;;\n+\ti386mach)\n+\t\tbasic_machine=i386-mach\n+\t\tos=-mach\n+\t\t;;\n+\ti386-vsta | vsta)\n+\t\tbasic_machine=i386-unknown\n+\t\tos=-vsta\n+\t\t;;\n+\tiris | iris4d)\n+\t\tbasic_machine=mips-sgi\n+\t\tcase $os in\n+\t\t    -irix*)\n+\t\t\t;;\n+\t\t    *)\n+\t\t\tos=-irix4\n+\t\t\t;;\n+\t\tesac\n+\t\t;;\n+\tisi68 | isi)\n+\t\tbasic_machine=m68k-isi\n+\t\tos=-sysv\n+\t\t;;\n+\tleon-*|leon[3-9]-*)\n+\t\tbasic_machine=sparc-`echo $basic_machine | sed 's/-.*//'`\n+\t\t;;\n+\tm68knommu)\n+\t\tbasic_machine=m68k-unknown\n+\t\tos=-linux\n+\t\t;;\n+\tm68knommu-*)\n+\t\tbasic_machine=m68k-`echo $basic_machine | sed 's/^[^-]*-//'`\n+\t\tos=-linux\n+\t\t;;\n+\tm88k-omron*)\n+\t\tbasic_machine=m88k-omron\n+\t\t;;\n+\tmagnum | m3230)\n+\t\tbasic_machine=mips-mips\n+\t\tos=-sysv\n+\t\t;;\n+\tmerlin)\n+\t\tbasic_machine=ns32k-utek\n+\t\tos=-sysv\n+\t\t;;\n+\tmicroblaze*)\n+\t\tbasic_machine=microblaze-xilinx\n+\t\t;;\n+\tmingw64)\n+\t\tbasic_machine=x86_64-pc\n+\t\tos=-mingw64\n+\t\t;;\n+\tmingw32)\n+\t\tbasic_machine=i686-pc\n+\t\tos=-mingw32\n+\t\t;;\n+\tmingw32ce)\n+\t\tbasic_machine=arm-unknown\n+\t\tos=-mingw32ce\n+\t\t;;\n+\tminiframe)\n+\t\tbasic_machine=m68000-convergent\n+\t\t;;\n+\t*mint | -mint[0-9]* | *MiNT | *MiNT[0-9]*)\n+\t\tbasic_machine=m68k-atari\n+\t\tos=-mint\n+\t\t;;\n+\tmips3*-*)\n+\t\tbasic_machine=`echo $basic_machine | sed -e 's/mips3/mips64/'`\n+\t\t;;\n+\tmips3*)\n+\t\tbasic_machine=`echo $basic_machine | sed -e 's/mips3/mips64/'`-unknown\n+\t\t;;\n+\tmonitor)\n+\t\tbasic_machine=m68k-rom68k\n+\t\tos=-coff\n+\t\t;;\n+\tmorphos)\n+\t\tbasic_machine=powerpc-unknown\n+\t\tos=-morphos\n+\t\t;;\n+\tmoxiebox)\n+\t\tbasic_machine=moxie-unknown\n+\t\tos=-moxiebox\n+\t\t;;\n+\tmsdos)\n+\t\tbasic_machine=i386-pc\n+\t\tos=-msdos\n+\t\t;;\n+\tms1-*)\n+\t\tbasic_machine=`echo $basic_machine | sed -e 's/ms1-/mt-/'`\n+\t\t;;\n+\tmsys)\n+\t\tbasic_machine=i686-pc\n+\t\tos=-msys\n+\t\t;;\n+\tmvs)\n+\t\tbasic_machine=i370-ibm\n+\t\tos=-mvs\n+\t\t;;\n+\tnacl)\n+\t\tbasic_machine=le32-unknown\n+\t\tos=-nacl\n+\t\t;;\n+\tncr3000)\n+\t\tbasic_machine=i486-ncr\n+\t\tos=-sysv4\n+\t\t;;\n+\tnetbsd386)\n+\t\tbasic_machine=i386-unknown\n+\t\tos=-netbsd\n+\t\t;;\n+\tnetwinder)\n+\t\tbasic_machine=armv4l-rebel\n+\t\tos=-linux\n+\t\t;;\n+\tnews | news700 | news800 | news900)\n+\t\tbasic_machine=m68k-sony\n+\t\tos=-newsos\n+\t\t;;\n+\tnews1000)\n+\t\tbasic_machine=m68030-sony\n+\t\tos=-newsos\n+\t\t;;\n+\tnews-3600 | risc-news)\n+\t\tbasic_machine=mips-sony\n+\t\tos=-newsos\n+\t\t;;\n+\tnecv70)\n+\t\tbasic_machine=v70-nec\n+\t\tos=-sysv\n+\t\t;;\n+\tnext | m*-next )\n+\t\tbasic_machine=m68k-next\n+\t\tcase $os in\n+\t\t    -nextstep* )\n+\t\t\t;;\n+\t\t    -ns2*)\n+\t\t      os=-nextstep2\n+\t\t\t;;\n+\t\t    *)\n+\t\t      os=-nextstep3\n+\t\t\t;;\n+\t\tesac\n+\t\t;;\n+\tnh3000)\n+\t\tbasic_machine=m68k-harris\n+\t\tos=-cxux\n+\t\t;;\n+\tnh[45]000)\n+\t\tbasic_machine=m88k-harris\n+\t\tos=-cxux\n+\t\t;;\n+\tnindy960)\n+\t\tbasic_machine=i960-intel\n+\t\tos=-nindy\n+\t\t;;\n+\tmon960)\n+\t\tbasic_machine=i960-intel\n+\t\tos=-mon960\n+\t\t;;\n+\tnonstopux)\n+\t\tbasic_machine=mips-compaq\n+\t\tos=-nonstopux\n+\t\t;;\n+\tnp1)\n+\t\tbasic_machine=np1-gould\n+\t\t;;\n+\tneo-tandem)\n+\t\tbasic_machine=neo-tandem\n+\t\t;;\n+\tnse-tandem)\n+\t\tbasic_machine=nse-tandem\n+\t\t;;\n+\tnsr-tandem)\n+\t\tbasic_machine=nsr-tandem\n+\t\t;;\n+\top50n-* | op60c-*)\n+\t\tbasic_machine=hppa1.1-oki\n+\t\tos=-proelf\n+\t\t;;\n+\topenrisc | openrisc-*)\n+\t\tbasic_machine=or32-unknown\n+\t\t;;\n+\tos400)\n+\t\tbasic_machine=powerpc-ibm\n+\t\tos=-os400\n+\t\t;;\n+\tOSE68000 | ose68000)\n+\t\tbasic_machine=m68000-ericsson\n+\t\tos=-ose\n+\t\t;;\n+\tos68k)\n+\t\tbasic_machine=m68k-none\n+\t\tos=-os68k\n+\t\t;;\n+\tpa-hitachi)\n+\t\tbasic_machine=hppa1.1-hitachi\n+\t\tos=-hiuxwe2\n+\t\t;;\n+\tparagon)\n+\t\tbasic_machine=i860-intel\n+\t\tos=-osf\n+\t\t;;\n+\tparisc)\n+\t\tbasic_machine=hppa-unknown\n+\t\tos=-linux\n+\t\t;;\n+\tparisc-*)\n+\t\tbasic_machine=hppa-`echo $basic_machine | sed 's/^[^-]*-//'`\n+\t\tos=-linux\n+\t\t;;\n+\tpbd)\n+\t\tbasic_machine=sparc-tti\n+\t\t;;\n+\tpbb)\n+\t\tbasic_machine=m68k-tti\n+\t\t;;\n+\tpc532 | pc532-*)\n+\t\tbasic_machine=ns32k-pc532\n+\t\t;;\n+\tpc98)\n+\t\tbasic_machine=i386-pc\n+\t\t;;\n+\tpc98-*)\n+\t\tbasic_machine=i386-`echo $basic_machine | sed 's/^[^-]*-//'`\n+\t\t;;\n+\tpentium | p5 | k5 | k6 | nexgen | viac3)\n+\t\tbasic_machine=i586-pc\n+\t\t;;\n+\tpentiumpro | p6 | 6x86 | athlon | athlon_*)\n+\t\tbasic_machine=i686-pc\n+\t\t;;\n+\tpentiumii | pentium2 | pentiumiii | pentium3)\n+\t\tbasic_machine=i686-pc\n+\t\t;;\n+\tpentium4)\n+\t\tbasic_machine=i786-pc\n+\t\t;;\n+\tpentium-* | p5-* | k5-* | k6-* | nexgen-* | viac3-*)\n+\t\tbasic_machine=i586-`echo $basic_machine | sed 's/^[^-]*-//'`\n+\t\t;;\n+\tpentiumpro-* | p6-* | 6x86-* | athlon-*)\n+\t\tbasic_machine=i686-`echo $basic_machine | sed 's/^[^-]*-//'`\n+\t\t;;\n+\tpentiumii-* | pentium2-* | pentiumiii-* | pentium3-*)\n+\t\tbasic_machine=i686-`echo $basic_machine | sed 's/^[^-]*-//'`\n+\t\t;;\n+\tpentium4-*)\n+\t\tbasic_machine=i786-`echo $basic_machine | sed 's/^[^-]*-//'`\n+\t\t;;\n+\tpn)\n+\t\tbasic_machine=pn-gould\n+\t\t;;\n+\tpower)\tbasic_machine=power-ibm\n+\t\t;;\n+\tppc | ppcbe)\tbasic_machine=powerpc-unknown\n+\t\t;;\n+\tppc-* | ppcbe-*)\n+\t\tbasic_machine=powerpc-`echo $basic_machine | sed 's/^[^-]*-//'`\n+\t\t;;\n+\tppcle | powerpclittle | ppc-le | powerpc-little)\n+\t\tbasic_machine=powerpcle-unknown\n+\t\t;;\n+\tppcle-* | powerpclittle-*)\n+\t\tbasic_machine=powerpcle-`echo $basic_machine | sed 's/^[^-]*-//'`\n+\t\t;;\n+\tppc64)\tbasic_machine=powerpc64-unknown\n+\t\t;;\n+\tppc64-*) basic_machine=powerpc64-`echo $basic_machine | sed 's/^[^-]*-//'`\n+\t\t;;\n+\tppc64le | powerpc64little | ppc64-le | powerpc64-little)\n+\t\tbasic_machine=powerpc64le-unknown\n+\t\t;;\n+\tppc64le-* | powerpc64little-*)\n+\t\tbasic_machine=powerpc64le-`echo $basic_machine | sed 's/^[^-]*-//'`\n+\t\t;;\n+\tps2)\n+\t\tbasic_machine=i386-ibm\n+\t\t;;\n+\tpw32)\n+\t\tbasic_machine=i586-unknown\n+\t\tos=-pw32\n+\t\t;;\n+\trdos | rdos64)\n+\t\tbasic_machine=x86_64-pc\n+\t\tos=-rdos\n+\t\t;;\n+\trdos32)\n+\t\tbasic_machine=i386-pc\n+\t\tos=-rdos\n+\t\t;;\n+\trom68k)\n+\t\tbasic_machine=m68k-rom68k\n+\t\tos=-coff\n+\t\t;;\n+\trm[46]00)\n+\t\tbasic_machine=mips-siemens\n+\t\t;;\n+\trtpc | rtpc-*)\n+\t\tbasic_machine=romp-ibm\n+\t\t;;\n+\ts390 | s390-*)\n+\t\tbasic_machine=s390-ibm\n+\t\t;;\n+\ts390x | s390x-*)\n+\t\tbasic_machine=s390x-ibm\n+\t\t;;\n+\tsa29200)\n+\t\tbasic_machine=a29k-amd\n+\t\tos=-udi\n+\t\t;;\n+\tsb1)\n+\t\tbasic_machine=mipsisa64sb1-unknown\n+\t\t;;\n+\tsb1el)\n+\t\tbasic_machine=mipsisa64sb1el-unknown\n+\t\t;;\n+\tsde)\n+\t\tbasic_machine=mipsisa32-sde\n+\t\tos=-elf\n+\t\t;;\n+\tsei)\n+\t\tbasic_machine=mips-sei\n+\t\tos=-seiux\n+\t\t;;\n+\tsequent)\n+\t\tbasic_machine=i386-sequent\n+\t\t;;\n+\tsh)\n+\t\tbasic_machine=sh-hitachi\n+\t\tos=-hms\n+\t\t;;\n+\tsh5el)\n+\t\tbasic_machine=sh5le-unknown\n+\t\t;;\n+\tsh64)\n+\t\tbasic_machine=sh64-unknown\n+\t\t;;\n+\tsparclite-wrs | simso-wrs)\n+\t\tbasic_machine=sparclite-wrs\n+\t\tos=-vxworks\n+\t\t;;\n+\tsps7)\n+\t\tbasic_machine=m68k-bull\n+\t\tos=-sysv2\n+\t\t;;\n+\tspur)\n+\t\tbasic_machine=spur-unknown\n+\t\t;;\n+\tst2000)\n+\t\tbasic_machine=m68k-tandem\n+\t\t;;\n+\tstratus)\n+\t\tbasic_machine=i860-stratus\n+\t\tos=-sysv4\n+\t\t;;\n+\tstrongarm-* | thumb-*)\n+\t\tbasic_machine=arm-`echo $basic_machine | sed 's/^[^-]*-//'`\n+\t\t;;\n+\tsun2)\n+\t\tbasic_machine=m68000-sun\n+\t\t;;\n+\tsun2os3)\n+\t\tbasic_machine=m68000-sun\n+\t\tos=-sunos3\n+\t\t;;\n+\tsun2os4)\n+\t\tbasic_machine=m68000-sun\n+\t\tos=-sunos4\n+\t\t;;\n+\tsun3os3)\n+\t\tbasic_machine=m68k-sun\n+\t\tos=-sunos3\n+\t\t;;\n+\tsun3os4)\n+\t\tbasic_machine=m68k-sun\n+\t\tos=-sunos4\n+\t\t;;\n+\tsun4os3)\n+\t\tbasic_machine=sparc-sun\n+\t\tos=-sunos3\n+\t\t;;\n+\tsun4os4)\n+\t\tbasic_machine=sparc-sun\n+\t\tos=-sunos4\n+\t\t;;\n+\tsun4sol2)\n+\t\tbasic_machine=sparc-sun\n+\t\tos=-solaris2\n+\t\t;;\n+\tsun3 | sun3-*)\n+\t\tbasic_machine=m68k-sun\n+\t\t;;\n+\tsun4)\n+\t\tbasic_machine=sparc-sun\n+\t\t;;\n+\tsun386 | sun386i | roadrunner)\n+\t\tbasic_machine=i386-sun\n+\t\t;;\n+\tsv1)\n+\t\tbasic_machine=sv1-cray\n+\t\tos=-unicos\n+\t\t;;\n+\tsymmetry)\n+\t\tbasic_machine=i386-sequent\n+\t\tos=-dynix\n+\t\t;;\n+\tt3e)\n+\t\tbasic_machine=alphaev5-cray\n+\t\tos=-unicos\n+\t\t;;\n+\tt90)\n+\t\tbasic_machine=t90-cray\n+\t\tos=-unicos\n+\t\t;;\n+\ttile*)\n+\t\tbasic_machine=$basic_machine-unknown\n+\t\tos=-linux-gnu\n+\t\t;;\n+\ttx39)\n+\t\tbasic_machine=mipstx39-unknown\n+\t\t;;\n+\ttx39el)\n+\t\tbasic_machine=mipstx39el-unknown\n+\t\t;;\n+\ttoad1)\n+\t\tbasic_machine=pdp10-xkl\n+\t\tos=-tops20\n+\t\t;;\n+\ttower | tower-32)\n+\t\tbasic_machine=m68k-ncr\n+\t\t;;\n+\ttpf)\n+\t\tbasic_machine=s390x-ibm\n+\t\tos=-tpf\n+\t\t;;\n+\tudi29k)\n+\t\tbasic_machine=a29k-amd\n+\t\tos=-udi\n+\t\t;;\n+\tultra3)\n+\t\tbasic_machine=a29k-nyu\n+\t\tos=-sym1\n+\t\t;;\n+\tv810 | necv810)\n+\t\tbasic_machine=v810-nec\n+\t\tos=-none\n+\t\t;;\n+\tvaxv)\n+\t\tbasic_machine=vax-dec\n+\t\tos=-sysv\n+\t\t;;\n+\tvms)\n+\t\tbasic_machine=vax-dec\n+\t\tos=-vms\n+\t\t;;\n+\tvpp*|vx|vx-*)\n+\t\tbasic_machine=f301-fujitsu\n+\t\t;;\n+\tvxworks960)\n+\t\tbasic_machine=i960-wrs\n+\t\tos=-vxworks\n+\t\t;;\n+\tvxworks68)\n+\t\tbasic_machine=m68k-wrs\n+\t\tos=-vxworks\n+\t\t;;\n+\tvxworks29k)\n+\t\tbasic_machine=a29k-wrs\n+\t\tos=-vxworks\n+\t\t;;\n+\tw65*)\n+\t\tbasic_machine=w65-wdc\n+\t\tos=-none\n+\t\t;;\n+\tw89k-*)\n+\t\tbasic_machine=hppa1.1-winbond\n+\t\tos=-proelf\n+\t\t;;\n+\txbox)\n+\t\tbasic_machine=i686-pc\n+\t\tos=-mingw32\n+\t\t;;\n+\txps | xps100)\n+\t\tbasic_machine=xps100-honeywell\n+\t\t;;\n+\txscale-* | xscalee[bl]-*)\n+\t\tbasic_machine=`echo $basic_machine | sed 's/^xscale/arm/'`\n+\t\t;;\n+\tymp)\n+\t\tbasic_machine=ymp-cray\n+\t\tos=-unicos\n+\t\t;;\n+\tz8k-*-coff)\n+\t\tbasic_machine=z8k-unknown\n+\t\tos=-sim\n+\t\t;;\n+\tz80-*-coff)\n+\t\tbasic_machine=z80-unknown\n+\t\tos=-sim\n+\t\t;;\n+\tnone)\n+\t\tbasic_machine=none-none\n+\t\tos=-none\n+\t\t;;\n+\n+# Here we handle the default manufacturer of certain CPU types.  It is in\n+# some cases the only manufacturer, in others, it is the most popular.\n+\tw89k)\n+\t\tbasic_machine=hppa1.1-winbond\n+\t\t;;\n+\top50n)\n+\t\tbasic_machine=hppa1.1-oki\n+\t\t;;\n+\top60c)\n+\t\tbasic_machine=hppa1.1-oki\n+\t\t;;\n+\tromp)\n+\t\tbasic_machine=romp-ibm\n+\t\t;;\n+\tmmix)\n+\t\tbasic_machine=mmix-knuth\n+\t\t;;\n+\trs6000)\n+\t\tbasic_machine=rs6000-ibm\n+\t\t;;\n+\tvax)\n+\t\tbasic_machine=vax-dec\n+\t\t;;\n+\tpdp10)\n+\t\t# there are many clones, so DEC is not a safe bet\n+\t\tbasic_machine=pdp10-unknown\n+\t\t;;\n+\tpdp11)\n+\t\tbasic_machine=pdp11-dec\n+\t\t;;\n+\twe32k)\n+\t\tbasic_machine=we32k-att\n+\t\t;;\n+\tsh[1234] | sh[24]a | sh[24]aeb | sh[34]eb | sh[1234]le | sh[23]ele)\n+\t\tbasic_machine=sh-unknown\n+\t\t;;\n+\tsparc | sparcv8 | sparcv9 | sparcv9b | sparcv9v)\n+\t\tbasic_machine=sparc-sun\n+\t\t;;\n+\tcydra)\n+\t\tbasic_machine=cydra-cydrome\n+\t\t;;\n+\torion)\n+\t\tbasic_machine=orion-highlevel\n+\t\t;;\n+\torion105)\n+\t\tbasic_machine=clipper-highlevel\n+\t\t;;\n+\tmac | mpw | mac-mpw)\n+\t\tbasic_machine=m68k-apple\n+\t\t;;\n+\tpmac | pmac-mpw)\n+\t\tbasic_machine=powerpc-apple\n+\t\t;;\n+\t*-unknown)\n+\t\t# Make sure to match an already-canonicalized machine name.\n+\t\t;;\n+\t*)\n+\t\techo Invalid configuration \\`$1\\': machine \\`$basic_machine\\' not recognized 1>&2\n+\t\texit 1\n+\t\t;;\n+esac\n+\n+# Here we canonicalize certain aliases for manufacturers.\n+case $basic_machine in\n+\t*-digital*)\n+\t\tbasic_machine=`echo $basic_machine | sed 's/digital.*/dec/'`\n+\t\t;;\n+\t*-commodore*)\n+\t\tbasic_machine=`echo $basic_machine | sed 's/commodore.*/cbm/'`\n+\t\t;;\n+\t*)\n+\t\t;;\n+esac\n+\n+# Decode manufacturer-specific aliases for certain operating systems.\n+\n+if [ x\"$os\" != x\"\" ]\n+then\n+case $os in\n+\t# First match some system type aliases\n+\t# that might get confused with valid system types.\n+\t# -solaris* is a basic system type, with this one exception.\n+\t-auroraux)\n+\t\tos=-auroraux\n+\t\t;;\n+\t-solaris1 | -solaris1.*)\n+\t\tos=`echo $os | sed -e 's|solaris1|sunos4|'`\n+\t\t;;\n+\t-solaris)\n+\t\tos=-solaris2\n+\t\t;;\n+\t-svr4*)\n+\t\tos=-sysv4\n+\t\t;;\n+\t-unixware*)\n+\t\tos=-sysv4.2uw\n+\t\t;;\n+\t-gnu/linux*)\n+\t\tos=`echo $os | sed -e 's|gnu/linux|linux-gnu|'`\n+\t\t;;\n+\t# First accept the basic system types.\n+\t# The portable systems comes first.\n+\t# Each alternative MUST END IN A *, to match a version number.\n+\t# -sysv* is not here because it comes later, after sysvr4.\n+\t-gnu* | -bsd* | -mach* | -minix* | -genix* | -ultrix* | -irix* \\\n+\t      | -*vms* | -sco* | -esix* | -isc* | -aix* | -cnk* | -sunos | -sunos[34]*\\\n+\t      | -hpux* | -unos* | -osf* | -luna* | -dgux* | -auroraux* | -solaris* \\\n+\t      | -sym* | -kopensolaris* | -plan9* \\\n+\t      | -amigaos* | -amigados* | -msdos* | -newsos* | -unicos* | -aof* \\\n+\t      | -aos* | -aros* | -cloudabi* | -sortix* \\\n+\t      | -nindy* | -vxsim* | -vxworks* | -ebmon* | -hms* | -mvs* \\\n+\t      | -clix* | -riscos* | -uniplus* | -iris* | -rtu* | -xenix* \\\n+\t      | -hiux* | -386bsd* | -knetbsd* | -mirbsd* | -netbsd* \\\n+\t      | -bitrig* | -openbsd* | -solidbsd* | -libertybsd* \\\n+\t      | -ekkobsd* | -kfreebsd* | -freebsd* | -riscix* | -lynxos* \\\n+\t      | -bosx* | -nextstep* | -cxux* | -aout* | -elf* | -oabi* \\\n+\t      | -ptx* | -coff* | -ecoff* | -winnt* | -domain* | -vsta* \\\n+\t      | -udi* | -eabi* | -lites* | -ieee* | -go32* | -aux* \\\n+\t      | -chorusos* | -chorusrdb* | -cegcc* \\\n+\t      | -cygwin* | -msys* | -pe* | -psos* | -moss* | -proelf* | -rtems* \\\n+\t      | -mingw32* | -mingw64* | -linux-gnu* | -linux-android* \\\n+\t      | -linux-newlib* | -linux-musl* | -linux-uclibc* \\\n+\t      | -uxpv* | -beos* | -mpeix* | -udk* | -moxiebox* \\\n+\t      | -interix* | -uwin* | -mks* | -rhapsody* | -darwin* | -opened* \\\n+\t      | -openstep* | -oskit* | -conix* | -pw32* | -nonstopux* \\\n+\t      | -storm-chaos* | -tops10* | -tenex* | -tops20* | -its* \\\n+\t      | -os2* | -vos* | -palmos* | -uclinux* | -nucleus* \\\n+\t      | -morphos* | -superux* | -rtmk* | -rtmk-nova* | -windiss* \\\n+\t      | -powermax* | -dnix* | -nx6 | -nx7 | -sei* | -dragonfly* \\\n+\t      | -skyos* | -haiku* | -rdos* | -toppers* | -drops* | -es* \\\n+\t      | -onefs* | -tirtos* | -phoenix*)\n+\t# Remember, each alternative MUST END IN *, to match a version number.\n+\t\t;;\n+\t-qnx*)\n+\t\tcase $basic_machine in\n+\t\t    x86-* | i*86-*)\n+\t\t\t;;\n+\t\t    *)\n+\t\t\tos=-nto$os\n+\t\t\t;;\n+\t\tesac\n+\t\t;;\n+\t-nto-qnx*)\n+\t\t;;\n+\t-nto*)\n+\t\tos=`echo $os | sed -e 's|nto|nto-qnx|'`\n+\t\t;;\n+\t-sim | -es1800* | -hms* | -xray | -os68k* | -none* | -v88r* \\\n+\t      | -windows* | -osx | -abug | -netware* | -os9* | -beos* | -haiku* \\\n+\t      | -macos* | -mpw* | -magic* | -mmixware* | -mon960* | -lnews*)\n+\t\t;;\n+\t-mac*)\n+\t\tos=`echo $os | sed -e 's|mac|macos|'`\n+\t\t;;\n+\t-linux-dietlibc)\n+\t\tos=-linux-dietlibc\n+\t\t;;\n+\t-linux*)\n+\t\tos=`echo $os | sed -e 's|linux|linux-gnu|'`\n+\t\t;;\n+\t-sunos5*)\n+\t\tos=`echo $os | sed -e 's|sunos5|solaris2|'`\n+\t\t;;\n+\t-sunos6*)\n+\t\tos=`echo $os | sed -e 's|sunos6|solaris3|'`\n+\t\t;;\n+\t-opened*)\n+\t\tos=-openedition\n+\t\t;;\n+\t-os400*)\n+\t\tos=-os400\n+\t\t;;\n+\t-wince*)\n+\t\tos=-wince\n+\t\t;;\n+\t-osfrose*)\n+\t\tos=-osfrose\n+\t\t;;\n+\t-osf*)\n+\t\tos=-osf\n+\t\t;;\n+\t-utek*)\n+\t\tos=-bsd\n+\t\t;;\n+\t-dynix*)\n+\t\tos=-bsd\n+\t\t;;\n+\t-acis*)\n+\t\tos=-aos\n+\t\t;;\n+\t-atheos*)\n+\t\tos=-atheos\n+\t\t;;\n+\t-syllable*)\n+\t\tos=-syllable\n+\t\t;;\n+\t-386bsd)\n+\t\tos=-bsd\n+\t\t;;\n+\t-ctix* | -uts*)\n+\t\tos=-sysv\n+\t\t;;\n+\t-nova*)\n+\t\tos=-rtmk-nova\n+\t\t;;\n+\t-ns2 )\n+\t\tos=-nextstep2\n+\t\t;;\n+\t-nsk*)\n+\t\tos=-nsk\n+\t\t;;\n+\t# Preserve the version number of sinix5.\n+\t-sinix5.*)\n+\t\tos=`echo $os | sed -e 's|sinix|sysv|'`\n+\t\t;;\n+\t-sinix*)\n+\t\tos=-sysv4\n+\t\t;;\n+\t-tpf*)\n+\t\tos=-tpf\n+\t\t;;\n+\t-triton*)\n+\t\tos=-sysv3\n+\t\t;;\n+\t-oss*)\n+\t\tos=-sysv3\n+\t\t;;\n+\t-svr4)\n+\t\tos=-sysv4\n+\t\t;;\n+\t-svr3)\n+\t\tos=-sysv3\n+\t\t;;\n+\t-sysvr4)\n+\t\tos=-sysv4\n+\t\t;;\n+\t# This must come after -sysvr4.\n+\t-sysv*)\n+\t\t;;\n+\t-ose*)\n+\t\tos=-ose\n+\t\t;;\n+\t-es1800*)\n+\t\tos=-ose\n+\t\t;;\n+\t-xenix)\n+\t\tos=-xenix\n+\t\t;;\n+\t-*mint | -mint[0-9]* | -*MiNT | -MiNT[0-9]*)\n+\t\tos=-mint\n+\t\t;;\n+\t-aros*)\n+\t\tos=-aros\n+\t\t;;\n+\t-zvmoe)\n+\t\tos=-zvmoe\n+\t\t;;\n+\t-dicos*)\n+\t\tos=-dicos\n+\t\t;;\n+\t-nacl*)\n+\t\t;;\n+\t-ios)\n+\t\t;;\n+\t-none)\n+\t\t;;\n+\t*)\n+\t\t# Get rid of the `-' at the beginning of $os.\n+\t\tos=`echo $os | sed 's/[^-]*-//'`\n+\t\techo Invalid configuration \\`$1\\': system \\`$os\\' not recognized 1>&2\n+\t\texit 1\n+\t\t;;\n+esac\n+else\n+\n+# Here we handle the default operating systems that come with various machines.\n+# The value should be what the vendor currently ships out the door with their\n+# machine or put another way, the most popular os provided with the machine.\n+\n+# Note that if you're going to try to match \"-MANUFACTURER\" here (say,\n+# \"-sun\"), then you have to tell the case statement up towards the top\n+# that MANUFACTURER isn't an operating system.  Otherwise, code above\n+# will signal an error saying that MANUFACTURER isn't an operating\n+# system, and we'll never get to this point.\n+\n+case $basic_machine in\n+\tscore-*)\n+\t\tos=-elf\n+\t\t;;\n+\tspu-*)\n+\t\tos=-elf\n+\t\t;;\n+\t*-acorn)\n+\t\tos=-riscix1.2\n+\t\t;;\n+\tarm*-rebel)\n+\t\tos=-linux\n+\t\t;;\n+\tarm*-semi)\n+\t\tos=-aout\n+\t\t;;\n+\tc4x-* | tic4x-*)\n+\t\tos=-coff\n+\t\t;;\n+\tc8051-*)\n+\t\tos=-elf\n+\t\t;;\n+\thexagon-*)\n+\t\tos=-elf\n+\t\t;;\n+\ttic54x-*)\n+\t\tos=-coff\n+\t\t;;\n+\ttic55x-*)\n+\t\tos=-coff\n+\t\t;;\n+\ttic6x-*)\n+\t\tos=-coff\n+\t\t;;\n+\t# This must come before the *-dec entry.\n+\tpdp10-*)\n+\t\tos=-tops20\n+\t\t;;\n+\tpdp11-*)\n+\t\tos=-none\n+\t\t;;\n+\t*-dec | vax-*)\n+\t\tos=-ultrix4.2\n+\t\t;;\n+\tm68*-apollo)\n+\t\tos=-domain\n+\t\t;;\n+\ti386-sun)\n+\t\tos=-sunos4.0.2\n+\t\t;;\n+\tm68000-sun)\n+\t\tos=-sunos3\n+\t\t;;\n+\tm68*-cisco)\n+\t\tos=-aout\n+\t\t;;\n+\tmep-*)\n+\t\tos=-elf\n+\t\t;;\n+\tmips*-cisco)\n+\t\tos=-elf\n+\t\t;;\n+\tmips*-*)\n+\t\tos=-elf\n+\t\t;;\n+\tor32-*)\n+\t\tos=-coff\n+\t\t;;\n+\t*-tti)\t# must be before sparc entry or we get the wrong os.\n+\t\tos=-sysv3\n+\t\t;;\n+\tsparc-* | *-sun)\n+\t\tos=-sunos4.1.1\n+\t\t;;\n+\t*-be)\n+\t\tos=-beos\n+\t\t;;\n+\t*-haiku)\n+\t\tos=-haiku\n+\t\t;;\n+\t*-ibm)\n+\t\tos=-aix\n+\t\t;;\n+\t*-knuth)\n+\t\tos=-mmixware\n+\t\t;;\n+\t*-wec)\n+\t\tos=-proelf\n+\t\t;;\n+\t*-winbond)\n+\t\tos=-proelf\n+\t\t;;\n+\t*-oki)\n+\t\tos=-proelf\n+\t\t;;\n+\t*-hp)\n+\t\tos=-hpux\n+\t\t;;\n+\t*-hitachi)\n+\t\tos=-hiux\n+\t\t;;\n+\ti860-* | *-att | *-ncr | *-altos | *-motorola | *-convergent)\n+\t\tos=-sysv\n+\t\t;;\n+\t*-cbm)\n+\t\tos=-amigaos\n+\t\t;;\n+\t*-dg)\n+\t\tos=-dgux\n+\t\t;;\n+\t*-dolphin)\n+\t\tos=-sysv3\n+\t\t;;\n+\tm68k-ccur)\n+\t\tos=-rtu\n+\t\t;;\n+\tm88k-omron*)\n+\t\tos=-luna\n+\t\t;;\n+\t*-next )\n+\t\tos=-nextstep\n+\t\t;;\n+\t*-sequent)\n+\t\tos=-ptx\n+\t\t;;\n+\t*-crds)\n+\t\tos=-unos\n+\t\t;;\n+\t*-ns)\n+\t\tos=-genix\n+\t\t;;\n+\ti370-*)\n+\t\tos=-mvs\n+\t\t;;\n+\t*-next)\n+\t\tos=-nextstep3\n+\t\t;;\n+\t*-gould)\n+\t\tos=-sysv\n+\t\t;;\n+\t*-highlevel)\n+\t\tos=-bsd\n+\t\t;;\n+\t*-encore)\n+\t\tos=-bsd\n+\t\t;;\n+\t*-sgi)\n+\t\tos=-irix\n+\t\t;;\n+\t*-siemens)\n+\t\tos=-sysv4\n+\t\t;;\n+\t*-masscomp)\n+\t\tos=-rtu\n+\t\t;;\n+\tf30[01]-fujitsu | f700-fujitsu)\n+\t\tos=-uxpv\n+\t\t;;\n+\t*-rom68k)\n+\t\tos=-coff\n+\t\t;;\n+\t*-*bug)\n+\t\tos=-coff\n+\t\t;;\n+\t*-apple)\n+\t\tos=-macos\n+\t\t;;\n+\t*-atari*)\n+\t\tos=-mint\n+\t\t;;\n+\t*)\n+\t\tos=-none\n+\t\t;;\n+esac\n+fi\n+\n+# Here we handle the case where we know the os, and the CPU type, but not the\n+# manufacturer.  We pick the logical manufacturer.\n+vendor=unknown\n+case $basic_machine in\n+\t*-unknown)\n+\t\tcase $os in\n+\t\t\t-riscix*)\n+\t\t\t\tvendor=acorn\n+\t\t\t\t;;\n+\t\t\t-sunos*)\n+\t\t\t\tvendor=sun\n+\t\t\t\t;;\n+\t\t\t-cnk*|-aix*)\n+\t\t\t\tvendor=ibm\n+\t\t\t\t;;\n+\t\t\t-beos*)\n+\t\t\t\tvendor=be\n+\t\t\t\t;;\n+\t\t\t-hpux*)\n+\t\t\t\tvendor=hp\n+\t\t\t\t;;\n+\t\t\t-mpeix*)\n+\t\t\t\tvendor=hp\n+\t\t\t\t;;\n+\t\t\t-hiux*)\n+\t\t\t\tvendor=hitachi\n+\t\t\t\t;;\n+\t\t\t-unos*)\n+\t\t\t\tvendor=crds\n+\t\t\t\t;;\n+\t\t\t-dgux*)\n+\t\t\t\tvendor=dg\n+\t\t\t\t;;\n+\t\t\t-luna*)\n+\t\t\t\tvendor=omron\n+\t\t\t\t;;\n+\t\t\t-genix*)\n+\t\t\t\tvendor=ns\n+\t\t\t\t;;\n+\t\t\t-mvs* | -opened*)\n+\t\t\t\tvendor=ibm\n+\t\t\t\t;;\n+\t\t\t-os400*)\n+\t\t\t\tvendor=ibm\n+\t\t\t\t;;\n+\t\t\t-ptx*)\n+\t\t\t\tvendor=sequent\n+\t\t\t\t;;\n+\t\t\t-tpf*)\n+\t\t\t\tvendor=ibm\n+\t\t\t\t;;\n+\t\t\t-vxsim* | -vxworks* | -windiss*)\n+\t\t\t\tvendor=wrs\n+\t\t\t\t;;\n+\t\t\t-aux*)\n+\t\t\t\tvendor=apple\n+\t\t\t\t;;\n+\t\t\t-hms*)\n+\t\t\t\tvendor=hitachi\n+\t\t\t\t;;\n+\t\t\t-mpw* | -macos*)\n+\t\t\t\tvendor=apple\n+\t\t\t\t;;\n+\t\t\t-*mint | -mint[0-9]* | -*MiNT | -MiNT[0-9]*)\n+\t\t\t\tvendor=atari\n+\t\t\t\t;;\n+\t\t\t-vos*)\n+\t\t\t\tvendor=stratus\n+\t\t\t\t;;\n+\t\tesac\n+\t\tbasic_machine=`echo $basic_machine | sed \"s/unknown/$vendor/\"`\n+\t\t;;\n+esac\n+\n+echo $basic_machine$os\n+exit\n+\n+# Local variables:\n+# eval: (add-hook 'write-file-hooks 'time-stamp)\n+# time-stamp-start: \"timestamp='\"\n+# time-stamp-format: \"%:y-%02m-%02d\"\n+# time-stamp-end: \"'\"\n+# End:"
      },
      {
        "sha": "74f9ef3f205ec0e12f6ac9e75f03da81dd7d96e7",
        "filename": "depends/description.md",
        "status": "added",
        "additions": 53,
        "deletions": 0,
        "changes": 53,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/description.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/description.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/description.md?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,53 @@\n+This is a system of building and caching dependencies necessary for building Bitcoin. \n+There are several features that make it different from most similar systems:\n+\n+### It is designed to be builder and host agnostic\n+\n+In theory, binaries for any target OS/architecture can be created, from a\n+builder running any OS/architecture. In practice, build-side tools must be\n+specified when the defaults don't fit, and packages must be amended to work\n+on new hosts. For now, a build architecture of x86_64 is assumed, either on\n+Linux or OSX.\n+\n+### No reliance on timestamps\n+\n+File presence is used to determine what needs to be built. This makes the\n+results distributable and easily digestable by automated builders.\n+\n+### Each build only has its specified dependencies available at build-time.\n+\n+For each build, the sysroot is wiped and the (recursive) dependencies are\n+installed. This makes each build deterministic, since there will never be any\n+unknown files available to cause side-effects.\n+\n+### Each package is cached and only rebuilt as needed.\n+\n+Before building, a unique build-id is generated for each package. This id\n+consists of a hash of all files used to build the package (Makefiles, packages,\n+etc), and as well as a hash of the same data for each recursive dependency. If\n+any portion of a package's build recipe changes, it will be rebuilt as well as\n+any other package that depends on it. If any of the main makefiles (Makefile, \n+funcs.mk, etc) are changed, all packages will be rebuilt. After building, the\n+results are cached into a tarball that can be re-used and distributed.\n+\n+### Package build results are (relatively) deterministic.\n+\n+Each package is configured and patched so that it will yield the same\n+build-results with each consequent build, within a reasonable set of\n+constraints. Some things like timestamp insertion are unavoidable, and are\n+beyond the scope of this system. Additionally, the toolchain itself must be\n+capable of deterministic results. When revisions are properly bumped, a cached\n+build should represent an exact single payload.\n+\n+### Sources are fetched and verified automatically\n+\n+Each package must define its source location and checksum. The build will fail\n+if the fetched source does not match. Sources may be pre-seeded and/or cached\n+as desired.\n+\n+### Self-cleaning\n+\n+Build and staging dirs are wiped after use, and any previous version of a\n+cached result is removed following a successful build. Automated builders\n+should be able to build each revision and store the results with no further\n+intervention."
      },
      {
        "sha": "15e404e42dcf372e8d75f9c3945cf4bad9a21837",
        "filename": "depends/funcs.mk",
        "status": "added",
        "additions": 245,
        "deletions": 0,
        "changes": 245,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/funcs.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/funcs.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/funcs.mk?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,245 @@\n+define int_vars\n+#Set defaults for vars which may be overridden per-package\n+$(1)_cc=$($($(1)_type)_CC)\n+$(1)_cxx=$($($(1)_type)_CXX)\n+$(1)_objc=$($($(1)_type)_OBJC)\n+$(1)_objcxx=$($($(1)_type)_OBJCXX)\n+$(1)_ar=$($($(1)_type)_AR)\n+$(1)_ranlib=$($($(1)_type)_RANLIB)\n+$(1)_libtool=$($($(1)_type)_LIBTOOL)\n+$(1)_nm=$($($(1)_type)_NM)\n+$(1)_cflags=$($($(1)_type)_CFLAGS) $($($(1)_type)_$(release_type)_CFLAGS)\n+$(1)_cxxflags=$($($(1)_type)_CXXFLAGS) $($($(1)_type)_$(release_type)_CXXFLAGS)\n+$(1)_ldflags=$($($(1)_type)_LDFLAGS) $($($(1)_type)_$(release_type)_LDFLAGS) -L$($($(1)_type)_prefix)/lib\n+$(1)_cppflags=$($($(1)_type)_CPPFLAGS) $($($(1)_type)_$(release_type)_CPPFLAGS) -I$($($(1)_type)_prefix)/include\n+$(1)_recipe_hash:=\n+endef\n+\n+define int_get_all_dependencies\n+$(sort $(foreach dep,$(2),$(2) $(call int_get_all_dependencies,$(1),$($(dep)_dependencies))))\n+endef\n+\n+define fetch_file_inner\n+    ( mkdir -p $$($(1)_download_dir) && echo Fetching $(3) from $(2) && \\\n+    $(build_DOWNLOAD) \"$$($(1)_download_dir)/$(4).temp\" \"$(2)/$(3)\" && \\\n+    echo \"$(5)  $$($(1)_download_dir)/$(4).temp\" > $$($(1)_download_dir)/.$(4).hash && \\\n+    $(build_SHA256SUM) -c $$($(1)_download_dir)/.$(4).hash && \\\n+    mv $$($(1)_download_dir)/$(4).temp $$($(1)_source_dir)/$(4) && \\\n+    rm -rf $$($(1)_download_dir) )\n+endef\n+\n+define fetch_file\n+    ( test -f $$($(1)_source_dir)/$(4) || \\\n+    ( $(call fetch_file_inner,$(1),$(2),$(3),$(4),$(5)) || \\\n+      $(call fetch_file_inner,$(1),$(FALLBACK_DOWNLOAD_PATH),$(3),$(4),$(5))))\n+endef\n+\n+define int_get_build_recipe_hash\n+$(eval $(1)_all_file_checksums:=$(shell $(build_SHA256SUM) $(meta_depends) packages/$(1).mk $(addprefix $(PATCHES_PATH)/$(1)/,$($(1)_patches)) | cut -d\" \" -f1))\n+$(eval $(1)_recipe_hash:=$(shell echo -n \"$($(1)_all_file_checksums)\" | $(build_SHA256SUM) | cut -d\" \" -f1))\n+endef\n+\n+define int_get_build_id\n+$(eval $(1)_dependencies += $($(1)_$(host_arch)_$(host_os)_dependencies) $($(1)_$(host_os)_dependencies))\n+$(eval $(1)_all_dependencies:=$(call int_get_all_dependencies,$(1),$($($(1)_type)_native_toolchain) $($(1)_dependencies)))\n+$(foreach dep,$($(1)_all_dependencies),$(eval $(1)_build_id_deps+=$(dep)-$($(dep)_version)-$($(dep)_recipe_hash)))\n+$(eval $(1)_build_id_long:=$(1)-$($(1)_version)-$($(1)_recipe_hash)-$(release_type) $($(1)_build_id_deps) $($($(1)_type)_id_string))\n+$(eval $(1)_build_id:=$(shell echo -n \"$($(1)_build_id_long)\" | $(build_SHA256SUM) | cut -c-$(HASH_LENGTH)))\n+final_build_id_long+=$($(package)_build_id_long)\n+\n+#compute package-specific paths\n+$(1)_build_subdir?=.\n+$(1)_download_file?=$($(1)_file_name)\n+$(1)_source_dir:=$(SOURCES_PATH)\n+$(1)_source:=$$($(1)_source_dir)/$($(1)_file_name)\n+$(1)_staging_dir=$(base_staging_dir)/$(host)/$(1)/$($(1)_version)-$($(1)_build_id)\n+$(1)_staging_prefix_dir:=$$($(1)_staging_dir)$($($(1)_type)_prefix)\n+$(1)_extract_dir:=$(base_build_dir)/$(host)/$(1)/$($(1)_version)-$($(1)_build_id)\n+$(1)_download_dir:=$(base_download_dir)/$(1)-$($(1)_version)\n+$(1)_build_dir:=$$($(1)_extract_dir)/$$($(1)_build_subdir)\n+$(1)_cached_checksum:=$(BASE_CACHE)/$(host)/$(1)/$(1)-$($(1)_version)-$($(1)_build_id).tar.gz.hash\n+$(1)_patch_dir:=$(base_build_dir)/$(host)/$(1)/$($(1)_version)-$($(1)_build_id)/.patches-$($(1)_build_id)\n+$(1)_prefixbin:=$($($(1)_type)_prefix)/bin/\n+$(1)_cached:=$(BASE_CACHE)/$(host)/$(1)/$(1)-$($(1)_version)-$($(1)_build_id).tar.gz\n+$(1)_all_sources=$($(1)_file_name) $($(1)_extra_sources)\n+\n+#stamps\n+$(1)_fetched=$(SOURCES_PATH)/download-stamps/.stamp_fetched-$(1)-$($(1)_file_name).hash\n+$(1)_extracted=$$($(1)_extract_dir)/.stamp_extracted\n+$(1)_preprocessed=$$($(1)_extract_dir)/.stamp_preprocessed\n+$(1)_cleaned=$$($(1)_extract_dir)/.stamp_cleaned\n+$(1)_built=$$($(1)_build_dir)/.stamp_built\n+$(1)_configured=$$($(1)_build_dir)/.stamp_configured\n+$(1)_staged=$$($(1)_staging_dir)/.stamp_staged\n+$(1)_postprocessed=$$($(1)_staging_prefix_dir)/.stamp_postprocessed\n+$(1)_download_path_fixed=$(subst :,\\:,$$($(1)_download_path))\n+\n+\n+#default commands\n+$(1)_fetch_cmds ?= $(call fetch_file,$(1),$(subst \\:,:,$$($(1)_download_path_fixed)),$$($(1)_download_file),$($(1)_file_name),$($(1)_sha256_hash))\n+$(1)_extract_cmds ?= mkdir -p $$($(1)_extract_dir) && echo \"$$($(1)_sha256_hash)  $$($(1)_source)\" > $$($(1)_extract_dir)/.$$($(1)_file_name).hash &&  $(build_SHA256SUM) -c $$($(1)_extract_dir)/.$$($(1)_file_name).hash && tar --strip-components=1 -xf $$($(1)_source)\n+$(1)_preprocess_cmds ?=\n+$(1)_build_cmds ?=\n+$(1)_config_cmds ?=\n+$(1)_stage_cmds ?=\n+$(1)_set_vars ?=\n+\n+\n+all_sources+=$$($(1)_fetched)\n+endef\n+#$(foreach dep_target,$($(1)_all_dependencies),$(eval $(1)_dependency_targets=$($(dep_target)_cached)))\n+\n+\n+define int_config_attach_build_config\n+$(eval $(call $(1)_set_vars,$(1)))\n+$(1)_cflags+=$($(1)_cflags_$(release_type))\n+$(1)_cflags+=$($(1)_cflags_$(host_arch)) $($(1)_cflags_$(host_arch)_$(release_type))\n+$(1)_cflags+=$($(1)_cflags_$(host_os)) $($(1)_cflags_$(host_os)_$(release_type))\n+$(1)_cflags+=$($(1)_cflags_$(host_arch)_$(host_os)) $($(1)_cflags_$(host_arch)_$(host_os)_$(release_type))\n+\n+$(1)_cxxflags+=$($(1)_cxxflags_$(release_type))\n+$(1)_cxxflags+=$($(1)_cxxflags_$(host_arch)) $($(1)_cxxflags_$(host_arch)_$(release_type))\n+$(1)_cxxflags+=$($(1)_cxxflags_$(host_os)) $($(1)_cxxflags_$(host_os)_$(release_type))\n+$(1)_cxxflags+=$($(1)_cxxflags_$(host_arch)_$(host_os)) $($(1)_cxxflags_$(host_arch)_$(host_os)_$(release_type))\n+\n+$(1)_cppflags+=$($(1)_cppflags_$(release_type))\n+$(1)_cppflags+=$($(1)_cppflags_$(host_arch)) $($(1)_cppflags_$(host_arch)_$(release_type))\n+$(1)_cppflags+=$($(1)_cppflags_$(host_os)) $($(1)_cppflags_$(host_os)_$(release_type))\n+$(1)_cppflags+=$($(1)_cppflags_$(host_arch)_$(host_os)) $($(1)_cppflags_$(host_arch)_$(host_os)_$(release_type))\n+\n+$(1)_ldflags+=$($(1)_ldflags_$(release_type))\n+$(1)_ldflags+=$($(1)_ldflags_$(host_arch)) $($(1)_ldflags_$(host_arch)_$(release_type))\n+$(1)_ldflags+=$($(1)_ldflags_$(host_os)) $($(1)_ldflags_$(host_os)_$(release_type))\n+$(1)_ldflags+=$($(1)_ldflags_$(host_arch)_$(host_os)) $($(1)_ldflags_$(host_arch)_$(host_os)_$(release_type))\n+\n+$(1)_build_opts+=$$($(1)_build_opts_$(release_type))\n+$(1)_build_opts+=$$($(1)_build_opts_$(host_arch)) $$($(1)_build_opts_$(host_arch)_$(release_type))\n+$(1)_build_opts+=$$($(1)_build_opts_$(host_os)) $$($(1)_build_opts_$(host_os)_$(release_type))\n+$(1)_build_opts+=$$($(1)_build_opts_$(host_arch)_$(host_os)) $$($(1)_build_opts_$(host_arch)_$(host_os)_$(release_type))\n+\n+$(1)_config_opts+=$$($(1)_config_opts_$(release_type))\n+$(1)_config_opts+=$$($(1)_config_opts_$(host_arch)) $$($(1)_config_opts_$(host_arch)_$(release_type))\n+$(1)_config_opts+=$$($(1)_config_opts_$(host_os)) $$($(1)_config_opts_$(host_os)_$(release_type))\n+$(1)_config_opts+=$$($(1)_config_opts_$(host_arch)_$(host_os)) $$($(1)_config_opts_$(host_arch)_$(host_os)_$(release_type))\n+\n+$(1)_config_env+=$$($(1)_config_env_$(release_type))\n+$(1)_config_env+=$($(1)_config_env_$(host_arch)) $($(1)_config_env_$(host_arch)_$(release_type))\n+$(1)_config_env+=$($(1)_config_env_$(host_os)) $($(1)_config_env_$(host_os)_$(release_type))\n+$(1)_config_env+=$($(1)_config_env_$(host_arch)_$(host_os)) $($(1)_config_env_$(host_arch)_$(host_os)_$(release_type))\n+\n+$(1)_config_env+=PKG_CONFIG_LIBDIR=$($($(1)_type)_prefix)/lib/pkgconfig\n+$(1)_config_env+=PKG_CONFIG_PATH=$($($(1)_type)_prefix)/share/pkgconfig\n+$(1)_config_env+=PATH=$(build_prefix)/bin:$(PATH)\n+$(1)_build_env+=PATH=$(build_prefix)/bin:$(PATH)\n+$(1)_stage_env+=PATH=$(build_prefix)/bin:$(PATH)\n+$(1)_autoconf=./configure --host=$($($(1)_type)_host) --disable-dependency-tracking --prefix=$($($(1)_type)_prefix) $$($(1)_config_opts) CC=\"$$($(1)_cc)\" CXX=\"$$($(1)_cxx)\"\n+\n+ifneq ($($(1)_nm),)\n+$(1)_autoconf += NM=\"$$($(1)_nm)\"\n+endif\n+ifneq ($($(1)_ranlib),)\n+$(1)_autoconf += RANLIB=\"$$($(1)_ranlib)\"\n+endif\n+ifneq ($($(1)_ar),)\n+$(1)_autoconf += AR=\"$$($(1)_ar)\"\n+endif\n+ifneq ($($(1)_cflags),)\n+$(1)_autoconf += CFLAGS=\"$$($(1)_cflags)\"\n+endif\n+ifneq ($($(1)_cxxflags),)\n+$(1)_autoconf += CXXFLAGS=\"$$($(1)_cxxflags)\"\n+endif\n+ifneq ($($(1)_cppflags),)\n+$(1)_autoconf += CPPFLAGS=\"$$($(1)_cppflags)\"\n+endif\n+ifneq ($($(1)_ldflags),)\n+$(1)_autoconf += LDFLAGS=\"$$($(1)_ldflags)\"\n+endif\n+endef\n+\n+define int_add_cmds\n+$($(1)_fetched):\n+\t$(AT)mkdir -p $$(@D) $(SOURCES_PATH)\n+\t$(AT)rm -f $$@\n+\t$(AT)touch $$@\n+\t$(AT)cd $$(@D); $(call $(1)_fetch_cmds,$(1))\n+\t$(AT)cd $($(1)_source_dir); $(foreach source,$($(1)_all_sources),$(build_SHA256SUM) $(source) >> $$(@);)\n+\t$(AT)touch $$@\n+$($(1)_extracted): | $($(1)_fetched)\n+\t$(AT)echo Extracting $(1)...\n+\t$(AT)mkdir -p $$(@D)\n+\t$(AT)cd $$(@D); $(call $(1)_extract_cmds,$(1))\n+\t$(AT)touch $$@\n+$($(1)_preprocessed): | $($(1)_dependencies) $($(1)_extracted)\n+\t$(AT)echo Preprocessing $(1)...\n+\t$(AT)mkdir -p $$(@D) $($(1)_patch_dir)\n+\t$(AT)$(foreach patch,$($(1)_patches),cd $(PATCHES_PATH)/$(1); cp $(patch) $($(1)_patch_dir) ;)\n+\t$(AT)cd $$(@D); $(call $(1)_preprocess_cmds, $(1))\n+\t$(AT)touch $$@\n+$($(1)_configured): | $($(1)_preprocessed)\n+\t$(AT)echo Configuring $(1)...\n+\t$(AT)rm -rf $(host_prefix); mkdir -p $(host_prefix)/lib; cd $(host_prefix); $(foreach package,$($(1)_all_dependencies), tar xf $($(package)_cached); )\n+\t$(AT)mkdir -p $$(@D)\n+\t$(AT)+cd $$(@D); $($(1)_config_env) $(call $(1)_config_cmds, $(1))\n+\t$(AT)touch $$@\n+$($(1)_built): | $($(1)_configured)\n+\t$(AT)echo Building $(1)...\n+\t$(AT)mkdir -p $$(@D)\n+\t$(AT)+cd $$(@D); $($(1)_build_env) $(call $(1)_build_cmds, $(1))\n+\t$(AT)touch $$@\n+$($(1)_staged): | $($(1)_built)\n+\t$(AT)echo Staging $(1)...\n+\t$(AT)mkdir -p $($(1)_staging_dir)/$(host_prefix)\n+\t$(AT)cd $($(1)_build_dir); $($(1)_stage_env) $(call $(1)_stage_cmds, $(1))\n+\t$(AT)rm -rf $($(1)_extract_dir)\n+\t$(AT)touch $$@\n+$($(1)_postprocessed): | $($(1)_staged)\n+\t$(AT)echo Postprocessing $(1)...\n+\t$(AT)cd $($(1)_staging_prefix_dir); $(call $(1)_postprocess_cmds)\n+\t$(AT)touch $$@\n+$($(1)_cached): | $($(1)_dependencies) $($(1)_postprocessed)\n+\t$(AT)echo Caching $(1)...\n+\t$(AT)cd $$($(1)_staging_dir)/$(host_prefix); find . | sort | tar --no-recursion -czf $$($(1)_staging_dir)/$$(@F) -T -\n+\t$(AT)mkdir -p $$(@D)\n+\t$(AT)rm -rf $$(@D) && mkdir -p $$(@D)\n+\t$(AT)mv $$($(1)_staging_dir)/$$(@F) $$(@)\n+\t$(AT)rm -rf $($(1)_staging_dir)\n+$($(1)_cached_checksum): $($(1)_cached)\n+\t$(AT)cd $$(@D); $(build_SHA256SUM) $$(<F) > $$(@)\n+\n+.PHONY: $(1)\n+$(1): | $($(1)_cached_checksum)\n+.SECONDARY: $($(1)_cached) $($(1)_postprocessed) $($(1)_staged) $($(1)_built) $($(1)_configured) $($(1)_preprocessed) $($(1)_extracted) $($(1)_fetched)\n+\n+endef\n+\n+# These functions create the build targets for each package. They must be\n+# broken down into small steps so that each part is done for all packages\n+# before moving on to the next step. Otherwise, a package's info\n+# (build-id for example) would only be available to another package if it\n+# happened to be computed already.\n+\n+#set the type for host/build packages.\n+$(foreach native_package,$(native_packages),$(eval $(native_package)_type=build))\n+$(foreach package,$(packages),$(eval $(package)_type=$(host_arch)_$(host_os)))\n+\n+#set overridable defaults\n+$(foreach package,$(all_packages),$(eval $(call int_vars,$(package))))\n+\n+#include package files\n+$(foreach package,$(all_packages),$(eval include packages/$(package).mk))\n+\n+#compute a hash of all files that comprise this package's build recipe\n+$(foreach package,$(all_packages),$(eval $(call int_get_build_recipe_hash,$(package))))\n+\n+#generate a unique id for this package, incorporating its dependencies as well\n+$(foreach package,$(all_packages),$(eval $(call int_get_build_id,$(package))))\n+\n+#compute final vars after reading package vars\n+$(foreach package,$(all_packages),$(eval $(call int_config_attach_build_config,$(package))))\n+\n+#create build targets\n+$(foreach package,$(all_packages),$(eval $(call int_add_cmds,$(package))))\n+\n+#special exception: if a toolchain package exists, all non-native packages depend on it\n+$(foreach package,$(packages),$(eval $($(package)_unpacked): |$($($(host_arch)_$(host_os)_native_toolchain)_cached) ))"
      },
      {
        "sha": "985649619ffec384ea55f076ff56fba43fd6c2e8",
        "filename": "depends/hosts/darwin.mk",
        "status": "added",
        "additions": 17,
        "deletions": 0,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/hosts/darwin.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/hosts/darwin.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/hosts/darwin.mk?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,17 @@\n+OSX_MIN_VERSION=10.7\n+OSX_SDK_VERSION=10.11\n+OSX_SDK=$(SDK_PATH)/MacOSX$(OSX_SDK_VERSION).sdk\n+LD64_VERSION=253.9\n+darwin_CC=clang -target $(host) -mmacosx-version-min=$(OSX_MIN_VERSION) --sysroot $(OSX_SDK) -mlinker-version=$(LD64_VERSION)\n+darwin_CXX=clang++ -target $(host) -mmacosx-version-min=$(OSX_MIN_VERSION) --sysroot $(OSX_SDK) -mlinker-version=$(LD64_VERSION) -stdlib=libc++\n+\n+darwin_CFLAGS=-pipe\n+darwin_CXXFLAGS=$(darwin_CFLAGS)\n+\n+darwin_release_CFLAGS=-O2\n+darwin_release_CXXFLAGS=$(darwin_release_CFLAGS)\n+\n+darwin_debug_CFLAGS=-O1\n+darwin_debug_CXXFLAGS=$(darwin_debug_CFLAGS)\n+\n+darwin_native_toolchain=native_cctools"
      },
      {
        "sha": "6f60d6b3fd004e9317db4717bf7dcb68b9dd43eb",
        "filename": "depends/hosts/default.mk",
        "status": "added",
        "additions": 26,
        "deletions": 0,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/hosts/default.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/hosts/default.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/hosts/default.mk?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,26 @@\n+default_host_CC = $(host_toolchain)gcc\n+default_host_CXX = $(host_toolchain)g++\n+default_host_AR = $(host_toolchain)ar\n+default_host_RANLIB = $(host_toolchain)ranlib\n+default_host_STRIP = $(host_toolchain)strip\n+default_host_LIBTOOL = $(host_toolchain)libtool\n+default_host_INSTALL_NAME_TOOL = $(host_toolchain)install_name_tool\n+default_host_OTOOL = $(host_toolchain)otool\n+default_host_NM = $(host_toolchain)nm\n+\n+define add_host_tool_func\n+$(host_os)_$1?=$$(default_host_$1)\n+$(host_arch)_$(host_os)_$1?=$$($(host_os)_$1)\n+$(host_arch)_$(host_os)_$(release_type)_$1?=$$($(host_os)_$1)\n+host_$1=$$($(host_arch)_$(host_os)_$1)\n+endef\n+\n+define add_host_flags_func\n+$(host_arch)_$(host_os)_$1 += $($(host_os)_$1)\n+$(host_arch)_$(host_os)_$(release_type)_$1 += $($(host_os)_$(release_type)_$1)\n+host_$1 = $$($(host_arch)_$(host_os)_$1)\n+host_$(release_type)_$1 = $$($(host_arch)_$(host_os)_$(release_type)_$1)\n+endef\n+\n+$(foreach tool,CC CXX AR RANLIB STRIP NM LIBTOOL OTOOL INSTALL_NAME_TOOL,$(eval $(call add_host_tool_func,$(tool))))\n+$(foreach flags,CFLAGS CXXFLAGS CPPFLAGS LDFLAGS, $(eval $(call add_host_flags_func,$(flags))))"
      },
      {
        "sha": "b13a0f1ad714ae19ec7fc4b68d162095b9c62255",
        "filename": "depends/hosts/linux.mk",
        "status": "added",
        "additions": 31,
        "deletions": 0,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/hosts/linux.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/hosts/linux.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/hosts/linux.mk?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,31 @@\n+linux_CFLAGS=-pipe\n+linux_CXXFLAGS=$(linux_CFLAGS)\n+\n+linux_release_CFLAGS=-O2\n+linux_release_CXXFLAGS=$(linux_release_CFLAGS)\n+\n+linux_debug_CFLAGS=-O1\n+linux_debug_CXXFLAGS=$(linux_debug_CFLAGS)\n+\n+linux_debug_CPPFLAGS=-D_GLIBCXX_DEBUG -D_GLIBCXX_DEBUG_PEDANTIC\n+\n+ifeq (86,$(findstring 86,$(build_arch)))\n+i686_linux_CC=gcc -m32\n+i686_linux_CXX=g++ -m32\n+i686_linux_AR=ar\n+i686_linux_RANLIB=ranlib\n+i686_linux_NM=nm\n+i686_linux_STRIP=strip\n+\n+x86_64_linux_CC=gcc -m64\n+x86_64_linux_CXX=g++ -m64\n+x86_64_linux_AR=ar\n+x86_64_linux_RANLIB=ranlib\n+x86_64_linux_NM=nm\n+x86_64_linux_STRIP=strip\n+else\n+i686_linux_CC=$(default_host_CC) -m32\n+i686_linux_CXX=$(default_host_CXX) -m32\n+x86_64_linux_CC=$(default_host_CC) -m64\n+x86_64_linux_CXX=$(default_host_CXX) -m64\n+endif"
      },
      {
        "sha": "dbfb62fdcf98695d515e56897ee488703e002054",
        "filename": "depends/hosts/mingw32.mk",
        "status": "added",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/hosts/mingw32.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/hosts/mingw32.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/hosts/mingw32.mk?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,10 @@\n+mingw32_CFLAGS=-pipe\n+mingw32_CXXFLAGS=$(mingw32_CFLAGS)\n+\n+mingw32_release_CFLAGS=-O2\n+mingw32_release_CXXFLAGS=$(mingw32_release_CFLAGS)\n+\n+mingw32_debug_CFLAGS=-O1\n+mingw32_debug_CXXFLAGS=$(mingw32_debug_CFLAGS)\n+\n+mingw32_debug_CPPFLAGS=-D_GLIBCXX_DEBUG -D_GLIBCXX_DEBUG_PEDANTIC"
      },
      {
        "sha": "7c80362509e989e975e499e0242009e7e098ddf4",
        "filename": "depends/packages.md",
        "status": "added",
        "additions": 147,
        "deletions": 0,
        "changes": 147,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/packages.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/packages.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages.md?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,147 @@\n+Each recipe consists of 3 main parts: defining identifiers, setting build\n+variables, and defining build commands.\n+\n+The package \"mylib\" will be used here as an example\n+\n+General tips:\n+- mylib_foo is written as $(package)_foo in order to make recipes more similar.\n+\n+## Identifiers\n+Each package is required to define at least these variables:\n+\n+    $(package)_version:\n+    Version of the upstream library or program. If there is no version, a\n+    placeholder such as 1.0 can be used.\n+\n+    $(package)_download_path:\n+    Location of the upstream source, without the file-name. Usually http or\n+    ftp.\n+\n+    $(package)_file_name:\n+    The upstream source filename available at the download path.\n+\n+    $(package)_sha256_hash:\n+    The sha256 hash of the upstream file\n+\n+These variables are optional:\n+\n+    $(package)_build_subdir:\n+    cd to this dir before running configure/build/stage commands.\n+    \n+    $(package)_download_file:\n+    The file-name of the upstream source if it differs from how it should be\n+    stored locally. This can be used to avoid storing file-names with strange\n+    characters.\n+    \n+    $(package)_dependencies:\n+    Names of any other packages that this one depends on.\n+    \n+    $(package)_patches:\n+    Filenames of any patches needed to build the package\n+\n+    $(package)_extra_sources:\n+    Any extra files that will be fetched via $(package)_fetch_cmds. These are\n+    specified so that they can be fetched and verified via 'make download'.\n+\n+\n+## Build Variables:\n+After defining the main identifiers, build variables may be added or customized\n+before running the build commands. They should be added to a function called\n+$(package)_set_vars. For example:\n+\n+    define $(package)_set_vars\n+    ...\n+    endef\n+\n+Most variables can be prefixed with the host, architecture, or both, to make\n+the modifications specific to that case. For example:\n+\n+    Universal:     $(package)_cc=gcc\n+    Linux only:    $(package)_linux_cc=gcc\n+    x86_64 only:       $(package)_x86_64_cc = gcc\n+    x86_64 linux only: $(package)_x86_64_linux_cc = gcc\n+\n+These variables may be set to override or append their default values.\n+\n+    $(package)_cc\n+    $(package)_cxx\n+    $(package)_objc\n+    $(package)_objcxx\n+    $(package)_ar\n+    $(package)_ranlib\n+    $(package)_libtool\n+    $(package)_nm\n+    $(package)_cflags\n+    $(package)_cxxflags\n+    $(package)_ldflags\n+    $(package)_cppflags\n+    $(package)_config_env\n+    $(package)_build_env\n+    $(package)_stage_env\n+    $(package)_build_opts\n+    $(package)_config_opts\n+\n+The *_env variables are used to add environment variables to the respective\n+commands.\n+\n+Many variables respect a debug/release suffix as well, in order to use them for\n+only the appropriate build config. For example:\n+\n+    $(package)_cflags_release = -O3\n+    $(package)_cflags_i686_debug = -g\n+    $(package)_config_opts_release = --disable-debug\n+\n+These will be used in addition to the options that do not specify\n+debug/release. All builds are considered to be release unless DEBUG=1 is set by\n+the user. Other variables may be defined as needed.\n+\n+## Build commands:\n+\n+  For each build, a unique build dir and staging dir are created. For example,\n+  `work/build/mylib/1.0-1adac830f6e` and `work/staging/mylib/1.0-1adac830f6e`.\n+\n+  The following build commands are available for each recipe:\n+\n+    $(package)_fetch_cmds:\n+    Runs from: build dir\n+    Fetch the source file. If undefined, it will be fetched and verified\n+    against its hash.\n+\n+    $(package)_extract_cmds:\n+    Runs from: build dir\n+    Verify the source file against its hash and extract it. If undefined, the\n+    source is assumed to be a tarball.\n+\n+    $(package)_preprocess_cmds:\n+    Runs from: build dir/$(package)_build_subdir\n+    Preprocess the source as necessary. If undefined, does nothing.\n+\n+    $(package)_config_cmds:\n+    Runs from: build dir/$(package)_build_subdir\n+    Configure the source. If undefined, does nothing.\n+\n+    $(package)_build_cmds:\n+    Runs from: build dir/$(package)_build_subdir\n+    Build the source. If undefined, does nothing.\n+\n+    $(package)_stage_cmds:\n+    Runs from: build dir/$(package)_build_subdir\n+    Stage the build results. If undefined, does nothing.\n+\n+  The following variables are available for each recipe:\n+    \n+    $(1)_staging_dir: package's destination sysroot path\n+    $(1)_staging_prefix_dir: prefix path inside of the package's staging dir\n+    $(1)_extract_dir: path to the package's extracted sources\n+    $(1)_build_dir: path where configure/build/stage commands will be run\n+    $(1)_patch_dir: path where the package's patches (if any) are found\n+\n+Notes on build commands:\n+\n+For packages built with autotools, $($(package)_autoconf) can be used in the\n+configure step to (usually) correctly configure automatically. Any\n+$($(package)_config_opts) will be appended.\n+\n+Most autotools projects can be properly staged using:\n+\n+    $(MAKE) DESTDIR=$($(package)_staging_dir) install"
      },
      {
        "sha": "6c9876c2c7c7c0d884f49dd00de58b5a12d42a31",
        "filename": "depends/packages/bdb.mk",
        "status": "added",
        "additions": 31,
        "deletions": 0,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/packages/bdb.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/packages/bdb.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/bdb.mk?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,31 @@\n+package=bdb\n+$(package)_version=4.8.30\n+$(package)_download_path=http://download.oracle.com/berkeley-db\n+$(package)_file_name=db-$($(package)_version).NC.tar.gz\n+$(package)_sha256_hash=12edc0df75bf9abd7f82f821795bcee50f42cb2e5f76a6a281b85732798364ef\n+$(package)_build_subdir=build_unix\n+\n+define $(package)_set_vars\n+$(package)_config_opts=--disable-shared --enable-cxx --disable-replication\n+$(package)_config_opts_mingw32=--enable-mingw\n+$(package)_config_opts_linux=--with-pic\n+$(package)_cxxflags=-std=c++11\n+endef\n+\n+define $(package)_preprocess_cmds\n+  sed -i.old 's/__atomic_compare_exchange/__atomic_compare_exchange_db/' dbinc/atomic.h && \\\n+  sed -i.old 's/atomic_init/atomic_init_db/' dbinc/atomic.h mp/mp_region.c mp/mp_mvcc.c mp/mp_fget.c mutex/mut_method.c mutex/mut_tas.c && \\\n+  cp -f $(BASEDIR)/config.guess $(BASEDIR)/config.sub dist\n+endef\n+\n+define $(package)_config_cmds\n+  ../dist/$($(package)_autoconf)\n+endef\n+\n+define $(package)_build_cmds\n+  $(MAKE) libdb_cxx-4.8.a libdb-4.8.a\n+endef\n+\n+define $(package)_stage_cmds\n+  $(MAKE) DESTDIR=$($(package)_staging_dir) install_lib install_include\n+endef"
      },
      {
        "sha": "ef1307c241b6619f53fc38a68a0d0a93d19fa3f2",
        "filename": "depends/packages/boost.mk",
        "status": "added",
        "additions": 41,
        "deletions": 0,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/packages/boost.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/packages/boost.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/boost.mk?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,41 @@\n+package=boost\n+$(package)_version=1_59_0\n+$(package)_download_path=http://sourceforge.net/projects/boost/files/boost/1.59.0\n+$(package)_file_name=$(package)_$($(package)_version).tar.bz2\n+$(package)_sha256_hash=727a932322d94287b62abb1bd2d41723eec4356a7728909e38adb65ca25241ca\n+\n+define $(package)_set_vars\n+$(package)_config_opts_release=variant=release\n+$(package)_config_opts_debug=variant=debug\n+$(package)_config_opts=--layout=tagged --build-type=complete --user-config=user-config.jam\n+$(package)_config_opts+=threading=multi link=static -sNO_BZIP2=1 -sNO_ZLIB=1\n+$(package)_config_opts_linux=threadapi=pthread runtime-link=shared\n+$(package)_config_opts_darwin=--toolset=darwin-4.2.1 runtime-link=shared\n+$(package)_config_opts_mingw32=binary-format=pe target-os=windows threadapi=win32 runtime-link=static\n+$(package)_config_opts_x86_64_mingw32=address-model=64\n+$(package)_config_opts_i686_mingw32=address-model=32\n+$(package)_config_opts_i686_linux=address-model=32 architecture=x86\n+$(package)_toolset_$(host_os)=gcc\n+$(package)_archiver_$(host_os)=$($(package)_ar)\n+$(package)_toolset_darwin=darwin\n+$(package)_archiver_darwin=$($(package)_libtool)\n+$(package)_config_libraries=chrono,filesystem,program_options,system,thread,test\n+$(package)_cxxflags=-std=c++11 -fvisibility=hidden\n+$(package)_cxxflags_linux=-fPIC\n+endef\n+\n+define $(package)_preprocess_cmds\n+  echo \"using $(boost_toolset_$(host_os)) : : $($(package)_cxx) : <cxxflags>\\\"$($(package)_cxxflags) $($(package)_cppflags)\\\" <linkflags>\\\"$($(package)_ldflags)\\\" <archiver>\\\"$(boost_archiver_$(host_os))\\\" <striper>\\\"$(host_STRIP)\\\"  <ranlib>\\\"$(host_RANLIB)\\\" <rc>\\\"$(host_WINDRES)\\\" : ;\" > user-config.jam\n+endef\n+\n+define $(package)_config_cmds\n+  ./bootstrap.sh --without-icu --with-libraries=$(boost_config_libraries)\n+endef\n+\n+define $(package)_build_cmds\n+  ./b2 -d2 -j2 -d1 --prefix=$($(package)_staging_prefix_dir) $($(package)_config_opts) stage\n+endef\n+\n+define $(package)_stage_cmds\n+  ./b2 -d0 -j4 --prefix=$($(package)_staging_prefix_dir) $($(package)_config_opts) install\n+endef"
      },
      {
        "sha": "8ac9ab742bfe48ca5b57f7dde876fc817a268c65",
        "filename": "depends/packages/dbus.mk",
        "status": "added",
        "additions": 23,
        "deletions": 0,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/packages/dbus.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/packages/dbus.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/dbus.mk?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,23 @@\n+package=dbus\n+$(package)_version=1.8.6\n+$(package)_download_path=http://dbus.freedesktop.org/releases/dbus\n+$(package)_file_name=$(package)-$($(package)_version).tar.gz\n+$(package)_sha256_hash=eded83ca007b719f32761e60fd8b9ffd0f5796a4caf455b01b5a5ef740ebd23f\n+$(package)_dependencies=expat\n+\n+define $(package)_set_vars\n+  $(package)_config_opts=--disable-tests --disable-doxygen-docs --disable-xml-docs --disable-static --without-x\n+endef\n+\n+define $(package)_config_cmds\n+  $($(package)_autoconf)\n+endef\n+\n+define $(package)_build_cmds\n+  $(MAKE) -C dbus libdbus-1.la\n+endef\n+\n+define $(package)_stage_cmds\n+  $(MAKE) -C dbus DESTDIR=$($(package)_staging_dir) install-libLTLIBRARIES install-dbusincludeHEADERS install-nodist_dbusarchincludeHEADERS && \\\n+  $(MAKE) DESTDIR=$($(package)_staging_dir) install-pkgconfigDATA\n+endef"
      },
      {
        "sha": "bd2927563850b4c3e45bace08a15af56db4750da",
        "filename": "depends/packages/expat.mk",
        "status": "added",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/packages/expat.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/packages/expat.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/expat.mk?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,21 @@\n+package=expat\n+$(package)_version=2.1.1\n+$(package)_download_path=https://downloads.sourceforge.net/project/expat/expat/$($(package)_version)\n+$(package)_file_name=$(package)-$($(package)_version).tar.bz2\n+$(package)_sha256_hash=aff584e5a2f759dcfc6d48671e9529f6afe1e30b0cd6a4cec200cbe3f793de67\n+\n+define $(package)_set_vars\n+$(package)_config_opts=--disable-static\n+endef\n+\n+define $(package)_config_cmds\n+  $($(package)_autoconf)\n+endef\n+\n+define $(package)_build_cmds\n+  $(MAKE)\n+endef\n+\n+define $(package)_stage_cmds\n+  $(MAKE) DESTDIR=$($(package)_staging_dir) install\n+endef"
      },
      {
        "sha": "2cf553ed9657b4e9ec88bfcd7cf437c36200f57a",
        "filename": "depends/packages/fontconfig.mk",
        "status": "added",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/packages/fontconfig.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/packages/fontconfig.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/fontconfig.mk?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,22 @@\n+package=fontconfig\n+$(package)_version=2.11.1\n+$(package)_download_path=http://www.freedesktop.org/software/fontconfig/release/\n+$(package)_file_name=$(package)-$($(package)_version).tar.bz2\n+$(package)_sha256_hash=dc62447533bca844463a3c3fd4083b57c90f18a70506e7a9f4936b5a1e516a99\n+$(package)_dependencies=freetype expat\n+\n+define $(package)_set_vars\n+  $(package)_config_opts=--disable-docs --disable-static\n+endef\n+\n+define $(package)_config_cmds\n+  $($(package)_autoconf)\n+endef\n+\n+define $(package)_build_cmds\n+  $(MAKE)\n+endef\n+\n+define $(package)_stage_cmds\n+  $(MAKE) DESTDIR=$($(package)_staging_dir) install\n+endef"
      },
      {
        "sha": "7cea28ff0bbf926f207745a8710fac3f5fd63041",
        "filename": "depends/packages/freetype.mk",
        "status": "added",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/packages/freetype.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/packages/freetype.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/freetype.mk?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,22 @@\n+package=freetype\n+$(package)_version=2.6.3\n+$(package)_download_path=http://download.savannah.gnu.org/releases/$(package)\n+$(package)_file_name=$(package)-$($(package)_version).tar.bz2\n+$(package)_sha256_hash=371e707aa522acf5b15ce93f11183c725b8ed1ee8546d7b3af549863045863a2\n+\n+define $(package)_set_vars\n+  $(package)_config_opts=--without-zlib --without-png --disable-static\n+  $(package)_config_opts_linux=--with-pic\n+endef\n+\n+define $(package)_config_cmds\n+  $($(package)_autoconf)\n+endef\n+\n+define $(package)_build_cmds\n+  $(MAKE)\n+endef\n+\n+define $(package)_stage_cmds\n+  $(MAKE) DESTDIR=$($(package)_staging_dir) install\n+endef"
      },
      {
        "sha": "fc60323b1c918a8229f8ba4b04d63310b4d98ec5",
        "filename": "depends/packages/libICE.mk",
        "status": "added",
        "additions": 23,
        "deletions": 0,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/packages/libICE.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/packages/libICE.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libICE.mk?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,23 @@\n+package=libICE\n+$(package)_version=1.0.9\n+$(package)_download_path=http://xorg.freedesktop.org/releases/individual/lib/\n+$(package)_file_name=$(package)-$($(package)_version).tar.bz2\n+$(package)_sha256_hash=8f7032f2c1c64352b5423f6b48a8ebdc339cc63064af34d66a6c9aa79759e202\n+$(package)_dependencies=xtrans xproto\n+\n+define $(package)_set_vars\n+  $(package)_config_opts=--disable-static --disable-docs --disable-specs --without-xsltproc\n+  $(package)_config_opts_linux=--with-pic\n+endef\n+\n+define $(package)_config_cmds\n+  $($(package)_autoconf)\n+endef\n+\n+define $(package)_build_cmds\n+  $(MAKE)\n+endef\n+\n+define $(package)_stage_cmds\n+  $(MAKE) DESTDIR=$($(package)_staging_dir) install\n+endef"
      },
      {
        "sha": "0f9307ca76acb8edb8dc892cefc046627f111654",
        "filename": "depends/packages/libSM.mk",
        "status": "added",
        "additions": 23,
        "deletions": 0,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/packages/libSM.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/packages/libSM.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libSM.mk?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,23 @@\n+package=libSM\n+$(package)_version=1.2.2\n+$(package)_download_path=http://xorg.freedesktop.org/releases/individual/lib/\n+$(package)_file_name=$(package)-$($(package)_version).tar.bz2\n+$(package)_sha256_hash=0baca8c9f5d934450a70896c4ad38d06475521255ca63b717a6510fdb6e287bd\n+$(package)_dependencies=xtrans xproto libICE\n+\n+define $(package)_set_vars\n+  $(package)_config_opts=--without-libuuid  --without-xsltproc  --disable-docs --disable-static\n+  $(package)_config_opts_linux=--with-pic\n+endef\n+\n+define $(package)_config_cmds\n+  $($(package)_autoconf)\n+endef\n+\n+define $(package)_build_cmds\n+  $(MAKE)\n+endef\n+\n+define $(package)_stage_cmds\n+  $(MAKE) DESTDIR=$($(package)_staging_dir) install\n+endef"
      },
      {
        "sha": "178d592ee63ff9d0f74de6029b4c7becdc850367",
        "filename": "depends/packages/libX11.mk",
        "status": "added",
        "additions": 23,
        "deletions": 0,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/packages/libX11.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/packages/libX11.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libX11.mk?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,23 @@\n+package=libX11\n+$(package)_version=1.6.2\n+$(package)_download_path=http://xorg.freedesktop.org/releases/individual/lib/\n+$(package)_file_name=$(package)-$($(package)_version).tar.bz2\n+$(package)_sha256_hash=2aa027e837231d2eeea90f3a4afe19948a6eb4c8b2bec0241eba7dbc8106bd16\n+$(package)_dependencies=libxcb xtrans xextproto xproto\n+\n+define $(package)_set_vars\n+$(package)_config_opts=--disable-xkb --disable-static\n+$(package)_config_opts_linux=--with-pic\n+endef\n+\n+define $(package)_config_cmds\n+  $($(package)_autoconf)\n+endef\n+\n+define $(package)_build_cmds\n+  $(MAKE)\n+endef\n+\n+define $(package)_stage_cmds\n+  $(MAKE) DESTDIR=$($(package)_staging_dir) install\n+endef"
      },
      {
        "sha": "e87df2e4de6760ace30d169b24c83ee0b7cfc7dd",
        "filename": "depends/packages/libXau.mk",
        "status": "added",
        "additions": 23,
        "deletions": 0,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/packages/libXau.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/packages/libXau.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libXau.mk?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,23 @@\n+package=libXau\n+$(package)_version=1.0.8\n+$(package)_download_path=http://xorg.freedesktop.org/releases/individual/lib/\n+$(package)_file_name=$(package)-$($(package)_version).tar.bz2\n+$(package)_sha256_hash=fdd477320aeb5cdd67272838722d6b7d544887dfe7de46e1e7cc0c27c2bea4f2\n+$(package)_dependencies=xproto\n+\n+define $(package)_set_vars\n+  $(package)_config_opts=--disable-shared\n+  $(package)_config_opts_linux=--with-pic\n+endef\n+\n+define $(package)_config_cmds\n+  $($(package)_autoconf)\n+endef\n+\n+define $(package)_build_cmds\n+  $(MAKE)\n+endef\n+\n+define $(package)_stage_cmds\n+  $(MAKE) DESTDIR=$($(package)_staging_dir) install\n+endef"
      },
      {
        "sha": "4db836066f96e37cf7834fcf10de4da331b1fbe1",
        "filename": "depends/packages/libXext.mk",
        "status": "added",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/packages/libXext.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/packages/libXext.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libXext.mk?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,22 @@\n+package=libXext\n+$(package)_version=1.3.2\n+$(package)_download_path=http://xorg.freedesktop.org/releases/individual/lib/\n+$(package)_file_name=$(package)-$($(package)_version).tar.bz2\n+$(package)_sha256_hash=f829075bc646cdc085fa25d98d5885d83b1759ceb355933127c257e8e50432e0\n+$(package)_dependencies=xproto xextproto libX11 libXau\n+\n+define $(package)_set_vars\n+  $(package)_config_opts=--disable-static\n+endef\n+\n+define $(package)_config_cmds\n+  $($(package)_autoconf)\n+endef\n+\n+define $(package)_build_cmds\n+  $(MAKE)\n+endef\n+\n+define $(package)_stage_cmds\n+  $(MAKE) DESTDIR=$($(package)_staging_dir) install\n+endef"
      },
      {
        "sha": "2e9be1e98ccedda520459b8d4deed2f686473746",
        "filename": "depends/packages/libevent.mk",
        "status": "added",
        "additions": 31,
        "deletions": 0,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/packages/libevent.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/packages/libevent.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libevent.mk?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,31 @@\n+package=libevent\n+$(package)_version=2.0.22\n+$(package)_download_path=https://github.com/libevent/libevent/releases/download/release-2.0.22-stable\n+$(package)_file_name=$(package)-$($(package)_version)-stable.tar.gz\n+$(package)_sha256_hash=71c2c49f0adadacfdbe6332a372c38cf9c8b7895bb73dabeaa53cdcc1d4e1fa3\n+$(package)_patches=reuseaddr.patch\n+\n+define $(package)_preprocess_cmds\n+  patch -p1 < $($(package)_patch_dir)/reuseaddr.patch\n+endef\n+\n+define $(package)_set_vars\n+  $(package)_config_opts=--disable-shared --disable-openssl --disable-libevent-regress\n+  $(package)_config_opts_release=--disable-debug-mode\n+  $(package)_config_opts_linux=--with-pic\n+endef\n+\n+define $(package)_config_cmds\n+  $($(package)_autoconf)\n+endef\n+\n+define $(package)_build_cmds\n+  $(MAKE)\n+endef\n+\n+define $(package)_stage_cmds\n+  $(MAKE) DESTDIR=$($(package)_staging_dir) install\n+endef\n+\n+define $(package)_postprocess_cmds\n+endef"
      },
      {
        "sha": "28f2bd6f25343de809c9b2c568bd88b778bb26ec",
        "filename": "depends/packages/libxcb.mk",
        "status": "added",
        "additions": 35,
        "deletions": 0,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/packages/libxcb.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/packages/libxcb.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libxcb.mk?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,35 @@\n+package=libxcb\n+$(package)_version=1.10\n+$(package)_download_path=http://xcb.freedesktop.org/dist\n+$(package)_file_name=$(package)-$($(package)_version).tar.bz2\n+$(package)_sha256_hash=98d9ab05b636dd088603b64229dd1ab2d2cc02ab807892e107d674f9c3f2d5b5\n+$(package)_dependencies=xcb_proto libXau xproto\n+\n+define $(package)_set_vars\n+$(package)_config_opts=--disable-static\n+endef\n+\n+define $(package)_preprocess_cmds\n+  sed \"s/pthread-stubs//\" -i configure\n+endef\n+\n+# Don't install xcb headers to the default path in order to work around a qt\n+# build issue: https://bugreports.qt.io/browse/QTBUG-34748\n+# When using qt's internal libxcb, it may end up finding the real headers in\n+# depends staging. Use a non-default path to avoid that.\n+\n+define $(package)_config_cmds\n+  $($(package)_autoconf) --includedir=$(host_prefix)/include/xcb-shared\n+endef\n+\n+define $(package)_build_cmds\n+  $(MAKE)\n+endef\n+\n+define $(package)_stage_cmds\n+  $(MAKE) DESTDIR=$($(package)_staging_dir) install\n+endef\n+\n+define $(package)_postprocess_cmds\n+  rm -rf share/man share/doc\n+endef"
      },
      {
        "sha": "e34cf7be2f1bf42606c5d6549c1f8022f1780cbe",
        "filename": "depends/packages/miniupnpc.mk",
        "status": "added",
        "additions": 28,
        "deletions": 0,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/packages/miniupnpc.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/packages/miniupnpc.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/miniupnpc.mk?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,28 @@\n+package=miniupnpc\n+$(package)_version=2.0\n+$(package)_download_path=http://miniupnp.free.fr/files\n+$(package)_file_name=$(package)-$($(package)_version).tar.gz\n+$(package)_sha256_hash=d434ceb8986efbe199c5ca53f90ed53eab290b1e6d0530b717eb6fa49d61f93b\n+\n+define $(package)_set_vars\n+$(package)_build_opts=CC=\"$($(package)_cc)\"\n+$(package)_build_opts_darwin=OS=Darwin LIBTOOL=\"$($(package)_libtool)\"\n+$(package)_build_opts_mingw32=-f Makefile.mingw\n+$(package)_build_env+=CFLAGS=\"$($(package)_cflags) $($(package)_cppflags)\" AR=\"$($(package)_ar)\"\n+endef\n+\n+define $(package)_preprocess_cmds\n+  mkdir dll && \\\n+  sed -e 's|MINIUPNPC_VERSION_STRING \\\"version\\\"|MINIUPNPC_VERSION_STRING \\\"$($(package)_version)\\\"|' -e 's|OS/version|$(host)|' miniupnpcstrings.h.in > miniupnpcstrings.h && \\\n+  sed -i.old \"s|miniupnpcstrings.h: miniupnpcstrings.h.in wingenminiupnpcstrings|miniupnpcstrings.h: miniupnpcstrings.h.in|\" Makefile.mingw\n+endef\n+\n+define $(package)_build_cmds\n+\t$(MAKE) libminiupnpc.a $($(package)_build_opts)\n+endef\n+\n+define $(package)_stage_cmds\n+\tmkdir -p $($(package)_staging_prefix_dir)/include/miniupnpc $($(package)_staging_prefix_dir)/lib &&\\\n+\tinstall *.h $($(package)_staging_prefix_dir)/include/miniupnpc &&\\\n+\tinstall libminiupnpc.a $($(package)_staging_prefix_dir)/lib\n+endef"
      },
      {
        "sha": "eb8672d556a9cd03b57cb3b6e11d706183345c80",
        "filename": "depends/packages/native_biplist.mk",
        "status": "added",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/packages/native_biplist.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/packages/native_biplist.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_biplist.mk?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,15 @@\n+package=native_biplist\n+$(package)_version=0.9\n+$(package)_download_path=https://pypi.python.org/packages/source/b/biplist\n+$(package)_file_name=biplist-$($(package)_version).tar.gz\n+$(package)_sha256_hash=b57cadfd26e4754efdf89e9e37de87885f9b5c847b2615688ca04adfaf6ca604\n+$(package)_install_libdir=$(build_prefix)/lib/python/dist-packages\n+\n+define $(package)_build_cmds\n+    python setup.py build\n+endef\n+\n+define $(package)_stage_cmds\n+    mkdir -p $($(package)_install_libdir) && \\\n+    python setup.py install --root=$($(package)_staging_dir) --prefix=$(build_prefix) --install-lib=$($(package)_install_libdir)\n+endef"
      },
      {
        "sha": "9216e175983a9b8555778d731aa0110ff64ac364",
        "filename": "depends/packages/native_ccache.mk",
        "status": "added",
        "additions": 25,
        "deletions": 0,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/packages/native_ccache.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/packages/native_ccache.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_ccache.mk?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,25 @@\n+package=native_ccache\n+$(package)_version=3.2.5\n+$(package)_download_path=http://samba.org/ftp/ccache\n+$(package)_file_name=ccache-$($(package)_version).tar.bz2\n+$(package)_sha256_hash=7a553809e90faf9de3a23ee9c5b5f786cfd4836bf502744bedb824a24bee1097\n+\n+define $(package)_set_vars\n+$(package)_config_opts=\n+endef\n+\n+define $(package)_config_cmds\n+  $($(package)_autoconf)\n+endef\n+\n+define $(package)_build_cmds\n+  $(MAKE)\n+endef\n+\n+define $(package)_stage_cmds\n+  $(MAKE) DESTDIR=$($(package)_staging_dir) install\n+endef\n+\n+define $(package)_postprocess_cmds\n+  rm -rf lib include\n+endef"
      },
      {
        "sha": "797480c25eb2f3ff4fd559cb92b4e7a3aae75300",
        "filename": "depends/packages/native_cctools.mk",
        "status": "added",
        "additions": 64,
        "deletions": 0,
        "changes": 64,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/packages/native_cctools.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/packages/native_cctools.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_cctools.mk?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,64 @@\n+package=native_cctools\n+$(package)_version=807d6fd1be5d2224872e381870c0a75387fe05e6\n+$(package)_download_path=https://github.com/theuni/cctools-port/archive\n+$(package)_file_name=$($(package)_version).tar.gz\n+$(package)_sha256_hash=a09c9ba4684670a0375e42d9d67e7f12c1f62581a27f28f7c825d6d7032ccc6a\n+$(package)_build_subdir=cctools\n+$(package)_clang_version=3.7.1\n+$(package)_clang_download_path=http://llvm.org/releases/$($(package)_clang_version)\n+$(package)_clang_download_file=clang+llvm-$($(package)_clang_version)-x86_64-linux-gnu-ubuntu-14.04.tar.xz\n+$(package)_clang_file_name=clang-llvm-$($(package)_clang_version)-x86_64-linux-gnu-ubuntu-14.04.tar.xz\n+$(package)_clang_sha256_hash=99b28a6b48e793705228a390471991386daa33a9717cd9ca007fcdde69608fd9\n+$(package)_extra_sources=$($(package)_clang_file_name)\n+\n+define $(package)_fetch_cmds\n+$(call fetch_file,$(package),$($(package)_download_path),$($(package)_download_file),$($(package)_file_name),$($(package)_sha256_hash)) && \\\n+$(call fetch_file,$(package),$($(package)_clang_download_path),$($(package)_clang_download_file),$($(package)_clang_file_name),$($(package)_clang_sha256_hash))\n+endef\n+\n+define $(package)_extract_cmds\n+  mkdir -p $($(package)_extract_dir) && \\\n+  echo \"$($(package)_sha256_hash)  $($(package)_source)\" > $($(package)_extract_dir)/.$($(package)_file_name).hash && \\\n+  echo \"$($(package)_clang_sha256_hash)  $($(package)_source_dir)/$($(package)_clang_file_name)\" >> $($(package)_extract_dir)/.$($(package)_file_name).hash && \\\n+  $(build_SHA256SUM) -c $($(package)_extract_dir)/.$($(package)_file_name).hash && \\\n+  mkdir -p toolchain/bin toolchain/lib/clang/3.5/include && \\\n+  tar --strip-components=1 -C toolchain -xf $($(package)_source_dir)/$($(package)_clang_file_name) && \\\n+  rm -f toolchain/lib/libc++abi.so* && \\\n+  echo \"#!/bin/sh\" > toolchain/bin/$(host)-dsymutil && \\\n+  echo \"exit 0\" >> toolchain/bin/$(host)-dsymutil && \\\n+  chmod +x toolchain/bin/$(host)-dsymutil && \\\n+  tar --strip-components=1 -xf $($(package)_source)\n+endef\n+\n+define $(package)_set_vars\n+$(package)_config_opts=--target=$(host) --disable-lto-support\n+$(package)_ldflags+=-Wl,-rpath=\\\\$$$$$$$$\\$$$$$$$$ORIGIN/../lib\n+$(package)_cc=$($(package)_extract_dir)/toolchain/bin/clang\n+$(package)_cxx=$($(package)_extract_dir)/toolchain/bin/clang++\n+endef\n+\n+define $(package)_preprocess_cmds\n+  cd $($(package)_build_subdir); ./autogen.sh\n+endef\n+\n+define $(package)_config_cmds\n+  $($(package)_autoconf)\n+endef\n+\n+define $(package)_build_cmds\n+  $(MAKE)\n+endef\n+\n+define $(package)_stage_cmds\n+  $(MAKE) DESTDIR=$($(package)_staging_dir) install && \\\n+  cd $($(package)_extract_dir)/toolchain && \\\n+  mkdir -p $($(package)_staging_prefix_dir)/lib/clang/$($(package)_clang_version)/include && \\\n+  mkdir -p $($(package)_staging_prefix_dir)/bin $($(package)_staging_prefix_dir)/include && \\\n+  cp bin/clang $($(package)_staging_prefix_dir)/bin/ &&\\\n+  cp -P bin/clang++ $($(package)_staging_prefix_dir)/bin/ &&\\\n+  cp lib/libLTO.so $($(package)_staging_prefix_dir)/lib/ && \\\n+  cp -rf lib/clang/$($(package)_clang_version)/include/* $($(package)_staging_prefix_dir)/lib/clang/$($(package)_clang_version)/include/ && \\\n+  cp bin/llvm-dsymutil $($(package)_staging_prefix_dir)/bin/$(host)-dsymutil && \\\n+  if `test -d include/c++/`; then cp -rf include/c++/ $($(package)_staging_prefix_dir)/include/; fi && \\\n+  if `test -d lib/c++/`; then cp -rf lib/c++/ $($(package)_staging_prefix_dir)/lib/; fi\n+endef"
      },
      {
        "sha": "cf694edb30e92ecf7a54a4ccdfba172a3eed44b6",
        "filename": "depends/packages/native_cdrkit.mk",
        "status": "added",
        "additions": 26,
        "deletions": 0,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/packages/native_cdrkit.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/packages/native_cdrkit.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_cdrkit.mk?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,26 @@\n+package=native_cdrkit\n+$(package)_version=1.1.11\n+$(package)_download_path=http://distro.ibiblio.org/fatdog/source/600/c\n+$(package)_file_name=cdrkit-$($(package)_version).tar.bz2\n+$(package)_sha256_hash=b50d64c214a65b1a79afe3a964c691931a4233e2ba605d793eb85d0ac3652564\n+$(package)_patches=cdrkit-deterministic.patch\n+\n+define $(package)_preprocess_cmds\n+  patch -p1 < $($(package)_patch_dir)/cdrkit-deterministic.patch\n+endef\n+\n+define $(package)_config_cmds\n+  cmake -DCMAKE_INSTALL_PREFIX=$(build_prefix)\n+endef\n+\n+define $(package)_build_cmds\n+  $(MAKE) genisoimage\n+endef\n+\n+define $(package)_stage_cmds\n+  $(MAKE) DESTDIR=$($(package)_staging_dir) -C genisoimage install\n+endef\n+\n+define $(package)_postprocess_cmds\n+  rm bin/isovfy bin/isoinfo bin/isodump bin/isodebug bin/devdump\n+endef"
      },
      {
        "sha": "e0ae0cec700e921cdfc6c4bdc9760467655dcb4d",
        "filename": "depends/packages/native_comparisontool.mk",
        "status": "added",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/packages/native_comparisontool.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/packages/native_comparisontool.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_comparisontool.mk?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,21 @@\n+package=native_comparisontool\n+$(package)_version=8c6666f\n+$(package)_download_path=https://github.com/theuni/bitcoind-comparisontool/raw/master\n+$(package)_file_name=pull-tests-$($(package)_version).jar\n+$(package)_sha256_hash=a865332b3827abcde684ab79f5f43c083b0b6a4c97ff5508c79f29fee24f11cd\n+$(package)_install_dirname=BitcoindComparisonTool_jar\n+$(package)_install_filename=BitcoindComparisonTool.jar\n+\n+define $(package)_extract_cmds\n+endef\n+\n+define $(package)_configure_cmds\n+endef\n+\n+define $(package)_build_cmds\n+endef\n+\n+define $(package)_stage_cmds\n+  mkdir -p $($(package)_staging_prefix_dir)/share/$($(package)_install_dirname) && \\\n+  cp $($(package)_source) $($(package)_staging_prefix_dir)/share/$($(package)_install_dirname)/$($(package)_install_filename)\n+endef"
      },
      {
        "sha": "8e902af1b6e9af0f5c4cb91cf075365c0815f828",
        "filename": "depends/packages/native_ds_store.mk",
        "status": "added",
        "additions": 17,
        "deletions": 0,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/packages/native_ds_store.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/packages/native_ds_store.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_ds_store.mk?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,17 @@\n+package=native_ds_store\n+$(package)_version=c80c23706eae\n+$(package)_download_path=https://bitbucket.org/al45tair/ds_store/get\n+$(package)_download_file=$($(package)_version).tar.bz2\n+$(package)_file_name=$(package)-$($(package)_version).tar.bz2\n+$(package)_sha256_hash=ce1aa412211610c63d567bbe3e06213006a2d5ba5d76d89399c151b5472cb0da\n+$(package)_install_libdir=$(build_prefix)/lib/python/dist-packages\n+$(package)_dependencies=native_biplist\n+\n+define $(package)_build_cmds\n+    python setup.py build\n+endef\n+\n+define $(package)_stage_cmds\n+    mkdir -p $($(package)_install_libdir) && \\\n+    python setup.py install --root=$($(package)_staging_dir) --prefix=$(build_prefix) --install-lib=$($(package)_install_libdir)\n+endef"
      },
      {
        "sha": "a4ffb6046ccc4b50d7bded21207337a718ba70df",
        "filename": "depends/packages/native_libdmg-hfsplus.mk",
        "status": "added",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/packages/native_libdmg-hfsplus.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/packages/native_libdmg-hfsplus.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_libdmg-hfsplus.mk?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,22 @@\n+package=native_libdmg-hfsplus\n+$(package)_version=0.1\n+$(package)_download_path=https://github.com/theuni/libdmg-hfsplus/archive\n+$(package)_file_name=libdmg-hfsplus-v$($(package)_version).tar.gz\n+$(package)_sha256_hash=6569a02eb31c2827080d7d59001869ea14484c281efab0ae7f2b86af5c3120b3\n+$(package)_build_subdir=build\n+\n+define $(package)_preprocess_cmds\n+  mkdir build\n+endef\n+\n+define $(package)_config_cmds\n+  cmake -DCMAKE_INSTALL_PREFIX:PATH=$(build_prefix)/bin ..\n+endef\n+\n+define $(package)_build_cmds\n+  $(MAKE) -C dmg\n+endef\n+\n+define $(package)_stage_cmds\n+  $(MAKE) DESTDIR=$($(package)_staging_dir) -C dmg install\n+endef"
      },
      {
        "sha": "85a8a402bf92cefb0b406a6d8ddefa87984157cc",
        "filename": "depends/packages/native_mac_alias.mk",
        "status": "added",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/packages/native_mac_alias.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/packages/native_mac_alias.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_mac_alias.mk?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,21 @@\n+package=native_mac_alias\n+$(package)_version=1.1.0\n+$(package)_download_path=https://bitbucket.org/al45tair/mac_alias/get\n+$(package)_download_file=v$($(package)_version).tar.bz2\n+$(package)_file_name=$(package)-$($(package)_version).tar.bz2\n+$(package)_sha256_hash=87ad827e66790028361e43fc754f68ed041a9bdb214cca03c853f079b04fb120\n+$(package)_install_libdir=$(build_prefix)/lib/python/dist-packages\n+$(package)_patches=python3.patch\n+\n+define $(package)_preprocess_cmds\n+  patch -p1 < $($(package)_patch_dir)/python3.patch\n+endef\n+\n+define $(package)_build_cmds\n+    python setup.py build\n+endef\n+\n+define $(package)_stage_cmds\n+    mkdir -p $($(package)_install_libdir) && \\\n+    python setup.py install --root=$($(package)_staging_dir) --prefix=$(build_prefix) --install-lib=$($(package)_install_libdir)\n+endef"
      },
      {
        "sha": "ce50b366fa74f3fbed838624f9d7ec58396ace02",
        "filename": "depends/packages/native_protobuf.mk",
        "status": "added",
        "additions": 25,
        "deletions": 0,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/packages/native_protobuf.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/packages/native_protobuf.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_protobuf.mk?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,25 @@\n+package=native_protobuf\n+$(package)_version=2.6.1\n+$(package)_download_path=https://github.com/google/protobuf/releases/download/v$($(package)_version)\n+$(package)_file_name=protobuf-$($(package)_version).tar.bz2\n+$(package)_sha256_hash=ee445612d544d885ae240ffbcbf9267faa9f593b7b101f21d58beceb92661910\n+\n+define $(package)_set_vars\n+$(package)_config_opts=--disable-shared\n+endef\n+\n+define $(package)_config_cmds\n+  $($(package)_autoconf)\n+endef\n+\n+define $(package)_build_cmds\n+  $(MAKE) -C src protoc\n+endef\n+\n+define $(package)_stage_cmds\n+  $(MAKE) -C src DESTDIR=$($(package)_staging_dir) install-strip\n+endef\n+\n+define $(package)_postprocess_cmds\n+  rm -rf lib include\n+endef"
      },
      {
        "sha": "5ee9f17a63235a9d68f74389566f1f257c182d3c",
        "filename": "depends/packages/openssl.mk",
        "status": "added",
        "additions": 78,
        "deletions": 0,
        "changes": 78,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/packages/openssl.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/packages/openssl.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/openssl.mk?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,78 @@\n+package=openssl\n+$(package)_version=1.0.1k\n+$(package)_download_path=https://www.openssl.org/source\n+$(package)_file_name=$(package)-$($(package)_version).tar.gz\n+$(package)_sha256_hash=8f9faeaebad088e772f4ef5e38252d472be4d878c6b3a2718c10a4fcebe7a41c\n+\n+define $(package)_set_vars\n+$(package)_config_env=AR=\"$($(package)_ar)\" RANLIB=\"$($(package)_ranlib)\" CC=\"$($(package)_cc)\"\n+$(package)_config_opts=--prefix=$(host_prefix) --openssldir=$(host_prefix)/etc/openssl\n+$(package)_config_opts+=no-camellia\n+$(package)_config_opts+=no-capieng\n+$(package)_config_opts+=no-cast\n+$(package)_config_opts+=no-comp\n+$(package)_config_opts+=no-dso\n+$(package)_config_opts+=no-dtls1\n+$(package)_config_opts+=no-ec_nistp_64_gcc_128\n+$(package)_config_opts+=no-gost\n+$(package)_config_opts+=no-gmp\n+$(package)_config_opts+=no-heartbeats\n+$(package)_config_opts+=no-idea\n+$(package)_config_opts+=no-jpake\n+$(package)_config_opts+=no-krb5\n+$(package)_config_opts+=no-libunbound\n+$(package)_config_opts+=no-md2\n+$(package)_config_opts+=no-mdc2\n+$(package)_config_opts+=no-rc4\n+$(package)_config_opts+=no-rc5\n+$(package)_config_opts+=no-rdrand\n+$(package)_config_opts+=no-rfc3779\n+$(package)_config_opts+=no-rsax\n+$(package)_config_opts+=no-sctp\n+$(package)_config_opts+=no-seed\n+$(package)_config_opts+=no-sha0\n+$(package)_config_opts+=no-shared\n+$(package)_config_opts+=no-ssl-trace\n+$(package)_config_opts+=no-ssl2\n+$(package)_config_opts+=no-ssl3\n+$(package)_config_opts+=no-static_engine\n+$(package)_config_opts+=no-store\n+$(package)_config_opts+=no-unit-test\n+$(package)_config_opts+=no-weak-ssl-ciphers\n+$(package)_config_opts+=no-whirlpool\n+$(package)_config_opts+=no-zlib\n+$(package)_config_opts+=no-zlib-dynamic\n+$(package)_config_opts+=$($(package)_cflags) $($(package)_cppflags)\n+$(package)_config_opts_linux=-fPIC -Wa,--noexecstack\n+$(package)_config_opts_x86_64_linux=linux-x86_64\n+$(package)_config_opts_i686_linux=linux-generic32\n+$(package)_config_opts_arm_linux=linux-generic32\n+$(package)_config_opts_aarch64_linux=linux-generic64\n+$(package)_config_opts_mipsel_linux=linux-generic32\n+$(package)_config_opts_mips_linux=linux-generic32\n+$(package)_config_opts_powerpc_linux=linux-generic32\n+$(package)_config_opts_x86_64_darwin=darwin64-x86_64-cc\n+$(package)_config_opts_x86_64_mingw32=mingw64\n+$(package)_config_opts_i686_mingw32=mingw\n+endef\n+\n+define $(package)_preprocess_cmds\n+  sed -i.old \"/define DATE/d\" util/mkbuildinf.pl && \\\n+  sed -i.old \"s|engines apps test|engines|\" Makefile.org\n+endef\n+\n+define $(package)_config_cmds\n+  ./Configure $($(package)_config_opts)\n+endef\n+\n+define $(package)_build_cmds\n+  $(MAKE) -j1 build_libs libcrypto.pc libssl.pc openssl.pc\n+endef\n+\n+define $(package)_stage_cmds\n+  $(MAKE) INSTALL_PREFIX=$($(package)_staging_dir) -j1 install_sw\n+endef\n+\n+define $(package)_postprocess_cmds\n+  rm -rf share bin etc\n+endef"
      },
      {
        "sha": "ac43ef4a2e304ec166b8b2bc8a8d6c7f492c8a86",
        "filename": "depends/packages/packages.mk",
        "status": "added",
        "additions": 24,
        "deletions": 0,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/packages/packages.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/packages/packages.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/packages.mk?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,24 @@\n+packages:=boost openssl libevent\n+darwin_packages:=zeromq\n+linux_packages:=zeromq\n+native_packages := native_ccache native_comparisontool\n+\n+qt_native_packages = native_protobuf\n+qt_packages = qrencode protobuf\n+\n+qt_x86_64_linux_packages:=qt expat dbus libxcb xcb_proto libXau xproto freetype fontconfig libX11 xextproto libXext xtrans\n+qt_i686_linux_packages:=$(qt_x86_64_linux_packages)\n+\n+qt_darwin_packages=qt\n+qt_mingw32_packages=qt\n+\n+\n+wallet_packages=bdb\n+\n+upnp_packages=miniupnpc\n+\n+darwin_native_packages = native_biplist native_ds_store native_mac_alias\n+\n+ifneq ($(build_os),darwin)\n+darwin_native_packages += native_cctools native_cdrkit native_libdmg-hfsplus\n+endif"
      },
      {
        "sha": "54d3fd924519be2ed612830e24c3baf25629c7fa",
        "filename": "depends/packages/protobuf.mk",
        "status": "added",
        "additions": 29,
        "deletions": 0,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/packages/protobuf.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/packages/protobuf.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/protobuf.mk?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,29 @@\n+package=protobuf\n+$(package)_version=$(native_$(package)_version)\n+$(package)_download_path=$(native_$(package)_download_path)\n+$(package)_file_name=$(native_$(package)_file_name)\n+$(package)_sha256_hash=$(native_$(package)_sha256_hash)\n+$(package)_dependencies=native_$(package)\n+$(package)_cxxflags=-std=c++11\n+\n+define $(package)_set_vars\n+  $(package)_config_opts=--disable-shared --with-protoc=$(build_prefix)/bin/protoc\n+  $(package)_config_opts_linux=--with-pic\n+endef\n+\n+define $(package)_config_cmds\n+  $($(package)_autoconf)\n+endef\n+\n+define $(package)_build_cmds\n+  $(MAKE) -C src libprotobuf.la\n+endef\n+\n+define $(package)_stage_cmds\n+  $(MAKE) DESTDIR=$($(package)_staging_dir) -C src install-libLTLIBRARIES install-nobase_includeHEADERS &&\\\n+  $(MAKE) DESTDIR=$($(package)_staging_dir) install-pkgconfigDATA\n+endef\n+\n+define $(package)_postprocess_cmds\n+  rm lib/libprotoc.a\n+endef"
      },
      {
        "sha": "7b21247133f42754d8c67ad940e2ce77357acb98",
        "filename": "depends/packages/qrencode.mk",
        "status": "added",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/packages/qrencode.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/packages/qrencode.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/qrencode.mk?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,22 @@\n+package=qrencode\n+$(package)_version=3.4.4\n+$(package)_download_path=https://fukuchi.org/works/qrencode/\n+$(package)_file_name=qrencode-$(qrencode_version).tar.bz2\n+$(package)_sha256_hash=efe5188b1ddbcbf98763b819b146be6a90481aac30cfc8d858ab78a19cde1fa5\n+\n+define $(package)_set_vars\n+$(package)_config_opts=--disable-shared -without-tools --disable-sdltest\n+$(package)_config_opts_linux=--with-pic\n+endef\n+\n+define $(package)_config_cmds\n+  $($(package)_autoconf)\n+endef\n+\n+define $(package)_build_cmds\n+  $(MAKE)\n+endef\n+\n+define $(package)_stage_cmds\n+  $(MAKE) DESTDIR=$($(package)_staging_dir) install\n+endef"
      },
      {
        "sha": "d41d0b9ea5b15cce2685bd96d4d028d2ff423d5e",
        "filename": "depends/packages/qt.mk",
        "status": "added",
        "additions": 178,
        "deletions": 0,
        "changes": 178,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/packages/qt.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/packages/qt.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/qt.mk?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,178 @@\n+PACKAGE=qt\n+$(package)_version=5.6.1\n+$(package)_download_path=http://download.qt.io/official_releases/qt/5.6/$($(package)_version)/submodules\n+$(package)_suffix=opensource-src-$($(package)_version).tar.gz\n+$(package)_file_name=qtbase-$($(package)_suffix)\n+$(package)_sha256_hash=0ac67cf8d66d52b995f96c31c4b48117a1afb3db99eaa93e20ccd8f7f55f7fde\n+$(package)_dependencies=openssl\n+$(package)_linux_dependencies=freetype fontconfig libxcb libX11 xproto libXext\n+$(package)_build_subdir=qtbase\n+$(package)_qt_libs=corelib network widgets gui plugins testlib\n+$(package)_patches=mac-qmake.conf mingw-uuidof.patch pidlist_absolute.patch fix-xcb-include-order.patch fix_qt_pkgconfig.patch\n+\n+$(package)_qttranslations_file_name=qttranslations-$($(package)_suffix)\n+$(package)_qttranslations_sha256_hash=dcc1534d247babca1840cb6d0a000671801a341ea352d0535474f86adadaf028\n+\n+\n+$(package)_qttools_file_name=qttools-$($(package)_suffix)\n+$(package)_qttools_sha256_hash=e0f845de28c31230dfa428f0190ccb3b91d1fc02481b1f064698ae4ef8376aa1\n+\n+$(package)_extra_sources  = $($(package)_qttranslations_file_name)\n+$(package)_extra_sources += $($(package)_qttools_file_name)\n+\n+define $(package)_set_vars\n+$(package)_config_opts_release = -release\n+$(package)_config_opts_debug   = -debug\n+$(package)_config_opts += -bindir $(build_prefix)/bin\n+$(package)_config_opts += -c++11\n+$(package)_config_opts += -confirm-license\n+$(package)_config_opts += -dbus-runtime\n+$(package)_config_opts += -hostprefix $(build_prefix)\n+$(package)_config_opts += -no-alsa\n+$(package)_config_opts += -no-audio-backend\n+$(package)_config_opts += -no-cups\n+$(package)_config_opts += -no-egl\n+$(package)_config_opts += -no-eglfs\n+$(package)_config_opts += -no-feature-style-windowsmobile\n+$(package)_config_opts += -no-feature-style-windowsce\n+$(package)_config_opts += -no-freetype\n+$(package)_config_opts += -no-gif\n+$(package)_config_opts += -no-glib\n+$(package)_config_opts += -no-gstreamer\n+$(package)_config_opts += -no-icu\n+$(package)_config_opts += -no-iconv\n+$(package)_config_opts += -no-kms\n+$(package)_config_opts += -no-linuxfb\n+$(package)_config_opts += -no-libudev\n+$(package)_config_opts += -no-mitshm\n+$(package)_config_opts += -no-mtdev\n+$(package)_config_opts += -no-nis\n+$(package)_config_opts += -no-pulseaudio\n+$(package)_config_opts += -no-openvg\n+$(package)_config_opts += -no-reduce-relocations\n+$(package)_config_opts += -no-qml-debug\n+$(package)_config_opts += -no-sql-db2\n+$(package)_config_opts += -no-sql-ibase\n+$(package)_config_opts += -no-sql-oci\n+$(package)_config_opts += -no-sql-tds\n+$(package)_config_opts += -no-sql-mysql\n+$(package)_config_opts += -no-sql-odbc\n+$(package)_config_opts += -no-sql-psql\n+$(package)_config_opts += -no-sql-sqlite\n+$(package)_config_opts += -no-sql-sqlite2\n+$(package)_config_opts += -no-use-gold-linker\n+$(package)_config_opts += -no-xinput2\n+$(package)_config_opts += -no-xrender\n+$(package)_config_opts += -nomake examples\n+$(package)_config_opts += -nomake tests\n+$(package)_config_opts += -opensource\n+$(package)_config_opts += -openssl-linked\n+$(package)_config_opts += -optimized-qmake\n+$(package)_config_opts += -pch\n+$(package)_config_opts += -pkg-config\n+$(package)_config_opts += -prefix $(host_prefix)\n+$(package)_config_opts += -qt-libpng\n+$(package)_config_opts += -qt-libjpeg\n+$(package)_config_opts += -qt-pcre\n+$(package)_config_opts += -qt-zlib\n+$(package)_config_opts += -reduce-exports\n+$(package)_config_opts += -static\n+$(package)_config_opts += -silent\n+$(package)_config_opts += -v\n+\n+ifneq ($(build_os),darwin)\n+$(package)_config_opts_darwin = -xplatform macx-clang-linux\n+$(package)_config_opts_darwin += -device-option MAC_SDK_PATH=$(OSX_SDK)\n+$(package)_config_opts_darwin += -device-option MAC_SDK_VERSION=$(OSX_SDK_VERSION)\n+$(package)_config_opts_darwin += -device-option CROSS_COMPILE=\"$(host)-\"\n+$(package)_config_opts_darwin += -device-option MAC_MIN_VERSION=$(OSX_MIN_VERSION)\n+$(package)_config_opts_darwin += -device-option MAC_TARGET=$(host)\n+$(package)_config_opts_darwin += -device-option MAC_LD64_VERSION=$(LD64_VERSION)\n+endif\n+\n+$(package)_config_opts_linux  = -qt-xkbcommon\n+$(package)_config_opts_linux += -qt-xcb\n+$(package)_config_opts_linux += -system-freetype\n+$(package)_config_opts_linux += -no-sm\n+$(package)_config_opts_linux += -fontconfig\n+$(package)_config_opts_linux += -no-opengl\n+$(package)_config_opts_arm_linux  = -platform linux-g++ -xplatform $(host)\n+$(package)_config_opts_i686_linux  = -xplatform linux-g++-32\n+$(package)_config_opts_mingw32  = -no-opengl -xplatform win32-g++ -device-option CROSS_COMPILE=\"$(host)-\"\n+$(package)_build_env  = QT_RCC_TEST=1\n+endef\n+\n+define $(package)_fetch_cmds\n+$(call fetch_file,$(package),$($(package)_download_path),$($(package)_download_file),$($(package)_file_name),$($(package)_sha256_hash)) && \\\n+$(call fetch_file,$(package),$($(package)_download_path),$($(package)_qttranslations_file_name),$($(package)_qttranslations_file_name),$($(package)_qttranslations_sha256_hash)) && \\\n+$(call fetch_file,$(package),$($(package)_download_path),$($(package)_qttools_file_name),$($(package)_qttools_file_name),$($(package)_qttools_sha256_hash))\n+endef\n+\n+define $(package)_extract_cmds\n+  mkdir -p $($(package)_extract_dir) && \\\n+  echo \"$($(package)_sha256_hash)  $($(package)_source)\" > $($(package)_extract_dir)/.$($(package)_file_name).hash && \\\n+  echo \"$($(package)_qttranslations_sha256_hash)  $($(package)_source_dir)/$($(package)_qttranslations_file_name)\" >> $($(package)_extract_dir)/.$($(package)_file_name).hash && \\\n+  echo \"$($(package)_qttools_sha256_hash)  $($(package)_source_dir)/$($(package)_qttools_file_name)\" >> $($(package)_extract_dir)/.$($(package)_file_name).hash && \\\n+  $(build_SHA256SUM) -c $($(package)_extract_dir)/.$($(package)_file_name).hash && \\\n+  mkdir qtbase && \\\n+  tar --strip-components=1 -xf $($(package)_source) -C qtbase && \\\n+  mkdir qttranslations && \\\n+  tar --strip-components=1 -xf $($(package)_source_dir)/$($(package)_qttranslations_file_name) -C qttranslations && \\\n+  mkdir qttools && \\\n+  tar --strip-components=1 -xf $($(package)_source_dir)/$($(package)_qttools_file_name) -C qttools\n+endef\n+\n+\n+define $(package)_preprocess_cmds\n+  sed -i.old \"s|updateqm.commands = \\$$$$\\$$$$LRELEASE|updateqm.commands = $($(package)_extract_dir)/qttools/bin/lrelease|\" qttranslations/translations/translations.pro && \\\n+  sed -i.old \"s/src_plugins.depends = src_sql src_xml src_network/src_plugins.depends = src_xml src_network/\" qtbase/src/src.pro && \\\n+  sed -i.old \"s|X11/extensions/XIproto.h|X11/X.h|\" qtbase/src/plugins/platforms/xcb/qxcbxsettings.cpp && \\\n+  sed -i.old 's/if \\[ \"$$$$XPLATFORM_MAC\" = \"yes\" \\]; then xspecvals=$$$$(macSDKify/if \\[ \"$$$$BUILD_ON_MAC\" = \"yes\" \\]; then xspecvals=$$$$(macSDKify/' qtbase/configure && \\\n+  sed -i.old 's/CGEventCreateMouseEvent(0, kCGEventMouseMoved, pos, 0)/CGEventCreateMouseEvent(0, kCGEventMouseMoved, pos, kCGMouseButtonLeft)/' qtbase/src/plugins/platforms/cocoa/qcocoacursor.mm && \\\n+  mkdir -p qtbase/mkspecs/macx-clang-linux &&\\\n+  cp -f qtbase/mkspecs/macx-clang/Info.plist.lib qtbase/mkspecs/macx-clang-linux/ &&\\\n+  cp -f qtbase/mkspecs/macx-clang/Info.plist.app qtbase/mkspecs/macx-clang-linux/ &&\\\n+  cp -f qtbase/mkspecs/macx-clang/qplatformdefs.h qtbase/mkspecs/macx-clang-linux/ &&\\\n+  cp -f $($(package)_patch_dir)/mac-qmake.conf qtbase/mkspecs/macx-clang-linux/qmake.conf && \\\n+  patch -p1 < $($(package)_patch_dir)/mingw-uuidof.patch && \\\n+  patch -p1 < $($(package)_patch_dir)/pidlist_absolute.patch && \\\n+  patch -p1 < $($(package)_patch_dir)/fix-xcb-include-order.patch && \\\n+  patch -p1 < $($(package)_patch_dir)/fix_qt_pkgconfig.patch && \\\n+  echo \"QMAKE_CFLAGS     += $($(package)_cflags) $($(package)_cppflags)\" >> qtbase/mkspecs/common/gcc-base.conf && \\\n+  echo \"QMAKE_CXXFLAGS   += $($(package)_cxxflags) $($(package)_cppflags)\" >> qtbase/mkspecs/common/gcc-base.conf && \\\n+  echo \"QMAKE_LFLAGS     += $($(package)_ldflags)\" >> qtbase/mkspecs/common/gcc-base.conf && \\\n+  sed -i.old \"s|QMAKE_CFLAGS            = |QMAKE_CFLAGS            = $($(package)_cflags) $($(package)_cppflags) |\" qtbase/mkspecs/win32-g++/qmake.conf && \\\n+  sed -i.old \"s|QMAKE_LFLAGS            = |QMAKE_LFLAGS            = $($(package)_ldflags) |\" qtbase/mkspecs/win32-g++/qmake.conf && \\\n+  sed -i.old \"s|QMAKE_CXXFLAGS          = |QMAKE_CXXFLAGS            = $($(package)_cxxflags) $($(package)_cppflags) |\" qtbase/mkspecs/win32-g++/qmake.conf\n+endef\n+\n+define $(package)_config_cmds\n+  export PKG_CONFIG_SYSROOT_DIR=/ && \\\n+  export PKG_CONFIG_LIBDIR=$(host_prefix)/lib/pkgconfig && \\\n+  export PKG_CONFIG_PATH=$(host_prefix)/share/pkgconfig  && \\\n+  ./configure $($(package)_config_opts) && \\\n+  $(MAKE) sub-src-clean && \\\n+  cd ../qttranslations && ../qtbase/bin/qmake qttranslations.pro -o Makefile && \\\n+  cd translations && ../../qtbase/bin/qmake translations.pro -o Makefile && cd ../.. &&\\\n+  cd qttools/src/linguist/lrelease/ && ../../../../qtbase/bin/qmake lrelease.pro -o Makefile\n+endef\n+\n+define $(package)_build_cmds\n+  $(MAKE) -C src $(addprefix sub-,$($(package)_qt_libs)) && \\\n+  $(MAKE) -C ../qttools/src/linguist/lrelease && \\\n+  $(MAKE) -C ../qttranslations\n+endef\n+\n+define $(package)_stage_cmds\n+  $(MAKE) -C src INSTALL_ROOT=$($(package)_staging_dir) $(addsuffix -install_subtargets,$(addprefix sub-,$($(package)_qt_libs))) && cd .. &&\\\n+  $(MAKE) -C qttools/src/linguist/lrelease INSTALL_ROOT=$($(package)_staging_dir) install_target && \\\n+  $(MAKE) -C qttranslations INSTALL_ROOT=$($(package)_staging_dir) install_subtargets && \\\n+  if `test -f qtbase/src/plugins/platforms/xcb/xcb-static/libxcb-static.a`; then \\\n+    cp qtbase/src/plugins/platforms/xcb/xcb-static/libxcb-static.a $($(package)_staging_prefix_dir)/lib; \\\n+  fi\n+endef\n+\n+define $(package)_postprocess_cmds\n+  rm -rf native/mkspecs/ native/lib/ lib/cmake/ && \\\n+  rm -f lib/lib*.la lib/*.prl plugins/*/*.prl\n+endef"
      },
      {
        "sha": "8fb30a5c4471cfe1b4204c4507a103d37ba5a067",
        "filename": "depends/packages/qt46.mk",
        "status": "added",
        "additions": 66,
        "deletions": 0,
        "changes": 66,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/packages/qt46.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/packages/qt46.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/qt46.mk?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,66 @@\n+PACKAGE=qt46\n+$(package)_version=4.6.4\n+$(package)_download_path=http://download.qt-project.org/archive/qt/4.6/\n+$(package)_file_name=qt-everywhere-opensource-src-$($(package)_version).tar.gz\n+$(package)_sha256_hash=9ad4d46c721b53a429ed5a2eecfd3c239a9ab566562f183f99d3125f1a234250\n+$(package)_dependencies=openssl freetype dbus libX11 xproto libXext libICE libSM\n+$(package)_patches=stlfix.patch \n+\n+define $(package)_set_vars\n+$(package)_config_opts  = -prefix $(host_prefix) -headerdir $(host_prefix)/include/qt4 -bindir $(build_prefix)/bin\n+$(package)_config_opts += -release -no-separate-debug-info -opensource -confirm-license\n+$(package)_config_opts += -stl -qt-zlib\n+\n+$(package)_config_opts += -nomake examples -nomake tests -nomake tools -nomake translations -nomake demos -nomake docs\n+$(package)_config_opts += -no-audio-backend -no-glib -no-nis -no-cups -no-iconv -no-gif -no-pch\n+$(package)_config_opts += -no-xkb -no-xrender -no-xrandr -no-xfixes -no-xcursor -no-xinerama -no-xsync -no-xinput -no-mitshm -no-xshape\n+$(package)_config_opts += -no-libtiff -no-fontconfig -openssl-linked\n+$(package)_config_opts += -no-sql-db2 -no-sql-ibase -no-sql-oci -no-sql-tds -no-sql-mysql\n+$(package)_config_opts += -no-sql-odbc -no-sql-psql -no-sql-sqlite -no-sql-sqlite2\n+$(package)_config_opts += -no-xmlpatterns -no-multimedia -no-phonon -no-scripttools -no-declarative\n+$(package)_config_opts += -no-phonon-backend -no-webkit -no-javascript-jit -no-script\n+$(package)_config_opts += -no-svg -no-libjpeg -no-libtiff -no-libpng -no-libmng -no-qt3support -no-opengl\n+\n+$(package)_config_opts_x86_64_linux  += -platform linux-g++-64\n+$(package)_config_opts_i686_linux  = -platform linux-g++-32\n+$(package)_build_env  = QT_RCC_TEST=1\n+endef\n+\n+define $(package)_preprocess_cmds\n+   sed -i.old \"s|/include /usr/include||\" config.tests/unix/freetype/freetype.pri && \\\n+   sed -i.old \"s|src_plugins.depends = src_gui src_sql src_svg|src_plugins.depends = src_gui src_sql|\" src/src.pro && \\\n+   sed -i.old \"s|\\.lower(|\\.toLower(|g\" src/network/ssl/qsslsocket_openssl.cpp && \\\n+   sed -i.old \"s|Key_BackSpace|Key_Backspace|\" src/gui/itemviews/qabstractitemview.cpp && \\\n+   sed -i.old \"s|/usr/X11R6/lib64|$(host_prefix)/lib|\" mkspecs/*/*.conf && \\\n+   sed -i.old \"s|/usr/X11R6/lib|$(host_prefix)/lib|\" mkspecs/*/*.conf && \\\n+   sed -i.old \"s|/usr/X11R6/include|$(host_prefix)/include|\" mkspecs/*/*.conf && \\\n+   sed -i.old \"s|QMAKE_LFLAGS_SHLIB\\t+= -shared|QMAKE_LFLAGS_SHLIB\\t+= -shared -Wl,--exclude-libs,ALL|\" mkspecs/common/g++.conf && \\\n+   sed -i.old \"/SSLv2_client_method/d\" src/network/ssl/qsslsocket_openssl.cpp src/network/ssl/qsslsocket_openssl_symbols.cpp && \\\n+   sed -i.old \"/SSLv2_server_method/d\" src/network/ssl/qsslsocket_openssl.cpp src/network/ssl/qsslsocket_openssl_symbols.cpp && \\\n+   patch -p1 < $($(package)_patch_dir)/stlfix.patch \n+endef\n+\n+define $(package)_config_cmds\n+  export PKG_CONFIG_SYSROOT_DIR=/ && \\\n+  export PKG_CONFIG_LIBDIR=$(host_prefix)/lib/pkgconfig && \\\n+  export PKG_CONFIG_PATH=$(host_prefix)/share/pkgconfig  && \\\n+  export CPATH=$(host_prefix)/include && \\\n+  OPENSSL_LIBS='-L$(host_prefix)/lib -lssl -lcrypto' ./configure $($(package)_config_opts) && \\\n+  cd tools/linguist/lrelease; ../../../bin/qmake  -o Makefile lrelease.pro\n+endef\n+\n+define $(package)_build_cmds\n+  export CPATH=$(host_prefix)/include && \\\n+  $(MAKE) -C src && \\\n+  $(MAKE) -C tools/linguist/lrelease\n+endef\n+\n+define $(package)_stage_cmds\n+  $(MAKE) -C src INSTALL_ROOT=$($(package)_staging_dir) install && \\\n+  $(MAKE) -C tools/linguist/lrelease INSTALL_ROOT=$($(package)_staging_dir) install\n+endef\n+\n+define $(package)_postprocess_cmds\n+  rm -rf mkspecs/ lib/cmake/ lib/*.prl lib/*.la && \\\n+  find native/bin -type f -exec mv {} {}-qt4 \\;\n+endef"
      },
      {
        "sha": "0c7c958d62d42e52fa5cb694a026ea9f36ccabfa",
        "filename": "depends/packages/xcb_proto.mk",
        "status": "added",
        "additions": 27,
        "deletions": 0,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/packages/xcb_proto.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/packages/xcb_proto.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/xcb_proto.mk?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,27 @@\n+package=xcb_proto\n+$(package)_version=1.10\n+$(package)_download_path=http://xcb.freedesktop.org/dist\n+$(package)_file_name=xcb-proto-$($(package)_version).tar.bz2\n+$(package)_sha256_hash=7ef40ddd855b750bc597d2a435da21e55e502a0fefa85b274f2c922800baaf05\n+\n+define $(package)_set_vars\n+  $(package)_config_opts=--disable-shared\n+  $(package)_config_opts_linux=--with-pic\n+endef\n+\n+define $(package)_config_cmds\n+  $($(package)_autoconf)\n+endef\n+\n+define $(package)_build_cmds\n+  $(MAKE)\n+endef\n+\n+define $(package)_stage_cmds\n+  $(MAKE) DESTDIR=$($(package)_staging_dir) install\n+endef\n+\n+define $(package)_postprocess_cmds\n+  find -name \"*.pyc\" -delete && \\\n+  find -name \"*.pyo\" -delete\n+endef"
      },
      {
        "sha": "98a11eb4974f8b25bf0f8c75ca1b0f0de4d5d1b9",
        "filename": "depends/packages/xextproto.mk",
        "status": "added",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/packages/xextproto.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/packages/xextproto.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/xextproto.mk?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,21 @@\n+package=xextproto\n+$(package)_version=7.3.0\n+$(package)_download_path=http://xorg.freedesktop.org/releases/individual/proto\n+$(package)_file_name=$(package)-$($(package)_version).tar.bz2\n+$(package)_sha256_hash=f3f4b23ac8db9c3a9e0d8edb591713f3d70ef9c3b175970dd8823dfc92aa5bb0\n+\n+define $(package)_set_vars\n+$(package)_config_opts=--disable-shared\n+endef\n+\n+define $(package)_config_cmds\n+  $($(package)_autoconf)\n+endef\n+\n+define $(package)_build_cmds\n+  $(MAKE)\n+endef\n+\n+define $(package)_stage_cmds\n+  $(MAKE) DESTDIR=$($(package)_staging_dir) install\n+endef"
      },
      {
        "sha": "50a90b26850ac87de0c74d2822a6590d9a9b9e8e",
        "filename": "depends/packages/xproto.mk",
        "status": "added",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/packages/xproto.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/packages/xproto.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/xproto.mk?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,21 @@\n+package=xproto\n+$(package)_version=7.0.26\n+$(package)_download_path=http://xorg.freedesktop.org/releases/individual/proto\n+$(package)_file_name=$(package)-$($(package)_version).tar.bz2\n+$(package)_sha256_hash=636162c1759805a5a0114a369dffdeccb8af8c859ef6e1445f26a4e6e046514f\n+\n+define $(package)_set_vars\n+$(package)_config_opts=--disable-shared\n+endef\n+\n+define $(package)_config_cmds\n+  $($(package)_autoconf)\n+endef\n+\n+define $(package)_build_cmds\n+  $(MAKE)\n+endef\n+\n+define $(package)_stage_cmds\n+  $(MAKE) DESTDIR=$($(package)_staging_dir) install\n+endef"
      },
      {
        "sha": "99eefa6d5ea24b2d2f4e5ecf38b07390432a8549",
        "filename": "depends/packages/xtrans.mk",
        "status": "added",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/packages/xtrans.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/packages/xtrans.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/xtrans.mk?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,22 @@\n+package=xtrans\n+$(package)_version=1.3.4\n+$(package)_download_path=http://xorg.freedesktop.org/releases/individual/lib/\n+$(package)_file_name=$(package)-$($(package)_version).tar.bz2\n+$(package)_sha256_hash=054d4ee3efd52508c753e9f7bc655ef185a29bd2850dd9e2fc2ccc33544f583a\n+$(package)_dependencies=\n+\n+define $(package)_set_vars\n+$(package)_config_opts_linux=--with-pic --disable-static\n+endef\n+\n+define $(package)_config_cmds\n+  $($(package)_autoconf)\n+endef\n+\n+define $(package)_build_cmds\n+  $(MAKE)\n+endef\n+\n+define $(package)_stage_cmds\n+  $(MAKE) DESTDIR=$($(package)_staging_dir) install\n+endef"
      },
      {
        "sha": "f8901f72c26c632ab2757cd7def64fbb67e65061",
        "filename": "depends/packages/zeromq.mk",
        "status": "added",
        "additions": 27,
        "deletions": 0,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/packages/zeromq.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/packages/zeromq.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/zeromq.mk?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,27 @@\n+package=zeromq\n+$(package)_version=4.1.4\n+$(package)_download_path=http://download.zeromq.org\n+$(package)_file_name=$(package)-$($(package)_version).tar.gz\n+$(package)_sha256_hash=e99f44fde25c2e4cb84ce440f87ca7d3fe3271c2b8cfbc67d55e4de25e6fe378\n+\n+define $(package)_set_vars\n+  $(package)_config_opts=--without-documentation --disable-shared --without-libsodium\n+  $(package)_config_opts_linux=--with-pic\n+  $(package)_cxxflags=-std=c++11\n+endef\n+\n+define $(package)_config_cmds\n+  $($(package)_autoconf)\n+endef\n+\n+define $(package)_build_cmds\n+  $(MAKE) libzmq.la\n+endef\n+\n+define $(package)_stage_cmds\n+  $(MAKE) DESTDIR=$($(package)_staging_dir) install-libLTLIBRARIES install-includeHEADERS install-pkgconfigDATA\n+endef\n+\n+define $(package)_postprocess_cmds\n+  rm -rf bin share\n+endef"
      },
      {
        "sha": "58695c11f5d976bd163429884e02d9a7f6f4eb4d",
        "filename": "depends/patches/libevent/reuseaddr.patch",
        "status": "added",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/patches/libevent/reuseaddr.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/patches/libevent/reuseaddr.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/libevent/reuseaddr.patch?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,21 @@\n+--- old/evutil.c   2015-08-28 19:26:23.488765923 -0400\n++++ new/evutil.c   2015-08-28 19:27:41.392767019 -0400\n+@@ -321,15 +321,16 @@\n+ int\n+ evutil_make_listen_socket_reuseable(evutil_socket_t sock)\n+ {\n+-#ifndef WIN32\n+ \tint one = 1;\n++#ifndef WIN32\n+ \t/* REUSEADDR on Unix means, \"don't hang on to this address after the\n+ \t * listener is closed.\"  On Windows, though, it means \"don't keep other\n+ \t * processes from binding to this address while we're using it. */\n+ \treturn setsockopt(sock, SOL_SOCKET, SO_REUSEADDR, (void*) &one,\n+ \t    (ev_socklen_t)sizeof(one));\n+ #else\n+-\treturn 0;\n++\treturn setsockopt(sock, SOL_SOCKET, SO_REUSEADDR, (const char*) &one,\n++\t\t(ev_socklen_t)sizeof(one));\n+ #endif\n+ }\n+ "
      },
      {
        "sha": "8ab0993dc4de142ab7766a500640be92540fe80f",
        "filename": "depends/patches/native_cdrkit/cdrkit-deterministic.patch",
        "status": "added",
        "additions": 86,
        "deletions": 0,
        "changes": 86,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/patches/native_cdrkit/cdrkit-deterministic.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/patches/native_cdrkit/cdrkit-deterministic.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/native_cdrkit/cdrkit-deterministic.patch?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,86 @@\n+--- cdrkit-1.1.11.old/genisoimage/tree.c\t2008-10-21 19:57:47.000000000 -0400\n++++ cdrkit-1.1.11/genisoimage/tree.c\t2013-12-06 00:23:18.489622668 -0500\n+@@ -1139,8 +1139,9 @@\n+ scan_directory_tree(struct directory *this_dir, char *path, \n+ \t\t\t\t\t\t  struct directory_entry *de)\n+ {\n+-\tDIR\t\t*current_dir;\n++        int             current_file;\n+ \tchar\t\twhole_path[PATH_MAX];\n++        struct dirent  **d_list;\n+ \tstruct dirent\t*d_entry;\n+ \tstruct directory *parent;\n+ \tint\t\tdflag;\n+@@ -1164,7 +1165,8 @@\n+ \tthis_dir->dir_flags |= DIR_WAS_SCANNED;\n+ \n+ \terrno = 0;\t/* Paranoia */\n+-\tcurrent_dir = opendir(path);\n++\t//current_dir = opendir(path);\n++        current_file = scandir(path, &d_list, NULL, alphasort);\n+ \td_entry = NULL;\n+ \n+ \t/*\n+@@ -1173,12 +1175,12 @@\n+ \t */\n+ \told_path = path;\n+ \n+-\tif (current_dir) {\n++\tif (current_file >= 0) {\n+ \t\terrno = 0;\n+-\t\td_entry = readdir(current_dir);\n++\t\td_entry = d_list[0];\n+ \t}\n+ \n+-\tif (!current_dir || !d_entry) {\n++\tif (current_file < 0 || !d_entry) {\n+ \t\tint\tret = 1;\n+ \n+ #ifdef\tUSE_LIBSCHILY\n+@@ -1191,8 +1193,8 @@\n+ \t\t\tde->isorec.flags[0] &= ~ISO_DIRECTORY;\n+ \t\t\tret = 0;\n+ \t\t}\n+-\t\tif (current_dir)\n+-\t\t\tclosedir(current_dir);\n++\t\tif(d_list)\n++\t\t\tfree(d_list);\n+ \t\treturn (ret);\n+ \t}\n+ #ifdef\tABORT_DEEP_ISO_ONLY\n+@@ -1208,7 +1210,7 @@\n+ \t\t\terrmsgno(EX_BAD, \"use Rock Ridge extensions via -R or -r,\\n\");\n+ \t\t\terrmsgno(EX_BAD, \"or allow deep ISO9660 directory nesting via -D.\\n\");\n+ \t\t}\n+-\t\tclosedir(current_dir);\n++\t\tfree(d_list);\n+ \t\treturn (1);\n+ \t}\n+ #endif\n+@@ -1250,13 +1252,13 @@\n+ \t\t * The first time through, skip this, since we already asked\n+ \t\t * for the first entry when we opened the directory.\n+ \t\t */\n+-\t\tif (dflag)\n+-\t\t\td_entry = readdir(current_dir);\n++\t\tif (dflag && current_file >= 0)\n++\t\t\td_entry = d_list[current_file];\n+ \t\tdflag++;\n+ \n+-\t\tif (!d_entry)\n++\t\tif (current_file < 0)\n+ \t\t\tbreak;\n+-\n++                current_file--;\n+ \t\t/* OK, got a valid entry */\n+ \n+ \t\t/* If we do not want all files, then pitch the backups. */\n+@@ -1348,7 +1350,7 @@\n+ \t\tinsert_file_entry(this_dir, whole_path, d_entry->d_name);\n+ #endif\t/* APPLE_HYB */\n+ \t}\n+-\tclosedir(current_dir);\n++\tfree(d_list);\n+ \n+ #ifdef APPLE_HYB\n+ \t/*"
      },
      {
        "sha": "1a32340be5b13ae1d5be3e775462c3052c12953a",
        "filename": "depends/patches/native_mac_alias/python3.patch",
        "status": "added",
        "additions": 72,
        "deletions": 0,
        "changes": 72,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/patches/native_mac_alias/python3.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/patches/native_mac_alias/python3.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/native_mac_alias/python3.patch?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,72 @@\n+diff -dur a/mac_alias/alias.py b/mac_alias/alias.py\n+--- a/mac_alias/alias.py\t2015-10-19 12:12:48.000000000 +0200\n++++ b/mac_alias/alias.py\t2016-04-03 12:13:12.037159417 +0200\n+@@ -243,10 +243,10 @@\n+         alias = Alias()\n+         alias.appinfo = appinfo\n+             \n+-        alias.volume = VolumeInfo (volname.replace('/',':'),\n++        alias.volume = VolumeInfo (volname.decode().replace('/',':'),\n+                                    voldate, fstype, disktype,\n+                                    volattrs, volfsid)\n+-        alias.target = TargetInfo (kind, filename.replace('/',':'),\n++        alias.target = TargetInfo (kind, filename.decode().replace('/',':'),\n+                                    folder_cnid, cnid,\n+                                    crdate, creator_code, type_code)\n+         alias.target.levels_from = levels_from\n+@@ -261,9 +261,9 @@\n+                 b.read(1)\n+ \n+             if tag == TAG_CARBON_FOLDER_NAME:\n+-                alias.target.folder_name = value.replace('/',':')\n++                alias.target.folder_name = value.decode().replace('/',':')\n+             elif tag == TAG_CNID_PATH:\n+-                alias.target.cnid_path = struct.unpack(b'>%uI' % (length // 4),\n++                alias.target.cnid_path = struct.unpack('>%uI' % (length // 4),\n+                                                            value)\n+             elif tag == TAG_CARBON_PATH:\n+                 alias.target.carbon_path = value\n+@@ -298,9 +298,9 @@\n+                 alias.target.creation_date \\\n+                     = mac_epoch + datetime.timedelta(seconds=seconds)\n+             elif tag == TAG_POSIX_PATH:\n+-                alias.target.posix_path = value\n++                alias.target.posix_path = value.decode()\n+             elif tag == TAG_POSIX_PATH_TO_MOUNTPOINT:\n+-                alias.volume.posix_path = value\n++                alias.volume.posix_path = value.decode()\n+             elif tag == TAG_RECURSIVE_ALIAS_OF_DISK_IMAGE:\n+                 alias.volume.disk_image_alias = Alias.from_bytes(value)\n+             elif tag == TAG_USER_HOME_LENGTH_PREFIX:\n+@@ -422,13 +422,13 @@\n+         #       (so doing so is ridiculous, and nothing could rely on it).\n+         b.write(struct.pack(b'>h28pI2shI64pII4s4shhI2s10s',\n+                             self.target.kind,\n+-                            carbon_volname, voldate,\n++                            carbon_volname, int(voldate),\n+                             self.volume.fs_type,\n+                             self.volume.disk_type,\n+                             self.target.folder_cnid,\n+                             carbon_filename,\n+                             self.target.cnid,\n+-                            crdate,\n++                            int(crdate),\n+                             self.target.creator_code,\n+                             self.target.type_code,\n+                             self.target.levels_from,\n+@@ -449,12 +449,12 @@\n+ \n+         b.write(struct.pack(b'>hhQhhQ',\n+                 TAG_HIGH_RES_VOLUME_CREATION_DATE,\n+-                8, long(voldate * 65536),\n++                8, int(voldate * 65536),\n+                 TAG_HIGH_RES_CREATION_DATE,\n+-                8, long(crdate * 65536)))\n++                8, int(crdate * 65536)))\n+ \n+         if self.target.cnid_path:\n+-            cnid_path = struct.pack(b'>%uI' % len(self.target.cnid_path),\n++            cnid_path = struct.pack('>%uI' % len(self.target.cnid_path),\n+                                     *self.target.cnid_path)\n+             b.write(struct.pack(b'>hh', TAG_CNID_PATH,\n+                                  len(cnid_path)))"
      },
      {
        "sha": "c7dbebedce831edba990aeecc2dd9c2a5941430e",
        "filename": "depends/patches/qt/fix-xcb-include-order.patch",
        "status": "added",
        "additions": 49,
        "deletions": 0,
        "changes": 49,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/patches/qt/fix-xcb-include-order.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/patches/qt/fix-xcb-include-order.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/fix-xcb-include-order.patch?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,49 @@\n+--- old/qtbase/src/plugins/platforms/xcb/xcb_qpa_lib.pro 2015-03-17 02:06:42.705930685 +0000\n++++ new/qtbase/src/plugins/platforms/xcb/xcb_qpa_lib.pro 2015-03-17 02:08:41.281926351 +0000\n+@@ -74,8 +74,6 @@\n+ \n+ DEFINES += $$QMAKE_DEFINES_XCB\n+ LIBS += $$QMAKE_LIBS_XCB\n+-QMAKE_CXXFLAGS += $$QMAKE_CFLAGS_XCB\n+-QMAKE_CFLAGS += $$QMAKE_CFLAGS_XCB\n+ \n+ CONFIG += qpa/genericunixfontdatabase\n+ \n+@@ -87,7 +85,8 @@\n+ contains(QT_CONFIG, xcb-qt) {\n+     DEFINES += XCB_USE_RENDER\n+     XCB_DIR = ../../../3rdparty/xcb\n+-    INCLUDEPATH += $$XCB_DIR/include $$XCB_DIR/sysinclude\n++    QMAKE_CFLAGS += -I$$XCB_DIR/include -I$$XCB_DIR/sysinclude $$QMAKE_CFLAGS_XCB\n++    QMAKE_CXXFLAGS += -I$$XCB_DIR/include -I$$XCB_DIR/sysinclude $$QMAKE_CFLAGS_XCB\n+     LIBS += -lxcb -L$$OUT_PWD/xcb-static -lxcb-static\n+ } else {\n+     LIBS += -lxcb -lxcb-image -lxcb-icccm -lxcb-sync -lxcb-xfixes -lxcb-shm -lxcb-randr -lxcb-shape -lxcb-keysyms -lxcb-xinerama\n+--- old/qtbase/src/plugins/platforms/xcb/xcb-static/xcb-static.pro      2015-03-17 02:07:04.641929383 +0000\n++++ new/qtbase/src/plugins/platforms/xcb/xcb-static/xcb-static.pro      2015-03-17 02:10:15.485922059 +0000\n+@@ -9,7 +9,8 @@\n+ \n+ XCB_DIR = ../../../../3rdparty/xcb\n+ \n+-INCLUDEPATH += $$XCB_DIR/include $$XCB_DIR/include/xcb $$XCB_DIR/sysinclude\n++QMAKE_CFLAGS += -I$$XCB_DIR/include -I$$XCB_DIR/include/xcb -I$$XCB_DIR/sysinclude\n++QMAKE_CXXFLAGS += -I$$XCB_DIR/include -I$$XCB_DIR/include/xcb -I$$XCB_DIR/sysinclude\n+ \n+ QMAKE_CXXFLAGS += $$QMAKE_CFLAGS_XCB\n+ QMAKE_CFLAGS += $$QMAKE_CFLAGS_XCB\n+--- old/qtbase/src/plugins/platforms/xcb/xcb-plugin.pro\t2015-07-24 16:02:59.530038830 -0400\n++++ new/qtbase/src/plugins/platforms/xcb/xcb-plugin.pro\t2015-07-24 16:01:22.106037459 -0400\n+@@ -6,6 +6,13 @@\n+     qxcbmain.cpp\n+ OTHER_FILES += xcb.json README\n+ \n++contains(QT_CONFIG, xcb-qt) {\n++    DEFINES += XCB_USE_RENDER\n++    XCB_DIR = ../../../3rdparty/xcb\n++    QMAKE_CFLAGS += -I$$XCB_DIR/include -I$$XCB_DIR/sysinclude $$QMAKE_CFLAGS_XCB\n++    QMAKE_CXXFLAGS += -I$$XCB_DIR/include -I$$XCB_DIR/sysinclude $$QMAKE_CFLAGS_XCB\n++}\n++\n+ PLUGIN_TYPE = platforms\n+ PLUGIN_CLASS_NAME = QXcbIntegrationPlugin\n+ !equals(TARGET, $$QT_DEFAULT_QPA_PLUGIN): PLUGIN_EXTENDS = -"
      },
      {
        "sha": "3772db4f8b804766d7d1b6eb7a1705609a2cc368",
        "filename": "depends/patches/qt/fix_qt_pkgconfig.patch",
        "status": "added",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/patches/qt/fix_qt_pkgconfig.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/patches/qt/fix_qt_pkgconfig.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/fix_qt_pkgconfig.patch?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,11 @@\n+--- old/qtbase/mkspecs/features/qt_module.prf 2016-03-17 02:06:42.705930685 +0000\n++++ new/qtbase/mkspecs/features/qt_module.prf 2016-03-17 02:06:42.705930685 +0000\n+@@ -244,7 +244,7 @@\n+ load(qt_targets)\n+ \n+ # this builds on top of qt_common\n+-!internal_module:!lib_bundle:if(unix|mingw) {\n++unix|mingw {\n+     CONFIG += create_pc\n+     QMAKE_PKGCONFIG_DESTDIR = pkgconfig\n+     host_build: \\"
      },
      {
        "sha": "a6d0070cca6489848394febfa8a1b6e36925ba6c",
        "filename": "depends/patches/qt/mac-qmake.conf",
        "status": "added",
        "additions": 26,
        "deletions": 0,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/patches/qt/mac-qmake.conf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/patches/qt/mac-qmake.conf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/mac-qmake.conf?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,26 @@\n+MAKEFILE_GENERATOR = UNIX\n+CONFIG += app_bundle incremental global_init_link_order lib_version_first plugin_no_soname absolute_library_soname\n+DEFINES += QT_NO_PRINTER QT_NO_PRINTDIALOG\n+QMAKE_INCREMENTAL_STYLE = sublib\n+include(../common/macx.conf)\n+include(../common/gcc-base-mac.conf)\n+include(../common/clang.conf)\n+include(../common/clang-mac.conf)\n+QMAKE_MAC_SDK_PATH=$${MAC_SDK_PATH}\n+QMAKE_XCODE_VERSION=4.3\n+QMAKE_XCODE_DEVELOPER_PATH=/Developer\n+QMAKE_MACOSX_DEPLOYMENT_TARGET = $${MAC_MIN_VERSION}\n+QMAKE_MAC_SDK=macosx\n+QMAKE_MAC_SDK.macosx.path = $${MAC_SDK_PATH}\n+QMAKE_MAC_SDK.macosx.platform_name = macosx\n+QMAKE_MAC_SDK.macosx.version = $${MAC_SDK_VERSION}\n+QMAKE_MAC_SDK.macosx.platform_path = /phony\n+QMAKE_CFLAGS += -target $${MAC_TARGET}\n+QMAKE_OBJECTIVE_CFLAGS += $$QMAKE_CFLAGS\n+QMAKE_CXXFLAGS += $$QMAKE_CFLAGS\n+QMAKE_LFLAGS += -target $${MAC_TARGET} -mlinker-version=$${MAC_LD64_VERSION}\n+QMAKE_AR = $${CROSS_COMPILE}ar cq\n+QMAKE_RANLIB=$${CROSS_COMPILE}ranlib\n+QMAKE_LIBTOOL=$${CROSS_COMPILE}libtool\n+QMAKE_INSTALL_NAME_TOOL=$${CROSS_COMPILE}install_name_tool\n+load(qt_config)"
      },
      {
        "sha": "975366e61229c891974f60f91a74e8c9f7a62d5a",
        "filename": "depends/patches/qt/mingw-uuidof.patch",
        "status": "added",
        "additions": 44,
        "deletions": 0,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/patches/qt/mingw-uuidof.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/patches/qt/mingw-uuidof.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/mingw-uuidof.patch?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,44 @@\n+--- old/qtbase/src/plugins/platforms/windows/qwindowscontext.cpp\t2015-06-20 17:40:20.956781548 -0400\n++++ new/qtbase/src/plugins/platforms/windows/qwindowscontext.cpp\t2015-06-20 17:29:32.052772416 -0400\n+@@ -69,7 +69,7 @@\n+ #include <stdlib.h>\n+ #include <stdio.h>\n+ #include <windowsx.h>\n+-#ifndef Q_OS_WINCE\n++#if !defined(Q_OS_WINCE) && (!defined(USE___UUIDOF) || (defined(USE___UUIDOF) && USE___UUIDOF == 1))\n+ #  include <comdef.h>\n+ #endif\n+ \n+@@ -762,7 +762,7 @@\n+                           HWND_MESSAGE, NULL, (HINSTANCE)GetModuleHandle(0), NULL);\n+ }\n+ \n+-#ifndef Q_OS_WINCE\n++#if !defined(Q_OS_WINCE) && (!defined(USE___UUIDOF) || (defined(USE___UUIDOF) && USE___UUIDOF == 1))\n+ // Re-engineered from the inline function _com_error::ErrorMessage().\n+ // We cannot use it directly since it uses swprintf_s(), which is not\n+ // present in the MSVCRT.DLL found on Windows XP (QTBUG-35617).\n+@@ -781,7 +781,7 @@\n+          return QStringLiteral(\"IDispatch error #\") + QString::number(wCode);\n+      return QStringLiteral(\"Unknown error 0x0\") + QString::number(comError.Error(), 16);\n+ }\n+-#endif // !Q_OS_WINCE\n++#endif // !defined(Q_OS_WINCE) && (!defined(USE___UUIDOF) || (defined(USE___UUIDOF) && USE___UUIDOF == 1))\n+ \n+ /*!\n+     \\brief Common COM error strings.\n+@@ -846,12 +846,12 @@\n+     default:\n+         break;\n+     }\n+-#ifndef Q_OS_WINCE\n++#if !defined(Q_OS_WINCE) && (!defined(USE___UUIDOF) || (defined(USE___UUIDOF) && USE___UUIDOF == 1))\n+     _com_error error(hr);\n+     result += QByteArrayLiteral(\" (\");\n+     result += errorMessageFromComError(error);\n+     result += ')';\n+-#endif // !Q_OS_WINCE\n++#endif // !defined(Q_OS_WINCE) && (!defined(USE___UUIDOF) || (defined(USE___UUIDOF) && USE___UUIDOF == 1))\n+     return result;\n+ }\n+ "
      },
      {
        "sha": "0b49c050dcc1f37fc86d289ecd7bf9b1c2607206",
        "filename": "depends/patches/qt/pidlist_absolute.patch",
        "status": "added",
        "additions": 37,
        "deletions": 0,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/patches/qt/pidlist_absolute.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/patches/qt/pidlist_absolute.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/pidlist_absolute.patch?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,37 @@\n+diff -dur old/qtbase/src/plugins/platforms/windows/qwindowscontext.h new/qtbase/src/plugins/platforms/windows/qwindowscontext.h\n+--- old/qtbase/src/plugins/platforms/windows/qwindowscontext.h\t2015-06-29 22:04:40.000000000 +0200\n++++ new/qtbase/src/plugins/platforms/windows/qwindowscontext.h\t2015-11-01 12:55:59.751234846 +0100\n+@@ -124,10 +124,18 @@\n+     inline void init();\n+ \n+     typedef HRESULT (WINAPI *SHCreateItemFromParsingName)(PCWSTR, IBindCtx *, const GUID&, void **);\n++#if defined(Q_CC_MINGW) && (!defined(__MINGW64_VERSION_MAJOR) || __MINGW64_VERSION_MAJOR < 3)\n++    typedef HRESULT (WINAPI *SHGetKnownFolderIDList)(const GUID &, DWORD, HANDLE, ITEMIDLIST **);\n++#else\n+     typedef HRESULT (WINAPI *SHGetKnownFolderIDList)(const GUID &, DWORD, HANDLE, PIDLIST_ABSOLUTE *);\n++#endif\n+     typedef HRESULT (WINAPI *SHGetStockIconInfo)(int , int , _SHSTOCKICONINFO *);\n+     typedef HRESULT (WINAPI *SHGetImageList)(int, REFIID , void **);\n++#if defined(Q_CC_MINGW) && (!defined(__MINGW64_VERSION_MAJOR) || __MINGW64_VERSION_MAJOR < 3)\n++    typedef HRESULT (WINAPI *SHCreateItemFromIDList)(const ITEMIDLIST *, REFIID, void **);\n++#else\n+     typedef HRESULT (WINAPI *SHCreateItemFromIDList)(PCIDLIST_ABSOLUTE, REFIID, void **);\n++#endif\n+ \n+     SHCreateItemFromParsingName sHCreateItemFromParsingName;\n+     SHGetKnownFolderIDList sHGetKnownFolderIDList;\n+diff -dur old/qtbase/src/plugins/platforms/windows/qwindowsdialoghelpers.cpp new/qtbase/src/plugins/platforms/windows/qwindowsdialoghelpers.cpp\n+--- old/qtbase/src/plugins/platforms/windows/qwindowsdialoghelpers.cpp\t2015-06-29 22:04:40.000000000 +0200\n++++ new/qtbase/src/plugins/platforms/windows/qwindowsdialoghelpers.cpp\t2015-11-01 13:41:09.503149772 +0100\n+@@ -1008,7 +1008,11 @@\n+             qWarning() << __FUNCTION__ << \": Invalid CLSID: \" << url.path();\n+             return Q_NULLPTR;\n+         }\n++#if defined(Q_CC_MINGW) && (!defined(__MINGW64_VERSION_MAJOR) || __MINGW64_VERSION_MAJOR < 3)\n++        ITEMIDLIST *idList;\n++#else\n+         PIDLIST_ABSOLUTE idList;\n++#endif\n+         HRESULT hr = QWindowsContext::shell32dll.sHGetKnownFolderIDList(uuid, 0, 0, &idList);\n+         if (FAILED(hr)) {\n+             qErrnoWarning(\"%s: SHGetKnownFolderIDList(%s)) failed\", __FUNCTION__, qPrintable(url.toString()));"
      },
      {
        "sha": "f8f6fb04b0b70db71dc5b2c75d2a5cfb6bc48893",
        "filename": "depends/patches/qt46/stlfix.patch",
        "status": "added",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/patches/qt46/stlfix.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/depends/patches/qt46/stlfix.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt46/stlfix.patch?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,10 @@\n+--- old/config.tests/unix/stl/stltest.cpp\t2011-06-23 03:45:23.000000000 -0400\n++++ new/config.tests/unix/stl/stltest.cpp\t2014-08-28 00:54:04.154837604 -0400\n+@@ -49,6 +49,7 @@\n+ #include <vector>\n+ #include <algorithm>\n+ #include <iostream>\n++#include <cstddef>\n+ \n+ // something mean to see if the compiler and C++ standard lib are good enough\n+ template<class K, class T>"
      },
      {
        "sha": "428fba98e1ba71cc7314555dba6de3fd14f50b0c",
        "filename": "doc/Doxyfile",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/Doxyfile",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/Doxyfile",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/Doxyfile?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -34,7 +34,7 @@ PROJECT_NAME           = Bitcoin\n # This could be handy for archiving the generated documentation or \n # if some version control system is used.\n \n-PROJECT_NUMBER         = 0.9.0\n+PROJECT_NUMBER         = 0.12.99\n \n # Using the PROJECT_BRIEF tag one can provide an optional one line description \n # for a project that appears at the top of each page and should give viewer \n@@ -683,7 +683,7 @@ RECURSIVE              = YES\n # excluded from the INPUT source files. This way you can easily exclude a \n # subdirectory from a directory tree whose root is specified with the INPUT tag.\n \n-EXCLUDE                = \n+EXCLUDE                = src/leveldb src/json src/test /src/qt/test\n \n # The EXCLUDE_SYMLINKS tag can be used select whether or not files or \n # directories that are symbolic links (a Unix file system feature) are excluded \n@@ -705,7 +705,7 @@ EXCLUDE_PATTERNS       =\n # wildcard * is used, a substring. Examples: ANamespace, AClass, \n # AClass::ANamespace, ANamespace::*Test\n \n-EXCLUDE_SYMBOLS        = \n+EXCLUDE_SYMBOLS        = boost google\n \n # The EXAMPLE_PATH tag can be used to specify one or more files or \n # directories that contain example code fragments that are included (see \n@@ -1577,7 +1577,7 @@ HIDE_UNDOC_RELATIONS   = YES\n # toolkit from AT&T and Lucent Bell Labs. The other options in this section \n # have no effect if this option is set to NO (the default)\n \n-HAVE_DOT               = NO\n+HAVE_DOT               = YES\n \n # The DOT_NUM_THREADS specifies the number of dot invocations doxygen is \n # allowed to run in parallel. When set to 0 (the default) doxygen will \n@@ -1659,15 +1659,15 @@ INCLUDED_BY_GRAPH      = YES\n # the time of a run. So in most cases it will be better to enable call graphs \n # for selected functions only using the \\callgraph command.\n \n-CALL_GRAPH             = NO\n+CALL_GRAPH             = YES\n \n # If the CALLER_GRAPH and HAVE_DOT tags are set to YES then \n # doxygen will generate a caller dependency graph for every global function \n # or class method. Note that enabling this option will significantly increase \n # the time of a run. So in most cases it will be better to enable caller \n # graphs for selected functions only using the \\callergraph command.\n \n-CALLER_GRAPH           = NO\n+CALLER_GRAPH           = YES\n \n # If the GRAPHICAL_HIERARCHY and HAVE_DOT tags are set to YES then doxygen \n # will generate a graphical hierarchy of all classes instead of a textual one.\n@@ -1685,7 +1685,7 @@ DIRECTORY_GRAPH        = YES\n # generated by dot. Possible values are svg, png, jpg, or gif. \n # If left blank png will be used.\n \n-DOT_IMAGE_FORMAT       = png\n+DOT_IMAGE_FORMAT       = svg\n \n # The tag DOT_PATH can be used to specify the path where the dot tool can be \n # found. If left blank, it is assumed the dot tool can be found in the path."
      },
      {
        "sha": "c30f29452b78652cfe4facca8c4a0024ce63ed3d",
        "filename": "doc/README.md",
        "status": "modified",
        "additions": 25,
        "deletions": 24,
        "changes": 49,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README.md?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -1,37 +1,28 @@\n-Bitcoin 0.8.2 BETA \n-====================\n-\n-Copyright (c) 2009-2013 Bitcoin Developers\n-\n+Bitcoin Core 0.12.99\n+=====================\n \n Setup\n ---------------------\n-[Bitcoin-Qt](http://bitcoin.org/en/download) is the original Bitcoin client and it builds the backbone of the network. However, it downloads and stores the entire history of Bitcoin transactions (which is currently several GBs); depending on the speed of your computer and network connection, the synchronization process can take anywhere from a few hours to a day or more. Thankfully you only have to do this once. If you would like the process to go faster you can [download the blockchain directly](https://bitcointalk.org/index.php?topic=145386.0).\n+[Bitcoin Core](http://bitcoin.org/en/download) is the original Bitcoin client and it builds the backbone of the network. However, it downloads and stores the entire history of Bitcoin transactions (which is currently several GBs); depending on the speed of your computer and network connection, the synchronization process can take anywhere from a few hours to a day or more.\n \n Running\n ---------------------\n-The following are some helpful notes on how to run Bitcoin on your native platform. \n+The following are some helpful notes on how to run Bitcoin on your native platform.\n \n ### Unix\n \n-You need the Qt4 run-time libraries to run Bitcoin-Qt. On Debian or Ubuntu:\n-\n-\tsudo apt-get install libqtgui4\n-\n Unpack the files into a directory and run:\n \n-- bin/32/bitcoin-qt (GUI, 32-bit) or bin/32/bitcoind (headless, 32-bit)\n-- bin/64/bitcoin-qt (GUI, 64-bit) or bin/64/bitcoind (headless, 64-bit)\n-\n-\n+- `bin/bitcoin-qt` (GUI) or\n+- `bin/bitcoind` (headless)\n \n ### Windows\n \n Unpack the files into a directory, and then run bitcoin-qt.exe.\n \n-### OSX\n+### OS X\n \n-Drag Bitcoin-Qt to your applications folder, and then run Bitcoin-Qt.\n+Drag Bitcoin-Core to your applications folder, and then run Bitcoin-Core.\n \n ### Need Help?\n \n@@ -44,33 +35,43 @@ Building\n ---------------------\n The following are developer notes on how to build Bitcoin on your native platform. They are not complete guides, but include notes on the necessary libraries, compile flags, etc.\n \n-- [OSX Build Notes](build-osx.md)\n+- [OS X Build Notes](build-osx.md)\n - [Unix Build Notes](build-unix.md)\n-- [Windows Build Notes](build-msw.md)\n+- [Windows Build Notes](build-windows.md)\n+- [OpenBSD Build Notes](build-openbsd.md)\n+- [Gitian Building Guide](gitian-building.md)\n \n Development\n ---------------------\n-The Bitcoin repo's [root README](https://github.com/bitcoin/bitcoin/blob/master/README.md) contains relevant information on the development process and automated testing.\n+The Bitcoin repo's [root README](/README.md) contains relevant information on the development process and automated testing.\n \n-- [Coding Guidelines](coding.md)\n+- [Developer Notes](developer-notes.md)\n - [Multiwallet Qt Development](multiwallet-qt.md)\n - [Release Notes](release-notes.md)\n - [Release Process](release-process.md)\n - [Source Code Documentation (External Link)](https://dev.visucore.com/bitcoin/doxygen/)\n - [Translation Process](translation_process.md)\n+- [Translation Strings Policy](translation_strings_policy.md)\n - [Unit Tests](unit-tests.md)\n+- [Unauthenticated REST Interface](REST-interface.md)\n+- [Shared Libraries](shared-libraries.md)\n+- [BIPS](bips.md)\n+- [Dnsseed Policy](dnsseed-policy.md)\n+- [Benchmarking](benchmarking.md)\n \n ### Resources\n * Discuss on the [BitcoinTalk](https://bitcointalk.org/) forums, in the [Development & Technical Discussion board](https://bitcointalk.org/index.php?board=6.0).\n-* Discuss on [#bitcoin-dev](http://webchat.freenode.net/?channels=bitcoin) on Freenode. If you don't have an IRC client use [webchat here](http://webchat.freenode.net/?channels=bitcoin-dev).\n+* Discuss project-specific development on #bitcoin-core-dev on Freenode. If you don't have an IRC client use [webchat here](http://webchat.freenode.net/?channels=bitcoin-core-dev).\n+* Discuss general Bitcoin development on #bitcoin-dev on Freenode. If you don't have an IRC client use [webchat here](http://webchat.freenode.net/?channels=bitcoin-dev).\n \n ### Miscellaneous\n - [Assets Attribution](assets-attribution.md)\n - [Files](files.md)\n - [Tor Support](tor.md)\n+- [Init Scripts (systemd/upstart/openrc)](init.md)\n \n License\n ---------------------\n-Distributed under the [MIT/X11 software license](http://www.opensource.org/licenses/mit-license.php).\n-This product includes software developed by the OpenSSL Project for use in the [OpenSSL Toolkit](http://www.openssl.org/). This product includes\n+Distributed under the [MIT software license](http://www.opensource.org/licenses/mit-license.php).\n+This product includes software developed by the OpenSSL Project for use in the [OpenSSL Toolkit](https://www.openssl.org/). This product includes\n cryptographic software written by Eric Young ([eay@cryptsoft.com](mailto:eay@cryptsoft.com)), and UPnP software written by Thomas Bernard."
      },
      {
        "sha": "aed3cd97e1ecd45d5f74046f6bc0cf8524dbd771",
        "filename": "doc/README_osx.md",
        "status": "added",
        "additions": 82,
        "deletions": 0,
        "changes": 82,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/README_osx.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/README_osx.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README_osx.md?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -0,0 +1,82 @@\n+Deterministic OS X Dmg Notes.\n+\n+Working OS X DMGs are created in Linux by combining a recent clang,\n+the Apple binutils (ld, ar, etc) and DMG authoring tools.\n+\n+Apple uses clang extensively for development and has upstreamed the necessary\n+functionality so that a vanilla clang can take advantage. It supports the use\n+of -F, -target, -mmacosx-version-min, and --sysroot, which are all necessary\n+when building for OS X.\n+\n+Apple's version of binutils (called cctools) contains lots of functionality\n+missing in the FSF's binutils. In addition to extra linker options for\n+frameworks and sysroots, several other tools are needed as well such as\n+install_name_tool, lipo, and nmedit. These do not build under linux, so they\n+have been patched to do so. The work here was used as a starting point:\n+[mingwandroid/toolchain4](https://github.com/mingwandroid/toolchain4).\n+\n+In order to build a working toolchain, the following source packages are needed\n+from Apple: cctools, dyld, and ld64.\n+\n+These tools inject timestamps by default, which produce non-deterministic\n+binaries. The ZERO_AR_DATE environment variable is used to disable that.\n+\n+This version of cctools has been patched to use the current version of clang's\n+headers and and its libLTO.so rather than those from llvmgcc, as it was\n+originally done in toolchain4.\n+\n+To complicate things further, all builds must target an Apple SDK. These SDKs\n+are free to download, but not redistributable.\n+To obtain it, register for a developer account, then download the [Xcode 7.3.1 dmg](https://developer.apple.com/devcenter/download.action?path=/Developer_Tools/Xcode_7.3.1/Xcode_7.3.1.dmg).\n+\n+This file is several gigabytes in size, but only a single directory inside is\n+needed:\n+```\n+Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk\n+```\n+\n+Unfortunately, the usual linux tools (7zip, hpmount, loopback mount) are incapable of opening this file.\n+To create a tarball suitable for Gitian input, mount the dmg in OS X, then create it with:\n+```\n+  $ tar -C /Volumes/Xcode/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/ -czf MacOSX10.11.sdk.tar.gz MacOSX10.11.sdk\n+```\n+\n+The Gitian descriptors build 2 sets of files: Linux tools, then Apple binaries\n+which are created using these tools. The build process has been designed to\n+avoid including the SDK's files in Gitian's outputs. All interim tarballs are\n+fully deterministic and may be freely redistributed.\n+\n+genisoimage is used to create the initial DMG. It is not deterministic as-is,\n+so it has been patched. A system genisoimage will work fine, but it will not\n+be deterministic because the file-order will change between invocations.\n+The patch can be seen here:  [theuni/osx-cross-depends](https://raw.githubusercontent.com/theuni/osx-cross-depends/master/patches/cdrtools/genisoimage.diff).\n+No effort was made to fix this cleanly, so it likely leaks memory badly. But\n+it's only used for a single invocation, so that's no real concern.\n+\n+genisoimage cannot compress DMGs, so afterwards, the 'dmg' tool from the\n+libdmg-hfsplus project is used to compress it. There are several bugs in this\n+tool and its maintainer has seemingly abandoned the project. It has been forked\n+and is available (with fixes) here: [theuni/libdmg-hfsplus](https://github.com/theuni/libdmg-hfsplus).\n+\n+The 'dmg' tool has the ability to create DMGs from scratch as well, but this\n+functionality is broken. Only the compression feature is currently used.\n+Ideally, the creation could be fixed and genisoimage would no longer be necessary.\n+\n+Background images and other features can be added to DMG files by inserting a\n+.DS_Store before creation. This is generated by the script\n+contrib/macdeploy/custom_dsstore.py.\n+\n+As of OS X Mavericks (10.9), using an Apple-blessed key to sign binaries is a\n+requirement in order to satisfy the new Gatekeeper requirements. Because this\n+private key cannot be shared, we'll have to be a bit creative in order for the\n+build process to remain somewhat deterministic. Here's how it works:\n+\n+- Builders use Gitian to create an unsigned release. This outputs an unsigned\n+  dmg which users may choose to bless and run. It also outputs an unsigned app\n+  structure in the form of a tarball, which also contains all of the tools\n+  that have been previously (deterministically) built in order to create a\n+  final dmg.\n+- The Apple keyholder uses this unsigned app to create a detached signature,\n+  using the script that is also included there. Detached signatures are available from this [repository](https://github.com/bitcoin-core/bitcoin-detached-sigs).\n+- Builders feed the unsigned app + detached signature back into Gitian. It\n+  uses the pre-built tools to recombine the pieces into a deterministic dmg."
      },
      {
        "sha": "2d1c4503c917767167a9b7033f205ed772a840c1",
        "filename": "doc/README_windows.txt",
        "status": "modified",
        "additions": 3,
        "deletions": 10,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/README_windows.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/README_windows.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README_windows.txt?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1",
        "patch": "@@ -1,12 +1,5 @@\n-Bitcoin 0.8.2 BETA\r\n-\r\n-Copyright (c) 2009-2013 Bitcoin Developers\r\n-Distributed under the MIT/X11 software license, see the accompanying\r\n-file COPYING or http://www.opensource.org/licenses/mit-license.php.\r\n-This product includes software developed by the OpenSSL Project for use in\r\n-the OpenSSL Toolkit (http://www.openssl.org/).  This product includes\r\n-cryptographic software written by Eric Young (eay@cryptsoft.com).\r\n-\r\n+Bitcoin Core 0.12.99\r\n+=====================\r\n \r\n Intro\r\n -----\r\n@@ -20,7 +13,7 @@ Setup\n -----\r\n Unpack the files into a directory and run bitcoin-qt.exe.\r\n \r\n-Bitcoin-Qt is the original Bitcoin client and it builds the backbone of the network.\r\n+Bitcoin Core is the original Bitcoin client and it builds the backbone of the network.\r\n However, it downloads and stores the entire history of Bitcoin transactions;\r\n depending on the speed of your computer and network connection, the synchronization\r\n process can take anywhere from a few hours to a day or more.\r"
      },
      {
        "sha": "bf669235e38a2c97a8cce1de70f32c7baf89ba91",
        "filename": "doc/REST-interface.md",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/REST-interface.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/REST-interface.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/REST-interface.md?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "2dd930d6a4f97debef6dba19040f471f75250b6a",
        "filename": "doc/assets-attribution.md",
        "status": "modified",
        "additions": 1,
        "deletions": 104,
        "changes": 105,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/assets-attribution.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/assets-attribution.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/assets-attribution.md?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "0ba75afcda3cbcef4c024c9acec21e35f40017c9",
        "filename": "doc/benchmarking.md",
        "status": "added",
        "additions": 30,
        "deletions": 0,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/benchmarking.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/benchmarking.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/benchmarking.md?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "62bde20d944f4ea010341f31e80a1e279f976ede",
        "filename": "doc/bips.md",
        "status": "added",
        "additions": 29,
        "deletions": 0,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/bips.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/bips.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/bips.md?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "258be86edee2372033763742c513309761248f1b",
        "filename": "doc/bitcoin_logo_doxygen.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/bitcoin_logo_doxygen.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/bitcoin_logo_doxygen.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/bitcoin_logo_doxygen.png?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "9e4eaee3f59671b4a170baa205b7608a05a519ce",
        "filename": "doc/build-msw.md",
        "status": "removed",
        "additions": 0,
        "deletions": 83,
        "changes": 83,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d980f9b7d687a1e60eecf3691b592d9806a30f4a/doc/build-msw.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d980f9b7d687a1e60eecf3691b592d9806a30f4a/doc/build-msw.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-msw.md?ref=d980f9b7d687a1e60eecf3691b592d9806a30f4a"
      },
      {
        "sha": "d923301467a7f0ae394accd19cd7362feff3120a",
        "filename": "doc/build-openbsd.md",
        "status": "added",
        "additions": 162,
        "deletions": 0,
        "changes": 162,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/build-openbsd.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/build-openbsd.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-openbsd.md?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "c9eb4225abb5c3af074e1282ccad17bc4100119a",
        "filename": "doc/build-osx.md",
        "status": "modified",
        "additions": 54,
        "deletions": 113,
        "changes": 167,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/build-osx.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/build-osx.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-osx.md?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "bd89978cc2a74270808eb95cc24d42618021e62d",
        "filename": "doc/build-unix.md",
        "status": "modified",
        "additions": 199,
        "deletions": 70,
        "changes": 269,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/build-unix.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/build-unix.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-unix.md?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "2b9233d1e140631d3bc18a311a7737981710b87d",
        "filename": "doc/build-windows.md",
        "status": "added",
        "additions": 40,
        "deletions": 0,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/build-windows.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/build-windows.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-windows.md?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "3581d7deb2d4bb7fd8e31307140696e41f0e9aa7",
        "filename": "doc/coding.md",
        "status": "removed",
        "additions": 0,
        "deletions": 94,
        "changes": 94,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d980f9b7d687a1e60eecf3691b592d9806a30f4a/doc/coding.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d980f9b7d687a1e60eecf3691b592d9806a30f4a/doc/coding.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/coding.md?ref=d980f9b7d687a1e60eecf3691b592d9806a30f4a"
      },
      {
        "sha": "95c46b05fe203e06bcbd089da482d1a00bae802d",
        "filename": "doc/developer-notes.md",
        "status": "added",
        "additions": 430,
        "deletions": 0,
        "changes": 430,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/developer-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/developer-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/developer-notes.md?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "55a5c28258c67704fb926e0ad71d448440babdaa",
        "filename": "doc/dnsseed-policy.md",
        "status": "added",
        "additions": 54,
        "deletions": 0,
        "changes": 54,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/dnsseed-policy.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/dnsseed-policy.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/dnsseed-policy.md?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "f7eca57dcb08fb3ea3e4e4d7dc274c0a33fa7431",
        "filename": "doc/files.md",
        "status": "modified",
        "additions": 11,
        "deletions": 4,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/files.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/files.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/files.md?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "7796a5fc9c151e884863c7b555ba1bb72b64ede7",
        "filename": "doc/gitian-building.md",
        "status": "added",
        "additions": 477,
        "deletions": 0,
        "changes": 477,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/gitian-building.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/gitian-building.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building.md?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "8cbb0d8adc1deda1c7c4023611b65521e054ff69",
        "filename": "doc/gitian-building/all_files_in_one_partition.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/gitian-building/all_files_in_one_partition.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/gitian-building/all_files_in_one_partition.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/all_files_in_one_partition.png?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "dd22428e176b874afb2f5b9d1b018592fb0175d0",
        "filename": "doc/gitian-building/create_new_vm.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/gitian-building/create_new_vm.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/gitian-building/create_new_vm.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/create_new_vm.png?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "5f77206b6fa8f9f0f1bbd6d02819d67bf18327ad",
        "filename": "doc/gitian-building/create_vm_file_location_size.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/gitian-building/create_vm_file_location_size.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/gitian-building/create_vm_file_location_size.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/create_vm_file_location_size.png?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "8e29816fab9e7c8f97338ed43f0893f655134a5f",
        "filename": "doc/gitian-building/create_vm_hard_disk.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/gitian-building/create_vm_hard_disk.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/gitian-building/create_vm_hard_disk.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/create_vm_hard_disk.png?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "a157211cf5baf909149e73fddfc2556305f4b123",
        "filename": "doc/gitian-building/create_vm_hard_disk_file_type.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/gitian-building/create_vm_hard_disk_file_type.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/gitian-building/create_vm_hard_disk_file_type.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/create_vm_hard_disk_file_type.png?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "5abfee5337058f9bd638a79416040bd6c6496194",
        "filename": "doc/gitian-building/create_vm_memsize.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/gitian-building/create_vm_memsize.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/gitian-building/create_vm_memsize.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/create_vm_memsize.png?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "cee16a6c63b4f2dcd592ae8c9cdc02f278fbad81",
        "filename": "doc/gitian-building/create_vm_storage_physical_hard_disk.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/gitian-building/create_vm_storage_physical_hard_disk.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/gitian-building/create_vm_storage_physical_hard_disk.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/create_vm_storage_physical_hard_disk.png?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "7cda038ae47f97ddfaa905478599cafc6572dd1f",
        "filename": "doc/gitian-building/debian_install_10_configure_clock.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/gitian-building/debian_install_10_configure_clock.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/gitian-building/debian_install_10_configure_clock.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_10_configure_clock.png?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "2a648c517f429fb937275d5444a58f4830e8eae4",
        "filename": "doc/gitian-building/debian_install_11_partition_disks.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/gitian-building/debian_install_11_partition_disks.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/gitian-building/debian_install_11_partition_disks.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_11_partition_disks.png?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "0f3acc498e3e9cc04692a9c557a8eecb5029dc25",
        "filename": "doc/gitian-building/debian_install_12_choose_disk.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/gitian-building/debian_install_12_choose_disk.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/gitian-building/debian_install_12_choose_disk.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_12_choose_disk.png?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "c8ef0b37ad6232f87593ea448beaba089b568a91",
        "filename": "doc/gitian-building/debian_install_14_finish.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/gitian-building/debian_install_14_finish.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/gitian-building/debian_install_14_finish.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_14_finish.png?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "d8de00dec68c826485034c698079e5808f7dadfd",
        "filename": "doc/gitian-building/debian_install_15_write_changes.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/gitian-building/debian_install_15_write_changes.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/gitian-building/debian_install_15_write_changes.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_15_write_changes.png?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "0bd985b38c113ed9bbbe03808ace284476680edc",
        "filename": "doc/gitian-building/debian_install_16_choose_a_mirror.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/gitian-building/debian_install_16_choose_a_mirror.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/gitian-building/debian_install_16_choose_a_mirror.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_16_choose_a_mirror.png?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "2c19919f64b62d89883dc8e1308f179978b95ca4",
        "filename": "doc/gitian-building/debian_install_18_proxy_settings.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/gitian-building/debian_install_18_proxy_settings.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/gitian-building/debian_install_18_proxy_settings.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_18_proxy_settings.png?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "5430456b14f098d9e3561653352b826d19a2c38a",
        "filename": "doc/gitian-building/debian_install_19_software_selection.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/gitian-building/debian_install_19_software_selection.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/gitian-building/debian_install_19_software_selection.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_19_software_selection.png?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "216502e1c6eb6930ce60c1a36e7476e6fb8781d9",
        "filename": "doc/gitian-building/debian_install_1_boot_menu.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/gitian-building/debian_install_1_boot_menu.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/gitian-building/debian_install_1_boot_menu.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_1_boot_menu.png?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "d853c1587188c5fd4ede94ab00f9d8b6731674ac",
        "filename": "doc/gitian-building/debian_install_20_install_grub.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/gitian-building/debian_install_20_install_grub.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/gitian-building/debian_install_20_install_grub.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_20_install_grub.png?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "493ab806a673f5c8ee47db0bb5de6af0d5042b03",
        "filename": "doc/gitian-building/debian_install_21_install_grub_bootloader.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/gitian-building/debian_install_21_install_grub_bootloader.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/gitian-building/debian_install_21_install_grub_bootloader.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_21_install_grub_bootloader.png?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "7c4445585bc9982a5015959dba70d73b01885e08",
        "filename": "doc/gitian-building/debian_install_22_finish_installation.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/gitian-building/debian_install_22_finish_installation.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/gitian-building/debian_install_22_finish_installation.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_22_finish_installation.png?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "0228ae2c011daeababc75b915a12b28b702456c0",
        "filename": "doc/gitian-building/debian_install_2_select_a_language.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/gitian-building/debian_install_2_select_a_language.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/gitian-building/debian_install_2_select_a_language.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_2_select_a_language.png?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "7b18fba97577b521944f909ed57fd251942a9eab",
        "filename": "doc/gitian-building/debian_install_3_select_location.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/gitian-building/debian_install_3_select_location.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/gitian-building/debian_install_3_select_location.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_3_select_location.png?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "8e46117de4879a6de8b276813bef12c219cb4e8b",
        "filename": "doc/gitian-building/debian_install_4_configure_keyboard.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/gitian-building/debian_install_4_configure_keyboard.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/gitian-building/debian_install_4_configure_keyboard.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_4_configure_keyboard.png?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "8e3720f24322a54ef33893e8eff95383158bf3d9",
        "filename": "doc/gitian-building/debian_install_5_configure_the_network.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/gitian-building/debian_install_5_configure_the_network.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/gitian-building/debian_install_5_configure_the_network.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_5_configure_the_network.png?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "7a986d92f48ca3755e37993d098053321109751d",
        "filename": "doc/gitian-building/debian_install_6_domain_name.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/gitian-building/debian_install_6_domain_name.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/gitian-building/debian_install_6_domain_name.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_6_domain_name.png?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "dcade119676ed7e0c0f92cff6d6a064929a07a07",
        "filename": "doc/gitian-building/debian_install_6a_set_up_root_password.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/gitian-building/debian_install_6a_set_up_root_password.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/gitian-building/debian_install_6a_set_up_root_password.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_6a_set_up_root_password.png?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "6763c6e08ade2b17f050da257a76132f916e38f5",
        "filename": "doc/gitian-building/debian_install_7_set_up_user_fullname.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/gitian-building/debian_install_7_set_up_user_fullname.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/gitian-building/debian_install_7_set_up_user_fullname.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_7_set_up_user_fullname.png?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "bb04de96d23bdaa3e29fbe19891e42b881dd0a99",
        "filename": "doc/gitian-building/debian_install_8_set_up_username.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/gitian-building/debian_install_8_set_up_username.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/gitian-building/debian_install_8_set_up_username.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_8_set_up_username.png?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "981f1181d79d0d7fe2138f036d0f1bb41ec472fa",
        "filename": "doc/gitian-building/debian_install_9_user_password.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/gitian-building/debian_install_9_user_password.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/gitian-building/debian_install_9_user_password.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_9_user_password.png?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "14cdd5ba5b52cc32fbc0da62cf3671c3679b8d79",
        "filename": "doc/gitian-building/debian_root_login.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/gitian-building/debian_root_login.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/gitian-building/debian_root_login.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_root_login.png?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "9e714fd15451837980b9d12a931c294fc962b2a2",
        "filename": "doc/gitian-building/network_settings.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/gitian-building/network_settings.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/gitian-building/network_settings.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/network_settings.png?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "9e1fa2af20f48d482892b722b7288600bece322a",
        "filename": "doc/gitian-building/port_forwarding_rules.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/gitian-building/port_forwarding_rules.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/gitian-building/port_forwarding_rules.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/port_forwarding_rules.png?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "59bc093e2c3d35bee0d1bdc50f11f2cf2a6fdafe",
        "filename": "doc/gitian-building/select_startup_disk.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/gitian-building/select_startup_disk.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/gitian-building/select_startup_disk.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/select_startup_disk.png?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "e3db5b05efcd6f93eaf114d731cf090a4882d07f",
        "filename": "doc/init.md",
        "status": "added",
        "additions": 125,
        "deletions": 0,
        "changes": 125,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/init.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/init.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/init.md?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "2d86588eb2ac6e8a65b2ad96aeeae9abbda7cb3a",
        "filename": "doc/reduce-traffic.md",
        "status": "added",
        "additions": 38,
        "deletions": 0,
        "changes": 38,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/reduce-traffic.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/reduce-traffic.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/reduce-traffic.md?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "6e4f390cbcc758261729aacb030b971e57ee9d69",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 191,
        "deletions": 2,
        "changes": 193,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "986b8832ec1893a5cc061ea14ac609e7836fbb4f",
        "filename": "doc/release-notes/release-notes-0.10.0.md",
        "status": "added",
        "additions": 762,
        "deletions": 0,
        "changes": 762,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/release-notes/release-notes-0.10.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/release-notes/release-notes-0.10.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.10.0.md?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "8f59f1f68c6905f9435b04bd029d3beef2a1f1e8",
        "filename": "doc/release-notes/release-notes-0.10.1.md",
        "status": "added",
        "additions": 143,
        "deletions": 0,
        "changes": 143,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/release-notes/release-notes-0.10.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/release-notes/release-notes-0.10.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.10.1.md?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "192ed69d299811b8b662f28905f73479266be820",
        "filename": "doc/release-notes/release-notes-0.10.2.md",
        "status": "added",
        "additions": 86,
        "deletions": 0,
        "changes": 86,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/release-notes/release-notes-0.10.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/release-notes/release-notes-0.10.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.10.2.md?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "8a110e562c45376daea69efcb0837dc879ada66a",
        "filename": "doc/release-notes/release-notes-0.10.3.md",
        "status": "added",
        "additions": 165,
        "deletions": 0,
        "changes": 165,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/release-notes/release-notes-0.10.3.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/release-notes/release-notes-0.10.3.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.10.3.md?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "38a2c1347d0b8afbfe0c0481cd90b9db06854328",
        "filename": "doc/release-notes/release-notes-0.10.4.md",
        "status": "added",
        "additions": 172,
        "deletions": 0,
        "changes": 172,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/release-notes/release-notes-0.10.4.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/release-notes/release-notes-0.10.4.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.10.4.md?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "28e49fb7ea64838f81a72424217e755a62e865c8",
        "filename": "doc/release-notes/release-notes-0.11.0.md",
        "status": "added",
        "additions": 505,
        "deletions": 0,
        "changes": 505,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/release-notes/release-notes-0.11.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/release-notes/release-notes-0.11.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.11.0.md?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "799205691ed0f26322923693c2cbf523f0b6751e",
        "filename": "doc/release-notes/release-notes-0.11.1.md",
        "status": "added",
        "additions": 172,
        "deletions": 0,
        "changes": 172,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/release-notes/release-notes-0.11.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/release-notes/release-notes-0.11.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.11.1.md?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "2351b80656542c3eee9b27c1f3fae5d3a46179d3",
        "filename": "doc/release-notes/release-notes-0.11.2.md",
        "status": "added",
        "additions": 217,
        "deletions": 0,
        "changes": 217,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/release-notes/release-notes-0.11.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/release-notes/release-notes-0.11.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.11.2.md?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "1b7bd06ece6a29a822fbf88ee31e86cc9ad152df",
        "filename": "doc/release-notes/release-notes-0.12.0.md",
        "status": "added",
        "additions": 890,
        "deletions": 0,
        "changes": 890,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/release-notes/release-notes-0.12.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/release-notes/release-notes-0.12.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.12.0.md?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "38715bc75fe27a48c253ee43474f926df7065593",
        "filename": "doc/release-notes/release-notes-0.3.12.md",
        "status": "added",
        "additions": 13,
        "deletions": 0,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/release-notes/release-notes-0.3.12.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/release-notes/release-notes-0.3.12.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.12.md?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "2b95ff233d4c2810f9a2fd58b63d528ba65bd108",
        "filename": "doc/release-notes/release-notes-0.3.13.md",
        "status": "added",
        "additions": 26,
        "deletions": 0,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/release-notes/release-notes-0.3.13.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/release-notes/release-notes-0.3.13.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.13.md?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "e73052ed9bf0ba3b9dc59f8218d2eb69ea950cac",
        "filename": "doc/release-notes/release-notes-0.3.14.md",
        "status": "added",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/release-notes/release-notes-0.3.14.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/release-notes/release-notes-0.3.14.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.14.md?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "b98052ef5934de489f2f527d50abb51be95244d6",
        "filename": "doc/release-notes/release-notes-0.3.15.md",
        "status": "added",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/release-notes/release-notes-0.3.15.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/release-notes/release-notes-0.3.15.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.15.md?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "743f84f30e9c2ad96251f433cad3468f3e591662",
        "filename": "doc/release-notes/release-notes-0.3.16.md",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/release-notes/release-notes-0.3.16.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/release-notes/release-notes-0.3.16.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.16.md?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "d3604b8f8867f1a2629d9daf971f463b291f0a5c",
        "filename": "doc/release-notes/release-notes-0.3.17.md",
        "status": "added",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/release-notes/release-notes-0.3.17.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/release-notes/release-notes-0.3.17.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.17.md?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "ab1c2e0692ffba94d66a5201ac2675c83cc60f11",
        "filename": "doc/release-notes/release-notes-0.3.18.md",
        "status": "added",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/release-notes/release-notes-0.3.18.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/release-notes/release-notes-0.3.18.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.18.md?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "fcd867561d62341eef06d84cee4edec1e1894fed",
        "filename": "doc/release-notes/release-notes-0.3.19.md",
        "status": "added",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/release-notes/release-notes-0.3.19.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/release-notes/release-notes-0.3.19.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.19.md?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "6c5682ea4e2811a2bab3691d1fff5987538d2aff",
        "filename": "doc/release-notes/release-notes-0.3.20.1.md",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/release-notes/release-notes-0.3.20.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/release-notes/release-notes-0.3.20.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.20.1.md?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "09ecb736bdb3f808a5d59ce3bf851c6c159ca6ce",
        "filename": "doc/release-notes/release-notes-0.3.20.2.md",
        "status": "added",
        "additions": 17,
        "deletions": 0,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/release-notes/release-notes-0.3.20.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/release-notes/release-notes-0.3.20.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.20.2.md?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "9ae21802ee89b6587f006c73838ccbd34deb882e",
        "filename": "doc/release-notes/release-notes-0.3.20.md",
        "status": "added",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/release-notes/release-notes-0.3.20.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/release-notes/release-notes-0.3.20.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.20.md?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "f3b6bc426470d4137edc1b477ef9c3b400e0073e",
        "filename": "doc/release-notes/release-notes-0.3.21.md",
        "status": "added",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/release-notes/release-notes-0.3.21.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/release-notes/release-notes-0.3.21.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.21.md?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "4c05e3e5e78e309770aed4974be1707a8d44d255",
        "filename": "doc/release-notes/release-notes-0.3.22.md",
        "status": "added",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/release-notes/release-notes-0.3.22.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/release-notes/release-notes-0.3.22.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.22.md?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "c1d520e4925d6c57ed72f0c8a34f29a250f71efe",
        "filename": "doc/release-notes/release-notes-0.3.23.md",
        "status": "added",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/release-notes/release-notes-0.3.23.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/release-notes/release-notes-0.3.23.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.23.md?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "d35ac66f2c8a07e8912426c10e2e4c158680ad21",
        "filename": "doc/release-notes/release-notes-0.3.24.md",
        "status": "added",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/release-notes/release-notes-0.3.24.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/release-notes/release-notes-0.3.24.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.24.md?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "145072a369d85a83b312100cf4d7089a591c1bfc",
        "filename": "doc/release-notes/release-notes-0.4.0.md",
        "status": "added",
        "additions": 70,
        "deletions": 0,
        "changes": 70,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/release-notes/release-notes-0.4.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/release-notes/release-notes-0.4.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.4.0.md?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "ac471a8d7feddfd3235a1a1b7973cb06f2e768ed",
        "filename": "doc/release-notes/release-notes-0.4.1.md",
        "status": "added",
        "additions": 38,
        "deletions": 0,
        "changes": 38,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/release-notes/release-notes-0.4.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/release-notes/release-notes-0.4.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.4.1.md?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "6c5682ea4e2811a2bab3691d1fff5987538d2aff",
        "filename": "doc/release-notes/release-notes-0.4.2.md",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/release-notes/release-notes-0.4.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/release-notes/release-notes-0.4.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.4.2.md?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "fea1ae75b5e829cf38271ad529262d806d314303",
        "filename": "doc/release-notes/release-notes-0.4.3.md",
        "status": "added",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/release-notes/release-notes-0.4.3.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/release-notes/release-notes-0.4.3.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.4.3.md?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "f435ba71604df49ca4cc6dbcd67fcd512498f186",
        "filename": "doc/release-notes/release-notes-0.4.4.md",
        "status": "added",
        "additions": 30,
        "deletions": 0,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/release-notes/release-notes-0.4.4.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/release-notes/release-notes-0.4.4.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.4.4.md?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "6c5682ea4e2811a2bab3691d1fff5987538d2aff",
        "filename": "doc/release-notes/release-notes-0.4.5.md",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/release-notes/release-notes-0.4.5.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/release-notes/release-notes-0.4.5.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.4.5.md?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "07c5e4b6948a5da619c6e82277d9aa4e0a629109",
        "filename": "doc/release-notes/release-notes-0.4.6.md",
        "status": "added",
        "additions": 37,
        "deletions": 0,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/release-notes/release-notes-0.4.6.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/release-notes/release-notes-0.4.6.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.4.6.md?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "baa409b5f2fc97464ffb2087a12bbd77e67f6e01",
        "filename": "doc/release-notes/release-notes-0.5.0.md",
        "status": "added",
        "additions": 70,
        "deletions": 0,
        "changes": 70,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/release-notes/release-notes-0.5.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/release-notes/release-notes-0.5.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.5.0.md?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "d56bff6d956bc65b55a13da46d3525dc4cefd26f",
        "filename": "doc/release-notes/release-notes-0.5.1.md",
        "status": "added",
        "additions": 43,
        "deletions": 0,
        "changes": 43,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/release-notes/release-notes-0.5.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/release-notes/release-notes-0.5.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.5.1.md?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "f79816668d8ccd9e379a8e98713e298d86c7079d",
        "filename": "doc/release-notes/release-notes-0.5.2.md",
        "status": "added",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/release-notes/release-notes-0.5.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/release-notes/release-notes-0.5.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.5.2.md?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "7c84c53325c8f638b309771c3c6df1dfa79743d1",
        "filename": "doc/release-notes/release-notes-0.5.3.md",
        "status": "added",
        "additions": 42,
        "deletions": 0,
        "changes": 42,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/release-notes/release-notes-0.5.3.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/release-notes/release-notes-0.5.3.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.5.3.md?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "fcde3ac4e3a1b1e09fa6c3a72cf17c923cfa20b3",
        "filename": "doc/release-notes/release-notes-0.5.4.md",
        "status": "added",
        "additions": 39,
        "deletions": 0,
        "changes": 39,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/release-notes/release-notes-0.5.4.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/release-notes/release-notes-0.5.4.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.5.4.md?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "75ebc3e6b62269aff03d48828913807eabca071a",
        "filename": "doc/release-notes/release-notes-0.5.5.md",
        "status": "added",
        "additions": 37,
        "deletions": 0,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/release-notes/release-notes-0.5.5.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/release-notes/release-notes-0.5.5.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.5.5.md?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "1963a362591566d6aadd24b8634dbfe589e68eb9",
        "filename": "doc/release-notes/release-notes-0.6.0.md",
        "status": "added",
        "additions": 138,
        "deletions": 0,
        "changes": 138,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/release-notes/release-notes-0.6.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/release-notes/release-notes-0.6.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.6.0.md?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "ef7966ecd6809ec3a0805bfca30b9a52ab8e33c7",
        "filename": "doc/release-notes/release-notes-0.6.1.md",
        "status": "added",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/release-notes/release-notes-0.6.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/release-notes/release-notes-0.6.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.6.1.md?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "bb85fb23a0414b84a75bec16cf8f26b06f8d3777",
        "filename": "doc/release-notes/release-notes-0.6.2.md",
        "status": "added",
        "additions": 50,
        "deletions": 0,
        "changes": 50,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/release-notes/release-notes-0.6.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/release-notes/release-notes-0.6.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.6.2.md?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "c27f607b5c58e3c2f16bb49bbcf7d8122e40af85",
        "filename": "doc/release-notes/release-notes-0.6.3.md",
        "status": "added",
        "additions": 29,
        "deletions": 0,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/release-notes/release-notes-0.6.3.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/release-notes/release-notes-0.6.3.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.6.3.md?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      },
      {
        "sha": "d33a58f99ffea8145816480f24a7bada55cdd574",
        "filename": "doc/release-notes/release-notes-0.7.0.md",
        "status": "added",
        "additions": 169,
        "deletions": 0,
        "changes": 169,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/release-notes/release-notes-0.7.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec8e5021d7e0e3a66344d367b033c5fdd1d854a1/doc/release-notes/release-notes-0.7.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.7.0.md?ref=ec8e5021d7e0e3a66344d367b033c5fdd1d854a1"
      }
    ]
  }
]