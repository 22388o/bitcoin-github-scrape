[
  {
    "sha": "188ca75e5fe4837d16241446558c7566912f67b2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxODhjYTc1ZTVmZTQ4MzdkMTYyNDE0NDY1NThjNzU2NjkxMmY2N2Iy",
    "commit": {
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@gmail.com",
        "date": "2018-05-21T17:44:23Z"
      },
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@gmail.com",
        "date": "2019-04-26T17:46:07Z"
      },
      "message": "disable HAVE_THREAD_LOCAL on unreliable platforms\n\nNote that this doesn't affect anything unless\nDEBUG_LOCKCONTENTION is defined.\n\nSee discussions here:\n\n- https://github.com/bitcoin/bitcoin/pull/11722#pullrequestreview-79322658\n- https://github.com/bitcoin/bitcoin/pull/13168#issuecomment-387181155",
      "tree": {
        "sha": "427a1f376adb5e0eba1b7fc3bbe7b861894afb3a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/427a1f376adb5e0eba1b7fc3bbe7b861894afb3a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/188ca75e5fe4837d16241446558c7566912f67b2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/188ca75e5fe4837d16241446558c7566912f67b2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/188ca75e5fe4837d16241446558c7566912f67b2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/188ca75e5fe4837d16241446558c7566912f67b2/comments",
    "author": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "89e8df167432101ed1b9251a8ebf30fe0d4daa45",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/89e8df167432101ed1b9251a8ebf30fe0d4daa45",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/89e8df167432101ed1b9251a8ebf30fe0d4daa45"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 17,
      "deletions": 2
    },
    "files": [
      {
        "sha": "302fc639d100083a79b2a2628977c7ef119fc853",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 17,
        "deletions": 2,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/188ca75e5fe4837d16241446558c7566912f67b2/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/188ca75e5fe4837d16241446558c7566912f67b2/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=188ca75e5fe4837d16241446558c7566912f67b2",
        "patch": "@@ -827,8 +827,23 @@ AC_LINK_IFELSE([AC_LANG_SOURCE([\n   }\n   ])],\n   [\n-    AC_DEFINE(HAVE_THREAD_LOCAL,1,[Define if thread_local is supported.])\n-    AC_MSG_RESULT(yes)\n+   case $host in\n+     *mingw*)\n+        # mingw32's implementation of thread_local has also been shown to behave\n+        # erroneously under concurrent usage; see:\n+        # https://gist.github.com/jamesob/fe9a872051a88b2025b1aa37bfa98605\n+        AC_MSG_RESULT(no)\n+        ;;\n+      *darwin*)\n+        # TODO enable thread_local on later versions of Darwin where it is\n+        # supported (per https://stackoverflow.com/a/29929949)\n+        AC_MSG_RESULT(no)\n+        ;;\n+      *)\n+        AC_DEFINE(HAVE_THREAD_LOCAL,1,[Define if thread_local is supported.])\n+        AC_MSG_RESULT(yes)\n+        ;;\n+    esac\n   ],\n   [\n     AC_MSG_RESULT(no)"
      }
    ]
  },
  {
    "sha": "ae5f2b6a6cc7b2260e9dff99c1bf378922e0e988",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphZTVmMmI2YTZjYzdiMjI2MGU5ZGZmOTljMWJmMzc4OTIyZTBlOTg4",
    "commit": {
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@gmail.com",
        "date": "2018-06-13T18:50:59Z"
      },
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@gmail.com",
        "date": "2019-04-29T17:42:25Z"
      },
      "message": "threads: introduce util/threadnames, refactor thread naming\n\nThis work is prerequisite to attaching thread names to log lines and deadlock\ndebug utilities. This code allows setting of an \"internal\" threadname per\nthread on platforms where thread_local is available.\n\nThis commit also moves RenameThread() out of a more general module and adds a\nnumeric suffix to disambiguate between threads with the same name. It\nexplicitly names a few main threads using the new util::ThreadRename().",
      "tree": {
        "sha": "6646e4d0936dc2217a10b3972fb9250f5beaadc9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6646e4d0936dc2217a10b3972fb9250f5beaadc9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ae5f2b6a6cc7b2260e9dff99c1bf378922e0e988",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ae5f2b6a6cc7b2260e9dff99c1bf378922e0e988",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ae5f2b6a6cc7b2260e9dff99c1bf378922e0e988",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ae5f2b6a6cc7b2260e9dff99c1bf378922e0e988/comments",
    "author": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "188ca75e5fe4837d16241446558c7566912f67b2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/188ca75e5fe4837d16241446558c7566912f67b2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/188ca75e5fe4837d16241446558c7566912f67b2"
      }
    ],
    "stats": {
      "total": 139,
      "additions": 103,
      "deletions": 36
    },
    "files": [
      {
        "sha": "0fefa34cd838ace5d14ba0767e8b24f2c1c2ab3a",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ae5f2b6a6cc7b2260e9dff99c1bf378922e0e988/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ae5f2b6a6cc7b2260e9dff99c1bf378922e0e988/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=ae5f2b6a6cc7b2260e9dff99c1bf378922e0e988",
        "patch": "@@ -210,6 +210,7 @@ BITCOIN_CORE_H = \\\n   util/memory.h \\\n   util/moneystr.h \\\n   util/rbf.h \\\n+  util/threadnames.h \\\n   util/time.h \\\n   util/url.h \\\n   util/validation.h \\\n@@ -491,6 +492,7 @@ libbitcoin_util_a_SOURCES = \\\n   util/system.cpp \\\n   util/moneystr.cpp \\\n   util/rbf.cpp \\\n+  util/threadnames.cpp \\\n   util/strencodings.cpp \\\n   util/time.cpp \\\n   util/url.cpp \\"
      },
      {
        "sha": "b31f86cdd9bdc92d4bb30fea8c152a30bb2b018f",
        "filename": "src/bitcoind.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ae5f2b6a6cc7b2260e9dff99c1bf378922e0e988/src/bitcoind.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ae5f2b6a6cc7b2260e9dff99c1bf378922e0e988/src/bitcoind.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoind.cpp?ref=ae5f2b6a6cc7b2260e9dff99c1bf378922e0e988",
        "patch": "@@ -19,6 +19,7 @@\n #include <util/system.h>\n #include <httpserver.h>\n #include <httprpc.h>\n+#include <util/threadnames.h>\n #include <util/strencodings.h>\n #include <walletinitinterface.h>\n \n@@ -64,6 +65,8 @@ static bool AppInit(int argc, char* argv[])\n \n     bool fRet = false;\n \n+    util::ThreadRename(\"init\");\n+\n     //\n     // Parameters\n     //"
      },
      {
        "sha": "63639fa3e0c150e6561e39f375280762ab9f93da",
        "filename": "src/httpserver.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 5,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ae5f2b6a6cc7b2260e9dff99c1bf378922e0e988/src/httpserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ae5f2b6a6cc7b2260e9dff99c1bf378922e0e988/src/httpserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httpserver.cpp?ref=ae5f2b6a6cc7b2260e9dff99c1bf378922e0e988",
        "patch": "@@ -6,6 +6,7 @@\n \n #include <chainparamsbase.h>\n #include <compat.h>\n+#include <util/threadnames.h>\n #include <util/system.h>\n #include <util/strencodings.h>\n #include <netbase.h>\n@@ -17,7 +18,7 @@\n #include <memory>\n #include <stdio.h>\n #include <stdlib.h>\n-#include <string.h>\n+#include <string>\n \n #include <sys/types.h>\n #include <sys/stat.h>\n@@ -284,7 +285,7 @@ static void http_reject_request_cb(struct evhttp_request* req, void*)\n /** Event dispatcher thread */\n static bool ThreadHTTP(struct event_base* base)\n {\n-    RenameThread(\"bitcoin-http\");\n+    util::ThreadRename(\"http\");\n     LogPrint(BCLog::HTTP, \"Entering http event loop\\n\");\n     event_base_dispatch(base);\n     // Event loop will be interrupted by InterruptHTTPServer()\n@@ -335,9 +336,9 @@ static bool HTTPBindAddresses(struct evhttp* http)\n }\n \n /** Simple wrapper to set thread name and run work queue */\n-static void HTTPWorkQueueRun(WorkQueue<HTTPClosure>* queue)\n+static void HTTPWorkQueueRun(WorkQueue<HTTPClosure>* queue, int worker_num)\n {\n-    RenameThread(\"bitcoin-httpworker\");\n+    util::ThreadRename(strprintf(\"httpworker.%i\", worker_num));\n     queue->Run();\n }\n \n@@ -430,7 +431,7 @@ void StartHTTPServer()\n     threadHTTP = std::thread(ThreadHTTP, eventBase);\n \n     for (int i = 0; i < rpcThreads; i++) {\n-        g_thread_http_workers.emplace_back(HTTPWorkQueueRun, workQueue);\n+        g_thread_http_workers.emplace_back(HTTPWorkQueueRun, workQueue, i);\n     }\n }\n "
      },
      {
        "sha": "408a133e4ef457d07843613ca09f53cb88faaf58",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ae5f2b6a6cc7b2260e9dff99c1bf378922e0e988/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ae5f2b6a6cc7b2260e9dff99c1bf378922e0e988/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=ae5f2b6a6cc7b2260e9dff99c1bf378922e0e988",
        "patch": "@@ -42,6 +42,7 @@\n #include <script/sigcache.h>\n #include <scheduler.h>\n #include <shutdown.h>\n+#include <util/threadnames.h>\n #include <timedata.h>\n #include <txdb.h>\n #include <txmempool.h>\n@@ -208,7 +209,7 @@ void Shutdown(InitInterfaces& interfaces)\n     /// for example if the data directory was found to be locked.\n     /// Be sure that anything that writes files or flushes caches only does this if the respective\n     /// module was initialized.\n-    RenameThread(\"bitcoin-shutoff\");\n+    util::ThreadRename(\"shutoff\");\n     mempool.AddTransactionsUpdated(1);\n \n     StopHTTPRPC();\n@@ -669,7 +670,7 @@ static void CleanupBlockRevFiles()\n static void ThreadImport(std::vector<fs::path> vImportFiles)\n {\n     const CChainParams& chainparams = Params();\n-    RenameThread(\"bitcoin-loadblk\");\n+    util::ThreadRename(\"loadblk\");\n     ScheduleBatchPriority();\n \n     {\n@@ -1305,7 +1306,7 @@ bool AppInitMain(InitInterfaces& interfaces)\n     LogPrintf(\"Using %u threads for script verification\\n\", nScriptCheckThreads);\n     if (nScriptCheckThreads) {\n         for (int i=0; i<nScriptCheckThreads-1; i++)\n-            threadGroup.create_thread(&ThreadScriptCheck);\n+            threadGroup.create_thread([i]() { return ThreadScriptCheck(i); });\n     }\n \n     // Start the lightweight task scheduler thread"
      },
      {
        "sha": "81255aaae9d7f540c15e8aa6a7b37f141d6afa49",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ae5f2b6a6cc7b2260e9dff99c1bf378922e0e988/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ae5f2b6a6cc7b2260e9dff99c1bf378922e0e988/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=ae5f2b6a6cc7b2260e9dff99c1bf378922e0e988",
        "patch": "@@ -30,6 +30,7 @@\n #include <interfaces/handler.h>\n #include <interfaces/node.h>\n #include <noui.h>\n+#include <util/threadnames.h>\n #include <rpc/server.h>\n #include <ui_interface.h>\n #include <uint256.h>\n@@ -149,6 +150,7 @@ void BitcoinCore::initialize()\n     try\n     {\n         qDebug() << __func__ << \": Running initialization in thread\";\n+        util::ThreadRename(\"qt-init\");\n         bool rv = m_node.appInitMain();\n         Q_EMIT initializeResult(rv);\n     } catch (const std::exception& e) {\n@@ -423,6 +425,7 @@ int GuiMain(int argc, char* argv[])\n     std::tie(argc, argv) = winArgs.get();\n #endif\n     SetupEnvironment();\n+    util::ThreadRename(\"main\");\n \n     std::unique_ptr<interfaces::Node> node = interfaces::MakeNode();\n "
      },
      {
        "sha": "6b671b240071b23003eafe6ab6bd4d28b6b4571f",
        "filename": "src/test/setup_common.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ae5f2b6a6cc7b2260e9dff99c1bf378922e0e988/src/test/setup_common.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ae5f2b6a6cc7b2260e9dff99c1bf378922e0e988/src/test/setup_common.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/setup_common.cpp?ref=ae5f2b6a6cc7b2260e9dff99c1bf378922e0e988",
        "patch": "@@ -94,7 +94,7 @@ TestingSetup::TestingSetup(const std::string& chainName) : BasicTestingSetup(cha\n \n     nScriptCheckThreads = 3;\n     for (int i = 0; i < nScriptCheckThreads - 1; i++)\n-        threadGroup.create_thread(&ThreadScriptCheck);\n+        threadGroup.create_thread([i]() { return ThreadScriptCheck(i); });\n \n     g_banman = MakeUnique<BanMan>(GetDataDir() / \"banlist.dat\", nullptr, DEFAULT_MISBEHAVING_BANTIME);\n     g_connman = MakeUnique<CConnman>(0x1337, 0x1337); // Deterministic randomness for tests."
      },
      {
        "sha": "efd35bed556537d378dc94f1853c58ce61354213",
        "filename": "src/util/system.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 20,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ae5f2b6a6cc7b2260e9dff99c1bf378922e0e988/src/util/system.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ae5f2b6a6cc7b2260e9dff99c1bf378922e0e988/src/util/system.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/system.cpp?ref=ae5f2b6a6cc7b2260e9dff99c1bf378922e0e988",
        "patch": "@@ -60,10 +60,6 @@\n #include <shlobj.h>\n #endif\n \n-#ifdef HAVE_SYS_PRCTL_H\n-#include <sys/prctl.h>\n-#endif\n-\n #ifdef HAVE_MALLOPT_ARENA_MAX\n #include <malloc.h>\n #endif\n@@ -1137,22 +1133,6 @@ void runCommand(const std::string& strCommand)\n         LogPrintf(\"runCommand error: system(%s) returned %d\\n\", strCommand, nErr);\n }\n \n-void RenameThread(const char* name)\n-{\n-#if defined(PR_SET_NAME)\n-    // Only the first 15 characters are used (16 - NUL terminator)\n-    ::prctl(PR_SET_NAME, name, 0, 0, 0);\n-#elif (defined(__FreeBSD__) || defined(__OpenBSD__) || defined(__DragonFly__))\n-    pthread_set_name_np(pthread_self(), name);\n-\n-#elif defined(MAC_OSX)\n-    pthread_setname_np(name);\n-#else\n-    // Prevent warnings for unused parameters...\n-    (void)name;\n-#endif\n-}\n-\n void SetupEnvironment()\n {\n #ifdef HAVE_MALLOPT_ARENA_MAX"
      },
      {
        "sha": "1a83cb67b147e528116016c9b5f102a2f1c32b63",
        "filename": "src/util/system.h",
        "status": "modified",
        "additions": 2,
        "deletions": 4,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ae5f2b6a6cc7b2260e9dff99c1bf378922e0e988/src/util/system.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ae5f2b6a6cc7b2260e9dff99c1bf378922e0e988/src/util/system.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/system.h?ref=ae5f2b6a6cc7b2260e9dff99c1bf378922e0e988",
        "patch": "@@ -20,6 +20,7 @@\n #include <fs.h>\n #include <logging.h>\n #include <sync.h>\n+#include <util/threadnames.h>\n #include <tinyformat.h>\n #include <util/memory.h>\n #include <util/time.h>\n@@ -325,15 +326,12 @@ std::string HelpMessageOpt(const std::string& option, const std::string& message\n  */\n int GetNumCores();\n \n-void RenameThread(const char* name);\n-\n /**\n  * .. and a wrapper that just calls func once\n  */\n template <typename Callable> void TraceThread(const char* name,  Callable func)\n {\n-    std::string s = strprintf(\"bitcoin-%s\", name);\n-    RenameThread(s.c_str());\n+    util::ThreadRename(name);\n     try\n     {\n         LogPrintf(\"%s thread start\\n\", name);"
      },
      {
        "sha": "7b0d744aecad9672f3bd06c9bbe3e7ee7550dbf2",
        "filename": "src/util/threadnames.cpp",
        "status": "added",
        "additions": 57,
        "deletions": 0,
        "changes": 57,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ae5f2b6a6cc7b2260e9dff99c1bf378922e0e988/src/util/threadnames.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ae5f2b6a6cc7b2260e9dff99c1bf378922e0e988/src/util/threadnames.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/threadnames.cpp?ref=ae5f2b6a6cc7b2260e9dff99c1bf378922e0e988",
        "patch": "@@ -0,0 +1,57 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <atomic>\n+#include <thread>\n+\n+#include <util/threadnames.h>\n+\n+#ifdef HAVE_SYS_PRCTL_H\n+#include <sys/prctl.h> // For prctl, PR_SET_NAME, PR_GET_NAME\n+#endif\n+\n+//! Set the thread's name at the process level. Does not affect the\n+//! internal name.\n+static void SetThreadName(const char* name)\n+{\n+#if defined(PR_SET_NAME)\n+    // Only the first 15 characters are used (16 - NUL terminator)\n+    ::prctl(PR_SET_NAME, name, 0, 0, 0);\n+#elif (defined(__FreeBSD__) || defined(__OpenBSD__) || defined(__DragonFly__))\n+    pthread_set_name_np(pthread_self(), name);\n+#elif defined(MAC_OSX)\n+    pthread_setname_np(name);\n+#else\n+    // Prevent warnings for unused parameters...\n+    (void)name;\n+#endif\n+}\n+\n+// If we have thread_local, just keep thread ID and name in a thread_local\n+// global.\n+#if defined(HAVE_THREAD_LOCAL)\n+\n+static thread_local std::string g_thread_name;\n+const std::string& util::ThreadGetInternalName() { return g_thread_name; }\n+//! Set the in-memory internal name for this thread. Does not affect the process\n+//! name.\n+static void SetInternalName(std::string name) { g_thread_name = std::move(name); }\n+\n+// Without thread_local available, don't handle internal name at all.\n+#else\n+\n+static const std::string empty_string;\n+const std::string& util::ThreadGetInternalName() { return empty_string; }\n+static void SetInternalName(std::string name) { }\n+#endif\n+\n+void util::ThreadRename(std::string&& name)\n+{\n+    SetThreadName((\"bitcoin-\" + name).c_str());\n+    SetInternalName(std::move(name));\n+}"
      },
      {
        "sha": "aaf07b9bf873fa07d1f124b891cd198b6b19d60c",
        "filename": "src/util/threadnames.h",
        "status": "added",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ae5f2b6a6cc7b2260e9dff99c1bf378922e0e988/src/util/threadnames.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ae5f2b6a6cc7b2260e9dff99c1bf378922e0e988/src/util/threadnames.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/threadnames.h?ref=ae5f2b6a6cc7b2260e9dff99c1bf378922e0e988",
        "patch": "@@ -0,0 +1,21 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_UTIL_THREADNAMES_H\n+#define BITCOIN_UTIL_THREADNAMES_H\n+\n+#include <string>\n+\n+namespace util {\n+//! Rename a thread both in terms of an internal (in-memory) name as well\n+//! as its system thread name.\n+void ThreadRename(std::string&&);\n+\n+//! Get the thread's internal (in-memory) name; used e.g. for identification in\n+//! logging.\n+const std::string& ThreadGetInternalName();\n+\n+} // namespace util\n+\n+#endif // BITCOIN_UTIL_THREADNAMES_H"
      },
      {
        "sha": "208cf2c3f557e088602625e03761cbbcf17f9d53",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ae5f2b6a6cc7b2260e9dff99c1bf378922e0e988/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ae5f2b6a6cc7b2260e9dff99c1bf378922e0e988/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=ae5f2b6a6cc7b2260e9dff99c1bf378922e0e988",
        "patch": "@@ -48,6 +48,7 @@\n \n #include <future>\n #include <sstream>\n+#include <string>\n \n #include <boost/algorithm/string/replace.hpp>\n #include <boost/thread.hpp>\n@@ -1654,8 +1655,8 @@ static bool WriteUndoDataForBlock(const CBlockUndo& blockundo, CValidationState&\n \n static CCheckQueue<CScriptCheck> scriptcheckqueue(128);\n \n-void ThreadScriptCheck() {\n-    RenameThread(\"bitcoin-scriptch\");\n+void ThreadScriptCheck(int worker_num) {\n+    util::ThreadRename(strprintf(\"scriptch.%i\", worker_num));\n     scriptcheckqueue.Thread();\n }\n "
      },
      {
        "sha": "82151b1349f17e4a56de9aa7b258ca590613e736",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ae5f2b6a6cc7b2260e9dff99c1bf378922e0e988/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ae5f2b6a6cc7b2260e9dff99c1bf378922e0e988/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=ae5f2b6a6cc7b2260e9dff99c1bf378922e0e988",
        "patch": "@@ -255,7 +255,7 @@ bool LoadChainTip(const CChainParams& chainparams) EXCLUSIVE_LOCKS_REQUIRED(cs_m\n /** Unload database information */\n void UnloadBlockIndex();\n /** Run an instance of the script checking thread */\n-void ThreadScriptCheck();\n+void ThreadScriptCheck(int worker_num);\n /** Check whether we are doing an initial block download (synchronizing from disk or network) */\n bool IsInitialBlockDownload();\n /** Retrieve a transaction (from memory pool, or from disk, if possible) */"
      }
    ]
  },
  {
    "sha": "ddd95ccb80da3d5cdf905192e23d54f303e6d83f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkZGQ5NWNjYjgwZGEzZDVjZGY5MDUxOTJlMjNkNTRmMzAzZTZkODNm",
    "commit": {
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@gmail.com",
        "date": "2018-05-05T18:11:46Z"
      },
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@gmail.com",
        "date": "2019-04-29T17:43:01Z"
      },
      "message": "tests: add threadutil tests",
      "tree": {
        "sha": "47ba6e61558a66c5a8ad8c82f2c7cb2241184f16",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/47ba6e61558a66c5a8ad8c82f2c7cb2241184f16"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ddd95ccb80da3d5cdf905192e23d54f303e6d83f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ddd95ccb80da3d5cdf905192e23d54f303e6d83f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ddd95ccb80da3d5cdf905192e23d54f303e6d83f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ddd95ccb80da3d5cdf905192e23d54f303e6d83f/comments",
    "author": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ae5f2b6a6cc7b2260e9dff99c1bf378922e0e988",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ae5f2b6a6cc7b2260e9dff99c1bf378922e0e988",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ae5f2b6a6cc7b2260e9dff99c1bf378922e0e988"
      }
    ],
    "stats": {
      "total": 74,
      "additions": 74,
      "deletions": 0
    },
    "files": [
      {
        "sha": "1144ca8a78a0f5bdac2725752ecdc73519f4862f",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddd95ccb80da3d5cdf905192e23d54f303e6d83f/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddd95ccb80da3d5cdf905192e23d54f303e6d83f/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=ddd95ccb80da3d5cdf905192e23d54f303e6d83f",
        "patch": "@@ -138,6 +138,7 @@ BITCOIN_TESTS =\\\n   test/skiplist_tests.cpp \\\n   test/streams_tests.cpp \\\n   test/sync_tests.cpp \\\n+  test/util_threadnames_tests.cpp \\\n   test/timedata_tests.cpp \\\n   test/torcontrol_tests.cpp \\\n   test/transaction_tests.cpp \\"
      },
      {
        "sha": "71c0168ca34bb75e7bf7e54abec002b2982d28ba",
        "filename": "src/test/util_threadnames_tests.cpp",
        "status": "added",
        "additions": 73,
        "deletions": 0,
        "changes": 73,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddd95ccb80da3d5cdf905192e23d54f303e6d83f/src/test/util_threadnames_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddd95ccb80da3d5cdf905192e23d54f303e6d83f/src/test/util_threadnames_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util_threadnames_tests.cpp?ref=ddd95ccb80da3d5cdf905192e23d54f303e6d83f",
        "patch": "@@ -0,0 +1,73 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <util/threadnames.h>\n+#include <test/setup_common.h>\n+\n+#include <thread>\n+#include <vector>\n+#include <set>\n+#include <mutex>\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_FIXTURE_TEST_SUITE(util_threadnames_tests, BasicTestingSetup)\n+\n+const std::string TEST_THREAD_NAME_BASE = \"test_thread.\";\n+\n+/**\n+ * Run a bunch of threads to all call util::ThreadRename.\n+ *\n+ * @return the set of name each thread has after attempted renaming.\n+ */\n+std::set<std::string> RenameEnMasse(int num_threads)\n+{\n+    std::vector<std::thread> threads;\n+    std::set<std::string> names;\n+    std::mutex lock;\n+\n+    auto RenameThisThread = [&](int i) {\n+        util::ThreadRename(TEST_THREAD_NAME_BASE + std::to_string(i));\n+        std::lock_guard<std::mutex> guard(lock);\n+        names.insert(util::ThreadGetInternalName());\n+    };\n+\n+    for (int i = 0; i < num_threads; ++i) {\n+        threads.push_back(std::thread(RenameThisThread, i));\n+    }\n+\n+    for (std::thread& thread : threads) thread.join();\n+\n+    return names;\n+}\n+\n+/**\n+ * Rename a bunch of threads with the same basename (expect_multiple=true), ensuring suffixes are\n+ * applied properly.\n+ */\n+BOOST_AUTO_TEST_CASE(util_threadnames_test_rename_threaded)\n+{\n+    BOOST_CHECK_EQUAL(util::ThreadGetInternalName(), \"\");\n+\n+#if !defined(HAVE_THREAD_LOCAL)\n+    // This test doesn't apply to platforms where we don't have thread_local.\n+    return;\n+#endif\n+\n+    std::set<std::string> names = RenameEnMasse(100);\n+\n+    BOOST_CHECK_EQUAL(names.size(), 100);\n+\n+    // Names \"test_thread.[n]\" should exist for n = [0, 99]\n+    for (int i = 0; i < 100; ++i) {\n+        BOOST_CHECK(names.find(TEST_THREAD_NAME_BASE + std::to_string(i)) != names.end());\n+    }\n+\n+}\n+\n+BOOST_AUTO_TEST_SUITE_END()"
      }
    ]
  },
  {
    "sha": "383b186c28979e42adbdd257a40114c0e3f14a83",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozODNiMTg2YzI4OTc5ZTQyYWRiZGQyNTdhNDAxMTRjMGUzZjE0YTgz",
    "commit": {
      "author": {
        "name": "James O'Beirne",
        "email": "james@chaincode.com",
        "date": "2018-05-05T18:14:43Z"
      },
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@gmail.com",
        "date": "2019-04-29T17:49:15Z"
      },
      "message": "threads: prefix log messages with thread names\n\nIntroduce a new flag (`-logthreadnames`) which allows toggling\nof this behavior.",
      "tree": {
        "sha": "f18370d19913f53d3e8a0f698c5afad7ec71b691",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f18370d19913f53d3e8a0f698c5afad7ec71b691"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/383b186c28979e42adbdd257a40114c0e3f14a83",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/383b186c28979e42adbdd257a40114c0e3f14a83",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/383b186c28979e42adbdd257a40114c0e3f14a83",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/383b186c28979e42adbdd257a40114c0e3f14a83/comments",
    "author": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ddd95ccb80da3d5cdf905192e23d54f303e6d83f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ddd95ccb80da3d5cdf905192e23d54f303e6d83f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ddd95ccb80da3d5cdf905192e23d54f303e6d83f"
      }
    ],
    "stats": {
      "total": 36,
      "additions": 26,
      "deletions": 10
    },
    "files": [
      {
        "sha": "a1df31f2502a0609334eb6204714707ddc626b80",
        "filename": "doc/release-notes-15849.md",
        "status": "added",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/383b186c28979e42adbdd257a40114c0e3f14a83/doc/release-notes-15849.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/383b186c28979e42adbdd257a40114c0e3f14a83/doc/release-notes-15849.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes-15849.md?ref=383b186c28979e42adbdd257a40114c0e3f14a83",
        "patch": "@@ -0,0 +1,6 @@\n+Thread names in logs\n+--------------------\n+\n+On platforms supporting `thread_local`, log lines can be prefixed with the name\n+of the thread that caused the log. To enable this behavior, use\n+`-logthreadnames=1`."
      },
      {
        "sha": "84fb313e96dce6933b042d01199e3657d2e4a220",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/383b186c28979e42adbdd257a40114c0e3f14a83/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/383b186c28979e42adbdd257a40114c0e3f14a83/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=383b186c28979e42adbdd257a40114c0e3f14a83",
        "patch": "@@ -508,6 +508,7 @@ void SetupServerArgs()\n     gArgs.AddArg(\"-debugexclude=<category>\", strprintf(\"Exclude debugging information for a category. Can be used in conjunction with -debug=1 to output debug logs for all categories except one or more specified categories.\"), false, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-logips\", strprintf(\"Include IP addresses in debug output (default: %u)\", DEFAULT_LOGIPS), false, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-logtimestamps\", strprintf(\"Prepend debug output with timestamp (default: %u)\", DEFAULT_LOGTIMESTAMPS), false, OptionsCategory::DEBUG_TEST);\n+    gArgs.AddArg(\"-logthreadnames\", strprintf(\"Prepend debug output with name of the originating thread (only available on platforms supporting thread_local) (default: %u)\", DEFAULT_LOGTHREADNAMES), false, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-logtimemicros\", strprintf(\"Add microsecond precision to debug timestamps (default: %u)\", DEFAULT_LOGTIMEMICROS), true, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-mocktime=<n>\", \"Replace actual time with <n> seconds since epoch (default: 0)\", true, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-maxsigcachesize=<n>\", strprintf(\"Limit sum of signature cache and script execution cache sizes to <n> MiB (default: %u)\", DEFAULT_MAX_SIG_CACHE_SIZE), true, OptionsCategory::DEBUG_TEST);\n@@ -866,6 +867,7 @@ void InitLogging()\n     LogInstance().m_print_to_console = gArgs.GetBoolArg(\"-printtoconsole\", !gArgs.GetBoolArg(\"-daemon\", false));\n     LogInstance().m_log_timestamps = gArgs.GetBoolArg(\"-logtimestamps\", DEFAULT_LOGTIMESTAMPS);\n     LogInstance().m_log_time_micros = gArgs.GetBoolArg(\"-logtimemicros\", DEFAULT_LOGTIMEMICROS);\n+    LogInstance().m_log_threadnames = gArgs.GetBoolArg(\"-logthreadnames\", DEFAULT_LOGTHREADNAMES);\n \n     fLogIPs = gArgs.GetBoolArg(\"-logips\", DEFAULT_LOGIPS);\n "
      },
      {
        "sha": "3eda4995dbd0c3768f4263d4b4e03a58e2f2b3ea",
        "filename": "src/logging.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 10,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/383b186c28979e42adbdd257a40114c0e3f14a83/src/logging.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/383b186c28979e42adbdd257a40114c0e3f14a83/src/logging.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/logging.cpp?ref=383b186c28979e42adbdd257a40114c0e3f14a83",
        "patch": "@@ -4,8 +4,11 @@\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #include <logging.h>\n+#include <util/threadnames.h>\n #include <util/time.h>\n \n+#include <mutex>\n+\n const char * const DEFAULT_DEBUGLOGFILE = \"debug.log\";\n \n BCLog::Logger& LogInstance()\n@@ -174,7 +177,7 @@ std::vector<CLogCategoryActive> ListActiveLogCategories()\n     return ret;\n }\n \n-std::string BCLog::Logger::LogTimestampStr(const std::string &str)\n+std::string BCLog::Logger::LogTimestampStr(const std::string& str)\n {\n     std::string strStamped;\n \n@@ -196,29 +199,32 @@ std::string BCLog::Logger::LogTimestampStr(const std::string &str)\n     } else\n         strStamped = str;\n \n-    if (!str.empty() && str[str.size()-1] == '\\n')\n-        m_started_new_line = true;\n-    else\n-        m_started_new_line = false;\n-\n     return strStamped;\n }\n \n void BCLog::Logger::LogPrintStr(const std::string &str)\n {\n-    std::string strTimestamped = LogTimestampStr(str);\n+    std::string str_prefixed = str;\n+\n+    if (m_log_threadnames && m_started_new_line) {\n+        str_prefixed.insert(0, \"[\" + util::ThreadGetInternalName() + \"] \");\n+    }\n+\n+    str_prefixed = LogTimestampStr(str_prefixed);\n+\n+    m_started_new_line = !str.empty() && str[str.size()-1] == '\\n';\n \n     if (m_print_to_console) {\n         // print to console\n-        fwrite(strTimestamped.data(), 1, strTimestamped.size(), stdout);\n+        fwrite(str_prefixed.data(), 1, str_prefixed.size(), stdout);\n         fflush(stdout);\n     }\n     if (m_print_to_file) {\n         std::lock_guard<std::mutex> scoped_lock(m_file_mutex);\n \n         // buffer if we haven't opened the log yet\n         if (m_fileout == nullptr) {\n-            m_msgs_before_open.push_back(strTimestamped);\n+            m_msgs_before_open.push_back(str_prefixed);\n         }\n         else\n         {\n@@ -232,7 +238,7 @@ void BCLog::Logger::LogPrintStr(const std::string &str)\n                     m_fileout = new_fileout;\n                 }\n             }\n-            FileWriteStr(strTimestamped, m_fileout);\n+            FileWriteStr(str_prefixed, m_fileout);\n         }\n     }\n }"
      },
      {
        "sha": "e399d4c30751c655c6d8fb2467941e71f6e97310",
        "filename": "src/logging.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/383b186c28979e42adbdd257a40114c0e3f14a83/src/logging.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/383b186c28979e42adbdd257a40114c0e3f14a83/src/logging.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/logging.h?ref=383b186c28979e42adbdd257a40114c0e3f14a83",
        "patch": "@@ -19,6 +19,7 @@\n static const bool DEFAULT_LOGTIMEMICROS = false;\n static const bool DEFAULT_LOGIPS        = false;\n static const bool DEFAULT_LOGTIMESTAMPS = true;\n+static const bool DEFAULT_LOGTHREADNAMES = false;\n extern const char * const DEFAULT_DEBUGLOGFILE;\n \n extern bool fLogIPs;\n@@ -81,6 +82,7 @@ namespace BCLog {\n \n         bool m_log_timestamps = DEFAULT_LOGTIMESTAMPS;\n         bool m_log_time_micros = DEFAULT_LOGTIMEMICROS;\n+        bool m_log_threadnames = DEFAULT_LOGTHREADNAMES;\n \n         fs::path m_file_path;\n         std::atomic<bool> m_reopen_file{false};"
      }
    ]
  },
  {
    "sha": "8722e54e56fd959fd4ff2321b36a7640dee440c5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4NzIyZTU0ZTU2ZmQ5NTlmZDRmZjIzMjFiMzZhNzY0MGRlZTQ0MGM1",
    "commit": {
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@gmail.com",
        "date": "2018-05-05T18:15:30Z"
      },
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@gmail.com",
        "date": "2019-04-29T17:51:59Z"
      },
      "message": "threads: add thread names to deadlock debugging message\n\nAlso refactor CLockLocation to use an initialization list.",
      "tree": {
        "sha": "62147122fcb15c0e854fd67bcf8571bb80512de1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/62147122fcb15c0e854fd67bcf8571bb80512de1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8722e54e56fd959fd4ff2321b36a7640dee440c5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8722e54e56fd959fd4ff2321b36a7640dee440c5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8722e54e56fd959fd4ff2321b36a7640dee440c5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8722e54e56fd959fd4ff2321b36a7640dee440c5/comments",
    "author": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "383b186c28979e42adbdd257a40114c0e3f14a83",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/383b186c28979e42adbdd257a40114c0e3f14a83",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/383b186c28979e42adbdd257a40114c0e3f14a83"
      }
    ],
    "stats": {
      "total": 29,
      "additions": 19,
      "deletions": 10
    },
    "files": [
      {
        "sha": "e7c0a6f9bc913420c3ebbadcfab0dd9614aa6f1b",
        "filename": "src/sync.cpp",
        "status": "modified",
        "additions": 19,
        "deletions": 10,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8722e54e56fd959fd4ff2321b36a7640dee440c5/src/sync.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8722e54e56fd959fd4ff2321b36a7640dee440c5/src/sync.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/sync.cpp?ref=8722e54e56fd959fd4ff2321b36a7640dee440c5",
        "patch": "@@ -3,9 +3,11 @@\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #include <sync.h>\n+#include <tinyformat.h>\n \n #include <logging.h>\n #include <util/strencodings.h>\n+#include <util/threadnames.h>\n \n #include <stdio.h>\n \n@@ -37,23 +39,30 @@ void PrintLockContention(const char* pszName, const char* pszFile, int nLine)\n //\n \n struct CLockLocation {\n-    CLockLocation(const char* pszName, const char* pszFile, int nLine, bool fTryIn)\n-    {\n-        mutexName = pszName;\n-        sourceFile = pszFile;\n-        sourceLine = nLine;\n-        fTry = fTryIn;\n-    }\n+    CLockLocation(\n+        const char* pszName,\n+        const char* pszFile,\n+        int nLine,\n+        bool fTryIn,\n+        const std::string& thread_name)\n+        : fTry(fTryIn),\n+          mutexName(pszName),\n+          sourceFile(pszFile),\n+          m_thread_name(thread_name),\n+          sourceLine(nLine) {}\n \n     std::string ToString() const\n     {\n-        return mutexName + \"  \" + sourceFile + \":\" + itostr(sourceLine) + (fTry ? \" (TRY)\" : \"\");\n+        return tfm::format(\n+            \"%s %s:%s%s (in thread %s)\",\n+            mutexName, sourceFile, itostr(sourceLine), (fTry ? \" (TRY)\" : \"\"), m_thread_name);\n     }\n \n private:\n     bool fTry;\n     std::string mutexName;\n     std::string sourceFile;\n+    const std::string& m_thread_name;\n     int sourceLine;\n };\n \n@@ -125,7 +134,7 @@ static void push_lock(void* c, const CLockLocation& locklocation)\n         std::pair<void*, void*> p1 = std::make_pair(i.first, c);\n         if (lockdata.lockorders.count(p1))\n             continue;\n-        lockdata.lockorders[p1] = g_lockstack;\n+        lockdata.lockorders.emplace(p1, g_lockstack);\n \n         std::pair<void*, void*> p2 = std::make_pair(c, i.first);\n         lockdata.invlockorders.insert(p2);\n@@ -141,7 +150,7 @@ static void pop_lock()\n \n void EnterCritical(const char* pszName, const char* pszFile, int nLine, void* cs, bool fTry)\n {\n-    push_lock(cs, CLockLocation(pszName, pszFile, nLine, fTry));\n+    push_lock(cs, CLockLocation(pszName, pszFile, nLine, fTry, util::ThreadGetInternalName()));\n }\n \n void LeaveCritical()"
      }
    ]
  }
]