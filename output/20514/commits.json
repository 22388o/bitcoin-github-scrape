[
  {
    "sha": "8ed2c72a063576b5c114cd006c47369a72e9a61b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4ZWQyYzcyYTA2MzU3NmI1YzExNGNkMDA2YzQ3MzY5YTcyZTlhNjFi",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-11-26T21:59:44Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-11-26T21:59:44Z"
      },
      "message": "Use addrv2 serialization in anchors.dat",
      "tree": {
        "sha": "9a50fe9cbdf77664a236ecd018eb631739812302",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9a50fe9cbdf77664a236ecd018eb631739812302"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8ed2c72a063576b5c114cd006c47369a72e9a61b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8ed2c72a063576b5c114cd006c47369a72e9a61b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8ed2c72a063576b5c114cd006c47369a72e9a61b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8ed2c72a063576b5c114cd006c47369a72e9a61b/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "50091592dd875a1c94030dbed74112b003732d68",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/50091592dd875a1c94030dbed74112b003732d68",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/50091592dd875a1c94030dbed74112b003732d68"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 7,
      "deletions": 7
    },
    "files": [
      {
        "sha": "7d27aec668dbf0171a083627f8ab8459b87f1c96",
        "filename": "src/addrdb.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8ed2c72a063576b5c114cd006c47369a72e9a61b/src/addrdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8ed2c72a063576b5c114cd006c47369a72e9a61b/src/addrdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrdb.cpp?ref=8ed2c72a063576b5c114cd006c47369a72e9a61b",
        "patch": "@@ -23,7 +23,7 @@ bool SerializeDB(Stream& stream, const Data& data)\n {\n     // Write and commit header, data\n     try {\n-        CHashWriter hasher(SER_DISK, CLIENT_VERSION);\n+        CHashWriter hasher(SER_DISK, stream.GetVersion());\n         stream << Params().MessageStart() << data;\n         hasher << Params().MessageStart() << data;\n         stream << hasher.GetHash();\n@@ -35,7 +35,7 @@ bool SerializeDB(Stream& stream, const Data& data)\n }\n \n template <typename Data>\n-bool SerializeFileDB(const std::string& prefix, const fs::path& path, const Data& data)\n+bool SerializeFileDB(const std::string& prefix, const fs::path& path, const Data& data, int version = CLIENT_VERSION)\n {\n     // Generate random temporary filename\n     uint16_t randv = 0;\n@@ -45,7 +45,7 @@ bool SerializeFileDB(const std::string& prefix, const fs::path& path, const Data\n     // open temp output file, and associate with CAutoFile\n     fs::path pathTmp = GetDataDir() / tmpfn;\n     FILE *file = fsbridge::fopen(pathTmp, \"wb\");\n-    CAutoFile fileout(file, SER_DISK, CLIENT_VERSION);\n+    CAutoFile fileout(file, SER_DISK, version);\n     if (fileout.IsNull()) {\n         fileout.fclose();\n         remove(pathTmp);\n@@ -106,11 +106,11 @@ bool DeserializeDB(Stream& stream, Data& data, bool fCheckSum = true)\n }\n \n template <typename Data>\n-bool DeserializeFileDB(const fs::path& path, Data& data)\n+bool DeserializeFileDB(const fs::path& path, Data& data, int version = CLIENT_VERSION)\n {\n     // open input file, and associate with CAutoFile\n     FILE *file = fsbridge::fopen(path, \"rb\");\n-    CAutoFile filein(file, SER_DISK, CLIENT_VERSION);\n+    CAutoFile filein(file, SER_DISK, version);\n     if (filein.IsNull())\n         return error(\"%s: Failed to open file %s\", __func__, path.string());\n \n@@ -161,13 +161,13 @@ bool CAddrDB::Read(CAddrMan& addr, CDataStream& ssPeers)\n void DumpAnchors(const fs::path& anchors_db_path, const std::vector<CAddress>& anchors)\n {\n     LOG_TIME_SECONDS(strprintf(\"Flush %d outbound block-relay-only peer addresses to anchors.dat\", anchors.size()));\n-    SerializeFileDB(\"anchors\", anchors_db_path, anchors);\n+    SerializeFileDB(\"anchors\", anchors_db_path, anchors, ADDRV2_FORMAT);\n }\n \n std::vector<CAddress> ReadAnchors(const fs::path& anchors_db_path)\n {\n     std::vector<CAddress> anchors;\n-    if (DeserializeFileDB(anchors_db_path, anchors)) {\n+    if (DeserializeFileDB(anchors_db_path, anchors, ADDRV2_FORMAT)) {\n         LogPrintf(\"Loaded %i addresses from %s\\n\", anchors.size(), anchors_db_path.filename());\n     } else {\n         anchors.clear();"
      }
    ]
  }
]