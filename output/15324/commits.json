[
  {
    "sha": "fae169c95e09ddf068dcaebc8170c4f41b02cf66",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWUxNjljOTVlMDlkZGYwNjhkY2FlYmM4MTcwYzRmNDFiMDJjZjY2",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-02-01T22:06:32Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-02-02T19:12:01Z"
      },
      "message": "test: Make bloom tests deterministic",
      "tree": {
        "sha": "3d3072afbe6fafd6711dd6085001a8320662c28d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3d3072afbe6fafd6711dd6085001a8320662c28d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fae169c95e09ddf068dcaebc8170c4f41b02cf66",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGcBAABCgAGBQJcVeuBAAoJEM4rdWl+aaVI+NsL/jzZez6g7JictplR5CTVP5hL\nPSrxHVPUWqlyuFHhoVdx7t3IhfC1PdtaLmeRmflUHReMJ1wLuCaDi/Ap9VlVcodq\n9S69KJgxXPV/rl7FJh4YdwE3ULDSIIr0iYaml6yS6BA8CJn+bvgZeydLNWFURoRX\nV4Fp+eCbma1x7igRHmy90vIAoDphbUUxcrFYvKEL/ot+gYg4MPXpkzEnCiYFbGW7\nj2Ior2qj6oatd0IcPvPK0MWDMdwEVPkhhD+ikV0tuhhnq+5+IcvPN1yqaPJO3bIe\nfSV1RH5AKFMBqbhQPVGGeoD0aPjKBRvzRujseSJaduz6gncXHQTD8gXG0zhZmQHK\n54csrnDXUCSxo7nPHekTtoFKIiVIEQrSoxNFgEkaLTuotShyuLLI9cnJPORzx5xs\nxZccNCx2NHBTWc460b0eSyMCODTh8SzWH5+WXfeesrL7ynS3YfrKH862I5VHnI/v\nRH3z0CStexWmQrOhIFjvZgC7GWhJCz/kUQfmgOL1aw==\n=id6Y\n-----END PGP SIGNATURE-----",
        "payload": "tree 3d3072afbe6fafd6711dd6085001a8320662c28d\nparent 3e38d4087379edd1c0730d058902f527d5da6358\nauthor MarcoFalke <falke.marco@gmail.com> 1549058792 -0500\ncommitter MarcoFalke <falke.marco@gmail.com> 1549134721 -0500\n\ntest: Make bloom tests deterministic\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fae169c95e09ddf068dcaebc8170c4f41b02cf66",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fae169c95e09ddf068dcaebc8170c4f41b02cf66",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fae169c95e09ddf068dcaebc8170c4f41b02cf66/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3e38d4087379edd1c0730d058902f527d5da6358",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3e38d4087379edd1c0730d058902f527d5da6358",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3e38d4087379edd1c0730d058902f527d5da6358"
      }
    ],
    "stats": {
      "total": 37,
      "additions": 26,
      "deletions": 11
    },
    "files": [
      {
        "sha": "3277c34d3f2c133fa9bd04bdc523861378b6c244",
        "filename": "src/random.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fae169c95e09ddf068dcaebc8170c4f41b02cf66/src/random.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fae169c95e09ddf068dcaebc8170c4f41b02cf66/src/random.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/random.cpp?ref=fae169c95e09ddf068dcaebc8170c4f41b02cf66",
        "patch": "@@ -514,9 +514,11 @@ void GetRandBytes(unsigned char* buf, int num) noexcept { ProcRand(buf, num, RNG\n void GetStrongRandBytes(unsigned char* buf, int num) noexcept { ProcRand(buf, num, RNGLevel::SLOW); }\n void RandAddSeedSleep() { ProcRand(nullptr, 0, RNGLevel::SLEEP); }\n \n+bool g_mock_deterministic_tests{false};\n+\n uint64_t GetRand(uint64_t nMax) noexcept\n {\n-    return FastRandomContext().randrange(nMax);\n+    return FastRandomContext(g_mock_deterministic_tests).randrange(nMax);\n }\n \n int GetRandInt(int nMax) noexcept"
      },
      {
        "sha": "f58dd20efc4d9b0bd5af2bc6c827769a1bcf02c3",
        "filename": "src/test/bloom_tests.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 10,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fae169c95e09ddf068dcaebc8170c4f41b02cf66/src/test/bloom_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fae169c95e09ddf068dcaebc8170c4f41b02cf66/src/test/bloom_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/bloom_tests.cpp?ref=fae169c95e09ddf068dcaebc8170c4f41b02cf66",
        "patch": "@@ -461,6 +461,9 @@ static std::vector<unsigned char> RandomData()\n \n BOOST_AUTO_TEST_CASE(rolling_bloom)\n {\n+    SeedInsecureRand(/* deterministic */ true);\n+    g_mock_deterministic_tests = true;\n+\n     // last-100-entry, 1% false positive:\n     CRollingBloomFilter rb1(100, 0.01);\n \n@@ -485,12 +488,8 @@ BOOST_AUTO_TEST_CASE(rolling_bloom)\n         if (rb1.contains(RandomData()))\n             ++nHits;\n     }\n-    // Run test_bitcoin with --log_level=message to see BOOST_TEST_MESSAGEs:\n-    BOOST_TEST_MESSAGE(\"RollingBloomFilter got \" << nHits << \" false positives (~100 expected)\");\n-\n-    // Insanely unlikely to get a fp count outside this range:\n-    BOOST_CHECK(nHits > 25);\n-    BOOST_CHECK(nHits < 175);\n+    // Expect about 100 hits\n+    BOOST_CHECK_EQUAL(nHits, 75);\n \n     BOOST_CHECK(rb1.contains(data[DATASIZE-1]));\n     rb1.reset();\n@@ -517,10 +516,8 @@ BOOST_AUTO_TEST_CASE(rolling_bloom)\n         if (rb1.contains(data[i]))\n             ++nHits;\n     }\n-    // Expect about 5 false positives, more than 100 means\n-    // something is definitely broken.\n-    BOOST_TEST_MESSAGE(\"RollingBloomFilter got \" << nHits << \" false positives (~5 expected)\");\n-    BOOST_CHECK(nHits < 100);\n+    // Expect about 5 false positives\n+    BOOST_CHECK_EQUAL(nHits, 6);\n \n     // last-1000-entry, 0.01% false positive:\n     CRollingBloomFilter rb2(1000, 0.001);\n@@ -531,6 +528,7 @@ BOOST_AUTO_TEST_CASE(rolling_bloom)\n     for (int i = 0; i < DATASIZE; i++) {\n         BOOST_CHECK(rb2.contains(data[i]));\n     }\n+    g_mock_deterministic_tests = false;\n }\n \n BOOST_AUTO_TEST_SUITE_END()"
      },
      {
        "sha": "8194070aba477f1dc2d63276e938f2362fa72e58",
        "filename": "src/test/random_tests.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fae169c95e09ddf068dcaebc8170c4f41b02cf66/src/test/random_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fae169c95e09ddf068dcaebc8170c4f41b02cf66/src/test/random_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/random_tests.cpp?ref=fae169c95e09ddf068dcaebc8170c4f41b02cf66",
        "patch": "@@ -21,9 +21,14 @@ BOOST_AUTO_TEST_CASE(osrandom_tests)\n BOOST_AUTO_TEST_CASE(fastrandom_tests)\n {\n     // Check that deterministic FastRandomContexts are deterministic\n+    g_mock_deterministic_tests = true;\n     FastRandomContext ctx1(true);\n     FastRandomContext ctx2(true);\n \n+    for (int i = 10; i > 0; --i) {\n+        BOOST_CHECK_EQUAL(GetRand(std::numeric_limits<uint64_t>::max()), uint64_t{10393729187455219830U});\n+        BOOST_CHECK_EQUAL(GetRandInt(std::numeric_limits<int>::max()), int{769702006});\n+    }\n     BOOST_CHECK_EQUAL(ctx1.rand32(), ctx2.rand32());\n     BOOST_CHECK_EQUAL(ctx1.rand32(), ctx2.rand32());\n     BOOST_CHECK_EQUAL(ctx1.rand64(), ctx2.rand64());\n@@ -38,6 +43,11 @@ BOOST_AUTO_TEST_CASE(fastrandom_tests)\n     BOOST_CHECK(ctx1.randbytes(50) == ctx2.randbytes(50));\n \n     // Check that a nondeterministic ones are not\n+    g_mock_deterministic_tests = false;\n+    for (int i = 10; i > 0; --i) {\n+        BOOST_CHECK(GetRand(std::numeric_limits<uint64_t>::max()) != uint64_t{10393729187455219830U});\n+        BOOST_CHECK(GetRandInt(std::numeric_limits<int>::max()) != int{769702006});\n+    }\n     {\n         FastRandomContext ctx3, ctx4;\n         BOOST_CHECK(ctx3.rand64() != ctx4.rand64()); // extremely unlikely to be equal"
      },
      {
        "sha": "4a06845683d52ef59430595aa3a292bdfd9cff43",
        "filename": "src/test/test_bitcoin.h",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fae169c95e09ddf068dcaebc8170c4f41b02cf66/src/test/test_bitcoin.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fae169c95e09ddf068dcaebc8170c4f41b02cf66/src/test/test_bitcoin.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/test_bitcoin.h?ref=fae169c95e09ddf068dcaebc8170c4f41b02cf66",
        "patch": "@@ -35,6 +35,11 @@ std::ostream& operator<<(typename std::enable_if<std::is_enum<T>::value, std::os\n  */\n extern FastRandomContext g_insecure_rand_ctx;\n \n+/**\n+ * Flag to make GetRand in random.h return the same number\n+ */\n+extern bool g_mock_deterministic_tests;\n+\n static inline void SeedInsecureRand(bool deterministic = false)\n {\n     g_insecure_rand_ctx = FastRandomContext(deterministic);"
      }
    ]
  }
]