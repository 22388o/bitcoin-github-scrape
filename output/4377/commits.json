[
  {
    "sha": "c2c02f3fa99385f5a5be722fda6f71522c93bdaa",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjMmMwMmYzZmE5OTM4NWY1YTViZTcyMmZkYTZmNzE1MjJjOTNiZGFh",
    "commit": {
      "author": {
        "name": "jtimon",
        "email": "jtimon@monetize.io",
        "date": "2014-06-28T12:03:06Z"
      },
      "committer": {
        "name": "jtimon",
        "email": "jtimon@monetize.io",
        "date": "2014-08-23T11:21:50Z"
      },
      "message": "Move UpdateTime to pow",
      "tree": {
        "sha": "608b76aa8e523a4118f569518bf5150e85d77c48",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/608b76aa8e523a4118f569518bf5150e85d77c48"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c2c02f3fa99385f5a5be722fda6f71522c93bdaa",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c2c02f3fa99385f5a5be722fda6f71522c93bdaa",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c2c02f3fa99385f5a5be722fda6f71522c93bdaa",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c2c02f3fa99385f5a5be722fda6f71522c93bdaa/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "92b3d3630d6d63305bec136a23c7be4cb2bb2652",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/92b3d3630d6d63305bec136a23c7be4cb2bb2652",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/92b3d3630d6d63305bec136a23c7be4cb2bb2652"
      }
    ],
    "stats": {
      "total": 48,
      "additions": 15,
      "deletions": 33
    },
    "files": [
      {
        "sha": "fab5af73bb90cbe671392ff189f261bff1a43491",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 28,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c2c02f3fa99385f5a5be722fda6f71522c93bdaa/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c2c02f3fa99385f5a5be722fda6f71522c93bdaa/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=c2c02f3fa99385f5a5be722fda6f71522c93bdaa",
        "patch": "@@ -1419,25 +1419,6 @@ void static InvalidBlockFound(CBlockIndex *pindex, const CValidationState &state\n     }\n }\n \n-void UpdateTime(CBlockHeader& block, const CBlockIndex* pindexPrev)\n-{\n-    block.nTime = max(pindexPrev->GetMedianTimePast()+1, GetAdjustedTime());\n-\n-    // Updating time can change work required on testnet:\n-    if (Params().AllowMinDifficultyBlocks())\n-        block.nBits = GetNextWorkRequired(pindexPrev, &block);\n-}\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n void UpdateCoins(const CTransaction& tx, CValidationState &state, CCoinsViewCache &inputs, CTxUndo &txundo, int nHeight)\n {\n     bool ret;\n@@ -3291,15 +3272,6 @@ bool LoadExternalBlockFile(FILE* fileIn, CDiskBlockPos *dbp)\n     return nLoaded > 0;\n }\n \n-\n-\n-\n-\n-\n-\n-\n-\n-\n //////////////////////////////////////////////////////////////////////////////\n //\n // CAlert"
      },
      {
        "sha": "adb7d68bcf33aff8c056e9da4a2f0494ce29944b",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c2c02f3fa99385f5a5be722fda6f71522c93bdaa/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c2c02f3fa99385f5a5be722fda6f71522c93bdaa/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=c2c02f3fa99385f5a5be722fda6f71522c93bdaa",
        "patch": "@@ -163,8 +163,6 @@ bool GetTransaction(const uint256 &hash, CTransaction &tx, uint256 &hashBlock, b\n bool ActivateBestChain(CValidationState &state);\n int64_t GetBlockValue(int nHeight, int64_t nFees);\n \n-void UpdateTime(CBlockHeader& block, const CBlockIndex* pindexPrev);\n-\n /** Create a new block index entry for a given block hash */\n CBlockIndex * InsertBlockIndex(uint256 hash);\n /** Verify a signature */"
      },
      {
        "sha": "97b74695a7a719f6f75149d023e3ede47514c392",
        "filename": "src/miner.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c2c02f3fa99385f5a5be722fda6f71522c93bdaa/src/miner.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c2c02f3fa99385f5a5be722fda6f71522c93bdaa/src/miner.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.cpp?ref=c2c02f3fa99385f5a5be722fda6f71522c93bdaa",
        "patch": "@@ -305,7 +305,7 @@ CBlockTemplate* CreateNewBlock(const CScript& scriptPubKeyIn)\n \n         // Fill in header\n         pblock->hashPrevBlock  = pindexPrev->GetBlockHash();\n-        UpdateTime(*pblock, pindexPrev);\n+        UpdateTime(pblock, pindexPrev);\n         pblock->nBits          = GetNextWorkRequired(pindexPrev, pblock);\n         pblock->nNonce         = 0;\n         pblocktemplate->vTxSigOps[0] = GetLegacySigOpCount(pblock->vtx[0]);\n@@ -538,7 +538,7 @@ void static BitcoinMiner(CWallet *pwallet)\n                     break;\n \n                 // Update nTime every few seconds\n-                UpdateTime(*pblock, pindexPrev);\n+                UpdateTime(pblock, pindexPrev);\n                 if (Params().AllowMinDifficultyBlocks())\n                 {\n                     // Changing pblock->nTime can change work required on testnet:"
      },
      {
        "sha": "a99c582d7d1dde227c08509d9ee172c2c98940c2",
        "filename": "src/pow.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c2c02f3fa99385f5a5be722fda6f71522c93bdaa/src/pow.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c2c02f3fa99385f5a5be722fda6f71522c93bdaa/src/pow.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/pow.cpp?ref=c2c02f3fa99385f5a5be722fda6f71522c93bdaa",
        "patch": "@@ -8,6 +8,7 @@\n #include \"chainparams.h\"\n #include \"core.h\"\n #include \"main.h\"\n+#include \"timedata.h\"\n #include \"uint256.h\"\n \n unsigned int GetNextWorkRequired(const CBlockIndex* pindexLast, const CBlockHeader *pblock)\n@@ -117,3 +118,12 @@ unsigned int ComputeMinWork(unsigned int nBase, int64_t nTime)\n         bnResult = bnLimit;\n     return bnResult.GetCompact();\n }\n+\n+void UpdateTime(CBlockHeader* pblock, const CBlockIndex* pindexPrev)\n+{\n+    pblock->nTime = std::max(pindexPrev->GetMedianTimePast()+1, GetAdjustedTime());\n+\n+    // Updating time can change work required on testnet:\n+    if (Params().AllowMinDifficultyBlocks())\n+        pblock->nBits = GetNextWorkRequired(pindexPrev, pblock);\n+}"
      },
      {
        "sha": "988062178827eb22b907a73bb308211765789136",
        "filename": "src/pow.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c2c02f3fa99385f5a5be722fda6f71522c93bdaa/src/pow.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c2c02f3fa99385f5a5be722fda6f71522c93bdaa/src/pow.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/pow.h?ref=c2c02f3fa99385f5a5be722fda6f71522c93bdaa",
        "patch": "@@ -20,4 +20,6 @@ bool CheckProofOfWork(uint256 hash, unsigned int nBits);\n /** Calculate the minimum amount of work a received block needs, without knowing its direct parent */\n unsigned int ComputeMinWork(unsigned int nBase, int64_t nTime);\n \n+void UpdateTime(CBlockHeader* block, const CBlockIndex* pindexPrev);\n+\n #endif"
      },
      {
        "sha": "429d7892782b00c951babd1cfd9ff63d809bb4ba",
        "filename": "src/rpcmining.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c2c02f3fa99385f5a5be722fda6f71522c93bdaa/src/rpcmining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c2c02f3fa99385f5a5be722fda6f71522c93bdaa/src/rpcmining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcmining.cpp?ref=c2c02f3fa99385f5a5be722fda6f71522c93bdaa",
        "patch": "@@ -457,7 +457,7 @@ Value getblocktemplate(const Array& params, bool fHelp)\n     CBlock* pblock = &pblocktemplate->block; // pointer for convenience\n \n     // Update nTime\n-    UpdateTime(*pblock, pindexPrev);\n+    UpdateTime(pblock, pindexPrev);\n     pblock->nNonce = 0;\n \n     Array transactions;"
      }
    ]
  },
  {
    "sha": "b343c1a1e34f851e70649ad1f49855a7d878f9ef",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiMzQzYzFhMWUzNGY4NTFlNzA2NDlhZDFmNDk4NTVhN2Q4NzhmOWVm",
    "commit": {
      "author": {
        "name": "jtimon",
        "email": "jtimon@monetize.io",
        "date": "2014-07-05T10:05:33Z"
      },
      "committer": {
        "name": "jtimon",
        "email": "jtimon@monetize.io",
        "date": "2014-08-23T11:21:51Z"
      },
      "message": "Move CBlockIndex::GetBlockWork() to pow::GetProofIncrement(nBits)",
      "tree": {
        "sha": "b7c15e98c8a631420c186dd0acec51af4a02a061",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b7c15e98c8a631420c186dd0acec51af4a02a061"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b343c1a1e34f851e70649ad1f49855a7d878f9ef",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b343c1a1e34f851e70649ad1f49855a7d878f9ef",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b343c1a1e34f851e70649ad1f49855a7d878f9ef",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b343c1a1e34f851e70649ad1f49855a7d878f9ef/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c2c02f3fa99385f5a5be722fda6f71522c93bdaa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c2c02f3fa99385f5a5be722fda6f71522c93bdaa",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c2c02f3fa99385f5a5be722fda6f71522c93bdaa"
      }
    ],
    "stats": {
      "total": 30,
      "additions": 19,
      "deletions": 11
    },
    "files": [
      {
        "sha": "a15a0e16d0789357a7704f9219f3a96789ff904a",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 2,
        "deletions": 11,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b343c1a1e34f851e70649ad1f49855a7d878f9ef/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b343c1a1e34f851e70649ad1f49855a7d878f9ef/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=b343c1a1e34f851e70649ad1f49855a7d878f9ef",
        "patch": "@@ -14,6 +14,7 @@\n #include \"coins.h\"\n #include \"core.h\"\n #include \"net.h\"\n+#include \"pow.h\"\n #include \"script.h\"\n #include \"sync.h\"\n #include \"txmempool.h\"\n@@ -792,17 +793,7 @@ class CBlockIndex\n \n     uint256 GetBlockWork() const\n     {\n-        uint256 bnTarget;\n-        bool fNegative;\n-        bool fOverflow;\n-        bnTarget.SetCompact(nBits, &fNegative, &fOverflow);\n-        if (fNegative || fOverflow || bnTarget == 0)\n-            return 0;\n-        // We need to compute 2**256 / (bnTarget+1), but we can't represent 2**256\n-        // as it's too large for a uint256. However, as 2**256 is at least as large\n-        // as bnTarget+1, it is equal to ((2**256 - bnTarget - 1) / (bnTarget+1)) + 1,\n-        // or ~bnTarget / (nTarget+1) + 1.\n-        return (~bnTarget / (bnTarget + 1)) + 1;\n+        return GetProofIncrement(nBits);\n     }\n \n     enum { nMedianTimeSpan=11 };"
      },
      {
        "sha": "d76928bda2a33be18f8651f9ebb67621956e0201",
        "filename": "src/pow.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b343c1a1e34f851e70649ad1f49855a7d878f9ef/src/pow.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b343c1a1e34f851e70649ad1f49855a7d878f9ef/src/pow.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/pow.cpp?ref=b343c1a1e34f851e70649ad1f49855a7d878f9ef",
        "patch": "@@ -127,3 +127,18 @@ void UpdateTime(CBlockHeader* pblock, const CBlockIndex* pindexPrev)\n     if (Params().AllowMinDifficultyBlocks())\n         pblock->nBits = GetNextWorkRequired(pindexPrev, pblock);\n }\n+\n+uint256 GetProofIncrement(unsigned int nBits)\n+{\n+    uint256 bnTarget;\n+    bool fNegative;\n+    bool fOverflow;\n+    bnTarget.SetCompact(nBits, &fNegative, &fOverflow);\n+    if (fNegative || fOverflow || bnTarget == 0)\n+        return 0;\n+    // We need to compute 2**256 / (bnTarget+1), but we can't represent 2**256\n+    // as it's too large for a uint256. However, as 2**256 is at least as large\n+    // as bnTarget+1, it is equal to ((2**256 - bnTarget - 1) / (bnTarget+1)) + 1,\n+    // or ~bnTarget / (nTarget+1) + 1.\n+    return (~bnTarget / (bnTarget + 1)) + 1;\n+}"
      },
      {
        "sha": "6aea713fc460090a74a033fb31b4a3761c81b177",
        "filename": "src/pow.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b343c1a1e34f851e70649ad1f49855a7d878f9ef/src/pow.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b343c1a1e34f851e70649ad1f49855a7d878f9ef/src/pow.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/pow.h?ref=b343c1a1e34f851e70649ad1f49855a7d878f9ef",
        "patch": "@@ -22,4 +22,6 @@ unsigned int ComputeMinWork(unsigned int nBase, int64_t nTime);\n \n void UpdateTime(CBlockHeader* block, const CBlockIndex* pindexPrev);\n \n+uint256 GetProofIncrement(unsigned int nBits);\n+\n #endif"
      }
    ]
  },
  {
    "sha": "654871d43677947d124673c9e0dd2984f0d3ca61",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2NTQ4NzFkNDM2Nzc5NDdkMTI0NjczYzllMGRkMjk4NGYwZDNjYTYx",
    "commit": {
      "author": {
        "name": "jtimon",
        "email": "jtimon@monetize.io",
        "date": "2014-06-20T18:55:42Z"
      },
      "committer": {
        "name": "jtimon",
        "email": "jtimon@monetize.io",
        "date": "2014-08-23T11:21:51Z"
      },
      "message": "replace ComputeMinWork with CheckMinWork",
      "tree": {
        "sha": "7a8cdc2a1ef9f46ddecea998a07936f3a1481926",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7a8cdc2a1ef9f46ddecea998a07936f3a1481926"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/654871d43677947d124673c9e0dd2984f0d3ca61",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/654871d43677947d124673c9e0dd2984f0d3ca61",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/654871d43677947d124673c9e0dd2984f0d3ca61",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/654871d43677947d124673c9e0dd2984f0d3ca61/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b343c1a1e34f851e70649ad1f49855a7d878f9ef",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b343c1a1e34f851e70649ad1f49855a7d878f9ef",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b343c1a1e34f851e70649ad1f49855a7d878f9ef"
      }
    ],
    "stats": {
      "total": 40,
      "additions": 19,
      "deletions": 21
    },
    "files": [
      {
        "sha": "9e07f43c442e5a9dcf33ef6026609c33470ffa34",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 6,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/654871d43677947d124673c9e0dd2984f0d3ca61/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/654871d43677947d124673c9e0dd2984f0d3ca61/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=654871d43677947d124673c9e0dd2984f0d3ca61",
        "patch": "@@ -2410,12 +2410,7 @@ bool AcceptBlockHeader(CBlockHeader& block, CValidationState& state, CBlockIndex\n             return state.DoS(100, error(\"CheckBlockHeader() : block with timestamp before last checkpoint\"),\n                              REJECT_CHECKPOINT, \"time-too-old\");\n         }\n-        bool fOverflow = false;\n-        uint256 bnNewBlock;\n-        bnNewBlock.SetCompact(block.nBits, NULL, &fOverflow);\n-        uint256 bnRequired;\n-        bnRequired.SetCompact(ComputeMinWork(pcheckpoint->nBits, deltaTime));\n-        if (fOverflow || bnNewBlock > bnRequired)\n+        if (!CheckMinWork(block.nBits, pcheckpoint->nBits, deltaTime))\n         {\n             return state.DoS(100, error(\"CheckBlockHeader() : block with too little proof-of-work\"),\n                              REJECT_INVALID, \"bad-diffbits\");"
      },
      {
        "sha": "1d2b743b481af71b4a5fa84951bd0e4bec912001",
        "filename": "src/pow.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 8,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/654871d43677947d124673c9e0dd2984f0d3ca61/src/pow.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/654871d43677947d124673c9e0dd2984f0d3ca61/src/pow.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/pow.cpp?ref=654871d43677947d124673c9e0dd2984f0d3ca61",
        "patch": "@@ -94,29 +94,36 @@ bool CheckProofOfWork(uint256 hash, unsigned int nBits)\n }\n \n //\n-// minimum amount of work that could possibly be required nTime after\n-// minimum work required was nBase\n+// true if nBits is greater than the minimum amount of work that could\n+// possibly be required deltaTime after minimum work required was nBase\n //\n-unsigned int ComputeMinWork(unsigned int nBase, int64_t nTime)\n+bool CheckMinWork(unsigned int nBits, unsigned int nBase, int64_t deltaTime)\n {\n+    bool fOverflow = false;\n+    uint256 bnNewBlock;\n+    bnNewBlock.SetCompact(nBits, NULL, &fOverflow);\n+    if (fOverflow)\n+        return false;\n+\n     const uint256 &bnLimit = Params().ProofOfWorkLimit();\n     // Testnet has min-difficulty blocks\n     // after Params().TargetSpacing()*2 time between blocks:\n-    if (Params().AllowMinDifficultyBlocks() && nTime > Params().TargetSpacing()*2)\n-        return bnLimit.GetCompact();\n+    if (Params().AllowMinDifficultyBlocks() && deltaTime > Params().TargetSpacing()*2)\n+        return bnNewBlock <= bnLimit;\n \n     uint256 bnResult;\n     bnResult.SetCompact(nBase);\n-    while (nTime > 0 && bnResult < bnLimit)\n+    while (deltaTime > 0 && bnResult < bnLimit)\n     {\n         // Maximum 400% adjustment...\n         bnResult *= 4;\n         // ... in best-case exactly 4-times-normal target time\n-        nTime -= Params().TargetTimespan()*4;\n+        deltaTime -= Params().TargetTimespan()*4;\n     }\n     if (bnResult > bnLimit)\n         bnResult = bnLimit;\n-    return bnResult.GetCompact();\n+\n+    return bnNewBlock <= bnResult;\n }\n \n void UpdateTime(CBlockHeader* pblock, const CBlockIndex* pindexPrev)"
      },
      {
        "sha": "f350d763f4cbe1387961ac5544429119ff96718c",
        "filename": "src/pow.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/654871d43677947d124673c9e0dd2984f0d3ca61/src/pow.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/654871d43677947d124673c9e0dd2984f0d3ca61/src/pow.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/pow.h?ref=654871d43677947d124673c9e0dd2984f0d3ca61",
        "patch": "@@ -17,8 +17,8 @@ unsigned int GetNextWorkRequired(const CBlockIndex* pindexLast, const CBlockHead\n \n /** Check whether a block hash satisfies the proof-of-work requirement specified by nBits */\n bool CheckProofOfWork(uint256 hash, unsigned int nBits);\n-/** Calculate the minimum amount of work a received block needs, without knowing its direct parent */\n-unsigned int ComputeMinWork(unsigned int nBase, int64_t nTime);\n+/** Check the work is more than the minimum a received block needs, without knowing its direct parent */\n+bool CheckMinWork(unsigned int nBits, unsigned int nBase, int64_t deltaTime);\n \n void UpdateTime(CBlockHeader* block, const CBlockIndex* pindexPrev);\n "
      },
      {
        "sha": "bb15db43b1b3025673208fe9564cbd0b77a69fb3",
        "filename": "src/test/DoS_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 5,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/654871d43677947d124673c9e0dd2984f0d3ca61/src/test/DoS_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/654871d43677947d124673c9e0dd2984f0d3ca61/src/test/DoS_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/DoS_tests.cpp?ref=654871d43677947d124673c9e0dd2984f0d3ca61",
        "patch": "@@ -106,11 +106,7 @@ static bool CheckNBits(unsigned int nbits1, int64_t time1, unsigned int nbits2,\n         return CheckNBits(nbits2, time2, nbits1, time1);\n     int64_t deltaTime = time2-time1;\n \n-    uint256 required;\n-    required.SetCompact(ComputeMinWork(nbits1, deltaTime));\n-    uint256 have;\n-    have.SetCompact(nbits2);\n-    return (have <= required);\n+    return CheckMinWork(nbits2, nbits1, deltaTime);\n }\n \n BOOST_AUTO_TEST_CASE(DoS_checknbits)"
      }
    ]
  }
]