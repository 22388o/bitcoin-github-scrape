[
  {
    "sha": "2cb4e8bdc7ef75ae8d95c246af1e8e1f9c7045bd",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyY2I0ZThiZGM3ZWY3NWFlOGQ5NWMyNDZhZjFlOGUxZjljNzA0NWJk",
    "commit": {
      "author": {
        "name": "Martin Zumsande",
        "email": "mzumsande@gmail.com",
        "date": "2019-11-25T00:33:17Z"
      },
      "committer": {
        "name": "Martin Zumsande",
        "email": "mzumsande@gmail.com",
        "date": "2019-11-25T00:33:17Z"
      },
      "message": "[test] move string helper functions into test library",
      "tree": {
        "sha": "478c4b892e09f4103061f42052460c50e22ca9b3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/478c4b892e09f4103061f42052460c50e22ca9b3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2cb4e8bdc7ef75ae8d95c246af1e8e1f9c7045bd",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2cb4e8bdc7ef75ae8d95c246af1e8e1f9c7045bd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2cb4e8bdc7ef75ae8d95c246af1e8e1f9c7045bd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2cb4e8bdc7ef75ae8d95c246af1e8e1f9c7045bd/comments",
    "author": {
      "login": "mzumsande",
      "id": 48763452,
      "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
      "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mzumsande",
      "html_url": "https://github.com/mzumsande",
      "followers_url": "https://api.github.com/users/mzumsande/followers",
      "following_url": "https://api.github.com/users/mzumsande/following{/other_user}",
      "gists_url": "https://api.github.com/users/mzumsande/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
      "organizations_url": "https://api.github.com/users/mzumsande/orgs",
      "repos_url": "https://api.github.com/users/mzumsande/repos",
      "events_url": "https://api.github.com/users/mzumsande/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mzumsande/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mzumsande",
      "id": 48763452,
      "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
      "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mzumsande",
      "html_url": "https://github.com/mzumsande",
      "followers_url": "https://api.github.com/users/mzumsande/followers",
      "following_url": "https://api.github.com/users/mzumsande/following{/other_user}",
      "gists_url": "https://api.github.com/users/mzumsande/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
      "organizations_url": "https://api.github.com/users/mzumsande/orgs",
      "repos_url": "https://api.github.com/users/mzumsande/repos",
      "events_url": "https://api.github.com/users/mzumsande/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mzumsande/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "239d199667888e5d60309f15a38eed4d3afe56c4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/239d199667888e5d60309f15a38eed4d3afe56c4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/239d199667888e5d60309f15a38eed4d3afe56c4"
      }
    ],
    "stats": {
      "total": 71,
      "additions": 36,
      "deletions": 35
    },
    "files": [
      {
        "sha": "235420e6ac89381a2d7097c17c64b80c00c08f7e",
        "filename": "src/test/settings_tests.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2cb4e8bdc7ef75ae8d95c246af1e8e1f9c7045bd/src/test/settings_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2cb4e8bdc7ef75ae8d95c246af1e8e1f9c7045bd/src/test/settings_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/settings_tests.cpp?ref=2cb4e8bdc7ef75ae8d95c246af1e8e1f9c7045bd",
        "patch": "@@ -4,8 +4,9 @@\n \n #include <util/settings.h>\n \n-#include <test/util.h>\n #include <test/util/setup_common.h>\n+#include <test/util/str.h>\n+\n \n #include <boost/test/unit_test.hpp>\n #include <univalue.h>"
      },
      {
        "sha": "3cf830dd386038e70808602dedb4dfddb1e3d60a",
        "filename": "src/test/util.h",
        "status": "modified",
        "additions": 0,
        "deletions": 33,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2cb4e8bdc7ef75ae8d95c246af1e8e1f9c7045bd/src/test/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2cb4e8bdc7ef75ae8d95c246af1e8e1f9c7045bd/src/test/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util.h?ref=2cb4e8bdc7ef75ae8d95c246af1e8e1f9c7045bd",
        "patch": "@@ -34,37 +34,4 @@ std::string getnewaddress(CWallet& w);\n /** Returns the generated coin */\n CTxIn generatetoaddress(const std::string& address);\n \n-/**\n- * Increment a string. Useful to enumerate all fixed length strings with\n- * characters in [min_char, max_char].\n- */\n-template <typename CharType, size_t StringLength>\n-bool NextString(CharType (&string)[StringLength], CharType min_char, CharType max_char)\n-{\n-    for (CharType& elem : string) {\n-        bool has_next = elem != max_char;\n-        elem = elem < min_char || elem >= max_char ? min_char : CharType(elem + 1);\n-        if (has_next) return true;\n-    }\n-    return false;\n-}\n-\n-/**\n- * Iterate over string values and call function for each string without\n- * successive duplicate characters.\n- */\n-template <typename CharType, size_t StringLength, typename Fn>\n-void ForEachNoDup(CharType (&string)[StringLength], CharType min_char, CharType max_char, Fn&& fn) {\n-    for (bool has_next = true; has_next; has_next = NextString(string, min_char, max_char)) {\n-        int prev = -1;\n-        bool skip_string = false;\n-        for (CharType c : string) {\n-            if (c == prev) skip_string = true;\n-            if (skip_string || c < min_char || c > max_char) break;\n-            prev = c;\n-        }\n-        if (!skip_string) fn();\n-    }\n-}\n-\n #endif // BITCOIN_TEST_UTIL_H"
      },
      {
        "sha": "ef94692df096ec9343007dc33971d42d9732022e",
        "filename": "src/test/util/str.h",
        "status": "modified",
        "additions": 33,
        "deletions": 0,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2cb4e8bdc7ef75ae8d95c246af1e8e1f9c7045bd/src/test/util/str.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2cb4e8bdc7ef75ae8d95c246af1e8e1f9c7045bd/src/test/util/str.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util/str.h?ref=2cb4e8bdc7ef75ae8d95c246af1e8e1f9c7045bd",
        "patch": "@@ -9,4 +9,37 @@\n \n bool CaseInsensitiveEqual(const std::string& s1, const std::string& s2);\n \n+/**\n+ * Increment a string. Useful to enumerate all fixed length strings with\n+ * characters in [min_char, max_char].\n+ */\n+template <typename CharType, size_t StringLength>\n+bool NextString(CharType (&string)[StringLength], CharType min_char, CharType max_char)\n+{\n+    for (CharType& elem : string) {\n+        bool has_next = elem != max_char;\n+        elem = elem < min_char || elem >= max_char ? min_char : CharType(elem + 1);\n+        if (has_next) return true;\n+    }\n+    return false;\n+}\n+\n+/**\n+ * Iterate over string values and call function for each string without\n+ * successive duplicate characters.\n+ */\n+template <typename CharType, size_t StringLength, typename Fn>\n+void ForEachNoDup(CharType (&string)[StringLength], CharType min_char, CharType max_char, Fn&& fn) {\n+    for (bool has_next = true; has_next; has_next = NextString(string, min_char, max_char)) {\n+        int prev = -1;\n+        bool skip_string = false;\n+        for (CharType c : string) {\n+            if (c == prev) skip_string = true;\n+            if (skip_string || c < min_char || c > max_char) break;\n+            prev = c;\n+        }\n+        if (!skip_string) fn();\n+    }\n+}\n+\n #endif // BITCOIN_TEST_UTIL_STR_H"
      },
      {
        "sha": "fbd2bd5651b5c05773f278339ea1c2b7c040665a",
        "filename": "src/test/util_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2cb4e8bdc7ef75ae8d95c246af1e8e1f9c7045bd/src/test/util_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2cb4e8bdc7ef75ae8d95c246af1e8e1f9c7045bd/src/test/util_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util_tests.cpp?ref=2cb4e8bdc7ef75ae8d95c246af1e8e1f9c7045bd",
        "patch": "@@ -7,7 +7,7 @@\n #include <clientversion.h>\n #include <sync.h>\n #include <test/util/setup_common.h>\n-#include <test/util.h>\n+#include <test/util/str.h>\n #include <util/moneystr.h>\n #include <util/strencodings.h>\n #include <util/string.h>"
      }
    ]
  },
  {
    "sha": "f613e5dfdafe708f63ebb5193c44e2bc770c6651",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmNjEzZTVkZmRhZmU3MDhmNjNlYmI1MTkzYzQ0ZTJiYzc3MGM2NjUx",
    "commit": {
      "author": {
        "name": "Martin Zumsande",
        "email": "mzumsande@gmail.com",
        "date": "2019-11-25T01:44:40Z"
      },
      "committer": {
        "name": "Martin Zumsande",
        "email": "mzumsande@gmail.com",
        "date": "2019-11-25T15:40:03Z"
      },
      "message": "[test] move mining helper functions into test library",
      "tree": {
        "sha": "e5ea15d63a856feb8bbda714507615838bbc71bb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e5ea15d63a856feb8bbda714507615838bbc71bb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f613e5dfdafe708f63ebb5193c44e2bc770c6651",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f613e5dfdafe708f63ebb5193c44e2bc770c6651",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f613e5dfdafe708f63ebb5193c44e2bc770c6651",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f613e5dfdafe708f63ebb5193c44e2bc770c6651/comments",
    "author": {
      "login": "mzumsande",
      "id": 48763452,
      "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
      "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mzumsande",
      "html_url": "https://github.com/mzumsande",
      "followers_url": "https://api.github.com/users/mzumsande/followers",
      "following_url": "https://api.github.com/users/mzumsande/following{/other_user}",
      "gists_url": "https://api.github.com/users/mzumsande/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
      "organizations_url": "https://api.github.com/users/mzumsande/orgs",
      "repos_url": "https://api.github.com/users/mzumsande/repos",
      "events_url": "https://api.github.com/users/mzumsande/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mzumsande/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mzumsande",
      "id": 48763452,
      "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
      "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mzumsande",
      "html_url": "https://github.com/mzumsande",
      "followers_url": "https://api.github.com/users/mzumsande/followers",
      "following_url": "https://api.github.com/users/mzumsande/following{/other_user}",
      "gists_url": "https://api.github.com/users/mzumsande/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
      "organizations_url": "https://api.github.com/users/mzumsande/orgs",
      "repos_url": "https://api.github.com/users/mzumsande/repos",
      "events_url": "https://api.github.com/users/mzumsande/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mzumsande/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2cb4e8bdc7ef75ae8d95c246af1e8e1f9c7045bd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2cb4e8bdc7ef75ae8d95c246af1e8e1f9c7045bd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2cb4e8bdc7ef75ae8d95c246af1e8e1f9c7045bd"
      }
    ],
    "stats": {
      "total": 138,
      "additions": 79,
      "deletions": 59
    },
    "files": [
      {
        "sha": "139b709569233c00e9ed592202d382d0f3420d71",
        "filename": "src/Makefile.test_util.include",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f613e5dfdafe708f63ebb5193c44e2bc770c6651/src/Makefile.test_util.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f613e5dfdafe708f63ebb5193c44e2bc770c6651/src/Makefile.test_util.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test_util.include?ref=f613e5dfdafe708f63ebb5193c44e2bc770c6651",
        "patch": "@@ -10,6 +10,7 @@ EXTRA_LIBRARIES += \\\n TEST_UTIL_H = \\\n     test/util/blockfilter.h \\\n     test/util/logging.h \\\n+    test/util/mining.h \\\n     test/util/setup_common.h \\\n     test/util/str.h \\\n     test/util/transaction_utils.h\n@@ -19,6 +20,7 @@ libtest_util_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n libtest_util_a_SOURCES = \\\n   test/util/blockfilter.cpp \\\n   test/util/logging.cpp \\\n+  test/util/mining.cpp \\\n   test/util/setup_common.cpp \\\n   test/util/str.cpp \\\n   test/util/transaction_utils.cpp \\\n@@ -28,4 +30,3 @@ LIBTEST_UTIL += $(LIBBITCOIN_SERVER)\n LIBTEST_UTIL += $(LIBBITCOIN_COMMON)\n LIBTEST_UTIL += $(LIBBITCOIN_UTIL)\n LIBTEST_UTIL += $(LIBBITCOIN_CRYPTO_BASE)\n-"
      },
      {
        "sha": "2ccae0c6675641cfb016989ee00a173970c9de42",
        "filename": "src/bench/block_assemble.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f613e5dfdafe708f63ebb5193c44e2bc770c6651/src/bench/block_assemble.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f613e5dfdafe708f63ebb5193c44e2bc770c6651/src/bench/block_assemble.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/block_assemble.cpp?ref=f613e5dfdafe708f63ebb5193c44e2bc770c6651",
        "patch": "@@ -6,6 +6,7 @@\n #include <consensus/validation.h>\n #include <crypto/sha256.h>\n #include <test/util.h>\n+#include <test/util/mining.h>\n #include <txmempool.h>\n #include <validation.h>\n "
      },
      {
        "sha": "bd79ddfdd6d498cb26d12852daa4fc7f0424d3d2",
        "filename": "src/bench/wallet_balance.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f613e5dfdafe708f63ebb5193c44e2bc770c6651/src/bench/wallet_balance.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f613e5dfdafe708f63ebb5193c44e2bc770c6651/src/bench/wallet_balance.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/wallet_balance.cpp?ref=f613e5dfdafe708f63ebb5193c44e2bc770c6651",
        "patch": "@@ -7,6 +7,7 @@\n #include <node/context.h>\n #include <optional.h>\n #include <test/util.h>\n+#include <test/util/mining.h>\n #include <validationinterface.h>\n #include <wallet/wallet.h>\n "
      },
      {
        "sha": "e775ad323ba9bd55f12764c718cb6e2fd201cdc6",
        "filename": "src/test/util.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 44,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f613e5dfdafe708f63ebb5193c44e2bc770c6651/src/test/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f613e5dfdafe708f63ebb5193c44e2bc770c6651/src/test/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util.cpp?ref=f613e5dfdafe708f63ebb5193c44e2bc770c6651",
        "patch": "@@ -4,15 +4,9 @@\n \n #include <test/util.h>\n \n-#include <chainparams.h>\n-#include <consensus/merkle.h>\n #include <key_io.h>\n-#include <miner.h>\n #include <outputtype.h>\n-#include <pow.h>\n #include <script/standard.h>\n-#include <validation.h>\n-#include <validationinterface.h>\n #ifdef ENABLE_WALLET\n #include <wallet/wallet.h>\n #endif\n@@ -44,41 +38,3 @@ void importaddress(CWallet& wallet, const std::string& address)\n     wallet.SetAddressBook(dest, /* label */ \"\", \"receive\");\n }\n #endif // ENABLE_WALLET\n-\n-CTxIn generatetoaddress(const std::string& address)\n-{\n-    const auto dest = DecodeDestination(address);\n-    assert(IsValidDestination(dest));\n-    const auto coinbase_script = GetScriptForDestination(dest);\n-\n-    return MineBlock(coinbase_script);\n-}\n-\n-CTxIn MineBlock(const CScript& coinbase_scriptPubKey)\n-{\n-    auto block = PrepareBlock(coinbase_scriptPubKey);\n-\n-    while (!CheckProofOfWork(block->GetHash(), block->nBits, Params().GetConsensus())) {\n-        ++block->nNonce;\n-        assert(block->nNonce);\n-    }\n-\n-    bool processed{ProcessNewBlock(Params(), block, true, nullptr)};\n-    assert(processed);\n-\n-    return CTxIn{block->vtx[0]->GetHash(), 0};\n-}\n-\n-std::shared_ptr<CBlock> PrepareBlock(const CScript& coinbase_scriptPubKey)\n-{\n-    auto block = std::make_shared<CBlock>(\n-        BlockAssembler{Params()}\n-            .CreateNewBlock(coinbase_scriptPubKey)\n-            ->block);\n-\n-    LOCK(cs_main);\n-    block->nTime = ::ChainActive().Tip()->GetMedianTimePast() + 1;\n-    block->hashMerkleRoot = BlockMerkleRoot(*block);\n-\n-    return block;\n-}"
      },
      {
        "sha": "7adeaea7721168ec672b7ab47221333258ba2999",
        "filename": "src/test/util.h",
        "status": "modified",
        "additions": 0,
        "deletions": 14,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f613e5dfdafe708f63ebb5193c44e2bc770c6651/src/test/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f613e5dfdafe708f63ebb5193c44e2bc770c6651/src/test/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util.h?ref=f613e5dfdafe708f63ebb5193c44e2bc770c6651",
        "patch": "@@ -5,33 +5,19 @@\n #ifndef BITCOIN_TEST_UTIL_H\n #define BITCOIN_TEST_UTIL_H\n \n-#include <memory>\n #include <string>\n \n-class CBlock;\n-class CScript;\n-class CTxIn;\n class CWallet;\n \n // Constants //\n \n extern const std::string ADDRESS_BCRT1_UNSPENDABLE;\n \n-// Lower-level utils //\n-\n-/** Returns the generated coin */\n-CTxIn MineBlock(const CScript& coinbase_scriptPubKey);\n-/** Prepare a block to be mined */\n-std::shared_ptr<CBlock> PrepareBlock(const CScript& coinbase_scriptPubKey);\n-\n-\n // RPC-like //\n \n /** Import the address to the wallet */\n void importaddress(CWallet& wallet, const std::string& address);\n /** Returns a new address from the wallet */\n std::string getnewaddress(CWallet& w);\n-/** Returns the generated coin */\n-CTxIn generatetoaddress(const std::string& address);\n \n #endif // BITCOIN_TEST_UTIL_H"
      },
      {
        "sha": "30f0f5d7e6fe67cf3a74f5c23ffcda9d52078a06",
        "filename": "src/test/util/mining.cpp",
        "status": "added",
        "additions": 51,
        "deletions": 0,
        "changes": 51,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f613e5dfdafe708f63ebb5193c44e2bc770c6651/src/test/util/mining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f613e5dfdafe708f63ebb5193c44e2bc770c6651/src/test/util/mining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util/mining.cpp?ref=f613e5dfdafe708f63ebb5193c44e2bc770c6651",
        "patch": "@@ -0,0 +1,51 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <test/util/mining.h>\n+\n+#include <chainparams.h>\n+#include <consensus/merkle.h>\n+#include <key_io.h>\n+#include <miner.h>\n+#include <pow.h>\n+#include <script/standard.h>\n+#include <validation.h>\n+\n+CTxIn generatetoaddress(const std::string& address)\n+{\n+    const auto dest = DecodeDestination(address);\n+    assert(IsValidDestination(dest));\n+    const auto coinbase_script = GetScriptForDestination(dest);\n+\n+    return MineBlock(coinbase_script);\n+}\n+\n+CTxIn MineBlock(const CScript& coinbase_scriptPubKey)\n+{\n+    auto block = PrepareBlock(coinbase_scriptPubKey);\n+\n+    while (!CheckProofOfWork(block->GetHash(), block->nBits, Params().GetConsensus())) {\n+        ++block->nNonce;\n+        assert(block->nNonce);\n+    }\n+\n+    bool processed{ProcessNewBlock(Params(), block, true, nullptr)};\n+    assert(processed);\n+\n+    return CTxIn{block->vtx[0]->GetHash(), 0};\n+}\n+\n+std::shared_ptr<CBlock> PrepareBlock(const CScript& coinbase_scriptPubKey)\n+{\n+    auto block = std::make_shared<CBlock>(\n+        BlockAssembler{Params()}\n+            .CreateNewBlock(coinbase_scriptPubKey)\n+            ->block);\n+\n+    LOCK(cs_main);\n+    block->nTime = ::ChainActive().Tip()->GetMedianTimePast() + 1;\n+    block->hashMerkleRoot = BlockMerkleRoot(*block);\n+\n+    return block;\n+}"
      },
      {
        "sha": "afe4de684f1bbc4de61dfb383e57c486bd1db89d",
        "filename": "src/test/util/mining.h",
        "status": "added",
        "additions": 24,
        "deletions": 0,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f613e5dfdafe708f63ebb5193c44e2bc770c6651/src/test/util/mining.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f613e5dfdafe708f63ebb5193c44e2bc770c6651/src/test/util/mining.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util/mining.h?ref=f613e5dfdafe708f63ebb5193c44e2bc770c6651",
        "patch": "@@ -0,0 +1,24 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_TEST_UTIL_MINING_H\n+#define BITCOIN_TEST_UTIL_MINING_H\n+\n+#include <memory>\n+#include <string>\n+\n+class CBlock;\n+class CScript;\n+class CTxIn;\n+\n+/** Returns the generated coin */\n+CTxIn MineBlock(const CScript& coinbase_scriptPubKey);\n+\n+/** Prepare a block to be mined */\n+std::shared_ptr<CBlock> PrepareBlock(const CScript& coinbase_scriptPubKey);\n+\n+/** RPC-like helper function, returns the generated coin */\n+CTxIn generatetoaddress(const std::string& address);\n+\n+#endif // BITCOIN_TEST_UTIL_MINING_H"
      }
    ]
  },
  {
    "sha": "78e283e656bf1643944ffdb76185f3468eb25895",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3OGUyODNlNjU2YmYxNjQzOTQ0ZmZkYjc2MTg1ZjM0NjhlYjI1ODk1",
    "commit": {
      "author": {
        "name": "Martin Zumsande",
        "email": "mzumsande@gmail.com",
        "date": "2019-11-25T12:57:47Z"
      },
      "committer": {
        "name": "Martin Zumsande",
        "email": "mzumsande@gmail.com",
        "date": "2019-11-25T15:40:09Z"
      },
      "message": "[test] move wallet helper functions into test library",
      "tree": {
        "sha": "a80dd0ba15cf71e5d92709cf30d96d35cc403365",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a80dd0ba15cf71e5d92709cf30d96d35cc403365"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/78e283e656bf1643944ffdb76185f3468eb25895",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/78e283e656bf1643944ffdb76185f3468eb25895",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/78e283e656bf1643944ffdb76185f3468eb25895",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/78e283e656bf1643944ffdb76185f3468eb25895/comments",
    "author": {
      "login": "mzumsande",
      "id": 48763452,
      "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
      "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mzumsande",
      "html_url": "https://github.com/mzumsande",
      "followers_url": "https://api.github.com/users/mzumsande/followers",
      "following_url": "https://api.github.com/users/mzumsande/following{/other_user}",
      "gists_url": "https://api.github.com/users/mzumsande/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
      "organizations_url": "https://api.github.com/users/mzumsande/orgs",
      "repos_url": "https://api.github.com/users/mzumsande/repos",
      "events_url": "https://api.github.com/users/mzumsande/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mzumsande/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mzumsande",
      "id": 48763452,
      "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
      "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mzumsande",
      "html_url": "https://github.com/mzumsande",
      "followers_url": "https://api.github.com/users/mzumsande/followers",
      "following_url": "https://api.github.com/users/mzumsande/following{/other_user}",
      "gists_url": "https://api.github.com/users/mzumsande/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
      "organizations_url": "https://api.github.com/users/mzumsande/orgs",
      "repos_url": "https://api.github.com/users/mzumsande/repos",
      "events_url": "https://api.github.com/users/mzumsande/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mzumsande/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f613e5dfdafe708f63ebb5193c44e2bc770c6651",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f613e5dfdafe708f63ebb5193c44e2bc770c6651",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f613e5dfdafe708f63ebb5193c44e2bc770c6651"
      }
    ],
    "stats": {
      "total": 21,
      "additions": 11,
      "deletions": 10
    },
    "files": [
      {
        "sha": "1c97e22de8ca3374954f6f1d5099a52aac8d4d6e",
        "filename": "src/Makefile.bench.include",
        "status": "modified",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/78e283e656bf1643944ffdb76185f3468eb25895/src/Makefile.bench.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/78e283e656bf1643944ffdb76185f3468eb25895/src/Makefile.bench.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.bench.include?ref=78e283e656bf1643944ffdb76185f3468eb25895",
        "patch": "@@ -39,9 +39,7 @@ bench_bench_bitcoin_SOURCES = \\\n   bench/bech32.cpp \\\n   bench/lockedpool.cpp \\\n   bench/poly1305.cpp \\\n-  bench/prevector.cpp \\\n-  test/util.h \\\n-  test/util.cpp\n+  bench/prevector.cpp\n \n nodist_bench_bench_bitcoin_SOURCES = $(GENERATED_BENCH_FILES)\n "
      },
      {
        "sha": "505d630b7d53ee58192ed70ee82eb3c96ac2a8b4",
        "filename": "src/Makefile.test_util.include",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/78e283e656bf1643944ffdb76185f3468eb25895/src/Makefile.test_util.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/78e283e656bf1643944ffdb76185f3468eb25895/src/Makefile.test_util.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test_util.include?ref=78e283e656bf1643944ffdb76185f3468eb25895",
        "patch": "@@ -13,7 +13,8 @@ TEST_UTIL_H = \\\n     test/util/mining.h \\\n     test/util/setup_common.h \\\n     test/util/str.h \\\n-    test/util/transaction_utils.h\n+    test/util/transaction_utils.h \\\n+    test/util/wallet.h\n \n libtest_util_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(MINIUPNPC_CPPFLAGS) $(EVENT_CFLAGS) $(EVENT_PTHREADS_CFLAGS)\n libtest_util_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n@@ -24,6 +25,7 @@ libtest_util_a_SOURCES = \\\n   test/util/setup_common.cpp \\\n   test/util/str.cpp \\\n   test/util/transaction_utils.cpp \\\n+  test/util/wallet.cpp \\\n   $(TEST_UTIL_H)\n \n LIBTEST_UTIL += $(LIBBITCOIN_SERVER)"
      },
      {
        "sha": "184367e1e5d7b3c2cba9d7cac151d6f30845c5ff",
        "filename": "src/bench/block_assemble.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/78e283e656bf1643944ffdb76185f3468eb25895/src/bench/block_assemble.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/78e283e656bf1643944ffdb76185f3468eb25895/src/bench/block_assemble.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/block_assemble.cpp?ref=78e283e656bf1643944ffdb76185f3468eb25895",
        "patch": "@@ -5,8 +5,8 @@\n #include <bench/bench.h>\n #include <consensus/validation.h>\n #include <crypto/sha256.h>\n-#include <test/util.h>\n #include <test/util/mining.h>\n+#include <test/util/wallet.h>\n #include <txmempool.h>\n #include <validation.h>\n "
      },
      {
        "sha": "f39dcc0b71b420ee80e61b31ea7835023134f6bf",
        "filename": "src/bench/wallet_balance.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/78e283e656bf1643944ffdb76185f3468eb25895/src/bench/wallet_balance.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/78e283e656bf1643944ffdb76185f3468eb25895/src/bench/wallet_balance.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/wallet_balance.cpp?ref=78e283e656bf1643944ffdb76185f3468eb25895",
        "patch": "@@ -6,8 +6,8 @@\n #include <interfaces/chain.h>\n #include <node/context.h>\n #include <optional.h>\n-#include <test/util.h>\n #include <test/util/mining.h>\n+#include <test/util/wallet.h>\n #include <validationinterface.h>\n #include <wallet/wallet.h>\n "
      },
      {
        "sha": "226d2df6e40ee929728ec87737de9b1c5dbe30bd",
        "filename": "src/test/util/wallet.cpp",
        "status": "renamed",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/78e283e656bf1643944ffdb76185f3468eb25895/src/test/util/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/78e283e656bf1643944ffdb76185f3468eb25895/src/test/util/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util/wallet.cpp?ref=78e283e656bf1643944ffdb76185f3468eb25895",
        "patch": "@@ -2,7 +2,7 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <test/util.h>\n+#include <test/util/wallet.h>\n \n #include <key_io.h>\n #include <outputtype.h>",
        "previous_filename": "src/test/util.cpp"
      },
      {
        "sha": "565ef1756a6cdff11e7daf3a4c992ace22535b26",
        "filename": "src/test/util/wallet.h",
        "status": "renamed",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/78e283e656bf1643944ffdb76185f3468eb25895/src/test/util/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/78e283e656bf1643944ffdb76185f3468eb25895/src/test/util/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util/wallet.h?ref=78e283e656bf1643944ffdb76185f3468eb25895",
        "patch": "@@ -2,8 +2,8 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#ifndef BITCOIN_TEST_UTIL_H\n-#define BITCOIN_TEST_UTIL_H\n+#ifndef BITCOIN_TEST_UTIL_WALLET_H\n+#define BITCOIN_TEST_UTIL_WALLET_H\n \n #include <string>\n \n@@ -20,4 +20,5 @@ void importaddress(CWallet& wallet, const std::string& address);\n /** Returns a new address from the wallet */\n std::string getnewaddress(CWallet& w);\n \n-#endif // BITCOIN_TEST_UTIL_H\n+\n+#endif // BITCOIN_TEST_UTIL_WALLET_H",
        "previous_filename": "src/test/util.h"
      }
    ]
  }
]