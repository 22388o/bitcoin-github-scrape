[
  {
    "sha": "24028831b3164261f9224fd4b8e7744ebba9e633",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyNDAyODgzMWIzMTY0MjYxZjkyMjRmZDRiOGU3NzQ0ZWJiYTllNjMz",
    "commit": {
      "author": {
        "name": "amadeuszpawlik",
        "email": "apawlik@protonmail.com",
        "date": "2021-06-10T13:04:04Z"
      },
      "committer": {
        "name": "amadeuszpawlik",
        "email": "apawlik@protonmail.com",
        "date": "2021-06-10T15:32:15Z"
      },
      "message": "Guard `fHavePruned` to avoid potential data race\n\nA potential data race has been detected on `fHavePruned` where one\nthread is writing to it via `FlushStateToDisk` as another thread is\nreading it via `IsBlockPruned`.",
      "tree": {
        "sha": "5b3e0a1e746b79297e29105f9e73bd6421e050e4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5b3e0a1e746b79297e29105f9e73bd6421e050e4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/24028831b3164261f9224fd4b8e7744ebba9e633",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEvSKeW3MFn9tKpWqZ8ososzXVzWwFAmDCMIEACgkQ8ososzXV\nzWzXzgv9G4PICq+KGCKzyiI6n6annK3m1AfyyRQyCdKG7I4V2tDBvcz55qRR2LjR\n/EBVIWePrcNe1eTUYS+/pAHavjThSK7UNshL48SgXzU/NA+TaI2ksGryg8k5WVH/\ndof4KMDdD/SMJZAkEUskkUxTK54V26f7jFmeD6NMXC1AL+l5RVPu1338UNt9tYPY\nhB8Nw7tXviQwao0DCfsX0rT/v06ZdA71XjoqjM4gre52v4jfsZGSA8wtTmMmtN5X\nBaVmtIiJdZZ/Fy/r43VVwqppneOrmTCnCVytsrq4ygmSp3Fr5ZzM70vxCHGcE4hk\n0Z9zgkcScLnHOaX1iliwQricnZeWMr3FG6Z6TRQMYBhrPitpBlOXUhh7DdypEvZQ\nejCtOGSAYFgLFVpDxRXnMIHH5UPY2H4ZKExu0jo4STXMoMtZU0ZLpoBzbJFXIKTm\nlCIJx7V7q66W26UWvXRjnFKdZBS2STqT8EBBs5HW5sSN6XlbAJqW6A73WXiao79g\nts0zBzHS\n=q+6N\n-----END PGP SIGNATURE-----",
        "payload": "tree 5b3e0a1e746b79297e29105f9e73bd6421e050e4\nparent 359f72105ba0184fbf998dfd84217c4229dc54ad\nauthor amadeuszpawlik <apawlik@protonmail.com> 1623330244 +0200\ncommitter amadeuszpawlik <apawlik@protonmail.com> 1623339135 +0200\n\nGuard `fHavePruned` to avoid potential data race\n\nA potential data race has been detected on `fHavePruned` where one\nthread is writing to it via `FlushStateToDisk` as another thread is\nreading it via `IsBlockPruned`.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/24028831b3164261f9224fd4b8e7744ebba9e633",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/24028831b3164261f9224fd4b8e7744ebba9e633",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/24028831b3164261f9224fd4b8e7744ebba9e633/comments",
    "author": {
      "login": "amadeuszpawlik",
      "id": 35263201,
      "node_id": "MDQ6VXNlcjM1MjYzMjAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/35263201?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amadeuszpawlik",
      "html_url": "https://github.com/amadeuszpawlik",
      "followers_url": "https://api.github.com/users/amadeuszpawlik/followers",
      "following_url": "https://api.github.com/users/amadeuszpawlik/following{/other_user}",
      "gists_url": "https://api.github.com/users/amadeuszpawlik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amadeuszpawlik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amadeuszpawlik/subscriptions",
      "organizations_url": "https://api.github.com/users/amadeuszpawlik/orgs",
      "repos_url": "https://api.github.com/users/amadeuszpawlik/repos",
      "events_url": "https://api.github.com/users/amadeuszpawlik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amadeuszpawlik/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "amadeuszpawlik",
      "id": 35263201,
      "node_id": "MDQ6VXNlcjM1MjYzMjAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/35263201?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amadeuszpawlik",
      "html_url": "https://github.com/amadeuszpawlik",
      "followers_url": "https://api.github.com/users/amadeuszpawlik/followers",
      "following_url": "https://api.github.com/users/amadeuszpawlik/following{/other_user}",
      "gists_url": "https://api.github.com/users/amadeuszpawlik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amadeuszpawlik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amadeuszpawlik/subscriptions",
      "organizations_url": "https://api.github.com/users/amadeuszpawlik/orgs",
      "repos_url": "https://api.github.com/users/amadeuszpawlik/repos",
      "events_url": "https://api.github.com/users/amadeuszpawlik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amadeuszpawlik/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "359f72105ba0184fbf998dfd84217c4229dc54ad",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/359f72105ba0184fbf998dfd84217c4229dc54ad",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/359f72105ba0184fbf998dfd84217c4229dc54ad"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 4,
      "deletions": 2
    },
    "files": [
      {
        "sha": "dca48c9b620ed43e047c8a4c380ad7b63dfc59d0",
        "filename": "src/node/blockstorage.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/24028831b3164261f9224fd4b8e7744ebba9e633/src/node/blockstorage.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/24028831b3164261f9224fd4b8e7744ebba9e633/src/node/blockstorage.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/node/blockstorage.cpp?ref=24028831b3164261f9224fd4b8e7744ebba9e633",
        "patch": "@@ -17,7 +17,6 @@\n #include <streams.h>\n #include <undo.h>\n #include <util/system.h>\n-#include <validation.h>\n \n std::atomic_bool fImporting(false);\n std::atomic_bool fReindex(false);\n@@ -48,6 +47,7 @@ static FlatFileSeq UndoFileSeq();\n \n bool IsBlockPruned(const CBlockIndex* pblockindex)\n {\n+    LOCK(cs_main);\n     return (fHavePruned && !(pblockindex->nStatus & BLOCK_HAVE_DATA) && pblockindex->nTx > 0);\n }\n "
      },
      {
        "sha": "00140f5b6b511f910103b8584ad0e2801b5400a1",
        "filename": "src/node/blockstorage.h",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/24028831b3164261f9224fd4b8e7744ebba9e633/src/node/blockstorage.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/24028831b3164261f9224fd4b8e7744ebba9e633/src/node/blockstorage.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/node/blockstorage.h?ref=24028831b3164261f9224fd4b8e7744ebba9e633",
        "patch": "@@ -10,6 +10,8 @@\n \n #include <fs.h>\n #include <protocol.h> // For CMessageHeader::MessageStartChars\n+#include <sync.h>\n+#include <validation.h> // For cs_main\n \n class ArgsManager;\n class BlockValidationState;\n@@ -38,7 +40,7 @@ extern std::atomic_bool fImporting;\n extern std::atomic_bool fReindex;\n /** Pruning-related variables and constants */\n /** True if any block files have ever been pruned. */\n-extern bool fHavePruned;\n+extern bool fHavePruned GUARDED_BY(cs_main);\n /** True if we're running in -prune mode. */\n extern bool fPruneMode;\n /** Number of MiB of block files that we're trying to stay below. */"
      }
    ]
  },
  {
    "sha": "008b1aa6c2811e2052f8be06e643075db565b1bc",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowMDhiMWFhNmMyODExZTIwNTJmOGJlMDZlNjQzMDc1ZGI1NjViMWJj",
    "commit": {
      "author": {
        "name": "amadeuszpawlik",
        "email": "apawlik@protonmail.com",
        "date": "2021-06-15T17:48:16Z"
      },
      "committer": {
        "name": "amadeuszpawlik",
        "email": "apawlik@protonmail.com",
        "date": "2021-06-15T17:48:16Z"
      },
      "message": "Guard `fHavePruned` with its own lock\n\nGo from using `cs_main` to `cs_HavePruned` as a mutex for accessing\n`fHavePruned`. This so as to not block the validation thread with\nblockstorage related RPCs.",
      "tree": {
        "sha": "74379c431dd5157a207fa996e92728785b21567d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/74379c431dd5157a207fa996e92728785b21567d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/008b1aa6c2811e2052f8be06e643075db565b1bc",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEvSKeW3MFn9tKpWqZ8ososzXVzWwFAmDI6GoACgkQ8ososzXV\nzWzWcQv+NVWgCo+/pkdthN7Qt+T4S1GJ3BOWV0qfyBjD4B+CzkM+sFBFlJzReueH\n9tQNpCGEdq10WuZ2bvOWEJpAQxewrhLgayo3olLc2CBiirUEjdK0Cfwrbq5C57OL\nQHpdWtaN+NRwgfnBGAHW+No0Lw0ix6rslieS2Txbj3uW1KeAqQLTiZAqf7JgKSMc\nh2TpPgvKNJLZ1u4miY27zKvVsskRM0Fm7zTvkURQWEhDAR9soYj8PBcby1ME7v/7\nhovcW09/BaB+7hkZMO1ggna8FxocN3TmURgrqDhYhCxtWAlZMdKN1RzM67Npj5ab\nYDkS+sWD79TuzWUR3O+dA2yrrpQG/xLyhA8BH22VYmnAvD2YgA5dHZukXvsJep7q\nl9k0Hq0nKclb0qCi775RscaHWaVjD6hNBjz+fHyXKYbZ6Eas9feBZDyUYaDW6QEO\nBO92kEDAFIQ2g3ABOcOLG1l+Rag8LNs6QFSqsiK9koiJSSy0zJyuB6uFN2oaRvHS\nOuA1eftF\n=nAWC\n-----END PGP SIGNATURE-----",
        "payload": "tree 74379c431dd5157a207fa996e92728785b21567d\nparent 24028831b3164261f9224fd4b8e7744ebba9e633\nauthor amadeuszpawlik <apawlik@protonmail.com> 1623779296 +0200\ncommitter amadeuszpawlik <apawlik@protonmail.com> 1623779296 +0200\n\nGuard `fHavePruned` with its own lock\n\nGo from using `cs_main` to `cs_HavePruned` as a mutex for accessing\n`fHavePruned`. This so as to not block the validation thread with\nblockstorage related RPCs.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/008b1aa6c2811e2052f8be06e643075db565b1bc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/008b1aa6c2811e2052f8be06e643075db565b1bc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/008b1aa6c2811e2052f8be06e643075db565b1bc/comments",
    "author": {
      "login": "amadeuszpawlik",
      "id": 35263201,
      "node_id": "MDQ6VXNlcjM1MjYzMjAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/35263201?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amadeuszpawlik",
      "html_url": "https://github.com/amadeuszpawlik",
      "followers_url": "https://api.github.com/users/amadeuszpawlik/followers",
      "following_url": "https://api.github.com/users/amadeuszpawlik/following{/other_user}",
      "gists_url": "https://api.github.com/users/amadeuszpawlik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amadeuszpawlik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amadeuszpawlik/subscriptions",
      "organizations_url": "https://api.github.com/users/amadeuszpawlik/orgs",
      "repos_url": "https://api.github.com/users/amadeuszpawlik/repos",
      "events_url": "https://api.github.com/users/amadeuszpawlik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amadeuszpawlik/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "amadeuszpawlik",
      "id": 35263201,
      "node_id": "MDQ6VXNlcjM1MjYzMjAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/35263201?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amadeuszpawlik",
      "html_url": "https://github.com/amadeuszpawlik",
      "followers_url": "https://api.github.com/users/amadeuszpawlik/followers",
      "following_url": "https://api.github.com/users/amadeuszpawlik/following{/other_user}",
      "gists_url": "https://api.github.com/users/amadeuszpawlik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amadeuszpawlik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amadeuszpawlik/subscriptions",
      "organizations_url": "https://api.github.com/users/amadeuszpawlik/orgs",
      "repos_url": "https://api.github.com/users/amadeuszpawlik/repos",
      "events_url": "https://api.github.com/users/amadeuszpawlik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amadeuszpawlik/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "24028831b3164261f9224fd4b8e7744ebba9e633",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/24028831b3164261f9224fd4b8e7744ebba9e633",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/24028831b3164261f9224fd4b8e7744ebba9e633"
      }
    ],
    "stats": {
      "total": 38,
      "additions": 26,
      "deletions": 12
    },
    "files": [
      {
        "sha": "0ab7a61f89a5e3dc28949a9379e6a0d3e5197d31",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/008b1aa6c2811e2052f8be06e643075db565b1bc/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/008b1aa6c2811e2052f8be06e643075db565b1bc/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=008b1aa6c2811e2052f8be06e643075db565b1bc",
        "patch": "@@ -1352,6 +1352,7 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n             const int64_t load_block_index_start_time = GetTimeMillis();\n             try {\n                 LOCK(cs_main);\n+                LOCK(cs_HavePruned);\n                 chainman.InitializeChainstate(*Assert(node.mempool));\n                 chainman.m_total_coinstip_cache = nCoinCacheUsage;\n                 chainman.m_total_coinsdb_cache = nCoinDBCache;\n@@ -1476,6 +1477,7 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n \n             try {\n                 LOCK(cs_main);\n+                LOCK(cs_HavePruned);\n \n                 for (CChainState* chainstate : chainman.GetAll()) {\n                     if (!is_coinsview_empty(chainstate)) {"
      },
      {
        "sha": "c5116befa54d84ef4aaa5832343804dd28abcc01",
        "filename": "src/node/blockstorage.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/008b1aa6c2811e2052f8be06e643075db565b1bc/src/node/blockstorage.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/008b1aa6c2811e2052f8be06e643075db565b1bc/src/node/blockstorage.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/node/blockstorage.cpp?ref=008b1aa6c2811e2052f8be06e643075db565b1bc",
        "patch": "@@ -17,6 +17,7 @@\n #include <streams.h>\n #include <undo.h>\n #include <util/system.h>\n+#include <validation.h>\n \n std::atomic_bool fImporting(false);\n std::atomic_bool fReindex(false);\n@@ -25,6 +26,7 @@ bool fPruneMode = false;\n uint64_t nPruneTarget = 0;\n \n // TODO make namespace {\n+Mutex cs_HavePruned;\n RecursiveMutex cs_LastBlockFile;\n std::vector<CBlockFileInfo> vinfoBlockFile;\n int nLastBlockFile = 0;\n@@ -47,7 +49,7 @@ static FlatFileSeq UndoFileSeq();\n \n bool IsBlockPruned(const CBlockIndex* pblockindex)\n {\n-    LOCK(cs_main);\n+    LOCK(cs_HavePruned);\n     return (fHavePruned && !(pblockindex->nStatus & BLOCK_HAVE_DATA) && pblockindex->nTx > 0);\n }\n "
      },
      {
        "sha": "a21936186cc51cd109bdca5d118327a1782dde81",
        "filename": "src/node/blockstorage.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/008b1aa6c2811e2052f8be06e643075db565b1bc/src/node/blockstorage.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/008b1aa6c2811e2052f8be06e643075db565b1bc/src/node/blockstorage.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/node/blockstorage.h?ref=008b1aa6c2811e2052f8be06e643075db565b1bc",
        "patch": "@@ -11,7 +11,6 @@\n #include <fs.h>\n #include <protocol.h> // For CMessageHeader::MessageStartChars\n #include <sync.h>\n-#include <validation.h> // For cs_main\n \n class ArgsManager;\n class BlockValidationState;\n@@ -36,11 +35,12 @@ static const unsigned int UNDOFILE_CHUNK_SIZE = 0x100000; // 1 MiB\n /** The maximum size of a blk?????.dat file (since 0.8) */\n static const unsigned int MAX_BLOCKFILE_SIZE = 0x8000000; // 128 MiB\n \n+extern Mutex cs_HavePruned;\n extern std::atomic_bool fImporting;\n extern std::atomic_bool fReindex;\n /** Pruning-related variables and constants */\n /** True if any block files have ever been pruned. */\n-extern bool fHavePruned GUARDED_BY(cs_main);\n+extern bool fHavePruned GUARDED_BY(cs_HavePruned);\n /** True if we're running in -prune mode. */\n extern bool fPruneMode;\n /** Number of MiB of block files that we're trying to stay below. */"
      },
      {
        "sha": "378ebf5ca61f237f3657132a43b841ed1f2fcdc2",
        "filename": "src/node/interfaces.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/008b1aa6c2811e2052f8be06e643075db565b1bc/src/node/interfaces.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/008b1aa6c2811e2052f8be06e643075db565b1bc/src/node/interfaces.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/node/interfaces.cpp?ref=008b1aa6c2811e2052f8be06e643075db565b1bc",
        "patch": "@@ -632,7 +632,7 @@ class ChainImpl : public Chain\n     CFeeRate relayDustFee() override { return ::dustRelayFee; }\n     bool havePruned() override\n     {\n-        LOCK(cs_main);\n+        LOCK(cs_HavePruned);\n         return ::fHavePruned;\n     }\n     bool isReadyToBroadcast() override { return !::fImporting && !::fReindex && !isInitialBlockDownload(); }"
      },
      {
        "sha": "c20b935f588d298de01d692888e759f3ca0d2235",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 18,
        "deletions": 8,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/008b1aa6c2811e2052f8be06e643075db565b1bc/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/008b1aa6c2811e2052f8be06e643075db565b1bc/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=008b1aa6c2811e2052f8be06e643075db565b1bc",
        "patch": "@@ -2183,9 +2183,12 @@ bool CChainState::FlushStateToDisk(\n             }\n             if (!setFilesToPrune.empty()) {\n                 fFlushForPrune = true;\n-                if (!fHavePruned) {\n-                    pblocktree->WriteFlag(\"prunedblockfiles\", true);\n-                    fHavePruned = true;\n+                {\n+                    LOCK(cs_HavePruned);\n+                    if (!fHavePruned) {\n+                        pblocktree->WriteFlag(\"prunedblockfiles\", true);\n+                        fHavePruned = true;\n+                    }\n                 }\n             }\n         }\n@@ -3925,10 +3928,13 @@ bool CChainState::LoadBlockIndexDB(const CChainParams& chainparams)\n         }\n     }\n \n-    // Check whether we have ever pruned block & undo files\n-    pblocktree->ReadFlag(\"prunedblockfiles\", fHavePruned);\n-    if (fHavePruned)\n-        LogPrintf(\"LoadBlockIndexDB(): Block files have previously been pruned\\n\");\n+    {\n+        LOCK(cs_HavePruned);\n+        // Check whether we have ever pruned block & undo files\n+        pblocktree->ReadFlag(\"prunedblockfiles\", fHavePruned);\n+        if (fHavePruned)\n+            LogPrintf(\"LoadBlockIndexDB(): Block files have previously been pruned\\n\");\n+    }\n \n     // Check whether we need to continue reindexing\n     bool fReindexing = false;\n@@ -4225,7 +4231,10 @@ void UnloadBlockIndex(CTxMemPool* mempool, ChainstateManager& chainman)\n     for (int b = 0; b < VERSIONBITS_NUM_BITS; b++) {\n         warningcache[b].clear();\n     }\n-    fHavePruned = false;\n+    {\n+        LOCK(cs_HavePruned);\n+        fHavePruned = false;\n+    }\n }\n \n bool ChainstateManager::LoadBlockIndex(const CChainParams& chainparams)\n@@ -4410,6 +4419,7 @@ void CChainState::CheckBlockIndex(const Consensus::Params& consensusParams)\n     }\n \n     LOCK(cs_main);\n+    LOCK(cs_HavePruned);\n \n     // During a reindex, we read the genesis block and call CheckBlockIndex before ActivateBestChain,\n     // so we have the genesis block in m_blockman.m_block_index but no active chain. (A few of the"
      }
    ]
  },
  {
    "sha": "b0aa15fde0fe0058ea7f77fcabbe0ac5db440f9d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiMGFhMTVmZGUwZmUwMDU4ZWE3Zjc3ZmNhYmJlMGFjNWRiNDQwZjlk",
    "commit": {
      "author": {
        "name": "amadeuszpawlik",
        "email": "apawlik@protonmail.com",
        "date": "2021-06-15T18:39:05Z"
      },
      "committer": {
        "name": "amadeuszpawlik",
        "email": "apawlik@protonmail.com",
        "date": "2021-06-15T18:39:21Z"
      },
      "message": "Fix double cs_HavePruned lock in init",
      "tree": {
        "sha": "57768c22e91a224f55c376ce5d9097c2fd3881f8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/57768c22e91a224f55c376ce5d9097c2fd3881f8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b0aa15fde0fe0058ea7f77fcabbe0ac5db440f9d",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEvSKeW3MFn9tKpWqZ8ososzXVzWwFAmDI8+AACgkQ8ososzXV\nzWwzZQwAsbrwINAYJPkUTu78DaCVjxu1ib6JWVrfpAdIXjzJDAYfPEO8jMOEQiEP\n4dfBHIYLHq60yeNJF4nxnQcXmrgJP0g/0pIM0WWKpG601uRxXuJxeXXO5r79bsUE\npPlUcYzwRiGm9IOdtD39F7G7N3/mtKHlE0xIHIlafzhfVLUiPFA2zI2vI5of5k8d\nBPfS75BQZB+LD3t+rz/jtdlidyd+AdCKWanDph/okH70XpcmW8zKzhyOGZhZIDtj\nMzhWKlqrhyQXjRoqtcCV/WNfoXalkHChKmBG8poBqkSEcRShnUqTvuFnmHi7Czvz\nPa18Z5ITLgxhm8Nb8J8+/X/lKtLYJPz/rmjBHm+HbOsktNis/Lo2yp975CuHwNQH\nj9FVxO7heScZ7Q3wH5ah84wnovHiWwjXGdmbBr3Q9vNqH8LOyzrl1sTdve6oyxYe\nsT/4vofo9kgp/444ekyrLxQ6xUsSjM8dImb9D+lWKcYz+qV6eBGrcoFBU0o+dSXs\n1zXohfxE\n=tPxR\n-----END PGP SIGNATURE-----",
        "payload": "tree 57768c22e91a224f55c376ce5d9097c2fd3881f8\nparent 008b1aa6c2811e2052f8be06e643075db565b1bc\nauthor amadeuszpawlik <apawlik@protonmail.com> 1623782345 +0200\ncommitter amadeuszpawlik <apawlik@protonmail.com> 1623782361 +0200\n\nFix double cs_HavePruned lock in init\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b0aa15fde0fe0058ea7f77fcabbe0ac5db440f9d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b0aa15fde0fe0058ea7f77fcabbe0ac5db440f9d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b0aa15fde0fe0058ea7f77fcabbe0ac5db440f9d/comments",
    "author": {
      "login": "amadeuszpawlik",
      "id": 35263201,
      "node_id": "MDQ6VXNlcjM1MjYzMjAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/35263201?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amadeuszpawlik",
      "html_url": "https://github.com/amadeuszpawlik",
      "followers_url": "https://api.github.com/users/amadeuszpawlik/followers",
      "following_url": "https://api.github.com/users/amadeuszpawlik/following{/other_user}",
      "gists_url": "https://api.github.com/users/amadeuszpawlik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amadeuszpawlik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amadeuszpawlik/subscriptions",
      "organizations_url": "https://api.github.com/users/amadeuszpawlik/orgs",
      "repos_url": "https://api.github.com/users/amadeuszpawlik/repos",
      "events_url": "https://api.github.com/users/amadeuszpawlik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amadeuszpawlik/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "amadeuszpawlik",
      "id": 35263201,
      "node_id": "MDQ6VXNlcjM1MjYzMjAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/35263201?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amadeuszpawlik",
      "html_url": "https://github.com/amadeuszpawlik",
      "followers_url": "https://api.github.com/users/amadeuszpawlik/followers",
      "following_url": "https://api.github.com/users/amadeuszpawlik/following{/other_user}",
      "gists_url": "https://api.github.com/users/amadeuszpawlik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amadeuszpawlik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amadeuszpawlik/subscriptions",
      "organizations_url": "https://api.github.com/users/amadeuszpawlik/orgs",
      "repos_url": "https://api.github.com/users/amadeuszpawlik/repos",
      "events_url": "https://api.github.com/users/amadeuszpawlik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amadeuszpawlik/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "008b1aa6c2811e2052f8be06e643075db565b1bc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/008b1aa6c2811e2052f8be06e643075db565b1bc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/008b1aa6c2811e2052f8be06e643075db565b1bc"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 8,
      "deletions": 6
    },
    "files": [
      {
        "sha": "db375c9da20b7749af84f84042e8841cb03404e1",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 6,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b0aa15fde0fe0058ea7f77fcabbe0ac5db440f9d/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b0aa15fde0fe0058ea7f77fcabbe0ac5db440f9d/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=b0aa15fde0fe0058ea7f77fcabbe0ac5db440f9d",
        "patch": "@@ -1352,7 +1352,6 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n             const int64_t load_block_index_start_time = GetTimeMillis();\n             try {\n                 LOCK(cs_main);\n-                LOCK(cs_HavePruned);\n                 chainman.InitializeChainstate(*Assert(node.mempool));\n                 chainman.m_total_coinstip_cache = nCoinCacheUsage;\n                 chainman.m_total_coinsdb_cache = nCoinDBCache;\n@@ -1390,11 +1389,14 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n                     return InitError(_(\"Incorrect or no genesis block found. Wrong datadir for network?\"));\n                 }\n \n-                // Check for changed -prune state.  What we are concerned about is a user who has pruned blocks\n-                // in the past, but is now trying to run unpruned.\n-                if (fHavePruned && !fPruneMode) {\n-                    strLoadError = _(\"You need to rebuild the database using -reindex to go back to unpruned mode.  This will redownload the entire blockchain\");\n-                    break;\n+                {\n+                    LOCK(cs_HavePruned);\n+                    // Check for changed -prune state.  What we are concerned about is a user who has pruned blocks\n+                    // in the past, but is now trying to run unpruned.\n+                    if (fHavePruned && !fPruneMode) {\n+                        strLoadError = _(\"You need to rebuild the database using -reindex to go back to unpruned mode.  This will redownload the entire blockchain\");\n+                        break;\n+                    }\n                 }\n \n                 // At this point blocktree args are consistent with what's on disk."
      }
    ]
  }
]