[
  {
    "sha": "fd86f998fcfd25d823d67a2920814e22445655f9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmZDg2Zjk5OGZjZmQyNWQ4MjNkNjdhMjkyMDgxNGUyMjQ0NTY1NWY5",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2017-09-29T14:00:20Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2017-09-29T14:00:20Z"
      },
      "message": "Squashed 'src/secp256k1/' changes from 84973d393..0b7024185\n\n0b7024185 Merge #474: Fix header guards using reserved identifiers\nab1f89f00 Merge #478: Fixed multiple typos\n8c7ea22d5 Fixed multiple typos\nabe2d3e84 Fix header guards using reserved identifiers\nf532bdc9f Merge #459: Add pubkey prefix constants to include/secp256k1.h\ncac7c5559 Merge #470: Fix wnaf_const documentation\n768514bac Fix wnaf_const documentation with respect to return value and number of words set\nb8c26a399 Merge #458: Fix typo in API documentation\n817fb2013 Merge #440: Fix typos\n12230f90e Merge #468: Remove redundant conditional expression\n2e1ccdca0 Remove redundant conditional expression\nbc61b91ac add pubkey prefix constants to include/secp256k1.h\nb0452e664 Fix typo in API documentation\n4c0f32ed5 Fix typo: \"Agressive\" \u2192 \"Aggressive\"\n73aca8364 Fix typo: \"exectured\" \u2192 \"executed\"\n\ngit-subtree-dir: src/secp256k1\ngit-subtree-split: 0b7024185045a49a1a6a4c5615bf31c94f63d9c4",
      "tree": {
        "sha": "af619602c243e0d8fbd5934f375faa4aedb4ca6e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/af619602c243e0d8fbd5934f375faa4aedb4ca6e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fd86f998fcfd25d823d67a2920814e22445655f9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fd86f998fcfd25d823d67a2920814e22445655f9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fd86f998fcfd25d823d67a2920814e22445655f9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fd86f998fcfd25d823d67a2920814e22445655f9/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e7c1b4490f2c559b050b8255df2d347dd0e4945f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e7c1b4490f2c559b050b8255df2d347dd0e4945f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e7c1b4490f2c559b050b8255df2d347dd0e4945f"
      }
    ],
    "stats": {
      "total": 365,
      "additions": 187,
      "deletions": 178
    },
    "files": [
      {
        "sha": "7eaf63bf6a0ee44ec22be25bf9bbb100c551be1f",
        "filename": "contrib/lax_der_parsing.h",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd86f998fcfd25d823d67a2920814e22445655f9/contrib/lax_der_parsing.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd86f998fcfd25d823d67a2920814e22445655f9/contrib/lax_der_parsing.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/lax_der_parsing.h?ref=fd86f998fcfd25d823d67a2920814e22445655f9",
        "patch": "@@ -48,14 +48,14 @@\n  *   8.3.1.\n  */\n \n-#ifndef _SECP256K1_CONTRIB_LAX_DER_PARSING_H_\n-#define _SECP256K1_CONTRIB_LAX_DER_PARSING_H_\n+#ifndef SECP256K1_CONTRIB_LAX_DER_PARSING_H\n+#define SECP256K1_CONTRIB_LAX_DER_PARSING_H\n \n #include <secp256k1.h>\n \n-# ifdef __cplusplus\n+#ifdef __cplusplus\n extern \"C\" {\n-# endif\n+#endif\n \n /** Parse a signature in \"lax DER\" format\n  *\n@@ -88,4 +88,4 @@ int ecdsa_signature_parse_der_lax(\n }\n #endif\n \n-#endif\n+#endif /* SECP256K1_CONTRIB_LAX_DER_PARSING_H */"
      },
      {
        "sha": "fece261fb9ed2b24df692cb059338f9f91aece6e",
        "filename": "contrib/lax_der_privatekey_parsing.h",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd86f998fcfd25d823d67a2920814e22445655f9/contrib/lax_der_privatekey_parsing.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd86f998fcfd25d823d67a2920814e22445655f9/contrib/lax_der_privatekey_parsing.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/lax_der_privatekey_parsing.h?ref=fd86f998fcfd25d823d67a2920814e22445655f9",
        "patch": "@@ -25,14 +25,14 @@\n  * library are sufficient.\n  */\n \n-#ifndef _SECP256K1_CONTRIB_BER_PRIVATEKEY_H_\n-#define _SECP256K1_CONTRIB_BER_PRIVATEKEY_H_\n+#ifndef SECP256K1_CONTRIB_BER_PRIVATEKEY_H\n+#define SECP256K1_CONTRIB_BER_PRIVATEKEY_H\n \n #include <secp256k1.h>\n \n-# ifdef __cplusplus\n+#ifdef __cplusplus\n extern \"C\" {\n-# endif\n+#endif\n \n /** Export a private key in DER format.\n  *\n@@ -87,4 +87,4 @@ SECP256K1_WARN_UNUSED_RESULT int ec_privkey_import_der(\n }\n #endif\n \n-#endif\n+#endif /* SECP256K1_CONTRIB_BER_PRIVATEKEY_H */"
      },
      {
        "sha": "3e9c098d19f6a043f5f2fc0f9f1e05245487e0cd",
        "filename": "include/secp256k1.h",
        "status": "modified",
        "additions": 15,
        "deletions": 8,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd86f998fcfd25d823d67a2920814e22445655f9/include/secp256k1.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd86f998fcfd25d823d67a2920814e22445655f9/include/secp256k1.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/include/secp256k1.h?ref=fd86f998fcfd25d823d67a2920814e22445655f9",
        "patch": "@@ -1,9 +1,9 @@\n-#ifndef _SECP256K1_\n-# define _SECP256K1_\n+#ifndef SECP256K1_H\n+#define SECP256K1_H\n \n-# ifdef __cplusplus\n+#ifdef __cplusplus\n extern \"C\" {\n-# endif\n+#endif\n \n #include <stddef.h>\n \n@@ -61,7 +61,7 @@ typedef struct {\n  *  however guaranteed to be 64 bytes in size, and can be safely copied/moved.\n  *  If you need to convert to a format suitable for storage, transmission, or\n  *  comparison, use the secp256k1_ecdsa_signature_serialize_* and\n- *  secp256k1_ecdsa_signature_serialize_* functions.\n+ *  secp256k1_ecdsa_signature_parse_* functions.\n  */\n typedef struct {\n     unsigned char data[64];\n@@ -159,6 +159,13 @@ typedef int (*secp256k1_nonce_function)(\n #define SECP256K1_EC_COMPRESSED (SECP256K1_FLAGS_TYPE_COMPRESSION | SECP256K1_FLAGS_BIT_COMPRESSION)\n #define SECP256K1_EC_UNCOMPRESSED (SECP256K1_FLAGS_TYPE_COMPRESSION)\n \n+/** Prefix byte used to tag various encoded curvepoints for specific purposes */\n+#define SECP256K1_TAG_PUBKEY_EVEN 0x02\n+#define SECP256K1_TAG_PUBKEY_ODD 0x03\n+#define SECP256K1_TAG_PUBKEY_UNCOMPRESSED 0x04\n+#define SECP256K1_TAG_PUBKEY_HYBRID_EVEN 0x06\n+#define SECP256K1_TAG_PUBKEY_HYBRID_ODD 0x07\n+\n /** Create a secp256k1 context object.\n  *\n  *  Returns: a newly created context object.\n@@ -607,8 +614,8 @@ SECP256K1_API SECP256K1_WARN_UNUSED_RESULT int secp256k1_ec_pubkey_combine(\n     size_t n\n ) SECP256K1_ARG_NONNULL(2) SECP256K1_ARG_NONNULL(3);\n \n-# ifdef __cplusplus\n+#ifdef __cplusplus\n }\n-# endif\n-\n #endif\n+\n+#endif /* SECP256K1_H */"
      },
      {
        "sha": "88492dc1a40bcf4f907a97c88d892d9e9122107d",
        "filename": "include/secp256k1_ecdh.h",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd86f998fcfd25d823d67a2920814e22445655f9/include/secp256k1_ecdh.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd86f998fcfd25d823d67a2920814e22445655f9/include/secp256k1_ecdh.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/include/secp256k1_ecdh.h?ref=fd86f998fcfd25d823d67a2920814e22445655f9",
        "patch": "@@ -1,11 +1,11 @@\n-#ifndef _SECP256K1_ECDH_\n-# define _SECP256K1_ECDH_\n+#ifndef SECP256K1_ECDH_H\n+#define SECP256K1_ECDH_H\n \n-# include \"secp256k1.h\"\n+#include \"secp256k1.h\"\n \n-# ifdef __cplusplus\n+#ifdef __cplusplus\n extern \"C\" {\n-# endif\n+#endif\n \n /** Compute an EC Diffie-Hellman secret in constant time\n  *  Returns: 1: exponentiation was successful\n@@ -24,8 +24,8 @@ SECP256K1_API SECP256K1_WARN_UNUSED_RESULT int secp256k1_ecdh(\n   const unsigned char *privkey\n ) SECP256K1_ARG_NONNULL(1) SECP256K1_ARG_NONNULL(2) SECP256K1_ARG_NONNULL(3) SECP256K1_ARG_NONNULL(4);\n \n-# ifdef __cplusplus\n+#ifdef __cplusplus\n }\n-# endif\n-\n #endif\n+\n+#endif /* SECP256K1_ECDH_H */"
      },
      {
        "sha": "cf6c5ed7f5e3db97507ed3d68dee95081abe3ddb",
        "filename": "include/secp256k1_recovery.h",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd86f998fcfd25d823d67a2920814e22445655f9/include/secp256k1_recovery.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd86f998fcfd25d823d67a2920814e22445655f9/include/secp256k1_recovery.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/include/secp256k1_recovery.h?ref=fd86f998fcfd25d823d67a2920814e22445655f9",
        "patch": "@@ -1,11 +1,11 @@\n-#ifndef _SECP256K1_RECOVERY_\n-# define _SECP256K1_RECOVERY_\n+#ifndef SECP256K1_RECOVERY_H\n+#define SECP256K1_RECOVERY_H\n \n-# include \"secp256k1.h\"\n+#include \"secp256k1.h\"\n \n-# ifdef __cplusplus\n+#ifdef __cplusplus\n extern \"C\" {\n-# endif\n+#endif\n \n /** Opaque data structured that holds a parsed ECDSA signature,\n  *  supporting pubkey recovery.\n@@ -103,8 +103,8 @@ SECP256K1_API SECP256K1_WARN_UNUSED_RESULT int secp256k1_ecdsa_recover(\n     const unsigned char *msg32\n ) SECP256K1_ARG_NONNULL(1) SECP256K1_ARG_NONNULL(2) SECP256K1_ARG_NONNULL(3) SECP256K1_ARG_NONNULL(4);\n \n-# ifdef __cplusplus\n+#ifdef __cplusplus\n }\n-# endif\n-\n #endif\n+\n+#endif /* SECP256K1_RECOVERY_H */"
      },
      {
        "sha": "8521f07999322d709c4232b3649d39b54be19307",
        "filename": "sage/group_prover.sage",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd86f998fcfd25d823d67a2920814e22445655f9/sage/group_prover.sage",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd86f998fcfd25d823d67a2920814e22445655f9/sage/group_prover.sage",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/sage/group_prover.sage?ref=fd86f998fcfd25d823d67a2920814e22445655f9",
        "patch": "@@ -3,7 +3,7 @@\n # to independently set assumptions on input or intermediary variables.\n #\n # The general approach is:\n-# * A constraint is a tuple of two sets of of symbolic expressions:\n+# * A constraint is a tuple of two sets of symbolic expressions:\n #   the first of which are required to evaluate to zero, the second of which\n #   are required to evaluate to nonzero.\n #   - A constraint is said to be conflicting if any of its nonzero expressions\n@@ -17,7 +17,7 @@\n #   - A constraint describing the requirements of the law, called \"require\"\n # * Implementations are transliterated into functions that operate as well on\n #   algebraic input points, and are called once per combination of branches\n-#   exectured. Each execution returns:\n+#   executed. Each execution returns:\n #   - A constraint describing the assumptions this implementation requires\n #     (such as Z1=1), called \"assumeFormula\"\n #   - A constraint describing the assumptions this specific branch requires,"
      },
      {
        "sha": "5a9cc3ffcfdaf200779eea6082b5168e8311211c",
        "filename": "src/asm/field_10x26_arm.s",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd86f998fcfd25d823d67a2920814e22445655f9/src/asm/field_10x26_arm.s",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd86f998fcfd25d823d67a2920814e22445655f9/src/asm/field_10x26_arm.s",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/asm/field_10x26_arm.s?ref=fd86f998fcfd25d823d67a2920814e22445655f9",
        "patch": "@@ -11,7 +11,7 @@ Note:\n \n - To avoid unnecessary loads and make use of available registers, two\n   'passes' have every time been interleaved, with the odd passes accumulating c' and d' \n-  which will be added to c and d respectively in the the even passes\n+  which will be added to c and d respectively in the even passes\n \n */\n \n@@ -23,7 +23,7 @@ Note:\n \t.eabi_attribute 10, 0 @ Tag_FP_arch = none\n \t.eabi_attribute 24, 1 @ Tag_ABI_align_needed = 8-byte\n \t.eabi_attribute 25, 1 @ Tag_ABI_align_preserved = 8-byte, except leaf SP\n-\t.eabi_attribute 30, 2 @ Tag_ABI_optimization_goals = Agressive Speed\n+\t.eabi_attribute 30, 2 @ Tag_ABI_optimization_goals = Aggressive Speed\n \t.eabi_attribute 34, 1 @ Tag_CPU_unaligned_access = v6\n \t.text\n "
      },
      {
        "sha": "fc588061ca40cdcc30151f5b7e17bc83b4a7125e",
        "filename": "src/basic-config.h",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd86f998fcfd25d823d67a2920814e22445655f9/src/basic-config.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd86f998fcfd25d823d67a2920814e22445655f9/src/basic-config.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/basic-config.h?ref=fd86f998fcfd25d823d67a2920814e22445655f9",
        "patch": "@@ -4,8 +4,8 @@\n  * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n  **********************************************************************/\n \n-#ifndef _SECP256K1_BASIC_CONFIG_\n-#define _SECP256K1_BASIC_CONFIG_\n+#ifndef SECP256K1_BASIC_CONFIG_H\n+#define SECP256K1_BASIC_CONFIG_H\n \n #ifdef USE_BASIC_CONFIG\n \n@@ -28,5 +28,6 @@\n #define USE_FIELD_10X26 1\n #define USE_SCALAR_8X32 1\n \n-#endif // USE_BASIC_CONFIG\n-#endif // _SECP256K1_BASIC_CONFIG_\n+#endif /* USE_BASIC_CONFIG */\n+\n+#endif /* SECP256K1_BASIC_CONFIG_H */"
      },
      {
        "sha": "d5ebe01301b81457cc3db630687458046b70af22",
        "filename": "src/bench.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd86f998fcfd25d823d67a2920814e22445655f9/src/bench.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd86f998fcfd25d823d67a2920814e22445655f9/src/bench.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench.h?ref=fd86f998fcfd25d823d67a2920814e22445655f9",
        "patch": "@@ -4,8 +4,8 @@\n  * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n  **********************************************************************/\n \n-#ifndef _SECP256K1_BENCH_H_\n-#define _SECP256K1_BENCH_H_\n+#ifndef SECP256K1_BENCH_H\n+#define SECP256K1_BENCH_H\n \n #include <stdio.h>\n #include <math.h>\n@@ -63,4 +63,4 @@ void run_benchmark(char *name, void (*benchmark)(void*), void (*setup)(void*), v\n     printf(\"us\\n\");\n }\n \n-#endif\n+#endif /* SECP256K1_BENCH_H */"
      },
      {
        "sha": "80590c7cc862db786aac61092753b78057d89ecb",
        "filename": "src/ecdsa.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd86f998fcfd25d823d67a2920814e22445655f9/src/ecdsa.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd86f998fcfd25d823d67a2920814e22445655f9/src/ecdsa.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/ecdsa.h?ref=fd86f998fcfd25d823d67a2920814e22445655f9",
        "patch": "@@ -4,8 +4,8 @@\n  * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n  **********************************************************************/\n \n-#ifndef _SECP256K1_ECDSA_\n-#define _SECP256K1_ECDSA_\n+#ifndef SECP256K1_ECDSA_H\n+#define SECP256K1_ECDSA_H\n \n #include <stddef.h>\n \n@@ -18,4 +18,4 @@ static int secp256k1_ecdsa_sig_serialize(unsigned char *sig, size_t *size, const\n static int secp256k1_ecdsa_sig_verify(const secp256k1_ecmult_context *ctx, const secp256k1_scalar* r, const secp256k1_scalar* s, const secp256k1_ge *pubkey, const secp256k1_scalar *message);\n static int secp256k1_ecdsa_sig_sign(const secp256k1_ecmult_gen_context *ctx, secp256k1_scalar* r, secp256k1_scalar* s, const secp256k1_scalar *seckey, const secp256k1_scalar *message, const secp256k1_scalar *nonce, int *recid);\n \n-#endif\n+#endif /* SECP256K1_ECDSA_H */"
      },
      {
        "sha": "c3400042d83935b6c3900ada179ebaaeb4afefa9",
        "filename": "src/ecdsa_impl.h",
        "status": "modified",
        "additions": 3,
        "deletions": 5,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd86f998fcfd25d823d67a2920814e22445655f9/src/ecdsa_impl.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd86f998fcfd25d823d67a2920814e22445655f9/src/ecdsa_impl.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/ecdsa_impl.h?ref=fd86f998fcfd25d823d67a2920814e22445655f9",
        "patch": "@@ -5,8 +5,8 @@\n  **********************************************************************/\n \n \n-#ifndef _SECP256K1_ECDSA_IMPL_H_\n-#define _SECP256K1_ECDSA_IMPL_H_\n+#ifndef SECP256K1_ECDSA_IMPL_H\n+#define SECP256K1_ECDSA_IMPL_H\n \n #include \"scalar.h\"\n #include \"field.h\"\n@@ -81,8 +81,6 @@ static int secp256k1_der_read_len(const unsigned char **sigp, const unsigned cha\n         return -1;\n     }\n     while (lenleft > 0) {\n-        if ((ret >> ((sizeof(size_t) - 1) * 8)) != 0) {\n-        }\n         ret = (ret << 8) | **sigp;\n         if (ret + lenleft > (size_t)(sigend - *sigp)) {\n             /* Result exceeds the length of the passed array. */\n@@ -312,4 +310,4 @@ static int secp256k1_ecdsa_sig_sign(const secp256k1_ecmult_gen_context *ctx, sec\n     return 1;\n }\n \n-#endif\n+#endif /* SECP256K1_ECDSA_IMPL_H */"
      },
      {
        "sha": "b621f1e6c39d93f0539d2090b326dcd4f26c61a3",
        "filename": "src/eckey.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd86f998fcfd25d823d67a2920814e22445655f9/src/eckey.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd86f998fcfd25d823d67a2920814e22445655f9/src/eckey.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/eckey.h?ref=fd86f998fcfd25d823d67a2920814e22445655f9",
        "patch": "@@ -4,8 +4,8 @@\n  * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n  **********************************************************************/\n \n-#ifndef _SECP256K1_ECKEY_\n-#define _SECP256K1_ECKEY_\n+#ifndef SECP256K1_ECKEY_H\n+#define SECP256K1_ECKEY_H\n \n #include <stddef.h>\n \n@@ -22,4 +22,4 @@ static int secp256k1_eckey_pubkey_tweak_add(const secp256k1_ecmult_context *ctx,\n static int secp256k1_eckey_privkey_tweak_mul(secp256k1_scalar *key, const secp256k1_scalar *tweak);\n static int secp256k1_eckey_pubkey_tweak_mul(const secp256k1_ecmult_context *ctx, secp256k1_ge *key, const secp256k1_scalar *tweak);\n \n-#endif\n+#endif /* SECP256K1_ECKEY_H */"
      },
      {
        "sha": "1ab9a68ec048c55a72e79674073e805e92487d63",
        "filename": "src/eckey_impl.h",
        "status": "modified",
        "additions": 9,
        "deletions": 8,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd86f998fcfd25d823d67a2920814e22445655f9/src/eckey_impl.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd86f998fcfd25d823d67a2920814e22445655f9/src/eckey_impl.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/eckey_impl.h?ref=fd86f998fcfd25d823d67a2920814e22445655f9",
        "patch": "@@ -4,8 +4,8 @@\n  * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n  **********************************************************************/\n \n-#ifndef _SECP256K1_ECKEY_IMPL_H_\n-#define _SECP256K1_ECKEY_IMPL_H_\n+#ifndef SECP256K1_ECKEY_IMPL_H\n+#define SECP256K1_ECKEY_IMPL_H\n \n #include \"eckey.h\"\n \n@@ -15,16 +15,17 @@\n #include \"ecmult_gen.h\"\n \n static int secp256k1_eckey_pubkey_parse(secp256k1_ge *elem, const unsigned char *pub, size_t size) {\n-    if (size == 33 && (pub[0] == 0x02 || pub[0] == 0x03)) {\n+    if (size == 33 && (pub[0] == SECP256K1_TAG_PUBKEY_EVEN || pub[0] == SECP256K1_TAG_PUBKEY_ODD)) {\n         secp256k1_fe x;\n-        return secp256k1_fe_set_b32(&x, pub+1) && secp256k1_ge_set_xo_var(elem, &x, pub[0] == 0x03);\n+        return secp256k1_fe_set_b32(&x, pub+1) && secp256k1_ge_set_xo_var(elem, &x, pub[0] == SECP256K1_TAG_PUBKEY_ODD);\n     } else if (size == 65 && (pub[0] == 0x04 || pub[0] == 0x06 || pub[0] == 0x07)) {\n         secp256k1_fe x, y;\n         if (!secp256k1_fe_set_b32(&x, pub+1) || !secp256k1_fe_set_b32(&y, pub+33)) {\n             return 0;\n         }\n         secp256k1_ge_set_xy(elem, &x, &y);\n-        if ((pub[0] == 0x06 || pub[0] == 0x07) && secp256k1_fe_is_odd(&y) != (pub[0] == 0x07)) {\n+        if ((pub[0] == SECP256K1_TAG_PUBKEY_HYBRID_EVEN || pub[0] == SECP256K1_TAG_PUBKEY_HYBRID_ODD) &&\n+            secp256k1_fe_is_odd(&y) != (pub[0] == SECP256K1_TAG_PUBKEY_HYBRID_ODD)) {\n             return 0;\n         }\n         return secp256k1_ge_is_valid_var(elem);\n@@ -42,10 +43,10 @@ static int secp256k1_eckey_pubkey_serialize(secp256k1_ge *elem, unsigned char *p\n     secp256k1_fe_get_b32(&pub[1], &elem->x);\n     if (compressed) {\n         *size = 33;\n-        pub[0] = 0x02 | (secp256k1_fe_is_odd(&elem->y) ? 0x01 : 0x00);\n+        pub[0] = secp256k1_fe_is_odd(&elem->y) ? SECP256K1_TAG_PUBKEY_ODD : SECP256K1_TAG_PUBKEY_EVEN;\n     } else {\n         *size = 65;\n-        pub[0] = 0x04;\n+        pub[0] = SECP256K1_TAG_PUBKEY_UNCOMPRESSED;\n         secp256k1_fe_get_b32(&pub[33], &elem->y);\n     }\n     return 1;\n@@ -96,4 +97,4 @@ static int secp256k1_eckey_pubkey_tweak_mul(const secp256k1_ecmult_context *ctx,\n     return 1;\n }\n \n-#endif\n+#endif /* SECP256K1_ECKEY_IMPL_H */"
      },
      {
        "sha": "6d44aba60b53b3ba6c3ad9e5cc67edce1faf4661",
        "filename": "src/ecmult.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd86f998fcfd25d823d67a2920814e22445655f9/src/ecmult.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd86f998fcfd25d823d67a2920814e22445655f9/src/ecmult.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/ecmult.h?ref=fd86f998fcfd25d823d67a2920814e22445655f9",
        "patch": "@@ -4,8 +4,8 @@\n  * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n  **********************************************************************/\n \n-#ifndef _SECP256K1_ECMULT_\n-#define _SECP256K1_ECMULT_\n+#ifndef SECP256K1_ECMULT_H\n+#define SECP256K1_ECMULT_H\n \n #include \"num.h\"\n #include \"group.h\"\n@@ -28,4 +28,4 @@ static int secp256k1_ecmult_context_is_built(const secp256k1_ecmult_context *ctx\n /** Double multiply: R = na*A + ng*G */\n static void secp256k1_ecmult(const secp256k1_ecmult_context *ctx, secp256k1_gej *r, const secp256k1_gej *a, const secp256k1_scalar *na, const secp256k1_scalar *ng);\n \n-#endif\n+#endif /* SECP256K1_ECMULT_H */"
      },
      {
        "sha": "72bf7d7582f15f9eb176bf215ea7622701481e08",
        "filename": "src/ecmult_const.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd86f998fcfd25d823d67a2920814e22445655f9/src/ecmult_const.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd86f998fcfd25d823d67a2920814e22445655f9/src/ecmult_const.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/ecmult_const.h?ref=fd86f998fcfd25d823d67a2920814e22445655f9",
        "patch": "@@ -4,12 +4,12 @@\n  * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n  **********************************************************************/\n \n-#ifndef _SECP256K1_ECMULT_CONST_\n-#define _SECP256K1_ECMULT_CONST_\n+#ifndef SECP256K1_ECMULT_CONST_H\n+#define SECP256K1_ECMULT_CONST_H\n \n #include \"scalar.h\"\n #include \"group.h\"\n \n static void secp256k1_ecmult_const(secp256k1_gej *r, const secp256k1_ge *a, const secp256k1_scalar *q);\n \n-#endif\n+#endif /* SECP256K1_ECMULT_CONST_H */"
      },
      {
        "sha": "7d7a172b7b385d5eea8fb81e3b9ee785a8bef971",
        "filename": "src/ecmult_const_impl.h",
        "status": "modified",
        "additions": 7,
        "deletions": 6,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd86f998fcfd25d823d67a2920814e22445655f9/src/ecmult_const_impl.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd86f998fcfd25d823d67a2920814e22445655f9/src/ecmult_const_impl.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/ecmult_const_impl.h?ref=fd86f998fcfd25d823d67a2920814e22445655f9",
        "patch": "@@ -4,8 +4,8 @@\n  * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n  **********************************************************************/\n \n-#ifndef _SECP256K1_ECMULT_CONST_IMPL_\n-#define _SECP256K1_ECMULT_CONST_IMPL_\n+#ifndef SECP256K1_ECMULT_CONST_IMPL_H\n+#define SECP256K1_ECMULT_CONST_IMPL_H\n \n #include \"scalar.h\"\n #include \"group.h\"\n@@ -42,11 +42,12 @@\n } while(0)\n \n \n-/** Convert a number to WNAF notation. The number becomes represented by sum(2^{wi} * wnaf[i], i=0..return_val)\n- *  with the following guarantees:\n+/** Convert a number to WNAF notation.\n+ *  The number becomes represented by sum(2^{wi} * wnaf[i], i=0..WNAF_SIZE(w)+1) - return_val.\n+ *  It has the following guarantees:\n  *  - each wnaf[i] an odd integer between -(1 << w) and (1 << w)\n  *  - each wnaf[i] is nonzero\n- *  - the number of words set is returned; this is always (WNAF_BITS + w - 1) / w\n+ *  - the number of words set is always WNAF_SIZE(w) + 1\n  *\n  *  Adapted from `The Width-w NAF Method Provides Small Memory and Fast Elliptic Scalar\n  *  Multiplications Secure against Side Channel Attacks`, Okeya and Tagaki. M. Joye (Ed.)\n@@ -236,4 +237,4 @@ static void secp256k1_ecmult_const(secp256k1_gej *r, const secp256k1_ge *a, cons\n     }\n }\n \n-#endif\n+#endif /* SECP256K1_ECMULT_CONST_IMPL_H */"
      },
      {
        "sha": "7564b7015f0b79aaa49ac6f81656cc22e5f3f08f",
        "filename": "src/ecmult_gen.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd86f998fcfd25d823d67a2920814e22445655f9/src/ecmult_gen.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd86f998fcfd25d823d67a2920814e22445655f9/src/ecmult_gen.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/ecmult_gen.h?ref=fd86f998fcfd25d823d67a2920814e22445655f9",
        "patch": "@@ -4,8 +4,8 @@\n  * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n  **********************************************************************/\n \n-#ifndef _SECP256K1_ECMULT_GEN_\n-#define _SECP256K1_ECMULT_GEN_\n+#ifndef SECP256K1_ECMULT_GEN_H\n+#define SECP256K1_ECMULT_GEN_H\n \n #include \"scalar.h\"\n #include \"group.h\"\n@@ -40,4 +40,4 @@ static void secp256k1_ecmult_gen(const secp256k1_ecmult_gen_context* ctx, secp25\n \n static void secp256k1_ecmult_gen_blind(secp256k1_ecmult_gen_context *ctx, const unsigned char *seed32);\n \n-#endif\n+#endif /* SECP256K1_ECMULT_GEN_H */"
      },
      {
        "sha": "9615b932dd5956562cdb521e62fd09ecdfec3fae",
        "filename": "src/ecmult_gen_impl.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd86f998fcfd25d823d67a2920814e22445655f9/src/ecmult_gen_impl.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd86f998fcfd25d823d67a2920814e22445655f9/src/ecmult_gen_impl.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/ecmult_gen_impl.h?ref=fd86f998fcfd25d823d67a2920814e22445655f9",
        "patch": "@@ -4,8 +4,8 @@\n  * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n  **********************************************************************/\n \n-#ifndef _SECP256K1_ECMULT_GEN_IMPL_H_\n-#define _SECP256K1_ECMULT_GEN_IMPL_H_\n+#ifndef SECP256K1_ECMULT_GEN_IMPL_H\n+#define SECP256K1_ECMULT_GEN_IMPL_H\n \n #include \"scalar.h\"\n #include \"group.h\"\n@@ -207,4 +207,4 @@ static void secp256k1_ecmult_gen_blind(secp256k1_ecmult_gen_context *ctx, const\n     secp256k1_gej_clear(&gb);\n }\n \n-#endif\n+#endif /* SECP256K1_ECMULT_GEN_IMPL_H */"
      },
      {
        "sha": "93d3794cb43488eac6b6ab231f067ff7f3db71c8",
        "filename": "src/ecmult_impl.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd86f998fcfd25d823d67a2920814e22445655f9/src/ecmult_impl.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd86f998fcfd25d823d67a2920814e22445655f9/src/ecmult_impl.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/ecmult_impl.h?ref=fd86f998fcfd25d823d67a2920814e22445655f9",
        "patch": "@@ -4,8 +4,8 @@\n  * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n  **********************************************************************/\n \n-#ifndef _SECP256K1_ECMULT_IMPL_H_\n-#define _SECP256K1_ECMULT_IMPL_H_\n+#ifndef SECP256K1_ECMULT_IMPL_H\n+#define SECP256K1_ECMULT_IMPL_H\n \n #include <string.h>\n \n@@ -403,4 +403,4 @@ static void secp256k1_ecmult(const secp256k1_ecmult_context *ctx, secp256k1_gej\n     }\n }\n \n-#endif\n+#endif /* SECP256K1_ECMULT_IMPL_H */"
      },
      {
        "sha": "bb6692ad57835498257a492028e1646d7cc584f5",
        "filename": "src/field.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd86f998fcfd25d823d67a2920814e22445655f9/src/field.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd86f998fcfd25d823d67a2920814e22445655f9/src/field.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/field.h?ref=fd86f998fcfd25d823d67a2920814e22445655f9",
        "patch": "@@ -4,8 +4,8 @@\n  * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n  **********************************************************************/\n \n-#ifndef _SECP256K1_FIELD_\n-#define _SECP256K1_FIELD_\n+#ifndef SECP256K1_FIELD_H\n+#define SECP256K1_FIELD_H\n \n /** Field element module.\n  *\n@@ -129,4 +129,4 @@ static void secp256k1_fe_storage_cmov(secp256k1_fe_storage *r, const secp256k1_f\n /** If flag is true, set *r equal to *a; otherwise leave it. Constant-time. */\n static void secp256k1_fe_cmov(secp256k1_fe *r, const secp256k1_fe *a, int flag);\n \n-#endif\n+#endif /* SECP256K1_FIELD_H */"
      },
      {
        "sha": "727c5267fbb5fc46894d7d9ca2b7bab5ab7eb10d",
        "filename": "src/field_10x26.h",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd86f998fcfd25d823d67a2920814e22445655f9/src/field_10x26.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd86f998fcfd25d823d67a2920814e22445655f9/src/field_10x26.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/field_10x26.h?ref=fd86f998fcfd25d823d67a2920814e22445655f9",
        "patch": "@@ -4,8 +4,8 @@\n  * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n  **********************************************************************/\n \n-#ifndef _SECP256K1_FIELD_REPR_\n-#define _SECP256K1_FIELD_REPR_\n+#ifndef SECP256K1_FIELD_REPR_H\n+#define SECP256K1_FIELD_REPR_H\n \n #include <stdint.h>\n \n@@ -44,4 +44,5 @@ typedef struct {\n \n #define SECP256K1_FE_STORAGE_CONST(d7, d6, d5, d4, d3, d2, d1, d0) {{ (d0), (d1), (d2), (d3), (d4), (d5), (d6), (d7) }}\n #define SECP256K1_FE_STORAGE_CONST_GET(d) d.n[7], d.n[6], d.n[5], d.n[4],d.n[3], d.n[2], d.n[1], d.n[0]\n-#endif\n+\n+#endif /* SECP256K1_FIELD_REPR_H */"
      },
      {
        "sha": "94f8132fc8e62bd3276c14d4ab910378a430d388",
        "filename": "src/field_10x26_impl.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd86f998fcfd25d823d67a2920814e22445655f9/src/field_10x26_impl.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd86f998fcfd25d823d67a2920814e22445655f9/src/field_10x26_impl.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/field_10x26_impl.h?ref=fd86f998fcfd25d823d67a2920814e22445655f9",
        "patch": "@@ -4,8 +4,8 @@\n  * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n  **********************************************************************/\n \n-#ifndef _SECP256K1_FIELD_REPR_IMPL_H_\n-#define _SECP256K1_FIELD_REPR_IMPL_H_\n+#ifndef SECP256K1_FIELD_REPR_IMPL_H\n+#define SECP256K1_FIELD_REPR_IMPL_H\n \n #include \"util.h\"\n #include \"num.h\"\n@@ -1158,4 +1158,4 @@ static SECP256K1_INLINE void secp256k1_fe_from_storage(secp256k1_fe *r, const se\n #endif\n }\n \n-#endif\n+#endif /* SECP256K1_FIELD_REPR_IMPL_H */"
      },
      {
        "sha": "bccd8feb4dde63dc0e9d2197fa5e9943882e2069",
        "filename": "src/field_5x52.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd86f998fcfd25d823d67a2920814e22445655f9/src/field_5x52.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd86f998fcfd25d823d67a2920814e22445655f9/src/field_5x52.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/field_5x52.h?ref=fd86f998fcfd25d823d67a2920814e22445655f9",
        "patch": "@@ -4,8 +4,8 @@\n  * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n  **********************************************************************/\n \n-#ifndef _SECP256K1_FIELD_REPR_\n-#define _SECP256K1_FIELD_REPR_\n+#ifndef SECP256K1_FIELD_REPR_H\n+#define SECP256K1_FIELD_REPR_H\n \n #include <stdint.h>\n \n@@ -44,4 +44,4 @@ typedef struct {\n     (d6) | (((uint64_t)(d7)) << 32) \\\n }}\n \n-#endif\n+#endif /* SECP256K1_FIELD_REPR_H */"
      },
      {
        "sha": "1fc3171f6b0ed85323807c26dabbe883eb24355f",
        "filename": "src/field_5x52_asm_impl.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd86f998fcfd25d823d67a2920814e22445655f9/src/field_5x52_asm_impl.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd86f998fcfd25d823d67a2920814e22445655f9/src/field_5x52_asm_impl.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/field_5x52_asm_impl.h?ref=fd86f998fcfd25d823d67a2920814e22445655f9",
        "patch": "@@ -11,8 +11,8 @@\n  * - December 2014, Pieter Wuille: converted from YASM to GCC inline assembly\n  */\n \n-#ifndef _SECP256K1_FIELD_INNER5X52_IMPL_H_\n-#define _SECP256K1_FIELD_INNER5X52_IMPL_H_\n+#ifndef SECP256K1_FIELD_INNER5X52_IMPL_H\n+#define SECP256K1_FIELD_INNER5X52_IMPL_H\n \n SECP256K1_INLINE static void secp256k1_fe_mul_inner(uint64_t *r, const uint64_t *a, const uint64_t * SECP256K1_RESTRICT b) {\n /**\n@@ -499,4 +499,4 @@ __asm__ __volatile__(\n );\n }\n \n-#endif\n+#endif /* SECP256K1_FIELD_INNER5X52_IMPL_H */"
      },
      {
        "sha": "957c61b01451a0f09ee6499db45c0745180da3b4",
        "filename": "src/field_5x52_impl.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd86f998fcfd25d823d67a2920814e22445655f9/src/field_5x52_impl.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd86f998fcfd25d823d67a2920814e22445655f9/src/field_5x52_impl.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/field_5x52_impl.h?ref=fd86f998fcfd25d823d67a2920814e22445655f9",
        "patch": "@@ -4,8 +4,8 @@\n  * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n  **********************************************************************/\n \n-#ifndef _SECP256K1_FIELD_REPR_IMPL_H_\n-#define _SECP256K1_FIELD_REPR_IMPL_H_\n+#ifndef SECP256K1_FIELD_REPR_IMPL_H\n+#define SECP256K1_FIELD_REPR_IMPL_H\n \n #if defined HAVE_CONFIG_H\n #include \"libsecp256k1-config.h\"\n@@ -493,4 +493,4 @@ static SECP256K1_INLINE void secp256k1_fe_from_storage(secp256k1_fe *r, const se\n #endif\n }\n \n-#endif\n+#endif /* SECP256K1_FIELD_REPR_IMPL_H */"
      },
      {
        "sha": "95a0d1791c0557fe65995c96acb26a1a1bae36cf",
        "filename": "src/field_5x52_int128_impl.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd86f998fcfd25d823d67a2920814e22445655f9/src/field_5x52_int128_impl.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd86f998fcfd25d823d67a2920814e22445655f9/src/field_5x52_int128_impl.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/field_5x52_int128_impl.h?ref=fd86f998fcfd25d823d67a2920814e22445655f9",
        "patch": "@@ -4,8 +4,8 @@\n  * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n  **********************************************************************/\n \n-#ifndef _SECP256K1_FIELD_INNER5X52_IMPL_H_\n-#define _SECP256K1_FIELD_INNER5X52_IMPL_H_\n+#ifndef SECP256K1_FIELD_INNER5X52_IMPL_H\n+#define SECP256K1_FIELD_INNER5X52_IMPL_H\n \n #include <stdint.h>\n \n@@ -274,4 +274,4 @@ SECP256K1_INLINE static void secp256k1_fe_sqr_inner(uint64_t *r, const uint64_t\n     /* [r4 r3 r2 r1 r0] = [p8 p7 p6 p5 p4 p3 p2 p1 p0] */\n }\n \n-#endif\n+#endif /* SECP256K1_FIELD_INNER5X52_IMPL_H */"
      },
      {
        "sha": "20428648af31299921fa0dc250e6951912178ec8",
        "filename": "src/field_impl.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd86f998fcfd25d823d67a2920814e22445655f9/src/field_impl.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd86f998fcfd25d823d67a2920814e22445655f9/src/field_impl.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/field_impl.h?ref=fd86f998fcfd25d823d67a2920814e22445655f9",
        "patch": "@@ -4,8 +4,8 @@\n  * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n  **********************************************************************/\n \n-#ifndef _SECP256K1_FIELD_IMPL_H_\n-#define _SECP256K1_FIELD_IMPL_H_\n+#ifndef SECP256K1_FIELD_IMPL_H\n+#define SECP256K1_FIELD_IMPL_H\n \n #if defined HAVE_CONFIG_H\n #include \"libsecp256k1-config.h\"\n@@ -312,4 +312,4 @@ static int secp256k1_fe_is_quad_var(const secp256k1_fe *a) {\n #endif\n }\n \n-#endif\n+#endif /* SECP256K1_FIELD_IMPL_H */"
      },
      {
        "sha": "ea1302deb8296eef824abed82ccad35dcab749cd",
        "filename": "src/group.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd86f998fcfd25d823d67a2920814e22445655f9/src/group.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd86f998fcfd25d823d67a2920814e22445655f9/src/group.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/group.h?ref=fd86f998fcfd25d823d67a2920814e22445655f9",
        "patch": "@@ -4,8 +4,8 @@\n  * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n  **********************************************************************/\n \n-#ifndef _SECP256K1_GROUP_\n-#define _SECP256K1_GROUP_\n+#ifndef SECP256K1_GROUP_H\n+#define SECP256K1_GROUP_H\n \n #include \"num.h\"\n #include \"field.h\"\n@@ -141,4 +141,4 @@ static void secp256k1_ge_storage_cmov(secp256k1_ge_storage *r, const secp256k1_g\n /** Rescale a jacobian point by b which must be non-zero. Constant-time. */\n static void secp256k1_gej_rescale(secp256k1_gej *r, const secp256k1_fe *b);\n \n-#endif\n+#endif /* SECP256K1_GROUP_H */"
      },
      {
        "sha": "b31b6c12efe336d0b866b95e58e1ecb4adef61af",
        "filename": "src/group_impl.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd86f998fcfd25d823d67a2920814e22445655f9/src/group_impl.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd86f998fcfd25d823d67a2920814e22445655f9/src/group_impl.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/group_impl.h?ref=fd86f998fcfd25d823d67a2920814e22445655f9",
        "patch": "@@ -4,8 +4,8 @@\n  * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n  **********************************************************************/\n \n-#ifndef _SECP256K1_GROUP_IMPL_H_\n-#define _SECP256K1_GROUP_IMPL_H_\n+#ifndef SECP256K1_GROUP_IMPL_H\n+#define SECP256K1_GROUP_IMPL_H\n \n #include \"num.h\"\n #include \"field.h\"\n@@ -697,4 +697,4 @@ static int secp256k1_gej_has_quad_y_var(const secp256k1_gej *a) {\n     return secp256k1_fe_is_quad_var(&yz);\n }\n \n-#endif\n+#endif /* SECP256K1_GROUP_IMPL_H */"
      },
      {
        "sha": "e08d25d2255c097e6574d55145b173b3f0ed0fdb",
        "filename": "src/hash.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd86f998fcfd25d823d67a2920814e22445655f9/src/hash.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd86f998fcfd25d823d67a2920814e22445655f9/src/hash.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/hash.h?ref=fd86f998fcfd25d823d67a2920814e22445655f9",
        "patch": "@@ -4,8 +4,8 @@\n  * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n  **********************************************************************/\n \n-#ifndef _SECP256K1_HASH_\n-#define _SECP256K1_HASH_\n+#ifndef SECP256K1_HASH_H\n+#define SECP256K1_HASH_H\n \n #include <stdlib.h>\n #include <stdint.h>\n@@ -38,4 +38,4 @@ static void secp256k1_rfc6979_hmac_sha256_initialize(secp256k1_rfc6979_hmac_sha2\n static void secp256k1_rfc6979_hmac_sha256_generate(secp256k1_rfc6979_hmac_sha256_t *rng, unsigned char *out, size_t outlen);\n static void secp256k1_rfc6979_hmac_sha256_finalize(secp256k1_rfc6979_hmac_sha256_t *rng);\n \n-#endif\n+#endif /* SECP256K1_HASH_H */"
      },
      {
        "sha": "4c9964ee06284338cf33a5c2be4661f11ea40652",
        "filename": "src/hash_impl.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd86f998fcfd25d823d67a2920814e22445655f9/src/hash_impl.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd86f998fcfd25d823d67a2920814e22445655f9/src/hash_impl.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/hash_impl.h?ref=fd86f998fcfd25d823d67a2920814e22445655f9",
        "patch": "@@ -4,8 +4,8 @@\n  * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n  **********************************************************************/\n \n-#ifndef _SECP256K1_HASH_IMPL_H_\n-#define _SECP256K1_HASH_IMPL_H_\n+#ifndef SECP256K1_HASH_IMPL_H\n+#define SECP256K1_HASH_IMPL_H\n \n #include \"hash.h\"\n \n@@ -278,4 +278,4 @@ static void secp256k1_rfc6979_hmac_sha256_finalize(secp256k1_rfc6979_hmac_sha256\n #undef Maj\n #undef Ch\n \n-#endif\n+#endif /* SECP256K1_HASH_IMPL_H */"
      },
      {
        "sha": "01ecba4d537483998ded89af1ef307eb7da0c301",
        "filename": "src/modules/ecdh/main_impl.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd86f998fcfd25d823d67a2920814e22445655f9/src/modules/ecdh/main_impl.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd86f998fcfd25d823d67a2920814e22445655f9/src/modules/ecdh/main_impl.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/modules/ecdh/main_impl.h?ref=fd86f998fcfd25d823d67a2920814e22445655f9",
        "patch": "@@ -4,8 +4,8 @@\n  * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n  **********************************************************************/\n \n-#ifndef _SECP256K1_MODULE_ECDH_MAIN_\n-#define _SECP256K1_MODULE_ECDH_MAIN_\n+#ifndef SECP256K1_MODULE_ECDH_MAIN_H\n+#define SECP256K1_MODULE_ECDH_MAIN_H\n \n #include \"include/secp256k1_ecdh.h\"\n #include \"ecmult_const_impl.h\"\n@@ -51,4 +51,4 @@ int secp256k1_ecdh(const secp256k1_context* ctx, unsigned char *result, const se\n     return ret;\n }\n \n-#endif\n+#endif /* SECP256K1_MODULE_ECDH_MAIN_H */"
      },
      {
        "sha": "cec30b67c67c2858eea9229863e8e74246523c2b",
        "filename": "src/modules/ecdh/tests_impl.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd86f998fcfd25d823d67a2920814e22445655f9/src/modules/ecdh/tests_impl.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd86f998fcfd25d823d67a2920814e22445655f9/src/modules/ecdh/tests_impl.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/modules/ecdh/tests_impl.h?ref=fd86f998fcfd25d823d67a2920814e22445655f9",
        "patch": "@@ -4,8 +4,8 @@\n  * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n  **********************************************************************/\n \n-#ifndef _SECP256K1_MODULE_ECDH_TESTS_\n-#define _SECP256K1_MODULE_ECDH_TESTS_\n+#ifndef SECP256K1_MODULE_ECDH_TESTS_H\n+#define SECP256K1_MODULE_ECDH_TESTS_H\n \n void test_ecdh_api(void) {\n     /* Setup context that just counts errors */\n@@ -102,4 +102,4 @@ void run_ecdh_tests(void) {\n     test_bad_scalar();\n }\n \n-#endif\n+#endif /* SECP256K1_MODULE_ECDH_TESTS_H */"
      },
      {
        "sha": "2f6691c5a1309d1b3a8b67014617f425202c88ca",
        "filename": "src/modules/recovery/main_impl.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd86f998fcfd25d823d67a2920814e22445655f9/src/modules/recovery/main_impl.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd86f998fcfd25d823d67a2920814e22445655f9/src/modules/recovery/main_impl.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/modules/recovery/main_impl.h?ref=fd86f998fcfd25d823d67a2920814e22445655f9",
        "patch": "@@ -4,8 +4,8 @@\n  * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n  **********************************************************************/\n \n-#ifndef _SECP256K1_MODULE_RECOVERY_MAIN_\n-#define _SECP256K1_MODULE_RECOVERY_MAIN_\n+#ifndef SECP256K1_MODULE_RECOVERY_MAIN_H\n+#define SECP256K1_MODULE_RECOVERY_MAIN_H\n \n #include \"include/secp256k1_recovery.h\"\n \n@@ -190,4 +190,4 @@ int secp256k1_ecdsa_recover(const secp256k1_context* ctx, secp256k1_pubkey *pubk\n     }\n }\n \n-#endif\n+#endif /* SECP256K1_MODULE_RECOVERY_MAIN_H */"
      },
      {
        "sha": "5c9bbe86101c9f59bf288019c2923fe6c5019b0e",
        "filename": "src/modules/recovery/tests_impl.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd86f998fcfd25d823d67a2920814e22445655f9/src/modules/recovery/tests_impl.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd86f998fcfd25d823d67a2920814e22445655f9/src/modules/recovery/tests_impl.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/modules/recovery/tests_impl.h?ref=fd86f998fcfd25d823d67a2920814e22445655f9",
        "patch": "@@ -4,8 +4,8 @@\n  * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n  **********************************************************************/\n \n-#ifndef _SECP256K1_MODULE_RECOVERY_TESTS_\n-#define _SECP256K1_MODULE_RECOVERY_TESTS_\n+#ifndef SECP256K1_MODULE_RECOVERY_TESTS_H\n+#define SECP256K1_MODULE_RECOVERY_TESTS_H\n \n static int recovery_test_nonce_function(unsigned char *nonce32, const unsigned char *msg32, const unsigned char *key32, const unsigned char *algo16, void *data, unsigned int counter) {\n     (void) msg32;\n@@ -390,4 +390,4 @@ void run_recovery_tests(void) {\n     test_ecdsa_recovery_edge_cases();\n }\n \n-#endif\n+#endif /* SECP256K1_MODULE_RECOVERY_TESTS_H */"
      },
      {
        "sha": "49f2dd791d5696bf89a11caf5461e3f5b33aaca0",
        "filename": "src/num.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd86f998fcfd25d823d67a2920814e22445655f9/src/num.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd86f998fcfd25d823d67a2920814e22445655f9/src/num.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/num.h?ref=fd86f998fcfd25d823d67a2920814e22445655f9",
        "patch": "@@ -4,8 +4,8 @@\n  * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n  **********************************************************************/\n \n-#ifndef _SECP256K1_NUM_\n-#define _SECP256K1_NUM_\n+#ifndef SECP256K1_NUM_H\n+#define SECP256K1_NUM_H\n \n #ifndef USE_NUM_NONE\n \n@@ -71,4 +71,4 @@ static void secp256k1_num_negate(secp256k1_num *r);\n \n #endif\n \n-#endif\n+#endif /* SECP256K1_NUM_H */"
      },
      {
        "sha": "3619844bd5127eb4018efc05e16e78ae9143a93a",
        "filename": "src/num_gmp.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd86f998fcfd25d823d67a2920814e22445655f9/src/num_gmp.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd86f998fcfd25d823d67a2920814e22445655f9/src/num_gmp.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/num_gmp.h?ref=fd86f998fcfd25d823d67a2920814e22445655f9",
        "patch": "@@ -4,8 +4,8 @@\n  * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n  **********************************************************************/\n \n-#ifndef _SECP256K1_NUM_REPR_\n-#define _SECP256K1_NUM_REPR_\n+#ifndef SECP256K1_NUM_REPR_H\n+#define SECP256K1_NUM_REPR_H\n \n #include <gmp.h>\n \n@@ -17,4 +17,4 @@ typedef struct {\n     int limbs;\n } secp256k1_num;\n \n-#endif\n+#endif /* SECP256K1_NUM_REPR_H */"
      },
      {
        "sha": "0ae2a8ba0ecb7b5b61aca0f94676dd7cbf86c437",
        "filename": "src/num_gmp_impl.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd86f998fcfd25d823d67a2920814e22445655f9/src/num_gmp_impl.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd86f998fcfd25d823d67a2920814e22445655f9/src/num_gmp_impl.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/num_gmp_impl.h?ref=fd86f998fcfd25d823d67a2920814e22445655f9",
        "patch": "@@ -4,8 +4,8 @@\n  * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n  **********************************************************************/\n \n-#ifndef _SECP256K1_NUM_REPR_IMPL_H_\n-#define _SECP256K1_NUM_REPR_IMPL_H_\n+#ifndef SECP256K1_NUM_REPR_IMPL_H\n+#define SECP256K1_NUM_REPR_IMPL_H\n \n #include <string.h>\n #include <stdlib.h>\n@@ -285,4 +285,4 @@ static void secp256k1_num_negate(secp256k1_num *r) {\n     r->neg ^= 1;\n }\n \n-#endif\n+#endif /* SECP256K1_NUM_REPR_IMPL_H */"
      },
      {
        "sha": "c45193b033dab813c0ec30697f23fd60098b8e9a",
        "filename": "src/num_impl.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd86f998fcfd25d823d67a2920814e22445655f9/src/num_impl.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd86f998fcfd25d823d67a2920814e22445655f9/src/num_impl.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/num_impl.h?ref=fd86f998fcfd25d823d67a2920814e22445655f9",
        "patch": "@@ -4,8 +4,8 @@\n  * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n  **********************************************************************/\n \n-#ifndef _SECP256K1_NUM_IMPL_H_\n-#define _SECP256K1_NUM_IMPL_H_\n+#ifndef SECP256K1_NUM_IMPL_H\n+#define SECP256K1_NUM_IMPL_H\n \n #if defined HAVE_CONFIG_H\n #include \"libsecp256k1-config.h\"\n@@ -21,4 +21,4 @@\n #error \"Please select num implementation\"\n #endif\n \n-#endif\n+#endif /* SECP256K1_NUM_IMPL_H */"
      },
      {
        "sha": "59304cb66e90504bbc65ec13449160336c91d66a",
        "filename": "src/scalar.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd86f998fcfd25d823d67a2920814e22445655f9/src/scalar.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd86f998fcfd25d823d67a2920814e22445655f9/src/scalar.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/scalar.h?ref=fd86f998fcfd25d823d67a2920814e22445655f9",
        "patch": "@@ -4,8 +4,8 @@\n  * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n  **********************************************************************/\n \n-#ifndef _SECP256K1_SCALAR_\n-#define _SECP256K1_SCALAR_\n+#ifndef SECP256K1_SCALAR_H\n+#define SECP256K1_SCALAR_H\n \n #include \"num.h\"\n \n@@ -103,4 +103,4 @@ static void secp256k1_scalar_split_lambda(secp256k1_scalar *r1, secp256k1_scalar\n /** Multiply a and b (without taking the modulus!), divide by 2**shift, and round to the nearest integer. Shift must be at least 256. */\n static void secp256k1_scalar_mul_shift_var(secp256k1_scalar *r, const secp256k1_scalar *a, const secp256k1_scalar *b, unsigned int shift);\n \n-#endif\n+#endif /* SECP256K1_SCALAR_H */"
      },
      {
        "sha": "19c7495d1c8e38db57068425f9b6bcc89abe5747",
        "filename": "src/scalar_4x64.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd86f998fcfd25d823d67a2920814e22445655f9/src/scalar_4x64.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd86f998fcfd25d823d67a2920814e22445655f9/src/scalar_4x64.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/scalar_4x64.h?ref=fd86f998fcfd25d823d67a2920814e22445655f9",
        "patch": "@@ -4,8 +4,8 @@\n  * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n  **********************************************************************/\n \n-#ifndef _SECP256K1_SCALAR_REPR_\n-#define _SECP256K1_SCALAR_REPR_\n+#ifndef SECP256K1_SCALAR_REPR_H\n+#define SECP256K1_SCALAR_REPR_H\n \n #include <stdint.h>\n \n@@ -16,4 +16,4 @@ typedef struct {\n \n #define SECP256K1_SCALAR_CONST(d7, d6, d5, d4, d3, d2, d1, d0) {{((uint64_t)(d1)) << 32 | (d0), ((uint64_t)(d3)) << 32 | (d2), ((uint64_t)(d5)) << 32 | (d4), ((uint64_t)(d7)) << 32 | (d6)}}\n \n-#endif\n+#endif /* SECP256K1_SCALAR_REPR_H */"
      },
      {
        "sha": "db1ebf94bee0415abcc20a0aa6359997a4b53b25",
        "filename": "src/scalar_4x64_impl.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd86f998fcfd25d823d67a2920814e22445655f9/src/scalar_4x64_impl.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd86f998fcfd25d823d67a2920814e22445655f9/src/scalar_4x64_impl.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/scalar_4x64_impl.h?ref=fd86f998fcfd25d823d67a2920814e22445655f9",
        "patch": "@@ -4,8 +4,8 @@\n  * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n  **********************************************************************/\n \n-#ifndef _SECP256K1_SCALAR_REPR_IMPL_H_\n-#define _SECP256K1_SCALAR_REPR_IMPL_H_\n+#ifndef SECP256K1_SCALAR_REPR_IMPL_H\n+#define SECP256K1_SCALAR_REPR_IMPL_H\n \n /* Limbs of the secp256k1 order. */\n #define SECP256K1_N_0 ((uint64_t)0xBFD25E8CD0364141ULL)\n@@ -946,4 +946,4 @@ SECP256K1_INLINE static void secp256k1_scalar_mul_shift_var(secp256k1_scalar *r,\n     secp256k1_scalar_cadd_bit(r, 0, (l[(shift - 1) >> 6] >> ((shift - 1) & 0x3f)) & 1);\n }\n \n-#endif\n+#endif /* SECP256K1_SCALAR_REPR_IMPL_H */"
      },
      {
        "sha": "2c9a348e2476057521f6ce89c7847333d031daf3",
        "filename": "src/scalar_8x32.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd86f998fcfd25d823d67a2920814e22445655f9/src/scalar_8x32.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd86f998fcfd25d823d67a2920814e22445655f9/src/scalar_8x32.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/scalar_8x32.h?ref=fd86f998fcfd25d823d67a2920814e22445655f9",
        "patch": "@@ -4,8 +4,8 @@\n  * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n  **********************************************************************/\n \n-#ifndef _SECP256K1_SCALAR_REPR_\n-#define _SECP256K1_SCALAR_REPR_\n+#ifndef SECP256K1_SCALAR_REPR_H\n+#define SECP256K1_SCALAR_REPR_H\n \n #include <stdint.h>\n \n@@ -16,4 +16,4 @@ typedef struct {\n \n #define SECP256K1_SCALAR_CONST(d7, d6, d5, d4, d3, d2, d1, d0) {{(d0), (d1), (d2), (d3), (d4), (d5), (d6), (d7)}}\n \n-#endif\n+#endif /* SECP256K1_SCALAR_REPR_H */"
      },
      {
        "sha": "4f9ed61feaeccf4fca036df8d9f24df2ad7a14ed",
        "filename": "src/scalar_8x32_impl.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd86f998fcfd25d823d67a2920814e22445655f9/src/scalar_8x32_impl.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd86f998fcfd25d823d67a2920814e22445655f9/src/scalar_8x32_impl.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/scalar_8x32_impl.h?ref=fd86f998fcfd25d823d67a2920814e22445655f9",
        "patch": "@@ -4,8 +4,8 @@\n  * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n  **********************************************************************/\n \n-#ifndef _SECP256K1_SCALAR_REPR_IMPL_H_\n-#define _SECP256K1_SCALAR_REPR_IMPL_H_\n+#ifndef SECP256K1_SCALAR_REPR_IMPL_H\n+#define SECP256K1_SCALAR_REPR_IMPL_H\n \n /* Limbs of the secp256k1 order. */\n #define SECP256K1_N_0 ((uint32_t)0xD0364141UL)\n@@ -718,4 +718,4 @@ SECP256K1_INLINE static void secp256k1_scalar_mul_shift_var(secp256k1_scalar *r,\n     secp256k1_scalar_cadd_bit(r, 0, (l[(shift - 1) >> 5] >> ((shift - 1) & 0x1f)) & 1);\n }\n \n-#endif\n+#endif /* SECP256K1_SCALAR_REPR_IMPL_H */"
      },
      {
        "sha": "fa790570ff837e2d98a1b606ed598bc9ac70fd4b",
        "filename": "src/scalar_impl.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd86f998fcfd25d823d67a2920814e22445655f9/src/scalar_impl.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd86f998fcfd25d823d67a2920814e22445655f9/src/scalar_impl.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/scalar_impl.h?ref=fd86f998fcfd25d823d67a2920814e22445655f9",
        "patch": "@@ -4,8 +4,8 @@\n  * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n  **********************************************************************/\n \n-#ifndef _SECP256K1_SCALAR_IMPL_H_\n-#define _SECP256K1_SCALAR_IMPL_H_\n+#ifndef SECP256K1_SCALAR_IMPL_H\n+#define SECP256K1_SCALAR_IMPL_H\n \n #include \"group.h\"\n #include \"scalar.h\"\n@@ -330,4 +330,4 @@ static void secp256k1_scalar_split_lambda(secp256k1_scalar *r1, secp256k1_scalar\n #endif\n #endif\n \n-#endif\n+#endif /* SECP256K1_SCALAR_IMPL_H */"
      },
      {
        "sha": "5836febc5b729d8113842212b31fee01b21410cb",
        "filename": "src/scalar_low.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd86f998fcfd25d823d67a2920814e22445655f9/src/scalar_low.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd86f998fcfd25d823d67a2920814e22445655f9/src/scalar_low.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/scalar_low.h?ref=fd86f998fcfd25d823d67a2920814e22445655f9",
        "patch": "@@ -4,12 +4,12 @@\n  * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n  **********************************************************************/\n \n-#ifndef _SECP256K1_SCALAR_REPR_\n-#define _SECP256K1_SCALAR_REPR_\n+#ifndef SECP256K1_SCALAR_REPR_H\n+#define SECP256K1_SCALAR_REPR_H\n \n #include <stdint.h>\n \n /** A scalar modulo the group order of the secp256k1 curve. */\n typedef uint32_t secp256k1_scalar;\n \n-#endif\n+#endif /* SECP256K1_SCALAR_REPR_H */"
      },
      {
        "sha": "c80e70c5a2ad2e310110ebd834edd2d1ad5a1a79",
        "filename": "src/scalar_low_impl.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd86f998fcfd25d823d67a2920814e22445655f9/src/scalar_low_impl.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd86f998fcfd25d823d67a2920814e22445655f9/src/scalar_low_impl.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/scalar_low_impl.h?ref=fd86f998fcfd25d823d67a2920814e22445655f9",
        "patch": "@@ -4,8 +4,8 @@\n  * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n  **********************************************************************/\n \n-#ifndef _SECP256K1_SCALAR_REPR_IMPL_H_\n-#define _SECP256K1_SCALAR_REPR_IMPL_H_\n+#ifndef SECP256K1_SCALAR_REPR_IMPL_H\n+#define SECP256K1_SCALAR_REPR_IMPL_H\n \n #include \"scalar.h\"\n \n@@ -111,4 +111,4 @@ SECP256K1_INLINE static int secp256k1_scalar_eq(const secp256k1_scalar *a, const\n     return *a == *b;\n }\n \n-#endif\n+#endif /* SECP256K1_SCALAR_REPR_IMPL_H */"
      },
      {
        "sha": "f1f9be077e378839e9c763a6d29e6a3682243e60",
        "filename": "src/testrand.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd86f998fcfd25d823d67a2920814e22445655f9/src/testrand.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd86f998fcfd25d823d67a2920814e22445655f9/src/testrand.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/testrand.h?ref=fd86f998fcfd25d823d67a2920814e22445655f9",
        "patch": "@@ -4,8 +4,8 @@\n  * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n  **********************************************************************/\n \n-#ifndef _SECP256K1_TESTRAND_H_\n-#define _SECP256K1_TESTRAND_H_\n+#ifndef SECP256K1_TESTRAND_H\n+#define SECP256K1_TESTRAND_H\n \n #if defined HAVE_CONFIG_H\n #include \"libsecp256k1-config.h\"\n@@ -35,4 +35,4 @@ static void secp256k1_rand256_test(unsigned char *b32);\n /** Generate pseudorandom bytes with long sequences of zero and one bits. */\n static void secp256k1_rand_bytes_test(unsigned char *bytes, size_t len);\n \n-#endif\n+#endif /* SECP256K1_TESTRAND_H */"
      },
      {
        "sha": "1255574209440a1c77dcd9cf60502f2d15cffcc2",
        "filename": "src/testrand_impl.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd86f998fcfd25d823d67a2920814e22445655f9/src/testrand_impl.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd86f998fcfd25d823d67a2920814e22445655f9/src/testrand_impl.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/testrand_impl.h?ref=fd86f998fcfd25d823d67a2920814e22445655f9",
        "patch": "@@ -4,8 +4,8 @@\n  * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n  **********************************************************************/\n \n-#ifndef _SECP256K1_TESTRAND_IMPL_H_\n-#define _SECP256K1_TESTRAND_IMPL_H_\n+#ifndef SECP256K1_TESTRAND_IMPL_H\n+#define SECP256K1_TESTRAND_IMPL_H\n \n #include <stdint.h>\n #include <string.h>\n@@ -107,4 +107,4 @@ static void secp256k1_rand256_test(unsigned char *b32) {\n     secp256k1_rand_bytes_test(b32, 32);\n }\n \n-#endif\n+#endif /* SECP256K1_TESTRAND_IMPL_H */"
      },
      {
        "sha": "b0441d8e305a4d6b557f46d6417d28dde9553f9c",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd86f998fcfd25d823d67a2920814e22445655f9/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd86f998fcfd25d823d67a2920814e22445655f9/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=fd86f998fcfd25d823d67a2920814e22445655f9",
        "patch": "@@ -4,8 +4,8 @@\n  * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n  **********************************************************************/\n \n-#ifndef _SECP256K1_UTIL_H_\n-#define _SECP256K1_UTIL_H_\n+#ifndef SECP256K1_UTIL_H\n+#define SECP256K1_UTIL_H\n \n #if defined HAVE_CONFIG_H\n #include \"libsecp256k1-config.h\"\n@@ -110,4 +110,4 @@ static SECP256K1_INLINE void *checked_malloc(const secp256k1_callback* cb, size_\n SECP256K1_GNUC_EXT typedef unsigned __int128 uint128_t;\n #endif\n \n-#endif\n+#endif /* SECP256K1_UTIL_H */"
      }
    ]
  },
  {
    "sha": "999968e41662c1a676936db423db82af4411d78d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5OTk5NjhlNDE2NjJjMWE2NzY5MzZkYjQyM2RiODJhZjQ0MTFkNzhk",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2017-09-29T14:03:38Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2017-09-29T14:02:39Z"
      },
      "message": "Bump secp256k1 subtree",
      "tree": {
        "sha": "11f29ac9fd4c65928ee439baa14f138d1b79a826",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/11f29ac9fd4c65928ee439baa14f138d1b79a826"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/999968e41662c1a676936db423db82af4411d78d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/999968e41662c1a676936db423db82af4411d78d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/999968e41662c1a676936db423db82af4411d78d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/999968e41662c1a676936db423db82af4411d78d/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bbc901d3a683c92438a6b28dca50b956decc4433",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bbc901d3a683c92438a6b28dca50b956decc4433",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bbc901d3a683c92438a6b28dca50b956decc4433"
      },
      {
        "sha": "fd86f998fcfd25d823d67a2920814e22445655f9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fd86f998fcfd25d823d67a2920814e22445655f9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fd86f998fcfd25d823d67a2920814e22445655f9"
      }
    ],
    "stats": {
      "total": 361,
      "additions": 185,
      "deletions": 176
    },
    "files": [
      {
        "sha": "7eaf63bf6a0ee44ec22be25bf9bbb100c551be1f",
        "filename": "src/secp256k1/contrib/lax_der_parsing.h",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/contrib/lax_der_parsing.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/contrib/lax_der_parsing.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/contrib/lax_der_parsing.h?ref=999968e41662c1a676936db423db82af4411d78d",
        "patch": "@@ -48,14 +48,14 @@\n  *   8.3.1.\n  */\n \n-#ifndef _SECP256K1_CONTRIB_LAX_DER_PARSING_H_\n-#define _SECP256K1_CONTRIB_LAX_DER_PARSING_H_\n+#ifndef SECP256K1_CONTRIB_LAX_DER_PARSING_H\n+#define SECP256K1_CONTRIB_LAX_DER_PARSING_H\n \n #include <secp256k1.h>\n \n-# ifdef __cplusplus\n+#ifdef __cplusplus\n extern \"C\" {\n-# endif\n+#endif\n \n /** Parse a signature in \"lax DER\" format\n  *\n@@ -88,4 +88,4 @@ int ecdsa_signature_parse_der_lax(\n }\n #endif\n \n-#endif\n+#endif /* SECP256K1_CONTRIB_LAX_DER_PARSING_H */"
      },
      {
        "sha": "fece261fb9ed2b24df692cb059338f9f91aece6e",
        "filename": "src/secp256k1/contrib/lax_der_privatekey_parsing.h",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/contrib/lax_der_privatekey_parsing.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/contrib/lax_der_privatekey_parsing.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/contrib/lax_der_privatekey_parsing.h?ref=999968e41662c1a676936db423db82af4411d78d",
        "patch": "@@ -25,14 +25,14 @@\n  * library are sufficient.\n  */\n \n-#ifndef _SECP256K1_CONTRIB_BER_PRIVATEKEY_H_\n-#define _SECP256K1_CONTRIB_BER_PRIVATEKEY_H_\n+#ifndef SECP256K1_CONTRIB_BER_PRIVATEKEY_H\n+#define SECP256K1_CONTRIB_BER_PRIVATEKEY_H\n \n #include <secp256k1.h>\n \n-# ifdef __cplusplus\n+#ifdef __cplusplus\n extern \"C\" {\n-# endif\n+#endif\n \n /** Export a private key in DER format.\n  *\n@@ -87,4 +87,4 @@ SECP256K1_WARN_UNUSED_RESULT int ec_privkey_import_der(\n }\n #endif\n \n-#endif\n+#endif /* SECP256K1_CONTRIB_BER_PRIVATEKEY_H */"
      },
      {
        "sha": "3e9c098d19f6a043f5f2fc0f9f1e05245487e0cd",
        "filename": "src/secp256k1/include/secp256k1.h",
        "status": "modified",
        "additions": 15,
        "deletions": 8,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/include/secp256k1.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/include/secp256k1.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/include/secp256k1.h?ref=999968e41662c1a676936db423db82af4411d78d",
        "patch": "@@ -1,9 +1,9 @@\n-#ifndef _SECP256K1_\n-# define _SECP256K1_\n+#ifndef SECP256K1_H\n+#define SECP256K1_H\n \n-# ifdef __cplusplus\n+#ifdef __cplusplus\n extern \"C\" {\n-# endif\n+#endif\n \n #include <stddef.h>\n \n@@ -61,7 +61,7 @@ typedef struct {\n  *  however guaranteed to be 64 bytes in size, and can be safely copied/moved.\n  *  If you need to convert to a format suitable for storage, transmission, or\n  *  comparison, use the secp256k1_ecdsa_signature_serialize_* and\n- *  secp256k1_ecdsa_signature_serialize_* functions.\n+ *  secp256k1_ecdsa_signature_parse_* functions.\n  */\n typedef struct {\n     unsigned char data[64];\n@@ -159,6 +159,13 @@ typedef int (*secp256k1_nonce_function)(\n #define SECP256K1_EC_COMPRESSED (SECP256K1_FLAGS_TYPE_COMPRESSION | SECP256K1_FLAGS_BIT_COMPRESSION)\n #define SECP256K1_EC_UNCOMPRESSED (SECP256K1_FLAGS_TYPE_COMPRESSION)\n \n+/** Prefix byte used to tag various encoded curvepoints for specific purposes */\n+#define SECP256K1_TAG_PUBKEY_EVEN 0x02\n+#define SECP256K1_TAG_PUBKEY_ODD 0x03\n+#define SECP256K1_TAG_PUBKEY_UNCOMPRESSED 0x04\n+#define SECP256K1_TAG_PUBKEY_HYBRID_EVEN 0x06\n+#define SECP256K1_TAG_PUBKEY_HYBRID_ODD 0x07\n+\n /** Create a secp256k1 context object.\n  *\n  *  Returns: a newly created context object.\n@@ -607,8 +614,8 @@ SECP256K1_API SECP256K1_WARN_UNUSED_RESULT int secp256k1_ec_pubkey_combine(\n     size_t n\n ) SECP256K1_ARG_NONNULL(2) SECP256K1_ARG_NONNULL(3);\n \n-# ifdef __cplusplus\n+#ifdef __cplusplus\n }\n-# endif\n-\n #endif\n+\n+#endif /* SECP256K1_H */"
      },
      {
        "sha": "88492dc1a40bcf4f907a97c88d892d9e9122107d",
        "filename": "src/secp256k1/include/secp256k1_ecdh.h",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/include/secp256k1_ecdh.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/include/secp256k1_ecdh.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/include/secp256k1_ecdh.h?ref=999968e41662c1a676936db423db82af4411d78d",
        "patch": "@@ -1,11 +1,11 @@\n-#ifndef _SECP256K1_ECDH_\n-# define _SECP256K1_ECDH_\n+#ifndef SECP256K1_ECDH_H\n+#define SECP256K1_ECDH_H\n \n-# include \"secp256k1.h\"\n+#include \"secp256k1.h\"\n \n-# ifdef __cplusplus\n+#ifdef __cplusplus\n extern \"C\" {\n-# endif\n+#endif\n \n /** Compute an EC Diffie-Hellman secret in constant time\n  *  Returns: 1: exponentiation was successful\n@@ -24,8 +24,8 @@ SECP256K1_API SECP256K1_WARN_UNUSED_RESULT int secp256k1_ecdh(\n   const unsigned char *privkey\n ) SECP256K1_ARG_NONNULL(1) SECP256K1_ARG_NONNULL(2) SECP256K1_ARG_NONNULL(3) SECP256K1_ARG_NONNULL(4);\n \n-# ifdef __cplusplus\n+#ifdef __cplusplus\n }\n-# endif\n-\n #endif\n+\n+#endif /* SECP256K1_ECDH_H */"
      },
      {
        "sha": "cf6c5ed7f5e3db97507ed3d68dee95081abe3ddb",
        "filename": "src/secp256k1/include/secp256k1_recovery.h",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/include/secp256k1_recovery.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/include/secp256k1_recovery.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/include/secp256k1_recovery.h?ref=999968e41662c1a676936db423db82af4411d78d",
        "patch": "@@ -1,11 +1,11 @@\n-#ifndef _SECP256K1_RECOVERY_\n-# define _SECP256K1_RECOVERY_\n+#ifndef SECP256K1_RECOVERY_H\n+#define SECP256K1_RECOVERY_H\n \n-# include \"secp256k1.h\"\n+#include \"secp256k1.h\"\n \n-# ifdef __cplusplus\n+#ifdef __cplusplus\n extern \"C\" {\n-# endif\n+#endif\n \n /** Opaque data structured that holds a parsed ECDSA signature,\n  *  supporting pubkey recovery.\n@@ -103,8 +103,8 @@ SECP256K1_API SECP256K1_WARN_UNUSED_RESULT int secp256k1_ecdsa_recover(\n     const unsigned char *msg32\n ) SECP256K1_ARG_NONNULL(1) SECP256K1_ARG_NONNULL(2) SECP256K1_ARG_NONNULL(3) SECP256K1_ARG_NONNULL(4);\n \n-# ifdef __cplusplus\n+#ifdef __cplusplus\n }\n-# endif\n-\n #endif\n+\n+#endif /* SECP256K1_RECOVERY_H */"
      },
      {
        "sha": "8521f07999322d709c4232b3649d39b54be19307",
        "filename": "src/secp256k1/sage/group_prover.sage",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/sage/group_prover.sage",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/sage/group_prover.sage",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/sage/group_prover.sage?ref=999968e41662c1a676936db423db82af4411d78d",
        "patch": "@@ -17,7 +17,7 @@\n #   - A constraint describing the requirements of the law, called \"require\"\n # * Implementations are transliterated into functions that operate as well on\n #   algebraic input points, and are called once per combination of branches\n-#   exectured. Each execution returns:\n+#   executed. Each execution returns:\n #   - A constraint describing the assumptions this implementation requires\n #     (such as Z1=1), called \"assumeFormula\"\n #   - A constraint describing the assumptions this specific branch requires,"
      },
      {
        "sha": "5a9cc3ffcfdaf200779eea6082b5168e8311211c",
        "filename": "src/secp256k1/src/asm/field_10x26_arm.s",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/src/asm/field_10x26_arm.s",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/src/asm/field_10x26_arm.s",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/asm/field_10x26_arm.s?ref=999968e41662c1a676936db423db82af4411d78d",
        "patch": "@@ -23,7 +23,7 @@ Note:\n \t.eabi_attribute 10, 0 @ Tag_FP_arch = none\n \t.eabi_attribute 24, 1 @ Tag_ABI_align_needed = 8-byte\n \t.eabi_attribute 25, 1 @ Tag_ABI_align_preserved = 8-byte, except leaf SP\n-\t.eabi_attribute 30, 2 @ Tag_ABI_optimization_goals = Agressive Speed\n+\t.eabi_attribute 30, 2 @ Tag_ABI_optimization_goals = Aggressive Speed\n \t.eabi_attribute 34, 1 @ Tag_CPU_unaligned_access = v6\n \t.text\n "
      },
      {
        "sha": "fc588061ca40cdcc30151f5b7e17bc83b4a7125e",
        "filename": "src/secp256k1/src/basic-config.h",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/src/basic-config.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/src/basic-config.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/basic-config.h?ref=999968e41662c1a676936db423db82af4411d78d",
        "patch": "@@ -4,8 +4,8 @@\n  * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n  **********************************************************************/\n \n-#ifndef _SECP256K1_BASIC_CONFIG_\n-#define _SECP256K1_BASIC_CONFIG_\n+#ifndef SECP256K1_BASIC_CONFIG_H\n+#define SECP256K1_BASIC_CONFIG_H\n \n #ifdef USE_BASIC_CONFIG\n \n@@ -28,5 +28,6 @@\n #define USE_FIELD_10X26 1\n #define USE_SCALAR_8X32 1\n \n-#endif // USE_BASIC_CONFIG\n-#endif // _SECP256K1_BASIC_CONFIG_\n+#endif /* USE_BASIC_CONFIG */\n+\n+#endif /* SECP256K1_BASIC_CONFIG_H */"
      },
      {
        "sha": "d5ebe01301b81457cc3db630687458046b70af22",
        "filename": "src/secp256k1/src/bench.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/src/bench.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/src/bench.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/bench.h?ref=999968e41662c1a676936db423db82af4411d78d",
        "patch": "@@ -4,8 +4,8 @@\n  * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n  **********************************************************************/\n \n-#ifndef _SECP256K1_BENCH_H_\n-#define _SECP256K1_BENCH_H_\n+#ifndef SECP256K1_BENCH_H\n+#define SECP256K1_BENCH_H\n \n #include <stdio.h>\n #include <math.h>\n@@ -63,4 +63,4 @@ void run_benchmark(char *name, void (*benchmark)(void*), void (*setup)(void*), v\n     printf(\"us\\n\");\n }\n \n-#endif\n+#endif /* SECP256K1_BENCH_H */"
      },
      {
        "sha": "80590c7cc862db786aac61092753b78057d89ecb",
        "filename": "src/secp256k1/src/ecdsa.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/src/ecdsa.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/src/ecdsa.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/ecdsa.h?ref=999968e41662c1a676936db423db82af4411d78d",
        "patch": "@@ -4,8 +4,8 @@\n  * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n  **********************************************************************/\n \n-#ifndef _SECP256K1_ECDSA_\n-#define _SECP256K1_ECDSA_\n+#ifndef SECP256K1_ECDSA_H\n+#define SECP256K1_ECDSA_H\n \n #include <stddef.h>\n \n@@ -18,4 +18,4 @@ static int secp256k1_ecdsa_sig_serialize(unsigned char *sig, size_t *size, const\n static int secp256k1_ecdsa_sig_verify(const secp256k1_ecmult_context *ctx, const secp256k1_scalar* r, const secp256k1_scalar* s, const secp256k1_ge *pubkey, const secp256k1_scalar *message);\n static int secp256k1_ecdsa_sig_sign(const secp256k1_ecmult_gen_context *ctx, secp256k1_scalar* r, secp256k1_scalar* s, const secp256k1_scalar *seckey, const secp256k1_scalar *message, const secp256k1_scalar *nonce, int *recid);\n \n-#endif\n+#endif /* SECP256K1_ECDSA_H */"
      },
      {
        "sha": "c3400042d83935b6c3900ada179ebaaeb4afefa9",
        "filename": "src/secp256k1/src/ecdsa_impl.h",
        "status": "modified",
        "additions": 3,
        "deletions": 5,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/src/ecdsa_impl.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/src/ecdsa_impl.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/ecdsa_impl.h?ref=999968e41662c1a676936db423db82af4411d78d",
        "patch": "@@ -5,8 +5,8 @@\n  **********************************************************************/\n \n \n-#ifndef _SECP256K1_ECDSA_IMPL_H_\n-#define _SECP256K1_ECDSA_IMPL_H_\n+#ifndef SECP256K1_ECDSA_IMPL_H\n+#define SECP256K1_ECDSA_IMPL_H\n \n #include \"scalar.h\"\n #include \"field.h\"\n@@ -81,8 +81,6 @@ static int secp256k1_der_read_len(const unsigned char **sigp, const unsigned cha\n         return -1;\n     }\n     while (lenleft > 0) {\n-        if ((ret >> ((sizeof(size_t) - 1) * 8)) != 0) {\n-        }\n         ret = (ret << 8) | **sigp;\n         if (ret + lenleft > (size_t)(sigend - *sigp)) {\n             /* Result exceeds the length of the passed array. */\n@@ -312,4 +310,4 @@ static int secp256k1_ecdsa_sig_sign(const secp256k1_ecmult_gen_context *ctx, sec\n     return 1;\n }\n \n-#endif\n+#endif /* SECP256K1_ECDSA_IMPL_H */"
      },
      {
        "sha": "b621f1e6c39d93f0539d2090b326dcd4f26c61a3",
        "filename": "src/secp256k1/src/eckey.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/src/eckey.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/src/eckey.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/eckey.h?ref=999968e41662c1a676936db423db82af4411d78d",
        "patch": "@@ -4,8 +4,8 @@\n  * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n  **********************************************************************/\n \n-#ifndef _SECP256K1_ECKEY_\n-#define _SECP256K1_ECKEY_\n+#ifndef SECP256K1_ECKEY_H\n+#define SECP256K1_ECKEY_H\n \n #include <stddef.h>\n \n@@ -22,4 +22,4 @@ static int secp256k1_eckey_pubkey_tweak_add(const secp256k1_ecmult_context *ctx,\n static int secp256k1_eckey_privkey_tweak_mul(secp256k1_scalar *key, const secp256k1_scalar *tweak);\n static int secp256k1_eckey_pubkey_tweak_mul(const secp256k1_ecmult_context *ctx, secp256k1_ge *key, const secp256k1_scalar *tweak);\n \n-#endif\n+#endif /* SECP256K1_ECKEY_H */"
      },
      {
        "sha": "1ab9a68ec048c55a72e79674073e805e92487d63",
        "filename": "src/secp256k1/src/eckey_impl.h",
        "status": "modified",
        "additions": 9,
        "deletions": 8,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/src/eckey_impl.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/src/eckey_impl.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/eckey_impl.h?ref=999968e41662c1a676936db423db82af4411d78d",
        "patch": "@@ -4,8 +4,8 @@\n  * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n  **********************************************************************/\n \n-#ifndef _SECP256K1_ECKEY_IMPL_H_\n-#define _SECP256K1_ECKEY_IMPL_H_\n+#ifndef SECP256K1_ECKEY_IMPL_H\n+#define SECP256K1_ECKEY_IMPL_H\n \n #include \"eckey.h\"\n \n@@ -15,16 +15,17 @@\n #include \"ecmult_gen.h\"\n \n static int secp256k1_eckey_pubkey_parse(secp256k1_ge *elem, const unsigned char *pub, size_t size) {\n-    if (size == 33 && (pub[0] == 0x02 || pub[0] == 0x03)) {\n+    if (size == 33 && (pub[0] == SECP256K1_TAG_PUBKEY_EVEN || pub[0] == SECP256K1_TAG_PUBKEY_ODD)) {\n         secp256k1_fe x;\n-        return secp256k1_fe_set_b32(&x, pub+1) && secp256k1_ge_set_xo_var(elem, &x, pub[0] == 0x03);\n+        return secp256k1_fe_set_b32(&x, pub+1) && secp256k1_ge_set_xo_var(elem, &x, pub[0] == SECP256K1_TAG_PUBKEY_ODD);\n     } else if (size == 65 && (pub[0] == 0x04 || pub[0] == 0x06 || pub[0] == 0x07)) {\n         secp256k1_fe x, y;\n         if (!secp256k1_fe_set_b32(&x, pub+1) || !secp256k1_fe_set_b32(&y, pub+33)) {\n             return 0;\n         }\n         secp256k1_ge_set_xy(elem, &x, &y);\n-        if ((pub[0] == 0x06 || pub[0] == 0x07) && secp256k1_fe_is_odd(&y) != (pub[0] == 0x07)) {\n+        if ((pub[0] == SECP256K1_TAG_PUBKEY_HYBRID_EVEN || pub[0] == SECP256K1_TAG_PUBKEY_HYBRID_ODD) &&\n+            secp256k1_fe_is_odd(&y) != (pub[0] == SECP256K1_TAG_PUBKEY_HYBRID_ODD)) {\n             return 0;\n         }\n         return secp256k1_ge_is_valid_var(elem);\n@@ -42,10 +43,10 @@ static int secp256k1_eckey_pubkey_serialize(secp256k1_ge *elem, unsigned char *p\n     secp256k1_fe_get_b32(&pub[1], &elem->x);\n     if (compressed) {\n         *size = 33;\n-        pub[0] = 0x02 | (secp256k1_fe_is_odd(&elem->y) ? 0x01 : 0x00);\n+        pub[0] = secp256k1_fe_is_odd(&elem->y) ? SECP256K1_TAG_PUBKEY_ODD : SECP256K1_TAG_PUBKEY_EVEN;\n     } else {\n         *size = 65;\n-        pub[0] = 0x04;\n+        pub[0] = SECP256K1_TAG_PUBKEY_UNCOMPRESSED;\n         secp256k1_fe_get_b32(&pub[33], &elem->y);\n     }\n     return 1;\n@@ -96,4 +97,4 @@ static int secp256k1_eckey_pubkey_tweak_mul(const secp256k1_ecmult_context *ctx,\n     return 1;\n }\n \n-#endif\n+#endif /* SECP256K1_ECKEY_IMPL_H */"
      },
      {
        "sha": "6d44aba60b53b3ba6c3ad9e5cc67edce1faf4661",
        "filename": "src/secp256k1/src/ecmult.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/src/ecmult.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/src/ecmult.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/ecmult.h?ref=999968e41662c1a676936db423db82af4411d78d",
        "patch": "@@ -4,8 +4,8 @@\n  * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n  **********************************************************************/\n \n-#ifndef _SECP256K1_ECMULT_\n-#define _SECP256K1_ECMULT_\n+#ifndef SECP256K1_ECMULT_H\n+#define SECP256K1_ECMULT_H\n \n #include \"num.h\"\n #include \"group.h\"\n@@ -28,4 +28,4 @@ static int secp256k1_ecmult_context_is_built(const secp256k1_ecmult_context *ctx\n /** Double multiply: R = na*A + ng*G */\n static void secp256k1_ecmult(const secp256k1_ecmult_context *ctx, secp256k1_gej *r, const secp256k1_gej *a, const secp256k1_scalar *na, const secp256k1_scalar *ng);\n \n-#endif\n+#endif /* SECP256K1_ECMULT_H */"
      },
      {
        "sha": "72bf7d7582f15f9eb176bf215ea7622701481e08",
        "filename": "src/secp256k1/src/ecmult_const.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/src/ecmult_const.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/src/ecmult_const.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/ecmult_const.h?ref=999968e41662c1a676936db423db82af4411d78d",
        "patch": "@@ -4,12 +4,12 @@\n  * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n  **********************************************************************/\n \n-#ifndef _SECP256K1_ECMULT_CONST_\n-#define _SECP256K1_ECMULT_CONST_\n+#ifndef SECP256K1_ECMULT_CONST_H\n+#define SECP256K1_ECMULT_CONST_H\n \n #include \"scalar.h\"\n #include \"group.h\"\n \n static void secp256k1_ecmult_const(secp256k1_gej *r, const secp256k1_ge *a, const secp256k1_scalar *q);\n \n-#endif\n+#endif /* SECP256K1_ECMULT_CONST_H */"
      },
      {
        "sha": "7d7a172b7b385d5eea8fb81e3b9ee785a8bef971",
        "filename": "src/secp256k1/src/ecmult_const_impl.h",
        "status": "modified",
        "additions": 7,
        "deletions": 6,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/src/ecmult_const_impl.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/src/ecmult_const_impl.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/ecmult_const_impl.h?ref=999968e41662c1a676936db423db82af4411d78d",
        "patch": "@@ -4,8 +4,8 @@\n  * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n  **********************************************************************/\n \n-#ifndef _SECP256K1_ECMULT_CONST_IMPL_\n-#define _SECP256K1_ECMULT_CONST_IMPL_\n+#ifndef SECP256K1_ECMULT_CONST_IMPL_H\n+#define SECP256K1_ECMULT_CONST_IMPL_H\n \n #include \"scalar.h\"\n #include \"group.h\"\n@@ -42,11 +42,12 @@\n } while(0)\n \n \n-/** Convert a number to WNAF notation. The number becomes represented by sum(2^{wi} * wnaf[i], i=0..return_val)\n- *  with the following guarantees:\n+/** Convert a number to WNAF notation.\n+ *  The number becomes represented by sum(2^{wi} * wnaf[i], i=0..WNAF_SIZE(w)+1) - return_val.\n+ *  It has the following guarantees:\n  *  - each wnaf[i] an odd integer between -(1 << w) and (1 << w)\n  *  - each wnaf[i] is nonzero\n- *  - the number of words set is returned; this is always (WNAF_BITS + w - 1) / w\n+ *  - the number of words set is always WNAF_SIZE(w) + 1\n  *\n  *  Adapted from `The Width-w NAF Method Provides Small Memory and Fast Elliptic Scalar\n  *  Multiplications Secure against Side Channel Attacks`, Okeya and Tagaki. M. Joye (Ed.)\n@@ -236,4 +237,4 @@ static void secp256k1_ecmult_const(secp256k1_gej *r, const secp256k1_ge *a, cons\n     }\n }\n \n-#endif\n+#endif /* SECP256K1_ECMULT_CONST_IMPL_H */"
      },
      {
        "sha": "7564b7015f0b79aaa49ac6f81656cc22e5f3f08f",
        "filename": "src/secp256k1/src/ecmult_gen.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/src/ecmult_gen.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/src/ecmult_gen.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/ecmult_gen.h?ref=999968e41662c1a676936db423db82af4411d78d",
        "patch": "@@ -4,8 +4,8 @@\n  * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n  **********************************************************************/\n \n-#ifndef _SECP256K1_ECMULT_GEN_\n-#define _SECP256K1_ECMULT_GEN_\n+#ifndef SECP256K1_ECMULT_GEN_H\n+#define SECP256K1_ECMULT_GEN_H\n \n #include \"scalar.h\"\n #include \"group.h\"\n@@ -40,4 +40,4 @@ static void secp256k1_ecmult_gen(const secp256k1_ecmult_gen_context* ctx, secp25\n \n static void secp256k1_ecmult_gen_blind(secp256k1_ecmult_gen_context *ctx, const unsigned char *seed32);\n \n-#endif\n+#endif /* SECP256K1_ECMULT_GEN_H */"
      },
      {
        "sha": "9615b932dd5956562cdb521e62fd09ecdfec3fae",
        "filename": "src/secp256k1/src/ecmult_gen_impl.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/src/ecmult_gen_impl.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/src/ecmult_gen_impl.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/ecmult_gen_impl.h?ref=999968e41662c1a676936db423db82af4411d78d",
        "patch": "@@ -4,8 +4,8 @@\n  * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n  **********************************************************************/\n \n-#ifndef _SECP256K1_ECMULT_GEN_IMPL_H_\n-#define _SECP256K1_ECMULT_GEN_IMPL_H_\n+#ifndef SECP256K1_ECMULT_GEN_IMPL_H\n+#define SECP256K1_ECMULT_GEN_IMPL_H\n \n #include \"scalar.h\"\n #include \"group.h\"\n@@ -207,4 +207,4 @@ static void secp256k1_ecmult_gen_blind(secp256k1_ecmult_gen_context *ctx, const\n     secp256k1_gej_clear(&gb);\n }\n \n-#endif\n+#endif /* SECP256K1_ECMULT_GEN_IMPL_H */"
      },
      {
        "sha": "93d3794cb43488eac6b6ab231f067ff7f3db71c8",
        "filename": "src/secp256k1/src/ecmult_impl.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/src/ecmult_impl.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/src/ecmult_impl.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/ecmult_impl.h?ref=999968e41662c1a676936db423db82af4411d78d",
        "patch": "@@ -4,8 +4,8 @@\n  * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n  **********************************************************************/\n \n-#ifndef _SECP256K1_ECMULT_IMPL_H_\n-#define _SECP256K1_ECMULT_IMPL_H_\n+#ifndef SECP256K1_ECMULT_IMPL_H\n+#define SECP256K1_ECMULT_IMPL_H\n \n #include <string.h>\n \n@@ -403,4 +403,4 @@ static void secp256k1_ecmult(const secp256k1_ecmult_context *ctx, secp256k1_gej\n     }\n }\n \n-#endif\n+#endif /* SECP256K1_ECMULT_IMPL_H */"
      },
      {
        "sha": "bb6692ad57835498257a492028e1646d7cc584f5",
        "filename": "src/secp256k1/src/field.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/src/field.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/src/field.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/field.h?ref=999968e41662c1a676936db423db82af4411d78d",
        "patch": "@@ -4,8 +4,8 @@\n  * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n  **********************************************************************/\n \n-#ifndef _SECP256K1_FIELD_\n-#define _SECP256K1_FIELD_\n+#ifndef SECP256K1_FIELD_H\n+#define SECP256K1_FIELD_H\n \n /** Field element module.\n  *\n@@ -129,4 +129,4 @@ static void secp256k1_fe_storage_cmov(secp256k1_fe_storage *r, const secp256k1_f\n /** If flag is true, set *r equal to *a; otherwise leave it. Constant-time. */\n static void secp256k1_fe_cmov(secp256k1_fe *r, const secp256k1_fe *a, int flag);\n \n-#endif\n+#endif /* SECP256K1_FIELD_H */"
      },
      {
        "sha": "727c5267fbb5fc46894d7d9ca2b7bab5ab7eb10d",
        "filename": "src/secp256k1/src/field_10x26.h",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/src/field_10x26.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/src/field_10x26.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/field_10x26.h?ref=999968e41662c1a676936db423db82af4411d78d",
        "patch": "@@ -4,8 +4,8 @@\n  * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n  **********************************************************************/\n \n-#ifndef _SECP256K1_FIELD_REPR_\n-#define _SECP256K1_FIELD_REPR_\n+#ifndef SECP256K1_FIELD_REPR_H\n+#define SECP256K1_FIELD_REPR_H\n \n #include <stdint.h>\n \n@@ -44,4 +44,5 @@ typedef struct {\n \n #define SECP256K1_FE_STORAGE_CONST(d7, d6, d5, d4, d3, d2, d1, d0) {{ (d0), (d1), (d2), (d3), (d4), (d5), (d6), (d7) }}\n #define SECP256K1_FE_STORAGE_CONST_GET(d) d.n[7], d.n[6], d.n[5], d.n[4],d.n[3], d.n[2], d.n[1], d.n[0]\n-#endif\n+\n+#endif /* SECP256K1_FIELD_REPR_H */"
      },
      {
        "sha": "94f8132fc8e62bd3276c14d4ab910378a430d388",
        "filename": "src/secp256k1/src/field_10x26_impl.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/src/field_10x26_impl.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/src/field_10x26_impl.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/field_10x26_impl.h?ref=999968e41662c1a676936db423db82af4411d78d",
        "patch": "@@ -4,8 +4,8 @@\n  * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n  **********************************************************************/\n \n-#ifndef _SECP256K1_FIELD_REPR_IMPL_H_\n-#define _SECP256K1_FIELD_REPR_IMPL_H_\n+#ifndef SECP256K1_FIELD_REPR_IMPL_H\n+#define SECP256K1_FIELD_REPR_IMPL_H\n \n #include \"util.h\"\n #include \"num.h\"\n@@ -1158,4 +1158,4 @@ static SECP256K1_INLINE void secp256k1_fe_from_storage(secp256k1_fe *r, const se\n #endif\n }\n \n-#endif\n+#endif /* SECP256K1_FIELD_REPR_IMPL_H */"
      },
      {
        "sha": "bccd8feb4dde63dc0e9d2197fa5e9943882e2069",
        "filename": "src/secp256k1/src/field_5x52.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/src/field_5x52.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/src/field_5x52.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/field_5x52.h?ref=999968e41662c1a676936db423db82af4411d78d",
        "patch": "@@ -4,8 +4,8 @@\n  * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n  **********************************************************************/\n \n-#ifndef _SECP256K1_FIELD_REPR_\n-#define _SECP256K1_FIELD_REPR_\n+#ifndef SECP256K1_FIELD_REPR_H\n+#define SECP256K1_FIELD_REPR_H\n \n #include <stdint.h>\n \n@@ -44,4 +44,4 @@ typedef struct {\n     (d6) | (((uint64_t)(d7)) << 32) \\\n }}\n \n-#endif\n+#endif /* SECP256K1_FIELD_REPR_H */"
      },
      {
        "sha": "1fc3171f6b0ed85323807c26dabbe883eb24355f",
        "filename": "src/secp256k1/src/field_5x52_asm_impl.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/src/field_5x52_asm_impl.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/src/field_5x52_asm_impl.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/field_5x52_asm_impl.h?ref=999968e41662c1a676936db423db82af4411d78d",
        "patch": "@@ -11,8 +11,8 @@\n  * - December 2014, Pieter Wuille: converted from YASM to GCC inline assembly\n  */\n \n-#ifndef _SECP256K1_FIELD_INNER5X52_IMPL_H_\n-#define _SECP256K1_FIELD_INNER5X52_IMPL_H_\n+#ifndef SECP256K1_FIELD_INNER5X52_IMPL_H\n+#define SECP256K1_FIELD_INNER5X52_IMPL_H\n \n SECP256K1_INLINE static void secp256k1_fe_mul_inner(uint64_t *r, const uint64_t *a, const uint64_t * SECP256K1_RESTRICT b) {\n /**\n@@ -499,4 +499,4 @@ __asm__ __volatile__(\n );\n }\n \n-#endif\n+#endif /* SECP256K1_FIELD_INNER5X52_IMPL_H */"
      },
      {
        "sha": "957c61b01451a0f09ee6499db45c0745180da3b4",
        "filename": "src/secp256k1/src/field_5x52_impl.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/src/field_5x52_impl.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/src/field_5x52_impl.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/field_5x52_impl.h?ref=999968e41662c1a676936db423db82af4411d78d",
        "patch": "@@ -4,8 +4,8 @@\n  * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n  **********************************************************************/\n \n-#ifndef _SECP256K1_FIELD_REPR_IMPL_H_\n-#define _SECP256K1_FIELD_REPR_IMPL_H_\n+#ifndef SECP256K1_FIELD_REPR_IMPL_H\n+#define SECP256K1_FIELD_REPR_IMPL_H\n \n #if defined HAVE_CONFIG_H\n #include \"libsecp256k1-config.h\"\n@@ -493,4 +493,4 @@ static SECP256K1_INLINE void secp256k1_fe_from_storage(secp256k1_fe *r, const se\n #endif\n }\n \n-#endif\n+#endif /* SECP256K1_FIELD_REPR_IMPL_H */"
      },
      {
        "sha": "95a0d1791c0557fe65995c96acb26a1a1bae36cf",
        "filename": "src/secp256k1/src/field_5x52_int128_impl.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/src/field_5x52_int128_impl.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/src/field_5x52_int128_impl.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/field_5x52_int128_impl.h?ref=999968e41662c1a676936db423db82af4411d78d",
        "patch": "@@ -4,8 +4,8 @@\n  * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n  **********************************************************************/\n \n-#ifndef _SECP256K1_FIELD_INNER5X52_IMPL_H_\n-#define _SECP256K1_FIELD_INNER5X52_IMPL_H_\n+#ifndef SECP256K1_FIELD_INNER5X52_IMPL_H\n+#define SECP256K1_FIELD_INNER5X52_IMPL_H\n \n #include <stdint.h>\n \n@@ -274,4 +274,4 @@ SECP256K1_INLINE static void secp256k1_fe_sqr_inner(uint64_t *r, const uint64_t\n     /* [r4 r3 r2 r1 r0] = [p8 p7 p6 p5 p4 p3 p2 p1 p0] */\n }\n \n-#endif\n+#endif /* SECP256K1_FIELD_INNER5X52_IMPL_H */"
      },
      {
        "sha": "20428648af31299921fa0dc250e6951912178ec8",
        "filename": "src/secp256k1/src/field_impl.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/src/field_impl.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/src/field_impl.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/field_impl.h?ref=999968e41662c1a676936db423db82af4411d78d",
        "patch": "@@ -4,8 +4,8 @@\n  * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n  **********************************************************************/\n \n-#ifndef _SECP256K1_FIELD_IMPL_H_\n-#define _SECP256K1_FIELD_IMPL_H_\n+#ifndef SECP256K1_FIELD_IMPL_H\n+#define SECP256K1_FIELD_IMPL_H\n \n #if defined HAVE_CONFIG_H\n #include \"libsecp256k1-config.h\"\n@@ -312,4 +312,4 @@ static int secp256k1_fe_is_quad_var(const secp256k1_fe *a) {\n #endif\n }\n \n-#endif\n+#endif /* SECP256K1_FIELD_IMPL_H */"
      },
      {
        "sha": "ea1302deb8296eef824abed82ccad35dcab749cd",
        "filename": "src/secp256k1/src/group.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/src/group.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/src/group.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/group.h?ref=999968e41662c1a676936db423db82af4411d78d",
        "patch": "@@ -4,8 +4,8 @@\n  * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n  **********************************************************************/\n \n-#ifndef _SECP256K1_GROUP_\n-#define _SECP256K1_GROUP_\n+#ifndef SECP256K1_GROUP_H\n+#define SECP256K1_GROUP_H\n \n #include \"num.h\"\n #include \"field.h\"\n@@ -141,4 +141,4 @@ static void secp256k1_ge_storage_cmov(secp256k1_ge_storage *r, const secp256k1_g\n /** Rescale a jacobian point by b which must be non-zero. Constant-time. */\n static void secp256k1_gej_rescale(secp256k1_gej *r, const secp256k1_fe *b);\n \n-#endif\n+#endif /* SECP256K1_GROUP_H */"
      },
      {
        "sha": "b31b6c12efe336d0b866b95e58e1ecb4adef61af",
        "filename": "src/secp256k1/src/group_impl.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/src/group_impl.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/src/group_impl.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/group_impl.h?ref=999968e41662c1a676936db423db82af4411d78d",
        "patch": "@@ -4,8 +4,8 @@\n  * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n  **********************************************************************/\n \n-#ifndef _SECP256K1_GROUP_IMPL_H_\n-#define _SECP256K1_GROUP_IMPL_H_\n+#ifndef SECP256K1_GROUP_IMPL_H\n+#define SECP256K1_GROUP_IMPL_H\n \n #include \"num.h\"\n #include \"field.h\"\n@@ -697,4 +697,4 @@ static int secp256k1_gej_has_quad_y_var(const secp256k1_gej *a) {\n     return secp256k1_fe_is_quad_var(&yz);\n }\n \n-#endif\n+#endif /* SECP256K1_GROUP_IMPL_H */"
      },
      {
        "sha": "e08d25d2255c097e6574d55145b173b3f0ed0fdb",
        "filename": "src/secp256k1/src/hash.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/src/hash.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/src/hash.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/hash.h?ref=999968e41662c1a676936db423db82af4411d78d",
        "patch": "@@ -4,8 +4,8 @@\n  * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n  **********************************************************************/\n \n-#ifndef _SECP256K1_HASH_\n-#define _SECP256K1_HASH_\n+#ifndef SECP256K1_HASH_H\n+#define SECP256K1_HASH_H\n \n #include <stdlib.h>\n #include <stdint.h>\n@@ -38,4 +38,4 @@ static void secp256k1_rfc6979_hmac_sha256_initialize(secp256k1_rfc6979_hmac_sha2\n static void secp256k1_rfc6979_hmac_sha256_generate(secp256k1_rfc6979_hmac_sha256_t *rng, unsigned char *out, size_t outlen);\n static void secp256k1_rfc6979_hmac_sha256_finalize(secp256k1_rfc6979_hmac_sha256_t *rng);\n \n-#endif\n+#endif /* SECP256K1_HASH_H */"
      },
      {
        "sha": "4c9964ee06284338cf33a5c2be4661f11ea40652",
        "filename": "src/secp256k1/src/hash_impl.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/src/hash_impl.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/src/hash_impl.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/hash_impl.h?ref=999968e41662c1a676936db423db82af4411d78d",
        "patch": "@@ -4,8 +4,8 @@\n  * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n  **********************************************************************/\n \n-#ifndef _SECP256K1_HASH_IMPL_H_\n-#define _SECP256K1_HASH_IMPL_H_\n+#ifndef SECP256K1_HASH_IMPL_H\n+#define SECP256K1_HASH_IMPL_H\n \n #include \"hash.h\"\n \n@@ -278,4 +278,4 @@ static void secp256k1_rfc6979_hmac_sha256_finalize(secp256k1_rfc6979_hmac_sha256\n #undef Maj\n #undef Ch\n \n-#endif\n+#endif /* SECP256K1_HASH_IMPL_H */"
      },
      {
        "sha": "01ecba4d537483998ded89af1ef307eb7da0c301",
        "filename": "src/secp256k1/src/modules/ecdh/main_impl.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/src/modules/ecdh/main_impl.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/src/modules/ecdh/main_impl.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/modules/ecdh/main_impl.h?ref=999968e41662c1a676936db423db82af4411d78d",
        "patch": "@@ -4,8 +4,8 @@\n  * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n  **********************************************************************/\n \n-#ifndef _SECP256K1_MODULE_ECDH_MAIN_\n-#define _SECP256K1_MODULE_ECDH_MAIN_\n+#ifndef SECP256K1_MODULE_ECDH_MAIN_H\n+#define SECP256K1_MODULE_ECDH_MAIN_H\n \n #include \"include/secp256k1_ecdh.h\"\n #include \"ecmult_const_impl.h\"\n@@ -51,4 +51,4 @@ int secp256k1_ecdh(const secp256k1_context* ctx, unsigned char *result, const se\n     return ret;\n }\n \n-#endif\n+#endif /* SECP256K1_MODULE_ECDH_MAIN_H */"
      },
      {
        "sha": "cec30b67c67c2858eea9229863e8e74246523c2b",
        "filename": "src/secp256k1/src/modules/ecdh/tests_impl.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/src/modules/ecdh/tests_impl.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/src/modules/ecdh/tests_impl.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/modules/ecdh/tests_impl.h?ref=999968e41662c1a676936db423db82af4411d78d",
        "patch": "@@ -4,8 +4,8 @@\n  * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n  **********************************************************************/\n \n-#ifndef _SECP256K1_MODULE_ECDH_TESTS_\n-#define _SECP256K1_MODULE_ECDH_TESTS_\n+#ifndef SECP256K1_MODULE_ECDH_TESTS_H\n+#define SECP256K1_MODULE_ECDH_TESTS_H\n \n void test_ecdh_api(void) {\n     /* Setup context that just counts errors */\n@@ -102,4 +102,4 @@ void run_ecdh_tests(void) {\n     test_bad_scalar();\n }\n \n-#endif\n+#endif /* SECP256K1_MODULE_ECDH_TESTS_H */"
      },
      {
        "sha": "2f6691c5a1309d1b3a8b67014617f425202c88ca",
        "filename": "src/secp256k1/src/modules/recovery/main_impl.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/src/modules/recovery/main_impl.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/src/modules/recovery/main_impl.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/modules/recovery/main_impl.h?ref=999968e41662c1a676936db423db82af4411d78d",
        "patch": "@@ -4,8 +4,8 @@\n  * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n  **********************************************************************/\n \n-#ifndef _SECP256K1_MODULE_RECOVERY_MAIN_\n-#define _SECP256K1_MODULE_RECOVERY_MAIN_\n+#ifndef SECP256K1_MODULE_RECOVERY_MAIN_H\n+#define SECP256K1_MODULE_RECOVERY_MAIN_H\n \n #include \"include/secp256k1_recovery.h\"\n \n@@ -190,4 +190,4 @@ int secp256k1_ecdsa_recover(const secp256k1_context* ctx, secp256k1_pubkey *pubk\n     }\n }\n \n-#endif\n+#endif /* SECP256K1_MODULE_RECOVERY_MAIN_H */"
      },
      {
        "sha": "5c9bbe86101c9f59bf288019c2923fe6c5019b0e",
        "filename": "src/secp256k1/src/modules/recovery/tests_impl.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/src/modules/recovery/tests_impl.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/src/modules/recovery/tests_impl.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/modules/recovery/tests_impl.h?ref=999968e41662c1a676936db423db82af4411d78d",
        "patch": "@@ -4,8 +4,8 @@\n  * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n  **********************************************************************/\n \n-#ifndef _SECP256K1_MODULE_RECOVERY_TESTS_\n-#define _SECP256K1_MODULE_RECOVERY_TESTS_\n+#ifndef SECP256K1_MODULE_RECOVERY_TESTS_H\n+#define SECP256K1_MODULE_RECOVERY_TESTS_H\n \n static int recovery_test_nonce_function(unsigned char *nonce32, const unsigned char *msg32, const unsigned char *key32, const unsigned char *algo16, void *data, unsigned int counter) {\n     (void) msg32;\n@@ -390,4 +390,4 @@ void run_recovery_tests(void) {\n     test_ecdsa_recovery_edge_cases();\n }\n \n-#endif\n+#endif /* SECP256K1_MODULE_RECOVERY_TESTS_H */"
      },
      {
        "sha": "49f2dd791d5696bf89a11caf5461e3f5b33aaca0",
        "filename": "src/secp256k1/src/num.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/src/num.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/src/num.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/num.h?ref=999968e41662c1a676936db423db82af4411d78d",
        "patch": "@@ -4,8 +4,8 @@\n  * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n  **********************************************************************/\n \n-#ifndef _SECP256K1_NUM_\n-#define _SECP256K1_NUM_\n+#ifndef SECP256K1_NUM_H\n+#define SECP256K1_NUM_H\n \n #ifndef USE_NUM_NONE\n \n@@ -71,4 +71,4 @@ static void secp256k1_num_negate(secp256k1_num *r);\n \n #endif\n \n-#endif\n+#endif /* SECP256K1_NUM_H */"
      },
      {
        "sha": "3619844bd5127eb4018efc05e16e78ae9143a93a",
        "filename": "src/secp256k1/src/num_gmp.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/src/num_gmp.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/src/num_gmp.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/num_gmp.h?ref=999968e41662c1a676936db423db82af4411d78d",
        "patch": "@@ -4,8 +4,8 @@\n  * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n  **********************************************************************/\n \n-#ifndef _SECP256K1_NUM_REPR_\n-#define _SECP256K1_NUM_REPR_\n+#ifndef SECP256K1_NUM_REPR_H\n+#define SECP256K1_NUM_REPR_H\n \n #include <gmp.h>\n \n@@ -17,4 +17,4 @@ typedef struct {\n     int limbs;\n } secp256k1_num;\n \n-#endif\n+#endif /* SECP256K1_NUM_REPR_H */"
      },
      {
        "sha": "0ae2a8ba0ecb7b5b61aca0f94676dd7cbf86c437",
        "filename": "src/secp256k1/src/num_gmp_impl.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/src/num_gmp_impl.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/src/num_gmp_impl.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/num_gmp_impl.h?ref=999968e41662c1a676936db423db82af4411d78d",
        "patch": "@@ -4,8 +4,8 @@\n  * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n  **********************************************************************/\n \n-#ifndef _SECP256K1_NUM_REPR_IMPL_H_\n-#define _SECP256K1_NUM_REPR_IMPL_H_\n+#ifndef SECP256K1_NUM_REPR_IMPL_H\n+#define SECP256K1_NUM_REPR_IMPL_H\n \n #include <string.h>\n #include <stdlib.h>\n@@ -285,4 +285,4 @@ static void secp256k1_num_negate(secp256k1_num *r) {\n     r->neg ^= 1;\n }\n \n-#endif\n+#endif /* SECP256K1_NUM_REPR_IMPL_H */"
      },
      {
        "sha": "c45193b033dab813c0ec30697f23fd60098b8e9a",
        "filename": "src/secp256k1/src/num_impl.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/src/num_impl.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/src/num_impl.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/num_impl.h?ref=999968e41662c1a676936db423db82af4411d78d",
        "patch": "@@ -4,8 +4,8 @@\n  * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n  **********************************************************************/\n \n-#ifndef _SECP256K1_NUM_IMPL_H_\n-#define _SECP256K1_NUM_IMPL_H_\n+#ifndef SECP256K1_NUM_IMPL_H\n+#define SECP256K1_NUM_IMPL_H\n \n #if defined HAVE_CONFIG_H\n #include \"libsecp256k1-config.h\"\n@@ -21,4 +21,4 @@\n #error \"Please select num implementation\"\n #endif\n \n-#endif\n+#endif /* SECP256K1_NUM_IMPL_H */"
      },
      {
        "sha": "59304cb66e90504bbc65ec13449160336c91d66a",
        "filename": "src/secp256k1/src/scalar.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/src/scalar.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/src/scalar.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/scalar.h?ref=999968e41662c1a676936db423db82af4411d78d",
        "patch": "@@ -4,8 +4,8 @@\n  * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n  **********************************************************************/\n \n-#ifndef _SECP256K1_SCALAR_\n-#define _SECP256K1_SCALAR_\n+#ifndef SECP256K1_SCALAR_H\n+#define SECP256K1_SCALAR_H\n \n #include \"num.h\"\n \n@@ -103,4 +103,4 @@ static void secp256k1_scalar_split_lambda(secp256k1_scalar *r1, secp256k1_scalar\n /** Multiply a and b (without taking the modulus!), divide by 2**shift, and round to the nearest integer. Shift must be at least 256. */\n static void secp256k1_scalar_mul_shift_var(secp256k1_scalar *r, const secp256k1_scalar *a, const secp256k1_scalar *b, unsigned int shift);\n \n-#endif\n+#endif /* SECP256K1_SCALAR_H */"
      },
      {
        "sha": "19c7495d1c8e38db57068425f9b6bcc89abe5747",
        "filename": "src/secp256k1/src/scalar_4x64.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/src/scalar_4x64.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/src/scalar_4x64.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/scalar_4x64.h?ref=999968e41662c1a676936db423db82af4411d78d",
        "patch": "@@ -4,8 +4,8 @@\n  * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n  **********************************************************************/\n \n-#ifndef _SECP256K1_SCALAR_REPR_\n-#define _SECP256K1_SCALAR_REPR_\n+#ifndef SECP256K1_SCALAR_REPR_H\n+#define SECP256K1_SCALAR_REPR_H\n \n #include <stdint.h>\n \n@@ -16,4 +16,4 @@ typedef struct {\n \n #define SECP256K1_SCALAR_CONST(d7, d6, d5, d4, d3, d2, d1, d0) {{((uint64_t)(d1)) << 32 | (d0), ((uint64_t)(d3)) << 32 | (d2), ((uint64_t)(d5)) << 32 | (d4), ((uint64_t)(d7)) << 32 | (d6)}}\n \n-#endif\n+#endif /* SECP256K1_SCALAR_REPR_H */"
      },
      {
        "sha": "db1ebf94bee0415abcc20a0aa6359997a4b53b25",
        "filename": "src/secp256k1/src/scalar_4x64_impl.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/src/scalar_4x64_impl.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/src/scalar_4x64_impl.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/scalar_4x64_impl.h?ref=999968e41662c1a676936db423db82af4411d78d",
        "patch": "@@ -4,8 +4,8 @@\n  * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n  **********************************************************************/\n \n-#ifndef _SECP256K1_SCALAR_REPR_IMPL_H_\n-#define _SECP256K1_SCALAR_REPR_IMPL_H_\n+#ifndef SECP256K1_SCALAR_REPR_IMPL_H\n+#define SECP256K1_SCALAR_REPR_IMPL_H\n \n /* Limbs of the secp256k1 order. */\n #define SECP256K1_N_0 ((uint64_t)0xBFD25E8CD0364141ULL)\n@@ -946,4 +946,4 @@ SECP256K1_INLINE static void secp256k1_scalar_mul_shift_var(secp256k1_scalar *r,\n     secp256k1_scalar_cadd_bit(r, 0, (l[(shift - 1) >> 6] >> ((shift - 1) & 0x3f)) & 1);\n }\n \n-#endif\n+#endif /* SECP256K1_SCALAR_REPR_IMPL_H */"
      },
      {
        "sha": "2c9a348e2476057521f6ce89c7847333d031daf3",
        "filename": "src/secp256k1/src/scalar_8x32.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/src/scalar_8x32.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/src/scalar_8x32.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/scalar_8x32.h?ref=999968e41662c1a676936db423db82af4411d78d",
        "patch": "@@ -4,8 +4,8 @@\n  * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n  **********************************************************************/\n \n-#ifndef _SECP256K1_SCALAR_REPR_\n-#define _SECP256K1_SCALAR_REPR_\n+#ifndef SECP256K1_SCALAR_REPR_H\n+#define SECP256K1_SCALAR_REPR_H\n \n #include <stdint.h>\n \n@@ -16,4 +16,4 @@ typedef struct {\n \n #define SECP256K1_SCALAR_CONST(d7, d6, d5, d4, d3, d2, d1, d0) {{(d0), (d1), (d2), (d3), (d4), (d5), (d6), (d7)}}\n \n-#endif\n+#endif /* SECP256K1_SCALAR_REPR_H */"
      },
      {
        "sha": "4f9ed61feaeccf4fca036df8d9f24df2ad7a14ed",
        "filename": "src/secp256k1/src/scalar_8x32_impl.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/src/scalar_8x32_impl.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/src/scalar_8x32_impl.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/scalar_8x32_impl.h?ref=999968e41662c1a676936db423db82af4411d78d",
        "patch": "@@ -4,8 +4,8 @@\n  * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n  **********************************************************************/\n \n-#ifndef _SECP256K1_SCALAR_REPR_IMPL_H_\n-#define _SECP256K1_SCALAR_REPR_IMPL_H_\n+#ifndef SECP256K1_SCALAR_REPR_IMPL_H\n+#define SECP256K1_SCALAR_REPR_IMPL_H\n \n /* Limbs of the secp256k1 order. */\n #define SECP256K1_N_0 ((uint32_t)0xD0364141UL)\n@@ -718,4 +718,4 @@ SECP256K1_INLINE static void secp256k1_scalar_mul_shift_var(secp256k1_scalar *r,\n     secp256k1_scalar_cadd_bit(r, 0, (l[(shift - 1) >> 5] >> ((shift - 1) & 0x1f)) & 1);\n }\n \n-#endif\n+#endif /* SECP256K1_SCALAR_REPR_IMPL_H */"
      },
      {
        "sha": "fa790570ff837e2d98a1b606ed598bc9ac70fd4b",
        "filename": "src/secp256k1/src/scalar_impl.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/src/scalar_impl.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/src/scalar_impl.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/scalar_impl.h?ref=999968e41662c1a676936db423db82af4411d78d",
        "patch": "@@ -4,8 +4,8 @@\n  * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n  **********************************************************************/\n \n-#ifndef _SECP256K1_SCALAR_IMPL_H_\n-#define _SECP256K1_SCALAR_IMPL_H_\n+#ifndef SECP256K1_SCALAR_IMPL_H\n+#define SECP256K1_SCALAR_IMPL_H\n \n #include \"group.h\"\n #include \"scalar.h\"\n@@ -330,4 +330,4 @@ static void secp256k1_scalar_split_lambda(secp256k1_scalar *r1, secp256k1_scalar\n #endif\n #endif\n \n-#endif\n+#endif /* SECP256K1_SCALAR_IMPL_H */"
      },
      {
        "sha": "5836febc5b729d8113842212b31fee01b21410cb",
        "filename": "src/secp256k1/src/scalar_low.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/src/scalar_low.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/src/scalar_low.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/scalar_low.h?ref=999968e41662c1a676936db423db82af4411d78d",
        "patch": "@@ -4,12 +4,12 @@\n  * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n  **********************************************************************/\n \n-#ifndef _SECP256K1_SCALAR_REPR_\n-#define _SECP256K1_SCALAR_REPR_\n+#ifndef SECP256K1_SCALAR_REPR_H\n+#define SECP256K1_SCALAR_REPR_H\n \n #include <stdint.h>\n \n /** A scalar modulo the group order of the secp256k1 curve. */\n typedef uint32_t secp256k1_scalar;\n \n-#endif\n+#endif /* SECP256K1_SCALAR_REPR_H */"
      },
      {
        "sha": "c80e70c5a2ad2e310110ebd834edd2d1ad5a1a79",
        "filename": "src/secp256k1/src/scalar_low_impl.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/src/scalar_low_impl.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/src/scalar_low_impl.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/scalar_low_impl.h?ref=999968e41662c1a676936db423db82af4411d78d",
        "patch": "@@ -4,8 +4,8 @@\n  * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n  **********************************************************************/\n \n-#ifndef _SECP256K1_SCALAR_REPR_IMPL_H_\n-#define _SECP256K1_SCALAR_REPR_IMPL_H_\n+#ifndef SECP256K1_SCALAR_REPR_IMPL_H\n+#define SECP256K1_SCALAR_REPR_IMPL_H\n \n #include \"scalar.h\"\n \n@@ -111,4 +111,4 @@ SECP256K1_INLINE static int secp256k1_scalar_eq(const secp256k1_scalar *a, const\n     return *a == *b;\n }\n \n-#endif\n+#endif /* SECP256K1_SCALAR_REPR_IMPL_H */"
      },
      {
        "sha": "f1f9be077e378839e9c763a6d29e6a3682243e60",
        "filename": "src/secp256k1/src/testrand.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/src/testrand.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/src/testrand.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/testrand.h?ref=999968e41662c1a676936db423db82af4411d78d",
        "patch": "@@ -4,8 +4,8 @@\n  * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n  **********************************************************************/\n \n-#ifndef _SECP256K1_TESTRAND_H_\n-#define _SECP256K1_TESTRAND_H_\n+#ifndef SECP256K1_TESTRAND_H\n+#define SECP256K1_TESTRAND_H\n \n #if defined HAVE_CONFIG_H\n #include \"libsecp256k1-config.h\"\n@@ -35,4 +35,4 @@ static void secp256k1_rand256_test(unsigned char *b32);\n /** Generate pseudorandom bytes with long sequences of zero and one bits. */\n static void secp256k1_rand_bytes_test(unsigned char *bytes, size_t len);\n \n-#endif\n+#endif /* SECP256K1_TESTRAND_H */"
      },
      {
        "sha": "1255574209440a1c77dcd9cf60502f2d15cffcc2",
        "filename": "src/secp256k1/src/testrand_impl.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/src/testrand_impl.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/src/testrand_impl.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/testrand_impl.h?ref=999968e41662c1a676936db423db82af4411d78d",
        "patch": "@@ -4,8 +4,8 @@\n  * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n  **********************************************************************/\n \n-#ifndef _SECP256K1_TESTRAND_IMPL_H_\n-#define _SECP256K1_TESTRAND_IMPL_H_\n+#ifndef SECP256K1_TESTRAND_IMPL_H\n+#define SECP256K1_TESTRAND_IMPL_H\n \n #include <stdint.h>\n #include <string.h>\n@@ -107,4 +107,4 @@ static void secp256k1_rand256_test(unsigned char *b32) {\n     secp256k1_rand_bytes_test(b32, 32);\n }\n \n-#endif\n+#endif /* SECP256K1_TESTRAND_IMPL_H */"
      },
      {
        "sha": "b0441d8e305a4d6b557f46d6417d28dde9553f9c",
        "filename": "src/secp256k1/src/util.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/999968e41662c1a676936db423db82af4411d78d/src/secp256k1/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/secp256k1/src/util.h?ref=999968e41662c1a676936db423db82af4411d78d",
        "patch": "@@ -4,8 +4,8 @@\n  * file COPYING or http://www.opensource.org/licenses/mit-license.php.*\n  **********************************************************************/\n \n-#ifndef _SECP256K1_UTIL_H_\n-#define _SECP256K1_UTIL_H_\n+#ifndef SECP256K1_UTIL_H\n+#define SECP256K1_UTIL_H\n \n #if defined HAVE_CONFIG_H\n #include \"libsecp256k1-config.h\"\n@@ -110,4 +110,4 @@ static SECP256K1_INLINE void *checked_malloc(const secp256k1_callback* cb, size_\n SECP256K1_GNUC_EXT typedef unsigned __int128 uint128_t;\n #endif\n \n-#endif\n+#endif /* SECP256K1_UTIL_H */"
      }
    ]
  }
]