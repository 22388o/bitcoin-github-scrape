jonasschnelli,2017-06-29T06:37:57Z,"Is that completely safe?\nAFAIK the C++03 standard kept deleting a `nullptr` (`NULL`) as undefined. Not sure about C++11.",https://github.com/bitcoin/bitcoin/pull/10696#issuecomment-311876042,311876042,
sipa,2017-06-29T07:29:16Z,"According to https://stackoverflow.com/questions/25329576/calling-delete-on-null-pointers-c03-vs-c11, C++11 (accidentally?) dropped the requirement that deleting a nullptr is a noop, and C++14 is clearer about it again.",https://github.com/bitcoin/bitcoin/pull/10696#issuecomment-311885616,311885616,
practicalswift,2017-06-29T07:51:36Z,"Ouch, if I'm mistaken regarding `delete NULL` being a no-op in C++11. If that is the case I'll instead take a look at all `delete`:s in the code base to make sure that we are not accidentally doing any potential `delete NULL`:s.",https://github.com/bitcoin/bitcoin/pull/10696#issuecomment-311890352,311890352,
laanwj,2017-06-30T06:28:54Z,"> Ouch, if I'm mistaken regarding delete NULL being a no-op in C++11\n\nWe assume universally that delete NULL is a no-op. 99% of actual C++ code out there does so. This is just a language lawyer's argument.\nNo compiler will break that behavior. As it is resolved again for C++14, please don't plow over the entire source code to remove that assumption.",https://github.com/bitcoin/bitcoin/pull/10696#issuecomment-312186557,312186557,
practicalswift,2017-06-30T07:29:16Z,"@laanwj Yes, that was my assumption from the beginning :-)  This PR should be completely safe then and consistent with the assumptions made in the rest of the code base with regards to `delete NULL` being a no-op.",https://github.com/bitcoin/bitcoin/pull/10696#issuecomment-312196398,312196398,
practicalswift,2017-08-14T15:45:36Z,Rebased!,https://github.com/bitcoin/bitcoin/pull/10696#issuecomment-322227030,322227030,
practicalswift,2017-11-09T15:55:24Z,@laanwj Regarding `pfilter` RAII â€“ that has already been taken care of in #11043 :-),https://github.com/bitcoin/bitcoin/pull/10696#issuecomment-343198801,343198801,
TheBlueMatt,2017-11-11T23:15:15Z,post-merge-obvious utACK b109a1c3962a9f45fb5819afd69c7caaf78eb35e,https://github.com/bitcoin/bitcoin/pull/10696#issuecomment-343701024,343701024,
laanwj,2017-11-09T12:40:35Z,"BTW as this one is a) in a destructor b) at the end of the destructor, why aren't we using a smart pointer w/ RAII?",https://github.com/bitcoin/bitcoin/pull/10696#discussion_r149950290,149950290,src/net.cpp
