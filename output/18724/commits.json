[
  {
    "sha": "2495110012fc0cb7142a4536791dd79da5cc3e44",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyNDk1MTEwMDEyZmMwY2I3MTQyYTQ1MzY3OTFkZDc5ZGE1Y2MzZTQ0",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-04-21T16:24:17Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-04-24T19:51:00Z"
      },
      "message": "test: add coverage for -rpcwallet cli option\n\nand add -getinfo coverage with multiple wallets loaded.",
      "tree": {
        "sha": "3daa2ee65222c98f8609d68848ee93f8a758213b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3daa2ee65222c98f8609d68848ee93f8a758213b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2495110012fc0cb7142a4536791dd79da5cc3e44",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl6jQykACgkQT1chs9Dj\nkh0hsQ//RJ31IDi1n6PirK5GiszEHGvI/d/g7JRvZ5ZEEOcK7fv7Y/WjHNehwd7E\nhu0F+FqSIf0P0inQGBmyzmCeunvbUPVSxCeWoq6Xq/hTK91cCWs0Lx0Sxn51gFis\n97X6JKECDxG4YC4jwvQsB8y0YFHCTzXE6Jjmz/TJNHwph9CLsfoPBXv/uFiCw5eq\npVCTC2Em0BRLXZOcs+nC6ueqMXRUwdv2Os1jlGMjcj/mf5b06cv/eltgpG0EmqTu\n16JfieUwREHnEP3veBFpB8WT4d/yrB2vJnJ39H2x+2HdnukPXZ7hPLFZ3aNC3Ubu\nhjH2tlvXw5V3sWCzuTQIz5SzK6Ubvone9IqCBXg0t4teXwstWGfZuoWkbX3NLh9L\nqucmDCBqnDw9HVkqXQf9saFDNa3mOy0wSOloMYNw4SZfghRHyjwMafCRxHh83zDj\n4g0ZKl1kieuUcYeo5pXWCCCW4pu1fajMbh8sPtLPTjJcbLap+xpCyTdOYlfTLhcp\nK26aSLgGLEAz6T1gcgF58YGRoE3a7SqO1arstYERyW/qumhCCL8kOoE/g9BIjMT1\n2M8Y6kb0XWGrY67evLx65J+TJKmJlR5QOInjXLWEP/3wtE1MgpvmqD6zzpjrs0d8\ntkhxA5HwEtDSM84ZGhQfizfWqC7r9gMA2D0kTDTzaPi2SayE3Kc=\n=6RCW\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwII+UcdKo3gjSC2L/Qct2C0tbdlBobOL1cM4+7LyUMA47CP/wEAWjowzmFIZK\nmO8wC9KWnGAI8QReo0Ms8AhChL4KEWuykwCD3+MNLvkMjiwraHR0cHM6Ly9ib2Iu\nYnRjLmNhbGVuZGFyLm9wZW50aW1lc3RhbXBzLm9yZ//wEBRNRcUHo0VGQB5H5UO+\nSmkI8QReo0Ms8Ag9zv0K4XNBDgCD3+MNLvkMji4taHR0cHM6Ly9hbGljZS5idGMu\nY2FsZW5kYXIub3BlbnRpbWVzdGFtcHMub3Jn8BD0Z9libgZZA2E+PCBDFfhUCPEE\nXqNDLPAI1eMMctlDzpwAg9/jDS75DI4pKGh0dHBzOi8vZmlubmV5LmNhbGVuZGFy\nLmV0ZXJuaXR5d2FsbC5jb20=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 3daa2ee65222c98f8609d68848ee93f8a758213b\nparent 9ea4d8326a9d1641dfacca7ac82c16b7d387d967\nauthor Jon Atack <jon@atack.com> 1587486257 +0200\ncommitter Jon Atack <jon@atack.com> 1587757860 +0200\n\ntest: add coverage for -rpcwallet cli option\n\nand add -getinfo coverage with multiple wallets loaded.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2495110012fc0cb7142a4536791dd79da5cc3e44",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2495110012fc0cb7142a4536791dd79da5cc3e44",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2495110012fc0cb7142a4536791dd79da5cc3e44/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9ea4d8326a9d1641dfacca7ac82c16b7d387d967",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9ea4d8326a9d1641dfacca7ac82c16b7d387d967",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9ea4d8326a9d1641dfacca7ac82c16b7d387d967"
      }
    ],
    "stats": {
      "total": 43,
      "additions": 42,
      "deletions": 1
    },
    "files": [
      {
        "sha": "6a822966f8de0d2798bb10ddd957844114cb74c6",
        "filename": "test/functional/interface_bitcoin_cli.py",
        "status": "modified",
        "additions": 42,
        "deletions": 1,
        "changes": 43,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2495110012fc0cb7142a4536791dd79da5cc3e44/test/functional/interface_bitcoin_cli.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2495110012fc0cb7142a4536791dd79da5cc3e44/test/functional/interface_bitcoin_cli.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/interface_bitcoin_cli.py?ref=2495110012fc0cb7142a4536791dd79da5cc3e44",
        "patch": "@@ -3,6 +3,7 @@\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test bitcoin-cli\"\"\"\n+from decimal import Decimal\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import assert_equal, assert_raises_process_error, get_auth_cookie\n \n@@ -72,8 +73,48 @@ def run_test(self):\n             assert_equal(cli_get_info['paytxfee'], wallet_info['paytxfee'])\n             assert_equal(cli_get_info['relayfee'], network_info['relayfee'])\n             assert_equal(self.nodes[0].cli.getwalletinfo(), wallet_info)\n+\n+            # Setup to test -getinfo and -rpcwallet= with multiple wallets.\n+            wallets = ['', 'Encrypted', 'secret']\n+            amounts = [Decimal('59.999928'), Decimal(9), Decimal(31)]\n+            self.nodes[0].createwallet(wallet_name=wallets[1])\n+            self.nodes[0].createwallet(wallet_name=wallets[2])\n+            w1 = self.nodes[0].get_wallet_rpc(wallets[0])\n+            w2 = self.nodes[0].get_wallet_rpc(wallets[1])\n+            w3 = self.nodes[0].get_wallet_rpc(wallets[2])\n+            w1.walletpassphrase(password, self.rpc_timeout)\n+            w1.sendtoaddress(w2.getnewaddress(), amounts[1])\n+            w1.sendtoaddress(w3.getnewaddress(), amounts[2])\n+\n+            # Mine a block to confirm; adds a block reward (50 BTC) to the default wallet.\n+            self.nodes[0].generate(1)\n+\n+            self.log.info(\"Test -getinfo with multiple wallets loaded returns no balance\")\n+            assert_equal(set(self.nodes[0].listwallets()), set(wallets))\n+            assert 'balance' not in self.nodes[0].cli('-getinfo').send_cli().keys()\n+\n+            self.log.info(\"Test -getinfo with multiple wallets and -rpcwallet returns specified wallet balance\")\n+            for i in range(len(wallets)):\n+                cli_get_info = self.nodes[0].cli('-getinfo').send_cli('-rpcwallet={}'.format(wallets[i]))\n+                assert_equal(cli_get_info['balance'], amounts[i])\n+\n+            self.log.info(\"Test -getinfo with multiple wallets and -rpcwallet=non-existing-wallet returns no balance\")\n+            assert 'balance' not in self.nodes[0].cli('-getinfo').send_cli('-rpcwallet=does-not-exist').keys()\n+\n+            self.log.info(\"Test -getinfo after unloading all wallets except a non-default one returns its balance\")\n+            self.nodes[0].unloadwallet(wallets[0])\n+            self.nodes[0].unloadwallet(wallets[2])\n+            assert_equal(self.nodes[0].listwallets(), [wallets[1]])\n+            assert_equal(self.nodes[0].cli('-getinfo').send_cli()['balance'], amounts[1])\n+\n+            self.log.info(\"Test -getinfo -rpcwallet=remaining-non-default-wallet returns its balance\")\n+            assert_equal(self.nodes[0].cli('-getinfo').send_cli('-rpcwallet={}'.format(wallets[1]))['balance'], amounts[1])\n+\n+            self.log.info(\"Test -getinfo with -rpcwallet=unloaded wallet returns no balance\")\n+            assert 'balance' not in self.nodes[0].cli('-getinfo').send_cli('-rpcwallet={}'.format(wallets[2])).keys()\n         else:\n             self.log.info(\"*** Wallet not compiled; cli getwalletinfo and -getinfo wallet tests skipped\")\n+            self.nodes[0].generate(1)  # maintain block parity with the wallet_compiled conditional branch\n \n         self.log.info(\"Test -version with node stopped\")\n         self.stop_node(0)\n@@ -85,7 +126,7 @@ def run_test(self):\n         self.nodes[0].wait_for_cookie_credentials()  # ensure cookie file is available to avoid race condition\n         blocks = self.nodes[0].cli('-rpcwait').send_cli('getblockcount')\n         self.nodes[0].wait_for_rpc_connection()\n-        assert_equal(blocks, BLOCKS)\n+        assert_equal(blocks, BLOCKS + 1)\n \n \n if __name__ == '__main__':"
      }
    ]
  }
]