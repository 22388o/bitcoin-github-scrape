[
  {
    "sha": "cb2ca03a86a9b55c87d9ab3cbf8a320a5b04c3b0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjYjJjYTAzYTg2YTliNTVjODdkOWFiM2NiZjhhMzIwYTViMDRjM2Iw",
    "commit": {
      "author": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2017-07-19T02:36:21Z"
      },
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2018-02-22T07:09:27Z"
      },
      "message": "[style] Fix fundrawtransaction styling.",
      "tree": {
        "sha": "68fc5c117f9865230163a056d7994b6d858ecac6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/68fc5c117f9865230163a056d7994b6d858ecac6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cb2ca03a86a9b55c87d9ab3cbf8a320a5b04c3b0",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEExCr/fGGz5EoUVM01V692LbM1MyIFAlqObKcACgkQV692LbM1\nMyKKfg/7B7biFghqYFs6ffuNTO3+dhoUl3DnWcUHt6CchGGzSoVx4pV4PZpabk/g\nT2LXYQgmxj87rFRoYcLQXp9W4i4rYd1T7y4QfM3dLjl50Z4/dwHNyFRhO1toCcP6\nTm4HuZRIFMDJz6TcVb5z8VdbeTyqtb/I5uH0jl+NGhToHEgtxm3rcBIBB8ebsZqn\nyMvFaFYdBz5YjaT2qZzDU+Maunf6whYRX5PhcT9Nx3UldcR1dItwWk/B/I/AaQep\nwlcGHnh0kZQAqYnm9Jl7qy2OYH34oTi6oLoA5yrO2AJlbYJawe5BHPaiVvxv0hGA\nOu3Ya4E4erQBs63SAaJTmH35cu5/cx67d+/joV2H0ynut2o5L8e7HXN/lCavgg9X\nk4bgFtxCDyDTBgBMuvXaUpgoCtDuPHmqZGoJvWdTikwoEKjj00lcnLfjNX2/Q/8X\nxqNxmzT/DmeV1tYdxCd7ikMSDkl+f8FyYPIkDCWYtzsJcVGLaAq7Oblg7UqckFhq\nasEKlnxw9Qd5d4TYg7UwKDfWYmXoQ8fgcuYRXHsoBsGa/TwohfB0dvYXkIifJscR\nyJko/08xHweJ3r3XJ+3syhQFZlEV3stNUivYiXst6wxRVvnrjNUh4QkDe2qSP4fy\nABA9HjZ5kjd8Qnhi0qpohodBYrksa+jH3H7YUPTcR5c+E8snQX4=\n=X1mf\n-----END PGP SIGNATURE-----",
        "payload": "tree 68fc5c117f9865230163a056d7994b6d858ecac6\nparent 0e265916d1c6a63e4a3821dab9db597b5ec64b46\nauthor Karl-Johan Alm <karljohan-alm@garage.co.jp> 1500431781 +0900\ncommitter Karl-Johan Alm <karljohan-alm@garage.co.jp> 1519283367 +0900\n\n[style] Fix fundrawtransaction styling.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cb2ca03a86a9b55c87d9ab3cbf8a320a5b04c3b0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cb2ca03a86a9b55c87d9ab3cbf8a320a5b04c3b0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cb2ca03a86a9b55c87d9ab3cbf8a320a5b04c3b0/comments",
    "author": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0e265916d1c6a63e4a3821dab9db597b5ec64b46",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0e265916d1c6a63e4a3821dab9db597b5ec64b46",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0e265916d1c6a63e4a3821dab9db597b5ec64b46"
      }
    ],
    "stats": {
      "total": 145,
      "additions": 77,
      "deletions": 68
    },
    "files": [
      {
        "sha": "940c05ad5e5758a2412796be351e58496301c407",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 77,
        "deletions": 68,
        "changes": 145,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cb2ca03a86a9b55c87d9ab3cbf8a320a5b04c3b0/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cb2ca03a86a9b55c87d9ab3cbf8a320a5b04c3b0/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=cb2ca03a86a9b55c87d9ab3cbf8a320a5b04c3b0",
        "patch": "@@ -3115,86 +3115,90 @@ UniValue fundrawtransaction(const JSONRPCRequest& request)\n     std::set<int> setSubtractFeeFromOutputs;\n \n     if (!request.params[1].isNull()) {\n-      if (request.params[1].type() == UniValue::VBOOL) {\n-        // backward compatibility bool only fallback\n-        coinControl.fAllowWatchOnly = request.params[1].get_bool();\n-      }\n-      else {\n-        RPCTypeCheck(request.params, {UniValue::VSTR, UniValue::VOBJ, UniValue::VBOOL});\n-\n-        UniValue options = request.params[1];\n+        if (request.params[1].type() == UniValue::VBOOL) {\n+            // backward compatibility bool only fallback\n+            coinControl.fAllowWatchOnly = request.params[1].get_bool();\n+        } else {\n+            RPCTypeCheck(request.params, {UniValue::VSTR, UniValue::VOBJ, UniValue::VBOOL});\n \n-        RPCTypeCheckObj(options,\n-            {\n-                {\"changeAddress\", UniValueType(UniValue::VSTR)},\n-                {\"changePosition\", UniValueType(UniValue::VNUM)},\n-                {\"change_type\", UniValueType(UniValue::VSTR)},\n-                {\"includeWatching\", UniValueType(UniValue::VBOOL)},\n-                {\"lockUnspents\", UniValueType(UniValue::VBOOL)},\n-                {\"feeRate\", UniValueType()}, // will be checked below\n-                {\"subtractFeeFromOutputs\", UniValueType(UniValue::VARR)},\n-                {\"replaceable\", UniValueType(UniValue::VBOOL)},\n-                {\"conf_target\", UniValueType(UniValue::VNUM)},\n-                {\"estimate_mode\", UniValueType(UniValue::VSTR)},\n-            },\n-            true, true);\n+            UniValue options = request.params[1];\n \n-        if (options.exists(\"changeAddress\")) {\n-            CTxDestination dest = DecodeDestination(options[\"changeAddress\"].get_str());\n+            RPCTypeCheckObj(options,\n+                {\n+                    {\"changeAddress\", UniValueType(UniValue::VSTR)},\n+                    {\"changePosition\", UniValueType(UniValue::VNUM)},\n+                    {\"change_type\", UniValueType(UniValue::VSTR)},\n+                    {\"includeWatching\", UniValueType(UniValue::VBOOL)},\n+                    {\"lockUnspents\", UniValueType(UniValue::VBOOL)},\n+                    {\"feeRate\", UniValueType()}, // will be checked below\n+                    {\"subtractFeeFromOutputs\", UniValueType(UniValue::VARR)},\n+                    {\"replaceable\", UniValueType(UniValue::VBOOL)},\n+                    {\"conf_target\", UniValueType(UniValue::VNUM)},\n+                    {\"estimate_mode\", UniValueType(UniValue::VSTR)},\n+                },\n+                true, true);\n \n-            if (!IsValidDestination(dest)) {\n-                throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"changeAddress must be a valid bitcoin address\");\n-            }\n+            if (options.exists(\"changeAddress\")) {\n+                CTxDestination dest = DecodeDestination(options[\"changeAddress\"].get_str());\n \n-            coinControl.destChange = dest;\n-        }\n+                if (!IsValidDestination(dest)) {\n+                    throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"changeAddress must be a valid bitcoin address\");\n+                }\n \n-        if (options.exists(\"changePosition\"))\n-            changePosition = options[\"changePosition\"].get_int();\n+                coinControl.destChange = dest;\n+            }\n \n-        if (options.exists(\"change_type\")) {\n-            if (options.exists(\"changeAddress\")) {\n-                throw JSONRPCError(RPC_INVALID_PARAMETER, \"Cannot specify both changeAddress and address_type options\");\n+            if (options.exists(\"changePosition\")) {\n+                changePosition = options[\"changePosition\"].get_int();\n             }\n-            coinControl.change_type = ParseOutputType(options[\"change_type\"].get_str(), coinControl.change_type);\n-            if (coinControl.change_type == OUTPUT_TYPE_NONE) {\n-                throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, strprintf(\"Unknown change type '%s'\", options[\"change_type\"].get_str()));\n+\n+            if (options.exists(\"change_type\")) {\n+                if (options.exists(\"changeAddress\")) {\n+                    throw JSONRPCError(RPC_INVALID_PARAMETER, \"Cannot specify both changeAddress and address_type options\");\n+                }\n+                coinControl.change_type = ParseOutputType(options[\"change_type\"].get_str(), coinControl.change_type);\n+                if (coinControl.change_type == OUTPUT_TYPE_NONE) {\n+                    throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, strprintf(\"Unknown change type '%s'\", options[\"change_type\"].get_str()));\n+                }\n             }\n-        }\n \n-        if (options.exists(\"includeWatching\"))\n-            coinControl.fAllowWatchOnly = options[\"includeWatching\"].get_bool();\n+            if (options.exists(\"includeWatching\")) {\n+                coinControl.fAllowWatchOnly = options[\"includeWatching\"].get_bool();\n+            }\n \n-        if (options.exists(\"lockUnspents\"))\n-            lockUnspents = options[\"lockUnspents\"].get_bool();\n+            if (options.exists(\"lockUnspents\")) {\n+                lockUnspents = options[\"lockUnspents\"].get_bool();\n+            }\n \n-        if (options.exists(\"feeRate\"))\n-        {\n-            coinControl.m_feerate = CFeeRate(AmountFromValue(options[\"feeRate\"]));\n-            coinControl.fOverrideFeeRate = true;\n-        }\n+            if (options.exists(\"feeRate\")) {\n+                coinControl.m_feerate = CFeeRate(AmountFromValue(options[\"feeRate\"]));\n+                coinControl.fOverrideFeeRate = true;\n+            }\n \n-        if (options.exists(\"subtractFeeFromOutputs\"))\n-            subtractFeeFromOutputs = options[\"subtractFeeFromOutputs\"].get_array();\n+            if (options.exists(\"subtractFeeFromOutputs\")) {\n+                subtractFeeFromOutputs = options[\"subtractFeeFromOutputs\"].get_array();\n+            }\n \n-        if (options.exists(\"replaceable\")) {\n-            coinControl.signalRbf = options[\"replaceable\"].get_bool();\n-        }\n-        if (options.exists(\"conf_target\")) {\n-            if (options.exists(\"feeRate\")) {\n-                throw JSONRPCError(RPC_INVALID_PARAMETER, \"Cannot specify both conf_target and feeRate\");\n+            if (options.exists(\"replaceable\")) {\n+                coinControl.signalRbf = options[\"replaceable\"].get_bool();\n             }\n-            coinControl.m_confirm_target = ParseConfirmTarget(options[\"conf_target\"]);\n-        }\n-        if (options.exists(\"estimate_mode\")) {\n-            if (options.exists(\"feeRate\")) {\n-                throw JSONRPCError(RPC_INVALID_PARAMETER, \"Cannot specify both estimate_mode and feeRate\");\n+\n+            if (options.exists(\"conf_target\")) {\n+                if (options.exists(\"feeRate\")) {\n+                    throw JSONRPCError(RPC_INVALID_PARAMETER, \"Cannot specify both conf_target and feeRate\");\n+                }\n+                coinControl.m_confirm_target = ParseConfirmTarget(options[\"conf_target\"]);\n             }\n-            if (!FeeModeFromString(options[\"estimate_mode\"].get_str(), coinControl.m_fee_mode)) {\n-                throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid estimate_mode parameter\");\n+\n+            if (options.exists(\"estimate_mode\")) {\n+                if (options.exists(\"feeRate\")) {\n+                    throw JSONRPCError(RPC_INVALID_PARAMETER, \"Cannot specify both estimate_mode and feeRate\");\n+                }\n+                if (!FeeModeFromString(options[\"estimate_mode\"].get_str(), coinControl.m_fee_mode)) {\n+                    throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid estimate_mode parameter\");\n+                }\n             }\n         }\n-      }\n     }\n \n     // parse hex string from parameter\n@@ -3205,20 +3209,25 @@ UniValue fundrawtransaction(const JSONRPCRequest& request)\n         throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"TX decode failed\");\n     }\n \n-    if (tx.vout.size() == 0)\n+    if (tx.vout.size() == 0) {\n         throw JSONRPCError(RPC_INVALID_PARAMETER, \"TX must have at least one output\");\n+    }\n \n-    if (changePosition != -1 && (changePosition < 0 || (unsigned int)changePosition > tx.vout.size()))\n+    if (changePosition != -1 && (changePosition < 0 || (unsigned int)changePosition > tx.vout.size())) {\n         throw JSONRPCError(RPC_INVALID_PARAMETER, \"changePosition out of bounds\");\n+    }\n \n     for (unsigned int idx = 0; idx < subtractFeeFromOutputs.size(); idx++) {\n         int pos = subtractFeeFromOutputs[idx].get_int();\n-        if (setSubtractFeeFromOutputs.count(pos))\n+        if (setSubtractFeeFromOutputs.count(pos)) {\n             throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"Invalid parameter, duplicated position: %d\", pos));\n-        if (pos < 0)\n+        }\n+        if (pos < 0) {\n             throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"Invalid parameter, negative position: %d\", pos));\n-        if (pos >= int(tx.vout.size()))\n+        }\n+        if (pos >= int(tx.vout.size())) {\n             throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"Invalid parameter, position too large: %d\", pos));\n+        }\n         setSubtractFeeFromOutputs.insert(pos);\n     }\n "
      }
    ]
  },
  {
    "sha": "e5c9ecb2fe8277938f907bfed99955b00b80f876",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplNWM5ZWNiMmZlODI3NzkzOGY5MDdiZmVkOTk5NTViMDBiODBmODc2",
    "commit": {
      "author": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2018-02-22T07:41:11Z"
      },
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2018-02-22T07:41:11Z"
      },
      "message": "[rpc] [wallet] Add verbose flag (default=true) to fundrawtransaction",
      "tree": {
        "sha": "762547b625fcaef60984bcfe5c8c009b669e9b78",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/762547b625fcaef60984bcfe5c8c009b669e9b78"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e5c9ecb2fe8277938f907bfed99955b00b80f876",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEExCr/fGGz5EoUVM01V692LbM1MyIFAlqOdBcACgkQV692LbM1\nMyLtBhAAmupJzX0/ZFpVnhoGO32sqfVBHNxlZp0X6V3UIA5SEXlEv0n4cGnUJpRl\ntcSOSOy15rDbRyfyti2MCDLSCxWUNFKWw2lSOu6SLQiAXZHWn8g/P6edly+aYIzr\nxi73uP3g8vVm50TExYNjfc9hwyrkmOJMYbwZZ5Rczoe3WqQWThUNM6zYQz/EQfQK\ngImGzvst+pMKv/DPOnIbXmi1MFos1vtSBL3POrMX2r4kgaNAuw63xXjpm5z8VHNU\nRV1DO5WPXxrz66Pyl/zTlCnX0cpZuS1mrPZGm11N67eoja1c3xITXagb3v8B1Vb/\nHfFtPhWT4WAmzpbeFZ6fXqmerXEuxnKnpRBZh3W0697QBV3NNhViLS5R58WyR9Wo\nve2lohn0408hyNjrOyhJxx+doee7Z/h64JPvwnrUkpNJeWRNzX87IrvHUK1vlwnD\nnMqP6axHMg6hSlrvEBQkXUa6/WI84QGkveIXvvAdhrjHB+btMYyR7q65jCRZJFmd\nWkNbfV9irzKHGvIgYm4i5u2qKDzYIXmgWHitZcoePfPYz8vbTHJqb/5HWIDMHXpK\nwXvIBvAXXuukHI2GiGQSZTJYusYBtFNbyEVYSWI2aTuw3mPsz9oGZMWfzR1RpYqq\n/sJDiX0BJ5Z32XzdwfZV5E/nijWGaviBgclRe9nqEUg2J8BAaug=\n=iPSx\n-----END PGP SIGNATURE-----",
        "payload": "tree 762547b625fcaef60984bcfe5c8c009b669e9b78\nparent cb2ca03a86a9b55c87d9ab3cbf8a320a5b04c3b0\nauthor Karl-Johan Alm <karljohan-alm@garage.co.jp> 1519285271 +0900\ncommitter Karl-Johan Alm <karljohan-alm@garage.co.jp> 1519285271 +0900\n\n[rpc] [wallet] Add verbose flag (default=true) to fundrawtransaction\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e5c9ecb2fe8277938f907bfed99955b00b80f876",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e5c9ecb2fe8277938f907bfed99955b00b80f876",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e5c9ecb2fe8277938f907bfed99955b00b80f876/comments",
    "author": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cb2ca03a86a9b55c87d9ab3cbf8a320a5b04c3b0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cb2ca03a86a9b55c87d9ab3cbf8a320a5b04c3b0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cb2ca03a86a9b55c87d9ab3cbf8a320a5b04c3b0"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 14,
      "deletions": 4
    },
    "files": [
      {
        "sha": "36303344fd8be2a9bc3e0ea0ec8635a8957b0869",
        "filename": "src/rpc/client.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e5c9ecb2fe8277938f907bfed99955b00b80f876/src/rpc/client.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e5c9ecb2fe8277938f907bfed99955b00b80f876/src/rpc/client.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/client.cpp?ref=e5c9ecb2fe8277938f907bfed99955b00b80f876",
        "patch": "@@ -101,6 +101,7 @@ static const CRPCConvertParam vRPCConvertParams[] =\n     { \"combinerawtransaction\", 0, \"txs\" },\n     { \"fundrawtransaction\", 1, \"options\" },\n     { \"fundrawtransaction\", 2, \"iswitness\" },\n+    { \"fundrawtransaction\", 3, \"verbose\" },\n     { \"gettxout\", 1, \"n\" },\n     { \"gettxout\", 2, \"include_mempool\" },\n     { \"gettxoutproof\", 0, \"txids\" },"
      },
      {
        "sha": "6962ea5b914c424836cc023aba0aeae6e7100e4c",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 4,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e5c9ecb2fe8277938f907bfed99955b00b80f876/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e5c9ecb2fe8277938f907bfed99955b00b80f876/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=e5c9ecb2fe8277938f907bfed99955b00b80f876",
        "patch": "@@ -3043,9 +3043,9 @@ UniValue fundrawtransaction(const JSONRPCRequest& request)\n         return NullUniValue;\n     }\n \n-    if (request.fHelp || request.params.size() < 1 || request.params.size() > 3)\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 4)\n         throw std::runtime_error(\n-                            \"fundrawtransaction \\\"hexstring\\\" ( options iswitness )\\n\"\n+                            \"fundrawtransaction \\\"hexstring\\\" ( options iswitness verbose )\\n\"\n                             \"\\nAdd inputs to a transaction until it has enough in value to meet its out value.\\n\"\n                             \"This will not modify existing inputs, and will add at most one change output to the outputs.\\n\"\n                             \"No existing outputs will be modified unless \\\"subtractFeeFromOutputs\\\" is specified.\\n\"\n@@ -3083,13 +3083,17 @@ UniValue fundrawtransaction(const JSONRPCRequest& request)\n                             \"                         for backward compatibility: passing in a true instead of an object will result in {\\\"includeWatching\\\":true}\\n\"\n                             \"3. iswitness               (boolean, optional) Whether the transaction hex is a serialized witness transaction \\n\"\n                             \"                              If iswitness is not present, heuristic tests will be used in decoding\\n\"\n+                            \"4. verbose                      (boolean, optional, default=true) Whether to return verbose information or not\\n\"\n \n-                            \"\\nResult:\\n\"\n+                            \"\\nResult (default, verbose=true):\\n\"\n                             \"{\\n\"\n                             \"  \\\"hex\\\":       \\\"value\\\", (string)  The resulting raw transaction (hex-encoded string)\\n\"\n                             \"  \\\"fee\\\":       n,         (numeric) Fee in \" + CURRENCY_UNIT + \" the resulting transaction pays\\n\"\n                             \"  \\\"changepos\\\": n          (numeric) The position of the added change output, or -1\\n\"\n                             \"}\\n\"\n+\n+                            \"\\nResult (verbose=false):\\n\"\n+                            \"tx                            (hex string) The funded transaction hex string\\n\"\n                             \"\\nExamples:\\n\"\n                             \"\\nCreate a transaction with no inputs\\n\"\n                             + HelpExampleCli(\"createrawtransaction\", \"\\\"[]\\\" \\\"{\\\\\\\"myaddress\\\\\\\":0.01}\\\"\") +\n@@ -3111,6 +3115,7 @@ UniValue fundrawtransaction(const JSONRPCRequest& request)\n     CCoinControl coinControl;\n     int changePosition = -1;\n     bool lockUnspents = false;\n+    bool verbose_mode = request.params[3].isNull() || request.params[3].get_bool();\n     UniValue subtractFeeFromOutputs;\n     std::set<int> setSubtractFeeFromOutputs;\n \n@@ -3238,6 +3243,10 @@ UniValue fundrawtransaction(const JSONRPCRequest& request)\n         throw JSONRPCError(RPC_WALLET_ERROR, strFailReason);\n     }\n \n+    if (!verbose_mode) {\n+        return EncodeHexTx(tx);\n+    }\n+\n     UniValue result(UniValue::VOBJ);\n     result.pushKV(\"hex\", EncodeHexTx(tx));\n     result.pushKV(\"changepos\", changePosition);\n@@ -3812,7 +3821,7 @@ extern UniValue rescanblockchain(const JSONRPCRequest& request);\n static const CRPCCommand commands[] =\n { //  category              name                                actor (function)                argNames\n     //  --------------------- ------------------------          -----------------------         ----------\n-    { \"rawtransactions\",    \"fundrawtransaction\",               &fundrawtransaction,            {\"hexstring\",\"options\",\"iswitness\"} },\n+    { \"rawtransactions\",    \"fundrawtransaction\",               &fundrawtransaction,            {\"hexstring\",\"options\",\"iswitness\",\"verbose\"} },\n     { \"hidden\",             \"resendwallettransactions\",         &resendwallettransactions,      {} },\n     { \"wallet\",             \"abandontransaction\",               &abandontransaction,            {\"txid\"} },\n     { \"wallet\",             \"abortrescan\",                      &abortrescan,                   {} },"
      }
    ]
  },
  {
    "sha": "fc7397ba6bfd6217afbc53f9cd94df78eda8bfe8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYzczOTdiYTZiZmQ2MjE3YWZiYzUzZjljZDk0ZGY3OGVkYThiZmU4",
    "commit": {
      "author": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2018-02-22T07:55:13Z"
      },
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2018-02-22T07:55:13Z"
      },
      "message": "[rpc] [wallet] Add verbose flag (default=true) to SignTransaction helper",
      "tree": {
        "sha": "c168d6f6a90b5921b24c1417855e7c8bc964c461",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c168d6f6a90b5921b24c1417855e7c8bc964c461"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fc7397ba6bfd6217afbc53f9cd94df78eda8bfe8",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEExCr/fGGz5EoUVM01V692LbM1MyIFAlqOd2IACgkQV692LbM1\nMyLUaw/+LpsTn5wnQbOpipLyby1MNv2xYBVKuqSME45yhsW8C4RGUHA9nObE6m/J\nneAeux2Fa/PEMqg40bJ+1U5ufzhbTuXQORPg4sSlGaBQ3YX7c22CrpwAZbTSHHu9\nxZ2r8MQujK2FN6Vn0yp1A84Lzw3SZWGbPQegqUqh8HrXkiHQ+wLMhJv7oPo4dPdG\nx9qvacN6G74Ez6IU7Q1eclFz+Rkg0UUV9IXJ/RMYJ9V+RANcPFwZa5PTyJEJh1gr\n8VC9b/ITwKutdRWRZkgnJUfDFeAoJekgNE9FUDfI4XhuRxissRUvgq9ayCeCBHpw\npYfbIlxtFnVIFrHd8SYFzJgM3ia88oaj4RthpBDOB3AlhXIrbFL7yI3Zs6uxfAou\nCrnzO9f+FNGmh+XDTyFLjkXhrqUH9k0vsWS0b3wbFn+GXTY04VFQ5DixwpXjKdAd\ncFdjj6STrK+mRTkxqm4hdydlnHm8iYag8KJ68movUighx1dDx+kK3oVmd/0UMskn\nJUQpu3wWbFKbKB1q+6X6fpqS7ke+5PyNxWi4JQQ9bI7RfbmNJPn4AnWd8eUynUUF\ngsg3DEwlJe69FUgty9NeAE4drRhvD8MpsBI+f6Digfmv0bSWSSojJ08ZJ+qy7Y/z\n2dKwPtpF3JlK1xCUCxFK5jV/2Xph7FfErJvai3XXeZk/3fKFcD0=\n=xZe8\n-----END PGP SIGNATURE-----",
        "payload": "tree c168d6f6a90b5921b24c1417855e7c8bc964c461\nparent e5c9ecb2fe8277938f907bfed99955b00b80f876\nauthor Karl-Johan Alm <karljohan-alm@garage.co.jp> 1519286113 +0900\ncommitter Karl-Johan Alm <karljohan-alm@garage.co.jp> 1519286113 +0900\n\n[rpc] [wallet] Add verbose flag (default=true) to SignTransaction helper\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fc7397ba6bfd6217afbc53f9cd94df78eda8bfe8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fc7397ba6bfd6217afbc53f9cd94df78eda8bfe8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fc7397ba6bfd6217afbc53f9cd94df78eda8bfe8/comments",
    "author": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e5c9ecb2fe8277938f907bfed99955b00b80f876",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e5c9ecb2fe8277938f907bfed99955b00b80f876",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e5c9ecb2fe8277938f907bfed99955b00b80f876"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 7,
      "deletions": 2
    },
    "files": [
      {
        "sha": "c8a987f976a3c4519debb9e2b8e1a6b1d33f1fb1",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fc7397ba6bfd6217afbc53f9cd94df78eda8bfe8/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fc7397ba6bfd6217afbc53f9cd94df78eda8bfe8/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=fc7397ba6bfd6217afbc53f9cd94df78eda8bfe8",
        "patch": "@@ -672,7 +672,7 @@ UniValue combinerawtransaction(const JSONRPCRequest& request)\n     return EncodeHexTx(mergedTx);\n }\n \n-UniValue SignTransaction(CMutableTransaction& mtx, const UniValue& prevTxsUnival, CBasicKeyStore *keystore, bool is_temp_keystore, const UniValue& hashType)\n+UniValue SignTransaction(CMutableTransaction& mtx, const UniValue& prevTxsUnival, CBasicKeyStore *keystore, bool is_temp_keystore, const UniValue& hashType, bool verbose_mode)\n {\n     // Fetch previous transactions (inputs):\n     CCoinsView viewDummy;\n@@ -815,6 +815,11 @@ UniValue SignTransaction(CMutableTransaction& mtx, const UniValue& prevTxsUnival\n             }\n         }\n     }\n+\n+    if (!verbose_mode) {\n+        return EncodeHexTx(mtx);\n+    }\n+\n     bool fComplete = vErrors.empty();\n \n     UniValue result(UniValue::VOBJ);"
      },
      {
        "sha": "b8bd29c3a661878078394b34772eb5112e07514e",
        "filename": "src/rpc/rawtransaction.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fc7397ba6bfd6217afbc53f9cd94df78eda8bfe8/src/rpc/rawtransaction.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fc7397ba6bfd6217afbc53f9cd94df78eda8bfe8/src/rpc/rawtransaction.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.h?ref=fc7397ba6bfd6217afbc53f9cd94df78eda8bfe8",
        "patch": "@@ -10,6 +10,6 @@ struct CMutableTransaction;\n class UniValue;\n \n /** Sign a transaction with the given keystore and previous transactions */\n-UniValue SignTransaction(CMutableTransaction& mtx, const UniValue& prevTxs, CBasicKeyStore *keystore, bool tempKeystore, const UniValue& hashType);\n+UniValue SignTransaction(CMutableTransaction& mtx, const UniValue& prevTxs, CBasicKeyStore *keystore, bool tempKeystore, const UniValue& hashType, bool verbose_mode = true);\n \n #endif // BITCOIN_RPC_RAWTRANSACTION_H"
      }
    ]
  },
  {
    "sha": "fe131b8f4115f49393a1e0e38b12ba8cfac5933e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmZTEzMWI4ZjQxMTVmNDkzOTNhMWUwZTM4YjEyYmE4Y2ZhYzU5MzNl",
    "commit": {
      "author": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2017-07-19T03:46:04Z"
      },
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2018-02-22T07:55:16Z"
      },
      "message": "[test] Add verbose=false tests for fundrawtransaction.",
      "tree": {
        "sha": "34f224f673c24d3c03a6fe8e03bf50e7a546e978",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/34f224f673c24d3c03a6fe8e03bf50e7a546e978"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fe131b8f4115f49393a1e0e38b12ba8cfac5933e",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEExCr/fGGz5EoUVM01V692LbM1MyIFAlqOd2QACgkQV692LbM1\nMyL2iQ//e2YQa0RUpTkDX/3GZisRvzkH7W7wXa8z0C9qwjUJA30ydc/kQ78mv/pd\n/Qgslqad7Bf7zOisJmhqNKf2YrknZFlnXFx+hXL8WiG6N8gwfGl48aLAXQL5R+BP\n06sX4+/YVelh+XnElSxBf6/gD3yt1aN40Dh4nZaXSv9fk8qWN+L9BOIhYmtzZC5h\nAloL+IyyqOcPuJBcIFhnRpDpl+Y/zi1WQXhU9FDKwX37Zs33jzz4/h+WL8OltRDE\noaL7FQ7kLGncRt5EaKG+cQqzyszwEXtnemNBjhrD3mN5vwI1fm+D+so89QObB7za\nmocc2swV7CDf5oTr8zkTazoAbuvulmfDYFnCYaZOtn1bJGpQb4UrNkkq4lNKUmYr\nlj3/6UD2lN36yU7y4lY51bd8YGQFykTLbpoam6YhFIIsaW0LukWFiAli6ru4wbgf\nHjd9JKm10hByl4e21c4hoeMmcvMBRFwugbMbzckQakasSF8tEpJDkSSdkenO3D1/\nnP0vrbDbJQ1OfkSW9tBE4W159til7Po+x6Fo93IU3jXHV+gVwGObrfrtKukRsOA4\n6S2XFNqUpDyDHo6sX5BrSLdzv0s5x0HDkl3zHFlN0eLV5G0GJ/CC62mm0CmfScpC\nQKa++ZiyWZ9b5/LIgi7SG2VEOYjnty2vLiRO2pUaf/nepC5swBc=\n=V5Nl\n-----END PGP SIGNATURE-----",
        "payload": "tree 34f224f673c24d3c03a6fe8e03bf50e7a546e978\nparent fc7397ba6bfd6217afbc53f9cd94df78eda8bfe8\nauthor Karl-Johan Alm <karljohan-alm@garage.co.jp> 1500435964 +0900\ncommitter Karl-Johan Alm <karljohan-alm@garage.co.jp> 1519286116 +0900\n\n[test] Add verbose=false tests for fundrawtransaction.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fe131b8f4115f49393a1e0e38b12ba8cfac5933e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fe131b8f4115f49393a1e0e38b12ba8cfac5933e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fe131b8f4115f49393a1e0e38b12ba8cfac5933e/comments",
    "author": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fc7397ba6bfd6217afbc53f9cd94df78eda8bfe8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fc7397ba6bfd6217afbc53f9cd94df78eda8bfe8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fc7397ba6bfd6217afbc53f9cd94df78eda8bfe8"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 22,
      "deletions": 1
    },
    "files": [
      {
        "sha": "24d4cabb132777fef7e642eaba4403a2eb95f66a",
        "filename": "test/functional/rpc_fundrawtransaction.py",
        "status": "modified",
        "additions": 22,
        "deletions": 1,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fe131b8f4115f49393a1e0e38b12ba8cfac5933e/test/functional/rpc_fundrawtransaction.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fe131b8f4115f49393a1e0e38b12ba8cfac5933e/test/functional/rpc_fundrawtransaction.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_fundrawtransaction.py?ref=fe131b8f4115f49393a1e0e38b12ba8cfac5933e",
        "patch": "@@ -77,6 +77,11 @@ def run_test(self):\n         fee = rawtxfund['fee']\n         dec_tx  = self.nodes[2].decoderawtransaction(rawtxfund['hex'])\n         assert(len(dec_tx['vin']) > 0) #test that we have enough inputs\n+        assert(len(\n+            self.nodes[2].decoderawtransaction(\n+                self.nodes[2].fundrawtransaction(hexstring=rawtx, verbose=False)\n+            )\n+        ) > 0)\n \n         ##############################\n         # simple test with two coins #\n@@ -90,6 +95,11 @@ def run_test(self):\n         fee = rawtxfund['fee']\n         dec_tx  = self.nodes[2].decoderawtransaction(rawtxfund['hex'])\n         assert(len(dec_tx['vin']) > 0) #test if we have enough inputs\n+        assert(len(\n+            self.nodes[2].decoderawtransaction(\n+                self.nodes[2].fundrawtransaction(hexstring=rawtx, verbose=False)\n+            )\n+        ))\n \n         ##############################\n         # simple test with two coins #\n@@ -104,7 +114,12 @@ def run_test(self):\n         dec_tx  = self.nodes[2].decoderawtransaction(rawtxfund['hex'])\n         assert(len(dec_tx['vin']) > 0)\n         assert_equal(dec_tx['vin'][0]['scriptSig']['hex'], '')\n-\n+        assert_equal(\n+            '',\n+            self.nodes[2].decoderawtransaction(\n+                self.nodes[2].fundrawtransaction(hexstring=rawtx, verbose=False)\n+            )['vin'][0]['scriptSig']['hex']\n+        )\n \n         ################################\n         # simple test with two outputs #\n@@ -123,6 +138,12 @@ def run_test(self):\n \n         assert(len(dec_tx['vin']) > 0)\n         assert_equal(dec_tx['vin'][0]['scriptSig']['hex'], '')\n+        assert_equal(\n+            '',\n+            self.nodes[2].decoderawtransaction(\n+                self.nodes[2].fundrawtransaction(hexstring=rawtx, verbose=False)\n+            )['vin'][0]['scriptSig']['hex']\n+        )\n \n \n         #########################################################################"
      }
    ]
  },
  {
    "sha": "2235913e0ee5d23bd2df0ceb9705583e02d8b655",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyMjM1OTEzZTBlZTVkMjNiZDJkZjBjZWI5NzA1NTgzZTAyZDhiNjU1",
    "commit": {
      "author": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2018-02-22T07:44:53Z"
      },
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2018-02-22T07:55:16Z"
      },
      "message": "[rpc] [wallet] Add verbose mode to signrawtransactionwithwallet",
      "tree": {
        "sha": "808d0a581fe7a3ceec588753c2149cbdda6c2d1a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/808d0a581fe7a3ceec588753c2149cbdda6c2d1a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2235913e0ee5d23bd2df0ceb9705583e02d8b655",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEExCr/fGGz5EoUVM01V692LbM1MyIFAlqOd2QACgkQV692LbM1\nMyI1Qg/+L8h0iG3ivrhsuIQn6uydli2wAzeRpmlpShrnkh857bTHJ99kLVfFZ7rF\ncWasx3cbOoCLk26pBlZS5aoc1CKDs6IHQOLizleYIdeeXEPbJwzow2K0lvJdowwh\nBK3yytdn6zA/JzCukdPkry6o34EyFT9OtYwxzQho79uSyuwfHKB1r1OLzCIYFhSa\n/41pP+JWNnoSe+6Mg1A5V9XZOC4miPYQW2axLpVCS5iG88psYGoFa1qu1DUJWRXb\nR2CP2selfuKTCROLQWdZgIw3olwVabGKJQ35EsVB/iHPG/UvL+6CXbNhMnz8b0Zm\nVjbb/Gh8kx7c1TlXQ8ia9mMS6rTD5h/udcD/G+itzvsYk8sGEJfWjREXDSCfkXGk\nrxVu1IJmwLElyFICAueGetzi4kvZuLySvFZrCtVb+Qf5XTsiojVIxPgIjxeprOQr\ntBMP+pUWTMP/UjkTRM7LkGnpFfrD/gQXZq1MkczCFTDBqLF7JGt0dUCUmE5F2Fyp\nrmWNaJ2tLfXYtbZMV0OfpDcFaQ4Lh6VltwZ+kjFEobWtXOWk4vagBzRaxbcw43bp\nuJQWOt5PmXiVszgDhG2XPYHbhFyp11wBfrqEsJo12VgeizuTEuU8vbLw2dHk9iB+\nAx2aGG/YwgbLDUh0qIVXre3CCuCzUFVEc8CUGUPJJFXhndYGLRQ=\n=m9FC\n-----END PGP SIGNATURE-----",
        "payload": "tree 808d0a581fe7a3ceec588753c2149cbdda6c2d1a\nparent fe131b8f4115f49393a1e0e38b12ba8cfac5933e\nauthor Karl-Johan Alm <karljohan-alm@garage.co.jp> 1519285493 +0900\ncommitter Karl-Johan Alm <karljohan-alm@garage.co.jp> 1519286116 +0900\n\n[rpc] [wallet] Add verbose mode to signrawtransactionwithwallet\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2235913e0ee5d23bd2df0ceb9705583e02d8b655",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2235913e0ee5d23bd2df0ceb9705583e02d8b655",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2235913e0ee5d23bd2df0ceb9705583e02d8b655/comments",
    "author": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fe131b8f4115f49393a1e0e38b12ba8cfac5933e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fe131b8f4115f49393a1e0e38b12ba8cfac5933e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fe131b8f4115f49393a1e0e38b12ba8cfac5933e"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 13,
      "deletions": 6
    },
    "files": [
      {
        "sha": "80ddf59ffa70a7c429eaf595e8af9aa07e64b026",
        "filename": "src/rpc/client.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2235913e0ee5d23bd2df0ceb9705583e02d8b655/src/rpc/client.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2235913e0ee5d23bd2df0ceb9705583e02d8b655/src/rpc/client.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/client.cpp?ref=2235913e0ee5d23bd2df0ceb9705583e02d8b655",
        "patch": "@@ -97,6 +97,7 @@ static const CRPCConvertParam vRPCConvertParams[] =\n     { \"signrawtransactionwithkey\", 1, \"privkeys\" },\n     { \"signrawtransactionwithkey\", 2, \"prevtxs\" },\n     { \"signrawtransactionwithwallet\", 1, \"prevtxs\" },\n+    { \"signrawtransactionwithwallet\", 3, \"verbose\" },\n     { \"sendrawtransaction\", 1, \"allowhighfees\" },\n     { \"combinerawtransaction\", 0, \"txs\" },\n     { \"fundrawtransaction\", 1, \"options\" },"
      },
      {
        "sha": "9cf9f47ced0a95f27e6345fa84dabd2d83cccb31",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 6,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2235913e0ee5d23bd2df0ceb9705583e02d8b655/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2235913e0ee5d23bd2df0ceb9705583e02d8b655/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=2235913e0ee5d23bd2df0ceb9705583e02d8b655",
        "patch": "@@ -3262,9 +3262,9 @@ UniValue signrawtransactionwithwallet(const JSONRPCRequest& request)\n         return NullUniValue;\n     }\n \n-    if (request.fHelp || request.params.size() < 1 || request.params.size() > 3)\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 4)\n         throw std::runtime_error(\n-            \"signrawtransactionwithwallet \\\"hexstring\\\" ( [{\\\"txid\\\":\\\"id\\\",\\\"vout\\\":n,\\\"scriptPubKey\\\":\\\"hex\\\",\\\"redeemScript\\\":\\\"hex\\\"},...] sighashtype )\\n\"\n+            \"signrawtransactionwithwallet \\\"hexstring\\\" ( [{\\\"txid\\\":\\\"id\\\",\\\"vout\\\":n,\\\"scriptPubKey\\\":\\\"hex\\\",\\\"redeemScript\\\":\\\"hex\\\"},...] sighashtype verbose )\\n\"\n             \"\\nSign inputs for raw transaction (serialized, hex-encoded).\\n\"\n             \"The second optional argument (may be null) is an array of previous transaction outputs that\\n\"\n             \"this transaction depends on but may not yet be in the block chain.\\n\"\n@@ -3290,8 +3290,9 @@ UniValue signrawtransactionwithwallet(const JSONRPCRequest& request)\n             \"       \\\"ALL|ANYONECANPAY\\\"\\n\"\n             \"       \\\"NONE|ANYONECANPAY\\\"\\n\"\n             \"       \\\"SINGLE|ANYONECANPAY\\\"\\n\"\n+            \"4. \\\"verbose\\\"                        (boolean, optional, default=true) Whether to return verbose information or not\\n\"\n \n-            \"\\nResult:\\n\"\n+            \"\\nResult (default, verbose=true):\\n\"\n             \"{\\n\"\n             \"  \\\"hex\\\" : \\\"value\\\",                  (string) The hex-encoded raw transaction with signature(s)\\n\"\n             \"  \\\"complete\\\" : true|false,          (boolean) If the transaction has a complete set of signatures\\n\"\n@@ -3307,12 +3308,17 @@ UniValue signrawtransactionwithwallet(const JSONRPCRequest& request)\n             \"  ]\\n\"\n             \"}\\n\"\n \n+            \"\\nResult (verbose=false):\\n\"\n+            \"tx                                  (hex string) Resulting transaction\\n\"\n+\n             \"\\nExamples:\\n\"\n             + HelpExampleCli(\"signrawtransactionwithwallet\", \"\\\"myhex\\\"\")\n             + HelpExampleRpc(\"signrawtransactionwithwallet\", \"\\\"myhex\\\"\")\n         );\n \n-    RPCTypeCheck(request.params, {UniValue::VSTR, UniValue::VARR, UniValue::VSTR}, true);\n+    RPCTypeCheck(request.params, {UniValue::VSTR, UniValue::VARR, UniValue::VSTR, UniValue::VBOOL}, true);\n+\n+    bool verbose_mode = request.params[3].isNull() || request.params[3].get_bool();\n \n     CMutableTransaction mtx;\n     if (!DecodeHexTx(mtx, request.params[0].get_str(), true)) {\n@@ -3321,7 +3327,7 @@ UniValue signrawtransactionwithwallet(const JSONRPCRequest& request)\n \n     // Sign the transaction\n     LOCK2(cs_main, pwallet->cs_wallet);\n-    return SignTransaction(mtx, request.params[1], pwallet, false, request.params[2]);\n+    return SignTransaction(mtx, request.params[1], pwallet, false, request.params[2], verbose_mode);\n }\n \n UniValue bumpfee(const JSONRPCRequest& request)\n@@ -3868,7 +3874,7 @@ static const CRPCCommand commands[] =\n     { \"wallet\",             \"setaccount\",                       &setaccount,                    {\"address\",\"account\"} },\n     { \"wallet\",             \"settxfee\",                         &settxfee,                      {\"amount\"} },\n     { \"wallet\",             \"signmessage\",                      &signmessage,                   {\"address\",\"message\"} },\n-    { \"wallet\",             \"signrawtransactionwithwallet\",     &signrawtransactionwithwallet,  {\"hexstring\",\"prevtxs\",\"sighashtype\"} },\n+    { \"wallet\",             \"signrawtransactionwithwallet\",     &signrawtransactionwithwallet,  {\"hexstring\",\"prevtxs\",\"sighashtype\",\"verbose\"} },\n     { \"wallet\",             \"walletlock\",                       &walletlock,                    {} },\n     { \"wallet\",             \"walletpassphrasechange\",           &walletpassphrasechange,        {\"oldpassphrase\",\"newpassphrase\"} },\n     { \"wallet\",             \"walletpassphrase\",                 &walletpassphrase,              {\"passphrase\",\"timeout\"} },"
      }
    ]
  },
  {
    "sha": "bf7080cbaa2020a352b62218cad08ef0ccc0193b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiZjcwODBjYmFhMjAyMGEzNTJiNjIyMThjYWQwOGVmMGNjYzAxOTNi",
    "commit": {
      "author": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2018-02-22T07:47:11Z"
      },
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2018-02-22T07:55:16Z"
      },
      "message": "[rpc] [wallet] Add verbose mode to signrawtransactionwithkey",
      "tree": {
        "sha": "d3eaedae6ee2decb837c3f354018197b1bf6ecbe",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d3eaedae6ee2decb837c3f354018197b1bf6ecbe"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bf7080cbaa2020a352b62218cad08ef0ccc0193b",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEExCr/fGGz5EoUVM01V692LbM1MyIFAlqOd2QACgkQV692LbM1\nMyKJHA//aVRFTvKQirJsTsCLgyVGJ9bXaXrZYKSY1B7JmP9ledrz9e47nUvfBx6h\nnsm6vrol458NnPwblThswxKsEL6iGCeKCZPoNhgrAi6yz/6Cg+TMhGnntbUhtr2/\nq3gg0GtbQsXP9Se36s/zSZFZpELVrIS1CdyyH/9BF0Ntm79/woRp0ZLkSny01Fbh\n/lp8RlJxRKDzkP2McR2Ab5IV798oSLiWq4lnzXvLvCykuU2xPojii5TtnoFxYQ5M\n29Hn6d/XtXIrChaBFS5rvO23LpD1CwjztVLlN3WpuwYB+kxAGjvtkYzLMPbPdbes\nN7cyoKPke145h3UMtGVt1OAzEtHq+Wj4heg03soXpPSiEDFsdlWJ4HYcnn4O3J87\nhA5JEDKOPUcgc2BqOuf7ldTvSTgbUNJiEX+ES1F7HeNHEmrbWfV+yi3y4n6kdMjU\nL6a+A9LWh1H2ic+q7znxlpCuTGKM3TbQMYCumbc1U4X/SQLOoQKMU8KInIQ+ROpS\nRulRsj5y9I1F9sKdxX8RaIkUX7IFeNtnUQA62pzoKWFCPABObbpNf+2Gq8OWnfy/\nzW1KY0084En914RfNBYo36QFSVFaBnnlPmoixxvtDrGjlcCaK7e0lIyzLshQq2jZ\nxdjZwD8CcU9kckS08J544zBQf18z/ZtkBWD7CfDNOq1PwMpt1Ug=\n=L8dG\n-----END PGP SIGNATURE-----",
        "payload": "tree d3eaedae6ee2decb837c3f354018197b1bf6ecbe\nparent 2235913e0ee5d23bd2df0ceb9705583e02d8b655\nauthor Karl-Johan Alm <karljohan-alm@garage.co.jp> 1519285631 +0900\ncommitter Karl-Johan Alm <karljohan-alm@garage.co.jp> 1519286116 +0900\n\n[rpc] [wallet] Add verbose mode to signrawtransactionwithkey\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bf7080cbaa2020a352b62218cad08ef0ccc0193b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bf7080cbaa2020a352b62218cad08ef0ccc0193b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bf7080cbaa2020a352b62218cad08ef0ccc0193b/comments",
    "author": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2235913e0ee5d23bd2df0ceb9705583e02d8b655",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2235913e0ee5d23bd2df0ceb9705583e02d8b655",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2235913e0ee5d23bd2df0ceb9705583e02d8b655"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 13,
      "deletions": 6
    },
    "files": [
      {
        "sha": "f646e0ab00c9c0da24e3812b51cf192f69bcad67",
        "filename": "src/rpc/client.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bf7080cbaa2020a352b62218cad08ef0ccc0193b/src/rpc/client.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bf7080cbaa2020a352b62218cad08ef0ccc0193b/src/rpc/client.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/client.cpp?ref=bf7080cbaa2020a352b62218cad08ef0ccc0193b",
        "patch": "@@ -96,6 +96,7 @@ static const CRPCConvertParam vRPCConvertParams[] =\n     { \"signrawtransaction\", 2, \"privkeys\" },\n     { \"signrawtransactionwithkey\", 1, \"privkeys\" },\n     { \"signrawtransactionwithkey\", 2, \"prevtxs\" },\n+    { \"signrawtransactionwithkey\", 4, \"verbose\" },\n     { \"signrawtransactionwithwallet\", 1, \"prevtxs\" },\n     { \"signrawtransactionwithwallet\", 3, \"verbose\" },\n     { \"sendrawtransaction\", 1, \"allowhighfees\" },"
      },
      {
        "sha": "29db40cbd49a28bd2ed27652269d664180f1fd75",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 6,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bf7080cbaa2020a352b62218cad08ef0ccc0193b/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bf7080cbaa2020a352b62218cad08ef0ccc0193b/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=bf7080cbaa2020a352b62218cad08ef0ccc0193b",
        "patch": "@@ -834,9 +834,9 @@ UniValue SignTransaction(CMutableTransaction& mtx, const UniValue& prevTxsUnival\n \n UniValue signrawtransactionwithkey(const JSONRPCRequest& request)\n {\n-    if (request.fHelp || request.params.size() < 2 || request.params.size() > 4)\n+    if (request.fHelp || request.params.size() < 2 || request.params.size() > 5)\n         throw std::runtime_error(\n-            \"signrawtransactionwithkey \\\"hexstring\\\" [\\\"privatekey1\\\",...] ( [{\\\"txid\\\":\\\"id\\\",\\\"vout\\\":n,\\\"scriptPubKey\\\":\\\"hex\\\",\\\"redeemScript\\\":\\\"hex\\\"},...] sighashtype )\\n\"\n+            \"signrawtransactionwithkey \\\"hexstring\\\" [\\\"privatekey1\\\",...] ( [{\\\"txid\\\":\\\"id\\\",\\\"vout\\\":n,\\\"scriptPubKey\\\":\\\"hex\\\",\\\"redeemScript\\\":\\\"hex\\\"},...] sighashtype verbose )\\n\"\n             \"\\nSign inputs for raw transaction (serialized, hex-encoded).\\n\"\n             \"The second argument is an array of base58-encoded private\\n\"\n             \"keys that will be the only keys used to sign the transaction.\\n\"\n@@ -868,8 +868,9 @@ UniValue signrawtransactionwithkey(const JSONRPCRequest& request)\n             \"       \\\"ALL|ANYONECANPAY\\\"\\n\"\n             \"       \\\"NONE|ANYONECANPAY\\\"\\n\"\n             \"       \\\"SINGLE|ANYONECANPAY\\\"\\n\"\n+            \"5. \\\"verbose\\\"                        (boolean, optional, default=true) Whether to return verbose information or not\\n\"\n \n-            \"\\nResult:\\n\"\n+            \"\\nResult (default, verbose=true):\\n\"\n             \"{\\n\"\n             \"  \\\"hex\\\" : \\\"value\\\",                  (string) The hex-encoded raw transaction with signature(s)\\n\"\n             \"  \\\"complete\\\" : true|false,          (boolean) If the transaction has a complete set of signatures\\n\"\n@@ -885,12 +886,17 @@ UniValue signrawtransactionwithkey(const JSONRPCRequest& request)\n             \"  ]\\n\"\n             \"}\\n\"\n \n+            \"\\nResult (verbose=false):\\n\"\n+            \"tx                                  (hex string) Resulting transaction\\n\"\n+\n             \"\\nExamples:\\n\"\n             + HelpExampleCli(\"signrawtransactionwithkey\", \"\\\"myhex\\\"\")\n             + HelpExampleRpc(\"signrawtransactionwithkey\", \"\\\"myhex\\\"\")\n         );\n \n-    RPCTypeCheck(request.params, {UniValue::VSTR, UniValue::VARR, UniValue::VARR, UniValue::VSTR}, true);\n+    RPCTypeCheck(request.params, {UniValue::VSTR, UniValue::VARR, UniValue::VARR, UniValue::VSTR, UniValue::VBOOL}, true);\n+\n+    bool verbose_mode = request.params[4].isNull() || request.params[4].get_bool();\n \n     CMutableTransaction mtx;\n     if (!DecodeHexTx(mtx, request.params[0].get_str(), true)) {\n@@ -912,7 +918,7 @@ UniValue signrawtransactionwithkey(const JSONRPCRequest& request)\n         keystore.AddKey(key);\n     }\n \n-    return SignTransaction(mtx, request.params[2], &keystore, true, request.params[3]);\n+    return SignTransaction(mtx, request.params[2], &keystore, true, request.params[3], verbose_mode);\n }\n \n UniValue signrawtransaction(const JSONRPCRequest& request)\n@@ -1121,7 +1127,7 @@ static const CRPCCommand commands[] =\n     { \"rawtransactions\",    \"sendrawtransaction\",           &sendrawtransaction,        {\"hexstring\",\"allowhighfees\"} },\n     { \"rawtransactions\",    \"combinerawtransaction\",        &combinerawtransaction,     {\"txs\"} },\n     { \"rawtransactions\",    \"signrawtransaction\",           &signrawtransaction,        {\"hexstring\",\"prevtxs\",\"privkeys\",\"sighashtype\"} }, /* uses wallet if enabled */\n-    { \"rawtransactions\",    \"signrawtransactionwithkey\",    &signrawtransactionwithkey, {\"hexstring\",\"privkeys\",\"prevtxs\",\"sighashtype\"} },\n+    { \"rawtransactions\",    \"signrawtransactionwithkey\",    &signrawtransactionwithkey, {\"hexstring\",\"privkeys\",\"prevtxs\",\"sighashtype\",\"verbose\"} },\n \n     { \"blockchain\",         \"gettxoutproof\",                &gettxoutproof,             {\"txids\", \"blockhash\"} },\n     { \"blockchain\",         \"verifytxoutproof\",             &verifytxoutproof,          {\"proof\"} },"
      }
    ]
  },
  {
    "sha": "317f1d2a60820080af7917fc6c9e456b2de04c5d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozMTdmMWQyYTYwODIwMDgwYWY3OTE3ZmM2YzllNDU2YjJkZTA0YzVk",
    "commit": {
      "author": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2018-02-22T07:58:30Z"
      },
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2018-02-22T07:58:30Z"
      },
      "message": "[test] Add case with verbose=false to signrawtransaction tests",
      "tree": {
        "sha": "d33466b0dc6098538f1853455e5892455c42fc33",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d33466b0dc6098538f1853455e5892455c42fc33"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/317f1d2a60820080af7917fc6c9e456b2de04c5d",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEExCr/fGGz5EoUVM01V692LbM1MyIFAlqOeCYACgkQV692LbM1\nMyItzw/+KuKsehAlSnXRAbzitOKn9lflF2jHONpbnjpSTUE3lpu0ZmGaDKmUE+45\nf4d0wa88dwxsFjIvz4hJQ4iaYcrc4+J2Mv7t0iC7IQi+Unbkf7uqAwrjRPBXi9IB\ncIG3HJ3UvfWosXTq0gHF2E0qWm284ATVEQta4WcClLoys5U3SYrTV7SrdlGGLS06\njQ85SEu0qS9wwUw+qN8YuGqzrCXo1eKBzxXtws/EE2rB+LUG3Mu4KPZBV+5U7LWD\nQOjrTeLRfeKt++J9pelNesq87R1S4wuopAEIC4jDrGndj21uJo617Lgr62qn2yr6\npkTHoep4uFDOo/3NX0uFXDD7aV0QfECBAKiN1edkXfS/Tnx5WaRD+3NtQlOCNMYt\n5r/G1eJT88jqULkc6+0TcOZ/FyiflblhETg5vsmpVRCs+cQ80NYVLYBrm4LAPDlM\nlDDRhQ/hbdOeEipquaKjavIj0XBOjoaTKxTwm7QFUCJQ2iXOouscwUa1SObecV1z\nSYNjnqLyjWRjbG7FqWZOWbUYWEkKHlarf8wMbFlyOA6sWcR1N9b+JQw49u+e/oy/\nGDImMP9LvIrINDXv8BxDekYKEpkwGF7ECXdDfldDWC9Htydu8BpI1qxgwC2Ddu1h\nX8oDLfsRencVp5UEEVnq9UZdvNQn9oj15u/FJMzEkFOMlpYlfZE=\n=too3\n-----END PGP SIGNATURE-----",
        "payload": "tree d33466b0dc6098538f1853455e5892455c42fc33\nparent bf7080cbaa2020a352b62218cad08ef0ccc0193b\nauthor Karl-Johan Alm <karljohan-alm@garage.co.jp> 1519286310 +0900\ncommitter Karl-Johan Alm <karljohan-alm@garage.co.jp> 1519286310 +0900\n\n[test] Add case with verbose=false to signrawtransaction tests\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/317f1d2a60820080af7917fc6c9e456b2de04c5d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/317f1d2a60820080af7917fc6c9e456b2de04c5d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/317f1d2a60820080af7917fc6c9e456b2de04c5d/comments",
    "author": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bf7080cbaa2020a352b62218cad08ef0ccc0193b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bf7080cbaa2020a352b62218cad08ef0ccc0193b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bf7080cbaa2020a352b62218cad08ef0ccc0193b"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 8,
      "deletions": 0
    },
    "files": [
      {
        "sha": "6f67beb1379eaf897ce178dd4bee31596cd1b9d5",
        "filename": "test/functional/rpc_signrawtransaction.py",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/317f1d2a60820080af7917fc6c9e456b2de04c5d/test/functional/rpc_signrawtransaction.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/317f1d2a60820080af7917fc6c9e456b2de04c5d/test/functional/rpc_signrawtransaction.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_signrawtransaction.py?ref=317f1d2a60820080af7917fc6c9e456b2de04c5d",
        "patch": "@@ -46,6 +46,10 @@ def successful_signing_test(self):\n         rawTxSigned2 = self.nodes[0].signrawtransaction(rawTx, inputs, privKeys)\n         assert_equal(rawTxSigned, rawTxSigned2)\n \n+        # Try with verbose=false\n+        rawTxSigned3 = self.nodes[0].signrawtransactionwithkey(rawTx, privKeys, inputs, None, False)\n+        assert_equal(rawTxSigned3, rawTxSigned['hex'])\n+\n     def script_verification_error_test(self):\n         \"\"\"Create and sign a raw transaction with valid (vin 0), invalid (vin 1) and one missing (vin 2) input script.\n \n@@ -144,6 +148,10 @@ def script_verification_error_test(self):\n         rawTxSigned2 = self.nodes[0].signrawtransaction(p2wpkh_raw_tx)\n         assert_equal(rawTxSigned, rawTxSigned2)\n \n+        # Try with verbose=false\n+        rawTxSigned3 = self.nodes[0].signrawtransactionwithwallet(hexstring=p2wpkh_raw_tx, verbose=False)\n+        assert_equal(rawTxSigned3, rawTxSigned['hex'])\n+\n     def run_test(self):\n         self.successful_signing_test()\n         self.script_verification_error_test()"
      }
    ]
  }
]