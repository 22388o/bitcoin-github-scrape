[
  {
    "sha": "6f37b5c7392d3ab26973084a4a028f6b571433fa",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2ZjM3YjVjNzM5MmQzYWIyNjk3MzA4NGE0YTAyOGY2YjU3MTQzM2Zh",
    "commit": {
      "author": {
        "name": "Bruce Fenton",
        "email": "Bruce@brucefenton.com",
        "date": "2017-07-09T21:51:26Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2017-07-09T21:51:26Z"
      },
      "message": "Update README.md\n\nFirst edits of Bitcoin descriptor content",
      "tree": {
        "sha": "06cb57976269784b08a22ed8a84ab1c816807f67",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/06cb57976269784b08a22ed8a84ab1c816807f67"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6f37b5c7392d3ab26973084a4a028f6b571433fa",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6f37b5c7392d3ab26973084a4a028f6b571433fa",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6f37b5c7392d3ab26973084a4a028f6b571433fa",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6f37b5c7392d3ab26973084a4a028f6b571433fa/comments",
    "author": {
      "login": "BruceFenton",
      "id": 7314496,
      "node_id": "MDQ6VXNlcjczMTQ0OTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7314496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/BruceFenton",
      "html_url": "https://github.com/BruceFenton",
      "followers_url": "https://api.github.com/users/BruceFenton/followers",
      "following_url": "https://api.github.com/users/BruceFenton/following{/other_user}",
      "gists_url": "https://api.github.com/users/BruceFenton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/BruceFenton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BruceFenton/subscriptions",
      "organizations_url": "https://api.github.com/users/BruceFenton/orgs",
      "repos_url": "https://api.github.com/users/BruceFenton/repos",
      "events_url": "https://api.github.com/users/BruceFenton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/BruceFenton/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1d4805ce04645f3203b0cfd3d66ea710e7433eb4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1d4805ce04645f3203b0cfd3d66ea710e7433eb4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1d4805ce04645f3203b0cfd3d66ea710e7433eb4"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 1,
      "deletions": 7
    },
    "files": [
      {
        "sha": "c01aa7d0ee636416e27747675968f0030eea4af7",
        "filename": "README.md",
        "status": "modified",
        "additions": 1,
        "deletions": 7,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6f37b5c7392d3ab26973084a4a028f6b571433fa/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6f37b5c7392d3ab26973084a4a028f6b571433fa/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/README.md?ref=6f37b5c7392d3ab26973084a4a028f6b571433fa",
        "patch": "@@ -3,17 +3,11 @@ Bitcoin Core integration/staging tree\n \n [![Build Status](https://travis-ci.org/bitcoin/bitcoin.svg?branch=master)](https://travis-ci.org/bitcoin/bitcoin)\n \n-https://bitcoincore.org\n+\n \n What is Bitcoin?\n ----------------\n \n-Bitcoin is an experimental digital currency that enables instant payments to\n-anyone, anywhere in the world. Bitcoin uses peer-to-peer technology to operate\n-with no central authority: managing transactions and issuing money are carried\n-out collectively by the network. Bitcoin Core is the name of open source\n-software which enables the use of this currency.\n-\n For more information, as well as an immediately useable, binary version of\n the Bitcoin Core software, see https://bitcoin.org/en/download, or read the\n [original whitepaper](https://bitcoincore.org/bitcoin.pdf)."
      }
    ]
  },
  {
    "sha": "2e3b35083e0f865cac8c8625bf02283e2949229d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyZTNiMzUwODNlMGY4NjVjYWM4Yzg2MjViZjAyMjgzZTI5NDkyMjlk",
    "commit": {
      "author": {
        "name": "Bruce Fenton",
        "email": "Bruce@brucefenton.com",
        "date": "2017-07-09T22:07:29Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2017-07-09T22:07:29Z"
      },
      "message": "Update README.md\n\nDescription of project",
      "tree": {
        "sha": "ef1f2af5772504c13c4687448242ab25c4d51236",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ef1f2af5772504c13c4687448242ab25c4d51236"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2e3b35083e0f865cac8c8625bf02283e2949229d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2e3b35083e0f865cac8c8625bf02283e2949229d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2e3b35083e0f865cac8c8625bf02283e2949229d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2e3b35083e0f865cac8c8625bf02283e2949229d/comments",
    "author": {
      "login": "BruceFenton",
      "id": 7314496,
      "node_id": "MDQ6VXNlcjczMTQ0OTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7314496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/BruceFenton",
      "html_url": "https://github.com/BruceFenton",
      "followers_url": "https://api.github.com/users/BruceFenton/followers",
      "following_url": "https://api.github.com/users/BruceFenton/following{/other_user}",
      "gists_url": "https://api.github.com/users/BruceFenton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/BruceFenton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BruceFenton/subscriptions",
      "organizations_url": "https://api.github.com/users/BruceFenton/orgs",
      "repos_url": "https://api.github.com/users/BruceFenton/repos",
      "events_url": "https://api.github.com/users/BruceFenton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/BruceFenton/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6f37b5c7392d3ab26973084a4a028f6b571433fa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6f37b5c7392d3ab26973084a4a028f6b571433fa",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6f37b5c7392d3ab26973084a4a028f6b571433fa"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 10,
      "deletions": 1
    },
    "files": [
      {
        "sha": "c10c9b7266e19021486ff3dfd6f991099350be9c",
        "filename": "README.md",
        "status": "modified",
        "additions": 10,
        "deletions": 1,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2e3b35083e0f865cac8c8625bf02283e2949229d/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2e3b35083e0f865cac8c8625bf02283e2949229d/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/README.md?ref=2e3b35083e0f865cac8c8625bf02283e2949229d",
        "patch": "@@ -1,6 +1,15 @@\n-Bitcoin Core integration/staging tree\n+new project \n+(old title: Bitcoin Core integration/staging tree)\n =====================================\n \n+WHAT IS THE PURPOSE OF THIS GIT?\n+\n+This is an experiment for exploring the use of the Bitcoin blockchain for tokenization of assets.\n+\n+THANK YOU to all of the 448 Bitcoin devs who made 14,368 contributions to Bitcoin which is the foundation for this repository.\n+\n+\n+\n [![Build Status](https://travis-ci.org/bitcoin/bitcoin.svg?branch=master)](https://travis-ci.org/bitcoin/bitcoin)\n \n "
      }
    ]
  },
  {
    "sha": "58fa65c66591af66ede06ec11e219adae57f3b97",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1OGZhNjVjNjY1OTFhZjY2ZWRlMDZlYzExZTIxOWFkYWU1N2YzYjk3",
    "commit": {
      "author": {
        "name": "Bruce Fenton",
        "email": "Bruce@brucefenton.com",
        "date": "2017-07-12T18:17:57Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2017-07-12T18:17:57Z"
      },
      "message": "Update README.md",
      "tree": {
        "sha": "57b4fd1519ea3db7d752b9797257997dbff6f5b7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/57b4fd1519ea3db7d752b9797257997dbff6f5b7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/58fa65c66591af66ede06ec11e219adae57f3b97",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/58fa65c66591af66ede06ec11e219adae57f3b97",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/58fa65c66591af66ede06ec11e219adae57f3b97",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/58fa65c66591af66ede06ec11e219adae57f3b97/comments",
    "author": {
      "login": "BruceFenton",
      "id": 7314496,
      "node_id": "MDQ6VXNlcjczMTQ0OTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7314496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/BruceFenton",
      "html_url": "https://github.com/BruceFenton",
      "followers_url": "https://api.github.com/users/BruceFenton/followers",
      "following_url": "https://api.github.com/users/BruceFenton/following{/other_user}",
      "gists_url": "https://api.github.com/users/BruceFenton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/BruceFenton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BruceFenton/subscriptions",
      "organizations_url": "https://api.github.com/users/BruceFenton/orgs",
      "repos_url": "https://api.github.com/users/BruceFenton/repos",
      "events_url": "https://api.github.com/users/BruceFenton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/BruceFenton/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2e3b35083e0f865cac8c8625bf02283e2949229d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2e3b35083e0f865cac8c8625bf02283e2949229d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2e3b35083e0f865cac8c8625bf02283e2949229d"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 2,
      "deletions": 1
    },
    "files": [
      {
        "sha": "d08e90c76ba90a582496a9493f87c424499c007d",
        "filename": "README.md",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/58fa65c66591af66ede06ec11e219adae57f3b97/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/58fa65c66591af66ede06ec11e219adae57f3b97/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/README.md?ref=58fa65c66591af66ede06ec11e219adae57f3b97",
        "patch": "@@ -1,4 +1,5 @@\n-new project \n+Project Barcelona\n+\n (old title: Bitcoin Core integration/staging tree)\n =====================================\n "
      }
    ]
  },
  {
    "sha": "df07c1583ab309925876aa3ad9c56d96d55d6220",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkZjA3YzE1ODNhYjMwOTkyNTg3NmFhM2FkOWM1NmQ5NmQ1NWQ2MjIw",
    "commit": {
      "author": {
        "name": "Bruce Fenton",
        "email": "Bruce@brucefenton.com",
        "date": "2017-07-12T18:18:36Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2017-07-12T18:18:36Z"
      },
      "message": "Update README.md",
      "tree": {
        "sha": "08af1f1ba8da08412c0995f073099b44ecd568fd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/08af1f1ba8da08412c0995f073099b44ecd568fd"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/df07c1583ab309925876aa3ad9c56d96d55d6220",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/df07c1583ab309925876aa3ad9c56d96d55d6220",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/df07c1583ab309925876aa3ad9c56d96d55d6220",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/df07c1583ab309925876aa3ad9c56d96d55d6220/comments",
    "author": {
      "login": "BruceFenton",
      "id": 7314496,
      "node_id": "MDQ6VXNlcjczMTQ0OTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7314496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/BruceFenton",
      "html_url": "https://github.com/BruceFenton",
      "followers_url": "https://api.github.com/users/BruceFenton/followers",
      "following_url": "https://api.github.com/users/BruceFenton/following{/other_user}",
      "gists_url": "https://api.github.com/users/BruceFenton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/BruceFenton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BruceFenton/subscriptions",
      "organizations_url": "https://api.github.com/users/BruceFenton/orgs",
      "repos_url": "https://api.github.com/users/BruceFenton/repos",
      "events_url": "https://api.github.com/users/BruceFenton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/BruceFenton/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "58fa65c66591af66ede06ec11e219adae57f3b97",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/58fa65c66591af66ede06ec11e219adae57f3b97",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/58fa65c66591af66ede06ec11e219adae57f3b97"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 0,
      "deletions": 1
    },
    "files": [
      {
        "sha": "25bfc959d4af4a8a3303c529f4967bba4542376f",
        "filename": "README.md",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df07c1583ab309925876aa3ad9c56d96d55d6220/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df07c1583ab309925876aa3ad9c56d96d55d6220/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/README.md?ref=df07c1583ab309925876aa3ad9c56d96d55d6220",
        "patch": "@@ -1,5 +1,4 @@\n Project Barcelona\n-\n (old title: Bitcoin Core integration/staging tree)\n =====================================\n "
      }
    ]
  },
  {
    "sha": "f3ef6655b9b281e03fdfee5f39616f7057b49f75",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmM2VmNjY1NWI5YjI4MWUwM2ZkZmVlNWYzOTYxNmY3MDU3YjQ5Zjc1",
    "commit": {
      "author": {
        "name": "Bruce Fenton",
        "email": "Bruce@brucefenton.com",
        "date": "2017-10-10T13:07:26Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2017-10-10T13:07:26Z"
      },
      "message": "Update README.md",
      "tree": {
        "sha": "003c986b5b5afe1a307d137dd805434134f2ceba",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/003c986b5b5afe1a307d137dd805434134f2ceba"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f3ef6655b9b281e03fdfee5f39616f7057b49f75",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f3ef6655b9b281e03fdfee5f39616f7057b49f75",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f3ef6655b9b281e03fdfee5f39616f7057b49f75",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f3ef6655b9b281e03fdfee5f39616f7057b49f75/comments",
    "author": {
      "login": "BruceFenton",
      "id": 7314496,
      "node_id": "MDQ6VXNlcjczMTQ0OTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7314496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/BruceFenton",
      "html_url": "https://github.com/BruceFenton",
      "followers_url": "https://api.github.com/users/BruceFenton/followers",
      "following_url": "https://api.github.com/users/BruceFenton/following{/other_user}",
      "gists_url": "https://api.github.com/users/BruceFenton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/BruceFenton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BruceFenton/subscriptions",
      "organizations_url": "https://api.github.com/users/BruceFenton/orgs",
      "repos_url": "https://api.github.com/users/BruceFenton/repos",
      "events_url": "https://api.github.com/users/BruceFenton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/BruceFenton/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "df07c1583ab309925876aa3ad9c56d96d55d6220",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/df07c1583ab309925876aa3ad9c56d96d55d6220",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/df07c1583ab309925876aa3ad9c56d96d55d6220"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "a2c23b0e378128fd22f4434f3f2f6f1a63e577ea",
        "filename": "README.md",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f3ef6655b9b281e03fdfee5f39616f7057b49f75/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f3ef6655b9b281e03fdfee5f39616f7057b49f75/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/README.md?ref=f3ef6655b9b281e03fdfee5f39616f7057b49f75",
        "patch": "@@ -1,12 +1,12 @@\n-Project Barcelona\n+Project Ravencoin \n (old title: Bitcoin Core integration/staging tree)\n =====================================\n \n WHAT IS THE PURPOSE OF THIS GIT?\n \n This is an experiment for exploring the use of the Bitcoin blockchain for tokenization of assets.\n \n-THANK YOU to all of the 448 Bitcoin devs who made 14,368 contributions to Bitcoin which is the foundation for this repository.\n+THANK YOU to all of the 448 Bitcoin devs who made 14,368 contributions to Bitcoin which was the foundation for this repository.\n \n \n "
      }
    ]
  },
  {
    "sha": "22c2eecb8af79a126e81dd5167eff658eb299eac",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyMmMyZWVjYjhhZjc5YTEyNmU4MWRkNTE2N2VmZjY1OGViMjk5ZWFj",
    "commit": {
      "author": {
        "name": "Bruce Fenton",
        "email": "Bruce@brucefenton.com",
        "date": "2017-10-10T13:09:31Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2017-10-10T13:09:31Z"
      },
      "message": "Create about",
      "tree": {
        "sha": "a15e3c20a5d98df197a5aca4f7b91b5e73297425",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a15e3c20a5d98df197a5aca4f7b91b5e73297425"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/22c2eecb8af79a126e81dd5167eff658eb299eac",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/22c2eecb8af79a126e81dd5167eff658eb299eac",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/22c2eecb8af79a126e81dd5167eff658eb299eac",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/22c2eecb8af79a126e81dd5167eff658eb299eac/comments",
    "author": {
      "login": "BruceFenton",
      "id": 7314496,
      "node_id": "MDQ6VXNlcjczMTQ0OTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7314496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/BruceFenton",
      "html_url": "https://github.com/BruceFenton",
      "followers_url": "https://api.github.com/users/BruceFenton/followers",
      "following_url": "https://api.github.com/users/BruceFenton/following{/other_user}",
      "gists_url": "https://api.github.com/users/BruceFenton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/BruceFenton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BruceFenton/subscriptions",
      "organizations_url": "https://api.github.com/users/BruceFenton/orgs",
      "repos_url": "https://api.github.com/users/BruceFenton/repos",
      "events_url": "https://api.github.com/users/BruceFenton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/BruceFenton/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f3ef6655b9b281e03fdfee5f39616f7057b49f75",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f3ef6655b9b281e03fdfee5f39616f7057b49f75",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f3ef6655b9b281e03fdfee5f39616f7057b49f75"
      }
    ],
    "stats": {
      "total": 35,
      "additions": 35,
      "deletions": 0
    },
    "files": [
      {
        "sha": "957cb39a313f6f6c4c4346285c56f444f7fa4c6f",
        "filename": "about",
        "status": "added",
        "additions": 35,
        "deletions": 0,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/22c2eecb8af79a126e81dd5167eff658eb299eac/about",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/22c2eecb8af79a126e81dd5167eff658eb299eac/about",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/about?ref=22c2eecb8af79a126e81dd5167eff658eb299eac",
        "patch": "@@ -0,0 +1,35 @@\n+Ravencoin \n+A digital peer to peer network for the facilitation of asset transfer.\n+\n+\n+\n+In the fictional world of Westeros, ravens are used as messengers who carry statements of truth. Ravencoin is a use case specific blockchain designed to carry statements of truth about who owns what assets. \n+\n+\n+\n+Thank you to the Bitcoin developers. \n+\n+The Ravencoin project is launched based on the hard work and continuous effort of over 400 Bitcoin developers who made over 14,000 commits over the life to date of the Bitcoin project. We are eternally grateful to you for your efforts and diligence in making a secure network and for their support of free and open source software development.  The Ravencoin experiment is made on the foundation you built.\n+\n+\n+Abstract\n+Ravencoin aims to implement a blockchain which is optimized specifically for the use case of transferring assets such as securities from one holder to another. Based on the extensive development and testing of Bitcoin, Ravencoin is built on a fork of the Bitcoin code. Key changes include a faster block reward time and a change in the number, but not weighed distribution schedule, of coins. Ravencoin is free and open source and will be issued and mined transparently with no pre-mine, developer allocation or any other similar set aside. Ravencoin is intended to prioritize user control, privacy and censorship resistance and be jurisdiction agnostic while allowing simple optional additional features for users based on need.\n+\n+\n+\n+A blockchain is a ledger showing the value of something and allowing it to be transferred to someone else. Of all the possible uses for blockchains, the reporting of who owns what is one of the core uses of the technology.  This is why the first and most successful use case for blockchain technology to date has been Bitcoin.\n+\n+The success of the Etherium ERC 20 token shows the demand for tokenized assets that use another blockchain.  Tokens offer many advantages to traditional shares or other participation mechanisms such as faster transfer, possibly increased user control and censorship resistance and reduction or elimination of the need for trusted third parties.\n+\n+Bitcoin also has the capability of serving as the rails for tokens by using projects such as Omnilayer, RSK or Counterparty. However, neither Bitcoin nor Ethereum was specifically designed for facilitating ownership of other assets. \n+\n+Ravencoin is designed to be a use case specific blockchain designed to efficiently handle one specific function: the transfer of assets from one party to another.\n+\n+Bitcoin is and always should be focused on its goals of being a better form of money. Bitcoin developers will unlikely prioritize improvements or features which are specifically beneficial to the facilitation of token transfers.  One goal of the Ravencoin project is to see if a use case specific blockchain and development effort can create code which can either improve existing structures like Bitcoin or provide advantages for specific use cases.\n+\n+In the new global economy, borders and jurisdictions will be less relevant as more assets are tradable and trade across borders is increasingly frictionless. In an age where people can move significant amounts of wealth instantly using Bitcoin, global consumers will likely demand the same efficiency for their securities and similar asset holdings.\n+\n+For such a global system to work it will need to be independent of regulatory jurisdictions.  This is not due to ideological belief but practicality: if the rails for blockchain asset transfer are not censorship resistance and jurisdiction agnostic, any given jurisdiction may be in conflict with another.  In legacy systems, wealth was generally confined in the jurisdiction of the holder and therefor easy to control based on the policies of that jurisdiction. Because of the global nature of blockchain technology any protocol level ability to control wealth would potentially place jurisdictions in conflict and will not be able to operate fairly.  \n+\n+\n+"
      }
    ]
  },
  {
    "sha": "38bd4885bde831ffa41dfdd2b053ab4b73167152",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozOGJkNDg4NWJkZTgzMWZmYTQxZGZkZDJiMDUzYWI0YjczMTY3MTUy",
    "commit": {
      "author": {
        "name": "Cade Call",
        "email": "cade.call@mediciventures.com",
        "date": "2018-01-03T16:20:17Z"
      },
      "committer": {
        "name": "Cade Call",
        "email": "cade.call@mediciventures.com",
        "date": "2018-01-03T16:20:17Z"
      },
      "message": "prepped binaries directory",
      "tree": {
        "sha": "df83cad10820c54e12deb90d3daa2933716bf094",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/df83cad10820c54e12deb90d3daa2933716bf094"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/38bd4885bde831ffa41dfdd2b053ab4b73167152",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/38bd4885bde831ffa41dfdd2b053ab4b73167152",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/38bd4885bde831ffa41dfdd2b053ab4b73167152",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/38bd4885bde831ffa41dfdd2b053ab4b73167152/comments",
    "author": {
      "login": "cfrogjump",
      "id": 636715,
      "node_id": "MDQ6VXNlcjYzNjcxNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/636715?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cfrogjump",
      "html_url": "https://github.com/cfrogjump",
      "followers_url": "https://api.github.com/users/cfrogjump/followers",
      "following_url": "https://api.github.com/users/cfrogjump/following{/other_user}",
      "gists_url": "https://api.github.com/users/cfrogjump/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cfrogjump/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cfrogjump/subscriptions",
      "organizations_url": "https://api.github.com/users/cfrogjump/orgs",
      "repos_url": "https://api.github.com/users/cfrogjump/repos",
      "events_url": "https://api.github.com/users/cfrogjump/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cfrogjump/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "cfrogjump",
      "id": 636715,
      "node_id": "MDQ6VXNlcjYzNjcxNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/636715?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cfrogjump",
      "html_url": "https://github.com/cfrogjump",
      "followers_url": "https://api.github.com/users/cfrogjump/followers",
      "following_url": "https://api.github.com/users/cfrogjump/following{/other_user}",
      "gists_url": "https://api.github.com/users/cfrogjump/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cfrogjump/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cfrogjump/subscriptions",
      "organizations_url": "https://api.github.com/users/cfrogjump/orgs",
      "repos_url": "https://api.github.com/users/cfrogjump/repos",
      "events_url": "https://api.github.com/users/cfrogjump/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cfrogjump/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "22c2eecb8af79a126e81dd5167eff658eb299eac",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/22c2eecb8af79a126e81dd5167eff658eb299eac",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/22c2eecb8af79a126e81dd5167eff658eb299eac"
      }
    ],
    "stats": {
      "total": 0,
      "additions": 0,
      "deletions": 0
    },
    "files": [
      {
        "sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
        "filename": "binaries/Readme.md",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/38bd4885bde831ffa41dfdd2b053ab4b73167152/binaries/Readme.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/38bd4885bde831ffa41dfdd2b053ab4b73167152/binaries/Readme.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/Readme.md?ref=38bd4885bde831ffa41dfdd2b053ab4b73167152"
      }
    ]
  },
  {
    "sha": "0ed713797412077e9ca3c61465df59769242a455",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowZWQ3MTM3OTc0MTIwNzdlOWNhM2M2MTQ2NWRmNTk3NjkyNDJhNDU1",
    "commit": {
      "author": {
        "name": "Cade Call",
        "email": "cade.call@mediciventures.com",
        "date": "2018-01-03T20:48:34Z"
      },
      "committer": {
        "name": "Cade Call",
        "email": "cade.call@mediciventures.com",
        "date": "2018-01-03T20:48:34Z"
      },
      "message": "Initial Binary release",
      "tree": {
        "sha": "a7c4bc7aabb652a9c17622eaf8f4bbfb6d617cc8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a7c4bc7aabb652a9c17622eaf8f4bbfb6d617cc8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0ed713797412077e9ca3c61465df59769242a455",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0ed713797412077e9ca3c61465df59769242a455",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0ed713797412077e9ca3c61465df59769242a455",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0ed713797412077e9ca3c61465df59769242a455/comments",
    "author": {
      "login": "cfrogjump",
      "id": 636715,
      "node_id": "MDQ6VXNlcjYzNjcxNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/636715?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cfrogjump",
      "html_url": "https://github.com/cfrogjump",
      "followers_url": "https://api.github.com/users/cfrogjump/followers",
      "following_url": "https://api.github.com/users/cfrogjump/following{/other_user}",
      "gists_url": "https://api.github.com/users/cfrogjump/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cfrogjump/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cfrogjump/subscriptions",
      "organizations_url": "https://api.github.com/users/cfrogjump/orgs",
      "repos_url": "https://api.github.com/users/cfrogjump/repos",
      "events_url": "https://api.github.com/users/cfrogjump/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cfrogjump/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "cfrogjump",
      "id": 636715,
      "node_id": "MDQ6VXNlcjYzNjcxNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/636715?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cfrogjump",
      "html_url": "https://github.com/cfrogjump",
      "followers_url": "https://api.github.com/users/cfrogjump/followers",
      "following_url": "https://api.github.com/users/cfrogjump/following{/other_user}",
      "gists_url": "https://api.github.com/users/cfrogjump/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cfrogjump/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cfrogjump/subscriptions",
      "organizations_url": "https://api.github.com/users/cfrogjump/orgs",
      "repos_url": "https://api.github.com/users/cfrogjump/repos",
      "events_url": "https://api.github.com/users/cfrogjump/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cfrogjump/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "38bd4885bde831ffa41dfdd2b053ab4b73167152",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/38bd4885bde831ffa41dfdd2b053ab4b73167152",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/38bd4885bde831ffa41dfdd2b053ab4b73167152"
      }
    ],
    "stats": {
      "total": 225,
      "additions": 225,
      "deletions": 0
    },
    "files": [
      {
        "sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
        "filename": "binaries/Readme.md",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/38bd4885bde831ffa41dfdd2b053ab4b73167152/binaries/Readme.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/38bd4885bde831ffa41dfdd2b053ab4b73167152/binaries/Readme.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/Readme.md?ref=38bd4885bde831ffa41dfdd2b053ab4b73167152"
      },
      {
        "sha": "89ed6aaa1620a9ab9f139551e838e447dfcde485",
        "filename": "binaries/pre-release/linux/README.md",
        "status": "added",
        "additions": 63,
        "deletions": 0,
        "changes": 63,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ed713797412077e9ca3c61465df59769242a455/binaries/pre-release/linux/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ed713797412077e9ca3c61465df59769242a455/binaries/pre-release/linux/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/pre-release/linux/README.md?ref=0ed713797412077e9ca3c61465df59769242a455",
        "patch": "@@ -0,0 +1,63 @@\n+# RavenBinaries Linux Download Instructions\n+\n+Download and copy binaries to desired folder\n+\n+##Ubuntu 16.04 and 17.04\n+\n+1 -- Update your apt cache\n+ \n+`ubuntu@server:~$ sudo apt-get update` \n+\n+2 -- Install the raven dependencies\n+\n+`ubuntu@server:~$ sudo apt-get -y install libevent-dev libboost-all-dev libminiupnpc10 libzmq5 software-properties-common`\n+\n+3 -- You need version 4 of the BerkeleyDB, the easiest way is to use the bitcoin apt packages, add the bitcoin repository \n+\n+`ubuntu@server:~$ sudo add-apt-repository ppa:bitcoin/bitcoin`\n+\n+4 -- Update your apt cache to recognize the new bitcoin repository\n+\n+`ubuntu@server:~$ sudo apt-get update`\n+\n+5 -- Install the BerkeleyDB4 dependency\n+\n+`ubuntu@server:~$ sudo apt-get -y install libdb4.8-dev libdb4.8++-dev`\n+\n+6a -- If you want to run the ravend binary\n+\n+`ubuntu@server:~$ ./ravend -daemon`\n+\n+6b -- If you want to run the GUI raven-qt binary you will need to add an addtional library before starting\n+\n+`ubuntu@server:~$ sudo apt install libqrencode3`\n+\n+`ubuntu@server:~$ ./raven-qt`\n+\n+##CentOS\n+\n+1 -- Add the EPEL repository\n+\n+`root@server:~# yum -y install https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm`\n+\n+2 -- Install the raven dependencies\n+\n+`root@server:~# yum -y install zeromq libevent boost libdb4-cxx miniupnpc`\n+\n+3 -- Start ravend\n+\n+`root@server:~# ./ravend -daemon`\n+\n+##Fedora\n+\n+1 -- Install the raven dependencies\n+\n+`root@server:~# yum -y install zeromq libevent boost libdb4-cxx miniupnpc`\n+\n+2 -- Start ravend\n+\n+`root@server:~# ./ravend -daemon`\n+\n+\n+\n+"
      },
      {
        "sha": "93c235ad9e3eb10b513f4dcbb768295c0a7e34c1",
        "filename": "binaries/pre-release/mac/README.md",
        "status": "added",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ed713797412077e9ca3c61465df59769242a455/binaries/pre-release/mac/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ed713797412077e9ca3c61465df59769242a455/binaries/pre-release/mac/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/pre-release/mac/README.md?ref=0ed713797412077e9ca3c61465df59769242a455",
        "patch": "@@ -0,0 +1,20 @@\n+# RavenBinaries Mac Download Instructions\n+\n+1) Download and copy raven.dmg to desired folder \n+\n+2) Double click the raven.dmg\n+\n+3) Drag Raven Core icon to the Applications \n+\n+4) Launch Raven Core\n+\n+Note: On Raven Core launch is you get this error\n+\n+```\n+Dyld Error Message:\n+  Library not loaded: @loader_path/libboost_system-mt.dylib\n+  Referenced from: /Applications/Raven-Qt.app/Contents/Frameworks/libboost_thread-mt.dylib\n+  Reason: image not found\n+```\n+You will need to copy libboost_system.dynlib to libboost_system-mt.dynlib in the /Applications/Raven-Qt.app/Contents/Frameworks folder  \n+  \n\\ No newline at end of file"
      },
      {
        "sha": "d4d3c50f579571ef9537fc6d19fc7592528cc3ca",
        "filename": "binaries/pre-release/windows/README.md",
        "status": "added",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ed713797412077e9ca3c61465df59769242a455/binaries/pre-release/windows/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ed713797412077e9ca3c61465df59769242a455/binaries/pre-release/windows/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/pre-release/windows/README.md?ref=0ed713797412077e9ca3c61465df59769242a455",
        "patch": "@@ -0,0 +1,5 @@\n+# RavenBinaries Windows Download Instructions\n+\n+1) Download and copy executables to desired folder \n+\n+2) Double click the raven-qt.exe to launch it."
      },
      {
        "sha": "8d1c8b69c3fce7bea45c73efd06983e3c419a92f",
        "filename": "binaries/release/README.md",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ed713797412077e9ca3c61465df59769242a455/binaries/release/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ed713797412077e9ca3c61465df59769242a455/binaries/release/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/README.md?ref=0ed713797412077e9ca3c61465df59769242a455",
        "patch": "@@ -0,0 +1 @@\n+ "
      },
      {
        "sha": "89ed6aaa1620a9ab9f139551e838e447dfcde485",
        "filename": "binaries/release/linux/README.md",
        "status": "added",
        "additions": 63,
        "deletions": 0,
        "changes": 63,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ed713797412077e9ca3c61465df59769242a455/binaries/release/linux/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ed713797412077e9ca3c61465df59769242a455/binaries/release/linux/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/linux/README.md?ref=0ed713797412077e9ca3c61465df59769242a455",
        "patch": "@@ -0,0 +1,63 @@\n+# RavenBinaries Linux Download Instructions\n+\n+Download and copy binaries to desired folder\n+\n+##Ubuntu 16.04 and 17.04\n+\n+1 -- Update your apt cache\n+ \n+`ubuntu@server:~$ sudo apt-get update` \n+\n+2 -- Install the raven dependencies\n+\n+`ubuntu@server:~$ sudo apt-get -y install libevent-dev libboost-all-dev libminiupnpc10 libzmq5 software-properties-common`\n+\n+3 -- You need version 4 of the BerkeleyDB, the easiest way is to use the bitcoin apt packages, add the bitcoin repository \n+\n+`ubuntu@server:~$ sudo add-apt-repository ppa:bitcoin/bitcoin`\n+\n+4 -- Update your apt cache to recognize the new bitcoin repository\n+\n+`ubuntu@server:~$ sudo apt-get update`\n+\n+5 -- Install the BerkeleyDB4 dependency\n+\n+`ubuntu@server:~$ sudo apt-get -y install libdb4.8-dev libdb4.8++-dev`\n+\n+6a -- If you want to run the ravend binary\n+\n+`ubuntu@server:~$ ./ravend -daemon`\n+\n+6b -- If you want to run the GUI raven-qt binary you will need to add an addtional library before starting\n+\n+`ubuntu@server:~$ sudo apt install libqrencode3`\n+\n+`ubuntu@server:~$ ./raven-qt`\n+\n+##CentOS\n+\n+1 -- Add the EPEL repository\n+\n+`root@server:~# yum -y install https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm`\n+\n+2 -- Install the raven dependencies\n+\n+`root@server:~# yum -y install zeromq libevent boost libdb4-cxx miniupnpc`\n+\n+3 -- Start ravend\n+\n+`root@server:~# ./ravend -daemon`\n+\n+##Fedora\n+\n+1 -- Install the raven dependencies\n+\n+`root@server:~# yum -y install zeromq libevent boost libdb4-cxx miniupnpc`\n+\n+2 -- Start ravend\n+\n+`root@server:~# ./ravend -daemon`\n+\n+\n+\n+"
      },
      {
        "sha": "fd670092ae0e7f875155d04c3f6081b6c78ddf12",
        "filename": "binaries/release/linux/centos_7/md5sum",
        "status": "added",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ed713797412077e9ca3c61465df59769242a455/binaries/release/linux/centos_7/md5sum",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ed713797412077e9ca3c61465df59769242a455/binaries/release/linux/centos_7/md5sum",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/linux/centos_7/md5sum?ref=0ed713797412077e9ca3c61465df59769242a455",
        "patch": "@@ -0,0 +1,4 @@\n+2839edb0d256b4c53b366b03af85924e  ravend\n+0dc5021f45c2f6876b8d1c02763dde65  raven-cli\n+33f48b82273494cf3a0d4ffba8a7299e  raven-qt\n+4df7f3b4ad7b8939ac923955c91b8c86  raven-tx"
      },
      {
        "sha": "9975422ae395815e2638b5ab0fd1820bca371016",
        "filename": "binaries/release/linux/centos_7/raven-cli",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ed713797412077e9ca3c61465df59769242a455/binaries/release/linux/centos_7/raven-cli",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ed713797412077e9ca3c61465df59769242a455/binaries/release/linux/centos_7/raven-cli",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/linux/centos_7/raven-cli?ref=0ed713797412077e9ca3c61465df59769242a455"
      },
      {
        "sha": "9a9736ee851993798c775ac901f5566755faa53a",
        "filename": "binaries/release/linux/centos_7/raven-qt",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ed713797412077e9ca3c61465df59769242a455/binaries/release/linux/centos_7/raven-qt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ed713797412077e9ca3c61465df59769242a455/binaries/release/linux/centos_7/raven-qt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/linux/centos_7/raven-qt?ref=0ed713797412077e9ca3c61465df59769242a455"
      },
      {
        "sha": "83ecad4adb3dd9a0ee1901f1e565e974b8d8fad9",
        "filename": "binaries/release/linux/centos_7/raven-tx",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ed713797412077e9ca3c61465df59769242a455/binaries/release/linux/centos_7/raven-tx",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ed713797412077e9ca3c61465df59769242a455/binaries/release/linux/centos_7/raven-tx",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/linux/centos_7/raven-tx?ref=0ed713797412077e9ca3c61465df59769242a455"
      },
      {
        "sha": "5c03cb65e94c97f4c858d4f63532fb48b2d8a9d3",
        "filename": "binaries/release/linux/centos_7/ravend",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ed713797412077e9ca3c61465df59769242a455/binaries/release/linux/centos_7/ravend",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ed713797412077e9ca3c61465df59769242a455/binaries/release/linux/centos_7/ravend",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/linux/centos_7/ravend?ref=0ed713797412077e9ca3c61465df59769242a455"
      },
      {
        "sha": "9c45d2770b375f8bf65b7f1dd3625e0514937732",
        "filename": "binaries/release/linux/centos_7/sha256sum",
        "status": "added",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ed713797412077e9ca3c61465df59769242a455/binaries/release/linux/centos_7/sha256sum",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ed713797412077e9ca3c61465df59769242a455/binaries/release/linux/centos_7/sha256sum",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/linux/centos_7/sha256sum?ref=0ed713797412077e9ca3c61465df59769242a455",
        "patch": "@@ -0,0 +1,4 @@\n+730141eeb5f330c15dd8d7698c370dd8920285abce8b27357c03d764125a8b5d  ravend\n+47e19354f85d57303465c6f8424cfb53d7c1d2b897f735387ba72ed5925fe344  raven-cli\n+d62d6f7474de01c1ef1f62ed61800668c8034e61e1018ddc9179c23b57cc1100  raven-qt\n+8d6996046fb7aa36e81bb4e395f0f8ee37a453e627aca87b6ff7e4ebfee17596  raven-tx"
      },
      {
        "sha": "f110654e8e18822218969bd4cfca76a9947f017b",
        "filename": "binaries/release/linux/fedora/md5sum",
        "status": "added",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ed713797412077e9ca3c61465df59769242a455/binaries/release/linux/fedora/md5sum",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ed713797412077e9ca3c61465df59769242a455/binaries/release/linux/fedora/md5sum",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/linux/fedora/md5sum?ref=0ed713797412077e9ca3c61465df59769242a455",
        "patch": "@@ -0,0 +1,4 @@\n+20dd1ef7835c265737912f0a142ec177  ravend\n+758815245995deca0be92c3bca2efaf8  raven-cli\n+ca0fa79fc871d4365d1d7ce76af19f86  raven-qt\n+4f0f9827a43602c0f3a8f850dfaeca23  raven-tx"
      },
      {
        "sha": "308d51cd49ffc2800f92f8e5bc13f5bdf66acc8e",
        "filename": "binaries/release/linux/fedora/raven-cli",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ed713797412077e9ca3c61465df59769242a455/binaries/release/linux/fedora/raven-cli",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ed713797412077e9ca3c61465df59769242a455/binaries/release/linux/fedora/raven-cli",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/linux/fedora/raven-cli?ref=0ed713797412077e9ca3c61465df59769242a455"
      },
      {
        "sha": "c1a6458f951ea0d6a2b48fcf8894a8b31b5007ce",
        "filename": "binaries/release/linux/fedora/raven-qt",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ed713797412077e9ca3c61465df59769242a455/binaries/release/linux/fedora/raven-qt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ed713797412077e9ca3c61465df59769242a455/binaries/release/linux/fedora/raven-qt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/linux/fedora/raven-qt?ref=0ed713797412077e9ca3c61465df59769242a455"
      },
      {
        "sha": "54447b7c3478fcaad2a2b578e766092ffa57097a",
        "filename": "binaries/release/linux/fedora/raven-tx",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ed713797412077e9ca3c61465df59769242a455/binaries/release/linux/fedora/raven-tx",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ed713797412077e9ca3c61465df59769242a455/binaries/release/linux/fedora/raven-tx",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/linux/fedora/raven-tx?ref=0ed713797412077e9ca3c61465df59769242a455"
      },
      {
        "sha": "c3b2b5b9fa8d93cef92d7839f3918ff7fec73372",
        "filename": "binaries/release/linux/fedora/ravend",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ed713797412077e9ca3c61465df59769242a455/binaries/release/linux/fedora/ravend",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ed713797412077e9ca3c61465df59769242a455/binaries/release/linux/fedora/ravend",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/linux/fedora/ravend?ref=0ed713797412077e9ca3c61465df59769242a455"
      },
      {
        "sha": "8ae64bbd4641493cdd93c101cd54c6e42e3221a5",
        "filename": "binaries/release/linux/fedora/sha256sum",
        "status": "added",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ed713797412077e9ca3c61465df59769242a455/binaries/release/linux/fedora/sha256sum",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ed713797412077e9ca3c61465df59769242a455/binaries/release/linux/fedora/sha256sum",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/linux/fedora/sha256sum?ref=0ed713797412077e9ca3c61465df59769242a455",
        "patch": "@@ -0,0 +1,4 @@\n+fc00396e995d546a7e191f8569704e3d679bedca68e2e81419d1fc413d5353a8  ravend\n+2ced5a7aa9aea83242a0d93ff4de98490e51702eef2382a2893288d2eba97210  raven-cli\n+1d8981c8d9e3d6b1659b786eb004466d6113235e37896fec3096a08ff8dce990  raven-qt\n+fa5c3e09fed5d986c26655ea30880b94d4baf9a665c5db292f2dd7dd4921daea  raven-tx"
      },
      {
        "sha": "f228ac407e9dcdd82611f7c2743cfe57a04addc5",
        "filename": "binaries/release/linux/ubuntu_16.04/md5sum",
        "status": "added",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ed713797412077e9ca3c61465df59769242a455/binaries/release/linux/ubuntu_16.04/md5sum",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ed713797412077e9ca3c61465df59769242a455/binaries/release/linux/ubuntu_16.04/md5sum",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/linux/ubuntu_16.04/md5sum?ref=0ed713797412077e9ca3c61465df59769242a455",
        "patch": "@@ -0,0 +1,4 @@\n+12a0d069e3fdc8c42422877d9ed849b4  ravend\n+5950cea887900a5430fbc9dca341eaed  raven-cli\n+8e2b9c32d62262ebd613dfe985952a48  raven-qt\n+244c6c47993ffdc0eb7e313975dee94c  raven-tx"
      },
      {
        "sha": "64aae94790619d28dd4bf546f82da66ee1c592c1",
        "filename": "binaries/release/linux/ubuntu_16.04/raven-cli",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ed713797412077e9ca3c61465df59769242a455/binaries/release/linux/ubuntu_16.04/raven-cli",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ed713797412077e9ca3c61465df59769242a455/binaries/release/linux/ubuntu_16.04/raven-cli",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/linux/ubuntu_16.04/raven-cli?ref=0ed713797412077e9ca3c61465df59769242a455"
      },
      {
        "sha": "96d9854c14bffb84ed61869868cbc5e401463459",
        "filename": "binaries/release/linux/ubuntu_16.04/raven-qt",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ed713797412077e9ca3c61465df59769242a455/binaries/release/linux/ubuntu_16.04/raven-qt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ed713797412077e9ca3c61465df59769242a455/binaries/release/linux/ubuntu_16.04/raven-qt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/linux/ubuntu_16.04/raven-qt?ref=0ed713797412077e9ca3c61465df59769242a455"
      },
      {
        "sha": "67f04715ce0e3c3af9a057e3bbb2aa9f6321b7ac",
        "filename": "binaries/release/linux/ubuntu_16.04/raven-tx",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ed713797412077e9ca3c61465df59769242a455/binaries/release/linux/ubuntu_16.04/raven-tx",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ed713797412077e9ca3c61465df59769242a455/binaries/release/linux/ubuntu_16.04/raven-tx",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/linux/ubuntu_16.04/raven-tx?ref=0ed713797412077e9ca3c61465df59769242a455"
      },
      {
        "sha": "1f1e98f4edd549836d842fca7ab3d9fd7a728b4f",
        "filename": "binaries/release/linux/ubuntu_16.04/ravend",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ed713797412077e9ca3c61465df59769242a455/binaries/release/linux/ubuntu_16.04/ravend",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ed713797412077e9ca3c61465df59769242a455/binaries/release/linux/ubuntu_16.04/ravend",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/linux/ubuntu_16.04/ravend?ref=0ed713797412077e9ca3c61465df59769242a455"
      },
      {
        "sha": "4d720b8b08fa64a34504e4045947a30055661a0d",
        "filename": "binaries/release/linux/ubuntu_16.04/sha256sum",
        "status": "added",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ed713797412077e9ca3c61465df59769242a455/binaries/release/linux/ubuntu_16.04/sha256sum",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ed713797412077e9ca3c61465df59769242a455/binaries/release/linux/ubuntu_16.04/sha256sum",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/linux/ubuntu_16.04/sha256sum?ref=0ed713797412077e9ca3c61465df59769242a455",
        "patch": "@@ -0,0 +1,4 @@\n+fc2541c15691b310b0f8c564c0a45c788dcc2f0810fa53b22655a993d2041b7f  ravend\n+c4f2264af9ea60cbf31a07204e321fada6ce39061611f36f86d41d9e81043829  raven-cli\n+f95f463e18e45b532f2264200fe5c92094f1a5e0e360bcac628178669e95398a  raven-qt\n+8558689b726d2e54dd453f11dac61bc20f5c20e3ffeaa953f9f07708d2c96735  raven-tx"
      },
      {
        "sha": "d74338e018fc1487f7d206ea1239bd3cdb796870",
        "filename": "binaries/release/linux/ubuntu_17.04/md5sum",
        "status": "added",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ed713797412077e9ca3c61465df59769242a455/binaries/release/linux/ubuntu_17.04/md5sum",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ed713797412077e9ca3c61465df59769242a455/binaries/release/linux/ubuntu_17.04/md5sum",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/linux/ubuntu_17.04/md5sum?ref=0ed713797412077e9ca3c61465df59769242a455",
        "patch": "@@ -0,0 +1,4 @@\n+18792ada92c082459dddfec46819f87b  ravend\n+ba5a5f84da4a7fa9a3d5094530221cdf  raven-cli\n+6e5d27bfbd2f83808c8b3af00736a7d3  raven-qt\n+aaac78241c83455f915d74e4e05001fd  raven-tx"
      },
      {
        "sha": "1099c3be3047aec4d30777b20498a732ca547eba",
        "filename": "binaries/release/linux/ubuntu_17.04/raven-cli",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ed713797412077e9ca3c61465df59769242a455/binaries/release/linux/ubuntu_17.04/raven-cli",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ed713797412077e9ca3c61465df59769242a455/binaries/release/linux/ubuntu_17.04/raven-cli",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/linux/ubuntu_17.04/raven-cli?ref=0ed713797412077e9ca3c61465df59769242a455"
      },
      {
        "sha": "c024e27ad7db6dcb21e9e050b7bf622035844f55",
        "filename": "binaries/release/linux/ubuntu_17.04/raven-qt",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ed713797412077e9ca3c61465df59769242a455/binaries/release/linux/ubuntu_17.04/raven-qt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ed713797412077e9ca3c61465df59769242a455/binaries/release/linux/ubuntu_17.04/raven-qt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/linux/ubuntu_17.04/raven-qt?ref=0ed713797412077e9ca3c61465df59769242a455"
      },
      {
        "sha": "9bc625c0de86502de4256a5f4ece060ef1beef36",
        "filename": "binaries/release/linux/ubuntu_17.04/raven-tx",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ed713797412077e9ca3c61465df59769242a455/binaries/release/linux/ubuntu_17.04/raven-tx",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ed713797412077e9ca3c61465df59769242a455/binaries/release/linux/ubuntu_17.04/raven-tx",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/linux/ubuntu_17.04/raven-tx?ref=0ed713797412077e9ca3c61465df59769242a455"
      },
      {
        "sha": "be3bb60be070106f96243518e1dcdebb507ce863",
        "filename": "binaries/release/linux/ubuntu_17.04/ravend",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ed713797412077e9ca3c61465df59769242a455/binaries/release/linux/ubuntu_17.04/ravend",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ed713797412077e9ca3c61465df59769242a455/binaries/release/linux/ubuntu_17.04/ravend",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/linux/ubuntu_17.04/ravend?ref=0ed713797412077e9ca3c61465df59769242a455"
      },
      {
        "sha": "3fd09ab233093eb262e692d284a7b91a99afac56",
        "filename": "binaries/release/linux/ubuntu_17.04/sha256sum",
        "status": "added",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ed713797412077e9ca3c61465df59769242a455/binaries/release/linux/ubuntu_17.04/sha256sum",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ed713797412077e9ca3c61465df59769242a455/binaries/release/linux/ubuntu_17.04/sha256sum",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/linux/ubuntu_17.04/sha256sum?ref=0ed713797412077e9ca3c61465df59769242a455",
        "patch": "@@ -0,0 +1,4 @@\n+d169c1e76d8683856faef54ad1983af42d0d8355d02c53540a9b76022bb08e28  ravend\n+41f41c8bc3b9bf424ebe5bf1b85dba1ad61967784f66c8c1779759230addaeea  raven-cli\n+af53797a827b0e85d99892a69f6c03a1dbd7dfb8e88f0aba4bd39f1cbd787d71  raven-qt\n+39a993698b3eb0d4588d2c6adb2c772cccd092ef6b0e98d7b1681da91a73df75  raven-tx"
      },
      {
        "sha": "93c235ad9e3eb10b513f4dcbb768295c0a7e34c1",
        "filename": "binaries/release/mac/README.md",
        "status": "added",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ed713797412077e9ca3c61465df59769242a455/binaries/release/mac/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ed713797412077e9ca3c61465df59769242a455/binaries/release/mac/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/mac/README.md?ref=0ed713797412077e9ca3c61465df59769242a455",
        "patch": "@@ -0,0 +1,20 @@\n+# RavenBinaries Mac Download Instructions\n+\n+1) Download and copy raven.dmg to desired folder \n+\n+2) Double click the raven.dmg\n+\n+3) Drag Raven Core icon to the Applications \n+\n+4) Launch Raven Core\n+\n+Note: On Raven Core launch is you get this error\n+\n+```\n+Dyld Error Message:\n+  Library not loaded: @loader_path/libboost_system-mt.dylib\n+  Referenced from: /Applications/Raven-Qt.app/Contents/Frameworks/libboost_thread-mt.dylib\n+  Reason: image not found\n+```\n+You will need to copy libboost_system.dynlib to libboost_system-mt.dynlib in the /Applications/Raven-Qt.app/Contents/Frameworks folder  \n+  \n\\ No newline at end of file"
      },
      {
        "sha": "d3164660110ebddb3e932e5ff40972cb510af46d",
        "filename": "binaries/release/mac/md5sum",
        "status": "added",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ed713797412077e9ca3c61465df59769242a455/binaries/release/mac/md5sum",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ed713797412077e9ca3c61465df59769242a455/binaries/release/mac/md5sum",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/mac/md5sum?ref=0ed713797412077e9ca3c61465df59769242a455",
        "patch": "@@ -0,0 +1,4 @@\n+MD5 (raven-cli) = 0911d9cbf135c38aaa3c316d4fd7c38c\n+MD5 (raven-qt) = 8659dc8acab9ca3521f41930ecfd8d2e\n+MD5 (raven-tx) = 585ba9f3e2568c0ca9bd9b1e83b38180\n+MD5 (ravend) = a9a3ef7745b8a70bf365614455d18faf"
      },
      {
        "sha": "41ffc298fce5d042a17aa7749587d82b523ecc93",
        "filename": "binaries/release/mac/raven-cli",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ed713797412077e9ca3c61465df59769242a455/binaries/release/mac/raven-cli",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ed713797412077e9ca3c61465df59769242a455/binaries/release/mac/raven-cli",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/mac/raven-cli?ref=0ed713797412077e9ca3c61465df59769242a455"
      },
      {
        "sha": "376c8a22953918082b82b2013bb0db0c26182158",
        "filename": "binaries/release/mac/raven-qt",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ed713797412077e9ca3c61465df59769242a455/binaries/release/mac/raven-qt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ed713797412077e9ca3c61465df59769242a455/binaries/release/mac/raven-qt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/mac/raven-qt?ref=0ed713797412077e9ca3c61465df59769242a455"
      },
      {
        "sha": "d381f536195accd61f90b8e2615aff7b254f282f",
        "filename": "binaries/release/mac/raven-tx",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ed713797412077e9ca3c61465df59769242a455/binaries/release/mac/raven-tx",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ed713797412077e9ca3c61465df59769242a455/binaries/release/mac/raven-tx",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/mac/raven-tx?ref=0ed713797412077e9ca3c61465df59769242a455"
      },
      {
        "sha": "eff94674124a29310dd99b759a0d1fa8f3bb3bce",
        "filename": "binaries/release/mac/ravend",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ed713797412077e9ca3c61465df59769242a455/binaries/release/mac/ravend",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ed713797412077e9ca3c61465df59769242a455/binaries/release/mac/ravend",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/mac/ravend?ref=0ed713797412077e9ca3c61465df59769242a455"
      },
      {
        "sha": "d9676587fdff78a86f20f9d3ff0d81f9ffe35d33",
        "filename": "binaries/release/mac/sha256sum",
        "status": "added",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ed713797412077e9ca3c61465df59769242a455/binaries/release/mac/sha256sum",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ed713797412077e9ca3c61465df59769242a455/binaries/release/mac/sha256sum",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/mac/sha256sum?ref=0ed713797412077e9ca3c61465df59769242a455",
        "patch": "@@ -0,0 +1,4 @@\n+8a1fe6c22d11a242f576d15f6611dbf798c02b4984ab93177eeedbb3af8f947f  raven-cli\n+978cefcff7c8a3672d4ed01b0b5e798e5c740a3a0a8f7aa49198e9e4dfc80f93  raven-qt\n+61c9814e8d926631ff08f01ab2ee833f349e6176b76aad332558e0585a62e483  raven-tx\n+c3b3a0ece74d6b4076d8ac5c321797f0077d9a4ab75e36b11936923dc4509f51  ravend"
      },
      {
        "sha": "d4d3c50f579571ef9537fc6d19fc7592528cc3ca",
        "filename": "binaries/release/windows/README.md",
        "status": "added",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ed713797412077e9ca3c61465df59769242a455/binaries/release/windows/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ed713797412077e9ca3c61465df59769242a455/binaries/release/windows/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/windows/README.md?ref=0ed713797412077e9ca3c61465df59769242a455",
        "patch": "@@ -0,0 +1,5 @@\n+# RavenBinaries Windows Download Instructions\n+\n+1) Download and copy executables to desired folder \n+\n+2) Double click the raven-qt.exe to launch it."
      },
      {
        "sha": "48447e803858549963c14cca7f088361074a9692",
        "filename": "binaries/release/windows/md5sum",
        "status": "added",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ed713797412077e9ca3c61465df59769242a455/binaries/release/windows/md5sum",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ed713797412077e9ca3c61465df59769242a455/binaries/release/windows/md5sum",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/windows/md5sum?ref=0ed713797412077e9ca3c61465df59769242a455",
        "patch": "@@ -0,0 +1,4 @@\n+447b1138ef910a27a73946d081f5f0b3  ravend.exe\n+18e2618f6a91ae7409944f691e679b8d  raven-cli.exe\n+e5e68698896ba564240fadd90d00d502  raven-tx.exe\n+b50c4551356eec3acc4440f7d8dee5ba  raven-qt.exe"
      },
      {
        "sha": "2d266679d26adcf02870aace1e085fb48920f8a2",
        "filename": "binaries/release/windows/sha256sum",
        "status": "added",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ed713797412077e9ca3c61465df59769242a455/binaries/release/windows/sha256sum",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ed713797412077e9ca3c61465df59769242a455/binaries/release/windows/sha256sum",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/windows/sha256sum?ref=0ed713797412077e9ca3c61465df59769242a455",
        "patch": "@@ -0,0 +1,4 @@\n+b9c504236948b04b5f4b0a4013cfde27b77e999df4ef6c9d680e25eab6a05912  ravend.exe\n+9c209459be06c87ec0fc84a99d1a8ad79afaa5b5be32c9f260d11a1e4bc68b4d  raven-cli.exe\n+2a19176a65eed812acea111c0409087ff01be8951c6bdde883c0686b0e3ff038  raven-tx.exe\n+1bca021e8bd5fd5b5635f154b641988ddd8df52af9c8f9bfe1b0a893009b03d3  raven-qt.exe"
      }
    ]
  },
  {
    "sha": "6f1825f50d0746eb5e7f54652feb5915f3b005f9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2ZjE4MjVmNTBkMDc0NmViNWU3ZjU0NjUyZmViNTkxNWYzYjAwNWY5",
    "commit": {
      "author": {
        "name": "Cade Call",
        "email": "cade.call@mediciventures.com",
        "date": "2018-01-03T21:45:38Z"
      },
      "committer": {
        "name": "Cade Call",
        "email": "cade.call@mediciventures.com",
        "date": "2018-01-03T21:45:38Z"
      },
      "message": "Removed ignore of executables",
      "tree": {
        "sha": "eefe5f881273d720308eed7069a0f0badf87fbc2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/eefe5f881273d720308eed7069a0f0badf87fbc2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6f1825f50d0746eb5e7f54652feb5915f3b005f9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6f1825f50d0746eb5e7f54652feb5915f3b005f9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6f1825f50d0746eb5e7f54652feb5915f3b005f9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6f1825f50d0746eb5e7f54652feb5915f3b005f9/comments",
    "author": {
      "login": "cfrogjump",
      "id": 636715,
      "node_id": "MDQ6VXNlcjYzNjcxNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/636715?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cfrogjump",
      "html_url": "https://github.com/cfrogjump",
      "followers_url": "https://api.github.com/users/cfrogjump/followers",
      "following_url": "https://api.github.com/users/cfrogjump/following{/other_user}",
      "gists_url": "https://api.github.com/users/cfrogjump/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cfrogjump/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cfrogjump/subscriptions",
      "organizations_url": "https://api.github.com/users/cfrogjump/orgs",
      "repos_url": "https://api.github.com/users/cfrogjump/repos",
      "events_url": "https://api.github.com/users/cfrogjump/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cfrogjump/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "cfrogjump",
      "id": 636715,
      "node_id": "MDQ6VXNlcjYzNjcxNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/636715?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cfrogjump",
      "html_url": "https://github.com/cfrogjump",
      "followers_url": "https://api.github.com/users/cfrogjump/followers",
      "following_url": "https://api.github.com/users/cfrogjump/following{/other_user}",
      "gists_url": "https://api.github.com/users/cfrogjump/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cfrogjump/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cfrogjump/subscriptions",
      "organizations_url": "https://api.github.com/users/cfrogjump/orgs",
      "repos_url": "https://api.github.com/users/cfrogjump/repos",
      "events_url": "https://api.github.com/users/cfrogjump/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cfrogjump/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0ed713797412077e9ca3c61465df59769242a455",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0ed713797412077e9ca3c61465df59769242a455",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0ed713797412077e9ca3c61465df59769242a455"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 0,
      "deletions": 2
    },
    "files": [
      {
        "sha": "c80dab7b02491d7b421288f1763d22828b25db96",
        "filename": ".gitignore",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6f1825f50d0746eb5e7f54652feb5915f3b005f9/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6f1825f50d0746eb5e7f54652feb5915f3b005f9/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.gitignore?ref=6f1825f50d0746eb5e7f54652feb5915f3b005f9",
        "patch": "@@ -1,6 +1,5 @@\n *.tar.gz\n \n-*.exe\n src/bitcoin\n src/bitcoind\n src/bitcoin-cli\n@@ -62,7 +61,6 @@ src/qt/test/moc*.cpp\n \n *.log\n *.trs\n-*.dmg\n \n *.json.h\n *.raw.h"
      },
      {
        "sha": "7df12f3a9e2afe5d725d45b80e263a2a347e5369",
        "filename": "binaries/release/mac/Raven-Qt.dmg",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6f1825f50d0746eb5e7f54652feb5915f3b005f9/binaries/release/mac/Raven-Qt.dmg",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6f1825f50d0746eb5e7f54652feb5915f3b005f9/binaries/release/mac/Raven-Qt.dmg",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/mac/Raven-Qt.dmg?ref=6f1825f50d0746eb5e7f54652feb5915f3b005f9"
      },
      {
        "sha": "07fd5b6704f76ac6601a2e8a17211445da0306e0",
        "filename": "binaries/release/windows/raven-cli.exe",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6f1825f50d0746eb5e7f54652feb5915f3b005f9/binaries/release/windows/raven-cli.exe",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6f1825f50d0746eb5e7f54652feb5915f3b005f9/binaries/release/windows/raven-cli.exe",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/windows/raven-cli.exe?ref=6f1825f50d0746eb5e7f54652feb5915f3b005f9"
      },
      {
        "sha": "9bb3584ee7944b720cb8c985b4ed019b835a3201",
        "filename": "binaries/release/windows/raven-qt.exe",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6f1825f50d0746eb5e7f54652feb5915f3b005f9/binaries/release/windows/raven-qt.exe",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6f1825f50d0746eb5e7f54652feb5915f3b005f9/binaries/release/windows/raven-qt.exe",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/windows/raven-qt.exe?ref=6f1825f50d0746eb5e7f54652feb5915f3b005f9"
      },
      {
        "sha": "b8ad9c796b131c3c202a9211233a25d98d500cae",
        "filename": "binaries/release/windows/raven-tx.exe",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6f1825f50d0746eb5e7f54652feb5915f3b005f9/binaries/release/windows/raven-tx.exe",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6f1825f50d0746eb5e7f54652feb5915f3b005f9/binaries/release/windows/raven-tx.exe",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/windows/raven-tx.exe?ref=6f1825f50d0746eb5e7f54652feb5915f3b005f9"
      },
      {
        "sha": "c2d589c5e9eb255b5db98014a7c8060b189b527e",
        "filename": "binaries/release/windows/ravend.exe",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6f1825f50d0746eb5e7f54652feb5915f3b005f9/binaries/release/windows/ravend.exe",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6f1825f50d0746eb5e7f54652feb5915f3b005f9/binaries/release/windows/ravend.exe",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/windows/ravend.exe?ref=6f1825f50d0746eb5e7f54652feb5915f3b005f9"
      }
    ]
  },
  {
    "sha": "ddeacfcff563b602b8833287a34dfbee340e5bec",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkZGVhY2ZjZmY1NjNiNjAyYjg4MzMyODdhMzRkZmJlZTM0MGU1YmVj",
    "commit": {
      "author": {
        "name": "Cade Call",
        "email": "cade.call@mediciventures.com",
        "date": "2018-01-03T23:57:21Z"
      },
      "committer": {
        "name": "Cade Call",
        "email": "cade.call@mediciventures.com",
        "date": "2018-01-03T23:57:21Z"
      },
      "message": "fix for pre-release message on cli",
      "tree": {
        "sha": "eac0d3bec0cdd2ea86a3f48bdbe6ddfd973f8069",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/eac0d3bec0cdd2ea86a3f48bdbe6ddfd973f8069"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ddeacfcff563b602b8833287a34dfbee340e5bec",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ddeacfcff563b602b8833287a34dfbee340e5bec",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ddeacfcff563b602b8833287a34dfbee340e5bec",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ddeacfcff563b602b8833287a34dfbee340e5bec/comments",
    "author": {
      "login": "cfrogjump",
      "id": 636715,
      "node_id": "MDQ6VXNlcjYzNjcxNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/636715?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cfrogjump",
      "html_url": "https://github.com/cfrogjump",
      "followers_url": "https://api.github.com/users/cfrogjump/followers",
      "following_url": "https://api.github.com/users/cfrogjump/following{/other_user}",
      "gists_url": "https://api.github.com/users/cfrogjump/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cfrogjump/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cfrogjump/subscriptions",
      "organizations_url": "https://api.github.com/users/cfrogjump/orgs",
      "repos_url": "https://api.github.com/users/cfrogjump/repos",
      "events_url": "https://api.github.com/users/cfrogjump/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cfrogjump/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "cfrogjump",
      "id": 636715,
      "node_id": "MDQ6VXNlcjYzNjcxNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/636715?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cfrogjump",
      "html_url": "https://github.com/cfrogjump",
      "followers_url": "https://api.github.com/users/cfrogjump/followers",
      "following_url": "https://api.github.com/users/cfrogjump/following{/other_user}",
      "gists_url": "https://api.github.com/users/cfrogjump/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cfrogjump/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cfrogjump/subscriptions",
      "organizations_url": "https://api.github.com/users/cfrogjump/orgs",
      "repos_url": "https://api.github.com/users/cfrogjump/repos",
      "events_url": "https://api.github.com/users/cfrogjump/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cfrogjump/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6f1825f50d0746eb5e7f54652feb5915f3b005f9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6f1825f50d0746eb5e7f54652feb5915f3b005f9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6f1825f50d0746eb5e7f54652feb5915f3b005f9"
      }
    ],
    "stats": {
      "total": 106,
      "additions": 54,
      "deletions": 52
    },
    "files": [
      {
        "sha": "ff594e3ffe3db529fb13464a879242bd232f555a",
        "filename": "binaries/pre-release/mac/README.md",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/binaries/pre-release/mac/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/binaries/pre-release/mac/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/pre-release/mac/README.md?ref=ddeacfcff563b602b8833287a34dfbee340e5bec",
        "patch": "@@ -8,13 +8,13 @@\n \n 4) Launch Raven Core\n \n-Note: On Raven Core launch is you get this error\n+Note: On Raven Core launch if you get this error\n \n ```\n Dyld Error Message:\n   Library not loaded: @loader_path/libboost_system-mt.dylib\n   Referenced from: /Applications/Raven-Qt.app/Contents/Frameworks/libboost_thread-mt.dylib\n   Reason: image not found\n ```\n-You will need to copy libboost_system.dynlib to libboost_system-mt.dynlib in the /Applications/Raven-Qt.app/Contents/Frameworks folder  \n+You will need to copy libboost_system.dylib to libboost_system-mt.dylib in the /Applications/Raven-Qt.app/Contents/Frameworks folder  \n   \n\\ No newline at end of file"
      },
      {
        "sha": "0930b1242fae97c59afb87ff5cd2fb31cbd6aa49",
        "filename": "binaries/release/linux/centos_7/md5sum",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/binaries/release/linux/centos_7/md5sum",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/binaries/release/linux/centos_7/md5sum",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/linux/centos_7/md5sum?ref=ddeacfcff563b602b8833287a34dfbee340e5bec",
        "patch": "@@ -1,4 +1,4 @@\n-2839edb0d256b4c53b366b03af85924e  ravend\n-0dc5021f45c2f6876b8d1c02763dde65  raven-cli\n-33f48b82273494cf3a0d4ffba8a7299e  raven-qt\n-4df7f3b4ad7b8939ac923955c91b8c86  raven-tx\n+a8bacbd8e49a02c16dedd7b9012185da  ravend\n+3e71672828f6edb0ce95a4e85be39585  raven-cli\n+667cbced3803f19dda5bda317a2c25dd  raven-qt\n+b7436decb23eca0c60054eefe2cead4d  raven-tx"
      },
      {
        "sha": "47d82ce2ca93da46d4d06cc7074b37e6036e84b9",
        "filename": "binaries/release/linux/centos_7/raven-cli",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/binaries/release/linux/centos_7/raven-cli",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/binaries/release/linux/centos_7/raven-cli",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/linux/centos_7/raven-cli?ref=ddeacfcff563b602b8833287a34dfbee340e5bec"
      },
      {
        "sha": "a719e7bdb19a659d7d09164f36c178dbb3b040a9",
        "filename": "binaries/release/linux/centos_7/raven-qt",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/binaries/release/linux/centos_7/raven-qt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/binaries/release/linux/centos_7/raven-qt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/linux/centos_7/raven-qt?ref=ddeacfcff563b602b8833287a34dfbee340e5bec"
      },
      {
        "sha": "9c058f40bc52165b20dd6b2a4d86ab73ee083878",
        "filename": "binaries/release/linux/centos_7/raven-tx",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/binaries/release/linux/centos_7/raven-tx",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/binaries/release/linux/centos_7/raven-tx",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/linux/centos_7/raven-tx?ref=ddeacfcff563b602b8833287a34dfbee340e5bec"
      },
      {
        "sha": "d97ad97bcee4585260687ed6ee04456b29dc91a8",
        "filename": "binaries/release/linux/centos_7/ravend",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/binaries/release/linux/centos_7/ravend",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/binaries/release/linux/centos_7/ravend",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/linux/centos_7/ravend?ref=ddeacfcff563b602b8833287a34dfbee340e5bec"
      },
      {
        "sha": "8cb1ccfa2e54f85be585b5038a5a5ddcbed4debd",
        "filename": "binaries/release/linux/centos_7/sha256sum",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/binaries/release/linux/centos_7/sha256sum",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/binaries/release/linux/centos_7/sha256sum",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/linux/centos_7/sha256sum?ref=ddeacfcff563b602b8833287a34dfbee340e5bec",
        "patch": "@@ -1,4 +1,4 @@\n-730141eeb5f330c15dd8d7698c370dd8920285abce8b27357c03d764125a8b5d  ravend\n-47e19354f85d57303465c6f8424cfb53d7c1d2b897f735387ba72ed5925fe344  raven-cli\n-d62d6f7474de01c1ef1f62ed61800668c8034e61e1018ddc9179c23b57cc1100  raven-qt\n-8d6996046fb7aa36e81bb4e395f0f8ee37a453e627aca87b6ff7e4ebfee17596  raven-tx\n+d71850ae50134cdc1142a3b1686ba15350c8f950381fc6ae071cf7780d7069e3  ravend\n+6674db51aba06f3e5d617dad4569e4ab15fc41fe3fa7715d4df03ffa49b63be2  raven-cli\n+c9f5c19925b59ad0ac5b10ad8309bf6b5643b54be2a5bd5518c576b00e87e4cb  raven-qt\n+656e0f31e81ffdb70f90c8ac182e79f33cef7bb07872d20fedd99b4f2db12353  raven-tx"
      },
      {
        "sha": "3a8730f530738e8c21684692e466b2ea7153bfa8",
        "filename": "binaries/release/linux/fedora/md5sum",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/binaries/release/linux/fedora/md5sum",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/binaries/release/linux/fedora/md5sum",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/linux/fedora/md5sum?ref=ddeacfcff563b602b8833287a34dfbee340e5bec",
        "patch": "@@ -1,4 +1,4 @@\n-20dd1ef7835c265737912f0a142ec177  ravend\n-758815245995deca0be92c3bca2efaf8  raven-cli\n-ca0fa79fc871d4365d1d7ce76af19f86  raven-qt\n-4f0f9827a43602c0f3a8f850dfaeca23  raven-tx\n+346a5bb14e4f7c9cd4ec02911c666192  ravend\n+4e5a7d6d8c802f50700498f1c4b82ccb  raven-cli\n+768ddb729bac2ec548166ad2985590f9  raven-qt\n+94a97a9e8e452d0b40301252faadd575  raven-tx"
      },
      {
        "sha": "adf8bf1ecee728cf5a3ddc808dce3349ccc91f44",
        "filename": "binaries/release/linux/fedora/raven-cli",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/binaries/release/linux/fedora/raven-cli",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/binaries/release/linux/fedora/raven-cli",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/linux/fedora/raven-cli?ref=ddeacfcff563b602b8833287a34dfbee340e5bec"
      },
      {
        "sha": "05af95b44caa4052d956dde161242384cde00714",
        "filename": "binaries/release/linux/fedora/raven-qt",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/binaries/release/linux/fedora/raven-qt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/binaries/release/linux/fedora/raven-qt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/linux/fedora/raven-qt?ref=ddeacfcff563b602b8833287a34dfbee340e5bec"
      },
      {
        "sha": "420234b454cfdeab0ce4885386795cb8f6a1da87",
        "filename": "binaries/release/linux/fedora/raven-tx",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/binaries/release/linux/fedora/raven-tx",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/binaries/release/linux/fedora/raven-tx",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/linux/fedora/raven-tx?ref=ddeacfcff563b602b8833287a34dfbee340e5bec"
      },
      {
        "sha": "3a92d2bf8079911def604e5fc3bfc193cecfcb19",
        "filename": "binaries/release/linux/fedora/ravend",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/binaries/release/linux/fedora/ravend",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/binaries/release/linux/fedora/ravend",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/linux/fedora/ravend?ref=ddeacfcff563b602b8833287a34dfbee340e5bec"
      },
      {
        "sha": "bbc58d2b4eee50a4dbd6aaec4ff35c6b6d8d9c5b",
        "filename": "binaries/release/linux/fedora/sha256sum",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/binaries/release/linux/fedora/sha256sum",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/binaries/release/linux/fedora/sha256sum",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/linux/fedora/sha256sum?ref=ddeacfcff563b602b8833287a34dfbee340e5bec",
        "patch": "@@ -1,4 +1,4 @@\n-fc00396e995d546a7e191f8569704e3d679bedca68e2e81419d1fc413d5353a8  ravend\n-2ced5a7aa9aea83242a0d93ff4de98490e51702eef2382a2893288d2eba97210  raven-cli\n-1d8981c8d9e3d6b1659b786eb004466d6113235e37896fec3096a08ff8dce990  raven-qt\n-fa5c3e09fed5d986c26655ea30880b94d4baf9a665c5db292f2dd7dd4921daea  raven-tx\n+e6643a2f3ec101008298e07a0989865d9bbc8f15a188116c087b75a1b935fe45  ravend\n+eab8bb8f5987a5224d78b94140749a84997e32d4410bd5023be882af37ba9950  raven-cli\n+eea9283bbd3e65b5c9f8f0d1b20f878678218261601cca79e520ce569f44ae51  raven-qt\n+6e4649d98f53b004b890b11481fe35edaf9700142896bb54abcf1be07d7a4d11  raven-tx"
      },
      {
        "sha": "eb8996efdc068ba3977de20f632709a7eacddd6c",
        "filename": "binaries/release/linux/ubuntu_16.04/md5sum",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/binaries/release/linux/ubuntu_16.04/md5sum",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/binaries/release/linux/ubuntu_16.04/md5sum",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/linux/ubuntu_16.04/md5sum?ref=ddeacfcff563b602b8833287a34dfbee340e5bec",
        "patch": "@@ -1,4 +1,4 @@\n-12a0d069e3fdc8c42422877d9ed849b4  ravend\n-5950cea887900a5430fbc9dca341eaed  raven-cli\n-8e2b9c32d62262ebd613dfe985952a48  raven-qt\n-244c6c47993ffdc0eb7e313975dee94c  raven-tx\n+33daea4636a74b766e8b3ebf5324bb55  ravend\n+985ea503f75e3019f9f1885014642e86  raven-cli\n+32b35dcb8204c52160ed1ef2fe9c3998  raven-qt\n+c42f6af39a92765c91c233f5ba263b68  raven-tx"
      },
      {
        "sha": "7b6695d4674cfac0fe294e267a9a133161d7651d",
        "filename": "binaries/release/linux/ubuntu_16.04/raven-cli",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/binaries/release/linux/ubuntu_16.04/raven-cli",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/binaries/release/linux/ubuntu_16.04/raven-cli",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/linux/ubuntu_16.04/raven-cli?ref=ddeacfcff563b602b8833287a34dfbee340e5bec"
      },
      {
        "sha": "21834a9defcd8fc81a11d373a0a80f7c8fc608c4",
        "filename": "binaries/release/linux/ubuntu_16.04/raven-qt",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/binaries/release/linux/ubuntu_16.04/raven-qt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/binaries/release/linux/ubuntu_16.04/raven-qt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/linux/ubuntu_16.04/raven-qt?ref=ddeacfcff563b602b8833287a34dfbee340e5bec"
      },
      {
        "sha": "a36424760bb3490e4e04ce36f8d6b321ca36a42f",
        "filename": "binaries/release/linux/ubuntu_16.04/raven-tx",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/binaries/release/linux/ubuntu_16.04/raven-tx",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/binaries/release/linux/ubuntu_16.04/raven-tx",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/linux/ubuntu_16.04/raven-tx?ref=ddeacfcff563b602b8833287a34dfbee340e5bec"
      },
      {
        "sha": "386e06654606fa90959e6c9edc8cb800733e3946",
        "filename": "binaries/release/linux/ubuntu_16.04/ravend",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/binaries/release/linux/ubuntu_16.04/ravend",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/binaries/release/linux/ubuntu_16.04/ravend",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/linux/ubuntu_16.04/ravend?ref=ddeacfcff563b602b8833287a34dfbee340e5bec"
      },
      {
        "sha": "c13d5ae794ada5531b5568286a82cfeed5f071d9",
        "filename": "binaries/release/linux/ubuntu_16.04/sha256sum",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/binaries/release/linux/ubuntu_16.04/sha256sum",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/binaries/release/linux/ubuntu_16.04/sha256sum",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/linux/ubuntu_16.04/sha256sum?ref=ddeacfcff563b602b8833287a34dfbee340e5bec",
        "patch": "@@ -1,4 +1,4 @@\n-fc2541c15691b310b0f8c564c0a45c788dcc2f0810fa53b22655a993d2041b7f  ravend\n-c4f2264af9ea60cbf31a07204e321fada6ce39061611f36f86d41d9e81043829  raven-cli\n-f95f463e18e45b532f2264200fe5c92094f1a5e0e360bcac628178669e95398a  raven-qt\n-8558689b726d2e54dd453f11dac61bc20f5c20e3ffeaa953f9f07708d2c96735  raven-tx\n+b0c1a7fb52fc7f8c314613a7cb8b1ad1da122bab2a3cc226b3f5c6663abb07ef  ravend\n+88ee29735fcb464a7b25f37c132aab4027b42a6d448e72b09dbaaace379d26c7  raven-cli\n+c6ae3a69e636f73e7383eaf58781d00090b3666cded2d201767da503e8ce3b99  raven-qt\n+851cd8eb955a32bda8aeaa793f1064ec1dd243cadc8e037626dcc7e93c3690b5  raven-tx"
      },
      {
        "sha": "59edf142be88956ab0478485a08d76cf95e1279d",
        "filename": "binaries/release/linux/ubuntu_17.04/md5sum",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/binaries/release/linux/ubuntu_17.04/md5sum",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/binaries/release/linux/ubuntu_17.04/md5sum",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/linux/ubuntu_17.04/md5sum?ref=ddeacfcff563b602b8833287a34dfbee340e5bec",
        "patch": "@@ -1,4 +1,4 @@\n-18792ada92c082459dddfec46819f87b  ravend\n-ba5a5f84da4a7fa9a3d5094530221cdf  raven-cli\n-6e5d27bfbd2f83808c8b3af00736a7d3  raven-qt\n-aaac78241c83455f915d74e4e05001fd  raven-tx\n+4878751e8241d28530a2fbcbc1c4dd3a  ravend\n+1468cbde61a2d2be870636a9480322da  raven-cli\n+f030cebf74606f961c6ddca5440810a2  raven-qt\n+f658b1a34d66d5c6756b8dffa040cdbf  raven-tx"
      },
      {
        "sha": "1a70030792ad829988db38be0eea6bbbe86908a2",
        "filename": "binaries/release/linux/ubuntu_17.04/raven-cli",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/binaries/release/linux/ubuntu_17.04/raven-cli",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/binaries/release/linux/ubuntu_17.04/raven-cli",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/linux/ubuntu_17.04/raven-cli?ref=ddeacfcff563b602b8833287a34dfbee340e5bec"
      },
      {
        "sha": "9f46227181d5116a71f41b494e9715412f28af5e",
        "filename": "binaries/release/linux/ubuntu_17.04/raven-qt",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/binaries/release/linux/ubuntu_17.04/raven-qt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/binaries/release/linux/ubuntu_17.04/raven-qt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/linux/ubuntu_17.04/raven-qt?ref=ddeacfcff563b602b8833287a34dfbee340e5bec"
      },
      {
        "sha": "3f9a661315d0d75093a87ff17a38285e820e9e41",
        "filename": "binaries/release/linux/ubuntu_17.04/raven-tx",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/binaries/release/linux/ubuntu_17.04/raven-tx",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/binaries/release/linux/ubuntu_17.04/raven-tx",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/linux/ubuntu_17.04/raven-tx?ref=ddeacfcff563b602b8833287a34dfbee340e5bec"
      },
      {
        "sha": "5f1c08d3c8834224f545f800e9bcea4a111e6ac3",
        "filename": "binaries/release/linux/ubuntu_17.04/ravend",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/binaries/release/linux/ubuntu_17.04/ravend",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/binaries/release/linux/ubuntu_17.04/ravend",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/linux/ubuntu_17.04/ravend?ref=ddeacfcff563b602b8833287a34dfbee340e5bec"
      },
      {
        "sha": "93629d38dc777df05d114387e626b67a438cb97b",
        "filename": "binaries/release/linux/ubuntu_17.04/sha256sum",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/binaries/release/linux/ubuntu_17.04/sha256sum",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/binaries/release/linux/ubuntu_17.04/sha256sum",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/linux/ubuntu_17.04/sha256sum?ref=ddeacfcff563b602b8833287a34dfbee340e5bec",
        "patch": "@@ -1,4 +1,4 @@\n-d169c1e76d8683856faef54ad1983af42d0d8355d02c53540a9b76022bb08e28  ravend\n-41f41c8bc3b9bf424ebe5bf1b85dba1ad61967784f66c8c1779759230addaeea  raven-cli\n-af53797a827b0e85d99892a69f6c03a1dbd7dfb8e88f0aba4bd39f1cbd787d71  raven-qt\n-39a993698b3eb0d4588d2c6adb2c772cccd092ef6b0e98d7b1681da91a73df75  raven-tx\n+03299fa21f82aae9584c79875c0eb921dd18e46b91c78d360df660f34566a564  ravend\n+dcddac4d0f5af891b5f939f24960cd602c01cc9ddacf18a07b54fd3c24b23da2  raven-cli\n+ecea7b8dc13ceddf854bc57dc9679bd30ff5857f4965dea1be11ebc104859e74  raven-qt\n+0b1273a0950fa772aae3ebc70161eef52b1162f839ee33164c91fa9118ccb095  raven-tx"
      },
      {
        "sha": "ff594e3ffe3db529fb13464a879242bd232f555a",
        "filename": "binaries/release/mac/README.md",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/binaries/release/mac/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/binaries/release/mac/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/mac/README.md?ref=ddeacfcff563b602b8833287a34dfbee340e5bec",
        "patch": "@@ -8,13 +8,13 @@\n \n 4) Launch Raven Core\n \n-Note: On Raven Core launch is you get this error\n+Note: On Raven Core launch if you get this error\n \n ```\n Dyld Error Message:\n   Library not loaded: @loader_path/libboost_system-mt.dylib\n   Referenced from: /Applications/Raven-Qt.app/Contents/Frameworks/libboost_thread-mt.dylib\n   Reason: image not found\n ```\n-You will need to copy libboost_system.dynlib to libboost_system-mt.dynlib in the /Applications/Raven-Qt.app/Contents/Frameworks folder  \n+You will need to copy libboost_system.dylib to libboost_system-mt.dylib in the /Applications/Raven-Qt.app/Contents/Frameworks folder  \n   \n\\ No newline at end of file"
      },
      {
        "sha": "5494b501c81657c55117cd9dddedcd089bcd7344",
        "filename": "binaries/release/mac/Raven-Qt.dmg",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/binaries/release/mac/Raven-Qt.dmg",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/binaries/release/mac/Raven-Qt.dmg",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/mac/Raven-Qt.dmg?ref=ddeacfcff563b602b8833287a34dfbee340e5bec"
      },
      {
        "sha": "de7c6075daf813953269733afd2ff7184256ccc6",
        "filename": "binaries/release/mac/md5sum",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/binaries/release/mac/md5sum",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/binaries/release/mac/md5sum",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/mac/md5sum?ref=ddeacfcff563b602b8833287a34dfbee340e5bec",
        "patch": "@@ -1,4 +1,5 @@\n-MD5 (raven-cli) = 0911d9cbf135c38aaa3c316d4fd7c38c\n-MD5 (raven-qt) = 8659dc8acab9ca3521f41930ecfd8d2e\n-MD5 (raven-tx) = 585ba9f3e2568c0ca9bd9b1e83b38180\n-MD5 (ravend) = a9a3ef7745b8a70bf365614455d18faf\n+MD5 (raven-cli) = ce44a94ea6b4be45f5a89d0f303fc529\n+MD5 (raven-qt) = 500711d0ffc7470bfcad2d22fe8b30c8\n+MD5 (raven-tx) = 173690818bb27504353a1183a0d82d22\n+MD5 (ravend) = 409e6d375d060df2bbf83c229c63cc67\n+MD5 (Raven-Qt.dmg) = d4fe0cb07122ff7bc22e022f6b043e35"
      },
      {
        "sha": "354cec60c04d268b867986d20c1e75068faa0135",
        "filename": "binaries/release/mac/raven-cli",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/binaries/release/mac/raven-cli",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/binaries/release/mac/raven-cli",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/mac/raven-cli?ref=ddeacfcff563b602b8833287a34dfbee340e5bec"
      },
      {
        "sha": "bbc54a5f6fba1872d89e741b92ad58a1e62c8d9f",
        "filename": "binaries/release/mac/raven-qt",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/binaries/release/mac/raven-qt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/binaries/release/mac/raven-qt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/mac/raven-qt?ref=ddeacfcff563b602b8833287a34dfbee340e5bec"
      },
      {
        "sha": "7d8a29c00aefad135d13ff3fdc29f3d607dbe215",
        "filename": "binaries/release/mac/raven-tx",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/binaries/release/mac/raven-tx",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/binaries/release/mac/raven-tx",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/mac/raven-tx?ref=ddeacfcff563b602b8833287a34dfbee340e5bec"
      },
      {
        "sha": "f67ff9a2186ef640f2f81b2f322ed3766ce01ed4",
        "filename": "binaries/release/mac/ravend",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/binaries/release/mac/ravend",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/binaries/release/mac/ravend",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/mac/ravend?ref=ddeacfcff563b602b8833287a34dfbee340e5bec"
      },
      {
        "sha": "2faa953c1a82c70bdc64d9fb0456a419d0a817b0",
        "filename": "binaries/release/mac/sha256sum",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/binaries/release/mac/sha256sum",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/binaries/release/mac/sha256sum",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/mac/sha256sum?ref=ddeacfcff563b602b8833287a34dfbee340e5bec",
        "patch": "@@ -1,4 +1,5 @@\n-8a1fe6c22d11a242f576d15f6611dbf798c02b4984ab93177eeedbb3af8f947f  raven-cli\n-978cefcff7c8a3672d4ed01b0b5e798e5c740a3a0a8f7aa49198e9e4dfc80f93  raven-qt\n-61c9814e8d926631ff08f01ab2ee833f349e6176b76aad332558e0585a62e483  raven-tx\n-c3b3a0ece74d6b4076d8ac5c321797f0077d9a4ab75e36b11936923dc4509f51  ravend\n+483c07820a1569054d78310a625a790e78f3f30de5ddd3830c2ff0694ce45052  raven-cli\n+0ffdaddba715eaf6368d615af7e5b55c575c6ad3bbdbca1802a71df24acd9df5  raven-qt\n+f5790ec8f992c55a29c19c38641d1970b1a2af39192403e61e687dde7d9419d3  raven-tx\n+7f67c1d96acb888797438ff4649b47492062b4f44052c0c59e5ca5610d08b494  ravend\n+8affffd7f8e2d7d86c1abf62385bd71b971e0a96f26cc34318f81fcadc83bd9f  Raven-Qt.dmg"
      },
      {
        "sha": "5bd5907777a79cea3c3c87c4906265b4382142e7",
        "filename": "binaries/release/windows/md5sum",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/binaries/release/windows/md5sum",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/binaries/release/windows/md5sum",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/windows/md5sum?ref=ddeacfcff563b602b8833287a34dfbee340e5bec",
        "patch": "@@ -1,4 +1,4 @@\n-447b1138ef910a27a73946d081f5f0b3  ravend.exe\n-18e2618f6a91ae7409944f691e679b8d  raven-cli.exe\n-e5e68698896ba564240fadd90d00d502  raven-tx.exe\n-b50c4551356eec3acc4440f7d8dee5ba  raven-qt.exe\n+fa7546ba5adcaafb962c3da273642796  ravend.exe\n+00034075dc0dca50f3f1c0a464bbfe6a  raven-cli.exe\n+13264eec04d42c951cf103ec9bbe4bf8  raven-tx.exe\n+7b734e8c0ab5cc6811a78043cea66d1f  raven-qt.exe"
      },
      {
        "sha": "c9342164791419baaf44dc8ec46e2d06d9bdb13e",
        "filename": "binaries/release/windows/raven-cli.exe",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/binaries/release/windows/raven-cli.exe",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/binaries/release/windows/raven-cli.exe",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/windows/raven-cli.exe?ref=ddeacfcff563b602b8833287a34dfbee340e5bec"
      },
      {
        "sha": "1930eaebe7f8001fac3782d38782599eb13e7d77",
        "filename": "binaries/release/windows/raven-qt.exe",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/binaries/release/windows/raven-qt.exe",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/binaries/release/windows/raven-qt.exe",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/windows/raven-qt.exe?ref=ddeacfcff563b602b8833287a34dfbee340e5bec"
      },
      {
        "sha": "3351b13da468d0c71cae95bfab9d4d4ed1d9d07d",
        "filename": "binaries/release/windows/raven-tx.exe",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/binaries/release/windows/raven-tx.exe",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/binaries/release/windows/raven-tx.exe",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/windows/raven-tx.exe?ref=ddeacfcff563b602b8833287a34dfbee340e5bec"
      },
      {
        "sha": "8aeac3f849b3c267c63f96994aafde42f8caf37a",
        "filename": "binaries/release/windows/ravend.exe",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/binaries/release/windows/ravend.exe",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/binaries/release/windows/ravend.exe",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/windows/ravend.exe?ref=ddeacfcff563b602b8833287a34dfbee340e5bec"
      },
      {
        "sha": "6121aebed63aab3ef8e021756c4c5ac7b902e5c5",
        "filename": "binaries/release/windows/sha256sum",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/binaries/release/windows/sha256sum",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/binaries/release/windows/sha256sum",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/windows/sha256sum?ref=ddeacfcff563b602b8833287a34dfbee340e5bec",
        "patch": "@@ -1,4 +1,4 @@\n-b9c504236948b04b5f4b0a4013cfde27b77e999df4ef6c9d680e25eab6a05912  ravend.exe\n-9c209459be06c87ec0fc84a99d1a8ad79afaa5b5be32c9f260d11a1e4bc68b4d  raven-cli.exe\n-2a19176a65eed812acea111c0409087ff01be8951c6bdde883c0686b0e3ff038  raven-tx.exe\n-1bca021e8bd5fd5b5635f154b641988ddd8df52af9c8f9bfe1b0a893009b03d3  raven-qt.exe\n+b3b78bafd3b00a2d36ed9de00aed0a98ae0928a7d98e75f8aac2684808ad8de7  ravend.exe\n+e92ca070441908196949f5c71ef95da06e2c9c0bd929f8d3c9ff3304f2bd68e6  raven-cli.exe\n+503005d3050c1d88eee70147152b91f55c06fc69863d4195141897d770746717  raven-tx.exe\n+dec37602c1a54794b2fed55063b6f00a903ef26895b4e8be8df1d8ab088c536d  raven-qt.exe"
      }
    ]
  },
  {
    "sha": "de86fc295a089c93c852aaa2cef56116eb71ef96",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkZTg2ZmMyOTVhMDg5YzkzYzg1MmFhYTJjZWY1NjExNmViNzFlZjk2",
    "commit": {
      "author": {
        "name": "RavenCoinDev",
        "email": "ravencoindev@gmail.com",
        "date": "2018-01-05T18:08:55Z"
      },
      "committer": {
        "name": "RavenCoinDev",
        "email": "ravencoindev@gmail.com",
        "date": "2018-01-05T18:08:55Z"
      },
      "message": "Initial raven source commit",
      "tree": {
        "sha": "4d168bce448abb149c53ec0bb5c2c47583e15d74",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4d168bce448abb149c53ec0bb5c2c47583e15d74"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/de86fc295a089c93c852aaa2cef56116eb71ef96",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/de86fc295a089c93c852aaa2cef56116eb71ef96",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/de86fc295a089c93c852aaa2cef56116eb71ef96",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/de86fc295a089c93c852aaa2cef56116eb71ef96/comments",
    "author": {
      "login": "RavenCoinDev",
      "id": 35130252,
      "node_id": "MDQ6VXNlcjM1MTMwMjUy",
      "avatar_url": "https://avatars.githubusercontent.com/u/35130252?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RavenCoinDev",
      "html_url": "https://github.com/RavenCoinDev",
      "followers_url": "https://api.github.com/users/RavenCoinDev/followers",
      "following_url": "https://api.github.com/users/RavenCoinDev/following{/other_user}",
      "gists_url": "https://api.github.com/users/RavenCoinDev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RavenCoinDev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RavenCoinDev/subscriptions",
      "organizations_url": "https://api.github.com/users/RavenCoinDev/orgs",
      "repos_url": "https://api.github.com/users/RavenCoinDev/repos",
      "events_url": "https://api.github.com/users/RavenCoinDev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RavenCoinDev/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "RavenCoinDev",
      "id": 35130252,
      "node_id": "MDQ6VXNlcjM1MTMwMjUy",
      "avatar_url": "https://avatars.githubusercontent.com/u/35130252?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RavenCoinDev",
      "html_url": "https://github.com/RavenCoinDev",
      "followers_url": "https://api.github.com/users/RavenCoinDev/followers",
      "following_url": "https://api.github.com/users/RavenCoinDev/following{/other_user}",
      "gists_url": "https://api.github.com/users/RavenCoinDev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RavenCoinDev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RavenCoinDev/subscriptions",
      "organizations_url": "https://api.github.com/users/RavenCoinDev/orgs",
      "repos_url": "https://api.github.com/users/RavenCoinDev/repos",
      "events_url": "https://api.github.com/users/RavenCoinDev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RavenCoinDev/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ddeacfcff563b602b8833287a34dfbee340e5bec",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ddeacfcff563b602b8833287a34dfbee340e5bec",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ddeacfcff563b602b8833287a34dfbee340e5bec"
      }
    ],
    "stats": {
      "total": 142588,
      "additions": 111831,
      "deletions": 30757
    },
    "files": [
      {
        "sha": "18e46a434274760cefac651ad2b5daaad7afda3d",
        "filename": ".gitignore",
        "status": "modified",
        "additions": 21,
        "deletions": 14,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.gitignore?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,12 +1,14 @@\n *.tar.gz\n \n-src/bitcoin\n-src/bitcoind\n-src/bitcoin-cli\n-src/bitcoin-tx\n-src/test/test_bitcoin\n-src/test/test_bitcoin_fuzzy\n-src/qt/test/test_bitcoin-qt\n+src/raven\n+src/ravend\n+src/raven-cli\n+src/raven-tx\n+src/test/test_raven\n+src/test/test_raven_fuzzy\n+src/qt/test/test_raven-qt\n+.vscode\n+output.txt\n \n # autoreconf\n Makefile.in\n@@ -29,8 +31,8 @@ config.log\n config.status\n configure\n libtool\n-src/config/bitcoin-config.h\n-src/config/bitcoin-config.h.in\n+src/config/raven-config.h\n+src/config/raven-config.h.in\n src/config/stamp-h1\n share/setup.nsi\n share/qt/Info.plist\n@@ -43,6 +45,11 @@ src/qt/forms/ui_*.h\n \n src/qt/test/moc*.cpp\n \n+.settings\n+.cproject\n+.project\n+.vscode\n+\n .deps\n .dirstamp\n .libs\n@@ -72,12 +79,12 @@ src/qt/test/moc*.cpp\n # Compilation and Qt preprocessor part\n *.qm\n Makefile\n-bitcoin-qt\n-Bitcoin-Qt.app\n+raven-qt\n+Raven-Qt.app\n \n # Unit-tests\n Makefile.test\n-bitcoin-qt_test\n+raven-qt_test\n \n # Resources cpp\n qrc_*.cpp\n@@ -90,7 +97,7 @@ build\n *.gcno\n *.gcda\n /*.info\n-test_bitcoin.coverage/\n+test_raven.coverage/\n total.coverage/\n coverage_percent.txt\n \n@@ -105,5 +112,5 @@ test/cache/*\n \n /doc/doxygen/\n \n-libbitcoinconsensus.pc\n+libravenconsensus.pc\n contrib/devtools/split-debug.sh"
      },
      {
        "sha": "4285f69b1ae99ef78e4f26ad579119079a5bc8a9",
        "filename": "CONTRIBUTING.md",
        "status": "modified",
        "additions": 28,
        "deletions": 16,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/CONTRIBUTING.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/CONTRIBUTING.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/CONTRIBUTING.md?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,7 +1,7 @@\n-Contributing to Bitcoin Core\n+Contributing to Raven Core\n ============================\n \n-The Bitcoin Core project operates an open contributor model where anyone is\n+The Raven Core project operates an open contributor model where anyone is\n welcome to contribute towards development in the form of peer review, testing\n and patches. This document explains the practical process and guidelines for\n contributing.\n@@ -57,12 +57,12 @@ the pull request affects. Valid areas as:\n \n   - *Consensus* for changes to consensus critical code\n   - *Docs* for changes to the documentation\n-  - *Qt* for changes to bitcoin-qt\n+  - *Qt* for changes to raven-qt\n   - *Mining* for changes to the mining code\n   - *Net* or *P2P* for changes to the peer-to-peer network code\n   - *RPC/REST/ZMQ* for changes to the RPC, REST or ZMQ APIs\n   - *Scripts and tools* for changes to the scripts and tools\n-  - *Tests* for changes to the bitcoin unit tests or QA tests\n+  - *Tests* for changes to the raven unit tests or QA tests\n   - *Trivial* should **only** be used for PRs that do not change generated\n     executable code. Notably, refactors (change of function arguments and code\n     reorganization) and changes in behavior should **not** be marked as trivial.\n@@ -81,6 +81,10 @@ Examples:\n     Qt: Add feed bump button\n     Trivial: Fix typo in init.cpp\n \n+Note that translations should not be submitted as pull requests, please see\n+[Translation Process](https://github.com/RavenProject/Ravencoin/blob/master/doc/translation_process.md) \n+for more information on helping with translations.\n+\n If a pull request is specifically not to be considered for merging (yet) please\n prefix the title with [WIP] or use [Tasks Lists](https://help.github.com/articles/basic-writing-and-formatting-syntax/#task-lists)\n in the body of the pull request to indicate tasks are pending.\n@@ -153,15 +157,23 @@ behaviour of code within the pull request (bugs must be preserved as is).\n Project maintainers aim for a quick turnaround on refactoring pull requests, so\n where possible keep them short, uncomplex and easy to verify.\n \n+Pull requests that refactor the code should not be made by new contributors. It\n+requires a certain level of experience to know where the code belongs to and to\n+understand the full ramification (including rebase effort of open pull requests).\n+\n+Trivial pull requests or pull requests that refactor the code with no clear\n+benefits may be immediately closed by the maintainers to reduce unnecessary\n+workload on reviewing.\n+\n \n \"Decision Making\" Process\n -------------------------\n \n-The following applies to code changes to the Bitcoin Core project (and related\n-projects such as libsecp256k1), and is not to be confused with overall Bitcoin\n+The following applies to code changes to the Raven Core project (and related\n+projects such as libsecp256k1), and is not to be confused with overall Raven\n Network Protocol consensus changes.\n \n-Whether a pull request is merged into Bitcoin Core rests with the project merge\n+Whether a pull request is merged into Raven Core rests with the project merge\n maintainers and ultimately the project lead.\n \n Maintainers will take into consideration if a patch is in line with the general\n@@ -170,16 +182,16 @@ judge the general consensus of contributors.\n \n In general, all pull requests must:\n \n-  - have a clear use case, fix a demonstrable bug or serve the greater good of\n+  - Have a clear use case, fix a demonstrable bug or serve the greater good of\n     the project (for example refactoring for modularisation);\n-  - be well peer reviewed;\n-  - have unit tests and functional tests where appropriate;\n-  - follow code style guidelines;\n-  - not break the existing test suite;\n-  - where bugs are fixed, where possible, there should be unit tests\n+  - Be well peer reviewed;\n+  - Have unit tests and functional tests where appropriate;\n+  - Follow code style guidelines;\n+  - Not break the existing test suite;\n+  - Where bugs are fixed, where possible, there should be unit tests\n     demonstrating the bug and also proving the fix. This helps prevent regression.\n \n-Patches that change Bitcoin consensus rules are considerably more involved than\n+Patches that change Raven consensus rules are considerably more involved than\n normal because they affect the entire ecosystem and so must be preceded by\n extensive mailing list discussions and have a numbered BIP. While each case will\n be different, one should be prepared to expend more time and effort than for\n@@ -220,7 +232,7 @@ higher in terms of discussion and peer review requirements, keeping in mind that\n mistakes could be very costly to the wider community. This includes refactoring\n of consensus critical code.\n \n-Where a patch set proposes to change the Bitcoin consensus, it must have been\n+Where a patch set proposes to change the Raven consensus, it must have been\n discussed extensively on the mailing list and IRC, be accompanied by a widely\n discussed BIP and have a generally widely perceived technical consensus of being\n a worthwhile change based on the judgement of the maintainers.\n@@ -260,7 +272,7 @@ about:\n Release Policy\n --------------\n \n-The project leader is the release manager for each Bitcoin Core release.\n+The project leader is the release manager for each Raven Core release.\n \n Copyright\n ---------"
      },
      {
        "sha": "50117d581160c536ece777a35503eee2768b9b70",
        "filename": "COPYING",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/COPYING",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/COPYING",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/COPYING?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,6 +1,8 @@\n The MIT License (MIT)\n \n Copyright (c) 2009-2017 The Bitcoin Core developers\n+Copyright (c) 2017 The Raven Core developers\n+Copyright (c) 2009-2017 Raven Developers\n \n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal"
      },
      {
        "sha": "66f8303b6eff695f16687abd9735f0d29a3fdb9a",
        "filename": "INSTALL.md",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/INSTALL.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/INSTALL.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/INSTALL.md?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,5 +1,5 @@\n-Building Bitcoin\n+Building Raven\n ================\n \n See doc/build-*.md for instructions on building the various\n-elements of the Bitcoin Core reference implementation of Bitcoin.\n+elements of the Raven Core reference implementation of Raven."
      },
      {
        "sha": "dd6cea867d1d1b87557eedf1b5193f45174d28c7",
        "filename": "Makefile.am",
        "status": "modified",
        "additions": 48,
        "deletions": 43,
        "changes": 91,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/Makefile.am?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,4 +1,5 @@\n # Copyright (c) 2013-2016 The Bitcoin Core developers\n+# Copyright (c) 2017 The Raven Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -12,20 +13,20 @@ endif\n GZIP_ENV=\"-9n\"\n export PYTHONPATH\n \n-if BUILD_BITCOIN_LIBS\n+if BUILD_RAVEN_LIBS\n pkgconfigdir = $(libdir)/pkgconfig\n-pkgconfig_DATA = libbitcoinconsensus.pc\n+pkgconfig_DATA = libravenconsensus.pc\n endif\n \n-BITCOIND_BIN=$(top_builddir)/src/$(BITCOIN_DAEMON_NAME)$(EXEEXT)\n-BITCOIN_QT_BIN=$(top_builddir)/src/qt/$(BITCOIN_GUI_NAME)$(EXEEXT)\n-BITCOIN_CLI_BIN=$(top_builddir)/src/$(BITCOIN_CLI_NAME)$(EXEEXT)\n-BITCOIN_WIN_INSTALLER=$(PACKAGE)-$(PACKAGE_VERSION)-win$(WINDOWS_BITS)-setup$(EXEEXT)\n+RAVEND_BIN=$(top_builddir)/src/$(RAVEN_DAEMON_NAME)$(EXEEXT)\n+RAVEN_QT_BIN=$(top_builddir)/src/qt/$(RAVEN_GUI_NAME)$(EXEEXT)\n+RAVEN_CLI_BIN=$(top_builddir)/src/$(RAVEN_CLI_NAME)$(EXEEXT)\n+RAVEN_WIN_INSTALLER=$(PACKAGE)-$(PACKAGE_VERSION)-win$(WINDOWS_BITS)-setup$(EXEEXT)\n \n empty :=\n space := $(empty) $(empty)\n \n-OSX_APP=Bitcoin-Qt.app\n+OSX_APP=Raven-Qt.app\n OSX_VOLNAME = $(subst $(space),-,$(PACKAGE_NAME))\n OSX_DMG = $(OSX_VOLNAME).dmg\n OSX_BACKGROUND_SVG=background.svg\n@@ -34,21 +35,24 @@ OSX_BACKGROUND_IMAGE_DPIS=36 72\n OSX_DSSTORE_GEN=$(top_srcdir)/contrib/macdeploy/custom_dsstore.py\n OSX_DEPLOY_SCRIPT=$(top_srcdir)/contrib/macdeploy/macdeployqtplus\n OSX_FANCY_PLIST=$(top_srcdir)/contrib/macdeploy/fancy.plist\n-OSX_INSTALLER_ICONS=$(top_srcdir)/src/qt/res/icons/bitcoin.icns\n+OSX_INSTALLER_ICONS=$(top_srcdir)/src/qt/res/icons/raven.icns\n OSX_PLIST=$(top_builddir)/share/qt/Info.plist #not installed\n OSX_QT_TRANSLATIONS = da,de,es,hu,ru,uk,zh_CN,zh_TW\n \n DIST_DOCS = $(wildcard doc/*.md) $(wildcard doc/release-notes/*.md)\n-DIST_CONTRIB = $(top_srcdir)/contrib/bitcoin-cli.bash-completion \\\n-\t       $(top_srcdir)/contrib/bitcoin-tx.bash-completion \\\n-\t       $(top_srcdir)/contrib/bitcoind.bash-completion \\\n+DIST_CONTRIB = $(top_srcdir)/contrib/raven-cli.bash-completion \\\n+\t       $(top_srcdir)/contrib/raven-tx.bash-completion \\\n+\t       $(top_srcdir)/contrib/ravend.bash-completion \\\n \t       $(top_srcdir)/contrib/init \\\n \t       $(top_srcdir)/contrib/rpm\n+DIST_SHARE = \\\n+  $(top_srcdir)/share/genbuild.sh \\\n+  $(top_srcdir)/share/rpcuser\n \n BIN_CHECKS=$(top_srcdir)/contrib/devtools/symbol-check.py \\\n            $(top_srcdir)/contrib/devtools/security-check.py\n \n-WINDOWS_PACKAGING = $(top_srcdir)/share/pixmaps/bitcoin.ico \\\n+WINDOWS_PACKAGING = $(top_srcdir)/share/pixmaps/raven.ico \\\n   $(top_srcdir)/share/pixmaps/nsis-header.bmp \\\n   $(top_srcdir)/share/pixmaps/nsis-wizard.bmp \\\n   $(top_srcdir)/doc/README_windows.txt\n@@ -60,18 +64,18 @@ OSX_PACKAGING = $(OSX_DEPLOY_SCRIPT) $(OSX_FANCY_PLIST) $(OSX_INSTALLER_ICONS) \\\n   $(top_srcdir)/contrib/macdeploy/detached-sig-create.sh\n \n COVERAGE_INFO = baseline.info \\\n-  test_bitcoin_filtered.info total_coverage.info \\\n+  test_raven_filtered.info total_coverage.info \\\n   baseline_filtered.info functional_test.info functional_test_filtered.info \\\n-  test_bitcoin_coverage.info test_bitcoin.info\n+  test_raven_coverage.info test_raven.info\n \n dist-hook:\n \t-$(GIT) archive --format=tar HEAD -- src/clientversion.cpp | $(AMTAR) -C $(top_distdir) -xf -\n \n-$(BITCOIN_WIN_INSTALLER): all-recursive\n+$(RAVEN_WIN_INSTALLER): all-recursive\n \t$(MKDIR_P) $(top_builddir)/release\n-\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(BITCOIND_BIN) $(top_builddir)/release\n-\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(BITCOIN_QT_BIN) $(top_builddir)/release\n-\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(BITCOIN_CLI_BIN) $(top_builddir)/release\n+\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(RAVEND_BIN) $(top_builddir)/release\n+\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(RAVEN_QT_BIN) $(top_builddir)/release\n+\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(RAVEN_CLI_BIN) $(top_builddir)/release\n \t@test -f $(MAKENSIS) && $(MAKENSIS) -V2 $(top_builddir)/share/setup.nsi || \\\n \t  echo error: could not build $@\n \t@echo built $@\n@@ -88,11 +92,11 @@ $(OSX_APP)/Contents/Info.plist: $(OSX_PLIST)\n \t$(MKDIR_P) $(@D)\n \t$(INSTALL_DATA) $< $@\n \n-$(OSX_APP)/Contents/Resources/bitcoin.icns: $(OSX_INSTALLER_ICONS)\n+$(OSX_APP)/Contents/Resources/raven.icns: $(OSX_INSTALLER_ICONS)\n \t$(MKDIR_P) $(@D)\n \t$(INSTALL_DATA) $< $@\n \n-$(OSX_APP)/Contents/MacOS/Bitcoin-Qt: $(BITCOIN_QT_BIN)\n+$(OSX_APP)/Contents/MacOS/Raven-Qt: $(RAVEN_QT_BIN)\n \t$(MKDIR_P) $(@D)\n \tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM)  $< $@\n \n@@ -101,8 +105,8 @@ $(OSX_APP)/Contents/Resources/Base.lproj/InfoPlist.strings:\n \techo '{\tCFBundleDisplayName = \"$(PACKAGE_NAME)\"; CFBundleName = \"$(PACKAGE_NAME)\"; }' > $@\n \n OSX_APP_BUILT=$(OSX_APP)/Contents/PkgInfo $(OSX_APP)/Contents/Resources/empty.lproj \\\n-  $(OSX_APP)/Contents/Resources/bitcoin.icns $(OSX_APP)/Contents/Info.plist \\\n-  $(OSX_APP)/Contents/MacOS/Bitcoin-Qt $(OSX_APP)/Contents/Resources/Base.lproj/InfoPlist.strings\n+  $(OSX_APP)/Contents/Resources/raven.icns $(OSX_APP)/Contents/Info.plist \\\n+  $(OSX_APP)/Contents/MacOS/Raven-Qt $(OSX_APP)/Contents/Resources/Base.lproj/InfoPlist.strings\n \n osx_volname:\n \techo $(OSX_VOLNAME) >$@\n@@ -127,7 +131,7 @@ $(APP_DIST_DIR)/Applications:\n \t@rm -f $@\n \t@cd $(@D); $(LN_S) /Applications $(@F)\n \n-$(APP_DIST_EXTRAS): $(APP_DIST_DIR)/$(OSX_APP)/Contents/MacOS/Bitcoin-Qt\n+$(APP_DIST_EXTRAS): $(APP_DIST_DIR)/$(OSX_APP)/Contents/MacOS/Raven-Qt\n \n $(OSX_DMG): $(APP_DIST_EXTRAS)\n \t$(GENISOIMAGE) -no-cache-inodes -D -l -probe -V \"$(OSX_VOLNAME)\" -no-pad -r -dir-mode 0755 -apple -o $@ dist\n@@ -142,7 +146,7 @@ $(APP_DIST_DIR)/.background/$(OSX_BACKGROUND_IMAGE): $(OSX_BACKGROUND_IMAGE_DPIF\n $(APP_DIST_DIR)/.DS_Store: $(OSX_DSSTORE_GEN)\n \t$(PYTHON) $< \"$@\" \"$(OSX_VOLNAME)\"\n \n-$(APP_DIST_DIR)/$(OSX_APP)/Contents/MacOS/Bitcoin-Qt: $(OSX_APP_BUILT) $(OSX_PACKAGING)\n+$(APP_DIST_DIR)/$(OSX_APP)/Contents/MacOS/Raven-Qt: $(OSX_APP_BUILT) $(OSX_PACKAGING)\n \tINSTALLNAMETOOL=$(INSTALLNAMETOOL)  OTOOL=$(OTOOL) STRIP=$(STRIP) $(PYTHON) $(OSX_DEPLOY_SCRIPT) $(OSX_APP) -translations-dir=$(QT_TRANSLATION_DIR) -add-qt-tr $(OSX_QT_TRANSLATIONS) -verbose 2\n \n deploydir: $(APP_DIST_EXTRAS)\n@@ -153,16 +157,16 @@ appbundle: $(OSX_APP_BUILT)\n deploy: $(OSX_DMG)\n endif\n if TARGET_WINDOWS\n-deploy: $(BITCOIN_WIN_INSTALLER)\n+deploy: $(RAVEN_WIN_INSTALLER)\n endif\n \n-$(BITCOIN_QT_BIN): FORCE\n+$(RAVEN_QT_BIN): FORCE\n \t$(MAKE) -C src qt/$(@F)\n \n-$(BITCOIND_BIN): FORCE\n+$(RAVEND_BIN): FORCE\n \t$(MAKE) -C src $(@F)\n \n-$(BITCOIN_CLI_BIN): FORCE\n+$(RAVEN_CLI_BIN): FORCE\n \t$(MAKE) -C src $(@F)\n \n if USE_LCOV\n@@ -175,16 +179,16 @@ baseline_filtered.info: baseline.info\n \t$(abs_builddir)/contrib/filter-lcov.py $(LCOV_FILTER_PATTERN) $< $@\n \t$(LCOV) -a $@ $(LCOV_OPTS) -o $@\n \n-test_bitcoin.info: baseline_filtered.info\n+test_raven.info: baseline_filtered.info\n \t$(MAKE) -C src/ check\n-\t$(LCOV) -c $(LCOV_OPTS) -d $(abs_builddir)/src -t test_bitcoin -o $@\n+\t$(LCOV) -c $(LCOV_OPTS) -d $(abs_builddir)/src -t test_raven -o $@\n \t$(LCOV) -z $(LCOV_OPTS) -d $(abs_builddir)/src\n \n-test_bitcoin_filtered.info: test_bitcoin.info\n+test_raven_filtered.info: test_raven.info\n \t$(abs_builddir)/contrib/filter-lcov.py $(LCOV_FILTER_PATTERN) $< $@\n \t$(LCOV) -a $@ $(LCOV_OPTS) -o $@\n \n-functional_test.info: test_bitcoin_filtered.info\n+functional_test.info: test_raven_filtered.info\n \t-@TIMEOUT=15 test/functional/test_runner.py $(EXTENDED_FUNCTIONAL_TESTS)\n \t$(LCOV) -c $(LCOV_OPTS) -d $(abs_builddir)/src --t functional-tests -o $@\n \t$(LCOV) -z $(LCOV_OPTS) -d $(abs_builddir)/src\n@@ -193,31 +197,31 @@ functional_test_filtered.info: functional_test.info\n \t$(abs_builddir)/contrib/filter-lcov.py $(LCOV_FILTER_PATTERN) $< $@\n \t$(LCOV) -a $@ $(LCOV_OPTS) -o $@\n \n-test_bitcoin_coverage.info: baseline_filtered.info test_bitcoin_filtered.info\n-\t$(LCOV) -a $(LCOV_OPTS) baseline_filtered.info -a test_bitcoin_filtered.info -o $@\n+test_raven_coverage.info: baseline_filtered.info test_raven_filtered.info\n+\t$(LCOV) -a $(LCOV_OPTS) baseline_filtered.info -a test_raven_filtered.info -o $@\n \n-total_coverage.info: test_bitcoin_filtered.info functional_test_filtered.info\n-\t$(LCOV) -a $(LCOV_OPTS) baseline_filtered.info -a test_bitcoin_filtered.info -a functional_test_filtered.info -o $@ | $(GREP) \"\\%\" | $(AWK) '{ print substr($$3,2,50) \"/\" $$5 }' > coverage_percent.txt\n+total_coverage.info: test_raven_filtered.info functional_test_filtered.info\n+\t$(LCOV) -a $(LCOV_OPTS) baseline_filtered.info -a test_raven_filtered.info -a functional_test_filtered.info -o $@ | $(GREP) \"\\%\" | $(AWK) '{ print substr($$3,2,50) \"/\" $$5 }' > coverage_percent.txt\n \n-test_bitcoin.coverage/.dirstamp:  test_bitcoin_coverage.info\n+test_raven.coverage/.dirstamp:  test_raven_coverage.info\n \t$(GENHTML) -s $(LCOV_OPTS) $< -o $(@D)\n \t@touch $@\n \n total.coverage/.dirstamp: total_coverage.info\n \t$(GENHTML) -s $(LCOV_OPTS) $< -o $(@D)\n \t@touch $@\n \n-cov: test_bitcoin.coverage/.dirstamp total.coverage/.dirstamp\n+cov: test_raven.coverage/.dirstamp total.coverage/.dirstamp\n \n endif\n \n dist_noinst_SCRIPTS = autogen.sh\n \n-EXTRA_DIST = $(top_srcdir)/share/genbuild.sh test/functional/test_runner.py test/functional $(DIST_CONTRIB) $(DIST_DOCS) $(WINDOWS_PACKAGING) $(OSX_PACKAGING) $(BIN_CHECKS)\n+EXTRA_DIST = $(DIST_SHARE) test/functional/test_runner.py test/functional $(DIST_CONTRIB) $(DIST_DOCS) $(WINDOWS_PACKAGING) $(OSX_PACKAGING) $(BIN_CHECKS)\n \n EXTRA_DIST += \\\n-    test/util/bitcoin-util-test.py \\\n-    test/util/data/bitcoin-util-test.json \\\n+    test/util/raven-util-test.py \\\n+    test/util/data/raven-util-test.json \\\n     test/util/data/blanktxv1.hex \\\n     test/util/data/blanktxv1.json \\\n     test/util/data/blanktxv2.hex \\\n@@ -249,6 +253,7 @@ EXTRA_DIST += \\\n     test/util/data/txcreatemultisig3.json \\\n     test/util/data/txcreatemultisig4.hex \\\n     test/util/data/txcreatemultisig4.json \\\n+    test/util/data/txcreatemultisig5.json \\\n     test/util/data/txcreateoutpubkey1.hex \\\n     test/util/data/txcreateoutpubkey1.json \\\n     test/util/data/txcreateoutpubkey2.hex \\\n@@ -267,12 +272,12 @@ EXTRA_DIST += \\\n     test/util/data/txcreatesignv1.json \\\n     test/util/data/txcreatesignv2.hex\n \n-CLEANFILES = $(OSX_DMG) $(BITCOIN_WIN_INSTALLER)\n+CLEANFILES = $(OSX_DMG) $(RAVEN_WIN_INSTALLER)\n \n .INTERMEDIATE: $(COVERAGE_INFO)\n \n DISTCHECK_CONFIGURE_FLAGS = --enable-man\n \n clean-local:\n-\trm -rf coverage_percent.txt test_bitcoin.coverage/ total.coverage/ test/tmp/ cache/ $(OSX_APP)\n+\trm -rf coverage_percent.txt test_raven.coverage/ total.coverage/ test/tmp/ cache/ $(OSX_APP)\n \trm -rf test/functional/__pycache__"
      },
      {
        "sha": "01360786c181f05b3a3d0cfe3c21d1d6a2dc6087",
        "filename": "README.md",
        "status": "modified",
        "additions": 54,
        "deletions": 22,
        "changes": 76,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/README.md?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,46 +1,43 @@\n-Project Ravencoin \n-(old title: Bitcoin Core integration/staging tree)\n+Raven Core integration/staging tree\n =====================================\n \n-WHAT IS THE PURPOSE OF THIS GIT?\n+[![Build Status](https://travis-ci.org/raven/raven.svg?branch=master)](https://travis-ci.org/raven/raven)\n \n-This is an experiment for exploring the use of the Bitcoin blockchain for tokenization of assets.\n+https://ravencoin.org\n \n-THANK YOU to all of the 448 Bitcoin devs who made 14,368 contributions to Bitcoin which was the foundation for this repository.\n-\n-\n-\n-[![Build Status](https://travis-ci.org/bitcoin/bitcoin.svg?branch=master)](https://travis-ci.org/bitcoin/bitcoin)\n-\n-\n-\n-What is Bitcoin?\n+What is Raven?\n ----------------\n \n+Raven is an experimental digital currency that enables instant payments to\n+anyone, anywhere in the world. Raven uses peer-to-peer technology to operate\n+with no central authority: managing transactions and issuing money are carried\n+out collectively by the network. Raven Core is the name of open source\n+software which enables the use of this currency.\n+\n For more information, as well as an immediately useable, binary version of\n-the Bitcoin Core software, see https://bitcoin.org/en/download, or read the\n-[original whitepaper](https://bitcoincore.org/bitcoin.pdf).\n+the Raven Core software, see https://raven.org/en/download, or read the\n+[original whitepaper](https://ravencoin.org/raven.pdf).\n \n License\n -------\n \n-Bitcoin Core is released under the terms of the MIT license. See [COPYING](COPYING) for more\n+Raven Core is released under the terms of the MIT license. See [COPYING](COPYING) for more\n information or see https://opensource.org/licenses/MIT.\n \n Development Process\n -------------------\n \n The `master` branch is regularly built and tested, but is not guaranteed to be\n-completely stable. [Tags](https://github.com/bitcoin/bitcoin/tags) are created\n-regularly to indicate new official, stable release versions of Bitcoin Core.\n+completely stable. [Tags](https://github.com/RavenProject/Ravencoin/tags) are created\n+regularly to indicate new official, stable release versions of Raven Core.\n \n The contribution workflow is described in [CONTRIBUTING.md](CONTRIBUTING.md).\n \n-The developer [mailing list](https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev)\n+The developer [mailing list](https://lists.linuxfoundation.org/mailman/listinfo/raven-dev)\n should be used to discuss complicated or controversial changes before working\n on a patch set.\n \n-Developer IRC can be found on Freenode at #bitcoin-core-dev.\n+Developer IRC can be found on Freenode at #raven-core-dev.\n \n Testing\n -------\n@@ -74,12 +71,47 @@ Translations\n ------------\n \n Changes to translations as well as new translations can be submitted to\n-[Bitcoin Core's Transifex page](https://www.transifex.com/projects/p/bitcoin/).\n+[Raven Core's Transifex page](https://www.transifex.com/projects/p/raven/).\n \n Translations are periodically pulled from Transifex and merged into the git repository. See the\n [translation process](doc/translation_process.md) for details on how this works.\n \n **Important**: We do not accept translation changes as GitHub pull requests because the next\n pull from Transifex would automatically overwrite them again.\n \n-Translators should also subscribe to the [mailing list](https://groups.google.com/forum/#!forum/bitcoin-translators).\n+Translators should also subscribe to the [mailing list](https://groups.google.com/forum/#!forum/raven-translators).\n+\n+About Ravencoin\n+----------------\n+A digital peer to peer network for the facilitation of asset transfer.\n+\n+\n+\n+In the fictional world of Westeros, ravens are used as messengers who carry statements of truth. Ravencoin is a use case specific blockchain designed to carry statements of truth about who owns what assets. \n+\n+\n+\n+Thank you to the Bitcoin developers. \n+\n+The Ravencoin project is launched based on the hard work and continuous effort of over 400 Bitcoin developers who made over 14,000 commits over the life to date of the Bitcoin project. We are eternally grateful to you for your efforts and diligence in making a secure network and for their support of free and open source software development.  The Ravencoin experiment is made on the foundation you built.\n+\n+\n+Abstract\n+Ravencoin aims to implement a blockchain which is optimized specifically for the use case of transferring assets such as securities from one holder to another. Based on the extensive development and testing of Bitcoin, Ravencoin is built on a fork of the Bitcoin code. Key changes include a faster block reward time and a change in the number, but not weighed distribution schedule, of coins. Ravencoin is free and open source and will be issued and mined transparently with no pre-mine, developer allocation or any other similar set aside. Ravencoin is intended to prioritize user control, privacy and censorship resistance and be jurisdiction agnostic while allowing simple optional additional features for users based on need.\n+\n+\n+\n+A blockchain is a ledger showing the value of something and allowing it to be transferred to someone else. Of all the possible uses for blockchains, the reporting of who owns what is one of the core uses of the technology.  This is why the first and most successful use case for blockchain technology to date has been Bitcoin.\n+\n+The success of the Etherium ERC 20 token shows the demand for tokenized assets that use another blockchain.  Tokens offer many advantages to traditional shares or other participation mechanisms such as faster transfer, possibly increased user control and censorship resistance and reduction or elimination of the need for trusted third parties.\n+\n+Bitcoin also has the capability of serving as the rails for tokens by using projects such as Omnilayer, RSK or Counterparty. However, neither Bitcoin nor Ethereum was specifically designed for facilitating ownership of other assets. \n+\n+Ravencoin is designed to be a use case specific blockchain designed to efficiently handle one specific function: the transfer of assets from one party to another.\n+\n+Bitcoin is and always should be focused on its goals of being a better form of money. Bitcoin developers will unlikely prioritize improvements or features which are specifically beneficial to the facilitation of token transfers.  One goal of the Ravencoin project is to see if a use case specific blockchain and development effort can create code which can either improve existing structures like Bitcoin or provide advantages for specific use cases.\n+\n+In the new global economy, borders and jurisdictions will be less relevant as more assets are tradable and trade across borders is increasingly frictionless. In an age where people can move significant amounts of wealth instantly using Bitcoin, global consumers will likely demand the same efficiency for their securities and similar asset holdings.\n+\n+For such a global system to work it will need to be independent of regulatory jurisdictions.  This is not due to ideological belief but practicality: if the rails for blockchain asset transfer are not censorship resistance and jurisdiction agnostic, any given jurisdiction may be in conflict with another.  In legacy systems, wealth was generally confined in the jurisdiction of the holder and therefor easy to control based on the policies of that jurisdiction. Because of the global nature of blockchain technology any protocol level ability to control wealth would potentially place jurisdictions in conflict and will not be able to operate fairly.  \n+"
      },
      {
        "sha": "8e0af748f2bf4a119454fd07f8867e01f67c15ee",
        "filename": "autogen.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/autogen.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/autogen.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/autogen.sh?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,5 +1,6 @@\n #!/bin/sh\n # Copyright (c) 2013-2016 The Bitcoin Core developers\n+# Copyright (c) 2017 The Raven Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "c67627831d8153b8e8cdfdbaf42f807b73888564",
        "filename": "background.tiff",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/background.tiff",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/background.tiff",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/background.tiff?ref=de86fc295a089c93c852aaa2cef56116eb71ef96"
      },
      {
        "sha": "8a3f0b70eb5784089441353f738da4997bf2a0a3",
        "filename": "background.tiff.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/background.tiff.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/background.tiff.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/background.tiff.png?ref=de86fc295a089c93c852aaa2cef56116eb71ef96"
      },
      {
        "sha": "d4b36e2e60e0ca57b5465ac9756668bdb902d6bd",
        "filename": "background.tiff@2x.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/background.tiff@2x.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/background.tiff@2x.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/background.tiff@2x.png?ref=de86fc295a089c93c852aaa2cef56116eb71ef96"
      },
      {
        "sha": "060e2fc9dff0213baf0543224cbafb47b2434375",
        "filename": "build-aux/m4/bitcoin_find_bdb48.m4",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/build-aux/m4/bitcoin_find_bdb48.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/build-aux/m4/bitcoin_find_bdb48.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/bitcoin_find_bdb48.m4?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,8 +1,9 @@\n dnl Copyright (c) 2013-2015 The Bitcoin Core developers\n+// Copyright (c) 2017 The Raven Core developers\n dnl Distributed under the MIT software license, see the accompanying\n dnl file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-AC_DEFUN([BITCOIN_FIND_BDB48],[\n+AC_DEFUN([RAVEN_FIND_BDB48],[\n   AC_ARG_VAR(BDB_CFLAGS, [C compiler flags for BerkeleyDB, bypasses autodetection])\n   AC_ARG_VAR(BDB_LIBS, [Linker flags for BerkeleyDB, bypasses autodetection])\n \n@@ -12,7 +13,7 @@ AC_DEFUN([BITCOIN_FIND_BDB48],[\n     bdbpath=X\n     bdb48path=X\n     bdbdirlist=\n-    for _vn in 4.8 48 4 5 ''; do\n+    for _vn in 4.8 48 4 5 5.3 ''; do\n       for _pfx in b lib ''; do\n         bdbdirlist=\"$bdbdirlist ${_pfx}db${_vn}\"\n       done\n@@ -47,14 +48,14 @@ AC_DEFUN([BITCOIN_FIND_BDB48],[\n       AC_MSG_RESULT([no])\n       AC_MSG_ERROR([libdb_cxx headers missing, ]AC_PACKAGE_NAME[ requires this library for wallet functionality (--disable-wallet to disable wallet functionality)])\n     elif test \"x$bdb48path\" = \"xX\"; then\n-      BITCOIN_SUBDIR_TO_INCLUDE(BDB_CPPFLAGS,[${bdbpath}],db_cxx)\n+      RAVEN_SUBDIR_TO_INCLUDE(BDB_CPPFLAGS,[${bdbpath}],db_cxx)\n       AC_ARG_WITH([incompatible-bdb],[AS_HELP_STRING([--with-incompatible-bdb], [allow using a bdb version other than 4.8])],[\n         AC_MSG_WARN([Found Berkeley DB other than 4.8; wallets opened by this build will not be portable!])\n       ],[\n         AC_MSG_ERROR([Found Berkeley DB other than 4.8, required for portable wallets (--with-incompatible-bdb to ignore or --disable-wallet to disable wallet functionality)])\n       ])\n     else\n-      BITCOIN_SUBDIR_TO_INCLUDE(BDB_CPPFLAGS,[${bdb48path}],db_cxx)\n+      RAVEN_SUBDIR_TO_INCLUDE(BDB_CPPFLAGS,[${bdb48path}],db_cxx)\n       bdbpath=\"${bdb48path}\"\n     fi\n   else"
      },
      {
        "sha": "cd2b3995d2c171460cc91984354a5ed932c5f40e",
        "filename": "build-aux/m4/bitcoin_qt.m4",
        "status": "modified",
        "additions": 125,
        "deletions": 124,
        "changes": 249,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/build-aux/m4/bitcoin_qt.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/build-aux/m4/bitcoin_qt.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/bitcoin_qt.m4?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,23 +1,24 @@\n dnl Copyright (c) 2013-2016 The Bitcoin Core developers\n+dnl Copyright (c) 2017 The Raven Core developers\n dnl Distributed under the MIT software license, see the accompanying\n dnl file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n dnl Helper for cases where a qt dependency is not met.\n-dnl Output: If qt version is auto, set bitcoin_enable_qt to false. Else, exit.\n-AC_DEFUN([BITCOIN_QT_FAIL],[\n-  if test \"x$bitcoin_qt_want_version\" = \"xauto\" && test x$bitcoin_qt_force != xyes; then\n-    if test x$bitcoin_enable_qt != xno; then\n-      AC_MSG_WARN([$1; bitcoin-qt frontend will not be built])\n+dnl Output: If qt version is auto, set raven_enable_qt to false. Else, exit.\n+AC_DEFUN([RAVEN_QT_FAIL],[\n+  if test \"x$raven_qt_want_version\" = \"xauto\" && test x$raven_qt_force != xyes; then\n+    if test x$raven_enable_qt != xno; then\n+      AC_MSG_WARN([$1; raven-qt frontend will not be built])\n     fi\n-    bitcoin_enable_qt=no\n-    bitcoin_enable_qt_test=no\n+    raven_enable_qt=no\n+    raven_enable_qt_test=no\n   else\n     AC_MSG_ERROR([$1])\n   fi\n ])\n \n-AC_DEFUN([BITCOIN_QT_CHECK],[\n-  if test \"x$bitcoin_enable_qt\" != \"xno\" && test x$bitcoin_qt_want_version != xno; then\n+AC_DEFUN([RAVEN_QT_CHECK],[\n+  if test \"x$raven_enable_qt\" != \"xno\" && test x$raven_qt_want_version != xno; then\n     true\n     $1\n   else\n@@ -26,43 +27,43 @@ AC_DEFUN([BITCOIN_QT_CHECK],[\n   fi\n ])\n \n-dnl BITCOIN_QT_PATH_PROGS([FOO], [foo foo2], [/path/to/search/first], [continue if missing])\n+dnl RAVEN_QT_PATH_PROGS([FOO], [foo foo2], [/path/to/search/first], [continue if missing])\n dnl Helper for finding the path of programs needed for Qt.\n dnl Inputs: $1: Variable to be set\n dnl Inputs: $2: List of programs to search for\n dnl Inputs: $3: Look for $2 here before $PATH\n dnl Inputs: $4: If \"yes\", don't fail if $2 is not found.\n dnl Output: $1 is set to the path of $2 if found. $2 are searched in order.\n-AC_DEFUN([BITCOIN_QT_PATH_PROGS],[\n-  BITCOIN_QT_CHECK([\n+AC_DEFUN([RAVEN_QT_PATH_PROGS],[\n+  RAVEN_QT_CHECK([\n     if test \"x$3\" != \"x\"; then\n       AC_PATH_PROGS($1,$2,,$3)\n     else\n       AC_PATH_PROGS($1,$2)\n     fi\n     if test \"x$$1\" = \"x\" && test \"x$4\" != \"xyes\"; then\n-      BITCOIN_QT_FAIL([$1 not found])\n+      RAVEN_QT_FAIL([$1 not found])\n     fi\n   ])\n ])\n \n dnl Initialize qt input.\n-dnl This must be called before any other BITCOIN_QT* macros to ensure that\n+dnl This must be called before any other RAVEN_QT* macros to ensure that\n dnl input variables are set correctly.\n dnl CAUTION: Do not use this inside of a conditional.\n-AC_DEFUN([BITCOIN_QT_INIT],[\n+AC_DEFUN([RAVEN_QT_INIT],[\n   dnl enable qt support\n   AC_ARG_WITH([gui],\n     [AS_HELP_STRING([--with-gui@<:@=no|qt4|qt5|auto@:>@],\n-    [build bitcoin-qt GUI (default=auto, qt5 tried first)])],\n+    [build raven-qt GUI (default=auto, qt5 tried first)])],\n     [\n-     bitcoin_qt_want_version=$withval\n-     if test x$bitcoin_qt_want_version = xyes; then\n-       bitcoin_qt_force=yes\n-       bitcoin_qt_want_version=auto\n+     raven_qt_want_version=$withval\n+     if test x$raven_qt_want_version = xyes; then\n+       raven_qt_force=yes\n+       raven_qt_want_version=auto\n      fi\n     ],\n-    [bitcoin_qt_want_version=auto])\n+    [raven_qt_want_version=auto])\n \n   AC_ARG_WITH([qt-incdir],[AS_HELP_STRING([--with-qt-incdir=INC_DIR],[specify qt include path (overridden by pkgconfig)])], [qt_include_path=$withval], [])\n   AC_ARG_WITH([qt-libdir],[AS_HELP_STRING([--with-qt-libdir=LIB_DIR],[specify qt lib path (overridden by pkgconfig)])], [qt_lib_path=$withval], [])\n@@ -83,20 +84,20 @@ dnl Find the appropriate version of Qt libraries and includes.\n dnl Inputs: $1: Whether or not pkg-config should be used. yes|no. Default: yes.\n dnl Inputs: $2: If $1 is \"yes\" and --with-gui=auto, which qt version should be\n dnl         tried first.\n-dnl Outputs: See _BITCOIN_QT_FIND_LIBS_*\n+dnl Outputs: See _RAVEN_QT_FIND_LIBS_*\n dnl Outputs: Sets variables for all qt-related tools.\n-dnl Outputs: bitcoin_enable_qt, bitcoin_enable_qt_dbus, bitcoin_enable_qt_test\n-AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n+dnl Outputs: raven_enable_qt, raven_enable_qt_dbus, raven_enable_qt_test\n+AC_DEFUN([RAVEN_QT_CONFIGURE],[\n   use_pkgconfig=$1\n \n   if test x$use_pkgconfig = x; then\n     use_pkgconfig=yes\n   fi\n \n   if test x$use_pkgconfig = xyes; then\n-    BITCOIN_QT_CHECK([_BITCOIN_QT_FIND_LIBS_WITH_PKGCONFIG([$2])])\n+    RAVEN_QT_CHECK([_RAVEN_QT_FIND_LIBS_WITH_PKGCONFIG([$2])])\n   else\n-    BITCOIN_QT_CHECK([_BITCOIN_QT_FIND_LIBS_WITHOUT_PKGCONFIG])\n+    RAVEN_QT_CHECK([_RAVEN_QT_FIND_LIBS_WITHOUT_PKGCONFIG])\n   fi\n \n   dnl This is ugly and complicated. Yuck. Works as follows:\n@@ -106,48 +107,48 @@ AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n   dnl Qt4 and Qt5. With Qt5, languages moved into core and the WindowsIntegration\n   dnl plugin was added. Since we can't tell if Qt4 is static or not, it is\n   dnl assumed for windows builds.\n-  dnl _BITCOIN_QT_CHECK_STATIC_PLUGINS does a quick link-check and appends the\n+  dnl _RAVEN_QT_CHECK_STATIC_PLUGINS does a quick link-check and appends the\n   dnl results to QT_LIBS.\n-  BITCOIN_QT_CHECK([\n+  RAVEN_QT_CHECK([\n   TEMP_CPPFLAGS=$CPPFLAGS\n   TEMP_CXXFLAGS=$CXXFLAGS\n   CPPFLAGS=\"$QT_INCLUDES $CPPFLAGS\"\n   CXXFLAGS=\"$PIC_FLAGS $CXXFLAGS\"\n-  if test x$bitcoin_qt_got_major_vers = x5; then\n-    _BITCOIN_QT_IS_STATIC\n-    if test x$bitcoin_cv_static_qt = xyes; then\n-      _BITCOIN_QT_FIND_STATIC_PLUGINS\n+  if test x$raven_qt_got_major_vers = x5; then\n+    _RAVEN_QT_IS_STATIC\n+    if test x$raven_cv_static_qt = xyes; then\n+      _RAVEN_QT_FIND_STATIC_PLUGINS\n       AC_DEFINE(QT_STATICPLUGIN, 1, [Define this symbol if qt plugins are static])\n-      AC_CACHE_CHECK(for Qt < 5.4, bitcoin_cv_need_acc_widget,[AC_COMPILE_IFELSE([AC_LANG_PROGRAM(\n+      AC_CACHE_CHECK(for Qt < 5.4, raven_cv_need_acc_widget,[AC_COMPILE_IFELSE([AC_LANG_PROGRAM(\n           [[#include <QtCore>]],[[\n           #if QT_VERSION >= 0x050400\n           choke;\n           #endif\n           ]])],\n-        [bitcoin_cv_need_acc_widget=yes],\n-        [bitcoin_cv_need_acc_widget=no])\n+        [raven_cv_need_acc_widget=yes],\n+        [raven_cv_need_acc_widget=no])\n       ])\n-      if test \"x$bitcoin_cv_need_acc_widget\" = \"xyes\"; then\n-        _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(AccessibleFactory)], [-lqtaccessiblewidgets])\n+      if test \"x$raven_cv_need_acc_widget\" = \"xyes\"; then\n+        _RAVEN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(AccessibleFactory)], [-lqtaccessiblewidgets])\n       fi\n-      _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QMinimalIntegrationPlugin)],[-lqminimal])\n+      _RAVEN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QMinimalIntegrationPlugin)],[-lqminimal])\n       AC_DEFINE(QT_QPA_PLATFORM_MINIMAL, 1, [Define this symbol if the minimal qt platform exists])\n       if test x$TARGET_OS = xwindows; then\n-        _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QWindowsIntegrationPlugin)],[-lqwindows])\n+        _RAVEN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QWindowsIntegrationPlugin)],[-lqwindows])\n         AC_DEFINE(QT_QPA_PLATFORM_WINDOWS, 1, [Define this symbol if the qt platform is windows])\n       elif test x$TARGET_OS = xlinux; then\n-        _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QXcbIntegrationPlugin)],[-lqxcb -lxcb-static])\n+        _RAVEN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QXcbIntegrationPlugin)],[-lqxcb -lxcb-static])\n         AC_DEFINE(QT_QPA_PLATFORM_XCB, 1, [Define this symbol if the qt platform is xcb])\n       elif test x$TARGET_OS = xdarwin; then\n         AX_CHECK_LINK_FLAG([[-framework IOKit]],[QT_LIBS=\"$QT_LIBS -framework IOKit\"],[AC_MSG_ERROR(could not iokit framework)])\n-        _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QCocoaIntegrationPlugin)],[-lqcocoa])\n+        _RAVEN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QCocoaIntegrationPlugin)],[-lqcocoa])\n         AC_DEFINE(QT_QPA_PLATFORM_COCOA, 1, [Define this symbol if the qt platform is cocoa])\n       fi\n     fi\n   else\n     if test x$TARGET_OS = xwindows; then\n       AC_DEFINE(QT_STATICPLUGIN, 1, [Define this symbol if qt plugins are static])\n-      _BITCOIN_QT_CHECK_STATIC_PLUGINS([\n+      _RAVEN_QT_CHECK_STATIC_PLUGINS([\n          Q_IMPORT_PLUGIN(qcncodecs)\n          Q_IMPORT_PLUGIN(qjpcodecs)\n          Q_IMPORT_PLUGIN(qtwcodecs)\n@@ -161,13 +162,13 @@ AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n   ])\n \n   if test x$use_pkgconfig$qt_bin_path = xyes; then\n-    if test x$bitcoin_qt_got_major_vers = x5; then\n+    if test x$raven_qt_got_major_vers = x5; then\n       qt_bin_path=\"`$PKG_CONFIG --variable=host_bins Qt5Core 2>/dev/null`\"\n     fi\n   fi\n \n   if test x$use_hardening != xno; then\n-    BITCOIN_QT_CHECK([\n+    RAVEN_QT_CHECK([\n     AC_MSG_CHECKING(whether -fPIE can be used with this Qt config)\n     TEMP_CPPFLAGS=$CPPFLAGS\n     TEMP_CXXFLAGS=$CXXFLAGS\n@@ -186,7 +187,7 @@ AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n     CXXFLAGS=$TEMP_CXXFLAGS\n     ])\n   else\n-    BITCOIN_QT_CHECK([\n+    RAVEN_QT_CHECK([\n     AC_MSG_CHECKING(whether -fPIC is needed with this Qt config)\n     TEMP_CPPFLAGS=$CPPFLAGS\n     CPPFLAGS=\"$QT_INCLUDES $CPPFLAGS\"\n@@ -203,39 +204,39 @@ AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n     ])\n   fi\n \n-  BITCOIN_QT_PATH_PROGS([MOC], [moc-qt${bitcoin_qt_got_major_vers} moc${bitcoin_qt_got_major_vers} moc], $qt_bin_path)\n-  BITCOIN_QT_PATH_PROGS([UIC], [uic-qt${bitcoin_qt_got_major_vers} uic${bitcoin_qt_got_major_vers} uic], $qt_bin_path)\n-  BITCOIN_QT_PATH_PROGS([RCC], [rcc-qt${bitcoin_qt_got_major_vers} rcc${bitcoin_qt_got_major_vers} rcc], $qt_bin_path)\n-  BITCOIN_QT_PATH_PROGS([LRELEASE], [lrelease-qt${bitcoin_qt_got_major_vers} lrelease${bitcoin_qt_got_major_vers} lrelease], $qt_bin_path)\n-  BITCOIN_QT_PATH_PROGS([LUPDATE], [lupdate-qt${bitcoin_qt_got_major_vers} lupdate${bitcoin_qt_got_major_vers} lupdate],$qt_bin_path, yes)\n+  RAVEN_QT_PATH_PROGS([MOC], [moc-qt${raven_qt_got_major_vers} moc${raven_qt_got_major_vers} moc], $qt_bin_path)\n+  RAVEN_QT_PATH_PROGS([UIC], [uic-qt${raven_qt_got_major_vers} uic${raven_qt_got_major_vers} uic], $qt_bin_path)\n+  RAVEN_QT_PATH_PROGS([RCC], [rcc-qt${raven_qt_got_major_vers} rcc${raven_qt_got_major_vers} rcc], $qt_bin_path)\n+  RAVEN_QT_PATH_PROGS([LRELEASE], [lrelease-qt${raven_qt_got_major_vers} lrelease${raven_qt_got_major_vers} lrelease], $qt_bin_path)\n+  RAVEN_QT_PATH_PROGS([LUPDATE], [lupdate-qt${raven_qt_got_major_vers} lupdate${raven_qt_got_major_vers} lupdate],$qt_bin_path, yes)\n \n   MOC_DEFS='-DHAVE_CONFIG_H -I$(srcdir)'\n   case $host in\n     *darwin*)\n-     BITCOIN_QT_CHECK([\n+     RAVEN_QT_CHECK([\n        MOC_DEFS=\"${MOC_DEFS} -DQ_OS_MAC\"\n        base_frameworks=\"-framework Foundation -framework ApplicationServices -framework AppKit\"\n        AX_CHECK_LINK_FLAG([[$base_frameworks]],[QT_LIBS=\"$QT_LIBS $base_frameworks\"],[AC_MSG_ERROR(could not find base frameworks)])\n      ])\n     ;;\n     *mingw*)\n-       BITCOIN_QT_CHECK([\n+       RAVEN_QT_CHECK([\n          AX_CHECK_LINK_FLAG([[-mwindows]],[QT_LDFLAGS=\"$QT_LDFLAGS -mwindows\"],[AC_MSG_WARN(-mwindows linker support not detected)])\n        ])\n   esac\n \n \n   dnl enable qt support\n   AC_MSG_CHECKING(whether to build ]AC_PACKAGE_NAME[ GUI)\n-  BITCOIN_QT_CHECK([\n-    bitcoin_enable_qt=yes\n-    bitcoin_enable_qt_test=yes\n+  RAVEN_QT_CHECK([\n+    raven_enable_qt=yes\n+    raven_enable_qt_test=yes\n     if test x$have_qt_test = xno; then\n-      bitcoin_enable_qt_test=no\n+      raven_enable_qt_test=no\n     fi\n-    bitcoin_enable_qt_dbus=no\n+    raven_enable_qt_dbus=no\n     if test x$use_dbus != xno && test x$have_qt_dbus = xyes; then\n-      bitcoin_enable_qt_dbus=yes\n+      raven_enable_qt_dbus=yes\n     fi\n     if test x$use_dbus = xyes && test x$have_qt_dbus = xno; then\n       AC_MSG_ERROR(\"libQtDBus not found. Install libQtDBus or remove --with-qtdbus.\")\n@@ -244,9 +245,9 @@ AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n       AC_MSG_WARN(\"lupdate is required to update qt translations\")\n     fi\n   ],[\n-    bitcoin_enable_qt=no\n+    raven_enable_qt=no\n   ])\n-  AC_MSG_RESULT([$bitcoin_enable_qt (Qt${bitcoin_qt_got_major_vers})])\n+  AC_MSG_RESULT([$raven_enable_qt (Qt${raven_qt_got_major_vers})])\n \n   AC_SUBST(QT_PIE_FLAGS)\n   AC_SUBST(QT_INCLUDES)\n@@ -256,7 +257,7 @@ AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n   AC_SUBST(QT_DBUS_LIBS)\n   AC_SUBST(QT_TEST_INCLUDES)\n   AC_SUBST(QT_TEST_LIBS)\n-  AC_SUBST(QT_SELECT, qt${bitcoin_qt_got_major_vers})\n+  AC_SUBST(QT_SELECT, qt${raven_qt_got_major_vers})\n   AC_SUBST(MOC_DEFS)\n ])\n \n@@ -266,9 +267,9 @@ dnl ----\n \n dnl Internal. Check if the included version of Qt is Qt5.\n dnl Requires: INCLUDES must be populated as necessary.\n-dnl Output: bitcoin_cv_qt5=yes|no\n-AC_DEFUN([_BITCOIN_QT_CHECK_QT5],[\n-  AC_CACHE_CHECK(for Qt 5, bitcoin_cv_qt5,[\n+dnl Output: raven_cv_qt5=yes|no\n+AC_DEFUN([_RAVEN_QT_CHECK_QT5],[\n+  AC_CACHE_CHECK(for Qt 5, raven_cv_qt5,[\n   AC_COMPILE_IFELSE([AC_LANG_PROGRAM(\n     [[#include <QtCore>]],\n     [[\n@@ -278,17 +279,17 @@ AC_DEFUN([_BITCOIN_QT_CHECK_QT5],[\n       return 0;\n       #endif\n     ]])],\n-    [bitcoin_cv_qt5=yes],\n-    [bitcoin_cv_qt5=no])\n+    [raven_cv_qt5=yes],\n+    [raven_cv_qt5=no])\n ])])\n \n dnl Internal. Check if the linked version of Qt was built as static libs.\n dnl Requires: Qt5. This check cannot determine if Qt4 is static.\n dnl Requires: INCLUDES and LIBS must be populated as necessary.\n-dnl Output: bitcoin_cv_static_qt=yes|no\n+dnl Output: raven_cv_static_qt=yes|no\n dnl Output: Defines QT_STATICPLUGIN if plugins are static.\n-AC_DEFUN([_BITCOIN_QT_IS_STATIC],[\n-  AC_CACHE_CHECK(for static Qt, bitcoin_cv_static_qt,[\n+AC_DEFUN([_RAVEN_QT_IS_STATIC],[\n+  AC_CACHE_CHECK(for static Qt, raven_cv_static_qt,[\n   AC_COMPILE_IFELSE([AC_LANG_PROGRAM(\n     [[#include <QtCore>]],\n     [[\n@@ -298,10 +299,10 @@ AC_DEFUN([_BITCOIN_QT_IS_STATIC],[\n       choke me\n       #endif\n     ]])],\n-    [bitcoin_cv_static_qt=yes],\n-    [bitcoin_cv_static_qt=no])\n+    [raven_cv_static_qt=yes],\n+    [raven_cv_static_qt=no])\n   ])\n-  if test xbitcoin_cv_static_qt = xyes; then\n+  if test xraven_cv_static_qt = xyes; then\n     AC_DEFINE(QT_STATICPLUGIN, 1, [Define this symbol for static Qt plugins])\n   fi\n ])\n@@ -311,7 +312,7 @@ dnl Requires: INCLUDES and LIBS must be populated as necessary.\n dnl Inputs: $1: A series of Q_IMPORT_PLUGIN().\n dnl Inputs: $2: The libraries that resolve $1.\n dnl Output: QT_LIBS is prepended or configure exits.\n-AC_DEFUN([_BITCOIN_QT_CHECK_STATIC_PLUGINS],[\n+AC_DEFUN([_RAVEN_QT_CHECK_STATIC_PLUGINS],[\n   AC_MSG_CHECKING(for static Qt plugins: $2)\n   CHECK_STATIC_PLUGINS_TEMP_LIBS=\"$LIBS\"\n   LIBS=\"$2 $QT_LIBS $LIBS\"\n@@ -321,16 +322,16 @@ AC_DEFUN([_BITCOIN_QT_CHECK_STATIC_PLUGINS],[\n     $1]],\n     [[return 0;]])],\n     [AC_MSG_RESULT(yes); QT_LIBS=\"$2 $QT_LIBS\"],\n-    [AC_MSG_RESULT(no); BITCOIN_QT_FAIL(Could not resolve: $2)])\n+    [AC_MSG_RESULT(no); RAVEN_QT_FAIL(Could not resolve: $2)])\n   LIBS=\"$CHECK_STATIC_PLUGINS_TEMP_LIBS\"\n ])\n \n dnl Internal. Find paths necessary for linking qt static plugins\n-dnl Inputs: bitcoin_qt_got_major_vers. 4 or 5.\n+dnl Inputs: raven_qt_got_major_vers. 4 or 5.\n dnl Inputs: qt_plugin_path. optional.\n dnl Outputs: QT_LIBS is appended\n-AC_DEFUN([_BITCOIN_QT_FIND_STATIC_PLUGINS],[\n-  if test x$bitcoin_qt_got_major_vers = x5; then\n+AC_DEFUN([_RAVEN_QT_FIND_STATIC_PLUGINS],[\n+  if test x$raven_qt_got_major_vers = x5; then\n       if test x$qt_plugin_path != x; then\n         QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/platforms\"\n         if test -d \"$qt_plugin_path/accessible\"; then\n@@ -352,17 +353,17 @@ AC_DEFUN([_BITCOIN_QT_FIND_STATIC_PLUGINS],[\n      ])\n      else\n        if test x$TARGET_OS = xwindows; then\n-         AC_CACHE_CHECK(for Qt >= 5.6, bitcoin_cv_need_platformsupport,[AC_COMPILE_IFELSE([AC_LANG_PROGRAM(\n+         AC_CACHE_CHECK(for Qt >= 5.6, raven_cv_need_platformsupport,[AC_COMPILE_IFELSE([AC_LANG_PROGRAM(\n              [[#include <QtCore>]],[[\n              #if QT_VERSION < 0x050600\n              choke;\n              #endif\n              ]])],\n-           [bitcoin_cv_need_platformsupport=yes],\n-           [bitcoin_cv_need_platformsupport=no])\n+           [raven_cv_need_platformsupport=yes],\n+           [raven_cv_need_platformsupport=no])\n          ])\n-         if test x$bitcoin_cv_need_platformsupport = xyes; then\n-           BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}PlatformSupport],[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXPlatformSupport not found)))\n+         if test x$raven_cv_need_platformsupport = xyes; then\n+           RAVEN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}PlatformSupport],[main],,RAVEN_QT_FAIL(lib$QT_LIB_PREFIXPlatformSupport not found)))\n          fi\n        fi\n      fi\n@@ -375,49 +376,49 @@ AC_DEFUN([_BITCOIN_QT_FIND_STATIC_PLUGINS],[\n ])\n \n dnl Internal. Find Qt libraries using pkg-config.\n-dnl Inputs: bitcoin_qt_want_version (from --with-gui=). The version to check\n+dnl Inputs: raven_qt_want_version (from --with-gui=). The version to check\n dnl         first.\n-dnl Inputs: $1: If bitcoin_qt_want_version is \"auto\", check for this version\n+dnl Inputs: $1: If raven_qt_want_version is \"auto\", check for this version\n dnl         first.\n dnl Outputs: All necessary QT_* variables are set.\n-dnl Outputs: bitcoin_qt_got_major_vers is set to \"4\" or \"5\".\n+dnl Outputs: raven_qt_got_major_vers is set to \"4\" or \"5\".\n dnl Outputs: have_qt_test and have_qt_dbus are set (if applicable) to yes|no.\n-AC_DEFUN([_BITCOIN_QT_FIND_LIBS_WITH_PKGCONFIG],[\n+AC_DEFUN([_RAVEN_QT_FIND_LIBS_WITH_PKGCONFIG],[\n   m4_ifdef([PKG_CHECK_MODULES],[\n   auto_priority_version=$1\n   if test x$auto_priority_version = x; then\n     auto_priority_version=qt5\n   fi\n-    if test x$bitcoin_qt_want_version = xqt5 ||  ( test x$bitcoin_qt_want_version = xauto && test x$auto_priority_version = xqt5 ); then\n+    if test x$raven_qt_want_version = xqt5 ||  ( test x$raven_qt_want_version = xauto && test x$auto_priority_version = xqt5 ); then\n       QT_LIB_PREFIX=Qt5\n-      bitcoin_qt_got_major_vers=5\n+      raven_qt_got_major_vers=5\n     else\n       QT_LIB_PREFIX=Qt\n-      bitcoin_qt_got_major_vers=4\n+      raven_qt_got_major_vers=4\n     fi\n     qt5_modules=\"Qt5Core Qt5Gui Qt5Network Qt5Widgets\"\n     qt4_modules=\"QtCore QtGui QtNetwork\"\n-    BITCOIN_QT_CHECK([\n-      if test x$bitcoin_qt_want_version = xqt5 || ( test x$bitcoin_qt_want_version = xauto && test x$auto_priority_version = xqt5 ); then\n+    RAVEN_QT_CHECK([\n+      if test x$raven_qt_want_version = xqt5 || ( test x$raven_qt_want_version = xauto && test x$auto_priority_version = xqt5 ); then\n         PKG_CHECK_MODULES([QT5], [$qt5_modules], [QT_INCLUDES=\"$QT5_CFLAGS\"; QT_LIBS=\"$QT5_LIBS\" have_qt=yes],[have_qt=no])\n-      elif test x$bitcoin_qt_want_version = xqt4 || ( test x$bitcoin_qt_want_version = xauto && test x$auto_priority_version = xqt4 ); then\n+      elif test x$raven_qt_want_version = xqt4 || ( test x$raven_qt_want_version = xauto && test x$auto_priority_version = xqt4 ); then\n         PKG_CHECK_MODULES([QT4], [$qt4_modules], [QT_INCLUDES=\"$QT4_CFLAGS\"; QT_LIBS=\"$QT4_LIBS\" ; have_qt=yes], [have_qt=no])\n       fi\n \n       dnl qt version is set to 'auto' and the preferred version wasn't found. Now try the other.\n-      if test x$have_qt = xno && test x$bitcoin_qt_want_version = xauto; then\n+      if test x$have_qt = xno && test x$raven_qt_want_version = xauto; then\n         if test x$auto_priority_version = xqt5; then\n-          PKG_CHECK_MODULES([QT4], [$qt4_modules], [QT_INCLUDES=\"$QT4_CFLAGS\"; QT_LIBS=\"$QT4_LIBS\" ; have_qt=yes; QT_LIB_PREFIX=Qt; bitcoin_qt_got_major_vers=4], [have_qt=no])\n+          PKG_CHECK_MODULES([QT4], [$qt4_modules], [QT_INCLUDES=\"$QT4_CFLAGS\"; QT_LIBS=\"$QT4_LIBS\" ; have_qt=yes; QT_LIB_PREFIX=Qt; raven_qt_got_major_vers=4], [have_qt=no])\n         else\n-          PKG_CHECK_MODULES([QT5], [$qt5_modules], [QT_INCLUDES=\"$QT5_CFLAGS\"; QT_LIBS=\"$QT5_LIBS\" ; have_qt=yes; QT_LIB_PREFIX=Qt5; bitcoin_qt_got_major_vers=5], [have_qt=no])\n+          PKG_CHECK_MODULES([QT5], [$qt5_modules], [QT_INCLUDES=\"$QT5_CFLAGS\"; QT_LIBS=\"$QT5_LIBS\" ; have_qt=yes; QT_LIB_PREFIX=Qt5; raven_qt_got_major_vers=5], [have_qt=no])\n         fi\n       fi\n       if test x$have_qt != xyes; then\n         have_qt=no\n-        BITCOIN_QT_FAIL([Qt dependencies not found])\n+        RAVEN_QT_FAIL([Qt dependencies not found])\n       fi\n     ])\n-    BITCOIN_QT_CHECK([\n+    RAVEN_QT_CHECK([\n       PKG_CHECK_MODULES([QT_TEST], [${QT_LIB_PREFIX}Test], [QT_TEST_INCLUDES=\"$QT_TEST_CFLAGS\"; have_qt_test=yes], [have_qt_test=no])\n       if test x$use_dbus != xno; then\n         PKG_CHECK_MODULES([QT_DBUS], [${QT_LIB_PREFIX}DBus], [QT_DBUS_INCLUDES=\"$QT_DBUS_CFLAGS\"; have_qt_dbus=yes], [have_qt_dbus=no])\n@@ -429,66 +430,66 @@ AC_DEFUN([_BITCOIN_QT_FIND_LIBS_WITH_PKGCONFIG],[\n \n dnl Internal. Find Qt libraries without using pkg-config. Version is deduced\n dnl from the discovered headers.\n-dnl Inputs: bitcoin_qt_want_version (from --with-gui=). The version to use.\n-dnl         If \"auto\", the version will be discovered by _BITCOIN_QT_CHECK_QT5.\n+dnl Inputs: raven_qt_want_version (from --with-gui=). The version to use.\n+dnl         If \"auto\", the version will be discovered by _RAVEN_QT_CHECK_QT5.\n dnl Outputs: All necessary QT_* variables are set.\n-dnl Outputs: bitcoin_qt_got_major_vers is set to \"4\" or \"5\".\n+dnl Outputs: raven_qt_got_major_vers is set to \"4\" or \"5\".\n dnl Outputs: have_qt_test and have_qt_dbus are set (if applicable) to yes|no.\n-AC_DEFUN([_BITCOIN_QT_FIND_LIBS_WITHOUT_PKGCONFIG],[\n+AC_DEFUN([_RAVEN_QT_FIND_LIBS_WITHOUT_PKGCONFIG],[\n   TEMP_CPPFLAGS=\"$CPPFLAGS\"\n   TEMP_CXXFLAGS=\"$CXXFLAGS\"\n   CXXFLAGS=\"$PIC_FLAGS $CXXFLAGS\"\n   TEMP_LIBS=\"$LIBS\"\n-  BITCOIN_QT_CHECK([\n+  RAVEN_QT_CHECK([\n     if test x$qt_include_path != x; then\n       QT_INCLUDES=\"-I$qt_include_path -I$qt_include_path/QtCore -I$qt_include_path/QtGui -I$qt_include_path/QtWidgets -I$qt_include_path/QtNetwork -I$qt_include_path/QtTest -I$qt_include_path/QtDBus\"\n       CPPFLAGS=\"$QT_INCLUDES $CPPFLAGS\"\n     fi\n   ])\n \n-  BITCOIN_QT_CHECK([AC_CHECK_HEADER([QtPlugin],,BITCOIN_QT_FAIL(QtCore headers missing))])\n-  BITCOIN_QT_CHECK([AC_CHECK_HEADER([QApplication],, BITCOIN_QT_FAIL(QtGui headers missing))])\n-  BITCOIN_QT_CHECK([AC_CHECK_HEADER([QLocalSocket],, BITCOIN_QT_FAIL(QtNetwork headers missing))])\n+  RAVEN_QT_CHECK([AC_CHECK_HEADER([QtPlugin],,RAVEN_QT_FAIL(QtCore headers missing))])\n+  RAVEN_QT_CHECK([AC_CHECK_HEADER([QApplication],, RAVEN_QT_FAIL(QtGui headers missing))])\n+  RAVEN_QT_CHECK([AC_CHECK_HEADER([QLocalSocket],, RAVEN_QT_FAIL(QtNetwork headers missing))])\n \n-  BITCOIN_QT_CHECK([\n-    if test x$bitcoin_qt_want_version = xauto; then\n-      _BITCOIN_QT_CHECK_QT5\n+  RAVEN_QT_CHECK([\n+    if test x$raven_qt_want_version = xauto; then\n+      _RAVEN_QT_CHECK_QT5\n     fi\n-    if test x$bitcoin_cv_qt5 = xyes || test x$bitcoin_qt_want_version = xqt5; then\n+    if test x$raven_cv_qt5 = xyes || test x$raven_qt_want_version = xqt5; then\n       QT_LIB_PREFIX=Qt5\n-      bitcoin_qt_got_major_vers=5\n+      raven_qt_got_major_vers=5\n     else\n       QT_LIB_PREFIX=Qt\n-      bitcoin_qt_got_major_vers=4\n+      raven_qt_got_major_vers=4\n     fi\n   ])\n \n-  BITCOIN_QT_CHECK([\n+  RAVEN_QT_CHECK([\n     LIBS=\n     if test x$qt_lib_path != x; then\n       LIBS=\"$LIBS -L$qt_lib_path\"\n     fi\n \n     if test x$TARGET_OS = xwindows; then\n-      AC_CHECK_LIB([imm32],      [main],, BITCOIN_QT_FAIL(libimm32 not found))\n+      AC_CHECK_LIB([imm32],      [main],, RAVEN_QT_FAIL(libimm32 not found))\n     fi\n   ])\n \n-  BITCOIN_QT_CHECK(AC_CHECK_LIB([z] ,[main],,AC_MSG_WARN([zlib not found. Assuming qt has it built-in])))\n-  BITCOIN_QT_CHECK(AC_SEARCH_LIBS([png_error] ,[qtpng png],,AC_MSG_WARN([libpng not found. Assuming qt has it built-in])))\n-  BITCOIN_QT_CHECK(AC_SEARCH_LIBS([jpeg_create_decompress] ,[qtjpeg jpeg],,AC_MSG_WARN([libjpeg not found. Assuming qt has it built-in])))\n-  BITCOIN_QT_CHECK(AC_SEARCH_LIBS([pcre16_exec], [qtpcre pcre16],,AC_MSG_WARN([libpcre16 not found. Assuming qt has it built-in])))\n-  BITCOIN_QT_CHECK(AC_SEARCH_LIBS([hb_ot_tags_from_script] ,[qtharfbuzzng harfbuzz],,AC_MSG_WARN([libharfbuzz not found. Assuming qt has it built-in or support is disabled])))\n-  BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Core]   ,[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXCore not found)))\n-  BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Gui]    ,[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXGui not found)))\n-  BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Network],[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXNetwork not found)))\n-  if test x$bitcoin_qt_got_major_vers = x5; then\n-    BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Widgets],[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXWidgets not found)))\n+  RAVEN_QT_CHECK(AC_CHECK_LIB([z] ,[main],,AC_MSG_WARN([zlib not found. Assuming qt has it built-in])))\n+  RAVEN_QT_CHECK(AC_SEARCH_LIBS([png_error] ,[qtpng png],,AC_MSG_WARN([libpng not found. Assuming qt has it built-in])))\n+  RAVEN_QT_CHECK(AC_SEARCH_LIBS([jpeg_create_decompress] ,[qtjpeg jpeg],,AC_MSG_WARN([libjpeg not found. Assuming qt has it built-in])))\n+  RAVEN_QT_CHECK(AC_SEARCH_LIBS([pcre16_exec], [qtpcre pcre16],,AC_MSG_WARN([libpcre16 not found. Assuming qt has it built-in])))\n+  RAVEN_QT_CHECK(AC_SEARCH_LIBS([hb_ot_tags_from_script] ,[qtharfbuzzng harfbuzz],,AC_MSG_WARN([libharfbuzz not found. Assuming qt has it built-in or support is disabled])))\n+  RAVEN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Core]   ,[main],,RAVEN_QT_FAIL(lib$QT_LIB_PREFIXCore not found)))\n+  RAVEN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Gui]    ,[main],,RAVEN_QT_FAIL(lib$QT_LIB_PREFIXGui not found)))\n+  RAVEN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Network],[main],,RAVEN_QT_FAIL(lib$QT_LIB_PREFIXNetwork not found)))\n+  if test x$raven_qt_got_major_vers = x5; then\n+    RAVEN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Widgets],[main],,RAVEN_QT_FAIL(lib$QT_LIB_PREFIXWidgets not found)))\n   fi\n   QT_LIBS=\"$LIBS\"\n   LIBS=\"$TEMP_LIBS\"\n \n-  BITCOIN_QT_CHECK([\n+  RAVEN_QT_CHECK([\n     LIBS=\n     if test x$qt_lib_path != x; then\n       LIBS=\"-L$qt_lib_path\""
      },
      {
        "sha": "e52c90eb675d3bd22a9484d6bef7de0307d6cbd1",
        "filename": "build-aux/m4/bitcoin_subdir_to_include.m4",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/build-aux/m4/bitcoin_subdir_to_include.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/build-aux/m4/bitcoin_subdir_to_include.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/bitcoin_subdir_to_include.m4?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,10 +1,11 @@\n dnl Copyright (c) 2013-2014 The Bitcoin Core developers\n+dnl Copyright (c) 2017 The Raven Core developers\n dnl Distributed under the MIT software license, see the accompanying\n dnl file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-dnl BITCOIN_SUBDIR_TO_INCLUDE([CPPFLAGS-VARIABLE-NAME],[SUBDIRECTORY-NAME],[HEADER-FILE])\n+dnl RAVEN_SUBDIR_TO_INCLUDE([CPPFLAGS-VARIABLE-NAME],[SUBDIRECTORY-NAME],[HEADER-FILE])\n dnl SUBDIRECTORY-NAME must end with a path separator\n-AC_DEFUN([BITCOIN_SUBDIR_TO_INCLUDE],[\n+AC_DEFUN([RAVEN_SUBDIR_TO_INCLUDE],[\n   if test \"x$2\" = \"x\"; then\n     AC_MSG_RESULT([default])\n   else"
      },
      {
        "sha": "13c96b8d3c104af3f56c92d5cfa80915985a2681",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 122,
        "deletions": 72,
        "changes": 194,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,29 +1,35 @@\n dnl require autoconf 2.60 (AS_ECHO/AS_ECHO_N)\n AC_PREREQ([2.60])\n define(_CLIENT_VERSION_MAJOR, 0)\n-define(_CLIENT_VERSION_MINOR, 14)\n+define(_CLIENT_VERSION_MINOR, 15)\n define(_CLIENT_VERSION_REVISION, 99)\n define(_CLIENT_VERSION_BUILD, 0)\n-define(_CLIENT_VERSION_IS_RELEASE, false)\n+define(_CLIENT_VERSION_IS_RELEASE, true)\n define(_COPYRIGHT_YEAR, 2017)\n define(_COPYRIGHT_HOLDERS,[The %s developers])\n-define(_COPYRIGHT_HOLDERS_SUBSTITUTION,[[Bitcoin Core]])\n-AC_INIT([Bitcoin Core],[_CLIENT_VERSION_MAJOR._CLIENT_VERSION_MINOR._CLIENT_VERSION_REVISION],[https://github.com/bitcoin/bitcoin/issues],[bitcoin],[https://bitcoincore.org/])\n+define(_COPYRIGHT_HOLDERS_SUBSTITUTION,[[Raven Core]])\n+AC_INIT([Raven Core],[_CLIENT_VERSION_MAJOR._CLIENT_VERSION_MINOR._CLIENT_VERSION_REVISION],[https://github.com/RavenProject/Ravencoin/issues],[raven],[https://ravencoin.org/])\n AC_CONFIG_SRCDIR([src/validation.cpp])\n-AC_CONFIG_HEADERS([src/config/bitcoin-config.h])\n+AC_CONFIG_HEADERS([src/config/raven-config.h])\n AC_CONFIG_AUX_DIR([build-aux])\n AC_CONFIG_MACRO_DIR([build-aux/m4])\n \n-BITCOIN_DAEMON_NAME=bitcoind\n-BITCOIN_GUI_NAME=bitcoin-qt\n-BITCOIN_CLI_NAME=bitcoin-cli\n-BITCOIN_TX_NAME=bitcoin-tx\n+RAVEN_DAEMON_NAME=ravend\n+RAVEN_GUI_NAME=raven-qt\n+RAVEN_CLI_NAME=raven-cli\n+RAVEN_TX_NAME=raven-tx\n+\n+dnl Unless the user specified ARFLAGS, force it to be cr\n+AC_ARG_VAR(ARFLAGS, [Flags for the archiver, defaults to <cr> if not set])\n+if test \"x${ARFLAGS+set}\" != \"xset\"; then\n+  ARFLAGS=\"cr\"\n+fi\n \n AC_CANONICAL_HOST\n \n-AH_TOP([#ifndef BITCOIN_CONFIG_H])\n-AH_TOP([#define BITCOIN_CONFIG_H])\n-AH_BOTTOM([#endif //BITCOIN_CONFIG_H])\n+AH_TOP([#ifndef RAVEN_CONFIG_H])\n+AH_TOP([#define RAVEN_CONFIG_H])\n+AH_BOTTOM([#endif //RAVEN_CONFIG_H])\n \n dnl faketime breaks configure and is only needed for make. Disable it here.\n unset FAKETIME\n@@ -77,7 +83,7 @@ AC_PATH_TOOL(RANLIB, ranlib)\n AC_PATH_TOOL(STRIP, strip)\n AC_PATH_TOOL(GCOV, gcov)\n AC_PATH_PROG(LCOV, lcov)\n-dnl Python 3.x is supported from 3.4 on (see https://github.com/bitcoin/bitcoin/issues/7893)\n+dnl Python 3.x is supported from 3.4 on (see https://github.com/RavenProject/Ravencoin/issues/7893)\n AC_PATH_PROGS([PYTHON], [python3.6 python3.5 python3.4 python3 python2.7 python2 python])\n AC_PATH_PROG(GENHTML, genhtml)\n AC_PATH_PROG([GIT], [git])\n@@ -171,6 +177,16 @@ AC_ARG_ENABLE([glibc-back-compat],\n   [use_glibc_compat=$enableval],\n   [use_glibc_compat=no])\n \n+AC_ARG_ENABLE([asm],\n+  [AS_HELP_STRING([--enable-asm],\n+  [Enable assembly routines (default is yes)])],\n+  [use_asm=$enableval],\n+  [use_asm=yes])\n+\n+if test \"x$use_asm\" = xyes; then\n+  AC_DEFINE(USE_ASM, 1, [Define this symbol to build in assembly routines])\n+fi\n+\n AC_ARG_WITH([system-univalue],\n   [AS_HELP_STRING([--with-system-univalue],\n   [Build with system UniValue (default is no)])],\n@@ -242,32 +258,54 @@ if test \"x$CXXFLAGS_overridden\" = \"xno\"; then\n   AX_CHECK_COMPILE_FLAG([-Wunused-local-typedef],[CXXFLAGS=\"$CXXFLAGS -Wno-unused-local-typedef\"],,[[$CXXFLAG_WERROR]])\n   AX_CHECK_COMPILE_FLAG([-Wdeprecated-register],[CXXFLAGS=\"$CXXFLAGS -Wno-deprecated-register\"],,[[$CXXFLAG_WERROR]])\n   AX_CHECK_COMPILE_FLAG([-Wimplicit-fallthrough],[CXXFLAGS=\"$CXXFLAGS -Wno-implicit-fallthrough\"],,[[$CXXFLAG_WERROR]])\n+fi\n \n-  # Check for optional instruction set support. Enabling these does _not_ imply that all code will\n-  # be compiled with them, rather that specific objects/libs may use them after checking for runtime\n-  # compatibility.\n-  AX_CHECK_COMPILE_FLAG([-msse4.2],[[enable_sse42=yes; SSE42_CXXFLAGS=\"-msse4.2\"]],,[[$CXXFLAG_WERROR]])\n+# Check for optional instruction set support. Enabling these does _not_ imply that all code will\n+# be compiled with them, rather that specific objects/libs may use them after checking for runtime\n+# compatibility.\n+AX_CHECK_COMPILE_FLAG([-msse4.2],[[SSE42_CXXFLAGS=\"-msse4.2\"]],,[[$CXXFLAG_WERROR]])\n+\n+TEMP_CXXFLAGS=\"$CXXFLAGS\"\n+CXXFLAGS=\"$CXXFLAGS $SSE42_CXXFLAGS\"\n+AC_MSG_CHECKING(for assembler crc32 support)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+    #include <stdint.h>\n+    #if defined(_MSC_VER)\n+    #include <intrin.h>\n+    #elif defined(__GNUC__) && defined(__SSE4_2__)\n+    #include <nmmintrin.h>\n+    #endif\n+  ]],[[\n+    uint64_t l = 0;\n+    l = _mm_crc32_u8(l, 0);\n+    l = _mm_crc32_u32(l, 0);\n+    l = _mm_crc32_u64(l, 0);\n+    return l;\n+  ]])],\n+ [ AC_MSG_RESULT(yes); enable_hwcrc32=yes],\n+ [ AC_MSG_RESULT(no)]\n+)\n+CXXFLAGS=\"$TEMP_CXXFLAGS\"\n \n-fi\n CPPFLAGS=\"$CPPFLAGS -DHAVE_BUILD_INFO -D__STDC_FORMAT_MACROS\"\n \n AC_ARG_WITH([utils],\n   [AS_HELP_STRING([--with-utils],\n-  [build bitcoin-cli bitcoin-tx (default=yes)])],\n-  [build_bitcoin_utils=$withval],\n-  [build_bitcoin_utils=yes])\n+  [build raven-cli raven-tx (default=yes)])],\n+  [build_raven_utils=$withval],\n+  [build_raven_utils=yes])\n \n AC_ARG_WITH([libs],\n   [AS_HELP_STRING([--with-libs],\n   [build libraries (default=yes)])],\n-  [build_bitcoin_libs=$withval],\n-  [build_bitcoin_libs=yes])\n+  [build_raven_libs=$withval],\n+  [build_raven_libs=yes])\n \n AC_ARG_WITH([daemon],\n   [AS_HELP_STRING([--with-daemon],\n-  [build bitcoind daemon (default=yes)])],\n-  [build_bitcoind=$withval],\n-  [build_bitcoind=yes])\n+  [build ravend daemon (default=yes)])],\n+  [build_ravend=$withval],\n+  [build_ravend=yes])\n \n use_pkgconfig=yes\n case $host in\n@@ -462,7 +500,7 @@ AC_C_BIGENDIAN\n dnl Check for pthread compile/link requirements\n AX_PTHREAD\n \n-# The following macro will add the necessary defines to bitcoin-config.h, but\n+# The following macro will add the necessary defines to raven-config.h, but\n # they also need to be passed down to any subprojects. Pull the results out of\n # the cache and add them to CPPFLAGS.\n AC_SYS_LARGEFILE\n@@ -636,6 +674,14 @@ AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <unistd.h>]],\n  [ AC_MSG_RESULT(no)]\n )\n \n+AC_MSG_CHECKING(for getentropy via random.h)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <unistd.h>\n+ #include <sys/random.h>]],\n+ [[ getentropy(nullptr, 32) ]])],\n+ [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_GETENTROPY_RAND, 1,[Define this symbol if the BSD getentropy system call is available with sys/random.h]) ],\n+ [ AC_MSG_RESULT(no)]\n+)\n+\n AC_MSG_CHECKING(for sysctl KERN_ARND)\n AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/types.h>\n   #include <sys/sysctl.h>]],\n@@ -661,7 +707,7 @@ AC_SUBST(LIBMEMENV)\n \n if test x$enable_wallet != xno; then\n     dnl Check for libdb_cxx only if wallet enabled\n-    BITCOIN_FIND_BDB48\n+    RAVEN_FIND_BDB48\n fi\n \n dnl Check for libminiupnpc (optional)\n@@ -673,12 +719,12 @@ if test x$use_upnp != xno; then\n   )\n fi\n \n-BITCOIN_QT_INIT\n+RAVEN_QT_INIT\n \n-dnl sets $bitcoin_enable_qt, $bitcoin_enable_qt_test, $bitcoin_enable_qt_dbus\n-BITCOIN_QT_CONFIGURE([$use_pkgconfig], [qt5])\n+dnl sets $raven_enable_qt, $raven_enable_qt_test, $raven_enable_qt_dbus\n+RAVEN_QT_CONFIGURE([$use_pkgconfig], [qt5])\n \n-if test x$build_bitcoin_utils$build_bitcoind$bitcoin_enable_qt$use_tests$use_bench = xnonononono; then\n+if test x$build_raven_utils$build_ravend$raven_enable_qt$use_tests$use_bench = xnonononono; then\n     use_boost=no\n else\n     use_boost=yes\n@@ -781,14 +827,14 @@ TEMP_CPPFLAGS=\"$CPPFLAGS\"\n CPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n AC_MSG_CHECKING([for mismatched boost c++11 scoped enums])\n AC_LINK_IFELSE([AC_LANG_PROGRAM([[\n-  #include \"boost/config.hpp\"\n-  #include \"boost/version.hpp\"\n+  #include <boost/config.hpp>\n+  #include <boost/version.hpp>\n   #if !defined(BOOST_NO_SCOPED_ENUMS) && !defined(BOOST_NO_CXX11_SCOPED_ENUMS) && BOOST_VERSION < 105700\n   #define BOOST_NO_SCOPED_ENUMS\n   #define BOOST_NO_CXX11_SCOPED_ENUMS\n   #define CHECK\n   #endif\n-  #include \"boost/filesystem.hpp\"\n+  #include <boost/filesystem.hpp>\n   ]],[[\n   #if defined(CHECK)\n     boost::filesystem::copy_file(\"foo\", \"bar\");\n@@ -860,11 +906,11 @@ if test x$use_pkgconfig = xyes; then\n     [\n       PKG_CHECK_MODULES([SSL], [libssl],, [AC_MSG_ERROR(openssl  not found.)])\n       PKG_CHECK_MODULES([CRYPTO], [libcrypto],,[AC_MSG_ERROR(libcrypto  not found.)])\n-      BITCOIN_QT_CHECK([PKG_CHECK_MODULES([PROTOBUF], [protobuf], [have_protobuf=yes], [BITCOIN_QT_FAIL(libprotobuf not found)])])\n+      RAVEN_QT_CHECK([PKG_CHECK_MODULES([PROTOBUF], [protobuf], [have_protobuf=yes], [RAVEN_QT_FAIL(libprotobuf not found)])])\n       if test x$use_qr != xno; then\n-        BITCOIN_QT_CHECK([PKG_CHECK_MODULES([QR], [libqrencode], [have_qrencode=yes], [have_qrencode=no])])\n+        RAVEN_QT_CHECK([PKG_CHECK_MODULES([QR], [libqrencode], [have_qrencode=yes], [have_qrencode=no])])\n       fi\n-      if test x$build_bitcoin_utils$build_bitcoind$bitcoin_enable_qt$use_tests != xnononono; then\n+      if test x$build_raven_utils$build_ravend$raven_enable_qt$use_tests != xnononono; then\n         PKG_CHECK_MODULES([EVENT], [libevent],, [AC_MSG_ERROR(libevent not found.)])\n         if test x$TARGET_OS != xwindows; then\n           PKG_CHECK_MODULES([EVENT_PTHREADS], [libevent_pthreads],, [AC_MSG_ERROR(libevent_pthreads not found.)])\n@@ -889,7 +935,7 @@ else\n   AC_CHECK_HEADER([openssl/ssl.h],, AC_MSG_ERROR(libssl headers missing),)\n   AC_CHECK_LIB([ssl],         [main],SSL_LIBS=-lssl, AC_MSG_ERROR(libssl missing))\n \n-  if test x$build_bitcoin_utils$build_bitcoind$bitcoin_enable_qt$use_tests != xnononono; then\n+  if test x$build_raven_utils$build_ravend$raven_enable_qt$use_tests != xnononono; then\n     AC_CHECK_HEADER([event2/event.h],, AC_MSG_ERROR(libevent headers missing),)\n     AC_CHECK_LIB([event],[main],EVENT_LIBS=-levent,AC_MSG_ERROR(libevent missing))\n     if test x$TARGET_OS != xwindows; then\n@@ -920,10 +966,10 @@ else\n     esac\n   fi\n \n-  BITCOIN_QT_CHECK(AC_CHECK_LIB([protobuf] ,[main],[PROTOBUF_LIBS=-lprotobuf], BITCOIN_QT_FAIL(libprotobuf not found)))\n+  RAVEN_QT_CHECK(AC_CHECK_LIB([protobuf] ,[main],[PROTOBUF_LIBS=-lprotobuf], RAVEN_QT_FAIL(libprotobuf not found)))\n   if test x$use_qr != xno; then\n-    BITCOIN_QT_CHECK([AC_CHECK_LIB([qrencode], [main],[QR_LIBS=-lqrencode], [have_qrencode=no])])\n-    BITCOIN_QT_CHECK([AC_CHECK_HEADER([qrencode.h],, have_qrencode=no)])\n+    RAVEN_QT_CHECK([AC_CHECK_LIB([qrencode], [main],[QR_LIBS=-lqrencode], [have_qrencode=no])])\n+    RAVEN_QT_CHECK([AC_CHECK_HEADER([qrencode.h],, have_qrencode=no)])\n   fi\n fi\n \n@@ -938,7 +984,7 @@ dnl univalue check\n \n need_bundled_univalue=yes\n \n-if test x$build_bitcoin_utils$build_bitcoind$bitcoin_enable_qt$use_tests$use_bench = xnonononono; then\n+if test x$build_raven_utils$build_ravend$raven_enable_qt$use_tests$use_bench = xnonononono; then\n   need_bundled_univalue=no\n else\n \n@@ -982,23 +1028,23 @@ AM_CONDITIONAL([EMBEDDED_UNIVALUE],[test x$need_bundled_univalue = xyes])\n AC_SUBST(UNIVALUE_CFLAGS)\n AC_SUBST(UNIVALUE_LIBS)\n \n-BITCOIN_QT_PATH_PROGS([PROTOC], [protoc],$protoc_bin_path)\n+RAVEN_QT_PATH_PROGS([PROTOC], [protoc],$protoc_bin_path)\n \n-AC_MSG_CHECKING([whether to build bitcoind])\n-AM_CONDITIONAL([BUILD_BITCOIND], [test x$build_bitcoind = xyes])\n-AC_MSG_RESULT($build_bitcoind)\n+AC_MSG_CHECKING([whether to build ravend])\n+AM_CONDITIONAL([BUILD_RAVEND], [test x$build_ravend = xyes])\n+AC_MSG_RESULT($build_ravend)\n \n-AC_MSG_CHECKING([whether to build utils (bitcoin-cli bitcoin-tx)])\n-AM_CONDITIONAL([BUILD_BITCOIN_UTILS], [test x$build_bitcoin_utils = xyes])\n-AC_MSG_RESULT($build_bitcoin_utils)\n+AC_MSG_CHECKING([whether to build utils (raven-cli raven-tx)])\n+AM_CONDITIONAL([BUILD_RAVEN_UTILS], [test x$build_raven_utils = xyes])\n+AC_MSG_RESULT($build_raven_utils)\n \n AC_MSG_CHECKING([whether to build libraries])\n-AM_CONDITIONAL([BUILD_BITCOIN_LIBS], [test x$build_bitcoin_libs = xyes])\n-if test x$build_bitcoin_libs = xyes; then\n+AM_CONDITIONAL([BUILD_RAVEN_LIBS], [test x$build_raven_libs = xyes])\n+if test x$build_raven_libs = xyes; then\n   AC_DEFINE(HAVE_CONSENSUS_LIB, 1, [Define this symbol if the consensus lib has been built])\n-  AC_CONFIG_FILES([libbitcoinconsensus.pc:libbitcoinconsensus.pc.in])\n+  AC_CONFIG_FILES([libravenconsensus.pc:libravenconsensus.pc.in])\n fi\n-AC_MSG_RESULT($build_bitcoin_libs)\n+AC_MSG_RESULT($build_raven_libs)\n \n AC_LANG_POP\n \n@@ -1060,13 +1106,13 @@ fi\n \n dnl these are only used when qt is enabled\n BUILD_TEST_QT=\"\"\n-if test x$bitcoin_enable_qt != xno; then\n+if test x$raven_enable_qt != xno; then\n   dnl enable dbus support\n   AC_MSG_CHECKING([whether to build GUI with support for D-Bus])\n-  if test x$bitcoin_enable_qt_dbus != xno; then\n+  if test x$raven_enable_qt_dbus != xno; then\n     AC_DEFINE([USE_DBUS],[1],[Define if dbus support should be compiled in])\n   fi\n-  AC_MSG_RESULT($bitcoin_enable_qt_dbus)\n+  AC_MSG_RESULT($raven_enable_qt_dbus)\n \n   dnl enable qr support\n   AC_MSG_CHECKING([whether to build GUI with support for QR codes])\n@@ -1089,8 +1135,8 @@ if test x$bitcoin_enable_qt != xno; then\n     AC_MSG_WARN(\"xgettext is required to update qt translations\")\n   fi\n \n-  AC_MSG_CHECKING([whether to build test_bitcoin-qt])\n-  if test x$use_gui_tests$bitcoin_enable_qt_test = xyesyes; then\n+  AC_MSG_CHECKING([whether to build test_raven-qt])\n+  if test x$use_gui_tests$raven_enable_qt_test = xyesyes; then\n     AC_MSG_RESULT([yes])\n     BUILD_TEST_QT=\"yes\"\n   else\n@@ -1100,7 +1146,7 @@ fi\n \n AM_CONDITIONAL([ENABLE_ZMQ], [test \"x$use_zmq\" = \"xyes\"])\n \n-AC_MSG_CHECKING([whether to build test_bitcoin])\n+AC_MSG_CHECKING([whether to build test_raven])\n if test x$use_tests = xyes; then\n   AC_MSG_RESULT([yes])\n   BUILD_TEST=\"yes\"\n@@ -1116,7 +1162,7 @@ else\n   AC_MSG_RESULT([no])\n fi\n \n-if test x$build_bitcoin_utils$build_bitcoin_libs$build_bitcoind$bitcoin_enable_qt$use_bench$use_tests = xnononononono; then\n+if test x$build_raven_utils$build_raven_libs$build_ravend$raven_enable_qt$use_bench$use_tests = xnononononono; then\n   AC_MSG_ERROR([No targets! Please specify at least one of: --with-utils --with-libs --with-daemon --with-gui --enable-bench or --enable-tests])\n fi\n \n@@ -1125,14 +1171,15 @@ AM_CONDITIONAL([BUILD_DARWIN], [test x$BUILD_OS = xdarwin])\n AM_CONDITIONAL([TARGET_WINDOWS], [test x$TARGET_OS = xwindows])\n AM_CONDITIONAL([ENABLE_WALLET],[test x$enable_wallet = xyes])\n AM_CONDITIONAL([ENABLE_TESTS],[test x$BUILD_TEST = xyes])\n-AM_CONDITIONAL([ENABLE_QT],[test x$bitcoin_enable_qt = xyes])\n+AM_CONDITIONAL([ENABLE_QT],[test x$raven_enable_qt = xyes])\n AM_CONDITIONAL([ENABLE_QT_TESTS],[test x$BUILD_TEST_QT = xyes])\n AM_CONDITIONAL([ENABLE_BENCH],[test x$use_bench = xyes])\n AM_CONDITIONAL([USE_QRCODE], [test x$use_qr = xyes])\n AM_CONDITIONAL([USE_LCOV],[test x$use_lcov = xyes])\n AM_CONDITIONAL([GLIBC_BACK_COMPAT],[test x$use_glibc_compat = xyes])\n AM_CONDITIONAL([HARDEN],[test x$use_hardening = xyes])\n-AM_CONDITIONAL([ENABLE_SSE42],[test x$enable_sse42 = xyes])\n+AM_CONDITIONAL([ENABLE_HWCRC32],[test x$enable_hwcrc32 = xyes])\n+AM_CONDITIONAL([USE_ASM],[test x$use_asm = xyes])\n \n AC_DEFINE(CLIENT_VERSION_MAJOR, _CLIENT_VERSION_MAJOR, [Major version])\n AC_DEFINE(CLIENT_VERSION_MINOR, _CLIENT_VERSION_MINOR, [Minor version])\n@@ -1153,10 +1200,10 @@ AC_SUBST(COPYRIGHT_YEAR, _COPYRIGHT_YEAR)\n AC_SUBST(COPYRIGHT_HOLDERS, \"_COPYRIGHT_HOLDERS\")\n AC_SUBST(COPYRIGHT_HOLDERS_SUBSTITUTION, \"_COPYRIGHT_HOLDERS_SUBSTITUTION\")\n AC_SUBST(COPYRIGHT_HOLDERS_FINAL, \"_COPYRIGHT_HOLDERS_FINAL\")\n-AC_SUBST(BITCOIN_DAEMON_NAME)\n-AC_SUBST(BITCOIN_GUI_NAME)\n-AC_SUBST(BITCOIN_CLI_NAME)\n-AC_SUBST(BITCOIN_TX_NAME)\n+AC_SUBST(RAVEN_DAEMON_NAME)\n+AC_SUBST(RAVEN_GUI_NAME)\n+AC_SUBST(RAVEN_CLI_NAME)\n+AC_SUBST(RAVEN_TX_NAME)\n \n AC_SUBST(RELDFLAGS)\n AC_SUBST(ERROR_CXXFLAGS)\n@@ -1184,8 +1231,9 @@ AC_SUBST(QR_LIBS)\n AC_CONFIG_FILES([Makefile src/Makefile doc/man/Makefile share/setup.nsi share/qt/Info.plist test/config.ini])\n AC_CONFIG_FILES([contrib/devtools/split-debug.sh],[chmod +x contrib/devtools/split-debug.sh])\n AC_CONFIG_FILES([doc/Doxyfile])\n+AC_CONFIG_LINKS([contrib/filter-lcov.py:contrib/filter-lcov.py])\n AC_CONFIG_LINKS([test/functional/test_runner.py:test/functional/test_runner.py])\n-AC_CONFIG_LINKS([test/util/bitcoin-util-test.py:test/util/bitcoin-util-test.py])\n+AC_CONFIG_LINKS([test/util/raven-util-test.py:test/util/raven-util-test.py])\n \n dnl boost's m4 checks do something really nasty: they export these vars. As a\n dnl result, they leak into secp256k1's configure and crazy things happen.\n@@ -1214,7 +1262,7 @@ if test x$need_bundled_univalue = xyes; then\n   AC_CONFIG_SUBDIRS([src/univalue])\n fi\n \n-ac_configure_args=\"${ac_configure_args} --disable-shared --with-pic --with-bignum=no --enable-module-recovery\"\n+ac_configure_args=\"${ac_configure_args} --disable-shared --with-pic --with-bignum=no --enable-module-recovery --disable-jni\"\n AC_CONFIG_SUBDIRS([src/secp256k1])\n \n AC_OUTPUT\n@@ -1241,15 +1289,16 @@ esac\n echo \n echo \"Options used to compile and link:\"\n echo \"  with wallet   = $enable_wallet\"\n-echo \"  with gui / qt = $bitcoin_enable_qt\"\n-if test x$bitcoin_enable_qt != xno; then\n-    echo \"    qt version  = $bitcoin_qt_got_major_vers\"\n+echo \"  with gui / qt = $raven_enable_qt\"\n+if test x$raven_enable_qt != xno; then\n+    echo \"    qt version  = $raven_qt_got_major_vers\"\n     echo \"    with qr     = $use_qr\"\n fi\n echo \"  with zmq      = $use_zmq\"\n echo \"  with test     = $use_tests\"\n echo \"  with bench    = $use_bench\"\n echo \"  with upnp     = $use_upnp\"\n+echo \"  use asm       = $use_asm\"\n echo \"  debug enabled = $enable_debug\"\n echo \"  werror        = $enable_werror\"\n echo \n@@ -1262,4 +1311,5 @@ echo \"  CPPFLAGS      = $CPPFLAGS\"\n echo \"  CXX           = $CXX\"\n echo \"  CXXFLAGS      = $CXXFLAGS\"\n echo \"  LDFLAGS       = $LDFLAGS\"\n+echo \"  ARFLAGS       = $ARFLAGS\"\n echo "
      },
      {
        "sha": "eb75eb774a0c8278767365d76e8edbc0b3e3acfc",
        "filename": "contrib/README.md",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/README.md?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -13,7 +13,7 @@ Construct a linear, no-fork, best version of the blockchain.\n \n ### [Qos](/contrib/qos) ###\n \n-A Linux bash script that will set up traffic control (tc) to limit the outgoing bandwidth for connections to the Bitcoin network. This means one can have an always-on bitcoind instance running, and another local bitcoind/bitcoin-qt instance which connects to this node and receives blocks from it.\n+A Linux bash script that will set up traffic control (tc) to limit the outgoing bandwidth for connections to the Raven network. This means one can have an always-on ravend instance running, and another local ravend/raven-qt instance which connects to this node and receives blocks from it.\n \n ### [Seeds](/contrib/seeds) ###\n Utility to generate the pnSeed[] array that is compiled into the client.\n@@ -22,20 +22,20 @@ Build Tools and Keys\n ---------------------\n \n ### [Debian](/contrib/debian) ###\n-Contains files used to package bitcoind/bitcoin-qt\n-for Debian-based Linux systems. If you compile bitcoind/bitcoin-qt yourself, there are some useful files here.\n+Contains files used to package ravend/raven-qt\n+for Debian-based Linux systems. If you compile ravend/raven-qt yourself, there are some useful files here.\n \n ### [Gitian-descriptors](/contrib/gitian-descriptors) ###\n-Notes on getting Gitian builds up and running using KVM.\n+Files used during the gitian build process. For more information about gitian, see the [the Raven Core documentation repository](https://github.com/raven-core/docs).\n \n ### [Gitian-keys](/contrib/gitian-keys)\n-PGP keys used for signing Bitcoin Core [Gitian release](/doc/release-process.md) results.\n+PGP keys used for signing Raven Core [Gitian release](/doc/release-process.md) results.\n \n ### [MacDeploy](/contrib/macdeploy) ###\n Scripts and notes for Mac builds. \n \n ### [RPM](/contrib/rpm) ###\n-RPM spec file for building bitcoin-core on RPM based distributions\n+RPM spec file for building raven-core on RPM based distributions.\n \n ### [Gitian-build](/contrib/gitian-build.sh) ###\n Script for running full Gitian builds.\n@@ -44,7 +44,7 @@ Test and Verify Tools\n ---------------------\n \n ### [TestGen](/contrib/testgen) ###\n-Utilities to generate test vectors for the data-driven Bitcoin tests.\n+Utilities to generate test vectors for the data-driven Raven tests.\n \n ### [Verify Binaries](/contrib/verifybinaries) ###\n-This script attempts to download and verify the signature file SHA256SUMS.asc from bitcoin.org.\n+This script attempts to download and verify the signature file SHA256SUMS.asc from raven.org."
      },
      {
        "sha": "44d646620dc69bf2ee846272ce23999458f72bd6",
        "filename": "contrib/bitcoin-cli.bash-completion",
        "status": "modified",
        "additions": 18,
        "deletions": 17,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/bitcoin-cli.bash-completion",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/bitcoin-cli.bash-completion",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/bitcoin-cli.bash-completion?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,10 +1,11 @@\n-# bash programmable completion for bitcoin-cli(1)\n+# bash programmable completion for raven-cli(1)\n # Copyright (c) 2012-2016 The Bitcoin Core developers\n+# Copyright (c) 2017 The Raven Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-# call $bitcoin-cli for RPC\n-_bitcoin_rpc() {\n+# call $raven-cli for RPC\n+_raven_rpc() {\n     # determine already specified args necessary for RPC\n     local rpcargs=()\n     for i in ${COMP_LINE}; do\n@@ -14,23 +15,23 @@ _bitcoin_rpc() {\n                 ;;\n         esac\n     done\n-    $bitcoin_cli \"${rpcargs[@]}\" \"$@\"\n+    $raven_cli \"${rpcargs[@]}\" \"$@\"\n }\n \n # Add wallet accounts to COMPREPLY\n-_bitcoin_accounts() {\n+_raven_accounts() {\n     local accounts\n-    accounts=$(_bitcoin_rpc listaccounts | awk -F '\"' '{ print $2 }')\n+    accounts=$(_raven_rpc listaccounts | awk -F '\"' '{ print $2 }')\n     COMPREPLY=( \"${COMPREPLY[@]}\" $( compgen -W \"$accounts\" -- \"$cur\" ) )\n }\n \n-_bitcoin_cli() {\n+_raven_cli() {\n     local cur prev words=() cword\n-    local bitcoin_cli\n+    local raven_cli\n \n-    # save and use original argument to invoke bitcoin-cli for -help, help and RPC\n-    # as bitcoin-cli might not be in $PATH\n-    bitcoin_cli=\"$1\"\n+    # save and use original argument to invoke raven-cli for -help, help and RPC\n+    # as raven-cli might not be in $PATH\n+    raven_cli=\"$1\"\n \n     COMPREPLY=()\n     _get_comp_words_by_ref -n = cur prev words cword\n@@ -60,7 +61,7 @@ _bitcoin_cli() {\n     if ((cword > 3)); then\n         case ${words[cword-3]} in\n             addmultisigaddress)\n-                _bitcoin_accounts\n+                _raven_accounts\n                 return 0\n                 ;;\n             getbalance|gettxout|importaddress|importpubkey|importprivkey|listreceivedbyaccount|listreceivedbyaddress|listsinceblock)\n@@ -85,7 +86,7 @@ _bitcoin_cli() {\n                 return 0\n                 ;;\n             move|setaccount)\n-                _bitcoin_accounts\n+                _raven_accounts\n                 return 0\n                 ;;\n         esac\n@@ -101,7 +102,7 @@ _bitcoin_cli() {\n             return 0\n             ;;\n         getaccountaddress|getaddressesbyaccount|getbalance|getnewaddress|getreceivedbyaccount|listtransactions|move|sendfrom|sendmany)\n-            _bitcoin_accounts\n+            _raven_accounts\n             return 0\n             ;;\n     esac\n@@ -125,12 +126,12 @@ _bitcoin_cli() {\n \n             # only parse -help if senseful\n             if [[ -z \"$cur\" || \"$cur\" =~ ^- ]]; then\n-                helpopts=$($bitcoin_cli -help 2>&1 | awk '$1 ~ /^-/ { sub(/=.*/, \"=\"); print $1 }' )\n+                helpopts=$($raven_cli -help 2>&1 | awk '$1 ~ /^-/ { sub(/=.*/, \"=\"); print $1 }' )\n             fi\n \n             # only parse help if senseful\n             if [[ -z \"$cur\" || \"$cur\" =~ ^[a-z] ]]; then\n-                commands=$(_bitcoin_rpc help 2>/dev/null | awk '$1 ~ /^[a-z]/ { print $1; }')\n+                commands=$(_raven_rpc help 2>/dev/null | awk '$1 ~ /^[a-z]/ { print $1; }')\n             fi\n \n             COMPREPLY=( $( compgen -W \"$helpopts $commands\" -- \"$cur\" ) )\n@@ -143,7 +144,7 @@ _bitcoin_cli() {\n             ;;\n     esac\n } &&\n-complete -F _bitcoin_cli bitcoin-cli\n+complete -F _raven_cli raven-cli\n \n # Local variables:\n # mode: shell-script"
      },
      {
        "sha": "533487b157351b26934cba04c18f8c76f258d713",
        "filename": "contrib/bitcoin-qt.pro",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/bitcoin-qt.pro",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/bitcoin-qt.pro",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/bitcoin-qt.pro?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -18,4 +18,4 @@ FORMS += \\\n     ../src/qt/forms/transactiondescdialog.ui \\\n \n RESOURCES += \\\n-    ../src/qt/bitcoin.qrc\n+    ../src/qt/raven.qrc"
      },
      {
        "sha": "5a692cd1c3a08a3ceaa12e282acc3f8908caaf2d",
        "filename": "contrib/bitcoin-tx.bash-completion",
        "status": "modified",
        "additions": 10,
        "deletions": 9,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/bitcoin-tx.bash-completion",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/bitcoin-tx.bash-completion",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/bitcoin-tx.bash-completion?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,15 +1,16 @@\n-# bash programmable completion for bitcoin-tx(1)\n+# bash programmable completion for raven-tx(1)\n # Copyright (c) 2016 The Bitcoin Core developers\n+# Copyright (c) 2017 The Raven Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-_bitcoin_tx() {\n+_raven_tx() {\n     local cur prev words=() cword\n-    local bitcoin_tx\n+    local raven_tx\n \n-    # save and use original argument to invoke bitcoin-tx for -help\n+    # save and use original argument to invoke raven-tx for -help\n     # it might not be in $PATH\n-    bitcoin_tx=\"$1\"\n+    raven_tx=\"$1\"\n \n     COMPREPLY=()\n     _get_comp_words_by_ref -n =: cur prev words cword\n@@ -27,15 +28,15 @@ _bitcoin_tx() {\n \n     if [[ \"$cword\" == 1 || ( \"$prev\" != \"-create\" && \"$prev\" == -* ) ]]; then\n         # only options (or an uncompletable hex-string) allowed\n-        # parse bitcoin-tx -help for options\n+        # parse raven-tx -help for options\n         local helpopts\n-        helpopts=$($bitcoin_tx -help | sed -e '/^  -/ p' -e d )\n+        helpopts=$($raven_tx -help | sed -e '/^  -/ p' -e d )\n         COMPREPLY=( $( compgen -W \"$helpopts\" -- \"$cur\" ) )\n     else\n         # only commands are allowed\n         # parse -help for commands\n         local helpcmds\n-        helpcmds=$($bitcoin_tx -help | sed -e '1,/Commands:/d' -e 's/=.*/=/' -e '/^  [a-z]/ p' -e d )\n+        helpcmds=$($raven_tx -help | sed -e '1,/Commands:/d' -e 's/=.*/=/' -e '/^  [a-z]/ p' -e d )\n         COMPREPLY=( $( compgen -W \"$helpcmds\" -- \"$cur\" ) )\n     fi\n \n@@ -46,7 +47,7 @@ _bitcoin_tx() {\n \n     return 0\n } &&\n-complete -F _bitcoin_tx bitcoin-tx\n+complete -F _raven_tx raven-tx\n \n # Local variables:\n # mode: shell-script"
      },
      {
        "sha": "283a483162583accfb13f4067f1089b67728020b",
        "filename": "contrib/bitcoind.bash-completion",
        "status": "modified",
        "additions": 9,
        "deletions": 8,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/bitcoind.bash-completion",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/bitcoind.bash-completion",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/bitcoind.bash-completion?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,15 +1,16 @@\n-# bash programmable completion for bitcoind(1) and bitcoin-qt(1)\n+# bash programmable completion for ravend(1) and raven-qt(1)\n # Copyright (c) 2012-2016 The Bitcoin Core developers\n+# Copyright (c) 2017 The Raven Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-_bitcoind() {\n+_ravend() {\n     local cur prev words=() cword\n-    local bitcoind\n+    local ravend\n \n-    # save and use original argument to invoke bitcoind for -help\n+    # save and use original argument to invoke ravend for -help\n     # it might not be in $PATH\n-    bitcoind=\"$1\"\n+    ravend=\"$1\"\n \n     COMPREPLY=()\n     _get_comp_words_by_ref -n = cur prev words cword\n@@ -30,10 +31,10 @@ _bitcoind() {\n             ;;\n         *)\n \n-            # only parse -help if senseful\n+            # only parse -help if sensible\n             if [[ -z \"$cur\" || \"$cur\" =~ ^- ]]; then\n                 local helpopts\n-                helpopts=$($bitcoind -help 2>&1 | awk '$1 ~ /^-/ { sub(/=.*/, \"=\"); print $1 }' )\n+                helpopts=$($ravend -help 2>&1 | awk '$1 ~ /^-/ { sub(/=.*/, \"=\"); print $1 }' )\n                 COMPREPLY=( $( compgen -W \"$helpopts\" -- \"$cur\" ) )\n             fi\n \n@@ -45,7 +46,7 @@ _bitcoind() {\n             ;;\n     esac\n } &&\n-complete -F _bitcoind bitcoind bitcoin-qt\n+complete -F _ravend ravend raven-qt\n \n # Local variables:\n # mode: shell-script"
      },
      {
        "sha": "b7f598d46a20241c3e896f52aac54d79770221cb",
        "filename": "contrib/debian/README.md",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/debian/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/debian/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/README.md?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,21 +1,21 @@\n \n Debian\n ====================\n-This directory contains files used to package bitcoind/bitcoin-qt\n-for Debian-based Linux systems. If you compile bitcoind/bitcoin-qt yourself, there are some useful files here.\n+This directory contains files used to package ravend/raven-qt\n+for Debian-based Linux systems. If you compile ravend/raven-qt yourself, there are some useful files here.\n \n-## bitcoin: URI support ##\n+## raven: URI support ##\n \n \n-bitcoin-qt.desktop  (Gnome / Open Desktop)\n+raven-qt.desktop  (Gnome / Open Desktop)\n To install:\n \n-\tsudo desktop-file-install bitcoin-qt.desktop\n+\tsudo desktop-file-install raven-qt.desktop\n \tsudo update-desktop-database\n \n If you build yourself, you will either need to modify the paths in\n-the .desktop file or copy or symlink your bitcoin-qt binary to `/usr/bin`\n-and the `../../share/pixmaps/bitcoin128.png` to `/usr/share/pixmaps`\n+the .desktop file or copy or symlink your raven-qt binary to `/usr/bin`\n+and the `../../share/pixmaps/raven128.png` to `/usr/share/pixmaps`\n \n-bitcoin-qt.protocol (KDE)\n+raven-qt.protocol (KDE)\n "
      },
      {
        "sha": "7979b8a24bea6a7ef9c1118b62fd1e09a0780720",
        "filename": "contrib/debian/bitcoin-qt.desktop",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/debian/bitcoin-qt.desktop",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/debian/bitcoin-qt.desktop",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoin-qt.desktop?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,13 +1,13 @@\n [Desktop Entry]\n Encoding=UTF-8\n-Name=Bitcoin Core\n-Comment=Connect to the Bitcoin P2P Network\n-Comment[de]=Verbinde mit dem Bitcoin peer-to-peer Netzwerk\n-Comment[fr]=Bitcoin, monnaie virtuelle cryptographique pair \u00e0 pair\n-Comment[tr]=Bitcoin, e\u015ften e\u015fe kriptografik sanal para birimi\n-Exec=bitcoin-qt %u\n+Name=Raven Core\n+Comment=Connect to the Raven P2P Network\n+Comment[de]=Verbinde mit dem Raven peer-to-peer Netzwerk\n+Comment[fr]=Raven, monnaie virtuelle cryptographique pair \u00e0 pair\n+Comment[tr]=Raven, e\u015ften e\u015fe kriptografik sanal para birimi\n+Exec=raven-qt %u\n Terminal=false\n Type=Application\n-Icon=bitcoin128\n-MimeType=x-scheme-handler/bitcoin;\n+Icon=raven128\n+MimeType=x-scheme-handler/raven;\n Categories=Office;Finance;"
      },
      {
        "sha": "d1ba2bea17804ab6e8586136f8298910bce741ad",
        "filename": "contrib/debian/bitcoin-qt.install",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/debian/bitcoin-qt.install",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/debian/bitcoin-qt.install",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoin-qt.install?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,6 +1,6 @@\n-usr/local/bin/bitcoin-qt usr/bin\n-share/pixmaps/bitcoin32.xpm usr/share/pixmaps\n-share/pixmaps/bitcoin16.xpm usr/share/pixmaps\n-share/pixmaps/bitcoin128.png usr/share/pixmaps\n-debian/bitcoin-qt.desktop usr/share/applications\n-debian/bitcoin-qt.protocol usr/share/kde4/services/\n+usr/local/bin/raven-qt usr/bin\n+share/pixmaps/raven32.xpm usr/share/pixmaps\n+share/pixmaps/raven16.xpm usr/share/pixmaps\n+share/pixmaps/raven128.png usr/share/pixmaps\n+debian/raven-qt.desktop usr/share/applications\n+debian/raven-qt.protocol usr/share/kde4/services/"
      },
      {
        "sha": "3129749f240a8b23afaa36190d143a066a40f581",
        "filename": "contrib/debian/bitcoin-qt.lintian-overrides",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/debian/bitcoin-qt.lintian-overrides",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/debian/bitcoin-qt.lintian-overrides",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoin-qt.lintian-overrides?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,2 +1,2 @@\n # Linked code is Expat - only Debian packaging is GPL-2+\n-bitcoin-qt: possible-gpl-code-linked-with-openssl\n+raven-qt: possible-gpl-code-linked-with-openssl"
      },
      {
        "sha": "92d710dfddcadd6de86ca45ac5839264ca0762ba",
        "filename": "contrib/debian/bitcoin-qt.manpages",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/debian/bitcoin-qt.manpages",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/debian/bitcoin-qt.manpages",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoin-qt.manpages?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1 +1 @@\n-doc/man/bitcoin-qt.1\n+doc/man/raven-qt.1"
      },
      {
        "sha": "1f5d9f013e8e1a0c44d7a556dd8cb0c157c93542",
        "filename": "contrib/debian/bitcoin-qt.protocol",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/debian/bitcoin-qt.protocol",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/debian/bitcoin-qt.protocol",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoin-qt.protocol?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,6 +1,6 @@\n [Protocol]\n-exec=bitcoin-qt '%u'\n-protocol=bitcoin\n+exec=raven-qt '%u'\n+protocol=raven\n input=none\n output=none\n helper=true"
      },
      {
        "sha": "609ee73b3c3492aebac510ebcb47dfd7df390034",
        "filename": "contrib/debian/bitcoin-tx.bash-completion",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/debian/bitcoin-tx.bash-completion",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/debian/bitcoin-tx.bash-completion",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoin-tx.bash-completion?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1 +1 @@\n-contrib/bitcoin-tx.bash-completion\tbitcoin-tx\n+contrib/raven-tx.bash-completion\traven-tx"
      },
      {
        "sha": "e0dde98ceb1b4b8f19c91ad206258d65870cf655",
        "filename": "contrib/debian/bitcoin-tx.install",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/debian/bitcoin-tx.install",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/debian/bitcoin-tx.install",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoin-tx.install?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1 +1 @@\n-usr/local/bin/bitcoin-tx usr/bin\n+usr/local/bin/raven-tx usr/bin"
      },
      {
        "sha": "83fd82efa2477191a61cf3862b0765d718d1bf91",
        "filename": "contrib/debian/bitcoin-tx.manpages",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/debian/bitcoin-tx.manpages",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/debian/bitcoin-tx.manpages",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoin-tx.manpages?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1 +1 @@\n-doc/man/bitcoin-tx.1\n+doc/man/raven-tx.1"
      },
      {
        "sha": "25d99a1a7a766fbcced78561654af2577ba27225",
        "filename": "contrib/debian/bitcoind.bash-completion",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/debian/bitcoind.bash-completion",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/debian/bitcoind.bash-completion",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoind.bash-completion?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,2 +1,2 @@\n-contrib/bitcoind.bash-completion\tbitcoind\n-contrib/bitcoin-cli.bash-completion\tbitcoin-cli\n+contrib/ravend.bash-completion\travend\n+contrib/raven-cli.bash-completion\traven-cli"
      },
      {
        "sha": "8d1b09f6495e166c4cd5549da3a5ddbdaeb86505",
        "filename": "contrib/debian/bitcoind.examples",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/debian/bitcoind.examples",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/debian/bitcoind.examples",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoind.examples?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1 +1 @@\n-debian/examples/bitcoin.conf\n+debian/examples/raven.conf"
      },
      {
        "sha": "0e85573839c04520bb514919eae5e190519c589b",
        "filename": "contrib/debian/bitcoind.install",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/debian/bitcoind.install",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/debian/bitcoind.install",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoind.install?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,2 +1,2 @@\n-usr/local/bin/bitcoind usr/bin\n-usr/local/bin/bitcoin-cli usr/bin\n+usr/local/bin/ravend usr/bin\n+usr/local/bin/raven-cli usr/bin"
      },
      {
        "sha": "39ef18b148e1ee8e04b01fb3496fba573f69af6f",
        "filename": "contrib/debian/bitcoind.lintian-overrides",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/debian/bitcoind.lintian-overrides",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/debian/bitcoind.lintian-overrides",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoind.lintian-overrides?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,2 +1,2 @@\n # Linked code is Expat - only Debian packaging is GPL-2+\n-bitcoind: possible-gpl-code-linked-with-openssl\n+ravend: possible-gpl-code-linked-with-openssl"
      },
      {
        "sha": "fd29342e72d2269726983c2f504433202aab9efc",
        "filename": "contrib/debian/bitcoind.manpages",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/debian/bitcoind.manpages",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/debian/bitcoind.manpages",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoind.manpages?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,2 +1,2 @@\n-doc/man/bitcoind.1\n-doc/man/bitcoin-cli.1\n+doc/man/ravend.1\n+doc/man/raven-cli.1"
      },
      {
        "sha": "a4d52f9bcbd087673eef7a24c3aef39e683d878c",
        "filename": "contrib/debian/changelog",
        "status": "modified",
        "additions": 89,
        "deletions": 89,
        "changes": 178,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/debian/changelog",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/debian/changelog",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/changelog?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,364 +1,364 @@\n-bitcoin (0.14.1-trusty4) trusty; urgency=medium\n+raven (0.14.1-trusty4) trusty; urgency=medium\n \n   * Re-enable UPnP support.\n \n  -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Fri, 05 May 2017 13:28:00 -0400\n \n-bitcoin (0.14.1-trusty3) trusty; urgency=medium\n+raven (0.14.1-trusty3) trusty; urgency=medium\n \n   * Build with qt5 if we are on a non-Ubuntu (ie non-Unity) distro.\n \n  -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Thu, 04 May 2017 17:13:00 -0400\n \n-bitcoin (0.14.1-trusty2) trusty; urgency=medium\n+raven (0.14.1-trusty2) trusty; urgency=medium\n \n   * Bump minimum boost version in deps.\n \n  -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Thu, 04 May 2017 17:12:00 -0400\n \n-bitcoin (0.14.1-trusty1) trusty; urgency=medium\n+raven (0.14.1-trusty1) trusty; urgency=medium\n \n   * New upstream release.\n \n  -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Sat, 22 Apr 2017 17:10:00 -0400\n \n-bitcoin (0.14.0-trusty1) trusty; urgency=medium\n+raven (0.14.0-trusty1) trusty; urgency=medium\n \n   * New upstream release.\n \n  -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Wed, 08 Mar 2017 10:30:00 -0500\n \n-bitcoin (0.13.2-trusty1) trusty; urgency=medium\n+raven (0.13.2-trusty1) trusty; urgency=medium\n \n   * New upstream release.\n \n  -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Thu, 05 Jan 2017 09:59:00 -0500\n \n-bitcoin (0.13.1-trusty2) trusty; urgency=medium\n+raven (0.13.1-trusty2) trusty; urgency=medium\n \n-  * Revert to Qt4, due to https://github.com/bitcoin/bitcoin/issues/9038\n+  * Revert to Qt4, due to https://github.com/RavenProject/Ravencoin/issues/9038\n \n  -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Mon, 31 Oct 2016 11:16:00 -0400\n \n-bitcoin (0.13.1-trusty1) trusty; urgency=medium\n+raven (0.13.1-trusty1) trusty; urgency=medium\n \n   * New upstream release.\n-  * Backport updated bitcoin-qt.desktop from upstream master\n+  * Backport updated raven-qt.desktop from upstream master\n   * Add zmq dependency\n   * Switch to Qt5 (breaks precise, but that was already broken by C++11)\n \n  -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Thu, 27 Oct 2016 17:32:00 -0400\n \n-bitcoin (0.13.0-trusty1) trusty; urgency=medium\n+raven (0.13.0-trusty1) trusty; urgency=medium\n \n   * New upstream release.\n \n  -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Sun, 04 Sep 2016 22:09:00 -0400\n \n-bitcoin (0.12.1-trusty1) trusty; urgency=medium\n+raven (0.12.1-trusty1) trusty; urgency=medium\n \n   * New upstream release.\n \n  -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Mon, 18 Apr 2016 14:26:00 -0700\n \n-bitcoin (0.12.0-trusty6) trusty; urgency=medium\n+raven (0.12.0-trusty6) trusty; urgency=medium\n \n   * Fix program-options dep.\n \n  -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Fri, 25 Mar 2016 21:41:00 -0700\n \n-bitcoin (0.12.0-trusty5) trusty; urgency=medium\n+raven (0.12.0-trusty5) trusty; urgency=medium\n \n   * Test explicit --with-gui\n \n  -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 23 Feb 2015 23:25:00 -0800\n \n-bitcoin (0.12.0-trusty4) trusty; urgency=medium\n+raven (0.12.0-trusty4) trusty; urgency=medium\n \n   * Fix libevent-dev dep.\n \n  -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 23 Feb 2015 23:25:00 -0800\n \n-bitcoin (0.12.0-trusty3) trusty; urgency=medium\n+raven (0.12.0-trusty3) trusty; urgency=medium\n \n   * Fix precise boost dep.\n \n  -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 23 Feb 2015 19:55:00 -0800\n \n-bitcoin (0.12.0-trusty2) trusty; urgency=medium\n+raven (0.12.0-trusty2) trusty; urgency=medium\n \n   * Fix libevent dep.\n \n  -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 23 Feb 2015 19:53:00 -0800\n \n-bitcoin (0.12.0-trusty1) trusty; urgency=medium\n+raven (0.12.0-trusty1) trusty; urgency=medium\n \n   * New upstream release\n   * Various updates to contrib/debian were merged, a few were not\n \n  -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 23 Feb 2015 19:29:00 -0800\n \n-bitcoin (0.11.2-trusty1) trusty; urgency=low\n+raven (0.11.2-trusty1) trusty; urgency=low\n \n   * New upstream release.\n \n  -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Fri, 13 Nov 2015 18:39:00 -0800\n \n-bitcoin (0.11.1-trusty2) trusty; urgency=low\n+raven (0.11.1-trusty2) trusty; urgency=low\n \n   * Remove minupnpc builddep.\n \n  -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Wed, 14 Oct 2015 23:06:00 -1000\n \n-bitcoin (0.11.1-trusty1) trusty; urgency=high\n+raven (0.11.1-trusty1) trusty; urgency=high\n \n   * New upstream release.\n   * Disable all UPnP support.\n \n  -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Wed, 14 Oct 2015 13:57:00 -1000\n \n-bitcoin (0.11.0-precise1) precise; urgency=medium\n+raven (0.11.0-precise1) precise; urgency=medium\n \n   * New upstream release.\n \n  -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 14 Jul 2015 14:39:00 -1000\n \n-bitcoin (0.10.2-precise1) precise; urgency=medium\n+raven (0.10.2-precise1) precise; urgency=medium\n \n   * New upstream release.\n \n  -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Mon, 29 Jun 2015 17:33:00 -1000\n \n-bitcoin (0.10.1-precise3) precise; urgency=medium\n+raven (0.10.1-precise3) precise; urgency=medium\n \n   * Fix build dep (include python).\n \n  -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 5 May 2015 09:28:00 -1000\n \n-bitcoin (0.10.1-precise2) precise; urgency=medium\n+raven (0.10.1-precise2) precise; urgency=medium\n \n   * Fix miniupnpc dep.\n \n  -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 5 May 2015 00:33:00 -1000\n \n-bitcoin (0.10.1-precise1) precise; urgency=medium\n+raven (0.10.1-precise1) precise; urgency=medium\n \n   * New upstream release.\n \n  -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 5 May 2015 00:07:00 -1000\n \n-bitcoin (0.10.0-precise1) precise; urgency=medium\n+raven (0.10.0-precise1) precise; urgency=medium\n \n   * New upstream releases.\n \n  -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Wed, 18 Feb 2015 13:22:00 -1000\n \n-bitcoin (0.9.4-precise1) precise; urgency=high\n+raven (0.9.4-precise1) precise; urgency=high\n \n   * New upstream releases.\n \n  -- Matt Corallo (laptop - only while traveling) <matt@mattcorallo.com>  Mon, 12 Jan 2015 23:30:00 -1000\n \n-bitcoin (0.9.3-precise1) precise; urgency=medium\n+raven (0.9.3-precise1) precise; urgency=medium\n \n   * New upstream releases.\n \n  -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Fri, 26 Sep 2014 12:01:00 -0700\n \n-bitcoin (0.9.1-precise1) precise; urgency=medium\n+raven (0.9.1-precise1) precise; urgency=medium\n \n   * New upstream release.\n   * Backport pull #4019\n \n  -- Matt Corallo <matt@bluematt.me>  Sat, 19 Apr 2014 17:29:00 -0400\n \n-bitcoin (0.9.0-precise1) precise; urgency=medium\n+raven (0.9.0-precise1) precise; urgency=medium\n \n   * New upstream release.\n \n  -- Matt Corallo <matt@bluematt.me>  Thu, 20 Mar 2014 13:10:00 -0400\n \n-bitcoin (0.8.6-precise1) precise; urgency=medium\n+raven (0.8.6-precise1) precise; urgency=medium\n \n   * New upstream release.\n   * Make .desktop paths non-fixed (suggested by prusnak@github)\n \n  -- Matt Corallo <matt@bluematt.me>  Fri, 13 Dec 2013 13:31:00 -0400\n \n-bitcoin (0.8.5-precise1) precise; urgency=medium\n+raven (0.8.5-precise1) precise; urgency=medium\n \n   * New upstream release.\n \n  -- Matt Corallo <matt@bluematt.me>  Sun, 15 Sep 2013 14:02:00 -0400\n \n-bitcoin (0.8.4-precise1) precise; urgency=medium\n+raven (0.8.4-precise1) precise; urgency=medium\n \n   * New upstream release.\n \n  -- Matt Corallo <matt@bluematt.me>  Wed, 4 Sep 2013 10:25:00 -0400\n \n-bitcoin (0.8.3-natty1) natty; urgency=low\n+raven (0.8.3-natty1) natty; urgency=low\n \n   * New upstream release.\n \n  -- Matt Corallo <matt@bluematt.me>  Wed, 26 Jun 2013 00:18:00 +0100\n \n-bitcoin (0.8.2-natty1) natty; urgency=low\n+raven (0.8.2-natty1) natty; urgency=low\n \n   * New upstream release.\n \n  -- Matt Corallo <matt@bluematt.me>  Wed, 29 Mar 2013 23:23:00 +0100\n \n-bitcoin (0.8.1-natty3) natty; urgency=low\n+raven (0.8.1-natty3) natty; urgency=low\n \n   * New pixmaps\n \n  -- Jonas Schnelli <jonas.schnelli@include7.ch>  Mon, 13 May 2013 16:14:00 +0100\n \n-bitcoin (0.8.1-natty2) natty; urgency=low\n+raven (0.8.1-natty2) natty; urgency=low\n \n   * Remove dumb broken launcher script\n \n  -- Matt Corallo <matt@bluematt.me>  Sun, 24 Mar 2013 20:01:00 -0400\n \n-bitcoin (0.8.1-natty1) natty; urgency=low\n+raven (0.8.1-natty1) natty; urgency=low\n \n   * New upstream release.\n \n  -- Matt Corallo <matt@bluematt.me>  Tue, 19 Mar 2013 13:03:00 -0400\n \n-bitcoin (0.8.0-natty1) natty; urgency=low\n+raven (0.8.0-natty1) natty; urgency=low\n \n   * New upstream release.\n \n  -- Matt Corallo <matt@bluematt.me>  Sat, 23 Feb 2013 16:01:00 -0500\n \n-bitcoin (0.7.2-natty1) natty; urgency=low\n+raven (0.7.2-natty1) natty; urgency=low\n \n   * New upstream release.\n \n  -- Matt Corallo <matt@bluematt.me>  Sat, 15 Dec 2012 10:59:00 -0400\n \n-bitcoin (0.7.1-natty1) natty; urgency=low\n+raven (0.7.1-natty1) natty; urgency=low\n \n   * New upstream release.\n \n  -- Matt Corallo <matt@bluematt.me>  Wed, 24 Oct 2012 15:06:00 -0400\n \n-bitcoin (0.7.0-natty1) natty; urgency=low\n+raven (0.7.0-natty1) natty; urgency=low\n \n   * New upstream release.\n \n  -- Matt Corallo <matt@bluematt.me>  Mon, 17 Sep 2012 13:45:00 +0200\n \n-bitcoin (0.6.3-natty1) natty; urgency=low\n+raven (0.6.3-natty1) natty; urgency=low\n \n   * New upstream release.\n \n  -- Matt Corallo <matt@bluematt.me>  Mon, 25 Jun 2012 23:47:00 +0200\n \n-bitcoin (0.6.2-natty1) natty; urgency=low\n+raven (0.6.2-natty1) natty; urgency=low\n \n   * Update package description and launch scripts.\n \n  -- Matt Corallo <matt@bluematt.me>  Sat, 2 Jun 2012 16:41:00 +0200\n \n-bitcoin (0.6.2-natty0) natty; urgency=low\n+raven (0.6.2-natty0) natty; urgency=low\n \n   * New upstream release.\n \n  -- Matt Corallo <matt@bluematt.me>  Tue, 8 May 2012 16:27:00 -0500\n \n-bitcoin (0.6.1-natty0) natty; urgency=low\n+raven (0.6.1-natty0) natty; urgency=low\n \n   * New upstream release.\n \n  -- Matt Corallo <matt@bluematt.me>  Sun, 6 May 2012 20:09:00 -0500\n \n-bitcoin (0.6.0-natty0) natty; urgency=low\n+raven (0.6.0-natty0) natty; urgency=low\n \n   * New upstream release.\n-  * Add GNOME/KDE support for bitcoin-qt's bitcoin: URI support.\n+  * Add GNOME/KDE support for raven-qt's raven: URI support.\n     Thanks to luke-jr for the KDE .protocol file.\n \n  -- Matt Corallo <matt@bluematt.me>  Sat, 31 Mar 2012 15:35:00 -0500\n \n-bitcoin (0.5.3-natty1) natty; urgency=low\n+raven (0.5.3-natty1) natty; urgency=low\n \n   * Mark for upload to PPA.\n \n  -- Matt Corallo <matt@bluematt.me>  Wed, 14 Mar 2012 23:06:00 -0400\n \n-bitcoin (0.5.3-natty0) natty; urgency=low\n+raven (0.5.3-natty0) natty; urgency=low\n \n   * New upstream release.\n \n- -- Luke Dashjr <luke+bitcoin+deb@dashjr.org>  Tue, 10 Jan 2012 15:57:00 -0500\n+ -- Luke Dashjr <luke+raven+deb@dashjr.org>  Tue, 10 Jan 2012 15:57:00 -0500\n \n-bitcoin (0.5.2-natty1) natty; urgency=low\n+raven (0.5.2-natty1) natty; urgency=low\n \n   * Remove mentions on anonymity in package descriptions and manpage.\n-    These should never have been there, bitcoin isnt anonymous without\n+    These should never have been there, raven isnt anonymous without\n     a ton of work that virtually no users will ever be willing and\n     capable of doing\n \n  -- Matt Corallo <matt@bluematt.me>  Sat, 7 Jan 2012 13:37:00 -0500\n \n-bitcoin (0.5.2-natty0) natty; urgency=low\n+raven (0.5.2-natty0) natty; urgency=low\n \n   * New upstream release.\n \n- -- Luke Dashjr <luke+bitcoin+deb@dashjr.org>  Fri, 16 Dec 2011 17:57:00 -0500\n+ -- Luke Dashjr <luke+raven+deb@dashjr.org>  Fri, 16 Dec 2011 17:57:00 -0500\n \n-bitcoin (0.5.1-natty0) natty; urgency=low\n+raven (0.5.1-natty0) natty; urgency=low\n \n   * New upstream release.\n \n  -- Matt Corallo <matt@bluematt.me>  Fri, 16 Dec 2011 13:27:00 -0500\n \n-bitcoin (0.5.0-natty0) natty; urgency=low\n+raven (0.5.0-natty0) natty; urgency=low\n \n   * New upstream release.\n \n  -- Matt Corallo <matt@bluematt.me>  Mon, 21 Nov 2011 11:32:00 -0500\n \n-bitcoin (0.5.0~rc7-natty0) natty; urgency=low\n+raven (0.5.0~rc7-natty0) natty; urgency=low\n \n   * New upstream release candidate.\n \n  -- Matt Corallo <matt@bluematt.me>  Sun, 20 Nov 2011 17:08:00 -0500\n \n-bitcoin (0.5.0~rc3-natty0) natty; urgency=low\n+raven (0.5.0~rc3-natty0) natty; urgency=low\n \n   * New upstream release candidate.\n-  * Don't set rpcpassword for bitcoin-qt.\n+  * Don't set rpcpassword for raven-qt.\n \n  -- Matt Corallo <matt@bluematt.me>  Tue, 8 Nov 2011 11:56:00 -0400\n \n-bitcoin (0.5.0~rc1-natty1) natty; urgency=low\n+raven (0.5.0~rc1-natty1) natty; urgency=low\n \n-  * Add test_bitcoin to build test\n+  * Add test_raven to build test\n   * Fix clean\n   * Remove uneccessary build-dependancies\n \n  -- Matt Corallo <matt@bluematt.me>  Wed, 26 Oct 2011 14:37:18 -0400\n \n-bitcoin (0.5.0~rc1-natty0) natty; urgency=low\n+raven (0.5.0~rc1-natty0) natty; urgency=low\n \n   * Mark for natty\n   * Fix broken build\n   * Fix copyright listing\n-  * Remove bitcoin: URL handler until bitcoin actually has support for it (Oops)\n+  * Remove raven: URL handler until raven actually has support for it (Oops)\n \n  -- Matt Corallo <matt@bluematt.me>  Wed, 26 Oct 2011 14:37:18 -0400\n \n-bitcoin (0.5.0~rc1-2) experimental; urgency=low\n+raven (0.5.0~rc1-2) experimental; urgency=low\n \n-  * Add bitcoin-qt\n+  * Add raven-qt\n \n  -- Matt Corallo <matt@bluematt.me>  Tue, 25 Oct 2011 15:24:18 -0400\n \n-bitcoin (0.5.0~rc1-1) experimental; urgency=low\n+raven (0.5.0~rc1-1) experimental; urgency=low\n \n   * New upstream prerelease.\n   * Add Github as alternate upstream source in watch file.\n@@ -369,7 +369,7 @@ bitcoin (0.5.0~rc1-1) experimental; urgency=low\n \n  -- Jonas Smedegaard <dr@jones.dk>  Fri, 14 Oct 2011 00:16:18 +0200\n \n-bitcoin (0.4.0-1) unstable; urgency=low\n+raven (0.4.0-1) unstable; urgency=low\n \n   * New upstream release.\n   * Stop repackaging source tarballs: No DFSG-violating stripping left.\n@@ -378,7 +378,7 @@ bitcoin (0.4.0-1) unstable; urgency=low\n   * Drop dpkg-source local-options hint: Declared options are default\n     since dpkg-source 1.16.1.\n     + Add irc URL to Upstream-Contact.\n-    + Add comment on Bitcoin Developers to catch-all Files section.\n+    + Add comment on Raven Developers to catch-all Files section.\n     + Add Files sections for newly readded src/cryptopp/* (new custom\n       BSD-like license), and newly added doc/build-osx.txt and\n       src/makefile.osx (Expat).\n@@ -397,13 +397,13 @@ bitcoin (0.4.0-1) unstable; urgency=low\n \n  -- Jonas Smedegaard <dr@jones.dk>  Wed, 05 Oct 2011 01:48:53 +0200\n \n-bitcoin (0.3.24~dfsg-1) unstable; urgency=low\n+raven (0.3.24~dfsg-1) unstable; urgency=low\n \n   * New upstream release.\n \n   [ Jonas Smedegaard ]\n   * Improve various usage hints:\n-    + Explicitly mention in long description that bitcoind contains\n+    + Explicitly mention in long description that ravend contains\n       daemon and command-line interface.\n     + Extend README.Debian with section on lack of GUI, and add primary\n       headline.\n@@ -424,7 +424,7 @@ bitcoin (0.3.24~dfsg-1) unstable; urgency=low\n \n  -- Jonas Smedegaard <dr@jones.dk>  Tue, 19 Jul 2011 15:08:54 +0200\n \n-bitcoin (0.3.21~dfsg-2) unstable; urgency=low\n+raven (0.3.21~dfsg-2) unstable; urgency=low\n \n   * Enable UPNP support:\n     + Drop patch 1006.\n@@ -433,7 +433,7 @@ bitcoin (0.3.21~dfsg-2) unstable; urgency=low\n \n  -- Jonas Smedegaard <dr@jones.dk>  Sat, 28 May 2011 15:52:44 +0200\n \n-bitcoin (0.3.21~dfsg-1) unstable; urgency=low\n+raven (0.3.21~dfsg-1) unstable; urgency=low\n \n   * New upstream release.\n   * Refresh patches.\n@@ -446,7 +446,7 @@ bitcoin (0.3.21~dfsg-1) unstable; urgency=low\n   * Bump policy compliance to standards-version 3.9.2.\n   * Shorten Vcs-Browser paragraph in control file.\n   * Fix mention daemon (not CLI tools) in short description.\n-  * Stop conflicting with or replace bitcoin-cli: Only transitional, no\n+  * Stop conflicting with or replace raven-cli: Only transitional, no\n     longer needed.\n   * Link against unversioned berkeleydb. Update NEWS and README.Debian\n     accordingly (and improve wording while at it).\n@@ -458,7 +458,7 @@ bitcoin (0.3.21~dfsg-1) unstable; urgency=low\n \n  -- Jonas Smedegaard <dr@jones.dk>  Tue, 17 May 2011 15:31:24 +0200\n \n-bitcoin (0.3.20.2~dfsg-2) unstable; urgency=medium\n+raven (0.3.20.2~dfsg-2) unstable; urgency=medium\n \n   * Fix have wrapper script execute real binary (not loop executing\n     itself).\n@@ -468,36 +468,36 @@ bitcoin (0.3.20.2~dfsg-2) unstable; urgency=medium\n \n  -- Jonas Smedegaard <dr@jones.dk>  Wed, 16 Mar 2011 09:11:06 +0100\n \n-bitcoin (0.3.20.2~dfsg-1) unstable; urgency=low\n+raven (0.3.20.2~dfsg-1) unstable; urgency=low\n \n   * New upstream release.\n-  * Fix provide and replace former package name bitcoin-cli.\n+  * Fix provide and replace former package name raven-cli.\n     Closes: bug#618439. Thanks to Shane Wegner.\n \n  -- Jonas Smedegaard <dr@jones.dk>  Tue, 15 Mar 2011 11:41:43 +0100\n \n-bitcoin (0.3.20.01~dfsg-1) unstable; urgency=low\n+raven (0.3.20.01~dfsg-1) unstable; urgency=low\n \n   * New upstream release.\n \n   [ Micah Anderson ]\n   * Add myself as uploader.\n \n   [ Jonas Smedegaard ]\n-  * Add wrapper for bitcoind to ease initial startup.\n+  * Add wrapper for ravend to ease initial startup.\n   * Update patches:\n     + Drop patch 2002: Applied upstream.\n     + Add patch 1005 to add phtread linker option.\n       Closes: bug#615619. Thanks to Shane Wegner.\n     + Refresh patches.\n   * Extend copyright years in rules file header.\n   * Rewrite copyright file using draft svn166 of DEP5 format.\n-  * Rename binary package to bitcoind (from bincoin-cli).\n+  * Rename binary package to ravend (from bincoin-cli).\n     Closes: bug#614025. Thanks to Luke-Jr.\n \n  -- Jonas Smedegaard <dr@jones.dk>  Tue, 01 Mar 2011 15:55:04 +0100\n \n-bitcoin (0.3.19~dfsg-6) unstable; urgency=low\n+raven (0.3.19~dfsg-6) unstable; urgency=low\n \n   * Fix override agressive optimizations.\n   * Fix tighten build-dependencies to really fit backporting to Lenny:\n@@ -508,7 +508,7 @@ bitcoin (0.3.19~dfsg-6) unstable; urgency=low\n \n  -- Jonas Smedegaard <dr@jones.dk>  Mon, 17 Jan 2011 19:48:35 +0100\n \n-bitcoin (0.3.19~dfsg-5) unstable; urgency=low\n+raven (0.3.19~dfsg-5) unstable; urgency=low\n \n   * Fix lower Boost fallback-build-dependencies to 1.35, really\n     available in Lenny.\n@@ -523,11 +523,11 @@ bitcoin (0.3.19~dfsg-5) unstable; urgency=low\n \n  -- Jonas Smedegaard <dr@jones.dk>  Mon, 17 Jan 2011 16:04:48 +0100\n \n-bitcoin (0.3.19~dfsg-4) unstable; urgency=low\n+raven (0.3.19~dfsg-4) unstable; urgency=low\n \n   [ Micah Anderson ]\n-  * Provide example bitcoin.conf.\n-  * Add bitcoind(1) and bitcoin.conf(5) man pages.\n+  * Provide example raven.conf.\n+  * Add ravend(1) and raven.conf(5) man pages.\n \n   [ Jonas Smedegaard ]\n   * Ease backporting:\n@@ -539,7 +539,7 @@ bitcoin (0.3.19~dfsg-4) unstable; urgency=low\n \n  -- Jonas Smedegaard <dr@jones.dk>  Mon, 17 Jan 2011 14:00:48 +0100\n \n-bitcoin (0.3.19~dfsg-3) unstable; urgency=low\n+raven (0.3.19~dfsg-3) unstable; urgency=low\n \n   * Document in copyright file files excluded from repackaged source.\n   * Update copyright file:\n@@ -554,7 +554,7 @@ bitcoin (0.3.19~dfsg-3) unstable; urgency=low\n \n  -- Jonas Smedegaard <dr@jones.dk>  Fri, 07 Jan 2011 22:50:57 +0100\n \n-bitcoin (0.3.19~dfsg-2) unstable; urgency=low\n+raven (0.3.19~dfsg-2) unstable; urgency=low\n \n   * Adjust build options to use optimized miner only for amd64. Fixes\n     FTBFS on i386 (and other archs, if compiling anywhere else at all).\n@@ -569,7 +569,7 @@ bitcoin (0.3.19~dfsg-2) unstable; urgency=low\n \n  -- Jonas Smedegaard <dr@jones.dk>  Wed, 29 Dec 2010 00:27:54 +0100\n \n-bitcoin (0.3.19~dfsg-1) unstable; urgency=low\n+raven (0.3.19~dfsg-1) unstable; urgency=low\n \n   [ Jonas Smedegaard ]\n   * Initial release."
      },
      {
        "sha": "863deb389837c36661ddf212204f68fde717611a",
        "filename": "contrib/debian/control",
        "status": "modified",
        "additions": 15,
        "deletions": 15,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/debian/control",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/debian/control",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/control?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,4 +1,4 @@\n-Source: bitcoin\n+Source: raven\n Section: utils\n Priority: optional\n Maintainer: Matt Corallo <matt@mattcorallo.com>\n@@ -26,45 +26,45 @@ Build-Depends: debhelper,\n  python,\n  libzmq3-dev\n Standards-Version: 3.9.2\n-Homepage: https://bitcoincore.org/\n-Vcs-Git: git://github.com/bitcoin/bitcoin.git\n-Vcs-Browser: https://github.com/bitcoin/bitcoin\n+Homepage: https://ravencoin.org/\n+Vcs-Git: git://github.com/RavenProject/Ravencoin.git\n+Vcs-Browser: https://github.com/RavenProject/Ravencoin\n \n-Package: bitcoind\n+Package: ravend\n Architecture: any\n Depends: ${shlibs:Depends}, ${misc:Depends}\n Description: peer-to-peer network based digital currency - daemon\n- Bitcoin is a free open source peer-to-peer electronic cash system that\n+ Raven is a free open source peer-to-peer electronic cash system that\n  is completely decentralized, without the need for a central server or\n  trusted parties.  Users hold the crypto keys to their own money and\n  transact directly with each other, with the help of a P2P network to\n  check for double-spending.\n  .\n- This package provides the daemon, bitcoind, and the CLI tool\n- bitcoin-cli to interact with the daemon.\n+ This package provides the daemon, ravend, and the CLI tool\n+ raven-cli to interact with the daemon.\n \n-Package: bitcoin-qt\n+Package: raven-qt\n Architecture: any\n Depends: ${shlibs:Depends}, ${misc:Depends}\n Description: peer-to-peer network based digital currency - Qt GUI\n- Bitcoin is a free open source peer-to-peer electronic cash system that\n+ Raven is a free open source peer-to-peer electronic cash system that\n  is completely decentralized, without the need for a central server or\n  trusted parties.  Users hold the crypto keys to their own money and\n  transact directly with each other, with the help of a P2P network to\n  check for double-spending.\n  .\n- This package provides Bitcoin-Qt, a GUI for Bitcoin based on Qt.\n+ This package provides Raven-Qt, a GUI for Raven based on Qt.\n \n-Package: bitcoin-tx\n+Package: raven-tx\n Architecture: any\n Depends: ${shlibs:Depends}, ${misc:Depends}\n Description: peer-to-peer digital currency - standalone transaction tool\n- Bitcoin is a free open source peer-to-peer electronic cash system that\n+ Raven is a free open source peer-to-peer electronic cash system that\n  is completely decentralized, without the need for a central server or\n  trusted parties.  Users hold the crypto keys to their own money and\n  transact directly with each other, with the help of a P2P network to\n  check for double-spending.\n  .\n- This package provides bitcoin-tx, a command-line transaction creation\n- tool which can be used without a bitcoin daemon.  Some means of\n+ This package provides raven-tx, a command-line transaction creation\n+ tool which can be used without a raven daemon.  Some means of\n  exchanging minimal transaction data with peers is still required."
      },
      {
        "sha": "50f947ab24786dafcb23248ec0f8b2749225556a",
        "filename": "contrib/debian/copyright",
        "status": "modified",
        "additions": 9,
        "deletions": 9,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/debian/copyright",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/debian/copyright",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/copyright?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,13 +1,13 @@\n Format: http://www.debian.org/doc/packaging-manuals/copyright-format/1.0/\n-Upstream-Name: Bitcoin\n+Upstream-Name: Raven\n Upstream-Contact: Satoshi Nakamoto <satoshin@gmx.com>\n- irc://#bitcoin@freenode.net\n-Source: https://github.com/bitcoin/bitcoin\n+ irc://#raven@freenode.net\n+Source: https://github.com/RavenProject/Ravencoin\n \n Files: *\n-Copyright: 2009-2017, Bitcoin Core Developers\n+Copyright: 2009-2017, Raven Core Developers\n License: Expat\n-Comment: The Bitcoin Core Developers encompasses the current developers listed on bitcoin.org,\n+Comment: The Raven Core Developers encompasses the current developers listed on raven.org,\n          as well as the numerous contributors to the project.\n \n Files: debian/*\n@@ -78,12 +78,12 @@ License: Expat\n Comment: Modifications of Stephan Hutchings Typicons\n \n Files: src/qt/res/icons/about.png\n-       src/qt/res/icons/bitcoin.*\n-       share/pixmaps/bitcoin*\n-       src/qt/res/src/bitcoin.svg\n+       src/qt/res/icons/raven.*\n+       share/pixmaps/raven*\n+       src/qt/res/src/raven.svg\n Copyright: Bitboy, Jonas Schnelli\n License: public-domain\n-Comment: Site: https://bitcointalk.org/?topic=1756.0\n+Comment: Site: https://raventalk.org/?topic=1756.0\n \n \n License: Expat"
      },
      {
        "sha": "dc20dd067123d9c3cba9912f134bc104272463e1",
        "filename": "contrib/debian/examples/bitcoin.conf",
        "status": "modified",
        "additions": 16,
        "deletions": 16,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/debian/examples/bitcoin.conf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/debian/examples/bitcoin.conf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/examples/bitcoin.conf?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,10 +1,10 @@\n ##\n-## bitcoin.conf configuration file. Lines beginning with # are comments.\n+## raven.conf configuration file. Lines beginning with # are comments.\n ##\n  \n # Network-related settings:\n \n-# Run on the test network instead of the real bitcoin network.\n+# Run on the test network instead of the real raven network.\n #testnet=0\n \n # Run a regression test network\n@@ -44,11 +44,11 @@\n \n # Use as many addnode= settings as you like to connect to specific peers\n #addnode=69.164.218.197\n-#addnode=10.0.0.2:8333\n+#addnode=10.0.0.2:8767\n \n # Alternatively use as many connect= settings as you like to connect ONLY to specific peers\n #connect=69.164.218.197\n-#connect=10.0.0.1:8333\n+#connect=10.0.0.1:8767\n \n # Listening mode, enabled by default except when 'connect' is being used\n #listen=1\n@@ -57,30 +57,30 @@\n #maxconnections=\n \n #\n-# JSON-RPC options (for controlling a running Bitcoin/bitcoind process)\n+# JSON-RPC options (for controlling a running Raven/ravend process)\n #\n \n-# server=1 tells Bitcoin-Qt and bitcoind to accept JSON-RPC commands\n+# server=1 tells Raven-Qt and ravend to accept JSON-RPC commands\n #server=0\n \n # Bind to given address to listen for JSON-RPC connections. Use [host]:port notation for IPv6.\n # This option can be specified multiple times (default: bind to all interfaces)\n #rpcbind=<addr>\n \n # If no rpcpassword is set, rpc cookie auth is sought. The default `-rpccookiefile` name\n-# is .cookie and found in the `-datadir` being used for bitcoind. This option is typically used\n+# is .cookie and found in the `-datadir` being used for ravend. This option is typically used\n # when the server and client are run as the same user.\n #\n # If not, you must set rpcuser and rpcpassword to secure the JSON-RPC api. The first\n # method(DEPRECATED) is to set this pair for the server and client:\n #rpcuser=Ulysseys\n #rpcpassword=YourSuperGreatPasswordNumber_DO_NOT_USE_THIS_OR_YOU_WILL_GET_ROBBED_385593\n #\n-# The second method `rpcauth` can be added to server startup argument. It is set at intialization time\n+# The second method `rpcauth` can be added to server startup argument. It is set at initialization time\n # using the output from the script in share/rpcuser/rpcuser.py after providing a username:\n #\n # ./share/rpcuser/rpcuser.py alice\n-# String to be appended to bitcoin.conf:\n+# String to be appended to raven.conf:\n # rpcauth=alice:f7efda5c189b999524f151318c0c86$d5b51b3beffbc02b724e5d095828e0bc8b2456e9ac8757ae3211a5d9b16a22ae\n # Your password:\n # DONT_USE_THIS_YOU_WILL_GET_ROBBED_8ak1gI25KFTvjovL3gAM967mies3E=\n@@ -92,7 +92,7 @@\n # You can even add multiple entries of these to the server conf file, and client can use any of them:\n # rpcauth=bob:b2dd077cb54591a2f3139e69a897ac$4e71f08d48b4347cf8eff3815c0e25ae2e9a4340474079f55705f40574f4ec99\n \n-# How many seconds bitcoin will wait for a complete RPC HTTP request.\n+# How many seconds raven will wait for a complete RPC HTTP request.\n # after the HTTP connection is established. \n #rpcclienttimeout=30\n \n@@ -103,16 +103,16 @@\n # NOTE: opening up the RPC port to hosts outside your local trusted network is NOT RECOMMENDED,\n # because the rpcpassword is transmitted over the network unencrypted.\n \n-# server=1 tells Bitcoin-Qt to accept JSON-RPC commands.\n-# it is also read by bitcoind to determine if RPC should be enabled \n+# server=1 tells Raven-Qt to accept JSON-RPC commands.\n+# it is also read by ravend to determine if RPC should be enabled \n #rpcallowip=10.1.1.34/255.255.255.0\n #rpcallowip=1.2.3.4/24\n #rpcallowip=2001:db8:85a3:0:0:8a2e:370:7334/96\n \n # Listen for RPC connections on this TCP port:\n-#rpcport=8332\n+#rpcport=8766\n \n-# You can use Bitcoin or bitcoind to send commands to Bitcoin/bitcoind\n+# You can use Raven or ravend to send commands to Raven/ravend\n # running on another host using this option:\n #rpcconnect=127.0.0.1\n \n@@ -126,7 +126,7 @@\n # both prior transactions and several dozen future transactions.\n #keypool=100\n \n-# Pay an optional transaction fee every time you send bitcoins.  Transactions with fees\n+# Pay an optional transaction fee every time you send ravens.  Transactions with fees\n # are more likely than free transactions to be included in generated blocks, so may\n # be validated sooner.\n #paytxfee=0.00\n@@ -140,7 +140,7 @@\n \n # User interface options\n \n-# Start Bitcoin minimized\n+# Start Raven minimized\n #min=1\n \n # Minimize to the system tray"
      },
      {
        "sha": "de6d4527938f8b13edaa9b0d51de1a357c2598f7",
        "filename": "contrib/debian/rules",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/debian/rules",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/debian/rules",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/rules?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,16 +1,16 @@\n #!/usr/bin/make -f\n # -*- mode: makefile; coding: utf-8 -*-\n \n-#DEB_MAKE_CHECK_TARGET = test_bitcoin\n-#build/bitcoind::\n-#\t$(if $(filter nocheck,$(DEB_BUILD_OPTIONS)),,src/test_bitcoin)\n+#DEB_MAKE_CHECK_TARGET = test_raven\n+#build/ravend::\n+#\t$(if $(filter nocheck,$(DEB_BUILD_OPTIONS)),,src/test_raven)\n \n %:\n \tdh --with bash-completion $@\n \n override_dh_auto_clean:\n \tif [ -f Makefile ]; then $(MAKE) distclean; fi\n-\trm -rf Makefile.in aclocal.m4 configure src/Makefile.in src/bitcoin-config.h.in src/build-aux src/qt/Makefile.in src/qt/test/Makefile.in src/test/Makefile.in\n+\trm -rf Makefile.in aclocal.m4 configure src/Makefile.in src/raven-config.h.in src/build-aux src/qt/Makefile.in src/qt/test/Makefile.in src/test/Makefile.in\n \n QT=$(shell dpkg-vendor --derives-from Ubuntu && echo qt4 || echo qt5)\n "
      },
      {
        "sha": "adef549c58055b310a05fa497b9efdabc10678af",
        "filename": "contrib/debian/watch",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/debian/watch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/debian/watch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/watch?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -2,4 +2,4 @@\n version=3\n # use qa.debian.org redirector; see man uscan\n opts=uversionmangle=s/(\\d)(alpha|beta|rc)/$1~$2/,dversionmangle=s/~dfsg\\d*// \\\n- http://githubredir.debian.net/github/bitcoin/bitcoin v(.*).tar.gz\n+ http://githubredir.debian.net/github/raven/raven v(.*).tar.gz"
      },
      {
        "sha": "5cf45ddc974cc5b8af209221406aaa8befd6a728",
        "filename": "contrib/devtools/README.md",
        "status": "modified",
        "additions": 20,
        "deletions": 16,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/devtools/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/devtools/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/README.md?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -23,7 +23,7 @@ git diff -U0 HEAD~1.. | ./contrib/devtools/clang-format-diff.py -p1 -i -v\n copyright\\_header.py\n ====================\n \n-Provides utilities for managing copyright headers of `The Bitcoin Core\n+Provides utilities for managing copyright headers of `The Raven Core\n developers` in repository source files. It has three subcommands:\n \n ```\n@@ -42,31 +42,35 @@ Specifying `verbose` will list the full filenames of files of each category.\n \n copyright\\_header.py update \\<base\\_directory\\> [verbose]\n ---------------------------------------------------------\n-Updates all the copyright headers of `The Bitcoin Core developers` which were\n+Updates all the copyright headers of `The Raven Core developers` which were\n changed in a year more recent than is listed. For example:\n ```\n // Copyright (c) <firstYear>-<lastYear> The Bitcoin Core developers\n+// Copyright (c) 2017 The Raven Core developers\n ```\n will be updated to:\n ```\n // Copyright (c) <firstYear>-<lastModifiedYear> The Bitcoin Core developers\n+// Copyright (c) 2017 The Raven Core developers\n ```\n where `<lastModifiedYear>` is obtained from the `git log` history.\n \n This subcommand also handles copyright headers that have only a single year. In\n those cases:\n ```\n // Copyright (c) <year> The Bitcoin Core developers\n+// Copyright (c) 2017 The Raven Core developers\n ```\n will be updated to:\n ```\n // Copyright (c) <year>-<lastModifiedYear> The Bitcoin Core developers\n+// Copyright (c) 2017 The Raven Core developers\n ```\n where the update is appropriate.\n \n copyright\\_header.py insert \\<file\\>\n ------------------------------------\n-Inserts a copyright header for `The Bitcoin Core developers` at the top of the\n+Inserts a copyright header for `The Raven Core developers` at the top of the\n file in either Python or C++ style as determined by the file extension. If the\n file is a Python file and it has  `#!` starting the first line, the header is\n inserted in the line below it.\n@@ -76,7 +80,7 @@ The copyright dates will be set to be `<year_introduced>-<current_year>` where\n `<year_introduced>` is equal to `<current_year>`, it will be set as a single\n year rather than two hyphenated years.\n \n-If the file already has a copyright for `The Bitcoin Core developers`, the\n+If the file already has a copyright for `The Raven Core developers`, the\n script will exit.\n \n gen-manpages.sh\n@@ -93,10 +97,10 @@ the commit it claims to have been updated to.\n \n To use, make sure that you have fetched the upstream repository branch in which the subtree is\n maintained:\n-* for `src/secp256k1`: https://github.com/bitcoin-core/secp256k1.git (branch master)\n-* for `src/leveldb`: https://github.com/bitcoin-core/leveldb.git (branch bitcoin-fork)\n-* for `src/univalue`: https://github.com/bitcoin-core/univalue.git (branch master)\n-* for `src/crypto/ctaes`: https://github.com/bitcoin-core/ctaes.git (branch master)\n+* for `src/secp256k1`: https://github.com/raven-core/secp256k1.git (branch master)\n+* for `src/leveldb`: https://github.com/raven-core/leveldb.git (branch raven-fork)\n+* for `src/univalue`: https://github.com/raven-core/univalue.git (branch master)\n+* for `src/crypto/ctaes`: https://github.com/raven-core/ctaes.git (branch master)\n \n Usage: `git-subtree-check.sh DIR (COMMIT)`\n \n@@ -112,7 +116,7 @@ For example:\n   ./github-merge.py 3077\n \n (in any git repository) will help you merge pull request #3077 for the\n-bitcoin/bitcoin repository.\n+raven/raven repository.\n \n What it does:\n * Fetch master and the pull request.\n@@ -130,16 +134,16 @@ couldn't mess with the sources.\n \n Setup\n ---------\n-Configuring the github-merge tool for the bitcoin repository is done in the following way:\n+Configuring the github-merge tool for the raven repository is done in the following way:\n \n-    git config githubmerge.repository bitcoin/bitcoin\n+    git config githubmerge.repository raven/raven\n     git config githubmerge.testcmd \"make -j4 check\" (adapt to whatever you want to use for testing)\n     git config --global user.signingkey mykeyid (if you want to GPG sign)\n \n optimize-pngs.py\n ================\n \n-A script to optimize png files in the bitcoin\n+A script to optimize png files in the raven\n repository (requires pngcrush).\n \n security-check.py and test-security-check.py\n@@ -162,10 +166,10 @@ If only supported symbols are used the return value will be 0 and the output wil\n \n If there are 'unsupported' symbols, the return value will be 1 a list like this will be printed:\n \n-    .../64/test_bitcoin: symbol memcpy from unsupported version GLIBC_2.14\n-    .../64/test_bitcoin: symbol __fdelt_chk from unsupported version GLIBC_2.15\n-    .../64/test_bitcoin: symbol std::out_of_range::~out_of_range() from unsupported version GLIBCXX_3.4.15\n-    .../64/test_bitcoin: symbol _ZNSt8__detail15_List_nod from unsupported version GLIBCXX_3.4.15\n+    .../64/test_raven: symbol memcpy from unsupported version GLIBC_2.14\n+    .../64/test_raven: symbol __fdelt_chk from unsupported version GLIBC_2.15\n+    .../64/test_raven: symbol std::out_of_range::~out_of_range() from unsupported version GLIBCXX_3.4.15\n+    .../64/test_raven: symbol _ZNSt8__detail15_List_nod from unsupported version GLIBCXX_3.4.15\n \n update-translations.py\n ======================"
      },
      {
        "sha": "c0202406971ee1aca15acceac7f8b81bbb32c4dd",
        "filename": "contrib/devtools/check-doc.py",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/devtools/check-doc.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/devtools/check-doc.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/check-doc.py?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,5 +1,6 @@\n #!/usr/bin/env python\n # Copyright (c) 2015-2016 The Bitcoin Core developers\n+# Copyright (c) 2017 The Raven Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -12,6 +13,7 @@\n \n from subprocess import check_output\n import re\n+import sys\n \n FOLDER_GREP = 'src'\n FOLDER_TEST = 'src/test/'\n@@ -21,7 +23,7 @@\n REGEX_ARG = re.compile(r'(?:map(?:Multi)?Args(?:\\.count\\(|\\[)|Get(?:Bool)?Arg\\()\\\"(\\-[^\\\"]+?)\\\"')\n REGEX_DOC = re.compile(r'HelpMessageOpt\\(\\\"(\\-[^\\\"=]+?)(?:=|\\\")')\n # list unsupported, deprecated and duplicate args as they need no documentation\n-SET_DOC_OPTIONAL = set(['-rpcssl', '-benchmark', '-h', '-help', '-socks', '-tor', '-debugnet', '-whitelistalwaysrelay', '-prematurewitness', '-walletprematurewitness', '-promiscuousmempoolflags', '-blockminsize', '-dbcrashratio'])\n+SET_DOC_OPTIONAL = set(['-rpcssl', '-benchmark', '-h', '-help', '-socks', '-tor', '-debugnet', '-whitelistalwaysrelay', '-prematurewitness', '-walletprematurewitness', '-promiscuousmempoolflags', '-blockminsize', '-dbcrashratio', '-forcecompactdb', '-usehd'])\n \n def main():\n   used = check_output(CMD_GREP_ARGS, shell=True)\n@@ -39,7 +41,7 @@ def main():\n   print \"Args unknown     : %s\" % len(args_unknown)\n   print args_unknown\n \n-  exit(len(args_need_doc))\n+  sys.exit(len(args_need_doc))\n \n if __name__ == \"__main__\":\n     main()"
      },
      {
        "sha": "ea834018320a878ff17e709344264e716f6a9cd9",
        "filename": "contrib/devtools/check-rpc-mappings.py",
        "status": "added",
        "additions": 159,
        "deletions": 0,
        "changes": 159,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/devtools/check-rpc-mappings.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/devtools/check-rpc-mappings.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/check-rpc-mappings.py?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -0,0 +1,159 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017 The Bitcoin Core developers\n+# Copyright (c) 2017 The Raven Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Check RPC argument consistency.\"\"\"\n+\n+from collections import defaultdict\n+import os\n+import re\n+import sys\n+\n+# Source files (relative to root) to scan for dispatch tables\n+SOURCES = [\n+    \"src/rpc/server.cpp\",\n+    \"src/rpc/blockchain.cpp\",\n+    \"src/rpc/mining.cpp\",\n+    \"src/rpc/misc.cpp\",\n+    \"src/rpc/net.cpp\",\n+    \"src/rpc/rawtransaction.cpp\",\n+    \"src/wallet/rpcwallet.cpp\",\n+]\n+# Source file (relative to root) containing conversion mapping\n+SOURCE_CLIENT = 'src/rpc/client.cpp'\n+# Argument names that should be ignored in consistency checks\n+IGNORE_DUMMY_ARGS = {'dummy', 'arg0', 'arg1', 'arg2', 'arg3', 'arg4', 'arg5', 'arg6', 'arg7', 'arg8', 'arg9'}\n+\n+class RPCCommand:\n+    def __init__(self, name, args):\n+        self.name = name\n+        self.args = args\n+\n+class RPCArgument:\n+    def __init__(self, names, idx):\n+        self.names = names\n+        self.idx = idx\n+        self.convert = False\n+\n+def parse_string(s):\n+    assert s[0] == '\"'\n+    assert s[-1] == '\"'\n+    return s[1:-1]\n+\n+def process_commands(fname):\n+    \"\"\"Find and parse dispatch table in implementation file `fname`.\"\"\"\n+    cmds = []\n+    in_rpcs = False\n+    with open(fname, \"r\") as f:\n+        for line in f:\n+            line = line.rstrip()\n+            if not in_rpcs:\n+                if re.match(\"static const CRPCCommand .*\\[\\] =\", line):\n+                    in_rpcs = True\n+            else:\n+                if line.startswith('};'):\n+                    in_rpcs = False\n+                elif '{' in line and '\"' in line:\n+                    m = re.search('{ *(\"[^\"]*\"), *(\"[^\"]*\"), *&([^,]*), *{([^}]*)} *},', line)\n+                    assert m, 'No match to table expression: %s' % line\n+                    name = parse_string(m.group(2))\n+                    args_str = m.group(4).strip()\n+                    if args_str:\n+                        args = [RPCArgument(parse_string(x.strip()).split('|'), idx) for idx, x in enumerate(args_str.split(','))]\n+                    else:\n+                        args = []\n+                    cmds.append(RPCCommand(name, args))\n+    assert not in_rpcs and cmds, \"Something went wrong with parsing the C++ file: update the regexps\"\n+    return cmds\n+\n+def process_mapping(fname):\n+    \"\"\"Find and parse conversion table in implementation file `fname`.\"\"\"\n+    cmds = []\n+    in_rpcs = False\n+    with open(fname, \"r\") as f:\n+        for line in f:\n+            line = line.rstrip()\n+            if not in_rpcs:\n+                if line == 'static const CRPCConvertParam vRPCConvertParams[] =':\n+                    in_rpcs = True\n+            else:\n+                if line.startswith('};'):\n+                    in_rpcs = False\n+                elif '{' in line and '\"' in line:\n+                    m = re.search('{ *(\"[^\"]*\"), *([0-9]+) *, *(\"[^\"]*\") *},', line)\n+                    assert m, 'No match to table expression: %s' % line\n+                    name = parse_string(m.group(1))\n+                    idx = int(m.group(2))\n+                    argname = parse_string(m.group(3))\n+                    cmds.append((name, idx, argname))\n+    assert not in_rpcs and cmds\n+    return cmds\n+\n+def main():\n+    root = sys.argv[1]\n+\n+    # Get all commands from dispatch tables\n+    cmds = []\n+    for fname in SOURCES:\n+        cmds += process_commands(os.path.join(root, fname))\n+\n+    cmds_by_name = {}\n+    for cmd in cmds:\n+        cmds_by_name[cmd.name] = cmd\n+\n+    # Get current convert mapping for client\n+    client = SOURCE_CLIENT\n+    mapping = set(process_mapping(os.path.join(root, client)))\n+\n+    print('* Checking consistency between dispatch tables and vRPCConvertParams')\n+\n+    # Check mapping consistency\n+    errors = 0\n+    for (cmdname, argidx, argname) in mapping:\n+        try:\n+            rargnames = cmds_by_name[cmdname].args[argidx].names\n+        except IndexError:\n+            print('ERROR: %s argument %i (named %s in vRPCConvertParams) is not defined in dispatch table' % (cmdname, argidx, argname))\n+            errors += 1\n+            continue\n+        if argname not in rargnames:\n+            print('ERROR: %s argument %i is named %s in vRPCConvertParams but %s in dispatch table' % (cmdname, argidx, argname, rargnames), file=sys.stderr)\n+            errors += 1\n+\n+    # Check for conflicts in vRPCConvertParams conversion\n+    # All aliases for an argument must either be present in the\n+    # conversion table, or not. Anything in between means an oversight\n+    # and some aliases won't work.\n+    for cmd in cmds:\n+        for arg in cmd.args:\n+            convert = [((cmd.name, arg.idx, argname) in mapping) for argname in arg.names]\n+            if any(convert) != all(convert):\n+                print('ERROR: %s argument %s has conflicts in vRPCConvertParams conversion specifier %s' % (cmd.name, arg.names, convert))\n+                errors += 1\n+            arg.convert = all(convert)\n+\n+    # Check for conversion difference by argument name.\n+    # It is preferable for API consistency that arguments with the same name\n+    # have the same conversion, so bin by argument name.\n+    all_methods_by_argname = defaultdict(list)\n+    converts_by_argname = defaultdict(list)\n+    for cmd in cmds:\n+        for arg in cmd.args:\n+            for argname in arg.names:\n+                all_methods_by_argname[argname].append(cmd.name)\n+                converts_by_argname[argname].append(arg.convert)\n+\n+    for argname, convert in converts_by_argname.items():\n+        if all(convert) != any(convert):\n+            if argname in IGNORE_DUMMY_ARGS:\n+                # these are testing or dummy, don't warn for them\n+                continue\n+            print('WARNING: conversion mismatch for argument named %s (%s)' %\n+                  (argname, list(zip(all_methods_by_argname[argname], converts_by_argname[argname]))))\n+\n+    sys.exit(errors > 0)\n+\n+\n+if __name__ == '__main__':\n+    main()"
      },
      {
        "sha": "18790e25a4a5808eaad2e34b64d013011b085dce",
        "filename": "contrib/devtools/commit-script-check.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/devtools/commit-script-check.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/devtools/commit-script-check.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/commit-script-check.sh?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,5 +1,6 @@\n #!/bin/sh\n # Copyright (c) 2017 The Bitcoin Core developers\n+# Copyright (c) 2017 The Raven Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "ca71664a45624a6069eb43ab0cca9e7732848cfd",
        "filename": "contrib/devtools/copyright_header.py",
        "status": "modified",
        "additions": 26,
        "deletions": 19,
        "changes": 45,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/devtools/copyright_header.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/devtools/copyright_header.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/copyright_header.py?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,5 +1,6 @@\n #!/usr/bin/env python3\n # Copyright (c) 2016 The Bitcoin Core developers\n+# Copyright (c) 2017 The Raven Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -20,13 +21,13 @@\n     'src/secp256k1/include/secp256k1_ecdh.h',\n     'src/secp256k1/include/secp256k1_recovery.h',\n     'src/secp256k1/include/secp256k1_schnorr.h',\n-    'src/secp256k1/src/java/org_bitcoin_NativeSecp256k1.c',\n-    'src/secp256k1/src/java/org_bitcoin_NativeSecp256k1.h',\n-    'src/secp256k1/src/java/org_bitcoin_Secp256k1Context.c',\n-    'src/secp256k1/src/java/org_bitcoin_Secp256k1Context.h',\n+    'src/secp256k1/src/java/org_raven_NativeSecp256k1.c',\n+    'src/secp256k1/src/java/org_raven_NativeSecp256k1.h',\n+    'src/secp256k1/src/java/org_raven_Secp256k1Context.c',\n+    'src/secp256k1/src/java/org_raven_Secp256k1Context.h',\n     # auto generated:\n     'src/univalue/lib/univalue_escapes.h',\n-    'src/qt/bitcoinstrings.cpp',\n+    'src/qt/ravenstrings.cpp',\n     'src/chainparamsseeds.h',\n     # other external copyrights:\n     'src/tinyformat.h',\n@@ -83,11 +84,11 @@ def compile_copyright_regex(copyright_style, year_style, name):\n \n EXPECTED_HOLDER_NAMES = [\n     \"Satoshi Nakamoto\\n\",\n-    \"The Bitcoin Core developers\\n\",\n-    \"The Bitcoin Core developers \\n\",\n-    \"Bitcoin Core Developers\\n\",\n-    \"the Bitcoin Core developers\\n\",\n-    \"The Bitcoin developers\\n\",\n+    \"The Raven Core developers\\n\",\n+    \"The Raven Core developers \\n\",\n+    \"Raven Core Developers\\n\",\n+    \"the Raven Core developers\\n\",\n+    \"The Raven developers\\n\",\n     \"The LevelDB Authors\\. All rights reserved\\.\\n\",\n     \"BitPay Inc\\.\\n\",\n     \"BitPay, Inc\\.\\n\",\n@@ -277,7 +278,7 @@ def exec_report(base_directory, verbose):\n     $ ./copyright_header.py report <base_directory> [verbose]\n \n Arguments:\n-    <base_directory> - The base directory of a bitcoin source code repository.\n+    <base_directory> - The base directory of a raven source code repository.\n     [verbose] - Includes a list of every file of each subcategory in the report.\n \"\"\"\n \n@@ -340,7 +341,7 @@ def write_file_lines(filename, file_lines):\n COPYRIGHT = 'Copyright \\(c\\)'\n YEAR = \"20[0-9][0-9]\"\n YEAR_RANGE = '(%s)(-%s)?' % (YEAR, YEAR)\n-HOLDER = 'The Bitcoin Core developers'\n+HOLDER = 'The Raven Core developers'\n UPDATEABLE_LINE_COMPILED = re.compile(' '.join([COPYRIGHT, YEAR_RANGE, HOLDER]))\n \n def get_updatable_copyright_line(file_lines):\n@@ -408,32 +409,36 @@ def exec_update_header_year(base_directory):\n ################################################################################\n \n UPDATE_USAGE = \"\"\"\n-Updates all the copyright headers of \"The Bitcoin Core developers\" which were\n+Updates all the copyright headers of \"The Raven Core developers\" which were\n changed in a year more recent than is listed. For example:\n \n // Copyright (c) <firstYear>-<lastYear> The Bitcoin Core developers\n+// Copyright (c) 2017 The Raven Core developers\n \n will be updated to:\n \n // Copyright (c) <firstYear>-<lastModifiedYear> The Bitcoin Core developers\n+// Copyright (c) 2017 The Raven Core developers\n \n where <lastModifiedYear> is obtained from the 'git log' history.\n \n This subcommand also handles copyright headers that have only a single year. In those cases:\n \n // Copyright (c) <year> The Bitcoin Core developers\n+// Copyright (c) 2017 The Raven Core developers\n \n will be updated to:\n \n // Copyright (c) <year>-<lastModifiedYear> The Bitcoin Core developers\n+// Copyright (c) 2017 The Raven Core developers\n \n where the update is appropriate.\n \n Usage:\n     $ ./copyright_header.py update <base_directory>\n \n Arguments:\n-    <base_directory> - The base directory of a bitcoin source code repository.\n+    <base_directory> - The base directory of a raven source code repository.\n \"\"\"\n \n def print_file_action_message(filename, action):\n@@ -459,6 +464,7 @@ def get_header_lines(header, start_year, end_year):\n \n CPP_HEADER = '''\n // Copyright (c) %s The Bitcoin Core developers\n+// Copyright (c) 2017 The Raven Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n '''\n@@ -468,6 +474,7 @@ def get_cpp_header_lines_to_insert(start_year, end_year):\n \n PYTHON_HEADER = '''\n # Copyright (c) %s The Bitcoin Core developers\n+# Copyright (c) 2017 The Raven Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n '''\n@@ -521,7 +528,7 @@ def insert_cpp_header(filename, file_lines, start_year, end_year):\n def exec_insert_header(filename, style):\n     file_lines = read_file_lines(filename)\n     if file_already_has_core_copyright(file_lines):\n-        sys.exit('*** %s already has a copyright by The Bitcoin Core developers'\n+        sys.exit('*** %s already has a copyright by The Core developers'\n                  % (filename))\n     start_year, end_year = get_git_change_year_range(filename)\n     if style == 'python':\n@@ -534,7 +541,7 @@ def exec_insert_header(filename, style):\n ################################################################################\n \n INSERT_USAGE = \"\"\"\n-Inserts a copyright header for \"The Bitcoin Core developers\" at the top of the\n+Inserts a copyright header for \"The Raven Core developers\" at the top of the\n file in either Python or C++ style as determined by the file extension. If the\n file is a Python file and it has a '#!' starting the first line, the header is\n inserted in the line below it.\n@@ -548,14 +555,14 @@ def exec_insert_header(filename, style):\n \n \"<current_year>\"\n \n-If the file already has a copyright for \"The Bitcoin Core developers\", the\n+If the file already has a copyright for \"The Raven Core developers\", the\n script will exit.\n \n Usage:\n     $ ./copyright_header.py insert <file>\n \n Arguments:\n-    <file> - A source file in the bitcoin repository.\n+    <file> - A source file in the raven repository.\n \"\"\"\n \n def insert_cmd(argv):\n@@ -580,7 +587,7 @@ def insert_cmd(argv):\n ################################################################################\n \n USAGE = \"\"\"\n-copyright_header.py - utilities for managing copyright headers of 'The Bitcoin\n+copyright_header.py - utilities for managing copyright headers of 'The Raven\n Core developers' in repository source files.\n \n Usage:"
      },
      {
        "sha": "915a70a3feb42dbaee80a553b77b1fe8d7301c02",
        "filename": "contrib/devtools/gen-manpages.sh",
        "status": "modified",
        "additions": 12,
        "deletions": 12,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/devtools/gen-manpages.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/devtools/gen-manpages.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/gen-manpages.sh?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -4,26 +4,26 @@ TOPDIR=${TOPDIR:-$(git rev-parse --show-toplevel)}\n SRCDIR=${SRCDIR:-$TOPDIR/src}\n MANDIR=${MANDIR:-$TOPDIR/doc/man}\n \n-BITCOIND=${BITCOIND:-$SRCDIR/bitcoind}\n-BITCOINCLI=${BITCOINCLI:-$SRCDIR/bitcoin-cli}\n-BITCOINTX=${BITCOINTX:-$SRCDIR/bitcoin-tx}\n-BITCOINQT=${BITCOINQT:-$SRCDIR/qt/bitcoin-qt}\n+RAVEND=${RAVEND:-$SRCDIR/ravend}\n+RAVENCLI=${RAVENCLI:-$SRCDIR/raven-cli}\n+RAVENTX=${RAVENTX:-$SRCDIR/raven-tx}\n+RAVENQT=${RAVENQT:-$SRCDIR/qt/raven-qt}\n \n-[ ! -x $BITCOIND ] && echo \"$BITCOIND not found or not executable.\" && exit 1\n+[ ! -x $RAVEND ] && echo \"$RAVEND not found or not executable.\" && exit 1\n \n # The autodetected version git tag can screw up manpage output a little bit\n-BTCVER=($($BITCOINCLI --version | head -n1 | awk -F'[ -]' '{ print $6, $7 }'))\n+RVNVER=($($RAVENCLI --version | head -n1 | awk -F'[ -]' '{ print $6, $7 }'))\n \n # Create a footer file with copyright content.\n-# This gets autodetected fine for bitcoind if --version-string is not set,\n-# but has different outcomes for bitcoin-qt and bitcoin-cli.\n+# This gets autodetected fine for ravend if --version-string is not set,\n+# but has different outcomes for raven-qt and raven-cli.\n echo \"[COPYRIGHT]\" > footer.h2m\n-$BITCOIND --version | sed -n '1!p' >> footer.h2m\n+$RAVEND --version | sed -n '1!p' >> footer.h2m\n \n-for cmd in $BITCOIND $BITCOINCLI $BITCOINTX $BITCOINQT; do\n+for cmd in $RAVEND $RAVENCLI $RAVENTX $RAVENQT; do\n   cmdname=\"${cmd##*/}\"\n-  help2man -N --version-string=${BTCVER[0]} --include=footer.h2m -o ${MANDIR}/${cmdname}.1 ${cmd}\n-  sed -i \"s/\\\\\\-${BTCVER[1]}//g\" ${MANDIR}/${cmdname}.1\n+  help2man -N --version-string=${RVNVER[0]} --include=footer.h2m -o ${MANDIR}/${cmdname}.1 ${cmd}\n+  sed -i \"s/\\\\\\-${RVNVER[1]}//g\" ${MANDIR}/${cmdname}.1\n done\n \n rm -f footer.h2m"
      },
      {
        "sha": "0eb7ebb6fddaefd88570920f03904b95f4a28e1b",
        "filename": "contrib/devtools/git-subtree-check.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/devtools/git-subtree-check.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/devtools/git-subtree-check.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/git-subtree-check.sh?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,5 +1,6 @@\n #!/bin/sh\n # Copyright (c) 2015 The Bitcoin Core developers\n+# Copyright (c) 2017 The Raven Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "4e81e5caba0161db005abb5bb2b87faaff8972bd",
        "filename": "contrib/devtools/github-merge.py",
        "status": "modified",
        "additions": 26,
        "deletions": 27,
        "changes": 53,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/devtools/github-merge.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/devtools/github-merge.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/github-merge.py?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2016-2017 Bitcoin Core Developers\n+# Copyright (c) 2016-2017 Raven Core Developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -20,6 +20,7 @@\n import argparse\n import hashlib\n import subprocess\n+import sys\n import json,codecs\n try:\n     from urllib.request import Request,urlopen\n@@ -158,11 +159,11 @@ def main():\n     if repo is None:\n         print(\"ERROR: No repository configured. Use this command to set:\", file=stderr)\n         print(\"git config githubmerge.repository <owner>/<repo>\", file=stderr)\n-        exit(1)\n+        sys.exit(1)\n     if signingkey is None:\n         print(\"ERROR: No GPG signing key set. Set one using:\",file=stderr)\n         print(\"git config --global user.signingkey <key>\",file=stderr)\n-        exit(1)\n+        sys.exit(1)\n \n     host_repo = host+\":\"+repo # shortcut for push/pull target\n \n@@ -173,8 +174,9 @@ def main():\n     # Receive pull information from github\n     info = retrieve_pr_info(repo,pull)\n     if info is None:\n-        exit(1)\n+        sys.exit(1)\n     title = info['title'].strip()\n+    body = info['body'].strip()\n     # precedence order for destination branch argument:\n     #   - command line argument\n     #   - githubmerge.branch setting\n@@ -193,27 +195,23 @@ def main():\n         subprocess.check_call([GIT,'checkout','-q',branch])\n     except subprocess.CalledProcessError as e:\n         print(\"ERROR: Cannot check out branch %s.\" % (branch), file=stderr)\n-        exit(3)\n+        sys.exit(3)\n     try:\n-        subprocess.check_call([GIT,'fetch','-q',host_repo,'+refs/pull/'+pull+'/*:refs/heads/pull/'+pull+'/*'])\n+        subprocess.check_call([GIT,'fetch','-q',host_repo,'+refs/pull/'+pull+'/*:refs/heads/pull/'+pull+'/*',\n+                                                          '+refs/heads/'+branch+':refs/heads/'+base_branch])\n     except subprocess.CalledProcessError as e:\n-        print(\"ERROR: Cannot find pull request #%s on %s.\" % (pull,host_repo), file=stderr)\n-        exit(3)\n+        print(\"ERROR: Cannot find pull request #%s or branch %s on %s.\" % (pull,branch,host_repo), file=stderr)\n+        sys.exit(3)\n     try:\n         subprocess.check_call([GIT,'log','-q','-1','refs/heads/'+head_branch], stdout=devnull, stderr=stdout)\n     except subprocess.CalledProcessError as e:\n         print(\"ERROR: Cannot find head of pull request #%s on %s.\" % (pull,host_repo), file=stderr)\n-        exit(3)\n+        sys.exit(3)\n     try:\n         subprocess.check_call([GIT,'log','-q','-1','refs/heads/'+merge_branch], stdout=devnull, stderr=stdout)\n     except subprocess.CalledProcessError as e:\n         print(\"ERROR: Cannot find merge of pull request #%s on %s.\" % (pull,host_repo), file=stderr)\n-        exit(3)\n-    try:\n-        subprocess.check_call([GIT,'fetch','-q',host_repo,'+refs/heads/'+branch+':refs/heads/'+base_branch])\n-    except subprocess.CalledProcessError as e:\n-        print(\"ERROR: Cannot find branch %s on %s.\" % (branch,host_repo), file=stderr)\n-        exit(3)\n+        sys.exit(3)\n     subprocess.check_call([GIT,'checkout','-q',base_branch])\n     subprocess.call([GIT,'branch','-q','-D',local_merge_branch], stderr=devnull)\n     subprocess.check_call([GIT,'checkout','-q','-b',local_merge_branch])\n@@ -229,35 +227,36 @@ def main():\n             firstline = 'Merge #%s' % (pull,)\n         message = firstline + '\\n\\n'\n         message += subprocess.check_output([GIT,'log','--no-merges','--topo-order','--pretty=format:%h %s (%an)',base_branch+'..'+head_branch]).decode('utf-8')\n+        message += '\\n\\nPull request description:\\n\\n  ' + body.replace('\\n', '\\n  ') + '\\n'\n         try:\n             subprocess.check_call([GIT,'merge','-q','--commit','--no-edit','--no-ff','-m',message.encode('utf-8'),head_branch])\n         except subprocess.CalledProcessError as e:\n             print(\"ERROR: Cannot be merged cleanly.\",file=stderr)\n             subprocess.check_call([GIT,'merge','--abort'])\n-            exit(4)\n+            sys.exit(4)\n         logmsg = subprocess.check_output([GIT,'log','--pretty=format:%s','-n','1']).decode('utf-8')\n         if logmsg.rstrip() != firstline.rstrip():\n             print(\"ERROR: Creating merge failed (already merged?).\",file=stderr)\n-            exit(4)\n+            sys.exit(4)\n \n         symlink_files = get_symlink_files()\n         for f in symlink_files:\n             print(\"ERROR: File %s was a symlink\" % f)\n         if len(symlink_files) > 0:\n-            exit(4)\n+            sys.exit(4)\n \n         # Put tree SHA512 into the message\n         try:\n             first_sha512 = tree_sha512sum()\n             message += '\\n\\nTree-SHA512: ' + first_sha512\n         except subprocess.CalledProcessError as e:\n-            printf(\"ERROR: Unable to compute tree hash\")\n-            exit(4)\n+            print(\"ERROR: Unable to compute tree hash\")\n+            sys.exit(4)\n         try:\n             subprocess.check_call([GIT,'commit','--amend','-m',message.encode('utf-8')])\n         except subprocess.CalledProcessError as e:\n-            printf(\"ERROR: Cannot update message.\",file=stderr)\n-            exit(4)\n+            print(\"ERROR: Cannot update message.\", file=stderr)\n+            sys.exit(4)\n \n         print_merge_details(pull, title, branch, base_branch, head_branch)\n         print()\n@@ -266,7 +265,7 @@ def main():\n         if testcmd:\n             if subprocess.call(testcmd,shell=True):\n                 print(\"ERROR: Running %s failed.\" % testcmd,file=stderr)\n-                exit(5)\n+                sys.exit(5)\n \n             # Show the created merge.\n             diff = subprocess.check_output([GIT,'diff',merge_branch+'..'+local_merge_branch])\n@@ -277,7 +276,7 @@ def main():\n                 if reply.lower() == 'ignore':\n                     print(\"Difference with github ignored.\",file=stderr)\n                 else:\n-                    exit(6)\n+                    sys.exit(6)\n         else:\n             # Verify the result manually.\n             print(\"Dropping you on a shell so you can try building/testing the merged source.\",file=stderr)\n@@ -290,7 +289,7 @@ def main():\n         second_sha512 = tree_sha512sum()\n         if first_sha512 != second_sha512:\n             print(\"ERROR: Tree hash changed unexpectedly\",file=stderr)\n-            exit(8)\n+            sys.exit(8)\n \n         # Sign the merge commit.\n         print_merge_details(pull, title, branch, base_branch, head_branch)\n@@ -304,7 +303,7 @@ def main():\n                     print(\"Error while signing, asking again.\",file=stderr)\n             elif reply == 'x':\n                 print(\"Not signing off on merge, exiting.\",file=stderr)\n-                exit(1)\n+                sys.exit(1)\n \n         # Put the result in branch.\n         subprocess.check_call([GIT,'checkout','-q',branch])\n@@ -324,7 +323,7 @@ def main():\n             subprocess.check_call([GIT,'push',host_repo,'refs/heads/'+branch])\n             break\n         elif reply == 'x':\n-            exit(1)\n+            sys.exit(1)\n \n if __name__ == '__main__':\n     main()"
      },
      {
        "sha": "56e6790d6b5c3868f6d6172dd158c914371b0b16",
        "filename": "contrib/devtools/lint-all.sh",
        "status": "added",
        "additions": 23,
        "deletions": 0,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/devtools/lint-all.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/devtools/lint-all.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/lint-all.sh?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -0,0 +1,23 @@\n+#!/bin/bash\n+#\n+# Copyright (c) 2017 The Bitcoin Core developers\n+# Copyright (c) 2017 The Raven Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#\n+# This script runs all contrib/devtools/lint-*.sh files, and fails if any exit\n+# with a non-zero status code.\n+\n+set -u\n+\n+SCRIPTDIR=$(dirname \"${BASH_SOURCE[0]}\")\n+LINTALL=$(basename \"${BASH_SOURCE[0]}\")\n+\n+for f in \"${SCRIPTDIR}\"/lint-*.sh; do\n+  if [ \"$(basename \"$f\")\" != \"$LINTALL\" ]; then\n+    if ! \"$f\"; then\n+      echo \"^---- failure generated from $f\"\n+      exit 1\n+    fi\n+  fi\n+done"
      },
      {
        "sha": "ac05e3b459008a00ae9e79cfa747f51fa4ef0756",
        "filename": "contrib/devtools/lint-whitespace.sh",
        "status": "added",
        "additions": 89,
        "deletions": 0,
        "changes": 89,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/devtools/lint-whitespace.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/devtools/lint-whitespace.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/lint-whitespace.sh?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -0,0 +1,89 @@\n+#!/bin/bash\n+#\n+# Copyright (c) 2017 The Bitcoin Core developers\n+# Copyright (c) 2017 The Raven Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#\n+# Check for new lines in diff that introduce trailing whitespace.\n+\n+# We can't run this check unless we know the commit range for the PR.\n+if [ -z \"${TRAVIS_COMMIT_RANGE}\" ]; then\n+  echo \"Cannot run lint-whitespace.sh without commit range. To run locally, use:\"\n+  echo \"TRAVIS_COMMIT_RANGE='<commit range>' .lint-whitespace.sh\"\n+  echo \"For example:\"\n+  echo \"TRAVIS_COMMIT_RANGE='47ba2c3...ee50c9e' .lint-whitespace.sh\"\n+  exit 1\n+fi\n+\n+showdiff() {\n+  if ! git diff -U0 \"${TRAVIS_COMMIT_RANGE}\" -- \".\" \":(exclude)src/leveldb/\" \":(exclude)src/secp256k1/\" \":(exclude)src/univalue/\" \":(exclude)doc/release-notes/\"; then\n+    echo \"Failed to get a diff\"\n+    exit 1\n+  fi\n+}\n+\n+showcodediff() {\n+  if ! git diff -U0 \"${TRAVIS_COMMIT_RANGE}\" -- *.cpp *.h *.md *.py *.sh \":(exclude)src/leveldb/\" \":(exclude)src/secp256k1/\" \":(exclude)src/univalue/\" \":(exclude)doc/release-notes/\"; then\n+    echo \"Failed to get a diff\"\n+    exit 1\n+  fi\n+}\n+\n+RET=0\n+\n+# Check if trailing whitespace was found in the diff.\n+if showdiff | grep -E -q '^\\+.*\\s+$'; then\n+  echo \"This diff appears to have added new lines with trailing whitespace.\"\n+  echo \"The following changes were suspected:\"\n+  FILENAME=\"\"\n+  SEEN=0\n+  while read -r line; do\n+    if [[ \"$line\" =~ ^diff ]]; then\n+      FILENAME=\"$line\"\n+      SEEN=0\n+    elif [[ \"$line\" =~ ^@@ ]]; then\n+      LINENUMBER=\"$line\"\n+    else\n+      if [ \"$SEEN\" -eq 0 ]; then\n+        # The first time a file is seen with trailing whitespace, we print the\n+        # filename (preceded by a newline).\n+        echo\n+        echo \"$FILENAME\"\n+        echo \"$LINENUMBER\"\n+        SEEN=1\n+      fi\n+      echo \"$line\"\n+    fi\n+  done < <(showdiff | grep -E '^(diff --git |@@|\\+.*\\s+$)')\n+  RET=1\n+fi\n+\n+# Check if tab characters were found in the diff.\n+if showcodediff | grep -P -q '^\\+.*\\t'; then\n+  echo \"This diff appears to have added new lines with tab characters instead of spaces.\"\n+  echo \"The following changes were suspected:\"\n+  FILENAME=\"\"\n+  SEEN=0\n+  while read -r line; do\n+    if [[ \"$line\" =~ ^diff ]]; then\n+      FILENAME=\"$line\"\n+      SEEN=0\n+    elif [[ \"$line\" =~ ^@@ ]]; then\n+      LINENUMBER=\"$line\"\n+    else\n+      if [ \"$SEEN\" -eq 0 ]; then\n+        # The first time a file is seen with a tab character, we print the\n+        # filename (preceded by a newline).\n+        echo\n+        echo \"$FILENAME\"\n+        echo \"$LINENUMBER\"\n+        SEEN=1\n+      fi\n+      echo \"$line\"\n+    fi\n+  done < <(showcodediff | grep -P '^(diff --git |@@|\\+.*\\t)')\n+  RET=1\n+fi\n+\n+exit $RET"
      },
      {
        "sha": "1e5541ba143aba3f993286b5b59c31d4851e4546",
        "filename": "contrib/devtools/optimize-pngs.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/devtools/optimize-pngs.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/devtools/optimize-pngs.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/optimize-pngs.py?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,5 +1,6 @@\n #!/usr/bin/env python\n # Copyright (c) 2014-2016 The Bitcoin Core developers\n+# Copyright (c) 2017 The Raven Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n '''"
      },
      {
        "sha": "e22e4461e75cd454dbbeead401e46d66c2c96113",
        "filename": "contrib/devtools/security-check.py",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/devtools/security-check.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/devtools/security-check.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/security-check.py?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,5 +1,6 @@\n #!/usr/bin/env python\n # Copyright (c) 2015-2016 The Bitcoin Core developers\n+# Copyright (c) 2017 The Raven Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n '''\n@@ -212,5 +213,5 @@ def identify_executable(executable):\n         except IOError:\n             print('%s: cannot open' % filename)\n             retval = 1\n-    exit(retval)\n+    sys.exit(retval)\n "
      },
      {
        "sha": "f276611fc5129c618b649c1380bd8987cb2b9d0f",
        "filename": "contrib/devtools/symbol-check.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/devtools/symbol-check.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/devtools/symbol-check.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/symbol-check.py?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -53,7 +53,7 @@\n CPPFILT_CMD = os.getenv('CPPFILT', '/usr/bin/c++filt')\n # Allowed NEEDED libraries\n ALLOWED_LIBRARIES = {\n-# bitcoind and bitcoin-qt\n+# ravend and raven-qt\n b'libgcc_s.so.1', # GCC base support\n b'libc.so.6', # C library\n b'libpthread.so.0', # threading\n@@ -62,7 +62,7 @@\n b'librt.so.1', # real-time (clock)\n b'ld-linux-x86-64.so.2', # 64-bit dynamic linker\n b'ld-linux.so.2', # 32-bit dynamic linker\n-# bitcoin-qt only\n+# raven-qt only\n b'libX11-xcb.so.1', # part of X11\n b'libX11.so.6', # part of X11\n b'libxcb.so.1', # part of X11\n@@ -159,6 +159,6 @@ def read_libraries(filename):\n                 print('%s: NEEDED library %s is not allowed' % (filename, library_name.decode('utf-8')))\n                 retval = 1\n \n-    exit(retval)\n+    sys.exit(retval)\n \n "
      },
      {
        "sha": "7e9fd9a33e82fed918c58b9d2ba496ae2a8522a7",
        "filename": "contrib/devtools/test-security-check.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/devtools/test-security-check.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/devtools/test-security-check.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/test-security-check.py?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,5 +1,6 @@\n #!/usr/bin/env python2\n # Copyright (c) 2015-2016 The Bitcoin Core developers\n+# Copyright (c) 2017 The Raven Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n '''"
      },
      {
        "sha": "e79bdc6b4fe56bfb80fbd78c580e9b64109a0419",
        "filename": "contrib/devtools/update-translations.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/devtools/update-translations.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/devtools/update-translations.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/update-translations.py?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -26,7 +26,7 @@\n # Name of transifex tool\n TX = 'tx'\n # Name of source language file\n-SOURCE_LANG = 'bitcoin_en.ts'\n+SOURCE_LANG = 'raven_en.ts'\n # Directory with locale files\n LOCALE_DIR = 'src/qt/locale'\n # Minimum number of messages for translation to be considered at all\n@@ -36,12 +36,12 @@ def check_at_repository_root():\n     if not os.path.exists('.git'):\n         print('No .git directory found')\n         print('Execute this script at the root of the repository', file=sys.stderr)\n-        exit(1)\n+        sys.exit(1)\n \n def fetch_all_translations():\n     if subprocess.call([TX, 'pull', '-f', '-a']):\n         print('Error while fetching translations', file=sys.stderr)\n-        exit(1)\n+        sys.exit(1)\n \n def find_format_specifiers(s):\n     '''Find all format specifiers in a string.'''"
      },
      {
        "sha": "4f5654075e6070aa35042b92a54c64e6c4dd41ba",
        "filename": "contrib/gitian-build.sh",
        "status": "modified",
        "additions": 36,
        "deletions": 37,
        "changes": 73,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/gitian-build.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/gitian-build.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-build.sh?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,4 +1,5 @@\n # Copyright (c) 2016 The Bitcoin Core developers\n+# Copyright (c) 2017 The Raven Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -17,12 +18,12 @@ osx=true\n SIGNER=\n VERSION=\n commit=false\n-url=https://github.com/bitcoin/bitcoin\n+url=https://github.com/RavenProject/Ravencoin\n proc=2\n mem=2000\n lxc=true\n osslTarUrl=http://downloads.sourceforge.net/project/osslsigncode/osslsigncode/osslsigncode-1.7.1.tar.gz\n-osslPatchUrl=https://bitcoincore.org/cfields/osslsigncode-Backports-to-1.7.1.patch\n+osslPatchUrl=https://ravencoin.org/cfields/osslsigncode-Backports-to-1.7.1.patch\n scriptName=$(basename -- \"$0\")\n signProg=\"gpg --detach-sign\"\n commitFiles=true\n@@ -31,24 +32,24 @@ commitFiles=true\n read -d '' usage <<- EOF\n Usage: $scriptName [-c|u|v|b|s|B|o|h|j|m|] signer version\n \n-Run this script from the directory containing the bitcoin, gitian-builder, gitian.sigs, and bitcoin-detached-sigs.\n+Run this script from the directory containing the raven, gitian-builder, gitian.sigs, and raven-detached-sigs.\n \n Arguments:\n signer          GPG signer to sign each build assert file\n version\t\tVersion number, commit, or branch to build. If building a commit or branch, the -c option must be specified\n \n Options:\n -c|--commit\tIndicate that the version argument is for a commit or branch\n--u|--url\tSpecify the URL of the repository. Default is https://github.com/bitcoin/bitcoin\n--v|--verify \tVerify the gitian build\n--b|--build\tDo a gitian build\n+-u|--url\tSpecify the URL of the repository. Default is https://github.com/RavenProject/Ravencoin\n+-v|--verify \tVerify the Gitian build\n+-b|--build\tDo a Gitian build\n -s|--sign\tMake signed binaries for Windows and Mac OSX\n -B|--buildsign\tBuild both signed and unsigned binaries\n -o|--os\t\tSpecify which Operating Systems the build is for. Default is lwx. l for linux, w for windows, x for osx\n -j\t\tNumber of processes to use. Default 2\n -m\t\tMemory to allocate in MiB. Default 2000\n --kvm           Use KVM instead of LXC\n---setup         Setup the gitian building environment. Uses KVM. If you want to use lxc, use the --lxc option. Only works on Debian-based systems (Ubuntu, Debian)\n+--setup         Set up the Gitian building environment. Uses KVM. If you want to use lxc, use the --lxc option. Only works on Debian-based systems (Ubuntu, Debian)\n --detach-sign   Create the assert file for detached signing. Will not commit anything.\n --no-commit     Do not commit anything to git\n -h|--help\tPrint this help message\n@@ -179,8 +180,6 @@ done\n if [[ $lxc = true ]]\n then\n     export USE_LXC=1\n-    export LXC_BRIDGE=lxcbr0\n-    sudo ifconfig lxcbr0 up 10.0.2.2\n fi\n \n # Check for OSX SDK\n@@ -232,8 +231,8 @@ echo ${COMMIT}\n if [[ $setup = true ]]\n then\n     sudo apt-get install ruby apache2 git apt-cacher-ng python-vm-builder qemu-kvm qemu-utils\n-    git clone https://github.com/bitcoin-core/gitian.sigs.git\n-    git clone https://github.com/bitcoin-core/bitcoin-detached-sigs.git\n+    git clone https://github.com/raven-core/gitian.sigs.git\n+    git clone https://github.com/raven-core/raven-detached-sigs.git\n     git clone https://github.com/devrandom/gitian-builder.git\n     pushd ./gitian-builder\n     if [[ -n \"$USE_LXC\" ]]\n@@ -247,7 +246,7 @@ then\n fi\n \n # Set up build\n-pushd ./bitcoin\n+pushd ./raven\n git fetch\n git checkout ${COMMIT}\n popd\n@@ -256,7 +255,7 @@ popd\n if [[ $build = true ]]\n then\n \t# Make output folder\n-\tmkdir -p ./bitcoin-binaries/${VERSION}\n+\tmkdir -p ./raven-binaries/${VERSION}\n \t\n \t# Build Dependencies\n \techo \"\"\n@@ -266,39 +265,39 @@ then\n \tmkdir -p inputs\n \twget -N -P inputs $osslPatchUrl\n \twget -N -P inputs $osslTarUrl\n-\tmake -C ../bitcoin/depends download SOURCES_PATH=`pwd`/cache/common\n+\tmake -C ../raven/depends download SOURCES_PATH=`pwd`/cache/common\n \n \t# Linux\n \tif [[ $linux = true ]]\n \tthen\n             echo \"\"\n \t    echo \"Compiling ${VERSION} Linux\"\n \t    echo \"\"\n-\t    ./bin/gbuild -j ${proc} -m ${mem} --commit bitcoin=${COMMIT} --url bitcoin=${url} ../bitcoin/contrib/gitian-descriptors/gitian-linux.yml\n-\t    ./bin/gsign -p $signProg --signer $SIGNER --release ${VERSION}-linux --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-linux.yml\n-\t    mv build/out/bitcoin-*.tar.gz build/out/src/bitcoin-*.tar.gz ../bitcoin-binaries/${VERSION}\n+\t    ./bin/gbuild -j ${proc} -m ${mem} --commit raven=${COMMIT} --url raven=${url} ../raven/contrib/gitian-descriptors/gitian-linux.yml\n+\t    ./bin/gsign -p $signProg --signer $SIGNER --release ${VERSION}-linux --destination ../gitian.sigs/ ../raven/contrib/gitian-descriptors/gitian-linux.yml\n+\t    mv build/out/raven-*.tar.gz build/out/src/raven-*.tar.gz ../raven-binaries/${VERSION}\n \tfi\n \t# Windows\n \tif [[ $windows = true ]]\n \tthen\n \t    echo \"\"\n \t    echo \"Compiling ${VERSION} Windows\"\n \t    echo \"\"\n-\t    ./bin/gbuild -j ${proc} -m ${mem} --commit bitcoin=${COMMIT} --url bitcoin=${url} ../bitcoin/contrib/gitian-descriptors/gitian-win.yml\n-\t    ./bin/gsign -p $signProg --signer $SIGNER --release ${VERSION}-win-unsigned --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-win.yml\n-\t    mv build/out/bitcoin-*-win-unsigned.tar.gz inputs/bitcoin-win-unsigned.tar.gz\n-\t    mv build/out/bitcoin-*.zip build/out/bitcoin-*.exe ../bitcoin-binaries/${VERSION}\n+\t    ./bin/gbuild -j ${proc} -m ${mem} --commit raven=${COMMIT} --url raven=${url} ../raven/contrib/gitian-descriptors/gitian-win.yml\n+\t    ./bin/gsign -p $signProg --signer $SIGNER --release ${VERSION}-win-unsigned --destination ../gitian.sigs/ ../raven/contrib/gitian-descriptors/gitian-win.yml\n+\t    mv build/out/raven-*-win-unsigned.tar.gz inputs/raven-win-unsigned.tar.gz\n+\t    mv build/out/raven-*.zip build/out/raven-*.exe ../raven-binaries/${VERSION}\n \tfi\n \t# Mac OSX\n \tif [[ $osx = true ]]\n \tthen\n \t    echo \"\"\n \t    echo \"Compiling ${VERSION} Mac OSX\"\n \t    echo \"\"\n-\t    ./bin/gbuild -j ${proc} -m ${mem} --commit bitcoin=${COMMIT} --url bitcoin=${url} ../bitcoin/contrib/gitian-descriptors/gitian-osx.yml\n-\t    ./bin/gsign -p $signProg --signer $SIGNER --release ${VERSION}-osx-unsigned --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-osx.yml\n-\t    mv build/out/bitcoin-*-osx-unsigned.tar.gz inputs/bitcoin-osx-unsigned.tar.gz\n-\t    mv build/out/bitcoin-*.tar.gz build/out/bitcoin-*.dmg ../bitcoin-binaries/${VERSION}\n+\t    ./bin/gbuild -j ${proc} -m ${mem} --commit raven=${COMMIT} --url raven=${url} ../raven/contrib/gitian-descriptors/gitian-osx.yml\n+\t    ./bin/gsign -p $signProg --signer $SIGNER --release ${VERSION}-osx-unsigned --destination ../gitian.sigs/ ../raven/contrib/gitian-descriptors/gitian-osx.yml\n+\t    mv build/out/raven-*-osx-unsigned.tar.gz inputs/raven-osx-unsigned.tar.gz\n+\t    mv build/out/raven-*.tar.gz build/out/raven-*.dmg ../raven-binaries/${VERSION}\n \tfi\n \tpopd\n \n@@ -325,27 +324,27 @@ then\n \techo \"\"\n \techo \"Verifying v${VERSION} Linux\"\n \techo \"\"\n-\t./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-linux ../bitcoin/contrib/gitian-descriptors/gitian-linux.yml\n+\t./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-linux ../raven/contrib/gitian-descriptors/gitian-linux.yml\n \t# Windows\n \techo \"\"\n \techo \"Verifying v${VERSION} Windows\"\n \techo \"\"\n-\t./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-win-unsigned ../bitcoin/contrib/gitian-descriptors/gitian-win.yml\n+\t./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-win-unsigned ../raven/contrib/gitian-descriptors/gitian-win.yml\n \t# Mac OSX\t\n \techo \"\"\n \techo \"Verifying v${VERSION} Mac OSX\"\n \techo \"\"\t\n-\t./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-osx-unsigned ../bitcoin/contrib/gitian-descriptors/gitian-osx.yml\n+\t./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-osx-unsigned ../raven/contrib/gitian-descriptors/gitian-osx.yml\n \t# Signed Windows\n \techo \"\"\n \techo \"Verifying v${VERSION} Signed Windows\"\n \techo \"\"\n-\t./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-osx-signed ../bitcoin/contrib/gitian-descriptors/gitian-osx-signer.yml\n+\t./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-osx-signed ../raven/contrib/gitian-descriptors/gitian-osx-signer.yml\n \t# Signed Mac OSX\n \techo \"\"\n \techo \"Verifying v${VERSION} Signed Mac OSX\"\n \techo \"\"\n-\t./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-osx-signed ../bitcoin/contrib/gitian-descriptors/gitian-osx-signer.yml\t\n+\t./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-osx-signed ../raven/contrib/gitian-descriptors/gitian-osx-signer.yml\t\n \tpopd\n fi\n \n@@ -360,20 +359,20 @@ then\n \t    echo \"\"\n \t    echo \"Signing ${VERSION} Windows\"\n \t    echo \"\"\n-\t    ./bin/gbuild -i --commit signature=${COMMIT} ../bitcoin/contrib/gitian-descriptors/gitian-win-signer.yml\n-\t    ./bin/gsign -p $signProg --signer $SIGNER --release ${VERSION}-win-signed --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-win-signer.yml\n-\t    mv build/out/bitcoin-*win64-setup.exe ../bitcoin-binaries/${VERSION}\n-\t    mv build/out/bitcoin-*win32-setup.exe ../bitcoin-binaries/${VERSION}\n+\t    ./bin/gbuild -i --commit signature=${COMMIT} ../raven/contrib/gitian-descriptors/gitian-win-signer.yml\n+\t    ./bin/gsign -p $signProg --signer $SIGNER --release ${VERSION}-win-signed --destination ../gitian.sigs/ ../raven/contrib/gitian-descriptors/gitian-win-signer.yml\n+\t    mv build/out/raven-*win64-setup.exe ../raven-binaries/${VERSION}\n+\t    mv build/out/raven-*win32-setup.exe ../raven-binaries/${VERSION}\n \tfi\n \t# Sign Mac OSX\n \tif [[ $osx = true ]]\n \tthen\n \t    echo \"\"\n \t    echo \"Signing ${VERSION} Mac OSX\"\n \t    echo \"\"\n-\t    ./bin/gbuild -i --commit signature=${COMMIT} ../bitcoin/contrib/gitian-descriptors/gitian-osx-signer.yml\n-\t    ./bin/gsign -p $signProg --signer $SIGNER --release ${VERSION}-osx-signed --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-osx-signer.yml\n-\t    mv build/out/bitcoin-osx-signed.dmg ../bitcoin-binaries/${VERSION}/bitcoin-${VERSION}-osx.dmg\n+\t    ./bin/gbuild -i --commit signature=${COMMIT} ../raven/contrib/gitian-descriptors/gitian-osx-signer.yml\n+\t    ./bin/gsign -p $signProg --signer $SIGNER --release ${VERSION}-osx-signed --destination ../gitian.sigs/ ../raven/contrib/gitian-descriptors/gitian-osx-signer.yml\n+\t    mv build/out/raven-osx-signed.dmg ../raven-binaries/${VERSION}/raven-${VERSION}-osx.dmg\n \tfi\n \tpopd\n "
      },
      {
        "sha": "614970659660f8fee76b8859467e192795829de4",
        "filename": "contrib/gitian-descriptors/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 65,
        "changes": 65,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/contrib/gitian-descriptors/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/contrib/gitian-descriptors/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/README.md?ref=ddeacfcff563b602b8833287a34dfbee340e5bec",
        "patch": "@@ -1,65 +0,0 @@\n-### Gavin's notes on getting gitian builds up and running using KVM\n-\n-These instructions distilled from\n-[https://help.ubuntu.com/community/KVM/Installation](https://help.ubuntu.com/community/KVM/Installation).\n-\n-You need the right hardware: you need a 64-bit-capable CPU with hardware virtualization support (Intel VT-x or AMD-V). Not all modern CPUs support hardware virtualization.\n-\n-You probably need to enable hardware virtualization in your machine's BIOS.\n-\n-You need to be running a recent version of 64-bit-Ubuntu, and you need to install several prerequisites:\n-\n-\tsudo apt-get install ruby apache2 git apt-cacher-ng python-vm-builder qemu-kvm\n-\n-Sanity checks:\n-\n-\tsudo service apt-cacher-ng status  # Should return apt-cacher-ng is running\n-\tls -l /dev/kvm   # Should show a /dev/kvm device\n-\n-\n-Once you've got the right hardware and software:\n-\n-    git clone git://github.com/bitcoin/bitcoin.git\n-    git clone git://github.com/devrandom/gitian-builder.git\n-    mkdir gitian-builder/inputs\n-    cd gitian-builder/inputs\n-\n-    # Create base images\n-    cd gitian-builder\n-    bin/make-base-vm --suite trusty --arch amd64\n-    cd ..\n-\n-    # Get inputs (see doc/release-process.md for exact inputs needed and where to get them)\n-    ...\n-\n-    # For further build instructions see doc/release-process.md\n-    ...\n-\n----------------------\n-\n-`gitian-builder` now also supports building using LXC. See\n-[help.ubuntu.com](https://help.ubuntu.com/14.04/serverguide/lxc.html)\n-for how to get LXC up and running under Ubuntu.\n-\n-If your main machine is a 64-bit Mac or PC with a few gigabytes of memory\n-and at least 10 gigabytes of free disk space, you can `gitian-build` using\n-LXC running inside a virtual machine.\n-\n-Here's a description of Gavin's setup on OSX 10.6:\n-\n-1. Download and install VirtualBox from [https://www.virtualbox.org/](https://www.virtualbox.org/)\n-\n-2. Download the 64-bit Ubuntu Desktop 12.04 LTS .iso CD image from\n-   [http://www.ubuntu.com/](http://www.ubuntu.com/)\n-\n-3. Run VirtualBox and create a new virtual machine, using the Ubuntu .iso (see the [VirtualBox documentation](https://www.virtualbox.org/wiki/Documentation) for details). Create it with at least 2 gigabytes of memory and a disk that is at least 20 gigabytes big.\n-\n-4. Inside the running Ubuntu desktop, install:\n-\n-\tsudo apt-get install debootstrap lxc ruby apache2 git apt-cacher-ng python-vm-builder\n-\n-5. Still inside Ubuntu, tell gitian-builder to use LXC, then follow the \"Once you've got the right hardware and software\" instructions above:\n-\n-\texport USE_LXC=1\n-\tgit clone git://github.com/bitcoin/bitcoin.git\n-\t... etc"
      },
      {
        "sha": "b85d472e8d16fb3aedfc94cb844cd8e79327ac80",
        "filename": "contrib/gitian-descriptors/gitian-linux.yml",
        "status": "modified",
        "additions": 14,
        "deletions": 7,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/gitian-descriptors/gitian-linux.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/gitian-descriptors/gitian-linux.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-linux.yml?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,5 +1,5 @@\n ---\n-name: \"bitcoin-linux-0.15\"\n+name: \"raven-linux-0.16\"\n enable_cache: true\n suites:\n - \"trusty\"\n@@ -28,8 +28,8 @@ packages:\n - \"ca-certificates\"\n - \"python\"\n remotes:\n-- \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n-  \"dir\": \"bitcoin\"\n+- \"url\": \"https://github.com/RavenProject/Ravencoin.git\"\n+  \"dir\": \"raven\"\n files: []\n script: |\n \n@@ -113,7 +113,7 @@ script: |\n   chmod +x ${WRAP_DIR}/${prog}\n   done\n \n-  cd bitcoin\n+  cd raven\n   BASEPREFIX=`pwd`/depends\n   # Build dependencies for each host\n   for i in $HOSTS; do\n@@ -132,19 +132,21 @@ script: |\n   export PATH=${WRAP_DIR}:${PATH}\n \n   # Create the release tarball using (arbitrarily) the first host\n-  export GIT_DIR=\"$PWD/.git\"\n   ./autogen.sh\n   CONFIG_SITE=${BASEPREFIX}/`echo \"${HOSTS}\" | awk '{print $1;}'`/share/config.site ./configure --prefix=/\n   make dist\n-  SOURCEDIST=`echo bitcoin-*.tar.gz`\n+  SOURCEDIST=`echo raven-*.tar.gz`\n   DISTNAME=`echo ${SOURCEDIST} | sed 's/.tar.*//'`\n   # Correct tar file order\n   mkdir -p temp\n   pushd temp\n   tar xf ../$SOURCEDIST\n-  find bitcoin-* | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ../$SOURCEDIST\n+  find raven-* | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ../$SOURCEDIST\n   popd\n \n+  # Workaround for tarball not building with the bare tag version (prep)\n+  make -C src obj/build.h\n+\n   ORIGPATH=\"$PATH\"\n   # Extract the release tarball into a dir for each host and build\n   for i in ${HOSTS}; do\n@@ -155,6 +157,11 @@ script: |\n     mkdir -p ${INSTALLPATH}\n     tar --strip-components=1 -xf ../$SOURCEDIST\n \n+    # Workaround for tarball not building with the bare tag version\n+    echo '#!/bin/true' >share/genbuild.sh\n+    mkdir src/obj\n+    cp ../src/obj/build.h src/obj/\n+\n     CONFIG_SITE=${BASEPREFIX}/${i}/share/config.site ./configure --prefix=/ --disable-ccache --disable-maintainer-mode --disable-dependency-tracking ${CONFIGFLAGS} CFLAGS=\"${HOST_CFLAGS}\" CXXFLAGS=\"${HOST_CXXFLAGS}\" LDFLAGS=\"${HOST_LDFLAGS}\"\n     make ${MAKEOPTS}\n     make ${MAKEOPTS} -C src check-security"
      },
      {
        "sha": "56e403e2646a5bd357da0f67bc8265d8b6e12a1d",
        "filename": "contrib/gitian-descriptors/gitian-osx-signer.yml",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/gitian-descriptors/gitian-osx-signer.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/gitian-descriptors/gitian-osx-signer.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-osx-signer.yml?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,16 +1,16 @@\n ---\n-name: \"bitcoin-dmg-signer\"\n+name: \"raven-dmg-signer\"\n suites:\n - \"trusty\"\n architectures:\n - \"amd64\"\n packages:\n - \"faketime\"\n remotes:\n-- \"url\": \"https://github.com/bitcoin-core/bitcoin-detached-sigs.git\"\n+- \"url\": \"https://github.com/raven-core/raven-detached-sigs.git\"\n   \"dir\": \"signature\"\n files:\n-- \"bitcoin-osx-unsigned.tar.gz\"\n+- \"raven-osx-unsigned.tar.gz\"\n script: |\n   WRAP_DIR=$HOME/wrapped\n   mkdir -p ${WRAP_DIR}\n@@ -27,8 +27,8 @@ script: |\n     chmod +x ${WRAP_DIR}/${prog}\n   done\n \n-  UNSIGNED=bitcoin-osx-unsigned.tar.gz\n-  SIGNED=bitcoin-osx-signed.dmg\n+  UNSIGNED=raven-osx-unsigned.tar.gz\n+  SIGNED=raven-osx-signed.dmg\n \n   tar -xf ${UNSIGNED}\n   OSX_VOLNAME=\"$(cat osx_volname)\""
      },
      {
        "sha": "d3272d6b0c3da7a3f607f4b4032836ef4ef9cbe4",
        "filename": "contrib/gitian-descriptors/gitian-osx.yml",
        "status": "modified",
        "additions": 14,
        "deletions": 7,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/gitian-descriptors/gitian-osx.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/gitian-descriptors/gitian-osx.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-osx.yml?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,5 +1,5 @@\n ---\n-name: \"bitcoin-osx-0.15\"\n+name: \"raven-osx-0.16\"\n enable_cache: true\n suites:\n - \"trusty\"\n@@ -28,8 +28,8 @@ packages:\n - \"python-setuptools\"\n - \"fonts-tuffy\"\n remotes:\n-- \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n-  \"dir\": \"bitcoin\"\n+- \"url\": \"https://github.com/RavenProject/Ravencoin.git\"\n+  \"dir\": \"raven\"\n files:\n - \"MacOSX10.11.sdk.tar.gz\"\n script: |\n@@ -83,7 +83,7 @@ script: |\n   create_per-host_faketime_wrappers \"2000-01-01 12:00:00\"\n   export PATH=${WRAP_DIR}:${PATH}\n \n-  cd bitcoin\n+  cd raven\n   BASEPREFIX=`pwd`/depends\n \n   mkdir -p ${BASEPREFIX}/SDKs\n@@ -101,20 +101,22 @@ script: |\n   export PATH=${WRAP_DIR}:${PATH}\n \n   # Create the release tarball using (arbitrarily) the first host\n-  export GIT_DIR=\"$PWD/.git\"\n   ./autogen.sh\n   CONFIG_SITE=${BASEPREFIX}/`echo \"${HOSTS}\" | awk '{print $1;}'`/share/config.site ./configure --prefix=/\n   make dist\n-  SOURCEDIST=`echo bitcoin-*.tar.gz`\n+  SOURCEDIST=`echo raven-*.tar.gz`\n   DISTNAME=`echo ${SOURCEDIST} | sed 's/.tar.*//'`\n \n   # Correct tar file order\n   mkdir -p temp\n   pushd temp\n   tar xf ../$SOURCEDIST\n-  find bitcoin-* | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ../$SOURCEDIST\n+  find raven-* | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ../$SOURCEDIST\n   popd\n \n+  # Workaround for tarball not building with the bare tag version (prep)\n+  make -C src obj/build.h\n+\n   ORIGPATH=\"$PATH\"\n   # Extract the release tarball into a dir for each host and build\n   for i in ${HOSTS}; do\n@@ -125,6 +127,11 @@ script: |\n     mkdir -p ${INSTALLPATH}\n     tar --strip-components=1 -xf ../$SOURCEDIST\n \n+    # Workaround for tarball not building with the bare tag version\n+    echo '#!/bin/true' >share/genbuild.sh\n+    mkdir src/obj\n+    cp ../src/obj/build.h src/obj/\n+\n     CONFIG_SITE=${BASEPREFIX}/${i}/share/config.site ./configure --prefix=/ --disable-ccache --disable-maintainer-mode --disable-dependency-tracking ${CONFIGFLAGS}\n     make ${MAKEOPTS}\n     make install-strip DESTDIR=${INSTALLPATH}"
      },
      {
        "sha": "8f669791f70d33fe48a6fc981bd0bb7957665356",
        "filename": "contrib/gitian-descriptors/gitian-win-signer.yml",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/gitian-descriptors/gitian-win-signer.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/gitian-descriptors/gitian-win-signer.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-win-signer.yml?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,5 +1,5 @@\n ---\n-name: \"bitcoin-win-signer\"\n+name: \"raven-win-signer\"\n suites:\n - \"trusty\"\n architectures:\n@@ -8,12 +8,12 @@ packages:\n - \"libssl-dev\"\n - \"autoconf\"\n remotes:\n-- \"url\": \"https://github.com/bitcoin-core/bitcoin-detached-sigs.git\"\n+- \"url\": \"https://github.com/raven-core/raven-detached-sigs.git\"\n   \"dir\": \"signature\"\n files:\n - \"osslsigncode-1.7.1.tar.gz\"\n - \"osslsigncode-Backports-to-1.7.1.patch\"\n-- \"bitcoin-win-unsigned.tar.gz\"\n+- \"raven-win-unsigned.tar.gz\"\n script: |\n   BUILD_DIR=`pwd`\n   SIGDIR=${BUILD_DIR}/signature/win\n@@ -23,7 +23,7 @@ script: |\n   echo \"a8c4e9cafba922f89de0df1f2152e7be286aba73f78505169bc351a7938dd911  osslsigncode-Backports-to-1.7.1.patch\" | sha256sum -c\n \n   mkdir -p ${UNSIGNED_DIR}\n-  tar -C ${UNSIGNED_DIR} -xf bitcoin-win-unsigned.tar.gz\n+  tar -C ${UNSIGNED_DIR} -xf raven-win-unsigned.tar.gz\n \n   tar xf osslsigncode-1.7.1.tar.gz\n   cd osslsigncode-1.7.1"
      },
      {
        "sha": "40e72f949b15f3ef919c01ac42c7f0c8a9af4593",
        "filename": "contrib/gitian-descriptors/gitian-win.yml",
        "status": "modified",
        "additions": 17,
        "deletions": 10,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/gitian-descriptors/gitian-win.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/gitian-descriptors/gitian-win.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-win.yml?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,5 +1,5 @@\n ---\n-name: \"bitcoin-win-0.15\"\n+name: \"raven-win-0.16\"\n enable_cache: true\n suites:\n - \"trusty\"\n@@ -22,8 +22,8 @@ packages:\n - \"ca-certificates\"\n - \"python\"\n remotes:\n-- \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n-  \"dir\": \"bitcoin\"\n+- \"url\": \"https://github.com/RavenProject/Ravencoin.git\"\n+  \"dir\": \"raven\"\n files: []\n script: |\n   WRAP_DIR=$HOME/wrapped\n@@ -72,7 +72,7 @@ script: |\n \n   function create_per-host_linker_wrapper {\n   # This is only needed for trusty, as the mingw linker leaks a few bytes of\n-  # heap, causing non-determinism. See discussion in https://github.com/bitcoin/bitcoin/pull/6900\n+  # heap, causing non-determinism. See discussion in https://github.com/RavenProject/Ravencoin/pull/6900\n   for i in $HOSTS; do\n     mkdir -p ${WRAP_DIR}/${i}\n     for prog in collect2; do\n@@ -101,7 +101,7 @@ script: |\n   create_per-host_linker_wrapper \"2000-01-01 12:00:00\"\n   export PATH=${WRAP_DIR}:${PATH}\n \n-  cd bitcoin\n+  cd raven\n   BASEPREFIX=`pwd`/depends\n   # Build dependencies for each host\n   for i in $HOSTS; do\n@@ -116,22 +116,24 @@ script: |\n   export PATH=${WRAP_DIR}:${PATH}\n \n   # Create the release tarball using (arbitrarily) the first host\n-  export GIT_DIR=\"$PWD/.git\"\n   ./autogen.sh\n   CONFIG_SITE=${BASEPREFIX}/`echo \"${HOSTS}\" | awk '{print $1;}'`/share/config.site ./configure --prefix=/\n   make dist\n-  SOURCEDIST=`echo bitcoin-*.tar.gz`\n+  SOURCEDIST=`echo raven-*.tar.gz`\n   DISTNAME=`echo ${SOURCEDIST} | sed 's/.tar.*//'`\n \n   # Correct tar file order\n   mkdir -p temp\n   pushd temp\n   tar xf ../$SOURCEDIST\n-  find bitcoin-* | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ../$SOURCEDIST\n+  find raven-* | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ../$SOURCEDIST\n   mkdir -p $OUTDIR/src\n   cp ../$SOURCEDIST $OUTDIR/src\n   popd\n \n+  # Workaround for tarball not building with the bare tag version (prep)\n+  make -C src obj/build.h\n+\n   ORIGPATH=\"$PATH\"\n   # Extract the release tarball into a dir for each host and build\n   for i in ${HOSTS}; do\n@@ -142,13 +144,18 @@ script: |\n     mkdir -p ${INSTALLPATH}\n     tar --strip-components=1 -xf ../$SOURCEDIST\n \n+    # Workaround for tarball not building with the bare tag version\n+    echo '#!/bin/true' >share/genbuild.sh\n+    mkdir src/obj\n+    cp ../src/obj/build.h src/obj/\n+\n     CONFIG_SITE=${BASEPREFIX}/${i}/share/config.site ./configure --prefix=/ --disable-ccache --disable-maintainer-mode --disable-dependency-tracking ${CONFIGFLAGS} CFLAGS=\"${HOST_CFLAGS}\" CXXFLAGS=\"${HOST_CXXFLAGS}\"\n     make ${MAKEOPTS}\n     make ${MAKEOPTS} -C src check-security\n     make deploy\n     make install DESTDIR=${INSTALLPATH}\n     rename 's/-setup\\.exe$/-setup-unsigned.exe/' *-setup.exe\n-    cp -f bitcoin-*setup*.exe $OUTDIR/\n+    cp -f raven-*setup*.exe $OUTDIR/\n     cd installed\n     mv ${DISTNAME}/bin/*.dll ${DISTNAME}/lib/\n     find . -name \"lib*.la\" -delete\n@@ -164,7 +171,7 @@ script: |\n   cp -rf contrib/windeploy $BUILD_DIR\n   cd $BUILD_DIR/windeploy\n   mkdir unsigned\n-  cp $OUTDIR/bitcoin-*setup-unsigned.exe unsigned/\n+  cp $OUTDIR/raven-*setup-unsigned.exe unsigned/\n   find . | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ${OUTDIR}/${DISTNAME}-win-unsigned.tar.gz\n   mv ${OUTDIR}/${DISTNAME}-x86_64-*-debug.zip ${OUTDIR}/${DISTNAME}-win64-debug.zip\n   mv ${OUTDIR}/${DISTNAME}-i686-*-debug.zip ${OUTDIR}/${DISTNAME}-win32-debug.zip"
      },
      {
        "sha": "4b0b7a261579c9c0bc8e20af373a1060c5981977",
        "filename": "contrib/gitian-keys/README.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/gitian-keys/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/gitian-keys/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/README.md?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -3,7 +3,7 @@ PGP keys\n \n This folder contains the public keys of developers and active contributors.\n \n-The keys are mainly used to sign git commits or the build results of gitian\n+The keys are mainly used to sign git commits or the build results of Gitian\n builds.\n \n You can import the keys into gpg as follows. Also, make sure to fetch the"
      },
      {
        "sha": "20963e7e259d30d399be1f84a7e4246ff12ea61c",
        "filename": "contrib/gitian-keys/meshcollider-key.pgp",
        "status": "added",
        "additions": 51,
        "deletions": 0,
        "changes": 51,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/gitian-keys/meshcollider-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/gitian-keys/meshcollider-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/meshcollider-key.pgp?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -0,0 +1,51 @@\n+-----BEGIN PGP PUBLIC KEY BLOCK-----\n+\n+mQINBFlm5UcBEADFhn2Tcfr7gtsLRj9dzHGPoZYjc8Jy7wceqT8918lqaULJKgDW\n+vkEWCVOHRlrr/h1ugldouTRv3k8cdzhCR9YBakVJ3vBmn73CvHQl57jGRSogyqm5\n+hb6IXJkBdualnZVFvCDV37VYeyuSYkJ+DL3c2wEjC2gdQKUsc8ePrJZZEMJVScdD\n+hoXR/sPnu8P5yHOi56XGJi9395GUmmxJKNucD4HXjSq+7yTTs5GXm4niaKfcKyBy\n+kIGN4aEeV8sqzkN8JzNH9fc8i8MPDYLW7SGljpLSnIvIsdBRjXXBHwRnfmGEO7lF\n+sVTyepUUYX3GhLcCNhZjoMkpagVjSpQPj1gylSM4EFkmU2AgK/iEzqB7Ay4WC8EE\n+E2HrcN0ysjyhuyntFwMa1cze99vtfOIQnVJ8E58AvsOs9+xYz8DkbYntCHDD+Zcv\n+y200/knT1jJSZMXkiDciLjGSeFFbh6H+VpaFUKjy3G3yJC4BTXwnACga5/WPsgmK\n++Y9gpTXRsZ8Op2teiwl8wI85mNF+2QmQw3uvymfojI8YPmjx2LOCbzkFYIJt20nw\n+iP1QMH3vtk+iSbcnexQlOPh03ZtDp3NbkBvBOy7cOc57Nc6IX7TllZicQj0FUjWq\n+ctUAU+f5pQuVgS8H3B4XE+Pk1u6/5zX9H0sTi0LzeQ0OdWFcvmZ8mYK5lQARAQAB\n+tCNNZXNoQ29sbGlkZXIgPGRvYnNvbnNhNjhAZ21haWwuY29tPokCOAQTAQgALAUC\n+WWblRwkQ0wARbhyHWj0CGwMFCR4TOAACGQEECwcJAwUVCAoCAwQWAAECAABJ2Q/8\n+D6FMutVLsz55vwy2FjWojcvSpk+BV50YMGYTCdnXZod7V0dP1iQ5+NMcYfpWgJKM\n+YbJ2eaWpW2TgsBd12LTjA6BKX3FquN8Y3nKZiknGCLiimDiys0+VuO9ieEH0flhC\n+olhGysRmPO5clNmZOzn3yiPgUekw6ejLVUEY8vPCbjojSuLZyjctQR3s/9oOMyvm\n+tldJ0waLi3KSOPEDQ8gXfE0QfDf2eMTdlMkbOHS6BlDIre6P5RZ5IJaLwCdzne+W\n+aS96CUqVcR3aqil4mG+T+kHf1wF99TZwY+tSXtweGENjc+QGEaR30to+catSc0nz\n+KQi3dGCH2Y+rc4VHE1S2Id88M38883mHXUeDMqzV9mHwMA50r/jzcLPybrJA1Qhn\n+ZQNWr8zGilmZfWnf2VyiPqZCIAEEFcwg6uNg9Rwy2N3Q/5+vhAVcVNJamMA/dpHa\n+hnq8HmZjraPWHL5Q9oL3Ggtc1Jahb8skaUMV26PHkXOxNFhVynghw3ujC3mocKqQ\n+stmsg+2m5Wf+TZtmbd8geMWcRpuxovYX2ZmeFPWIU+6p9XpwyiPR4mp5hWn/20dQ\n+YAyN/cQhWjDRU2i/HJB1lVnQIsSVsy3eWUJk4htQNHmk8crYocsXb5hgQ2C+JZ0L\n+gY2AxoGjqtzKkydTd5GbiCmqqFdW9ngmVerZ6yCbyRK5Ag0EWWblRwEQALdMSVUR\n+fCXTW2zCiP7g0Aj6yvyi1Wg1zK0CeRRljXKfgFoAI6IGW9QSSpXPmdsnAQOf7L0Q\n+wTTqwWNhKOLV0IWLenbpgIVwfLMkrwn71q9MBJFHiL+PgZLaRxqF5pmW34ZReUj5\n+k55Bg49kB98rfyz9K6qNxKLzY0j/8zsCvCgDMpr7U61xfz8Xo3Ds8bRdaFoH3RWR\n+wm3ePTe/8Rpm/LWWLlzhnfTpyZCUcOPh5+2yt0twHQ5zlzj7Gp8Il8XNlP6hvfx3\n+QGDuFTQ++Utom7T3QLa5E5Yx2iTD7qaNLdpQLZmcHUvdQV0QWSILccEvSJ+vXiE0\n+NvlgQIAE1pUuyTGpm97+mBeDC+4PvXUxQqFoOTJiwJxCpIAA0yvloUaZyeT0Toar\n+mowVOn0JXfbZRFFdxNUXgz9RbzANB+twGJ/ySh3mQz+Mur/1HqnCpHEjy73yOA9e\n+alN2LNvJt92hMdq+QU7I0bNqUS456h6Ft6mOpqG2y57qpl8ZL/MIvMaw3s45hA6p\n+7gzi7/TOnoqAkDUPf7lRbYjGgLkcGlimRxyL1SAYKuFgpNnhxk6BNPKdly7MRWF5\n+I+oUc5W7HkNefbHw5sdLgYZBQk8JoSwF1K/ES5gvJHWZjCiLAcbyum2W843etfU3\n+Qa/3YNt4Gri5zhAoD7U2kAs1ct3hQ6cLmDrxABEBAAGJAjUEGAEIACkFAllm5UcJ\n+ENMAEW4ch1o9AhsMBQkeEzgABAsHCQMFFQgKAgMEFgABAgAAWWcP/1ErBIqJ+SFZ\n+bL3YyLB9iObLEAUxNQP8bEV6lI9V0XUBhReasxQrMUFEXsFoFU6i/qlyfQFsBN8J\n+2QJFJT1pNE+Pleuz4yMuK5Ddcuuyl9ZklfEclmkLpSEwapFMm9IOgaGhucBMpvkC\n+2FE05oc0dEyTCdt1rBppGXvx2aw1khSiuWU13bWXw4hWfJaYKDKdTQyJLsjKGe0u\n+qjaR6yHWHbjlchQWKGUWLHomTKG6wZx9k5YbEy5LN7HnyCHos4SiWyaSpXSjCtNn\n+15i0JdH68fpKAtaGtkUYtoEJIg8qg7u4B6wM70BK2WCZr8T5yWK0c7NrojMIYjEu\n+HwEA9XPkcF9TF7V1VOZMze1ZOWSNzGOfq1yJf6hpUNrw+B3TbYsqJkuJmVSYoamH\n+0QBy0sHxlUtsALMnuKIQt8Sp20bJZLwpudXF+ZSRwrjmYc2RMc5AWaBHTGz2IGte\n+AvH+SOOaRWj+UvhSFZVKVOZHWqErzKG+NfqQzEaEL4h/6QU64h5GLhocYHCiCbFm\n+X1t01eKoDfOhwQlSlPjpDxxr7yi60ntt1R7DpgwqMNIdyXylxsc4SCvM6NDRXVM1\n+DoaPHI7GRuT1w6zEtkCGQoGsy1OBrnjeIy40mzh8L5q8L7n3jNtN/d6YCYDzP/P6\n+gb52/WPhR6CJQ2/7y3Uj7u8sPNpb7BGI\n+=as33\n+-----END PGP PUBLIC KEY BLOCK-----"
      },
      {
        "sha": "31575db7056728ea2ba0b62c3d9c921b7d7e0907",
        "filename": "contrib/init/README.md",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/init/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/init/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/README.md?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,11 +1,11 @@\n Sample configuration files for:\n ```\n-SystemD: bitcoind.service\n-Upstart: bitcoind.conf\n-OpenRC:  bitcoind.openrc\n-         bitcoind.openrcconf\n-CentOS:  bitcoind.init\n-OS X:    org.bitcoin.bitcoind.plist\n+SystemD: ravend.service\n+Upstart: ravend.conf\n+OpenRC:  ravend.openrc\n+         ravend.openrcconf\n+CentOS:  ravend.init\n+OS X:    org.raven.ravend.plist\n ```\n have been made available to assist packagers in creating node packages here.\n "
      },
      {
        "sha": "4289db9f753bdc7f6c7bc4ce8a7fa89149b6e29c",
        "filename": "contrib/init/bitcoind.conf",
        "status": "modified",
        "additions": 26,
        "deletions": 26,
        "changes": 52,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/init/bitcoind.conf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/init/bitcoind.conf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/bitcoind.conf?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,16 +1,16 @@\n-description \"Bitcoin Core Daemon\"\n+description \"Raven Core Daemon\"\n \n start on runlevel [2345]\n stop on starting rc RUNLEVEL=[016]\n \n-env BITCOIND_BIN=\"/usr/bin/bitcoind\"\n-env BITCOIND_USER=\"bitcoin\"\n-env BITCOIND_GROUP=\"bitcoin\"\n-env BITCOIND_PIDDIR=\"/var/run/bitcoind\"\n+env RAVEND_BIN=\"/usr/bin/ravend\"\n+env RAVEND_USER=\"raven\"\n+env RAVEND_GROUP=\"raven\"\n+env RAVEND_PIDDIR=\"/var/run/ravend\"\n # upstart can't handle variables constructed with other variables\n-env BITCOIND_PIDFILE=\"/var/run/bitcoind/bitcoind.pid\"\n-env BITCOIND_CONFIGFILE=\"/etc/bitcoin/bitcoin.conf\"\n-env BITCOIND_DATADIR=\"/var/lib/bitcoind\"\n+env RAVEND_PIDFILE=\"/var/run/ravend/ravend.pid\"\n+env RAVEND_CONFIGFILE=\"/etc/raven/raven.conf\"\n+env RAVEND_DATADIR=\"/var/lib/ravend\"\n \n expect fork\n \n@@ -20,46 +20,46 @@ kill timeout 60\n \n pre-start script\n     # this will catch non-existent config files\n-    # bitcoind will check and exit with this very warning, but it can do so\n+    # ravend will check and exit with this very warning, but it can do so\n     # long after forking, leaving upstart to think everything started fine.\n     # since this is a commonly encountered case on install, just check and\n     # warn here.\n-    if ! grep -qs '^rpcpassword=' \"$BITCOIND_CONFIGFILE\" ; then\n-        echo \"ERROR: You must set a secure rpcpassword to run bitcoind.\"\n-        echo \"The setting must appear in $BITCOIND_CONFIGFILE\"\n+    if ! grep -qs '^rpcpassword=' \"$RAVEND_CONFIGFILE\" ; then\n+        echo \"ERROR: You must set a secure rpcpassword to run ravend.\"\n+        echo \"The setting must appear in $RAVEND_CONFIGFILE\"\n         echo\n         echo \"This password is security critical to securing wallets \"\n         echo \"and must not be the same as the rpcuser setting.\"\n-        echo \"You can generate a suitable random password using the following\"\n+        echo \"You can generate a suitable random password using the following \"\n         echo \"command from the shell:\"\n         echo\n         echo \"bash -c 'tr -dc a-zA-Z0-9 < /dev/urandom | head -c32 && echo'\"\n         echo\n-        echo \"It is also recommended that you also set alertnotify so you are \"\n+        echo \"It is recommended that you also set alertnotify so you are \"\n         echo \"notified of problems:\"\n         echo\n-        echo \"ie: alertnotify=echo %%s | mail -s \\\"Bitcoin Alert\\\"\" \\\n+        echo \"ie: alertnotify=echo %%s | mail -s \\\"Raven Alert\\\"\" \\\n             \"admin@foo.com\"\n         echo\n         exit 1\n     fi\n \n-    mkdir -p \"$BITCOIND_PIDDIR\"\n-    chmod 0755 \"$BITCOIND_PIDDIR\"\n-    chown $BITCOIND_USER:$BITCOIND_GROUP \"$BITCOIND_PIDDIR\"\n-    chown $BITCOIND_USER:$BITCOIND_GROUP \"$BITCOIND_CONFIGFILE\"\n-    chmod 0660 \"$BITCOIND_CONFIGFILE\"\n+    mkdir -p \"$RAVEND_PIDDIR\"\n+    chmod 0755 \"$RAVEND_PIDDIR\"\n+    chown $RAVEND_USER:$RAVEND_GROUP \"$RAVEND_PIDDIR\"\n+    chown $RAVEND_USER:$RAVEND_GROUP \"$RAVEND_CONFIGFILE\"\n+    chmod 0660 \"$RAVEND_CONFIGFILE\"\n end script\n \n exec start-stop-daemon \\\n     --start \\\n-    --pidfile \"$BITCOIND_PIDFILE\" \\\n-    --chuid $BITCOIND_USER:$BITCOIND_GROUP \\\n-    --exec \"$BITCOIND_BIN\" \\\n+    --pidfile \"$RAVEND_PIDFILE\" \\\n+    --chuid $RAVEND_USER:$RAVEND_GROUP \\\n+    --exec \"$RAVEND_BIN\" \\\n     -- \\\n-    -pid=\"$BITCOIND_PIDFILE\" \\\n-    -conf=\"$BITCOIND_CONFIGFILE\" \\\n-    -datadir=\"$BITCOIND_DATADIR\" \\\n+    -pid=\"$RAVEND_PIDFILE\" \\\n+    -conf=\"$RAVEND_CONFIGFILE\" \\\n+    -datadir=\"$RAVEND_DATADIR\" \\\n     -disablewallet \\\n     -daemon\n "
      },
      {
        "sha": "4a1ca4ecd8a10677b847c65ad042ffc3e85bdc63",
        "filename": "contrib/init/bitcoind.init",
        "status": "modified",
        "additions": 14,
        "deletions": 14,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/init/bitcoind.init",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/init/bitcoind.init",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/bitcoind.init?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,36 +1,36 @@\n #!/bin/bash\n #\n-#  bitcoind The bitcoin core server.\n+#  ravend The raven core server.\n #\n #\n # chkconfig: 345 80 20\n-# description: bitcoind\n-# processname: bitcoind\n+# description: ravend\n+# processname: ravend\n #\n \n # Source function library.\n . /etc/init.d/functions\n \n-# you can override defaults in /etc/sysconfig/bitcoind, see below\n-if [ -f /etc/sysconfig/bitcoind ]; then\n-        . /etc/sysconfig/bitcoind\n+# you can override defaults in /etc/sysconfig/ravend, see below\n+if [ -f /etc/sysconfig/ravend ]; then\n+        . /etc/sysconfig/ravend\n fi\n \n RETVAL=0\n \n-prog=bitcoind\n-# you can override the lockfile via BITCOIND_LOCKFILE in /etc/sysconfig/bitcoind\n-lockfile=${BITCOIND_LOCKFILE-/var/lock/subsys/bitcoind}\n+prog=ravend\n+# you can override the lockfile via RAVEND_LOCKFILE in /etc/sysconfig/ravend\n+lockfile=${RAVEND_LOCKFILE-/var/lock/subsys/ravend}\n \n-# bitcoind defaults to /usr/bin/bitcoind, override with BITCOIND_BIN\n-bitcoind=${BITCOIND_BIN-/usr/bin/bitcoind}\n+# ravend defaults to /usr/bin/ravend, override with RAVEND_BIN\n+ravend=${RAVEND_BIN-/usr/bin/ravend}\n \n-# bitcoind opts default to -disablewallet, override with BITCOIND_OPTS\n-bitcoind_opts=${BITCOIND_OPTS--disablewallet}\n+# ravend opts default to -disablewallet, override with RAVEND_OPTS\n+ravend_opts=${RAVEND_OPTS--disablewallet}\n \n start() {\n     echo -n $\"Starting $prog: \"\n-    daemon $DAEMONOPTS $bitcoind $bitcoind_opts\n+    daemon $DAEMONOPTS $ravend $ravend_opts\n     RETVAL=$?\n     echo\n     [ $RETVAL -eq 0 ] && touch $lockfile"
      },
      {
        "sha": "4b0473785adc3f9376a4e7bfe6f67ebc674e3109",
        "filename": "contrib/init/bitcoind.openrc",
        "status": "modified",
        "additions": 36,
        "deletions": 36,
        "changes": 72,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/init/bitcoind.openrc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/init/bitcoind.openrc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/bitcoind.openrc?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -2,41 +2,41 @@\n \n # backward compatibility for existing gentoo layout \n #\n-if [ -d \"/var/lib/bitcoin/.bitcoin\" ]; then\n-\tBITCOIND_DEFAULT_DATADIR=\"/var/lib/bitcoin/.bitcoin\"\n+if [ -d \"/var/lib/raven/.raven\" ]; then\n+\tRAVEND_DEFAULT_DATADIR=\"/var/lib/raven/.raven\"\n else\n-\tBITCOIND_DEFAULT_DATADIR=\"/var/lib/bitcoind\"\n+\tRAVEND_DEFAULT_DATADIR=\"/var/lib/ravend\"\n fi\n \n-BITCOIND_CONFIGFILE=${BITCOIND_CONFIGFILE:-/etc/bitcoin/bitcoin.conf}\n-BITCOIND_PIDDIR=${BITCOIND_PIDDIR:-/var/run/bitcoind}\n-BITCOIND_PIDFILE=${BITCOIND_PIDFILE:-${BITCOIND_PIDDIR}/bitcoind.pid}\n-BITCOIND_DATADIR=${BITCOIND_DATADIR:-${BITCOIND_DEFAULT_DATADIR}}\n-BITCOIND_USER=${BITCOIND_USER:-${BITCOIN_USER:-bitcoin}}\n-BITCOIND_GROUP=${BITCOIND_GROUP:-bitcoin}\n-BITCOIND_BIN=${BITCOIND_BIN:-/usr/bin/bitcoind}\n-BITCOIND_NICE=${BITCOIND_NICE:-${NICELEVEL:-0}}\n-BITCOIND_OPTS=\"${BITCOIND_OPTS:-${BITCOIN_OPTS}}\"\n+RAVEND_CONFIGFILE=${RAVEND_CONFIGFILE:-/etc/raven/raven.conf}\n+RAVEND_PIDDIR=${RAVEND_PIDDIR:-/var/run/ravend}\n+RAVEND_PIDFILE=${RAVEND_PIDFILE:-${RAVEND_PIDDIR}/ravend.pid}\n+RAVEND_DATADIR=${RAVEND_DATADIR:-${RAVEND_DEFAULT_DATADIR}}\n+RAVEND_USER=${RAVEND_USER:-${RAVEN_USER:-raven}}\n+RAVEND_GROUP=${RAVEND_GROUP:-raven}\n+RAVEND_BIN=${RAVEND_BIN:-/usr/bin/ravend}\n+RAVEND_NICE=${RAVEND_NICE:-${NICELEVEL:-0}}\n+RAVEND_OPTS=\"${RAVEND_OPTS:-${RAVEN_OPTS}}\"\n \n-name=\"Bitcoin Core Daemon\"\n-description=\"Bitcoin cryptocurrency P2P network daemon\"\n+name=\"Raven Core Daemon\"\n+description=\"Raven cryptocurrency P2P network daemon\"\n \n-command=\"/usr/bin/bitcoind\"\n-command_args=\"-pid=\\\"${BITCOIND_PIDFILE}\\\" \\\n-\t\t-conf=\\\"${BITCOIND_CONFIGFILE}\\\" \\\n-\t\t-datadir=\\\"${BITCOIND_DATADIR}\\\" \\\n+command=\"/usr/bin/ravend\"\n+command_args=\"-pid=\\\"${RAVEND_PIDFILE}\\\" \\\n+\t\t-conf=\\\"${RAVEND_CONFIGFILE}\\\" \\\n+\t\t-datadir=\\\"${RAVEND_DATADIR}\\\" \\\n \t\t-daemon \\\n-\t\t${BITCOIND_OPTS}\"\n+\t\t${RAVEND_OPTS}\"\n \n-required_files=\"${BITCOIND_CONFIGFILE}\"\n-start_stop_daemon_args=\"-u ${BITCOIND_USER} \\\n-\t\t\t-N ${BITCOIND_NICE} -w 2000\"\n-pidfile=\"${BITCOIND_PIDFILE}\"\n+required_files=\"${RAVEND_CONFIGFILE}\"\n+start_stop_daemon_args=\"-u ${RAVEND_USER} \\\n+\t\t\t-N ${RAVEND_NICE} -w 2000\"\n+pidfile=\"${RAVEND_PIDFILE}\"\n \n # The retry schedule to use when stopping the daemon. Could be either\n # a timeout in seconds or multiple signal/timeout pairs (like\n # \"SIGKILL/180 SIGTERM/300\")\n-retry=\"${BITCOIND_SIGTERM_TIMEOUT}\"\n+retry=\"${RAVEND_SIGTERM_TIMEOUT}\"\n \n depend() {\n \tneed localmount net\n@@ -50,41 +50,41 @@ start_pre() {\n \tcheckpath \\\n \t-d \\\n \t--mode 0750 \\\n-\t--owner \"${BITCOIND_USER}:${BITCOIND_GROUP}\" \\\n-\t\"${BITCOIND_DATADIR}\"\n+\t--owner \"${RAVEND_USER}:${RAVEND_GROUP}\" \\\n+\t\"${RAVEND_DATADIR}\"\n \n \tcheckpath \\\n \t-d \\\n \t--mode 0755 \\\n-\t--owner \"${BITCOIND_USER}:${BITCOIND_GROUP}\" \\\n-\t\"${BITCOIND_PIDDIR}\"\n+\t--owner \"${RAVEND_USER}:${RAVEND_GROUP}\" \\\n+\t\"${RAVEND_PIDDIR}\"\n \n \tcheckpath -f \\\n-\t-o ${BITCOIND_USER}:${BITCOIND_GROUP} \\\n+\t-o ${RAVEND_USER}:${RAVEND_GROUP} \\\n \t-m 0660 \\\n-\t${BITCOIND_CONFIGFILE}\n+\t${RAVEND_CONFIGFILE}\n \n \tcheckconfig || return 1\n }\n \n checkconfig()\n {\n-\tif ! grep -qs '^rpcpassword=' \"${BITCOIND_CONFIGFILE}\" ; then\n+\tif ! grep -qs '^rpcpassword=' \"${RAVEND_CONFIGFILE}\" ; then\n \t\teerror \"\"\n-\t\teerror \"ERROR: You must set a secure rpcpassword to run bitcoind.\"\n-\t\teerror \"The setting must appear in ${BITCOIND_CONFIGFILE}\"\n+\t\teerror \"ERROR: You must set a secure rpcpassword to run ravend.\"\n+\t\teerror \"The setting must appear in ${RAVEND_CONFIGFILE}\"\n \t\teerror \"\"\n \t\teerror \"This password is security critical to securing wallets \"\n \t\teerror \"and must not be the same as the rpcuser setting.\"\n-\t\teerror \"You can generate a suitable random password using the following\"\n+\t\teerror \"You can generate a suitable random password using the following \"\n \t\teerror \"command from the shell:\"\n \t\teerror \"\"\n \t\teerror \"bash -c 'tr -dc a-zA-Z0-9 < /dev/urandom | head -c32 && echo'\"\n \t\teerror \"\"\n-\t\teerror \"It is also recommended that you also set alertnotify so you are \"\n+\t\teerror \"It is recommended that you also set alertnotify so you are \"\n \t\teerror \"notified of problems:\"\n \t\teerror \"\"\n-\t\teerror \"ie: alertnotify=echo %%s | mail -s \\\"Bitcoin Alert\\\"\" \\\n+\t\teerror \"ie: alertnotify=echo %%s | mail -s \\\"Raven Alert\\\"\" \\\n \t\t\t\"admin@foo.com\"\n \t\teerror \"\"\n \t\treturn 1"
      },
      {
        "sha": "1685b497a9a6d296e07feb1285dced597212cbe4",
        "filename": "contrib/init/bitcoind.openrcconf",
        "status": "modified",
        "additions": 17,
        "deletions": 17,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/init/bitcoind.openrcconf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/init/bitcoind.openrcconf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/bitcoind.openrcconf?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,33 +1,33 @@\n-# /etc/conf.d/bitcoind: config file for /etc/init.d/bitcoind\n+# /etc/conf.d/ravend: config file for /etc/init.d/ravend\n \n # Config file location\n-#BITCOIND_CONFIGFILE=\"/etc/bitcoin/bitcoin.conf\"\n+#RAVEND_CONFIGFILE=\"/etc/raven/raven.conf\"\n \n-# What directory to write pidfile to?  (created and owned by $BITCOIND_USER)\n-#BITCOIND_PIDDIR=\"/var/run/bitcoind\"\n+# What directory to write pidfile to?  (created and owned by $RAVEND_USER)\n+#RAVEND_PIDDIR=\"/var/run/ravend\"\n \n # What filename to give the pidfile\n-#BITCOIND_PIDFILE=\"${BITCOIND_PIDDIR}/bitcoind.pid\"\n+#RAVEND_PIDFILE=\"${RAVEND_PIDDIR}/ravend.pid\"\n \n-# Where to write bitcoind data (be mindful that the blockchain is large)\n-#BITCOIND_DATADIR=\"/var/lib/bitcoind\"\n+# Where to write ravend data (be mindful that the blockchain is large)\n+#RAVEND_DATADIR=\"/var/lib/ravend\"\n \n-# User and group to own bitcoind process\n-#BITCOIND_USER=\"bitcoin\"\n-#BITCOIND_GROUP=\"bitcoin\"\n+# User and group to own ravend process\n+#RAVEND_USER=\"raven\"\n+#RAVEND_GROUP=\"raven\"\n \n-# Path to bitcoind executable\n-#BITCOIND_BIN=\"/usr/bin/bitcoind\"\n+# Path to ravend executable\n+#RAVEND_BIN=\"/usr/bin/ravend\"\n \n-# Nice value to run bitcoind under\n-#BITCOIND_NICE=0\n+# Nice value to run ravend under\n+#RAVEND_NICE=0\n \n # Additional options (avoid -conf and -datadir, use flags above)\n-#BITCOIND_OPTS=\"\"\n+#RAVEND_OPTS=\"\"\n \n-# The timeout in seconds OpenRC will wait for bitcoind to terminate\n+# The timeout in seconds OpenRC will wait for ravend to terminate\n # after a SIGTERM has been raised.\n # Note that this will be mapped as argument to start-stop-daemon's\n # '--retry' option, which means you can specify a retry schedule\n # here. For more information see man 8 start-stop-daemon.\n-BITCOIND_SIGTERM_TIMEOUT=60\n+RAVEND_SIGTERM_TIMEOUT=60"
      },
      {
        "sha": "70b2a66072be7d426a6f6bad69219da9f850b07e",
        "filename": "contrib/init/bitcoind.service",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/init/bitcoind.service",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/init/bitcoind.service",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/bitcoind.service?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,15 +1,15 @@\n [Unit]\n-Description=Bitcoin's distributed currency daemon\n+Description=Raven's distributed currency daemon\n After=network.target\n \n [Service]\n-User=bitcoin\n-Group=bitcoin\n+User=raven\n+Group=raven\n \n Type=forking\n-PIDFile=/var/lib/bitcoind/bitcoind.pid\n-ExecStart=/usr/bin/bitcoind -daemon -pid=/var/lib/bitcoind/bitcoind.pid \\\n--conf=/etc/bitcoin/bitcoin.conf -datadir=/var/lib/bitcoind -disablewallet\n+PIDFile=/var/lib/ravend/ravend.pid\n+ExecStart=/usr/bin/ravend -daemon -pid=/var/lib/ravend/ravend.pid \\\n+-conf=/etc/raven/raven.conf -datadir=/var/lib/ravend -disablewallet\n \n Restart=always\n PrivateTmp=true"
      },
      {
        "sha": "df5dbdb72a04307b7504f5ebafe2fb5b52cf610b",
        "filename": "contrib/init/org.bitcoin.bitcoind.plist",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/init/org.bitcoin.bitcoind.plist",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/init/org.bitcoin.bitcoind.plist",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/org.bitcoin.bitcoind.plist?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -3,11 +3,10 @@\n <plist version=\"1.0\">\n <dict>\n \t<key>Label</key>\n-\t<string>org.bitcoin.bitcoind</string>\n+\t<string>org.raven.ravend</string>\n \t<key>ProgramArguments</key>\n \t<array>\n-\t\t<string>/usr/local/bin/bitcoind</string>\n-\t\t<string>-daemon</string>\n+\t\t<string>/usr/local/bin/ravend</string>\n \t</array>\n \t<key>RunAtLoad</key>\n \t<true/>"
      },
      {
        "sha": "e3cbb896bb09fe4d4114747740a5c4d6419991f3",
        "filename": "contrib/linearize/README.md",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/linearize/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/linearize/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/README.md?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,5 +1,5 @@\n # Linearize\n-Construct a linear, no-fork, best version of the Bitcoin blockchain. The scripts\n+Construct a linear, no-fork, best version of the Raven blockchain. The scripts\n run using Python 3 but are compatible with Python 2.\n \n ## Step 1: Download hash list\n@@ -12,7 +12,7 @@ Required configuration file settings for linearize-hashes:\n \n Optional config file setting for linearize-hashes:\n * RPC: `host`  (Default: `127.0.0.1`)\n-* RPC: `port`  (Default: `8332`)\n+* RPC: `port`  (Default: `8766`)\n * Blockchain: `min_height`, `max_height`\n * `rev_hash_bytes`: If true, the written block hash list will be\n byte-reversed. (In other words, the hash returned by getblockhash will have its\n@@ -21,7 +21,7 @@ standalone hash lists but safe to use with linearize-data.py, which will output\n the same data no matter which byte format is chosen.\n \n The `linearize-hashes` script requires a connection, local or remote, to a\n-JSON-RPC server. Running `bitcoind` or `bitcoin-qt -server` will be sufficient.\n+JSON-RPC server. Running `ravend` or `raven-qt -server` will be sufficient.\n \n ## Step 2: Copy local block data\n \n@@ -39,14 +39,14 @@ will be printed.\n respectively, to the current time and to the timestamp of the most recent block\n written to the script's blockchain.\n * `genesis`: The hash of the genesis block in the blockchain.\n-* `input`: bitcoind blocks/ directory containing blkNNNNN.dat\n+* `input`: ravend blocks/ directory containing blkNNNNN.dat\n * `hashlist`: text file containing list of block hashes created by\n linearize-hashes.py.\n * `max_out_sz`: Maximum size for files created by the `output_file` option.\n (Default: `1000*1000*1000 bytes`)\n * `netmagic`: Network magic number.\n * `out_of_order_cache_sz`: If out-of-order blocks are being read, the block can\n-be written to a cache so that the blockchain doesn't have to be seeked again.\n+be written to a cache so that the blockchain doesn't have to be sought again.\n This option specifies the cache size. (Default: `100*1000*1000 bytes`)\n * `rev_hash_bytes`: If true, the block hash list written by linearize-hashes.py\n will be byte-reversed when read by linearize-data.py. See the linearize-hashes"
      },
      {
        "sha": "3082d42964a8d229695deafa3ff0a309d9a35796",
        "filename": "contrib/linearize/example-linearize.cfg",
        "status": "modified",
        "additions": 13,
        "deletions": 6,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/linearize/example-linearize.cfg",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/linearize/example-linearize.cfg",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/example-linearize.cfg?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,10 +1,17 @@\n-# bitcoind RPC settings (linearize-hashes)\n+# ravend RPC settings (linearize-hashes)\n rpcuser=someuser\n rpcpassword=somepassword\n-#datadir=~/.bitcoin\n+#datadir=~/.raven\n host=127.0.0.1\n-port=8332\n-#port=18332\n+\n+#mainnet default\n+port=8766\n+\n+#testnet default\n+#port=18766\n+\n+#regtest default\n+#port=18443\n \n # bootstrap.dat hashlist settings (linearize-hashes)\n max_height=313000\n@@ -14,12 +21,12 @@ max_height=313000\n # mainnet\n netmagic=f9beb4d9\n genesis=000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f\n-input=/home/example/.bitcoin/blocks\n+input=/home/example/.raven/blocks\n \n # testnet\n #netmagic=0b110907\n #genesis=000000000933ea01ad0ee984209779baaec3ced90fa3f408719526f8d77f4943\n-#input=/home/example/.bitcoin/testnet3/blocks\n+#input=/home/example/.raven/testnet3/blocks\n \n # \"output\" option causes blockchain files to be written to the given location,\n # with \"output_file\" ignored. If not used, \"output_file\" is used instead."
      },
      {
        "sha": "7dbfea4c3077a9e4d9b7e0af643df23f648f9549",
        "filename": "contrib/linearize/linearize-data.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/linearize/linearize-data.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/linearize/linearize-data.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/linearize-data.py?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -3,6 +3,7 @@\n # linearize-data.py: Construct a linear, no-fork version of the chain.\n #\n # Copyright (c) 2013-2016 The Bitcoin Core developers\n+# Copyright (c) 2017 The Raven Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n #"
      },
      {
        "sha": "c687528d290799979f09741063d3d334714afcb6",
        "filename": "contrib/linearize/linearize-hashes.py",
        "status": "modified",
        "additions": 6,
        "deletions": 5,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/linearize/linearize-hashes.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/linearize/linearize-hashes.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/linearize-hashes.py?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -3,6 +3,7 @@\n # linearize-hashes.py:  List blocks in a linear, no-fork version of the chain.\n #\n # Copyright (c) 2013-2016 The Bitcoin Core developers\n+# Copyright (c) 2017 The Raven Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n #\n@@ -27,7 +28,7 @@ def hex_switchEndian(s):\n \tpairList = [s[i:i+2].encode() for i in range(0, len(s), 2)]\n \treturn b''.join(pairList[::-1]).decode()\n \n-class BitcoinRPC:\n+class RavenRPC:\n \tdef __init__(self, host, port, username, password):\n \t\tauthpair = \"%s:%s\" % (username, password)\n \t\tauthpair = authpair.encode('utf-8')\n@@ -69,7 +70,7 @@ def response_is_error(resp_obj):\n \t\treturn 'error' in resp_obj and resp_obj['error'] is not None\n \n def get_block_hashes(settings, max_blocks_per_call=10000):\n-\trpc = BitcoinRPC(settings['host'], settings['port'],\n+\trpc = RavenRPC(settings['host'], settings['port'],\n \t\t\t settings['rpcuser'], settings['rpcpassword'])\n \n \theight = settings['min_height']\n@@ -87,7 +88,7 @@ def get_block_hashes(settings, max_blocks_per_call=10000):\n \t\tfor x,resp_obj in enumerate(reply):\n \t\t\tif rpc.response_is_error(resp_obj):\n \t\t\t\tprint('JSON-RPC: error at height', height+x, ': ', resp_obj['error'], file=sys.stderr)\n-\t\t\t\texit(1)\n+\t\t\t\tsys.exit(1)\n \t\t\tassert(resp_obj['id'] == x) # assume replies are in-sequence\n \t\t\tif settings['rev_hash_bytes'] == 'true':\n \t\t\t\tresp_obj['result'] = hex_switchEndian(resp_obj['result'])\n@@ -125,7 +126,7 @@ def get_rpc_cookie():\n \tif 'host' not in settings:\n \t\tsettings['host'] = '127.0.0.1'\n \tif 'port' not in settings:\n-\t\tsettings['port'] = 8332\n+\t\tsettings['port'] = 8766\n \tif 'min_height' not in settings:\n \t\tsettings['min_height'] = 0\n \tif 'max_height' not in settings:\n@@ -140,7 +141,7 @@ def get_rpc_cookie():\n \tif 'datadir' in settings and not use_userpass:\n \t\tuse_datadir = True\n \tif not use_userpass and not use_datadir:\n-\t\tprint(\"Missing datadir or username and/or password in cfg file\", file=stderr)\n+\t\tprint(\"Missing datadir or username and/or password in cfg file\", file=sys.stderr)\n \t\tsys.exit(1)\n \n \tsettings['port'] = int(settings['port'])"
      },
      {
        "sha": "db56a726d9df4f4fc24891fb6310b6dedb400f3d",
        "filename": "contrib/macdeploy/README.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/macdeploy/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/macdeploy/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/README.md?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -11,5 +11,5 @@ This script should not be run manually, instead, after building as usual:\n During the process, the disk image window will pop up briefly where the fancy\n settings are applied. This is normal, please do not interfere.\n \n-When finished, it will produce `Bitcoin-Core.dmg`.\n+When finished, it will produce `Raven-Core.dmg`.\n "
      },
      {
        "sha": "aeba78dfade7e367e31f33b53e93354b3d3af044",
        "filename": "contrib/macdeploy/background.svg",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/macdeploy/background.svg",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/macdeploy/background.svg",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/background.svg?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -4,6 +4,7 @@\n <svg version=\"1.0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1000pt\" height=\"640pt\" viewBox=\"0 0 1000 640\" preserveAspectRatio=\"xMidYMid meet\">\n \t<!-- kate: space-indent off;\n \tCopyright (c) 2015 The Bitcoin Core developers\n+  Copyright (c) 2017 The Raven Core developers\n \tDistributed under the MIT software license, see the accompanying\n \tfile COPYING or http://www.opensource.org/licenses/mit-license.php.\n \t-->"
      },
      {
        "sha": "c6c2aca81acc8406a5fb5c7f04baf49743718606",
        "filename": "contrib/macdeploy/custom_dsstore.py",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/macdeploy/custom_dsstore.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/macdeploy/custom_dsstore.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/custom_dsstore.py?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,5 +1,6 @@\n #!/usr/bin/env python\n # Copyright (c) 2013-2016 The Bitcoin Core developers\n+# Copyright (c) 2017 The Raven Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n from __future__ import division,print_function,unicode_literals\n@@ -28,7 +29,7 @@\n     'gridOffsetX': 0.0,\n     'textSize': 12.0,\n     'viewOptionsVersion': 1,\n-    'backgroundImageAlias': b'\\x00\\x00\\x00\\x00\\x02\\x1e\\x00\\x02\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xd1\\x94\\\\\\xb0H+\\x00\\x05\\x00\\x00\\x00\\x98\\x0fbackground.tiff\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x99\\xd19\\xb0\\xf8\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xff\\xff\\xff\\x00\\x00\\r\\x02\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0b.background\\x00\\x00\\x10\\x00\\x08\\x00\\x00\\xd1\\x94\\\\\\xb0\\x00\\x00\\x00\\x11\\x00\\x08\\x00\\x00\\xd19\\xb0\\xf8\\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x98\\x00\\x0e\\x00 \\x00\\x0f\\x00b\\x00a\\x00c\\x00k\\x00g\\x00r\\x00o\\x00u\\x00n\\x00d\\x00.\\x00t\\x00i\\x00f\\x00f\\x00\\x0f\\x00\\x02\\x00\\x00\\x00\\x12\\x00\\x1c/.background/background.tiff\\x00\\x14\\x01\\x06\\x00\\x00\\x00\\x00\\x01\\x06\\x00\\x02\\x00\\x00\\x0cMacintosh HD\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xce\\x97\\xab\\xc3H+\\x00\\x00\\x01\\x88[\\x88\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x02u\\xab\\x8d\\xd1\\x94\\\\\\xb0devrddsk\\xff\\xff\\xff\\xff\\x00\\x00\\t \\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x07bitcoin\\x00\\x00\\x10\\x00\\x08\\x00\\x00\\xce\\x97\\xab\\xc3\\x00\\x00\\x00\\x11\\x00\\x08\\x00\\x00\\xd1\\x94\\\\\\xb0\\x00\\x00\\x00\\x01\\x00\\x14\\x01\\x88[\\x88\\x00\\x16\\xa9\\t\\x00\\x08\\xfaR\\x00\\x08\\xfaQ\\x00\\x02d\\x8e\\x00\\x0e\\x00\\x02\\x00\\x00\\x00\\x0f\\x00\\x1a\\x00\\x0c\\x00M\\x00a\\x00c\\x00i\\x00n\\x00t\\x00o\\x00s\\x00h\\x00 \\x00H\\x00D\\x00\\x13\\x00\\x01/\\x00\\x00\\x15\\x00\\x02\\x00\\x14\\xff\\xff\\x00\\x00\\xff\\xff\\x00\\x00',\n+    'backgroundImageAlias': b'\\x00\\x00\\x00\\x00\\x02\\x1e\\x00\\x02\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xd1\\x94\\\\\\xb0H+\\x00\\x05\\x00\\x00\\x00\\x98\\x0fbackground.tiff\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x99\\xd19\\xb0\\xf8\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xff\\xff\\xff\\x00\\x00\\r\\x02\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0b.background\\x00\\x00\\x10\\x00\\x08\\x00\\x00\\xd1\\x94\\\\\\xb0\\x00\\x00\\x00\\x11\\x00\\x08\\x00\\x00\\xd19\\xb0\\xf8\\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x98\\x00\\x0e\\x00 \\x00\\x0f\\x00b\\x00a\\x00c\\x00k\\x00g\\x00r\\x00o\\x00u\\x00n\\x00d\\x00.\\x00t\\x00i\\x00f\\x00f\\x00\\x0f\\x00\\x02\\x00\\x00\\x00\\x12\\x00\\x1c/.background/background.tiff\\x00\\x14\\x01\\x06\\x00\\x00\\x00\\x00\\x01\\x06\\x00\\x02\\x00\\x00\\x0cMacintosh HD\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xce\\x97\\xab\\xc3H+\\x00\\x00\\x01\\x88[\\x88\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x02u\\xab\\x8d\\xd1\\x94\\\\\\xb0devrddsk\\xff\\xff\\xff\\xff\\x00\\x00\\t \\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x07raven\\x00\\x00\\x10\\x00\\x08\\x00\\x00\\xce\\x97\\xab\\xc3\\x00\\x00\\x00\\x11\\x00\\x08\\x00\\x00\\xd1\\x94\\\\\\xb0\\x00\\x00\\x00\\x01\\x00\\x14\\x01\\x88[\\x88\\x00\\x16\\xa9\\t\\x00\\x08\\xfaR\\x00\\x08\\xfaQ\\x00\\x02d\\x8e\\x00\\x0e\\x00\\x02\\x00\\x00\\x00\\x0f\\x00\\x1a\\x00\\x0c\\x00M\\x00a\\x00c\\x00i\\x00n\\x00t\\x00o\\x00s\\x00h\\x00 \\x00H\\x00D\\x00\\x13\\x00\\x01/\\x00\\x00\\x15\\x00\\x02\\x00\\x14\\xff\\xff\\x00\\x00\\xff\\xff\\x00\\x00',\n     'backgroundColorBlue': 1.0,\n     'iconSize': 96.0,\n     'backgroundColorGreen': 1.0,\n@@ -45,16 +46,16 @@\n alias.volume.name = package_name_ns\n alias.volume.posix_path = '/Volumes/' + package_name_ns\n alias.volume.disk_image_alias.target.filename = package_name_ns + '.temp.dmg'\n-alias.volume.disk_image_alias.target.carbon_path = 'Macintosh HD:Users:\\x00bitcoinuser:\\x00Documents:\\x00bitcoin:\\x00bitcoin:\\x00' + package_name_ns + '.temp.dmg'\n-alias.volume.disk_image_alias.target.posix_path = 'Users/bitcoinuser/Documents/bitcoin/bitcoin/' + package_name_ns + '.temp.dmg'\n+alias.volume.disk_image_alias.target.carbon_path = 'Macintosh HD:Users:\\x00ravenuser:\\x00Documents:\\x00raven:\\x00raven:\\x00' + package_name_ns + '.temp.dmg'\n+alias.volume.disk_image_alias.target.posix_path = 'Users/ravenuser/Documents/raven/raven/' + package_name_ns + '.temp.dmg'\n alias.target.carbon_path = package_name_ns + ':.background:\\x00background.tiff'\n icvp['backgroundImageAlias'] = biplist.Data(alias.to_bytes())\n ds['.']['icvp'] = icvp\n \n ds['.']['vSrn'] = ('long', 1)\n \n ds['Applications']['Iloc'] = (370, 156)\n-ds['Bitcoin-Qt.app']['Iloc'] = (128, 156)\n+ds['Raven-Qt.app']['Iloc'] = (128, 156)\n \n ds.flush()\n ds.close()"
      },
      {
        "sha": "d5ca6d93d019816634e0e44e400c4750bbadfee3",
        "filename": "contrib/macdeploy/detached-sig-apply.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/macdeploy/detached-sig-apply.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/macdeploy/detached-sig-apply.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/detached-sig-apply.sh?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,5 +1,6 @@\n #!/bin/sh\n # Copyright (c) 2014-2015 The Bitcoin Core developers\n+# Copyright (c) 2017 The Raven Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "41b5c8befc455ba794bfc4387dc5a11074ad28a7",
        "filename": "contrib/macdeploy/detached-sig-create.sh",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/macdeploy/detached-sig-create.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/macdeploy/detached-sig-create.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/detached-sig-create.sh?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,12 +1,13 @@\n #!/bin/sh\n # Copyright (c) 2014-2015 The Bitcoin Core developers\n+# Copyright (c) 2017 The Raven Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n set -e\n \n ROOTDIR=dist\n-BUNDLE=\"${ROOTDIR}/Bitcoin-Qt.app\"\n+BUNDLE=\"${ROOTDIR}/Raven-Qt.app\"\n CODESIGN=codesign\n TEMPDIR=sign.temp\n TEMPLIST=${TEMPDIR}/signatures.txt"
      },
      {
        "sha": "2c6a1c6f6cb268887e3408d9f162bc2ec86496e4",
        "filename": "contrib/macdeploy/extract-osx-sdk.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/macdeploy/extract-osx-sdk.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/macdeploy/extract-osx-sdk.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/extract-osx-sdk.sh?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,5 +1,6 @@\n #!/bin/bash\n # Copyright (c) 2016 The Bitcoin Core developers\n+# Copyright (c) 2017 The Raven Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "c3a5fe03f33d3e32e7dab44cc326d12c52596155",
        "filename": "contrib/macdeploy/fancy.plist",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/macdeploy/fancy.plist",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/macdeploy/fancy.plist",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/fancy.plist?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -22,7 +22,7 @@\n \t\t\t<integer>370</integer>\n \t\t\t<integer>156</integer>\n \t\t</array>\n-\t\t<key>Bitcoin-Qt.app</key>\n+\t\t<key>Raven-Qt.app</key>\n \t\t<array>\n \t\t\t<integer>128</integer>\n \t\t\t<integer>156</integer>"
      },
      {
        "sha": "5a34d5882dfaf927c1094dd7732215e33dd80027",
        "filename": "contrib/macdeploy/macdeployqtplus",
        "status": "modified",
        "additions": 9,
        "deletions": 5,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/macdeploy/macdeployqtplus",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/macdeploy/macdeployqtplus",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/macdeployqtplus?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -87,6 +87,8 @@ class FrameworkInfo(object):\n     \n     @classmethod\n     def fromOtoolLibraryLine(cls, line):\n+        print(\"DEBUG FOR OTOOL DEPLOY: \" + line)\n+\n         # Note: line must be trimmed\n         if line == \"\":\n             return None\n@@ -116,6 +118,8 @@ class FrameworkInfo(object):\n             info.binaryPath = path\n             info.version = \"-\"\n             \n+            print(\"DEBUG FOR DYLIB DEPLOY: \" + path)\n+\n             info.installName = path\n             info.deployedInstallName = \"@executable_path/../Frameworks/\" + info.binaryName\n             info.sourceFilePath = path\n@@ -155,7 +159,7 @@ class FrameworkInfo(object):\n class ApplicationBundleInfo(object):\n     def __init__(self, path):\n         self.path = path\n-        appName = \"Bitcoin-Qt\"\n+        appName = \"Raven-Qt\"\n         self.binaryPath = os.path.join(path, \"Contents\", \"MacOS\", appName)\n         if not os.path.exists(self.binaryPath):\n             raise RuntimeError(\"Could not find bundle binary for \" + path)\n@@ -200,7 +204,7 @@ class DeploymentInfo(object):\n         return False\n \n def getFrameworks(binaryPath, verbose):\n-    if verbose >= 3:\n+    if verbose >= 2:\n         print(\"Inspecting with otool: \" + binaryPath)\n     otoolbin=os.getenv(\"OTOOL\", \"otool\")\n     otool = subprocess.Popen([otoolbin, \"-L\", binaryPath], stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n@@ -221,7 +225,7 @@ def getFrameworks(binaryPath, verbose):\n         line = line.replace(\"@loader_path\", os.path.dirname(binaryPath))\n         info = FrameworkInfo.fromOtoolLibraryLine(line.strip())\n         if info is not None:\n-            if verbose >= 3:\n+            if verbose >= 2:\n                 print(\"Found framework:\")\n                 print(info)\n             libraries.append(info)\n@@ -485,7 +489,7 @@ to the codesign tool.\n E.g. CODESIGNARGS='--sign \"Developer ID Application: ...\" --keychain /encrypted/foo.keychain'\"\"\")\n \n ap.add_argument(\"app_bundle\", nargs=1, metavar=\"app-bundle\", help=\"application bundle to be deployed\")\n-ap.add_argument(\"-verbose\", type=int, nargs=1, default=[1], metavar=\"<0-3>\", help=\"0 = no output, 1 = error/warning (default), 2 = normal, 3 = debug\")\n+ap.add_argument(\"-verbose\", type=int, nargs=1, default=[3], metavar=\"<0-3>\", help=\"0 = no output, 1 = error/warning (default), 2 = normal, 3 = debug\")\n ap.add_argument(\"-no-plugins\", dest=\"plugins\", action=\"store_false\", default=True, help=\"skip plugin deployment\")\n ap.add_argument(\"-no-strip\", dest=\"strip\", action=\"store_false\", default=True, help=\"don't run 'strip' on the binaries\")\n ap.add_argument(\"-sign\", dest=\"sign\", action=\"store_true\", default=False, help=\"sign .app bundle with codesign tool\")\n@@ -603,7 +607,7 @@ else:\n \n # ------------------------------------------------\n \n-target = os.path.join(\"dist\", \"Bitcoin-Qt.app\")\n+target = os.path.join(\"dist\", \"Raven-Qt.app\")\n \n if verbose >= 2:\n     print(\"+ Copying source bundle +\")"
      },
      {
        "sha": "11bc87a31cf6d974e5ab26b1b7ce982a630230cc",
        "filename": "contrib/qos/README.md",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/qos/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/qos/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/qos/README.md?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,5 +1,5 @@\n ### QoS (Quality of service) ###\n \n-This is a Linux bash script that will set up tc to limit the outgoing bandwidth for connections to the Bitcoin network. It limits outbound TCP traffic with a source or destination port of 8333, but not if the destination IP is within a LAN.\n+This is a Linux bash script that will set up tc to limit the outgoing bandwidth for connections to the Raven network. It limits outbound TCP traffic with a source or destination port of 8767, but not if the destination IP is within a LAN.\n \n-This means one can have an always-on bitcoind instance running, and another local bitcoind/bitcoin-qt instance which connects to this node and receives blocks from it.\n+This means one can have an always-on ravend instance running, and another local ravend/raven-qt instance which connects to this node and receives blocks from it."
      },
      {
        "sha": "5ef69f6685c233a2419427d5240b86e082049e8e",
        "filename": "contrib/qos/tc.sh",
        "status": "modified",
        "additions": 7,
        "deletions": 6,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/qos/tc.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/qos/tc.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/qos/tc.sh?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,12 +1,13 @@\n # Copyright (c) 2017 The Bitcoin Core developers\n+# Copyright (c) 2017 The Raven Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #network interface on which to limit traffic\n IF=\"eth0\"\n #limit of the network interface in question\n LINKCEIL=\"1gbit\"\n-#limit outbound Bitcoin protocol traffic to this rate\n+#limit outbound Raven protocol traffic to this rate\n LIMIT=\"160kbit\"\n #defines the IPv4 address space for which you wish to disable rate limiting\n LOCALNET_V4=\"192.168.0.0/16\"\n@@ -44,16 +45,16 @@ fi\n #\tret=$?\n #done\n \n-#limit outgoing traffic to and from port 8333. but not when dealing with a host on the local network\n+#limit outgoing traffic to and from port 8767. but not when dealing with a host on the local network\n #\t(defined by $LOCALNET_V4 and $LOCALNET_V6)\n #\t--set-mark marks packages matching these criteria with the number \"2\" (v4)\n #\t--set-mark marks packages matching these criteria with the number \"4\" (v6)\n #\tthese packets are filtered by the tc filter with \"handle 2\"\n #\tthis filter sends the packages into the 1:11 class, and this class is limited to ${LIMIT}\n-iptables -t mangle -A OUTPUT -p tcp -m tcp --dport 8333 ! -d ${LOCALNET_V4} -j MARK --set-mark 0x2\n-iptables -t mangle -A OUTPUT -p tcp -m tcp --sport 8333 ! -d ${LOCALNET_V4} -j MARK --set-mark 0x2\n+iptables -t mangle -A OUTPUT -p tcp -m tcp --dport 8767 ! -d ${LOCALNET_V4} -j MARK --set-mark 0x2\n+iptables -t mangle -A OUTPUT -p tcp -m tcp --sport 8767 ! -d ${LOCALNET_V4} -j MARK --set-mark 0x2\n \n if [ ! -z \"${LOCALNET_V6}\" ] ; then\n-\tip6tables -t mangle -A OUTPUT -p tcp -m tcp --dport 8333 ! -d ${LOCALNET_V6} -j MARK --set-mark 0x4\n-\tip6tables -t mangle -A OUTPUT -p tcp -m tcp --sport 8333 ! -d ${LOCALNET_V6} -j MARK --set-mark 0x4\n+\tip6tables -t mangle -A OUTPUT -p tcp -m tcp --dport 8767 ! -d ${LOCALNET_V6} -j MARK --set-mark 0x4\n+\tip6tables -t mangle -A OUTPUT -p tcp -m tcp --sport 8767 ! -d ${LOCALNET_V6} -j MARK --set-mark 0x4\n fi"
      },
      {
        "sha": "5d02d7444cb2f800c943e58f79a8940c893c3e4b",
        "filename": "contrib/rpm/README.md",
        "status": "modified",
        "additions": 24,
        "deletions": 24,
        "changes": 48,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/rpm/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/rpm/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/rpm/README.md?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,7 +1,7 @@\n RPM Spec File Notes\n -------------------\n \n-The RPM spec file provided here is for Bitcoin-Core 0.12.0 and builds on CentOS\n+The RPM spec file provided here is for Raven-Core 0.12.0 and builds on CentOS\n 7 with either the CentOS provided OpenSSL library or with LibreSSL as packaged\n at [LibreLAMP.com](https://librelamp.com/). It should hopefully not be too\n difficult to port the RPM spec file to most RPM based Linux distributions.\n@@ -15,15 +15,15 @@ It is considered good form for all sources to reference a URL where the source\n can be downloaded.\n \n Sources 0-9 should be reserved for source code tarballs. `Source0` should\n-reference the release tarball available from https://bitcoin.org/bin/ and\n+reference the release tarball available from https://raven.org/bin/ and\n `Source1` should reference the BerkeleyDB source.\n \n Sources 10-99 are for source files that are maintained in the\n-[Bitcoin git repository](https://github.com/bitcoin/bitcoin) but are not part of\n+[Raven git repository](https://github.com/RavenProject/Ravencoin) but are not part of\n the release tarball. Most of these will reside in the `contrib` sub-directory.\n \n Sources 10-19 should be reserved for miscellaneous configuration files.\n-Currently only `Source10` is used, for the example `bitcoin.conf` file.\n+Currently only `Source10` is used, for the example `raven.conf` file.\n \n Sources 20-29 should be reserved for man pages. Currently only `Source20`\n through `Source23` are used.\n@@ -34,21 +34,21 @@ release, the full URL specified in the RPM spec file will not work. You can get\n them from the git repository where you retrieved this file.\n \n Sources 100+ are for files that are not source tarballs and are not maintained\n-in the bitcoin git repository. At present only an SVG version of the Bitcoin\n+in the raven git repository. At present only an SVG version of the Raven\n icon is used.\n \n ## Patches\n \n In general, patches should be avoided. When a packager feels a patch is\n-necessary, the packager should bring the problem to the attention of the bitcoin\n+necessary, the packager should bring the problem to the attention of the raven\n developers so that an official fix to the issue can make it into the next\n release.\n \n-### Patch0 bitcoin-0.12.0-libressl.patch\n+### Patch0 raven-0.12.0-libressl.patch\n \n This patch is only needed if building against LibreSSL. LibreSSL is not the\n standard TLS library on most Linux distributions. The patch will likely not be\n-needed when 0.12.1 is released, a proper fix is already in the Bitcoin git\n+needed when 0.12.1 is released, a proper fix is already in the Raven git\n master branch.\n \n ## BuildRequires\n@@ -62,7 +62,7 @@ most likely to be the case with the Qt packages.\n \n The `build-unix.md` file recommends building against BerkeleyDB 4.8.30. Even if\n that is the version your Linux distribution ships with, it probably is a good\n-idea to build Bitcoin Core against a static version of that library compiled\n+idea to build Raven Core against a static version of that library compiled\n according to the instructions in the `build-unix.md` file so that any changes\n the distribution may make in the future will not result in a problem for users.\n \n@@ -84,35 +84,35 @@ If you would prefer not to build the GUI at all, you can pass the switch\n \n The desktop and KDE meta files are created in the spec file itself with the\n `cat` command. This is done to allow easy distribution specific changes without\n-needing to use any patches. A specific time stamp is given to the files so that\n+needing to use any patches. A specific timestamp is given to the files so that\n it does not they do not appear to have been updated every time the package is\n-built. If you do make changes to them, you probably should update time stamp\n-assigned to them in the `touch` command that specifies the time stamp.\n+built. If you do make changes to them, you probably should update timestamp\n+assigned to them in the `touch` command that specifies the timestamp.\n \n ## SVG, PNG, and XPM Icons\n \n-The `bitcoin.svg` file is from the source listed as `Source100`. It is used as\n+The `raven.svg` file is from the source listed as `Source100`. It is used as\n the source for the PNG and XPM files. The generated PNG and XPM files are given\n-the same time stamp as the source SVG file as a means of indicating they are\n+the same timestamp as the source SVG file as a means of indicating they are\n derived from it.\n \n ## Systemd\n \n This spec file assumes the target distribution uses systemd. That really only\n-matters for the `bitcoin-server` package. At this point, most RPM based\n+matters for the `raven-server` package. At this point, most RPM based\n distributions that still receive vendor updates do in fact use systemd.\n \n The files to control the service are created in the RPM spec file itself using\n the `cat` command. This is done to make it easy to modify for other\n distributions that may implement things differently without needing to patch\n-source. A specific time stamp is given to the files so that they do not appear\n+source. A specific timestamp is given to the files so that they do not appear\n to have been updated every time the package is built. If you do make changes to\n-them, you probably should update the time stamp assigned to them in the `touch`\n-command that specifies the time stamp.\n+them, you probably should update the timestamp assigned to them in the `touch`\n+command that specifies the timestamp.\n \n ## SELinux\n \n-The `bitcoin-server` package should have SELinux support. How to properly do\n+The `raven-server` package should have SELinux support. How to properly do\n that *may* vary by distribution and version of distribution.\n \n The SELinux stuff in this RPM spec file *should* be correct for CentOS, RHEL,\n@@ -137,7 +137,7 @@ want the OpenSSL development files.\n LibreSSL (and some newer builds of OpenSSL) do not have support for SSLv3. This\n can cause issues with the Boost package if the Boost package has not been\n patched accordingly. On those distributions, you will either need to build\n-Bitcoin-Core against OpenSSL or use a patched version of Boost in the build\n+Raven-Core against OpenSSL or use a patched version of Boost in the build\n system.\n \n As SSLv3 is no longer safe, distributions that have not patched Boost to work\n@@ -156,8 +156,8 @@ developed on (CentOS 7).\n ## Legacy Credit\n \n This RPM spec file is largely based upon the work of Michael Hampton at\n-[Ringing Liberty](https://www.ringingliberty.com/bitcoin/). He has been\n-packaging Bitcoin for Fedora at least since 2012.\n+[Ringing Liberty](https://www.ringingliberty.com/raven/). He has been\n+packaging Raven for Fedora at least since 2012.\n \n Most of the differences between his packaging and this package are stylistic in\n nature. The major differences:\n@@ -174,9 +174,9 @@ academic.\n specifying a build without the Qt GUI, or specifying which version of the Qt\n libraries to use.\n \n-4. I renamed the `bitcoin` package that contains the Qt GUI to `bitcoin-core` as\n+4. I renamed the `raven` package that contains the Qt GUI to `raven-core` as\n that appears to be how the general population refers to it, in contrast to\n-`bitcoin-xt` or `bitcoin-classic`. I wanted to make sure the general population\n+`raven-xt` or `raven-classic`. I wanted to make sure the general population\n knows what they are getting when installing the GUI package.\n \n As far as minor differences, I generally prefer to assign the file permissions"
      },
      {
        "sha": "555614a06d49ab820fce1e08f723005b26cdcb01",
        "filename": "contrib/rpm/bitcoin-0.12.0-libressl.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 24,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/contrib/rpm/bitcoin-0.12.0-libressl.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/contrib/rpm/bitcoin-0.12.0-libressl.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/rpm/bitcoin-0.12.0-libressl.patch?ref=ddeacfcff563b602b8833287a34dfbee340e5bec",
        "patch": "@@ -1,24 +0,0 @@\n-diff -ur bitcoin-0.12.0.orig/src/init.cpp bitcoin-0.12.0/src/init.cpp\n---- bitcoin-0.12.0.orig/src/init.cpp\t2015-12-31 16:00:00.000000000 -0800\n-+++ bitcoin-0.12.0/src/init.cpp\t2016-02-23 06:03:47.133227757 -0800\n-@@ -1075,7 +1075,7 @@\n-     if (fPrintToDebugLog)\n-         OpenDebugLog();\n- \n--#if (OPENSSL_VERSION_NUMBER < 0x10100000L)\n-+#if defined(LIBRESSL_VERSION_NUMBER) || (OPENSSL_VERSION_NUMBER < 0x10100000L)\n-     LogPrintf(\"Using OpenSSL version %s\\n\", SSLeay_version(SSLEAY_VERSION));\n- #else\n-     LogPrintf(\"Using OpenSSL version %s\\n\", OpenSSL_version(OPENSSL_VERSION));\n-diff -ur bitcoin-0.12.0.orig/src/qt/rpcconsole.cpp bitcoin-0.12.0/src/qt/rpcconsole.cpp\n---- bitcoin-0.12.0.orig/src/qt/rpcconsole.cpp\t2015-12-31 16:00:00.000000000 -0800\n-+++ bitcoin-0.12.0/src/qt/rpcconsole.cpp\t2016-02-23 15:09:42.881126841 -0800\n-@@ -264,7 +264,7 @@\n- \n-     // set library version labels\n- \n--#if (OPENSSL_VERSION_NUMBER < 0x10100000L)\n-+#if defined(LIBRESSL_VERSION_NUMBER) || (OPENSSL_VERSION_NUMBER < 0x10100000L)\n-     ui->openSSLVersion->setText(SSLeay_version(SSLEAY_VERSION));\n- #else\n-     ui->openSSLVersion->setText(OpenSSL_version(OPENSSL_VERSION));"
      },
      {
        "sha": "b674373e06f02ebb2e1c49605c46dc2d0f2b6af6",
        "filename": "contrib/rpm/bitcoin.fc",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/rpm/bitcoin.fc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/rpm/bitcoin.fc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/rpm/bitcoin.fc?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,8 +1,8 @@\n-/usr/bin/bitcoin-cli\t\t--\tgen_context(system_u:object_r:bitcoin_exec_t,s0)\n-/usr/sbin/bitcoind\t\t--\tgen_context(system_u:object_r:bitcoin_exec_t,s0)\n-/usr/lib(64)?/bitcoin/bitcoind\t\t--\tgen_context(system_u:object_r:bitcoin_exec_t,s0)\n+/usr/bin/raven-cli\t\t--\tgen_context(system_u:object_r:raven_exec_t,s0)\n+/usr/sbin/ravend\t\t--\tgen_context(system_u:object_r:raven_exec_t,s0)\n+/usr/lib(64)?/raven/ravend\t\t--\tgen_context(system_u:object_r:raven_exec_t,s0)\n \n-/etc/bitcoin(/.*)?\t\tgen_context(system_u:object_r:bitcoin_conf_t,s0)\n-/var/lib/bitcoin(/.*)?\t\tgen_context(system_u:object_r:bitcoin_var_lib_t,s0)\n+/etc/raven(/.*)?\t\tgen_context(system_u:object_r:raven_conf_t,s0)\n+/var/lib/raven(/.*)?\t\tgen_context(system_u:object_r:raven_var_lib_t,s0)\n \n-(/var)?/run/bitcoind(/.*)?   gen_context(system_u:object_r:bitcoin_var_run_t,s0)\n+(/var)?/run/ravend(/.*)?   gen_context(system_u:object_r:raven_var_run_t,s0)"
      },
      {
        "sha": "5e305ae2ac428b00a8d4e9798d2f7f4c93abfb5c",
        "filename": "contrib/rpm/bitcoin.if",
        "status": "modified",
        "additions": 35,
        "deletions": 35,
        "changes": 70,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/rpm/bitcoin.if",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/rpm/bitcoin.if",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/rpm/bitcoin.if?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,127 +1,127 @@\n \n-## <summary>policy for bitcoin</summary>\n+## <summary>policy for raven</summary>\n \n \n ########################################\n ## <summary>\n-##\tTransition to bitcoin.\n+##\tTransition to raven.\n ## </summary>\n ## <param name=\"domain\">\n ## <summary>\n ##\tDomain allowed to transition.\n ## </summary>\n ## </param>\n #\n-interface(`bitcoin_domtrans',`\n+interface(`raven_domtrans',`\n \tgen_require(`\n-\t\ttype bitcoin_t, bitcoin_exec_t;\n+\t\ttype raven_t, raven_exec_t;\n \t')\n \n \tcorecmd_search_bin($1)\n-\tdomtrans_pattern($1, bitcoin_exec_t, bitcoin_t)\n+\tdomtrans_pattern($1, raven_exec_t, raven_t)\n ')\n \n \n ########################################\n ## <summary>\n-##\tExecute bitcoin server in the bitcoin domain.\n+##\tExecute raven server in the raven domain.\n ## </summary>\n ## <param name=\"domain\">\n ##\t<summary>\n ##\tDomain allowed access.\n ##\t</summary>\n ## </param>\n #\n-interface(`bitcoin_initrc_domtrans',`\n+interface(`raven_initrc_domtrans',`\n \tgen_require(`\n-\t\ttype bitcoin_initrc_exec_t;\n+\t\ttype raven_initrc_exec_t;\n \t')\n \n-\tinit_labeled_script_domtrans($1, bitcoin_initrc_exec_t)\n+\tinit_labeled_script_domtrans($1, raven_initrc_exec_t)\n ')\n \n \n ########################################\n ## <summary>\n-##\tSearch bitcoin lib directories.\n+##\tSearch raven lib directories.\n ## </summary>\n ## <param name=\"domain\">\n ##\t<summary>\n ##\tDomain allowed access.\n ##\t</summary>\n ## </param>\n #\n-interface(`bitcoin_search_lib',`\n+interface(`raven_search_lib',`\n \tgen_require(`\n-\t\ttype bitcoin_var_lib_t;\n+\t\ttype raven_var_lib_t;\n \t')\n \n-\tallow $1 bitcoin_var_lib_t:dir search_dir_perms;\n+\tallow $1 raven_var_lib_t:dir search_dir_perms;\n \tfiles_search_var_lib($1)\n ')\n \n ########################################\n ## <summary>\n-##\tRead bitcoin lib files.\n+##\tRead raven lib files.\n ## </summary>\n ## <param name=\"domain\">\n ##\t<summary>\n ##\tDomain allowed access.\n ##\t</summary>\n ## </param>\n #\n-interface(`bitcoin_read_lib_files',`\n+interface(`raven_read_lib_files',`\n \tgen_require(`\n-\t\ttype bitcoin_var_lib_t;\n+\t\ttype raven_var_lib_t;\n \t')\n \n \tfiles_search_var_lib($1)\n-\tread_files_pattern($1, bitcoin_var_lib_t, bitcoin_var_lib_t)\n+\tread_files_pattern($1, raven_var_lib_t, raven_var_lib_t)\n ')\n \n ########################################\n ## <summary>\n-##\tManage bitcoin lib files.\n+##\tManage raven lib files.\n ## </summary>\n ## <param name=\"domain\">\n ##\t<summary>\n ##\tDomain allowed access.\n ##\t</summary>\n ## </param>\n #\n-interface(`bitcoin_manage_lib_files',`\n+interface(`raven_manage_lib_files',`\n \tgen_require(`\n-\t\ttype bitcoin_var_lib_t;\n+\t\ttype raven_var_lib_t;\n \t')\n \n \tfiles_search_var_lib($1)\n-\tmanage_files_pattern($1, bitcoin_var_lib_t, bitcoin_var_lib_t)\n+\tmanage_files_pattern($1, raven_var_lib_t, raven_var_lib_t)\n ')\n \n ########################################\n ## <summary>\n-##\tManage bitcoin lib directories.\n+##\tManage raven lib directories.\n ## </summary>\n ## <param name=\"domain\">\n ##\t<summary>\n ##\tDomain allowed access.\n ##\t</summary>\n ## </param>\n #\n-interface(`bitcoin_manage_lib_dirs',`\n+interface(`raven_manage_lib_dirs',`\n \tgen_require(`\n-\t\ttype bitcoin_var_lib_t;\n+\t\ttype raven_var_lib_t;\n \t')\n \n \tfiles_search_var_lib($1)\n-\tmanage_dirs_pattern($1, bitcoin_var_lib_t, bitcoin_var_lib_t)\n+\tmanage_dirs_pattern($1, raven_var_lib_t, raven_var_lib_t)\n ')\n \n \n ########################################\n ## <summary>\n ##\tAll of the rules required to administrate\n-##\ta bitcoin environment\n+##\ta raven environment\n ## </summary>\n ## <param name=\"domain\">\n ##\t<summary>\n@@ -135,23 +135,23 @@ interface(`bitcoin_manage_lib_dirs',`\n ## </param>\n ## <rolecap/>\n #\n-interface(`bitcoin_admin',`\n+interface(`raven_admin',`\n \tgen_require(`\n-\t\ttype bitcoin_t;\n-\t\ttype bitcoin_initrc_exec_t;\n-\t\ttype bitcoin_var_lib_t;\n+\t\ttype raven_t;\n+\t\ttype raven_initrc_exec_t;\n+\t\ttype raven_var_lib_t;\n \t')\n \n-\tallow $1 bitcoin_t:process { ptrace signal_perms };\n-\tps_process_pattern($1, bitcoin_t)\n+\tallow $1 raven_t:process { ptrace signal_perms };\n+\tps_process_pattern($1, raven_t)\n \n-\tbitcoin_initrc_domtrans($1)\n+\traven_initrc_domtrans($1)\n \tdomain_system_change_exemption($1)\n-\trole_transition $2 bitcoin_initrc_exec_t system_r;\n+\trole_transition $2 raven_initrc_exec_t system_r;\n \tallow $2 system_r;\n \n \tfiles_search_var_lib($1)\n-\tadmin_pattern($1, bitcoin_var_lib_t)\n+\tadmin_pattern($1, raven_var_lib_t)\n \n ')\n "
      },
      {
        "sha": "c03dc9e0a6493f811f9e3247d9e66ca8bb0c1012",
        "filename": "contrib/rpm/bitcoin.spec",
        "status": "modified",
        "additions": 131,
        "deletions": 127,
        "changes": 258,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/rpm/bitcoin.spec",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/rpm/bitcoin.spec",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/rpm/bitcoin.spec?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -13,31 +13,31 @@\n %endif\n %endif\n \n-Name:\t\tbitcoin\n+Name:\t\traven\n Version:\t0.12.0\n Release:\t2%{?dist}\n Summary:\tPeer to Peer Cryptographic Currency\n \n Group:\t\tApplications/System\n License:\tMIT\n-URL:\t\thttps://bitcoin.org/\n-Source0:\thttps://bitcoin.org/bin/bitcoin-core-%{version}/bitcoin-%{version}.tar.gz\n+URL:\t\thttps://raven.org/\n+Source0:\thttps://raven.org/bin/raven-core-%{version}/raven-%{version}.tar.gz\n Source1:\thttp://download.oracle.com/berkeley-db/db-%{bdbv}.NC.tar.gz\n \n-Source10:\thttps://raw.githubusercontent.com/bitcoin/bitcoin/v%{version}/contrib/debian/examples/bitcoin.conf\n+Source10:\thttps://raw.githubusercontent.com/raven/raven/v%{version}/contrib/debian/examples/raven.conf\n \n #man pages\n-Source20:\thttps://raw.githubusercontent.com/bitcoin/bitcoin/v%{version}/doc/man/bitcoind.1\n-Source21:\thttps://raw.githubusercontent.com/bitcoin/bitcoin/v%{version}/doc/man/bitcoin-cli.1\n-Source22:\thttps://raw.githubusercontent.com/bitcoin/bitcoin/v%{version}/doc/man/bitcoin-qt.1\n+Source20:\thttps://raw.githubusercontent.com/raven/raven/v%{version}/doc/man/ravend.1\n+Source21:\thttps://raw.githubusercontent.com/raven/raven/v%{version}/doc/man/raven-cli.1\n+Source22:\thttps://raw.githubusercontent.com/raven/raven/v%{version}/doc/man/raven-qt.1\n \n #selinux\n-Source30:\thttps://raw.githubusercontent.com/bitcoin/bitcoin/v%{version}/contrib/rpm/bitcoin.te\n-# Source31 - what about bitcoin-tx and bench_bitcoin ???\n-Source31:\thttps://raw.githubusercontent.com/bitcoin/bitcoin/v%{version}/contrib/rpm/bitcoin.fc\n-Source32:\thttps://raw.githubusercontent.com/bitcoin/bitcoin/v%{version}/contrib/rpm/bitcoin.if\n+Source30:\thttps://raw.githubusercontent.com/raven/raven/v%{version}/contrib/rpm/raven.te\n+# Source31 - what about raven-tx and bench_raven ???\n+Source31:\thttps://raw.githubusercontent.com/raven/raven/v%{version}/contrib/rpm/raven.fc\n+Source32:\thttps://raw.githubusercontent.com/raven/raven/v%{version}/contrib/rpm/raven.if\n \n-Source100:\thttps://upload.wikimedia.org/wikipedia/commons/4/46/Bitcoin.svg\n+Source100:\thttps://upload.wikimedia.org/wikipedia/commons/4/46/Raven.svg\n \n %if 0%{?_use_libressl:1}\n BuildRequires:\tlibressl-devel\n@@ -50,13 +50,13 @@ BuildRequires:\tautoconf automake libtool\n BuildRequires:\tlibevent-devel\n \n \n-Patch0:\t\tbitcoin-0.12.0-libressl.patch\n+Patch0:\t\traven-0.12.0-libressl.patch\n \n \n %description\n-Bitcoin is a digital cryptographic currency that uses peer-to-peer technology to\n+Raven is a digital cryptographic currency that uses peer-to-peer technology to\n operate with no central authority or banks; managing transactions and the\n-issuing of bitcoins is carried out collectively by the network.\n+issuing of ravens is carried out collectively by the network.\n \n %if %{_buildqt}\n %package core\n@@ -79,42 +79,42 @@ BuildRequires:\t%{_bindir}/inkscape\n BuildRequires:\t%{_bindir}/convert\n \n %description core\n-Bitcoin is a digital cryptographic currency that uses peer-to-peer technology to\n+Raven is a digital cryptographic currency that uses peer-to-peer technology to\n operate with no central authority or banks; managing transactions and the\n-issuing of bitcoins is carried out collectively by the network.\n+issuing of ravens is carried out collectively by the network.\n \n This package contains the Qt based graphical client and node. If you are looking\n-to run a Bitcoin wallet, this is probably the package you want.\n+to run a Raven wallet, this is probably the package you want.\n %endif\n \n \n %package libs\n-Summary:\tBitcoin shared libraries\n+Summary:\tRaven shared libraries\n Group:\t\tSystem Environment/Libraries\n \n %description libs\n-This package provides the bitcoinconsensus shared libraries. These libraries\n+This package provides the ravenconsensus shared libraries. These libraries\n may be used by third party software to provide consensus verification\n functionality.\n \n Unless you know need this package, you probably do not.\n \n %package devel\n-Summary:\tDevelopment files for bitcoin\n+Summary:\tDevelopment files for raven\n Group:\t\tDevelopment/Libraries\n Requires:\t%{name}-libs = %{version}-%{release}\n \n %description devel\n This package contains the header files and static library for the\n-bitcoinconsensus shared library. If you are developing or compiling software\n+ravenconsensus shared library. If you are developing or compiling software\n that wants to link against that library, then you need this package installed.\n \n Most people do not need this package installed.\n \n %package server\n-Summary:\tThe bitcoin daemon\n+Summary:\tThe raven daemon\n Group:\t\tSystem Environment/Daemons\n-Requires:\tbitcoin-utils = %{version}-%{release}\n+Requires:\traven-utils = %{version}-%{release}\n Requires:\tselinux-policy policycoreutils-python\n Requires(pre):\tshadow-utils\n Requires(post):\t%{_sbindir}/semodule %{_sbindir}/restorecon %{_sbindir}/fixfiles %{_sbindir}/sestatus\n@@ -124,34 +124,34 @@ BuildRequires:\tcheckpolicy\n BuildRequires:\t%{_datadir}/selinux/devel/Makefile\n \n %description server\n-This package provides a stand-alone bitcoin-core daemon. For most users, this\n+This package provides a stand-alone raven-core daemon. For most users, this\n package is only needed if they need a full-node without the graphical client.\n \n Some third party wallet software will want this package to provide the actual\n-bitcoin-core node they use to connect to the network.\n+raven-core node they use to connect to the network.\n \n-If you use the graphical bitcoin-core client then you almost certainly do not\n+If you use the graphical raven-core client then you almost certainly do not\n need this package.\n \n %package utils\n-Summary:\tBitcoin utilities\n+Summary:\tRaven utilities\n Group:\t\tApplications/System\n \n %description utils\n This package provides several command line utilities for interacting with a\n-bitcoin-core daemon.\n+raven-core daemon.\n \n-The bitcoin-cli utility allows you to communicate and control a bitcoin daemon\n-over RPC, the bitcoin-tx utility allows you to create a custom transaction, and\n-the bench_bitcoin utility can be used to perform some benchmarks.\n+The raven-cli utility allows you to communicate and control a raven daemon\n+over RPC, the raven-tx utility allows you to create a custom transaction, and\n+the bench_raven utility can be used to perform some benchmarks.\n \n-This package contains utilities needed by the bitcoin-server package.\n+This package contains utilities needed by the raven-server package.\n \n \n %prep\n %setup -q\n %patch0 -p1 -b .libressl\n-cp -p %{SOURCE10} ./bitcoin.conf.example\n+cp -p %{SOURCE10} ./raven.conf.example\n tar -zxf %{SOURCE1}\n cp -p db-%{bdbv}.NC/LICENSE ./db-%{bdbv}.NC-LICENSE\n mkdir db4 SELinux\n@@ -172,7 +172,7 @@ make %{?_smp_mflags}\n pushd SELinux\n for selinuxvariant in %{selinux_variants}; do\n \tmake NAME=${selinuxvariant} -f %{_datadir}/selinux/devel/Makefile\n-\tmv bitcoin.pp bitcoin.pp.${selinuxvariant}\n+\tmv raven.pp raven.pp.${selinuxvariant}\n \tmake NAME=${selinuxvariant} -f %{_datadir}/selinux/devel/Makefile clean\n done\n popd\n@@ -182,42 +182,42 @@ popd\n make install DESTDIR=%{buildroot}\n \n mkdir -p -m755 %{buildroot}%{_sbindir}\n-mv %{buildroot}%{_bindir}/bitcoind %{buildroot}%{_sbindir}/bitcoind\n+mv %{buildroot}%{_bindir}/ravend %{buildroot}%{_sbindir}/ravend\n \n # systemd stuff\n mkdir -p %{buildroot}%{_tmpfilesdir}\n-cat <<EOF > %{buildroot}%{_tmpfilesdir}/bitcoin.conf\n-d /run/bitcoind 0750 bitcoin bitcoin -\n+cat <<EOF > %{buildroot}%{_tmpfilesdir}/raven.conf\n+d /run/ravend 0750 raven raven -\n EOF\n-touch -a -m -t 201504280000 %{buildroot}%{_tmpfilesdir}/bitcoin.conf\n+touch -a -m -t 201504280000 %{buildroot}%{_tmpfilesdir}/raven.conf\n \n mkdir -p %{buildroot}%{_sysconfdir}/sysconfig\n-cat <<EOF > %{buildroot}%{_sysconfdir}/sysconfig/bitcoin\n-# Provide options to the bitcoin daemon here, for example\n+cat <<EOF > %{buildroot}%{_sysconfdir}/sysconfig/raven\n+# Provide options to the raven daemon here, for example\n # OPTIONS=\"-testnet -disable-wallet\"\n \n OPTIONS=\"\"\n \n # System service defaults.\n # Don't change these unless you know what you're doing.\n-CONFIG_FILE=\"%{_sysconfdir}/bitcoin/bitcoin.conf\"\n-DATA_DIR=\"%{_localstatedir}/lib/bitcoin\"\n-PID_FILE=\"/run/bitcoind/bitcoind.pid\"\n+CONFIG_FILE=\"%{_sysconfdir}/raven/raven.conf\"\n+DATA_DIR=\"%{_localstatedir}/lib/raven\"\n+PID_FILE=\"/run/ravend/ravend.pid\"\n EOF\n-touch -a -m -t 201504280000 %{buildroot}%{_sysconfdir}/sysconfig/bitcoin\n+touch -a -m -t 201504280000 %{buildroot}%{_sysconfdir}/sysconfig/raven\n \n mkdir -p %{buildroot}%{_unitdir}\n-cat <<EOF > %{buildroot}%{_unitdir}/bitcoin.service\n+cat <<EOF > %{buildroot}%{_unitdir}/raven.service\n [Unit]\n-Description=Bitcoin daemon\n+Description=Raven daemon\n After=syslog.target network.target\n \n [Service]\n Type=forking\n-ExecStart=%{_sbindir}/bitcoind -daemon -conf=\\${CONFIG_FILE} -datadir=\\${DATA_DIR} -pid=\\${PID_FILE} \\$OPTIONS\n-EnvironmentFile=%{_sysconfdir}/sysconfig/bitcoin\n-User=bitcoin\n-Group=bitcoin\n+ExecStart=%{_sbindir}/ravend -daemon -conf=\\${CONFIG_FILE} -datadir=\\${DATA_DIR} -pid=\\${PID_FILE} \\$OPTIONS\n+EnvironmentFile=%{_sysconfdir}/sysconfig/raven\n+User=raven\n+Group=raven\n \n Restart=on-failure\n PrivateTmp=true\n@@ -229,63 +229,63 @@ StartLimitBurst=5\n [Install]\n WantedBy=multi-user.target\n EOF\n-touch -a -m -t 201504280000 %{buildroot}%{_unitdir}/bitcoin.service\n+touch -a -m -t 201504280000 %{buildroot}%{_unitdir}/raven.service\n #end systemd stuff\n \n-mkdir %{buildroot}%{_sysconfdir}/bitcoin\n-mkdir -p %{buildroot}%{_localstatedir}/lib/bitcoin\n+mkdir %{buildroot}%{_sysconfdir}/raven\n+mkdir -p %{buildroot}%{_localstatedir}/lib/raven\n \n #SELinux\n for selinuxvariant in %{selinux_variants}; do\n \tinstall -d %{buildroot}%{_datadir}/selinux/${selinuxvariant}\n-\tinstall -p -m 644 SELinux/bitcoin.pp.${selinuxvariant} %{buildroot}%{_datadir}/selinux/${selinuxvariant}/bitcoin.pp\n+\tinstall -p -m 644 SELinux/raven.pp.${selinuxvariant} %{buildroot}%{_datadir}/selinux/${selinuxvariant}/raven.pp\n done\n \n %if %{_buildqt}\n # qt icons\n-install -D -p share/pixmaps/bitcoin.ico %{buildroot}%{_datadir}/pixmaps/bitcoin.ico\n+install -D -p share/pixmaps/raven.ico %{buildroot}%{_datadir}/pixmaps/raven.ico\n install -p share/pixmaps/nsis-header.bmp %{buildroot}%{_datadir}/pixmaps/\n install -p share/pixmaps/nsis-wizard.bmp %{buildroot}%{_datadir}/pixmaps/\n-install -p %{SOURCE100} %{buildroot}%{_datadir}/pixmaps/bitcoin.svg\n-%{_bindir}/inkscape %{SOURCE100} --export-png=%{buildroot}%{_datadir}/pixmaps/bitcoin16.png -w16 -h16\n-%{_bindir}/inkscape %{SOURCE100} --export-png=%{buildroot}%{_datadir}/pixmaps/bitcoin32.png -w32 -h32\n-%{_bindir}/inkscape %{SOURCE100} --export-png=%{buildroot}%{_datadir}/pixmaps/bitcoin64.png -w64 -h64\n-%{_bindir}/inkscape %{SOURCE100} --export-png=%{buildroot}%{_datadir}/pixmaps/bitcoin128.png -w128 -h128\n-%{_bindir}/inkscape %{SOURCE100} --export-png=%{buildroot}%{_datadir}/pixmaps/bitcoin256.png -w256 -h256\n-%{_bindir}/convert -resize 16x16 %{buildroot}%{_datadir}/pixmaps/bitcoin256.png %{buildroot}%{_datadir}/pixmaps/bitcoin16.xpm\n-%{_bindir}/convert -resize 32x32 %{buildroot}%{_datadir}/pixmaps/bitcoin256.png %{buildroot}%{_datadir}/pixmaps/bitcoin32.xpm\n-%{_bindir}/convert -resize 64x64 %{buildroot}%{_datadir}/pixmaps/bitcoin256.png %{buildroot}%{_datadir}/pixmaps/bitcoin64.xpm\n-%{_bindir}/convert -resize 128x128 %{buildroot}%{_datadir}/pixmaps/bitcoin256.png %{buildroot}%{_datadir}/pixmaps/bitcoin128.xpm\n-%{_bindir}/convert %{buildroot}%{_datadir}/pixmaps/bitcoin256.png %{buildroot}%{_datadir}/pixmaps/bitcoin256.xpm\n+install -p %{SOURCE100} %{buildroot}%{_datadir}/pixmaps/raven.svg\n+%{_bindir}/inkscape %{SOURCE100} --export-png=%{buildroot}%{_datadir}/pixmaps/raven16.png -w16 -h16\n+%{_bindir}/inkscape %{SOURCE100} --export-png=%{buildroot}%{_datadir}/pixmaps/raven32.png -w32 -h32\n+%{_bindir}/inkscape %{SOURCE100} --export-png=%{buildroot}%{_datadir}/pixmaps/raven64.png -w64 -h64\n+%{_bindir}/inkscape %{SOURCE100} --export-png=%{buildroot}%{_datadir}/pixmaps/raven128.png -w128 -h128\n+%{_bindir}/inkscape %{SOURCE100} --export-png=%{buildroot}%{_datadir}/pixmaps/raven256.png -w256 -h256\n+%{_bindir}/convert -resize 16x16 %{buildroot}%{_datadir}/pixmaps/raven256.png %{buildroot}%{_datadir}/pixmaps/raven16.xpm\n+%{_bindir}/convert -resize 32x32 %{buildroot}%{_datadir}/pixmaps/raven256.png %{buildroot}%{_datadir}/pixmaps/raven32.xpm\n+%{_bindir}/convert -resize 64x64 %{buildroot}%{_datadir}/pixmaps/raven256.png %{buildroot}%{_datadir}/pixmaps/raven64.xpm\n+%{_bindir}/convert -resize 128x128 %{buildroot}%{_datadir}/pixmaps/raven256.png %{buildroot}%{_datadir}/pixmaps/raven128.xpm\n+%{_bindir}/convert %{buildroot}%{_datadir}/pixmaps/raven256.png %{buildroot}%{_datadir}/pixmaps/raven256.xpm\n touch %{buildroot}%{_datadir}/pixmaps/*.png -r %{SOURCE100}\n touch %{buildroot}%{_datadir}/pixmaps/*.xpm -r %{SOURCE100}\n \n # Desktop File - change the touch timestamp if modifying\n mkdir -p %{buildroot}%{_datadir}/applications\n-cat <<EOF > %{buildroot}%{_datadir}/applications/bitcoin-core.desktop\n+cat <<EOF > %{buildroot}%{_datadir}/applications/raven-core.desktop\n [Desktop Entry]\n Encoding=UTF-8\n-Name=Bitcoin\n-Comment=Bitcoin P2P Cryptocurrency\n-Comment[fr]=Bitcoin, monnaie virtuelle cryptographique pair \u00e0 pair\n-Comment[tr]=Bitcoin, e\u015ften e\u015fe kriptografik sanal para birimi\n-Exec=bitcoin-qt %u\n+Name=Raven\n+Comment=Raven P2P Cryptocurrency\n+Comment[fr]=Raven, monnaie virtuelle cryptographique pair \u00e0 pair\n+Comment[tr]=Raven, e\u015ften e\u015fe kriptografik sanal para birimi\n+Exec=raven-qt %u\n Terminal=false\n Type=Application\n-Icon=bitcoin128\n-MimeType=x-scheme-handler/bitcoin;\n+Icon=raven128\n+MimeType=x-scheme-handler/raven;\n Categories=Office;Finance;\n EOF\n # change touch date when modifying desktop\n-touch -a -m -t 201511100546 %{buildroot}%{_datadir}/applications/bitcoin-core.desktop\n-%{_bindir}/desktop-file-validate %{buildroot}%{_datadir}/applications/bitcoin-core.desktop\n+touch -a -m -t 201511100546 %{buildroot}%{_datadir}/applications/raven-core.desktop\n+%{_bindir}/desktop-file-validate %{buildroot}%{_datadir}/applications/raven-core.desktop\n \n # KDE protocol - change the touch timestamp if modifying\n mkdir -p %{buildroot}%{_datadir}/kde4/services\n-cat <<EOF > %{buildroot}%{_datadir}/kde4/services/bitcoin-core.protocol\n+cat <<EOF > %{buildroot}%{_datadir}/kde4/services/raven-core.protocol\n [Protocol]\n-exec=bitcoin-qt '%u'\n-protocol=bitcoin\n+exec=raven-qt '%u'\n+protocol=raven\n input=none\n output=none\n helper=true\n@@ -296,71 +296,75 @@ makedir=false\n deleting=false\n EOF\n # change touch date when modifying protocol\n-touch -a -m -t 201511100546 %{buildroot}%{_datadir}/kde4/services/bitcoin-core.protocol\n+touch -a -m -t 201511100546 %{buildroot}%{_datadir}/kde4/services/raven-core.protocol\n %endif\n \n # man pages\n-install -D -p %{SOURCE20} %{buildroot}%{_mandir}/man1/bitcoind.1\n-install -p %{SOURCE21} %{buildroot}%{_mandir}/man1/bitcoin-cli.1\n+install -D -p %{SOURCE20} %{buildroot}%{_mandir}/man1/ravend.1\n+install -p %{SOURCE21} %{buildroot}%{_mandir}/man1/raven-cli.1\n %if %{_buildqt}\n-install -p %{SOURCE22} %{buildroot}%{_mandir}/man1/bitcoin-qt.1\n+install -p %{SOURCE22} %{buildroot}%{_mandir}/man1/raven-qt.1\n %endif\n \n # nuke these, we do extensive testing of binaries in %%check before packaging\n rm -f %{buildroot}%{_bindir}/test_*\n \n %check\n make check\n-srcdir=src test/bitcoin-util-test.py\n+srcdir=src test/raven-util-test.py\n test/functional/test_runner.py --extended\n \n %post libs -p /sbin/ldconfig\n \n %postun libs -p /sbin/ldconfig\n \n %pre server\n-getent group bitcoin >/dev/null || groupadd -r bitcoin\n-getent passwd bitcoin >/dev/null ||\n-\tuseradd -r -g bitcoin -d /var/lib/bitcoin -s /sbin/nologin \\\n-\t-c \"Bitcoin wallet server\" bitcoin\n+getent group raven >/dev/null || groupadd -r raven\n+getent passwd raven >/dev/null ||\n+\tuseradd -r -g raven -d /var/lib/raven -s /sbin/nologin \\\n+\t-c \"Raven wallet server\" raven\n exit 0\n \n %post server\n-%systemd_post bitcoin.service\n+%systemd_post raven.service\n # SELinux\n if [ `%{_sbindir}/sestatus |grep -c \"disabled\"` -eq 0 ]; then\n for selinuxvariant in %{selinux_variants}; do\n-\t%{_sbindir}/semodule -s ${selinuxvariant} -i %{_datadir}/selinux/${selinuxvariant}/bitcoin.pp &> /dev/null || :\n+\t%{_sbindir}/semodule -s ${selinuxvariant} -i %{_datadir}/selinux/${selinuxvariant}/raven.pp &> /dev/null || :\n done\n-%{_sbindir}/semanage port -a -t bitcoin_port_t -p tcp 8332\n-%{_sbindir}/semanage port -a -t bitcoin_port_t -p tcp 8333\n-%{_sbindir}/semanage port -a -t bitcoin_port_t -p tcp 18332\n-%{_sbindir}/semanage port -a -t bitcoin_port_t -p tcp 18333\n-%{_sbindir}/fixfiles -R bitcoin-server restore &> /dev/null || :\n-%{_sbindir}/restorecon -R %{_localstatedir}/lib/bitcoin || :\n+%{_sbindir}/semanage port -a -t raven_port_t -p tcp 8766\n+%{_sbindir}/semanage port -a -t raven_port_t -p tcp 8767\n+%{_sbindir}/semanage port -a -t raven_port_t -p tcp 18766\n+%{_sbindir}/semanage port -a -t raven_port_t -p tcp 18767\n+%{_sbindir}/semanage port -a -t raven_port_t -p tcp 18443\n+%{_sbindir}/semanage port -a -t raven_port_t -p tcp 18444\n+%{_sbindir}/fixfiles -R raven-server restore &> /dev/null || :\n+%{_sbindir}/restorecon -R %{_localstatedir}/lib/raven || :\n fi\n \n %posttrans server\n %{_bindir}/systemd-tmpfiles --create\n \n %preun server\n-%systemd_preun bitcoin.service\n+%systemd_preun raven.service\n \n %postun server\n-%systemd_postun bitcoin.service\n+%systemd_postun raven.service\n # SELinux\n if [ $1 -eq 0 ]; then\n \tif [ `%{_sbindir}/sestatus |grep -c \"disabled\"` -eq 0 ]; then\n-\t%{_sbindir}/semanage port -d -p tcp 8332\n-\t%{_sbindir}/semanage port -d -p tcp 8333\n-\t%{_sbindir}/semanage port -d -p tcp 18332\n-\t%{_sbindir}/semanage port -d -p tcp 18333\n+\t%{_sbindir}/semanage port -d -p tcp 8766\n+\t%{_sbindir}/semanage port -d -p tcp 8767\n+\t%{_sbindir}/semanage port -d -p tcp 18766\n+\t%{_sbindir}/semanage port -d -p tcp 18767\n+\t%{_sbindir}/semanage port -d -p tcp 18443\n+\t%{_sbindir}/semanage port -d -p tcp 18444\n \tfor selinuxvariant in %{selinux_variants}; do\n-\t\t%{_sbindir}/semodule -s ${selinuxvariant} -r bitcoin &> /dev/null || :\n+\t\t%{_sbindir}/semodule -s ${selinuxvariant} -r raven &> /dev/null || :\n \tdone\n-\t%{_sbindir}/fixfiles -R bitcoin-server restore &> /dev/null || :\n-\t[ -d %{_localstatedir}/lib/bitcoin ] && \\\n-\t\t%{_sbindir}/restorecon -R %{_localstatedir}/lib/bitcoin &> /dev/null || :\n+\t%{_sbindir}/fixfiles -R raven-server restore &> /dev/null || :\n+\t[ -d %{_localstatedir}/lib/raven ] && \\\n+\t\t%{_sbindir}/restorecon -R %{_localstatedir}/lib/raven &> /dev/null || :\n \tfi\n fi\n \n@@ -371,16 +375,16 @@ rm -rf %{buildroot}\n %files core\n %defattr(-,root,root,-)\n %license COPYING db-%{bdbv}.NC-LICENSE\n-%doc COPYING bitcoin.conf.example doc/README.md doc/bips.md doc/files.md doc/multiwallet-qt.md doc/reduce-traffic.md doc/release-notes.md doc/tor.md\n-%attr(0755,root,root) %{_bindir}/bitcoin-qt\n-%attr(0644,root,root) %{_datadir}/applications/bitcoin-core.desktop\n-%attr(0644,root,root) %{_datadir}/kde4/services/bitcoin-core.protocol\n+%doc COPYING raven.conf.example doc/README.md doc/bips.md doc/files.md doc/multiwallet-qt.md doc/reduce-traffic.md doc/release-notes.md doc/tor.md\n+%attr(0755,root,root) %{_bindir}/raven-qt\n+%attr(0644,root,root) %{_datadir}/applications/raven-core.desktop\n+%attr(0644,root,root) %{_datadir}/kde4/services/raven-core.protocol\n %attr(0644,root,root) %{_datadir}/pixmaps/*.ico\n %attr(0644,root,root) %{_datadir}/pixmaps/*.bmp\n %attr(0644,root,root) %{_datadir}/pixmaps/*.svg\n %attr(0644,root,root) %{_datadir}/pixmaps/*.png\n %attr(0644,root,root) %{_datadir}/pixmaps/*.xpm\n-%attr(0644,root,root) %{_mandir}/man1/bitcoin-qt.1*\n+%attr(0644,root,root) %{_mandir}/man1/raven-qt.1*\n %endif\n \n %files libs\n@@ -402,30 +406,30 @@ rm -rf %{buildroot}\n %files server\n %defattr(-,root,root,-)\n %license COPYING db-%{bdbv}.NC-LICENSE\n-%doc COPYING bitcoin.conf.example doc/README.md doc/REST-interface.md doc/bips.md doc/dnsseed-policy.md doc/files.md doc/reduce-traffic.md doc/release-notes.md doc/tor.md\n-%attr(0755,root,root) %{_sbindir}/bitcoind\n-%attr(0644,root,root) %{_tmpfilesdir}/bitcoin.conf\n-%attr(0644,root,root) %{_unitdir}/bitcoin.service\n-%dir %attr(0750,bitcoin,bitcoin) %{_sysconfdir}/bitcoin\n-%dir %attr(0750,bitcoin,bitcoin) %{_localstatedir}/lib/bitcoin\n-%config(noreplace) %attr(0600,root,root) %{_sysconfdir}/sysconfig/bitcoin\n+%doc COPYING raven.conf.example doc/README.md doc/REST-interface.md doc/bips.md doc/dnsseed-policy.md doc/files.md doc/reduce-traffic.md doc/release-notes.md doc/tor.md\n+%attr(0755,root,root) %{_sbindir}/ravend\n+%attr(0644,root,root) %{_tmpfilesdir}/raven.conf\n+%attr(0644,root,root) %{_unitdir}/raven.service\n+%dir %attr(0750,raven,raven) %{_sysconfdir}/raven\n+%dir %attr(0750,raven,raven) %{_localstatedir}/lib/raven\n+%config(noreplace) %attr(0600,root,root) %{_sysconfdir}/sysconfig/raven\n %attr(0644,root,root) %{_datadir}/selinux/*/*.pp\n-%attr(0644,root,root) %{_mandir}/man1/bitcoind.1*\n+%attr(0644,root,root) %{_mandir}/man1/ravend.1*\n \n %files utils\n %defattr(-,root,root,-)\n %license COPYING\n-%doc COPYING bitcoin.conf.example doc/README.md\n-%attr(0755,root,root) %{_bindir}/bitcoin-cli\n-%attr(0755,root,root) %{_bindir}/bitcoin-tx\n-%attr(0755,root,root) %{_bindir}/bench_bitcoin\n-%attr(0644,root,root) %{_mandir}/man1/bitcoin-cli.1*\n+%doc COPYING raven.conf.example doc/README.md\n+%attr(0755,root,root) %{_bindir}/raven-cli\n+%attr(0755,root,root) %{_bindir}/raven-tx\n+%attr(0755,root,root) %{_bindir}/bench_raven\n+%attr(0644,root,root) %{_mandir}/man1/raven-cli.1*\n \n \n \n %changelog\n * Fri Feb 26 2016 Alice Wonder <buildmaster@librelamp.com> - 0.12.0-2\n-- Rename Qt package from bitcoin to bitcoin-core\n+- Rename Qt package from raven to raven-core\n - Make building of the Qt package optional\n - When building the Qt package, default to Qt5 but allow building\n -  against Qt4\n@@ -435,4 +439,4 @@ rm -rf %{buildroot}\n - Initial spec file for 0.12.0 release\n \n # This spec file is written from scratch but a lot of the packaging decisions are directly\n-# based upon the 0.11.2 package spec file from https://www.ringingliberty.com/bitcoin/\n+# based upon the 0.11.2 package spec file from https://www.ringingliberty.com/raven/"
      },
      {
        "sha": "a1ff0fdf505ab530cc7f77da62b18bf024912860",
        "filename": "contrib/rpm/bitcoin.te",
        "status": "modified",
        "additions": 48,
        "deletions": 48,
        "changes": 96,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/rpm/bitcoin.te",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/rpm/bitcoin.te",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/rpm/bitcoin.te?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,81 +1,81 @@\n-policy_module(bitcoin, 1.100.1)\n+policy_module(raven, 1.100.1)\n \n ########################################\n #\n # Declarations\n #\n \n-type bitcoin_t;\n-type bitcoin_exec_t;\n-init_daemon_domain(bitcoin_t, bitcoin_exec_t)\n+type raven_t;\n+type raven_exec_t;\n+init_daemon_domain(raven_t, raven_exec_t)\n \n-permissive bitcoin_t;\n+permissive raven_t;\n \n-type bitcoin_initrc_exec_t;\n-init_script_file(bitcoin_initrc_exec_t)\n+type raven_initrc_exec_t;\n+init_script_file(raven_initrc_exec_t)\n \n-type bitcoin_conf_t;\n-files_type(bitcoin_conf_t)\n+type raven_conf_t;\n+files_type(raven_conf_t)\n \n-type bitcoin_var_lib_t;\n-files_type(bitcoin_var_lib_t)\n+type raven_var_lib_t;\n+files_type(raven_var_lib_t)\n \n-type bitcoin_var_run_t;\n-files_type(bitcoin_var_run_t)\n+type raven_var_run_t;\n+files_type(raven_var_run_t)\n \n-type bitcoin_port_t;\n-corenet_port(bitcoin_port_t)\n+type raven_port_t;\n+corenet_port(raven_port_t)\n \n ########################################\n #\n-# bitcoin local policy\n+# raven local policy\n #\n-allow bitcoin_t self:process { fork };\n+allow raven_t self:process { fork };\n \n-allow bitcoin_t self:fifo_file rw_fifo_file_perms;\n-allow bitcoin_t self:unix_stream_socket create_stream_socket_perms;\n+allow raven_t self:fifo_file rw_fifo_file_perms;\n+allow raven_t self:unix_stream_socket create_stream_socket_perms;\n \n-manage_dirs_pattern(bitcoin_t, bitcoin_conf_t, bitcoin_conf_t)\n-manage_files_pattern(bitcoin_t, bitcoin_conf_t, bitcoin_conf_t)\n+manage_dirs_pattern(raven_t, raven_conf_t, raven_conf_t)\n+manage_files_pattern(raven_t, raven_conf_t, raven_conf_t)\n \n-manage_dirs_pattern(bitcoin_t, bitcoin_var_lib_t, bitcoin_var_lib_t)\n-manage_files_pattern(bitcoin_t, bitcoin_var_lib_t, bitcoin_var_lib_t)\n-files_var_lib_filetrans(bitcoin_t, bitcoin_var_lib_t, { dir file })\n+manage_dirs_pattern(raven_t, raven_var_lib_t, raven_var_lib_t)\n+manage_files_pattern(raven_t, raven_var_lib_t, raven_var_lib_t)\n+files_var_lib_filetrans(raven_t, raven_var_lib_t, { dir file })\n \n-manage_dirs_pattern(bitcoin_t, bitcoin_var_run_t, bitcoin_var_run_t)\n-manage_files_pattern(bitcoin_t, bitcoin_var_run_t, bitcoin_var_run_t)\n+manage_dirs_pattern(raven_t, raven_var_run_t, raven_var_run_t)\n+manage_files_pattern(raven_t, raven_var_run_t, raven_var_run_t)\n \n-sysnet_dns_name_resolve(bitcoin_t)\n-corenet_all_recvfrom_unlabeled(bitcoin_t)\n+sysnet_dns_name_resolve(raven_t)\n+corenet_all_recvfrom_unlabeled(raven_t)\n \n-allow bitcoin_t self:tcp_socket create_stream_socket_perms;\n-corenet_tcp_sendrecv_generic_if(bitcoin_t)\n-corenet_tcp_sendrecv_generic_node(bitcoin_t)\n-corenet_tcp_sendrecv_all_ports(bitcoin_t)\n-corenet_tcp_bind_generic_node(bitcoin_t)\n+allow raven_t self:tcp_socket create_stream_socket_perms;\n+corenet_tcp_sendrecv_generic_if(raven_t)\n+corenet_tcp_sendrecv_generic_node(raven_t)\n+corenet_tcp_sendrecv_all_ports(raven_t)\n+corenet_tcp_bind_generic_node(raven_t)\n \n gen_require(`\n-    type bitcoin_port_t;\n+    type raven_port_t;\n ')\n-allow bitcoin_t bitcoin_port_t:tcp_socket name_bind;\n+allow raven_t raven_port_t:tcp_socket name_bind;\n \n gen_require(`\n-    type bitcoin_port_t;\n+    type raven_port_t;\n ')\n-allow bitcoin_t bitcoin_port_t:tcp_socket name_connect;\n+allow raven_t raven_port_t:tcp_socket name_connect;\n \n-domain_use_interactive_fds(bitcoin_t)\n+domain_use_interactive_fds(raven_t)\n \n-files_read_etc_files(bitcoin_t)\n+files_read_etc_files(raven_t)\n \n-miscfiles_read_localization(bitcoin_t)\n+miscfiles_read_localization(raven_t)\n \n-sysnet_dns_name_resolve(bitcoin_t)\n+sysnet_dns_name_resolve(raven_t)\n \n-allow bitcoin_t bitcoin_exec_t:file execute_no_trans;\n-allow bitcoin_t self:process setsched;\n-corecmd_exec_ls(bitcoin_t)\n-corenet_tcp_connect_http_port(bitcoin_t)\n-dev_read_urand(bitcoin_t)\n-fs_getattr_xattr_fs(bitcoin_t)\n-kernel_read_system_state(bitcoin_t)\n+allow raven_t raven_exec_t:file execute_no_trans;\n+allow raven_t self:process setsched;\n+corecmd_exec_ls(raven_t)\n+corenet_tcp_connect_http_port(raven_t)\n+dev_read_urand(raven_t)\n+fs_getattr_xattr_fs(raven_t)\n+kernel_read_system_state(raven_t)"
      },
      {
        "sha": "b9e4c94737744b6f7da4f62dd734b7a826b46eb8",
        "filename": "contrib/seeds/README.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/seeds/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/seeds/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/README.md?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -8,7 +8,7 @@ and remove old versions as necessary.\n \n The seeds compiled into the release are created from sipa's DNS seed data, like this:\n \n-    curl -s http://bitcoin.sipa.be/seeds.txt.gz | gzip -dc > seeds_main.txt\n+    curl -s http://raven.sipa.be/seeds.txt.gz | gzip -dc > seeds_main.txt\n     python3 makeseeds.py < seeds_main.txt > nodes_main.txt\n     python3 generate-seeds.py . > ../../src/chainparamsseeds.h\n "
      },
      {
        "sha": "70cd4904fdd60cc4b1b2b9888f3f47eaabefb512",
        "filename": "contrib/seeds/generate-seeds.py",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/seeds/generate-seeds.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/seeds/generate-seeds.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/generate-seeds.py?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -114,24 +114,24 @@ def process_nodes(g, f, structname, defaultport):\n def main():\n     if len(sys.argv)<2:\n         print(('Usage: %s <path_to_nodes_txt>' % sys.argv[0]), file=sys.stderr)\n-        exit(1)\n+        sys.exit(1)\n     g = sys.stdout\n     indir = sys.argv[1]\n-    g.write('#ifndef BITCOIN_CHAINPARAMSSEEDS_H\\n')\n-    g.write('#define BITCOIN_CHAINPARAMSSEEDS_H\\n')\n+    g.write('#ifndef RAVEN_CHAINPARAMSSEEDS_H\\n')\n+    g.write('#define RAVEN_CHAINPARAMSSEEDS_H\\n')\n     g.write('/**\\n')\n-    g.write(' * List of fixed seed nodes for the bitcoin network\\n')\n+    g.write(' * List of fixed seed nodes for the raven network\\n')\n     g.write(' * AUTOGENERATED by contrib/seeds/generate-seeds.py\\n')\n     g.write(' *\\n')\n     g.write(' * Each line contains a 16-byte IPv6 address and a port.\\n')\n     g.write(' * IPv4 as well as onion addresses are wrapped inside a IPv6 address accordingly.\\n')\n     g.write(' */\\n')\n     with open(os.path.join(indir,'nodes_main.txt'),'r') as f:\n-        process_nodes(g, f, 'pnSeed6_main', 8333)\n+        process_nodes(g, f, 'pnSeed6_main', 8767)\n     g.write('\\n')\n     with open(os.path.join(indir,'nodes_test.txt'),'r') as f:\n-        process_nodes(g, f, 'pnSeed6_test', 18333)\n-    g.write('#endif // BITCOIN_CHAINPARAMSSEEDS_H\\n')\n+        process_nodes(g, f, 'pnSeed6_test', 18767)\n+    g.write('#endif // RAVEN_CHAINPARAMSSEEDS_H\\n')\n             \n if __name__ == '__main__':\n     main()"
      },
      {
        "sha": "b95f9a943b345b3f707d77d8c8098e414982c61a",
        "filename": "contrib/seeds/makeseeds.py",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/seeds/makeseeds.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/seeds/makeseeds.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/makeseeds.py?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,5 +1,6 @@\n #!/usr/bin/env python3\n # Copyright (c) 2013-2017 The Bitcoin Core developers\n+# Copyright (c) 2017 The Raven Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n #\n@@ -30,7 +31,7 @@\n PATTERN_IPV4 = re.compile(r\"^((\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})):(\\d+)$\")\n PATTERN_IPV6 = re.compile(r\"^\\[([0-9a-z:]+)\\]:(\\d+)$\")\n PATTERN_ONION = re.compile(r\"^([abcdefghijklmnopqrstuvwxyz234567]{16}\\.onion):(\\d+)$\")\n-PATTERN_AGENT = re.compile(r\"^(/Satoshi:0.12.(0|1|99)/|/Satoshi:0.13.(0|1|2|99)/)$\")\n+PATTERN_AGENT = re.compile(r\"^(/Satoshi:0.13.(1|2|99)/|/Satoshi:0.14.(0|1|2|99)/)$\")\n \n def parseline(line):\n     sline = line.split()\n@@ -155,7 +156,7 @@ def main():\n     ips = [ip for ip in ips if PATTERN_AGENT.match(ip['agent'])]\n     # Sort by availability (and use last success as tie breaker)\n     ips.sort(key=lambda x: (x['uptime'], x['lastsuccess'], x['ip']), reverse=True)\n-    # Filter out hosts with multiple bitcoin ports, these are likely abusive\n+    # Filter out hosts with multiple raven ports, these are likely abusive\n     ips = filtermultiport(ips)\n     # Look up ASNs and limit results, both per ASN and globally.\n     ips = filterbyasn(ips, MAX_SEEDS_PER_ASN, NSEEDS)"
      },
      {
        "sha": "f9b65c3b7aa501c4f560bf52bf6b4cf661683d64",
        "filename": "contrib/seeds/nodes_main.txt",
        "status": "modified",
        "additions": 1,
        "deletions": 1168,
        "changes": 1169,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/seeds/nodes_main.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/seeds/nodes_main.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/nodes_main.txt?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,1168 +1 @@\n-2.7.8.12:8333\n-2.228.70.198:8333\n-5.39.64.7:8333\n-5.45.80.34:38333\n-5.51.160.38:8333\n-5.61.33.33:8333\n-5.61.37.12:8333\n-5.95.80.47:8333\n-5.102.164.173:8333\n-5.175.71.130:8333\n-5.189.165.22:8333\n-5.199.130.228:8333\n-5.228.100.222:8333\n-5.255.64.231:8333\n-13.93.6.133:8333\n-18.85.34.10:8333\n-18.241.0.63:8333\n-23.28.128.65:8333\n-23.248.113.52:8333\n-23.253.151.73:8333\n-24.4.96.121:8333\n-24.69.65.191:8333\n-24.87.8.43:8333\n-24.150.224.110:8333\n-24.227.69.146:8333\n-27.0.235.33:8333\n-31.170.106.203:8333\n-31.184.197.96:8333\n-31.214.240.56:8333\n-37.1.202.134:8333\n-37.18.74.232:8333\n-37.34.48.17:8333\n-37.48.64.140:8333\n-37.97.141.116:8333\n-37.120.164.16:8333\n-37.120.169.123:8333\n-37.143.9.128:8333\n-37.153.172.227:8333\n-37.193.227.16:8333\n-37.205.8.78:8333\n-37.220.0.114:8333\n-37.232.218.199:8333\n-38.140.161.53:8333\n-40.87.70.120:8333\n-41.162.163.93:8333\n-42.2.198.48:8333\n-45.20.67.1:8333\n-45.55.197.77:8333\n-45.56.97.63:8333\n-45.58.38.162:8333\n-45.63.1.33:8333\n-45.79.2.70:8333\n-46.16.240.98:8333\n-46.19.137.74:8333\n-46.28.206.146:8333\n-46.32.252.197:8333\n-46.59.13.59:8333\n-46.59.39.195:8333\n-46.148.16.210:8333\n-46.160.195.121:8333\n-46.166.142.21:8333\n-46.166.160.29:8330\n-46.188.44.20:8333\n-46.229.238.187:8333\n-46.231.16.149:8333\n-47.88.100.130:8333\n-47.89.192.134:8333\n-47.185.194.160:8333\n-47.189.129.218:8333\n-49.65.2.140:8333\n-50.3.72.129:8333\n-50.31.99.225:8333\n-51.175.33.95:8333\n-52.1.165.219:8333\n-52.10.170.186:8333\n-52.51.128.216:8333\n-54.197.130.244:8333\n-58.59.2.22:8333\n-58.84.6.81:8333\n-59.125.8.143:8333\n-59.167.130.139:8333\n-61.47.2.20:8333\n-62.43.130.178:8333\n-62.76.96.6:8333\n-62.107.200.30:8333\n-62.133.15.58:8333\n-62.133.194.2:8333\n-62.133.194.156:8333\n-62.138.1.95:8333\n-62.216.238.3:8333\n-62.238.34.125:8333\n-63.137.40.207:8333\n-63.231.96.109:8333\n-64.78.240.150:8333\n-64.83.225.146:8333\n-64.137.236.68:8833\n-64.156.193.120:8333\n-66.79.160.82:8333\n-66.91.230.231:8333\n-66.135.128.121:8333\n-66.172.10.4:8333\n-66.194.38.250:8333\n-66.194.38.253:8333\n-66.215.34.26:8333\n-66.240.237.155:8333\n-67.205.96.108:8333\n-67.205.128.5:8333\n-67.219.233.140:8333\n-67.221.193.55:8333\n-68.100.196.118:8333\n-68.132.193.222:8333\n-68.168.118.234:8333\n-69.11.97.43:8333\n-69.30.229.10:8333\n-69.50.171.205:8333\n-69.125.193.145:8333\n-69.162.139.125:8333\n-70.35.98.39:8333\n-70.112.32.29:8333\n-71.126.181.146:8333\n-72.180.32.105:8333\n-73.226.64.145:8333\n-74.83.140.242:8333\n-74.84.128.158:9333\n-74.122.237.124:8333\n-74.215.133.145:8333\n-75.76.101.169:8333\n-75.85.13.8:8333\n-75.86.168.13:8333\n-75.170.97.25:8333\n-75.177.137.134:8333\n-76.76.227.136:8333\n-77.53.136.6:8333\n-77.110.11.52:8333\n-78.25.32.206:8333\n-78.34.8.120:8333\n-78.46.32.99:8333\n-78.56.9.214:8333\n-78.56.229.177:8333\n-78.129.237.245:8333\n-78.196.172.45:8333\n-79.132.230.144:8333\n-79.169.35.235:8333\n-79.172.194.219:8333\n-80.64.65.87:8333\n-80.89.137.115:8333\n-80.93.36.173:8333\n-80.101.167.100:8333\n-80.114.34.158:8333\n-80.127.136.50:8333\n-80.188.139.82:8333\n-80.222.39.77:8333\n-80.223.105.69:8333\n-80.229.151.187:8333\n-80.240.129.221:8333\n-81.7.10.238:8333\n-81.7.13.84:8333\n-81.27.96.92:8333\n-81.35.143.98:8333\n-81.82.201.5:8333\n-81.83.96.5:8333\n-81.169.227.36:8333\n-81.171.2.119:8333\n-81.171.38.130:8333\n-81.175.255.118:8333\n-81.207.8.49:8333\n-81.228.194.187:8333\n-82.9.1.77:8333\n-82.11.33.229:8333\n-82.102.13.117:8333\n-82.116.203.240:8333\n-82.130.103.16:8333\n-82.136.65.227:8333\n-82.158.227.238:8333\n-82.197.212.25:8333\n-82.199.102.10:8333\n-82.200.204.41:8333\n-82.200.204.119:8333\n-82.221.105.223:8333\n-82.221.108.27:8333\n-82.221.111.136:8333\n-82.221.139.97:8333\n-83.137.41.10:8333\n-83.143.130.19:8333\n-83.150.9.196:8333\n-83.169.2.43:8333\n-83.217.203.130:8333\n-83.249.88.52:8333\n-84.26.162.92:8333\n-84.42.193.6:8333\n-84.134.194.115:8333\n-84.201.32.115:8333\n-84.212.232.71:8333\n-84.238.140.176:8333\n-85.10.104.34:8333\n-85.21.144.226:8333\n-85.25.194.12:8333\n-85.144.79.190:8333\n-85.145.228.192:8333\n-85.194.238.130:8333\n-85.228.201.80:8333\n-85.229.228.174:8333\n-85.236.233.87:8333\n-86.80.204.185:8333\n-86.105.227.190:8333\n-86.135.39.40:8333\n-87.106.139.127:8333\n-87.120.8.5:8333\n-87.120.37.230:8333\n-87.239.101.102:8333\n-87.243.197.82:8333\n-88.112.112.173:8333\n-88.150.192.17:8333\n-88.185.155.134:8333\n-88.202.202.221:8333\n-88.202.230.87:8333\n-88.208.39.182:8333\n-89.34.99.41:8333\n-89.163.224.187:8333\n-89.169.233.150:8333\n-89.184.65.85:8333\n-89.212.91.219:8333\n-89.249.178.36:8333\n-90.149.38.172:8333\n-91.65.97.157:8333\n-91.107.64.143:8333\n-91.114.35.107:8333\n-91.135.0.187:8333\n-91.145.110.95:8333\n-91.157.38.151:8333\n-91.197.44.133:8333\n-91.205.176.54:8333\n-91.206.203.10:8333\n-91.206.203.18:8333\n-91.215.35.130:8333\n-91.219.239.159:8333\n-91.223.133.2:8333\n-91.223.133.40:8333\n-91.226.10.90:8333\n-91.240.141.169:8333\n-92.27.7.209:8333\n-92.89.67.207:8333\n-92.221.201.138:8333\n-93.95.187.122:8333\n-93.103.73.187:8333\n-93.123.80.47:8333\n-93.188.224.253:8333\n-93.190.69.242:8333\n-94.19.12.244:8333\n-94.156.128.116:8333\n-94.177.171.73:8333\n-94.181.44.104:8333\n-94.237.26.173:8333\n-94.242.229.158:8333\n-94.255.128.98:8333\n-95.79.35.50:8333\n-95.91.41.39:8333\n-95.110.234.93:8333\n-95.128.48.209:8333\n-95.183.48.71:8333\n-96.23.67.85:8333\n-97.64.177.10:8333\n-97.104.201.95:8333\n-98.29.197.149:8333\n-98.169.2.107:8333\n-99.232.48.72:8333\n-101.100.141.55:8333\n-103.7.32.40:8333\n-103.53.225.69:8333\n-103.249.106.74:8333\n-104.128.224.13:8333\n-104.128.228.252:8333\n-104.155.1.158:8333\n-104.168.128.50:8333\n-104.199.160.228:8333\n-104.204.109.11:8333\n-104.219.251.118:8333\n-104.223.3.129:8333\n-104.223.3.219:8333\n-104.238.130.182:8333\n-104.245.99.227:8333\n-106.38.234.89:8333\n-106.104.134.218:8333\n-107.136.6.71:8333\n-107.150.45.210:8333\n-107.151.144.103:8333\n-107.170.44.99:8333\n-107.181.137.133:8333\n-107.191.102.13:8333\n-108.58.252.82:8333\n-108.59.9.167:8333\n-108.59.12.163:8333\n-108.162.106.215:8333\n-108.168.133.164:8333\n-108.173.202.101:8333\n-108.180.110.190:8333\n-109.29.75.40:8333\n-109.120.194.136:8333\n-109.230.230.88:8333\n-109.235.67.115:8333\n-109.235.69.120:8333\n-109.236.90.199:8333\n-109.255.0.107:8333\n-110.10.130.12:8333\n-110.10.176.94:8333\n-110.132.172.251:8333\n-111.90.158.17:8333\n-115.66.205.171:8333\n-116.31.123.139:8333\n-118.192.48.46:8333\n-118.193.164.98:8333\n-119.29.156.231:8333\n-119.63.44.133:19980\n-119.81.99.27:8333\n-119.106.12.169:8333\n-119.147.137.155:19980\n-119.185.1.182:8333\n-120.55.193.136:8333\n-121.254.173.23:8333\n-121.254.173.40:8333\n-123.56.129.45:8333\n-123.203.163.128:8333\n-123.206.32.198:8333\n-124.189.160.221:8333\n-124.189.192.232:8333\n-128.140.224.162:8333\n-128.199.68.205:8333\n-130.234.207.115:8333\n-131.113.41.123:8333\n-131.114.72.104:8333\n-132.204.108.155:8333\n-134.119.13.230:8333\n-134.213.133.206:8333\n-134.213.133.207:8333\n-135.23.5.3:8333\n-137.74.0.66:8333\n-138.68.1.45:8333\n-138.68.2.194:8333\n-138.68.64.19:8333\n-138.68.64.28:8333\n-139.59.42.248:8333\n-139.220.240.153:8333\n-140.112.107.118:8333\n-140.186.224.112:8333\n-141.52.64.141:8333\n-142.68.237.107:8333\n-142.217.12.106:8333\n-146.60.204.92:8333\n-146.185.161.209:8333\n-148.103.7.119:8333\n-149.210.133.244:8333\n-150.229.0.143:8333\n-151.231.238.25:8333\n-151.248.160.227:8333\n-153.230.228.15:8333\n-155.133.43.249:8333\n-158.58.238.145:8333\n-158.109.79.13:34821\n-159.203.70.208:8333\n-160.16.206.31:8333\n-162.209.1.233:8333\n-162.209.4.125:8333\n-162.216.192.231:8333\n-162.243.100.111:8333\n-162.246.11.194:8333\n-162.248.102.117:8333\n-162.252.46.83:8333\n-163.172.33.78:8333\n-163.172.194.30:8333\n-169.229.198.106:8333\n-170.75.195.168:8333\n-172.103.205.197:8333\n-172.245.225.126:8333\n-173.179.37.8:8333\n-173.208.203.74:8333\n-173.252.46.16:8333\n-174.117.141.124:8333\n-175.126.38.158:8333\n-175.126.38.177:8333\n-175.139.106.119:8333\n-175.140.232.66:8333\n-176.9.117.100:8333\n-176.36.33.121:8333\n-176.36.99.222:8333\n-176.56.227.36:8333\n-176.100.100.206:8333\n-176.106.144.183:8333\n-176.123.7.148:8333\n-176.126.167.10:8333\n-176.223.201.198:8333\n-178.62.68.62:8333\n-178.62.102.56:8333\n-178.62.203.185:8333\n-178.124.197.101:8333\n-178.170.138.202:8333\n-178.175.129.18:8333\n-178.188.47.62:8333\n-178.199.240.22:8333\n-178.218.209.162:8333\n-178.237.35.34:8333\n-178.238.224.242:8333\n-178.254.34.144:8333\n-178.254.34.161:8333\n-179.43.183.2:8333\n-180.200.128.58:8333\n-182.93.34.130:8333\n-185.8.238.197:8333\n-185.11.139.172:8333\n-185.24.97.11:8333\n-185.24.233.100:8333\n-185.25.48.71:8333\n-185.25.48.114:8333\n-185.28.76.179:8333\n-185.70.105.152:8339\n-185.77.128.69:8333\n-185.77.128.241:8333\n-185.86.79.87:8333\n-185.89.102.2:3333\n-185.89.102.53:3333\n-185.109.144.155:8333\n-185.117.75.50:8333\n-185.121.173.223:8333\n-185.128.41.157:8333\n-185.130.226.106:8333\n-185.145.130.76:8333\n-188.63.192.104:8333\n-188.113.164.231:8333\n-188.166.229.112:8333\n-188.214.128.77:8333\n-190.10.8.211:8333\n-190.81.160.184:8333\n-190.111.231.19:8333\n-192.131.44.93:8333\n-192.206.202.6:8333\n-192.227.245.133:8333\n-192.241.74.123:8333\n-192.241.74.126:8333\n-192.254.71.222:8333\n-193.10.64.85:8333\n-193.46.80.101:8333\n-193.49.43.219:8333\n-193.93.79.215:8333\n-193.183.99.46:8333\n-193.234.224.195:8333\n-193.239.80.155:8333\n-194.63.140.208:8333\n-194.87.1.232:8333\n-194.187.227.18:8333\n-194.247.12.136:8333\n-195.91.176.86:8333\n-196.28.98.20:8333\n-198.44.249.35:8333\n-198.84.172.252:8333\n-198.204.224.106:8333\n-198.211.97.46:8333\n-199.66.64.198:8333\n-199.101.100.58:8333\n-199.101.100.59:8333\n-199.127.224.50:8333\n-200.46.241.71:8333\n-200.116.98.185:8333\n-203.9.225.13:8333\n-203.177.142.37:8333\n-205.200.247.149:8333\n-205.209.131.150:13838\n-206.53.64.74:8333\n-206.72.192.69:8333\n-206.123.112.180:8333\n-208.66.208.153:8333\n-208.68.174.76:8333\n-208.107.97.242:8333\n-208.111.48.132:8333\n-208.118.235.190:8333\n-209.6.205.126:8333\n-209.40.96.121:8333\n-209.58.130.137:8333\n-209.73.142.226:8333\n-209.90.224.4:8333\n-209.126.69.243:8333\n-209.126.108.91:8333\n-209.195.4.18:8333\n-209.250.6.190:8333\n-210.54.37.225:8333\n-210.223.3.44:8333\n-211.149.234.109:8333\n-212.51.140.183:8333\n-212.90.179.206:8333\n-212.93.226.90:8333\n-212.110.171.118:8333\n-212.202.132.17:8333\n-213.91.205.134:8333\n-213.165.68.218:8333\n-213.196.200.213:8333\n-216.59.4.212:8333\n-216.74.32.109:8333\n-216.158.225.70:8333\n-216.164.138.13:8333\n-216.167.236.247:8333\n-216.197.79.74:8333\n-217.11.225.189:8333\n-217.12.199.207:8333\n-217.20.130.72:8333\n-217.23.6.148:8333\n-217.23.140.103:8333\n-217.28.96.180:8333\n-217.35.130.42:8333\n-217.111.66.79:8333\n-217.158.9.102:8333\n-217.168.143.169:8333\n-217.209.32.219:8333\n-218.161.33.165:8333\n-221.121.144.138:8333\n-[2001:0:4137:9e76:2048:3a84:bb91:e846]:8333\n-[2001:0:4137:9e76:2066:e9e:b489:f8b8]:8333\n-[2001:0:4137:9e76:3854:1211:b5ac:a96b]:8333\n-[2001:0:4137:9e76:4e3:1f66:cd4c:829f]:8333\n-[2001:0:4137:9e76:ad:1f4:9ea9:fa2e]:8333\n-[2001:0:4137:9e76:e5:baa:b66f:f418]:8333\n-[2001:0:53aa:64c:20a2:59c4:ad22:93ea]:8333\n-[2001:0:53aa:64c:59:617f:a10d:e0]:8333\n-[2001:0:5ef5:79fb:200f:3ae5:3cbc:74c9]:8333\n-[2001:0:5ef5:79fb:38f2:13b4:b208:5604]:8333\n-[2001:0:5ef5:79fd:200b:22a7:cc50:f52d]:8333\n-[2001:0:5ef5:79fd:24ef:1aef:a994:303d]:8333\n-[2001:0:5ef5:79fd:24fc:b5d:ad4f:4db2]:8333\n-[2001:0:5ef5:79fd:28bf:2d23:e02e:c3ef]:8333\n-[2001:0:5ef5:79fd:3cd0:3c2e:da44:a759]:8333\n-[2001:0:5ef5:79fd:87e:fd7:b1c2:1b4]:8333\n-[2001:0:9d38:6ab8:18db:3bda:ab90:e81e]:8333\n-[2001:0:9d38:6ab8:4e7:1660:862f:a6d7]:8333\n-[2001:0:9d38:6ab8:6:2b:5074:9588]:8333\n-[2001:0:9d38:6abd:10f8:a7d7:bb90:f524]:8333\n-[2001:13d8:1c01:1000::11]:8333\n-[2001:15c0:65ff:610::2]:8333\n-[2001:1608:10:156:ae::4adb]:8333\n-[2001:1620:b1b:8888:20d:b9ff:fe41:6710]:8333\n-[2001:1620:b1b:face:20d:b9ff:fe41:6710]:8333\n-[2001:1620:f00:282::2]:8333\n-[2001:1620:f00:8282::1]:8333\n-[2001:1680:101:1ae::1]:8333\n-[2001:16d8:ff00:85de:20c:29ff:fe52:9594]:8333\n-[2001:19f0:4400:434d:5400:ff:fe42:2678]:8333\n-[2001:19f0:5000:8c8b:5400:ff:fe1f:c023]:8333\n-[2001:19f0:5000:8ce6:5400:ff:fe1b:24a9]:8333\n-[2001:19f0:5:314:5400:ff:fe2c:42e8]:8333\n-[2001:19f0:5:51b:5400:ff:fe49:fe5b]:8333\n-[2001:19f0:5:bc:5400:ff:fe3b:9339]:8333\n-[2001:1af8:4020:a020:5::]:8333\n-[2001:1bc8:1a0:590e:2e0:f4ff:fe16:3a39]:8333\n-[2001:1c04:1401:8f00:f4fe:4fff:fe0c:df40]:8333\n-[2001:4128:6135:10:20c:29ff:fe69:9e81]:8333\n-[2001:4128:6135:2010:21e:bff:fee8:a3c0]:8333\n-[2001:4128:6135:e001:5054:ff:fe37:e9eb]:8333\n-[2001:41d0:1000:1024::]:8333\n-[2001:41d0:1000:1433::]:8333\n-[2001:41d0:1004:22ae::]:8333\n-[2001:41d0:1004:2996::]:8333\n-[2001:41d0:1008:11e0::1a5c:6d9d]:8333\n-[2001:41d0:1008:11e0::b74:baf7]:8333\n-[2001:41d0:1008:237a::]:8333\n-[2001:41d0:1008:2752::]:8333\n-[2001:41d0:1008:494::]:8333\n-[2001:41d0:1:45d8::1]:8333\n-[2001:41d0:1:5630::1]:8333\n-[2001:41d0:1:6f57::1]:8333\n-[2001:41d0:1:801e::1]:8333\n-[2001:41d0:1:8852::1]:8333\n-[2001:41d0:1:8b26::1]:8333\n-[2001:41d0:1:a5b8::1]:8333\n-[2001:41d0:1:b26b::1]:8333\n-[2001:41d0:1:c139::1]:8333\n-[2001:41d0:1:c8d7::1]:8333\n-[2001:41d0:1:d227::]:8333\n-[2001:41d0:1:dbc4::1]:8333\n-[2001:41d0:1:dc5d::1]:8333\n-[2001:41d0:1:e13b::1]:8333\n-[2001:41d0:1:ef5b::1]:8333\n-[2001:41d0:2:16be::1]:8333\n-[2001:41d0:2:203c::1]:8333\n-[2001:41d0:2:38c5::1]:8333\n-[2001:41d0:2:519::]:8333\n-[2001:41d0:2:9c94::1]:8333\n-[2001:41d0:2:b792::]:8333\n-[2001:41d0:2:bf2a::]:8333\n-[2001:41d0:2:c793::]:8333\n-[2001:41d0:2:c9bf::]:8333\n-[2001:41d0:303:4f0::]:8333\n-[2001:41d0:8:1a8a::1]:8333\n-[2001:41d0:8:3fa9::1]:8333\n-[2001:41d0:8:4670::1]:8333\n-[2001:41d0:8:4f48::1]:8333\n-[2001:41d0:8:6728::]:8333\n-[2001:41d0:8:72c2:d:242:ac11:2]:8333\n-[2001:41d0:8:8007::]:8333\n-[2001:41d0:8:a71c::]:8333\n-[2001:41d0:8:bccc::1]:8333\n-[2001:41d0:8:bd45::1]:8333\n-[2001:41d0:8:c67c::]:8333\n-[2001:41d0:8:de3d::1]:8333\n-[2001:41d0:8:e257::1]:8333\n-[2001:41d0:8:e3e4::1]:8333\n-[2001:41d0:a:14cc::1]:8333\n-[2001:41d0:a:15b2::1]:8333\n-[2001:41d0:a:1ac9::1]:8333\n-[2001:41d0:a:2496::1]:8333\n-[2001:41d0:a:308c::]:8333\n-[2001:41d0:a:5879::]:8333\n-[2001:41d0:a:6810::1]:8333\n-[2001:41d0:a:682d::1]:8333\n-[2001:41d0:a:6c29::1]:8333\n-[2001:41d0:a:f52a::1]:8333\n-[2001:41d0:d:111c::]:8333\n-[2001:41d0:e:1388::1]:8333\n-[2001:41d0:e:26b::1]:8333\n-[2001:41d0:e:f73::1]:8333\n-[2001:41d0:fc8c:a200:7a24:afff:fe9d:c69b]:8333\n-[2001:41f0:61:0:72f3:95ff:fe09:7521]:8333\n-[2001:41f0:61::7]:8333\n-[2001:4428:200:8171:db6:2ff4:9c0e:a2da]:8333\n-[2001:470:1f07:151c:baac:6fff:feb7:3ba9]:8333\n-[2001:470:1f0b:ad6:a60:6eff:fec6:2323]:8333\n-[2001:470:1f11:617::10f]:8333\n-[2001:470:1f14:73e::2]:8333\n-[2001:470:1f14:7d::2]:8333\n-[2001:470:1f15:11f8::10]:8333\n-[2001:470:1f15:1b95:2c3e:8a9a:24e1:7084]:8333\n-[2001:470:1f15:e9b::3ef]:8333\n-[2001:470:1f1d:3a9::10]:8333\n-[2001:470:25:482::2]:8333\n-[2001:470:27:19f::2]:8333\n-[2001:470:27:665::2]:8333\n-[2001:470:28:365::4]:8333\n-[2001:470:41:6::2]:8333\n-[2001:470:727b::11:14]:8333\n-[2001:470:7:2f0::2]:8333\n-[2001:470:7:65::2]:8333\n-[2001:470:7f85::2]:8333\n-[2001:470:8:2e1:5825:39df:3e4c:54a8]:8333\n-[2001:470:8:2e1::43]:8333\n-[2001:470:8:2e1:ae2a:e257:4470:6350]:8333\n-[2001:470:a:c13::2]:8333\n-[2001:4801:7819:74:b745:b9d5:ff10:a61a]:8333\n-[2001:4801:7819:74:b745:b9d5:ff10:aaec]:8333\n-[2001:4801:7828:104:be76:4eff:fe10:1325]:8333\n-[2001:4802:7800:2:30d7:1775:ff20:1858]:8333\n-[2001:4ba0:babe:832::]:8333\n-[2001:4ba0:cafe:379::1]:8333\n-[2001:4ba0:ffee:33::10]:8333\n-[2001:4dd0:ff00:9a67::9]:8333\n-[2001:610:1b19::3]:8333\n-[2001:610:600:a41::2]:8333\n-[2001:678:174:4021::2:8333]:8333\n-[2001:67c:16dc:1201:5054:ff:fe17:4dac]:8333\n-[2001:67c:2128:ffff:6062:36ff:fe30:6532]:8333\n-[2001:67c:2564:331:3547:6e28:85a4:fb27]:8333\n-[2001:6a0:200:368::2]:8333\n-[2001:718:801:311:5054:ff:fe19:c483]:8333\n-[2001:7b8:2ff:8f::2]:8333\n-[2001:8d8:8a6:4400::3f:86c]:8333\n-[2001:8d8:923:8400::87:ebd]:8333\n-[2001:960:66d::2]:8333\n-[2001:981:46:1:ba27:ebff:fe5b:edee]:8333\n-[2001:ba8:1f1:f069::2]:8333\n-[2001:bc8:225f:10e:505:6573:7573:d0a]:8333\n-[2001:bc8:2706::1]:8333\n-[2001:bc8:323c:100::53]:8333\n-[2001:bc8:323c:100::80:4]:8333\n-[2001:bc8:323c:100::cafe]:8333\n-[2001:bc8:3680:4242::1]:8333\n-[2001:bc8:399f:f000::1]:8333\n-[2001:bc8:3cbf::5]:8333\n-[2001:bc8:4700:2300::19:807]:8333\n-[2001:e42:102:1805:160:16:206:31]:8333\n-[2002:12f1:3f::12f1:3f]:8333\n-[2002:1e2:5349::1e2:5349]:8333\n-[2002:1e2:5588::1e2:5588]:8333\n-[2002:2501:cf62::2501:cf62]:8333\n-[2002:268c:a135::268c:a135]:8333\n-[2002:2a33:99db::2a33:99db]:8332\n-[2002:2ebc:2c14::7]:8333\n-[2002:2f59:2c9c::2f59:2c9c]:11885\n-[2002:2f5a:3619::2f5a:3619]:8333\n-[2002:2f5a:36a4::2f5a:36a4]:8333\n-[2002:2f5a:429::2f5a:429]:8333\n-[2002:2f5a:562a::2f5a:562a]:8333\n-[2002:3a3b:216::3a3b:216]:8333\n-[2002:3dfa:5d23::3dfa:5d23]:8333\n-[2002:424f:a052::424f:a052]:8333\n-[2002:451e:e922::451e:e922]:8333\n-[2002:4540:4b30::4540:4b30]:8333\n-[2002:51ab:7cc::51ab:7cc]:8333\n-[2002:527:de11::527:de11]:8333\n-[2002:5395:7d01::5395:7d01]:8333\n-[2002:5395:7d2a::5395:7d2a]:8333\n-[2002:5669:e3be::5669:e3be]:8333\n-[2002:566a:5d6d::566a:5d6d]:8333\n-[2002:59b9:f820::59b9:f820]:8333\n-[2002:59f8:ac69::59f8:ac69]:8333\n-[2002:5bd4:b65a::5bd4:b65a]:8333\n-[2002:5c3f:39db::5c3f:39db]:8333\n-[2002:5d33:8d03::5d33:8d03]:8333\n-[2002:5d67:49bb::5d67:49bb]:8333\n-[2002:5dae:5d5f::5dae:5d5f]:8333\n-[2002:5dbe:8cc6::5dbe:8cc6]:8333\n-[2002:5dbe:9503::5dbe:9503]:8333\n-[2002:5fd3:8944::5fd3:8944]:8333\n-[2002:5fd3:9467::5fd3:9467]:8333\n-[2002:67f9:6a48::67f9:6a48]:8333\n-[2002:67f9:6a4a::67f9:6a4a]:8333\n-[2002:67f9:6a95::67f9:6a95]:8333\n-[2002:6a0e:3ea8::6a0e:3ea8]:10011\n-[2002:6b96:375a::6b96:375a]:8333\n-[2002:6ca8:cffb::6ca8:cffb]:8333\n-[2002:6caf:234::6caf:234]:8333\n-[2002:6dec:58f5::6dec:58f5]:8333\n-[2002:6dec:5ac7::6dec:5ac7]:8333\n-[2002:7237:4a02::7237:4a02]:20033\n-[2002:7237:94fd::7237:94fd]:10011\n-[2002:7237:e428::7237:e428]:8333\n-[2002:7237:fcf6::7237:fcf6]:20188\n-[2002:76c0:96e6::76c0:96e6]:8333\n-[2002:7819:7e80::7819:7e80]:7743\n-[2002:781a:ea86::781a:ea86]:8333\n-[2002:781a:f3c2::781a:f3c2]:14475\n-[2002:784c:c2c0::784c:c2c0]:8333\n-[2002:784c:ec97::784c:ec97]:8333\n-[2002:792b:261a::792b:261a]:8333\n-[2002:88f3:8cca::88f3:8cca]:8333\n-[2002:88f3:a83c::88f3:a83c]:8333\n-[2002:8ac9:516f::8ac9:516f]:8333\n-[2002:8b81:6d78::8b81:6d78]:50344\n-[2002:8b81:6e5c::8b81:6e5c]:38176\n-[2002:8bc4:90a6::8bc4:90a6]:8333\n-[2002:ac52:b854::ac52:b854]:8333\n-[2002:add0:c14a::add0:c14a]:8333\n-[2002:b07e:a70a::b07e:a70a]:8333\n-[2002:b27c:c565:1::250]:8333\n-[2002:b27c:c565::1]:8333\n-[2002:b94d:80f1::b94d:80f1]:8333\n-[2002:b982:e26a::b982:e26a]:8333\n-[2002:bcd5:3145::bcd5:3145]:8333\n-[2002:c08a:d22b::c08a:d22b]:8333\n-[2002:c0c7:f8e3::c0c7:f8e3]:32771\n-[2002:c1a9:fc5a::c1a9:fc5a]:8333\n-[2002:c23f:8fc5::c23f:8fc5]:8333\n-[2002:d395:ea6d::d395:ea6d]:8333\n-[2002:d917:ca5::d917:ca5]:8333\n-[2002:d917:e91::d917:e91]:8333\n-[2002:db71:f434::db71:f434]:8333\n-[2400:2651:161:1000:6847:d40f:aaa3:4848]:8333\n-[2400:8901::f03c:91ff:fec8:4280]:8333\n-[2401:1800:7800:102:be76:4eff:fe1c:a7d]:8333\n-[2401:2500:203:10:153:120:156:83]:8333\n-[2401:a400:3200:5600:14ee:f361:4bdc:1f7c]:8333\n-[2403:4200:403:2::ff]:8333\n-[2405:aa00:2::40]:8333\n-[240b:10:ca20:f0:224:e8ff:fe1f:60d9]:8333\n-[240b:250:1e0:2400:b9ef:8fe3:a69a:7378]:8333\n-[240d:1a:302:8600:8876:a36d:12ee:f285]:8333\n-[2600:3c00::f03c:91ff:fe91:3e49]:8333\n-[2600:3c00::f03c:91ff:febb:981e]:8333\n-[2600:3c01::f03c:91ff:fe18:6adf]:8333\n-[2600:3c01::f03c:91ff:fe69:89e9]:8333\n-[2600:3c01::f03c:91ff:fe91:6a29]:8333\n-[2600:3c01::f03c:91ff:fef1:1eaa]:8333\n-[2600:3c03::f03c:91ff:fe18:da80]:8333\n-[2600:3c03::f03c:91ff:fe28:1445]:8333\n-[2600:3c03::f03c:91ff:fe67:d2e]:8333\n-[2600:3c03::f03c:91ff:fe89:116f]:8333\n-[2600:3c03::f03c:91ff:feb0:5fc4]:8333\n-[2600:3c03::f03c:91ff:fee0:233e]:8333\n-[2600:3c03::f03c:91ff:fee0:51]:8333\n-[2600:8805:2400:14e:226:4aff:fe02:2ba4]:8333\n-[2600:8807:5080:3301:1487:83b7:33d7:eb97]:8333\n-[2601:186:c100:6bcd:16bd:cea1:235d:1c19]:8333\n-[2601:18c:4200:28d0:e4d:e9ff:fec5:76d0]:8333\n-[2601:247:8201:6251:30e6:7b95:69bf:9248]:8333\n-[2601:602:9980:f78:211:11ff:fec5:1ae]:8333\n-[2602:ae:1993:de00:2c50:9a44:8f11:77a5]:8333\n-[2602:ff68:0:1:21e:bff:feca:db72]:8333\n-[2602:ff68:0:1:2bd:27ff:feb0:adf8]:8333\n-[2602:ff68:0:1::5]:8333\n-[2602:ff68:0:5:2bd:27ff:feb0:adf8]:8333\n-[2602:ffc5:1f::1f:2d61]:8333\n-[2602:ffc5:1f::1f:9211]:8333\n-[2602:ffc5::9e63:27a2]:8333\n-[2602:ffc5::c30:1c75]:8333\n-[2602:ffc5::ffc5:b844]:8333\n-[2602:ffe8:100:2::457:936b]:8333\n-[2604:180:2:eee::ca46]:8333\n-[2604:880:d:85::be37]:8333\n-[2604:9a00:2100:a009:2::]:8333\n-[2604:a880:2:d0::301:8001]:8333\n-[2604:a880:2:d0::4a9:1001]:8333\n-[2604:a880:2:d0::53a:c001]:8333\n-[2604:a880:400:d0::ad7:e001]:8333\n-[2604:a880:400:d0::dcf:f001]:8333\n-[2605:4d00::50]:8333\n-[2605:6000:edc8:300::ddfe]:8333\n-[2605:6000:ffc0:70:74d5:225c:f553:5bb8]:8333\n-[2606:6000:c148:7003:5054:ff:fe78:66ff]:8333\n-[2606:6000:e6d6:d701:d428:5e44:a2c9:3ff6]:8333\n-[2606:c680:1:4a:2016:d1ff:fe93:52a7]:8333\n-[2607:5300:203:118:3733::1414]:8333\n-[2607:5300:60:13bb::1]:8333\n-[2607:5300:60:1966::1]:8333\n-[2607:5300:60:2218::]:8333\n-[2607:5300:60:3775::]:8333\n-[2607:5300:60:3ddf::]:8333\n-[2607:5300:60:a654::]:8333\n-[2607:5300:60:a7a3::]:8333\n-[2607:5300:60:ac0::1]:8333\n-[2607:5300:60:cf97::]:8333\n-[2607:f0d0:1901:19::6]:8333\n-[2607:f128:40:1202:69:162:139:125]:8333\n-[2607:f128:40:1703::2]:8333\n-[2607:f178:0:8::106]:8333\n-[2607:f1c0:84d:8900::7e:cad]:8333\n-[2607:f948:0:1::1:40]:8333\n-[2607:fcd0:100:2302::6094:635a]:8333\n-[2607:fcd0:100:6a00::3a96:1]:8333\n-[2607:fcd0:100:6a02::7ff0:1]:8333\n-[2607:fcd0:100:8203::8c58:dbc]:8333\n-[2607:fea8:1360:9c2:221a:6ff:fe47:776d]:8333\n-[2607:fea8:4da0:9ce:5114:a8ec:20f5:a50b]:8333\n-[2607:fea8:5df:fda0:feaa:14ff:feda:c79a]:8333\n-[2607:fea8:84c0:163:f42c:baff:fecc:6bbf]:8333\n-[2607:ff10:c5:502:225:90ff:fe32:d446]:8333\n-[2607:ff48:aa81:800::96cf:1]:8333\n-[2620:11c:5001:1118:d267:e5ff:fee9:e673]:8333\n-[2620:b8:4000:1000::93:1]:8333\n-[2800:1a0::9]:8333\n-[2a00:1178:2:43:19fd:d43e:b77:edeb]:8333\n-[2a00:1178:2:43:b4e3:e562:f811:d761]:8333\n-[2a00:14f0:e000:80d2:cd1a::1]:8333\n-[2a00:1630:14::101]:8333\n-[2a00:1630:2:1802:188:122:91:11]:8333\n-[2a00:1630:2:500::4]:8333\n-[2a00:1768:2001:24::148:218]:8333\n-[2a00:1768:2001:27::142:21]:8333\n-[2a00:1a48:7810:101:be76:4eff:fe08:c774]:8333\n-[2a00:1ca8:37::a5fc:40d1]:8333\n-[2a00:1ca8:37::ab6d:ce2c]:8333\n-[2a00:1dc0:2255:10::2]:8333\n-[2a00:7c80:0:71::8]:8333\n-[2a00:7c80:0:97::7]:8333\n-[2a00:bbe0:0:42:222:64ff:fe9a:e206]:8333\n-[2a00:c98:2050:a020:3::110]:8333\n-[2a00:dcc0:eda:98:183:193:1d24:b53a]:8333\n-[2a00:dcc0:eda:98:183:193:c382:6bdb]:8333\n-[2a00:dcc0:eda:98:183:193:f72e:d943]:8333\n-[2a00:f90:ff0:c100:53c4:97a7:8b59:796a]:8333\n-[2a01:238:435c:de00:b110:38cf:192d:b2c]:28333\n-[2a01:348:6:7cf::2]:8333\n-[2a01:368:e012:8888:216:3eff:fe24:1162]:8333\n-[2a01:488:66:1000:53a9:22b:0:1]:8333\n-[2a01:488:67:1000:523:ffa7:0:1]:8333\n-[2a01:488:67:1000:b01c:3379:0:1]:8333\n-[2a01:4f8:100:34ce::2]:8333\n-[2a01:4f8:100:44e7::2]:8333\n-[2a01:4f8:10a:2e4::2]:8333\n-[2a01:4f8:10a:34e::2]:8333\n-[2a01:4f8:10a:51d::2]:8333\n-[2a01:4f8:10a:622::2]:8333\n-[2a01:4f8:10a:85f::2]:8333\n-[2a01:4f8:10a:864::2]:8333\n-[2a01:4f8:10a:d04::2]:8333\n-[2a01:4f8:110:334c::2]:8333\n-[2a01:4f8:110:536e::2]:8333\n-[2a01:4f8:120:43e4::2]:8333\n-[2a01:4f8:120:702e::2]:8333\n-[2a01:4f8:121:4346::2]:8333\n-[2a01:4f8:130:3332::2]:8333\n-[2a01:4f8:131:33ad::2]:8333\n-[2a01:4f8:131:33ad:fea1::666]:8333\n-[2a01:4f8:140:31b0::2]:8333\n-[2a01:4f8:140:4088::2]:8333\n-[2a01:4f8:140:931a::2]:8333\n-[2a01:4f8:140:93b0::2]:8333\n-[2a01:4f8:141:13ad::c451]:8333\n-[2a01:4f8:141:186::2]:8333\n-[2a01:4f8:141:22ae::2]:8333\n-[2a01:4f8:141:322c::2]:8333\n-[2a01:4f8:150:11d4::2]:8333\n-[2a01:4f8:150:440f::2]:8333\n-[2a01:4f8:150:61ee::2]:8333\n-[2a01:4f8:150:726b::2]:8333\n-[2a01:4f8:151:30c9::2]:15000\n-[2a01:4f8:151:41a2::2]:8333\n-[2a01:4f8:151:41cc::2]:8333\n-[2a01:4f8:151:52c6::154]:8333\n-[2a01:4f8:151:600b::1:1]:8333\n-[2a01:4f8:151:7175::2]:8333\n-[2a01:4f8:160:41f0::1:33]:8333\n-[2a01:4f8:160:5328::27f0:187a]:8333\n-[2a01:4f8:160:814f::2]:8333\n-[2a01:4f8:161:21ad::333:30]:8333\n-[2a01:4f8:161:7026::2]:8333\n-[2a01:4f8:162:4110::2]:8333\n-[2a01:4f8:162:4348::2]:8333\n-[2a01:4f8:171:1c1b::2]:8333\n-[2a01:4f8:171:1c3::2]:8333\n-[2a01:4f8:171:2258::2]:8333\n-[2a01:4f8:171:2a70::2]:8333\n-[2a01:4f8:171:2e1b::2]:8333\n-[2a01:4f8:171:2f28::2]:8333\n-[2a01:4f8:171:3248::2]:8333\n-[2a01:4f8:171:380c::2]:8333\n-[2a01:4f8:171:b93::2]:8333\n-[2a01:4f8:171:d0a::2]:8333\n-[2a01:4f8:172:116c::2]:8333\n-[2a01:4f8:172:1287::2]:8333\n-[2a01:4f8:172:17a9::2]:8333\n-[2a01:4f8:172:1ca7::2]:8333\n-[2a01:4f8:172:2159::2]:8333\n-[2a01:4f8:172:3a41::2]:8333\n-[2a01:4f8:172:3b42::2]:8333\n-[2a01:4f8:172:3ec1::2]:8333\n-[2a01:4f8:172:3ec2::2]:8333\n-[2a01:4f8:172:aeb::2]:8333\n-[2a01:4f8:172:aec::2]:8333\n-[2a01:4f8:173:10ab::2]:8333\n-[2a01:4f8:173:1551::2]:8333\n-[2a01:4f8:173:1bca::2]:8333\n-[2a01:4f8:173:1e2e::2]:8333\n-[2a01:4f8:173:2162::2]:8333\n-[2a01:4f8:173:21e6::2]:8333\n-[2a01:4f8:173:42::2]:8333\n-[2a01:4f8:173:cc1::2]:8333\n-[2a01:4f8:190:1253::2]:8333\n-[2a01:4f8:190:24eb::2]:8333\n-[2a01:4f8:190:34f0::2]:8333\n-[2a01:4f8:190:528d::2]:8333\n-[2a01:4f8:190:91ce::2]:8333\n-[2a01:4f8:191:2194::83]:8333\n-[2a01:4f8:191:40e8::2]:8333\n-[2a01:4f8:191:8165::2]:22556\n-[2a01:4f8:191:81b7::2]:8333\n-[2a01:4f8:191:8328::3]:8333\n-[2a01:4f8:192:11b2::2]:8343\n-[2a01:4f8:192:216c::2]:8333\n-[2a01:4f8:192:22af::2]:8333\n-[2a01:4f8:192:2422::2]:8333\n-[2a01:4f8:192:34d0::2]:8333\n-[2a01:4f8:192:440b::2]:8333\n-[2a01:4f8:192:5230::2]:8333\n-[2a01:4f8:192:db::2]:8333\n-[2a01:4f8:200:1012::2]:8333\n-[2a01:4f8:200:414e::2]:8333\n-[2a01:4f8:200:416a::2]:8333\n-[2a01:4f8:201:21a7::2]:8333\n-[2a01:4f8:201:4017::11]:8333\n-[2a01:4f8:201:6011::4]:8333\n-[2a01:4f8:201:60d5::2]:8333\n-[2a01:4f8:202:12d6::2]:8333\n-[2a01:4f8:202:31e3::2]:8333\n-[2a01:4f8:202:32c6::2]:8333\n-[2a01:4f8:202:53c3::2]:8333\n-[2a01:4f8:211:14cf::2]:8333\n-[2a01:4f8:211:1ec5::2]:8333\n-[2a01:4f8:211:483::2]:8333\n-[2a01:4f8:211:d99::8]:8333\n-[2a01:4f8:212:1826::2]:8333\n-[2a01:4f8:212:27a8::2]:8333\n-[2a01:4f8:221:801::2]:8333\n-[2a01:4f8:a0:12cc::2]:8333\n-[2a01:4f8:a0:746a:101:1:1:2]:8333\n-[2a01:4f8:a0:828a::2]:8333\n-[2a01:4f8:c17:2eef::2]:8333\n-[2a01:4f8:c17:2f3c::2]:3333\n-[2a01:4f8:c17:3b02::2]:8333\n-[2a01:4f8:c17:4245::2]:8333\n-[2a01:4f8:c17:464f::2]:8333\n-[2a01:4f8:c17:4a1c::2]:8333\n-[2a01:4f8:c17:4c5d::2]:8333\n-[2a01:4f8:c17:67f8::2]:8333\n-[2a01:4f8:c17:6dd0::2]:8333\n-[2a01:4f8:c17:710b::2]:8333\n-[2a01:4f8:c17:714::2]:8333\n-[2a01:4f8:c17:72c6::2]:8333\n-[2a01:608:ffff:a009:8bf5:879d:e51a:f837]:8333\n-[2a01:680:10:10::1]:8333\n-[2a01:6f0:ffff:120::8dcb]:8333\n-[2a01:79c:cebc:857c:98c1:88ff:fef5:90de]:8333\n-[2a01:79d:7377:2629:7e57:7e57:1:1]:8333\n-[2a01:7c8:aaac:43d:5054:ff:fe4e:3dd4]:8333\n-[2a01:7c8:aab5:3e6:5054:ff:fed7:4e54]:8333\n-[2a01:7c8:aabd:3d5:5054:ff:fe95:f586]:8333\n-[2a01:7c8:aac1:453:d0d2:af96:fa88:5d0e]:8333\n-[2a01:7c8:aac3:663:5054:ff:fe25:8c69]:8333\n-[2a01:7c8:aac3:97:5054:ff:fea7:3780]:8333\n-[2a01:7c8:aac4:567:5054:ff:fedc:518a]:8333\n-[2a01:7e00::f03c:91ff:fe26:8c87]:8333\n-[2a01:7e00::f03c:91ff:fe50:94b8]:8333\n-[2a01:7e00::f03c:91ff:fe55:2c]:8333\n-[2a01:7e00::f03c:91ff:fe89:1143]:8333\n-[2a01:7e00::f03c:91ff:fe89:53fd]:8333\n-[2a01:7e00::f03c:91ff:fedf:b70f]:8333\n-[2a01:b000::4166:515b:ef9e:b3]:8333\n-[2a01:b2e0:2::40]:8333\n-[2a01:e34:ec29:24c0:f3:ddaf:9f59:586f]:8333\n-[2a01:e34:eed7:6670:ec1b:bf7c:b012:6069]:8333\n-[2a01:e35:2ee5:610:21f:d0ff:fe4e:7460]:8333\n-[2a01:e35:8a3f:47c0:c617:feff:fe3c:9fbd]:8333\n-[2a01:e35:8bff:70b0:1e1b:dff:fe0b:236d]:8333\n-[2a02:1205:34c3:a4e0:d63d:7eff:fe98:10c8]:8333\n-[2a02:1205:34da:aa00:5882:249d:ddbf:bc43]:8333\n-[2a02:1205:5051:a640:d6ae:52ff:fea3:ac]:8333\n-[2a02:1205:c689:d980:baae:edff:feea:9445]:8333\n-[2a02:120b:2c2a:5ec0:10dd:31ff:fe42:5079]:8333\n-[2a02:120b:2c35:69d0:219:99ff:fe6b:4ec3]:8333\n-[2a02:120b:c3c2:ff60:21f:5bff:fec3:a7ad]:24312\n-[2a02:13b8:4000:1000:216:e6ff:fe92:8619]:8333\n-[2a02:13b8:4000:1000::27]:8333\n-[2a02:17d0:2a:4400:40f:3dd4:b053:47ad]:8333\n-[2a02:180:1:1::517:afb]:8333\n-[2a02:180:6:1::18]:8333\n-[2a02:1810:1d11:f900:6872:f28e:8126:f635]:8333\n-[2a02:27a8:0:1:52e5:49ff:fee3:3b49]:8333\n-[2a02:348:86:3011::1]:8333\n-[2a02:390:9000:0:218:7dff:fe10:be33]:8333\n-[2a02:582:78c1:7600:2d49:6212:29d3:abb]:8333\n-[2a02:6080::1:190b:69e3]:8333\n-[2a02:750:7:3305::575]:8333\n-[2a02:752:100:3::53]:8333\n-[2a02:7aa0:1201::7501:d950]:8333\n-[2a02:7aa0:1201::deb3:81a2]:8333\n-[2a02:7aa0:1619::a037:69a6]:8333\n-[2a02:810d:14c0:8694:d250:99ff:fe81:23d9]:8333\n-[2a02:a50::dacb:8aff:fe36:8d2d]:8333\n-[2a02:c200:0:10:3:0:2591:1]:8333\n-[2a02:c200:1:10:2:5:9982:1]:8333\n-[2a02:c200:1:10:3:0:9290:1]:8333\n-[2a02:c205:3000:7158::1]:8333\n-[2a02:c205:3001:4522::1]:8333\n-[2a02:c205:3001:6549::1]:8333\n-[2a02:c207:2008:3772::1]:8333\n-[2a02:c207:2008:6519::1]:8333\n-[2a02:c207:2009:213::1]:8333\n-[2a02:c207:2009:7858::1]:8333\n-[2a02:c207:2010:302::1]:8333\n-[2a02:c207:3001:5824::1]:8333\n-[2a02:ce80:0:20::1]:8333\n-[2a03:4000:2:496::8]:8333\n-[2a03:4000:6:416c::53]:8333\n-[2a03:4000:6:8009::1]:8333\n-[2a03:4000:9:8e::1]:8333\n-[2a03:7380:2140:17:51fe:3519:b571:4a13]:8333\n-[2a03:b0c0:0:1010::7a3:1001]:8333\n-[2a03:b0c0:0:1010::7aa:4001]:8333\n-[2a03:b0c0:3:d0::1b99:c001]:8333\n-[2a03:b0c0:3:d0::1b99:e001]:8333\n-[2a03:b0c0:3:d0::1b9a:3001]:8333\n-[2a03:b0c0:3:d0::2208:6001]:8333\n-[2a03:b0c0:3:d0::23f7:1001]:8333\n-[2a03:b0c0:3:d0::23f7:9001]:8333\n-[2a03:b0c0:3:d0::23fb:2001]:8333\n-[2a03:b0c0:3:d0::23fb:3001]:8333\n-[2a03:b0c0:3:d0::23fb:5001]:8333\n-[2a03:b0c0:3:d0::23fb:7001]:8333\n-[2a03:b0c0:3:d0::2400:1]:8333\n-[2a03:b0c0:3:d0::2400:3001]:8333\n-[2a03:b0c0:3:d0::2400:e001]:8333\n-[2a03:b0c0:3:d0::2401:e001]:8333\n-[2a03:b0c0:3:d0::2402:2001]:8333\n-[2a03:b0c0:3:d0::2402:8001]:8333\n-[2a03:b0c0:3:d0::2402:9001]:8333\n-[2a03:b0c0:3:d0::2402:b001]:8333\n-[2a03:b0c0:3:d0::2402:d001]:8333\n-[2a03:b0c0:3:d0::2403:1001]:8333\n-[2a03:b0c0:3:d0::2403:2001]:8333\n-[2a03:b0c0:3:d0::2403:4001]:8333\n-[2a03:b0c0:3:d0::2403:6001]:8333\n-[2a03:b0c0:3:d0::2403:a001]:8333\n-[2a03:b0c0:3:d0::2403:b001]:8333\n-[2a03:b0c0:3:d0::2403:f001]:8333\n-[2a03:b0c0:3:d0::2404:6001]:8333\n-[2a03:b0c0:3:d0::2404:b001]:8333\n-[2a03:f80:ed15:149:154:155:235:1]:8333\n-[2a04:1980:3100:1aac:e61d:2dff:fe29:f241]:8333\n-[2a04:1980:3100:1aac:e61d:2dff:fe29:f251]:8333\n-[2a04:2180:0:1::5a49:3c06]:8333\n-[2a04:2180:1:7::3]:8333\n-[2a04:2e00:5:2e:9a4b:e1ff:fe62:6dc0]:8333\n-[2a04:3542:1000:910:8492:b8ff:fe91:711d]:8333\n-[2a04:dbc3:fffe:0:e61f:13ff:fe95:8401]:8333\n-[2a06:9fc0:2a06:9fc0:2a06:9fc1:67c:e706]:8333\n-[2c0f:f738:2004:82::]:8333\n-2hryb3uh3tzwgnya.onion:8333\n-3nmbbakinewlgdln.onion:8333\n-3qeri3tmhzmpegyv.onion:8333\n-4wdknmecghcmclq5.onion:8333\n-53tsjt6zq3iasv5q.onion:8333\n-5cg7qeywvwo6vxpt.onion:8333\n-5gbcrgqxcbxj253s.onion:8333\n-6cn4ilbwkrkh7gwo.onion:8333\n-6e4jrnn7igeqxmlf.onion:8333\n-6ymgbvnn6d5nfmv4.onion:8333\n-6zsh3bfduhpo7ldl.onion:8333\n-72fq6phv4fg4rhvh.onion:8333\n-7gdqp6npusk4lfwk.onion:8333\n-a7emxol55e623lqc.onion:8333\n-assbiydziq77zaki.onion:8333\n-bafk5ioatlgt7dgl.onion:8333\n-bk7yp6epnmcllq72.onion:8333\n-brwqezn6le54w2bb.onion:8333\n-bs4bq6s6qkvt5hpi.onion:8333\n-bup5n5e3kurvjzf3.onion:8333\n-c2tpqkaz4ihjzwgb.onion:8333\n-cernrmrk5zomzozn.onion:8333\n-cfyegj64ht3jpodr.onion:8333\n-cg5vg54cazzpvoug.onion:8333\n-cgk4u2lxrvml4jvb.onion:8333\n-cjygd7pu5lqkky5j.onion:8333\n-d6wubsdtr46dd5ki.onion:8333\n-dfq6yjc3aelplwr4.onion:8333\n-dqpxwlpnv3z3hznl.onion:8333\n-eamfospuveabaimd.onion:8333\n-ep2mjzox3kvb6ax4.onion:8333\n-fpbxb4wjudiw2w5a.onion:8333\n-fu5hfsbbf5jwsvhv.onion:8333\n-g4freoibsczujle3.onion:8333\n-gb5ypqt63du3wfhn.onion:8333\n-ggdy2pb2avlbtjwq.onion:8333\n-gh2aiddzxmvyrnue.onion:8333\n-gnxgylbgzvaazkq7.onion:8333\n-hnizdxnejel64ubk.onion:8333\n-htvdcmlc3abji2ab.onion:8443\n-hwuboois4gslupgx.onion:8333\n-hxz6gowludlj6d5a.onion:8333\n-j6umo4bnsztpsonc.onion:8333\n-jdunmaocwbbnw565.onion:8333\n-ktv3qlxl7xvmdlf4.onion:8333\n-kvd44sw7skb5folw.onion:8333\n-kwimnzm6vd4zakvl.onion:8333\n-la5xhk3lprxzxmz2.onion:8333\n-lc7cx67end26uutp.onion:8352\n-mwu5og2agcspmgkx.onion:8333\n-mzxkipiyekaoh7my.onion:8333\n-n6rwlrtwpqc7qwo7.onion:8333\n-nj36424yccqph62z.onion:8333\n-o256w7t3vcgktmxk.onion:8333\n-o4sl5na6jeqgi3l6.onion:8333\n-okdzjarwekbshnof.onion:8333\n-oyebydl2pacx6v26.onion:8333\n-p5mx2imj75dpmime.onion:8333\n-psco6bxjewljrczx.onion:8333\n-pxtgswet6tlgrbwj.onion:8333\n-rb4v3fhgx2zr4rre.onion:8333\n-rjlnp3hwvrsmap6e.onion:8333\n-rlafimkctvz63llg.onion:8333\n-rxjvy5eyttep5tts.onion:8333\n-seoskudzk6vn6mqz.onion:8333\n-tpgdufxxsw3jkrdf.onion:8333\n-tuiyvqgi3o675pjb.onion:8333\n-tx4zd7d5exonnblh.onion:8333\n-uokg6avfgbhofls3.onion:8333\n-v3gjphgqy5hygcml.onion:8333\n-vhdoxqq63xr53ol7.onion:8333\n-visevrizz3quyagj.onion:8333\n-vqpye2k5rcqvj5mq.onion:8333\n-wfsx2gi7djhy22hk.onion:8333\n-wg6vwmbrzyyzapun.onion:8333\n-xub4w3w4wwk56xiq.onion:8333\n-ycivnom44dmxx4ob.onion:8333\n-ywskufc62bf2fum4.onion:8333\n-z4fax2vxg23t2ddf.onion:8333\n-zo5dklwelmdrpo5n.onion:8333\n+2.228.70.198:8767"
      },
      {
        "sha": "bc4a6cb284074590bb65e0d2800bf2afd4f9326c",
        "filename": "contrib/seeds/nodes_test.txt",
        "status": "modified",
        "additions": 2,
        "deletions": 7,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/seeds/nodes_test.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/seeds/nodes_test.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/nodes_test.txt?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,11 +1,6 @@\n # List of fixed seed nodes for testnet\n \n # Onion nodes\n-thfsmmn2jbitcoin.onion\n-it2pj4f7657g3rhi.onion\n-nkf5e6b7pl4jfd4a.onion\n-4zhkir2ofl7orfom.onion\n-t6xj6wilh4ytvcs7.onion\n-i6y6ivorwakd7nw3.onion\n-ubqj4rsu3nqtxmtp.onion\n+thfsmmn2jraven.onion\n+\n "
      },
      {
        "sha": "0ba07a374ce620dc77623adef1936870335ca91d",
        "filename": "contrib/testgen/README.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/testgen/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/testgen/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/testgen/README.md?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,6 +1,6 @@\n ### TestGen ###\n \n-Utilities to generate test vectors for the data-driven Bitcoin tests.\n+Utilities to generate test vectors for the data-driven Raven tests.\n \n Usage: \n "
      },
      {
        "sha": "9143408f92d66f915f2946b28e8710dec6d96090",
        "filename": "contrib/testgen/base58.py",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/testgen/base58.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/testgen/base58.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/testgen/base58.py?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,10 +1,11 @@\n # Copyright (c) 2012-2016 The Bitcoin Core developers\n+# Copyright (c) 2017 The Raven Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n '''\n-Bitcoin base58 encoding and decoding.\n+Raven base58 encoding and decoding.\n \n-Based on https://bitcointalk.org/index.php?topic=1026.0 (public domain)\n+Based on https://raventalk.org/index.php?topic=1026.0 (public domain)\n '''\n import hashlib\n \n@@ -37,7 +38,7 @@ def b58encode(v):\n         long_value = div\n     result = __b58chars[long_value] + result\n \n-    # Bitcoin does a little leading-zero-compression:\n+    # Raven does a little leading-zero-compression:\n     # leading 0-bytes in the input become leading-1s\n     nPad = 0\n     for c in v:\n@@ -97,7 +98,7 @@ def get_bcaddress_version(strAddress):\n     return ord(version)\n \n if __name__ == '__main__':\n-    # Test case (from http://gitorious.org/bitcoin/python-base58.git)\n+    # Test case (from http://gitorious.org/raven/python-base58.git)\n     assert get_bcaddress_version('15VjRaDX9zpbA8LVnbrCAFzrVzN7ixHNsC') is 0\n     _ohai = 'o hai'.encode('ascii')\n     _tmp = b58encode(_ohai)"
      },
      {
        "sha": "43b90227ec36edad73d58fdb6bdc0f0dbfa2777c",
        "filename": "contrib/testgen/gen_base58_test_vectors.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/testgen/gen_base58_test_vectors.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/testgen/gen_base58_test_vectors.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/testgen/gen_base58_test_vectors.py?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,5 +1,6 @@\n #!/usr/bin/env python\n # Copyright (c) 2012-2016 The Bitcoin Core developers\n+# Copyright (c) 2017 The Raven Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n '''"
      },
      {
        "sha": "899557846c2f5645ede9b3548415f5e5a5267d8f",
        "filename": "contrib/tidy_datadir.sh",
        "status": "modified",
        "additions": 7,
        "deletions": 6,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/tidy_datadir.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/tidy_datadir.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/tidy_datadir.sh?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,13 +1,14 @@\n #!/bin/bash\n # Copyright (c) 2013 The Bitcoin Core developers\n+# Copyright (c) 2017 The Raven Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n if [ -d \"$1\" ]; then\n   cd \"$1\"\n else\n   echo \"Usage: $0 <datadir>\" >&2\n-  echo \"Removes obsolete Bitcoin database files\" >&2\n+  echo \"Removes obsolete Raven database files\" >&2\n   exit 1\n fi\n \n@@ -19,22 +20,22 @@ if [ -f wallet.dat -a -f peers.dat -a -f chainstate/CURRENT -a -f blocks/index/C\n \n case $LEVEL in\n   0)\n-    echo \"Error: no Bitcoin datadir detected.\"\n+    echo \"Error: no Raven datadir detected.\"\n     exit 1\n     ;;\n   1)\n-    echo \"Detected old Bitcoin datadir (before 0.7).\"\n+    echo \"Detected old Raven datadir (before 0.7).\"\n     echo \"Nothing to do.\"\n     exit 0\n     ;;\n   2)\n-    echo \"Detected Bitcoin 0.7 datadir.\"\n+    echo \"Detected Raven 0.7 datadir.\"\n     ;;\n   3)\n-    echo \"Detected Bitcoin pre-0.8 datadir.\"\n+    echo \"Detected Raven pre-0.8 datadir.\"\n     ;;\n   4)\n-    echo \"Detected Bitcoin 0.8 datadir.\"\n+    echo \"Detected Raven 0.8 datadir.\"\n     ;;\n esac\n "
      },
      {
        "sha": "415fe0532a6216a053d74cea2fed21976ebc173e",
        "filename": "contrib/verify-commits/gpg.sh",
        "status": "modified",
        "additions": 8,
        "deletions": 2,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/verify-commits/gpg.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/verify-commits/gpg.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/gpg.sh?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,5 +1,6 @@\n #!/bin/sh\n # Copyright (c) 2014-2016 The Bitcoin Core developers\n+# Copyright (c) 2017 The Raven Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -8,7 +9,7 @@ VALID=false\n REVSIG=false\n IFS='\n '\n-if [ \"$BITCOIN_VERIFY_COMMITS_ALLOW_SHA1\" = 1 ]; then\n+if [ \"$RAVEN_VERIFY_COMMITS_ALLOW_SHA1\" = 1 ]; then\n \tGPG_RES=\"$(echo \"$INPUT\" | gpg --trust-model always \"$@\" 2>/dev/null)\"\n else\n \t# Note how we've disabled SHA1 with the --weak-digest option, disabling\n@@ -42,7 +43,12 @@ for LINE in $(echo \"$GPG_RES\"); do\n \t\tdone < ./contrib/verify-commits/trusted-keys\n \t\t;;\n \t\"[GNUPG:] REVKEYSIG \"*)\n-\t\t[ \"$BITCOIN_VERIFY_COMMITS_ALLOW_REVSIG\" != 1 ] && exit 1\n+\t\t[ \"$RAVEN_VERIFY_COMMITS_ALLOW_REVSIG\" != 1 ] && exit 1\n+\t\tREVSIG=true\n+\t\tGOODREVSIG=\"[GNUPG:] GOODSIG ${LINE#* * *}\"\n+\t\t;;\n+\t\"[GNUPG:] EXPKEYSIG \"*)\n+\t\t[ \"$RAVEN_VERIFY_COMMITS_ALLOW_REVSIG\" != 1 ] && exit 1\n \t\tREVSIG=true\n \t\tGOODREVSIG=\"[GNUPG:] GOODSIG ${LINE#* * *}\"\n \t\t;;"
      },
      {
        "sha": "3ac60cba0a7cbbf87b054e03c3e5ed057b72bced",
        "filename": "contrib/verify-commits/pre-push-hook.sh",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/verify-commits/pre-push-hook.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/verify-commits/pre-push-hook.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/pre-push-hook.sh?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,9 +1,10 @@\n #!/bin/bash\n # Copyright (c) 2014-2015 The Bitcoin Core developers\n+# Copyright (c) 2017 The Raven Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-if ! [[ \"$2\" =~ ^(git@)?(www.)?github.com(:|/)bitcoin/bitcoin(.git)?$ ]]; then\n+if ! [[ \"$2\" =~ ^(git@)?(www.)?github.com(:|/)raven/raven(.git)?$ ]]; then\n     exit 0\n fi\n "
      },
      {
        "sha": "804738f3051613cc229ddd2e0c1c1ce05ceda6be",
        "filename": "contrib/verify-commits/verify-commits.sh",
        "status": "modified",
        "additions": 6,
        "deletions": 5,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/verify-commits/verify-commits.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/verify-commits/verify-commits.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/verify-commits.sh?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,5 +1,6 @@\n #!/bin/sh\n # Copyright (c) 2014-2016 The Bitcoin Core developers\n+# Copyright (c) 2017 The Raven Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -39,7 +40,7 @@ PREV_COMMIT=\"\"\n while true; do\n \tif [ \"$CURRENT_COMMIT\" = $VERIFIED_ROOT ]; then\n \t\techo \"There is a valid path from \"$CURRENT_COMMIT\" to $VERIFIED_ROOT where all commits are signed!\"\n-\t\texit 0;\n+\t\texit 0\n \tfi\n \n \tif [ \"$CURRENT_COMMIT\" = $VERIFIED_SHA512_ROOT ]; then\n@@ -51,15 +52,15 @@ while true; do\n \tfi\n \n \tif [ \"$NO_SHA1\" = \"1\" ]; then\n-\t\texport BITCOIN_VERIFY_COMMITS_ALLOW_SHA1=0\n+\t\texport RAVEN_VERIFY_COMMITS_ALLOW_SHA1=0\n \telse\n-\t\texport BITCOIN_VERIFY_COMMITS_ALLOW_SHA1=1\n+\t\texport RAVEN_VERIFY_COMMITS_ALLOW_SHA1=1\n \tfi\n \n \tif [ \"${REVSIG_ALLOWED#*$CURRENT_COMMIT}\" != \"$REVSIG_ALLOWED\" ]; then\n-\t\texport BITCOIN_VERIFY_COMMITS_ALLOW_REVSIG=1\n+\t\texport RAVEN_VERIFY_COMMITS_ALLOW_REVSIG=1\n \telse\n-\t\texport BITCOIN_VERIFY_COMMITS_ALLOW_REVSIG=0\n+\t\texport RAVEN_VERIFY_COMMITS_ALLOW_REVSIG=0\n \tfi\n \n \tif ! git -c \"gpg.program=${DIR}/gpg.sh\" verify-commit \"$CURRENT_COMMIT\" > /dev/null; then"
      },
      {
        "sha": "4a5435d3ff26192898271076b7ff2cc108238b7b",
        "filename": "contrib/verifybinaries/README.md",
        "status": "modified",
        "additions": 9,
        "deletions": 9,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/verifybinaries/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/verifybinaries/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verifybinaries/README.md?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -5,37 +5,37 @@\n Make sure you obtain the proper release signing key and verify the fingerprint with several independent sources.\n \n ```sh\n-$ gpg --fingerprint \"Bitcoin Core binary release signing key\"\n+$ gpg --fingerprint \"Raven Core binary release signing key\"\n pub   4096R/36C2E964 2015-06-24 [expires: 2017-02-13]\n       Key fingerprint = 01EA 5486 DE18 A882 D4C2  6845 90C8 019E 36C2 E964\n-uid                  Wladimir J. van der Laan (Bitcoin Core binary release signing key) <laanwj@gmail.com>\n+uid                  Wladimir J. van der Laan (Raven Core binary release signing key) <laanwj@gmail.com>\n ```\n \n #### Usage:\n \n-This script attempts to download the signature file `SHA256SUMS.asc` from https://bitcoin.org.\n+This script attempts to download the signature file `SHA256SUMS.asc` from https://raven.org.\n \n It first checks if the signature passes, and then downloads the files specified in the file, and checks if the hashes of these files match those that are specified in the signature file.\n \n The script returns 0 if everything passes the checks. It returns 1 if either the signature check or the hash check doesn't pass. If an error occurs the return value is 2.\n \n \n ```sh\n-./verify.sh bitcoin-core-0.11.2\n-./verify.sh bitcoin-core-0.12.0\n-./verify.sh bitcoin-core-0.13.0-rc3\n+./verify.sh raven-core-0.11.2\n+./verify.sh raven-core-0.12.0\n+./verify.sh raven-core-0.13.0-rc3\n ```\n \n If you only want to download the binaries of certain platform, add the corresponding suffix, e.g.:\n \n ```sh\n-./verify.sh bitcoin-core-0.11.2-osx\n+./verify.sh raven-core-0.11.2-osx\n ./verify.sh 0.12.0-linux\n-./verify.sh bitcoin-core-0.13.0-rc3-win64\n+./verify.sh raven-core-0.13.0-rc3-win64\n ```\n \n If you do not want to keep the downloaded binaries, specify anything as the second parameter.\n \n ```sh\n-./verify.sh bitcoin-core-0.13.0 delete\n+./verify.sh raven-core-0.13.0 delete\n ```"
      },
      {
        "sha": "5672226c8b70ed33fb8e487ed38ecfb2f8f59817",
        "filename": "contrib/verifybinaries/verify.sh",
        "status": "modified",
        "additions": 30,
        "deletions": 10,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/verifybinaries/verify.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/verifybinaries/verify.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verifybinaries/verify.sh?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,9 +1,11 @@\n #!/bin/bash\n # Copyright (c) 2016 The Bitcoin Core developers\n+# Copyright (c) 2017 The Raven Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-###   This script attempts to download the signature file SHA256SUMS.asc from bitcoin.org\n+###   This script attempts to download the signature file SHA256SUMS.asc from\n+###   ravencore.org and raven.org and compares them.\n ###   It first checks if the signature passes, and then downloads the files specified in\n ###   the file, and checks if the hashes of these files match those that are specified\n ###   in the signature file.\n@@ -17,13 +19,15 @@ function clean_up {\n    done\n }\n \n-WORKINGDIR=\"/tmp/bitcoin_verify_binaries\"\n+WORKINGDIR=\"/tmp/raven_verify_binaries\"\n TMPFILE=\"hashes.tmp\"\n \n SIGNATUREFILENAME=\"SHA256SUMS.asc\"\n RCSUBDIR=\"test\"\n-BASEDIR=\"https://bitcoin.org/bin/\"\n-VERSIONPREFIX=\"bitcoin-core-\"\n+HOST1=\"https://ravencoin.org\"\n+HOST2=\"https://raven.org\"\n+BASEDIR=\"/bin/\"\n+VERSIONPREFIX=\"raven-core-\"\n RCVERSIONSTRING=\"rc\"\n \n if [ ! -d \"$WORKINGDIR\" ]; then\n@@ -34,7 +38,7 @@ cd \"$WORKINGDIR\"\n \n #test if a version number has been passed as an argument\n if [ -n \"$1\" ]; then\n-   #let's also check if the version number includes the prefix 'bitcoin-',\n+   #let's also check if the version number includes the prefix 'raven-',\n    #  and add this prefix if it doesn't\n    if [[ $1 == \"$VERSIONPREFIX\"* ]]; then\n       VERSION=\"$1\"\n@@ -81,7 +85,7 @@ else\n fi\n \n #first we fetch the file containing the signature\n-WGETOUT=$(wget -N \"$BASEDIR$SIGNATUREFILENAME\" 2>&1)\n+WGETOUT=$(wget -N \"$HOST1$BASEDIR$SIGNATUREFILENAME\" 2>&1)\n \n #and then see if wget completed successfully\n if [ $? -ne 0 ]; then\n@@ -92,6 +96,22 @@ if [ $? -ne 0 ]; then\n    exit 2\n fi\n \n+WGETOUT=$(wget -N -O \"$SIGNATUREFILENAME.2\" \"$HOST2$BASEDIR$SIGNATUREFILENAME\" 2>&1)\n+if [ $? -ne 0 ]; then\n+   echo \"raven.org failed to provide signature file, but ravencore.org did?\"\n+   echo \"wget output:\"\n+   echo \"$WGETOUT\"|sed 's/^/\\t/g'\n+   clean_up $SIGNATUREFILENAME\n+   exit 3\n+fi\n+\n+SIGFILEDIFFS=\"$(diff $SIGNATUREFILENAME $SIGNATUREFILENAME.2)\"\n+if [ \"$SIGFILEDIFFS\" != \"\" ]; then\n+   echo \"raven.org and ravencore.org signature files were not equal?\"\n+   clean_up $SIGNATUREFILENAME $SIGNATUREFILENAME.2\n+   exit 4\n+fi\n+\n #then we check it\n GPGOUT=$(gpg --yes --decrypt --output \"$TMPFILE\" \"$SIGNATUREFILENAME\" 2>&1)\n \n@@ -106,12 +126,12 @@ if [ $RET -ne 0 ]; then\n       echo \"Bad signature.\"\n    elif [ $RET -eq 2 ]; then\n       #or if a gpg error has occurred\n-      echo \"gpg error. Do you have the Bitcoin Core binary release signing key installed?\"\n+      echo \"gpg error. Do you have the Raven Core binary release signing key installed?\"\n    fi\n \n    echo \"gpg output:\"\n    echo \"$GPGOUT\"|sed 's/^/\\t/g'\n-   clean_up $SIGNATUREFILENAME $TMPFILE\n+   clean_up $SIGNATUREFILENAME $SIGNATUREFILENAME.2 $TMPFILE\n    exit \"$RET\"\n fi\n \n@@ -131,7 +151,7 @@ FILES=$(awk '{print $2}' \"$TMPFILE\")\n for file in $FILES\n do\n    echo \"Downloading $file\"\n-   wget --quiet -N \"$BASEDIR$file\"\n+   wget --quiet -N \"$HOST1$BASEDIR$file\"\n done\n \n #check hashes\n@@ -149,7 +169,7 @@ fi\n \n if [ -n \"$2\" ]; then\n    echo \"Clean up the binaries\"\n-   clean_up $FILES $SIGNATUREFILENAME $TMPFILE\n+   clean_up $FILES $SIGNATUREFILENAME $SIGNATUREFILENAME.2 $TMPFILE\n else\n    echo \"Keep the binaries in $WORKINGDIR\"\n    clean_up $TMPFILE"
      },
      {
        "sha": "558556954d882855a6eb63e45f95fdc14e8dbd70",
        "filename": "contrib/windeploy/detached-sig-create.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/windeploy/detached-sig-create.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/windeploy/detached-sig-create.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/windeploy/detached-sig-create.sh?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,5 +1,6 @@\n #!/bin/sh\n # Copyright (c) 2014-2015 The Bitcoin Core developers\n+# Copyright (c) 2017 The Raven Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "b6f0fa7801ab1fca2e7ac374ca19075ab1767f38",
        "filename": "contrib/zmq/zmq_sub.py",
        "status": "modified",
        "additions": 10,
        "deletions": 9,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/zmq/zmq_sub.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/zmq/zmq_sub.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/zmq/zmq_sub.py?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,25 +1,26 @@\n #!/usr/bin/env python3\n # Copyright (c) 2014-2016 The Bitcoin Core developers\n+# Copyright (c) 2017 The Raven Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n \"\"\"\n     ZMQ example using python3's asyncio\n \n-    Bitcoin should be started with the command line arguments:\n-        bitcoind -testnet -daemon \\\n-                -zmqpubhashblock=tcp://127.0.0.1:28332 \\\n-                -zmqpubrawtx=tcp://127.0.0.1:28332 \\\n-                -zmqpubhashtx=tcp://127.0.0.1:28332 \\\n-                -zmqpubhashblock=tcp://127.0.0.1:28332\n+    Raven should be started with the command line arguments:\n+        ravend -testnet -daemon \\\n+                -zmqpubhashblock=tcp://127.0.0.1:28766 \\\n+                -zmqpubrawtx=tcp://127.0.0.1:28766 \\\n+                -zmqpubhashtx=tcp://127.0.0.1:28766 \\\n+                -zmqpubhashblock=tcp://127.0.0.1:28766\n \n     We use the asyncio library here.  `self.handle()` installs itself as a\n     future at the end of the function.  Since it never returns with the event\n     loop having an empty stack of futures, this creates an infinite loop.  An\n     alternative is to wrap the contents of `handle` inside `while True`.\n \n     A blocking example using python 2.7 can be obtained from the git history:\n-    https://github.com/bitcoin/bitcoin/blob/37a7fe9e440b83e2364d5498931253937abe9294/contrib/zmq/zmq_sub.py\n+    https://github.com/RavenProject/Ravencoin/blob/37a7fe9e440b83e2364d5498931253937abe9294/contrib/zmq/zmq_sub.py\n \"\"\"\n \n import binascii\n@@ -32,9 +33,9 @@\n \n if not (sys.version_info.major >= 3 and sys.version_info.minor >= 5):\n     print(\"This example only works with Python 3.5 and greater\")\n-    exit(1)\n+    sys.exit(1)\n \n-port = 28332\n+port = 28766\n \n class ZMQHandler():\n     def __init__(self):"
      },
      {
        "sha": "50047260094b09799a92827cabfda43152998b42",
        "filename": "contrib/zmq/zmq_sub3.4.py",
        "status": "modified",
        "additions": 10,
        "deletions": 9,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/zmq/zmq_sub3.4.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/contrib/zmq/zmq_sub3.4.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/zmq/zmq_sub3.4.py?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,17 +1,18 @@\n #!/usr/bin/env python3\n # Copyright (c) 2014-2016 The Bitcoin Core developers\n+# Copyright (c) 2017 The Raven Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n \"\"\"\n     ZMQ example using python3's asyncio\n \n-    Bitcoin should be started with the command line arguments:\n-        bitcoind -testnet -daemon \\\n-                -zmqpubhashblock=tcp://127.0.0.1:28332 \\\n-                -zmqpubrawtx=tcp://127.0.0.1:28332 \\\n-                -zmqpubhashtx=tcp://127.0.0.1:28332 \\\n-                -zmqpubhashblock=tcp://127.0.0.1:28332\n+    Raven should be started with the command line arguments:\n+        ravend -testnet -daemon \\\n+                -zmqpubhashblock=tcp://127.0.0.1:28766 \\\n+                -zmqpubrawtx=tcp://127.0.0.1:28766 \\\n+                -zmqpubhashtx=tcp://127.0.0.1:28766 \\\n+                -zmqpubhashblock=tcp://127.0.0.1:28766\n \n     We use the asyncio library here.  `self.handle()` installs itself as a\n     future at the end of the function.  Since it never returns with the event\n@@ -23,7 +24,7 @@\n     and `await` keywords respectively.\n \n     A blocking example using python 2.7 can be obtained from the git history:\n-    https://github.com/bitcoin/bitcoin/blob/37a7fe9e440b83e2364d5498931253937abe9294/contrib/zmq/zmq_sub.py\n+    https://github.com/RavenProject/Ravencoin/blob/37a7fe9e440b83e2364d5498931253937abe9294/contrib/zmq/zmq_sub.py\n \"\"\"\n \n import binascii\n@@ -36,9 +37,9 @@\n \n if not (sys.version_info.major >= 3 and sys.version_info.minor >= 4):\n     print(\"This example only works with Python 3.4 and greater\")\n-    exit(1)\n+    sys.exit(1)\n \n-port = 28332\n+port = 28766\n \n class ZMQHandler():\n     def __init__(self):"
      },
      {
        "sha": "00f0ecd16626c7ef8ca72201711c18d1d7130d38",
        "filename": "depends/Makefile",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/depends/Makefile",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/depends/Makefile",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/Makefile?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -6,7 +6,6 @@ SDK_PATH ?= $(BASEDIR)/SDKs\n NO_QT ?=\n NO_WALLET ?=\n NO_UPNP ?=\n-FALLBACK_DOWNLOAD_PATH ?= https://bitcoincore.org/depends-sources\n \n BUILD = $(shell ./config.guess)\n HOST ?= $(BUILD)\n@@ -134,6 +133,7 @@ $(host_prefix)/share/config.site : config.site.in $(host_prefix)/.stamp_$(final_\n             -e 's|@CXXFLAGS@|$(strip $(host_CXXFLAGS) $(host_$(release_type)_CXXFLAGS))|' \\\n             -e 's|@CPPFLAGS@|$(strip $(host_CPPFLAGS) $(host_$(release_type)_CPPFLAGS))|' \\\n             -e 's|@LDFLAGS@|$(strip $(host_LDFLAGS) $(host_$(release_type)_LDFLAGS))|' \\\n+            -e 's|@allow_host_packages@|$(ALLOW_HOST_PACKAGES)|' \\\n             -e 's|@no_qt@|$(NO_QT)|' \\\n             -e 's|@no_wallet@|$(NO_WALLET)|' \\\n             -e 's|@no_upnp@|$(NO_UPNP)|' \\"
      },
      {
        "sha": "3674c080a4e2591e7c4015a09ab4fe7ecd042eeb",
        "filename": "depends/README.md",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/depends/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/depends/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/README.md?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -12,9 +12,9 @@ For example:\n \n     make HOST=x86_64-w64-mingw32 -j4\n \n-A prefix will be generated that's suitable for plugging into Bitcoin's\n+A prefix will be generated that's suitable for plugging into Raven's\n configure. In the above example, a dir named x86_64-w64-mingw32 will be\n-created. To use it for Bitcoin:\n+created. To use it for Raven:\n \n     ./configure --prefix=`pwd`/depends/x86_64-w64-mingw32\n \n@@ -43,7 +43,7 @@ The following can be set when running make: make FOO=bar\n     BUILD_ID_SALT: Optional salt to use when generating build package ids\n \n If some packages are not built, for example `make NO_WALLET=1`, the appropriate\n-options will be passed to bitcoin's configure. In this case, `--disable-wallet`.\n+options will be passed to raven's configure. In this case, `--disable-wallet`.\n \n Additional targets:\n "
      },
      {
        "sha": "0a4a9c327e2e73e55d226c4cdc8a543bcf0da1f5",
        "filename": "depends/config.site.in",
        "status": "modified",
        "additions": 6,
        "deletions": 5,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/depends/config.site.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/depends/config.site.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/config.site.in?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -13,10 +13,10 @@ fi\n if test -z $with_qt_translationdir; then\n   with_qt_translationdir=$depends_prefix/translations\n fi\n-if test -z $with_qt_bindir; then\n+if test -z $with_qt_bindir && test -z \"@no_qt@\"; then\n   with_qt_bindir=$depends_prefix/native/bin\n fi\n-if test -z $with_protoc_bindir; then\n+if test -z $with_protoc_bindir && test -z \"@no_qt@\"; then\n   with_protoc_bindir=$depends_prefix/native/bin\n fi\n \n@@ -53,9 +53,10 @@ PKG_CONFIG=\"`which pkg-config` --static\"\n # These two need to remain exported because pkg-config does not see them\n # otherwise. That means they must be unexported at the end of configure.ac to\n # avoid ruining the cache. Sigh.\n-\n-export PKG_CONFIG_LIBDIR=$depends_prefix/lib/pkgconfig\n-export PKG_CONFIG_PATH=$depends_prefix/share/pkgconfig\n+export PKG_CONFIG_PATH=$depends_prefix/share/pkgconfig:$depends_prefix/lib/pkgconfig\n+if test -z \"@allow_host_packages@\"; then\n+  export PKGCONFIG_LIBDIR=\n+fi\n \n CPPFLAGS=\"-I$depends_prefix/include/ $CPPFLAGS\"\n LDFLAGS=\"-L$depends_prefix/lib $LDFLAGS\""
      },
      {
        "sha": "55d987008dcadf31be46ecfe1d9ce84617ea38c5",
        "filename": "depends/description.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/depends/description.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/depends/description.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/description.md?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,4 +1,4 @@\n-This is a system of building and caching dependencies necessary for building Bitcoin. \n+This is a system of building and caching dependencies necessary for building Raven. \n There are several features that make it different from most similar systems:\n \n ### It is designed to be builder and host agnostic"
      },
      {
        "sha": "12695db4b9f781c9ce8aa9a62dab0ae36a0a1ce4",
        "filename": "depends/packages/fontconfig.mk",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/depends/packages/fontconfig.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/depends/packages/fontconfig.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/fontconfig.mk?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -13,7 +13,13 @@ define $(package)_config_cmds\n   $($(package)_autoconf)\n endef\n \n+# 2.12.1 uses CHAR_WIDTH which is reserved and clashes with some glibc versions, but newer versions of fontconfig\n+# have broken makefiles which needlessly attempt to re-generate headers with gperf.\n+# Instead, change all uses of CHAR_WIDTH, and disable the rule that forces header re-generation.\n+# This can be removed once the upstream build is fixed.\n define $(package)_build_cmds\n+  sed -i 's/CHAR_WIDTH/CHARWIDTH/g' fontconfig/fontconfig.h src/fcobjshash.gperf src/fcobjs.h src/fcobjshash.h && \\\n+  sed -i 's/fcobjshash.h: fcobjshash.gperf/fcobjshash.h:/' src/Makefile && \\\n   $(MAKE)\n endef\n "
      },
      {
        "sha": "5f622f8e6e80694386fef45917b84b97ee1d2223",
        "filename": "depends/packages/libevent.mk",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/depends/packages/libevent.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/depends/packages/libevent.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libevent.mk?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -9,7 +9,7 @@ define $(package)_preprocess_cmds\n endef\n \n define $(package)_set_vars\n-  $(package)_config_opts=--disable-shared --disable-openssl --disable-libevent-regress\n+  $(package)_config_opts=--disable-shared --disable-openssl --disable-libevent-regress --disable-samples\n   $(package)_config_opts_release=--disable-debug-mode\n   $(package)_config_opts_linux=--with-pic\n endef"
      },
      {
        "sha": "116fa25d38197b8add2c601ab7cd7b91c384f268",
        "filename": "depends/packages/native_ds_store.mk",
        "status": "modified",
        "additions": 4,
        "deletions": 5,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/depends/packages/native_ds_store.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/depends/packages/native_ds_store.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_ds_store.mk?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,9 +1,8 @@\n package=native_ds_store\n-$(package)_version=1.1.0\n-$(package)_download_path=https://bitbucket.org/al45tair/ds_store/get\n-$(package)_download_file=v$($(package)_version).tar.bz2\n-$(package)_file_name=$(package)-$($(package)_version).tar.bz2\n-$(package)_sha256_hash=921596764d71d1bbd3297a90ef6d286f718794d667e4f81d91d14053525d64c1\n+$(package)_version=1.1.2\n+$(package)_download_path=https://github.com/al45tair/ds_store/archive/\n+$(package)_file_name=v$($(package)_version).tar.gz\n+$(package)_sha256_hash=3b3ecb7bf0a5157f5b6010bc3af7c141fb0ad3527084e63336220d22744bc20c\n $(package)_install_libdir=$(build_prefix)/lib/python/dist-packages\n $(package)_dependencies=native_biplist\n "
      },
      {
        "sha": "488ec8b59c977346818e8294dc9064fc49e15ec4",
        "filename": "depends/packages/native_mac_alias.mk",
        "status": "modified",
        "additions": 5,
        "deletions": 6,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/depends/packages/native_mac_alias.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/depends/packages/native_mac_alias.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_mac_alias.mk?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,14 +1,13 @@\n package=native_mac_alias\n-$(package)_version=1.1.0\n-$(package)_download_path=https://bitbucket.org/al45tair/mac_alias/get\n-$(package)_download_file=v$($(package)_version).tar.bz2\n-$(package)_file_name=$(package)-$($(package)_version).tar.bz2\n-$(package)_sha256_hash=87ad827e66790028361e43fc754f68ed041a9bdb214cca03c853f079b04fb120\n+$(package)_version=2.0.6\n+$(package)_download_path=https://github.com/al45tair/mac_alias/archive/\n+$(package)_file_name=v$($(package)_version).tar.gz\n+$(package)_sha256_hash=78a3332d9a597eebf09ae652d38ad1e263b28db5c2e6dd725fad357b03b77371\n $(package)_install_libdir=$(build_prefix)/lib/python/dist-packages\n $(package)_patches=python3.patch\n \n define $(package)_preprocess_cmds\n-  patch -p1 < $($(package)_patch_dir)/python3.patch\n+    patch -p1 < $($(package)_patch_dir)/python3.patch\n endef\n \n define $(package)_build_cmds"
      },
      {
        "sha": "6f2f5534a275d57d3dcb8287823b85e663152904",
        "filename": "depends/patches/native_mac_alias/python3.patch",
        "status": "modified",
        "additions": 6,
        "deletions": 22,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/depends/patches/native_mac_alias/python3.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/depends/patches/native_mac_alias/python3.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/native_mac_alias/python3.patch?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,7 +1,7 @@\n diff -dur a/mac_alias/alias.py b/mac_alias/alias.py\n---- a/mac_alias/alias.py\t2015-10-19 12:12:48.000000000 +0200\n-+++ b/mac_alias/alias.py\t2016-04-03 12:13:12.037159417 +0200\n-@@ -243,10 +243,10 @@\n+--- a/mac_alias/alias.py\n++++ b/mac_alias/alias.py\n+@@ -258,10 +258,10 @@\n          alias = Alias()\n          alias.appinfo = appinfo\n              \n@@ -14,7 +14,7 @@ diff -dur a/mac_alias/alias.py b/mac_alias/alias.py\n                                     folder_cnid, cnid,\n                                     crdate, creator_code, type_code)\n          alias.target.levels_from = levels_from\n-@@ -261,9 +261,9 @@\n+@@ -276,9 +276,9 @@\n                  b.read(1)\n  \n              if tag == TAG_CARBON_FOLDER_NAME:\n@@ -26,7 +26,7 @@ diff -dur a/mac_alias/alias.py b/mac_alias/alias.py\n                                                             value)\n              elif tag == TAG_CARBON_PATH:\n                  alias.target.carbon_path = value\n-@@ -298,9 +298,9 @@\n+@@ -313,9 +313,9 @@\n                  alias.target.creation_date \\\n                      = mac_epoch + datetime.timedelta(seconds=seconds)\n              elif tag == TAG_POSIX_PATH:\n@@ -38,23 +38,7 @@ diff -dur a/mac_alias/alias.py b/mac_alias/alias.py\n              elif tag == TAG_RECURSIVE_ALIAS_OF_DISK_IMAGE:\n                  alias.volume.disk_image_alias = Alias.from_bytes(value)\n              elif tag == TAG_USER_HOME_LENGTH_PREFIX:\n-@@ -422,13 +422,13 @@\n-         #       (so doing so is ridiculous, and nothing could rely on it).\n-         b.write(struct.pack(b'>h28pI2shI64pII4s4shhI2s10s',\n-                             self.target.kind,\n--                            carbon_volname, voldate,\n-+                            carbon_volname, int(voldate),\n-                             self.volume.fs_type,\n-                             self.volume.disk_type,\n-                             self.target.folder_cnid,\n-                             carbon_filename,\n-                             self.target.cnid,\n--                            crdate,\n-+                            int(crdate),\n-                             self.target.creator_code,\n-                             self.target.type_code,\n-                             self.target.levels_from,\n-@@ -449,12 +449,12 @@\n+@@ -467,12 +467,12 @@\n  \n          b.write(struct.pack(b'>hhQhhQ',\n                  TAG_HIGH_RES_VOLUME_CREATION_DATE,"
      },
      {
        "sha": "9d429d4d81dc3daa94ed06bcc15845abbea27d18",
        "filename": "doc/Doxyfile.in",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/doc/Doxyfile.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/doc/Doxyfile.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/Doxyfile.in?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -32,7 +32,7 @@ DOXYFILE_ENCODING      = UTF-8\n # title of most generated pages and in a few other places.\n # The default value is: My Project.\n \n-PROJECT_NAME           = \"Bitcoin Core\"\n+PROJECT_NAME           = \"Raven Core\"\n \n # The PROJECT_NUMBER tag can be used to enter a project or revision number. This\n # could be handy for archiving the generated documentation or if some version\n@@ -51,7 +51,7 @@ PROJECT_BRIEF          = \"P2P Digital Currency\"\n # pixels and the maximum width should not exceed 200 pixels. Doxygen will copy\n # the logo to the output directory.\n \n-PROJECT_LOGO           = doc/bitcoin_logo_doxygen.png\n+PROJECT_LOGO           = doc/raven_logo_doxygen.png\n \n # The OUTPUT_DIRECTORY tag is used to specify the (relative or absolute) path\n # into which the generated documentation will be written. If a relative path is\n@@ -1265,15 +1265,15 @@ DOCSET_FEEDNAME        = \"Doxygen generated docs\"\n # The default value is: org.doxygen.Project.\n # This tag requires that the tag GENERATE_DOCSET is set to YES.\n \n-DOCSET_BUNDLE_ID       = org.bitcoin.Bitcoin-Core\n+DOCSET_BUNDLE_ID       = org.raven.Raven-Core\n \n # The DOCSET_PUBLISHER_ID tag specifies a string that should uniquely identify\n # the documentation publisher. This should be a reverse domain-name style\n # string, e.g. com.mycompany.MyDocSet.documentation.\n # The default value is: org.doxygen.Publisher.\n # This tag requires that the tag GENERATE_DOCSET is set to YES.\n \n-DOCSET_PUBLISHER_ID    = org.bitcoin.Bitcoin-Core\n+DOCSET_PUBLISHER_ID    = org.raven.Raven-Core\n \n # The DOCSET_PUBLISHER_NAME tag identifies the documentation publisher.\n # The default value is: Publisher."
      },
      {
        "sha": "ef20be6f564f267efaa2a3b5a3e02f6d942ca063",
        "filename": "doc/README.md",
        "status": "modified",
        "additions": 18,
        "deletions": 17,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/doc/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/doc/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README.md?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,42 +1,43 @@\n-Bitcoin Core\n+Raven Core\n =============\n \n Setup\n ---------------------\n-Bitcoin Core is the original Bitcoin client and it builds the backbone of the network. It downloads and, by default, stores the entire history of Bitcoin transactions (which is currently more than 100 GBs); depending on the speed of your computer and network connection, the synchronization process can take anywhere from a few hours to a day or more.\n+Raven Core is the original Raven client and it builds the backbone of the network. It downloads and, by default, stores the entire history of Raven transactions (which is currently more than 100 GBs); depending on the speed of your computer and network connection, the synchronization process can take anywhere from a few hours to a day or more.\n \n-To download Bitcoin Core, visit [bitcoincore.org](https://bitcoincore.org/en/releases/).\n+To download Raven Core, visit [ravencore.org](https://ravencoin.org/en/releases/).\n \n Running\n ---------------------\n-The following are some helpful notes on how to run Bitcoin on your native platform.\n+The following are some helpful notes on how to run Raven on your native platform.\n \n ### Unix\n \n Unpack the files into a directory and run:\n \n-- `bin/bitcoin-qt` (GUI) or\n-- `bin/bitcoind` (headless)\n+- `bin/raven-qt` (GUI) or\n+- `bin/ravend` (headless)\n \n ### Windows\n \n-Unpack the files into a directory, and then run bitcoin-qt.exe.\n+Unpack the files into a directory, and then run raven-qt.exe.\n \n ### OS X\n \n-Drag Bitcoin-Core to your applications folder, and then run Bitcoin-Core.\n+Drag Raven-Core to your applications folder, and then run Raven-Core.\n \n ### Need Help?\n \n-* See the documentation at the [Bitcoin Wiki](https://en.bitcoin.it/wiki/Main_Page)\n+* See the documentation at the [Raven Wiki](https://en.raven.it/wiki/Main_Page)\n for help and more information.\n-* Ask for help on [#bitcoin](http://webchat.freenode.net?channels=bitcoin) on Freenode. If you don't have an IRC client use [webchat here](http://webchat.freenode.net?channels=bitcoin).\n-* Ask for help on the [BitcoinTalk](https://bitcointalk.org/) forums, in the [Technical Support board](https://bitcointalk.org/index.php?board=4.0).\n+* Ask for help on [#raven](http://webchat.freenode.net?channels=raven) on Freenode. If you don't have an IRC client use [webchat here](http://webchat.freenode.net?channels=raven).\n+* Ask for help on the [RavenTalk](https://raventalk.org/) forums, in the [Technical Support board](https://raventalk.org/index.php?board=4.0).\n \n Building\n ---------------------\n-The following are developer notes on how to build Bitcoin on your native platform. They are not complete guides, but include notes on the necessary libraries, compile flags, etc.\n+The following are developer notes on how to build Raven on your native platform. They are not complete guides, but include notes on the necessary libraries, compile flags, etc.\n \n+- [Dependencies](dependencies.md)\n - [OS X Build Notes](build-osx.md)\n - [Unix Build Notes](build-unix.md)\n - [Windows Build Notes](build-windows.md)\n@@ -45,12 +46,12 @@ The following are developer notes on how to build Bitcoin on your native platfor\n \n Development\n ---------------------\n-The Bitcoin repo's [root README](/README.md) contains relevant information on the development process and automated testing.\n+The Raven repo's [root README](/README.md) contains relevant information on the development process and automated testing.\n \n - [Developer Notes](developer-notes.md)\n - [Release Notes](release-notes.md)\n - [Release Process](release-process.md)\n-- [Source Code Documentation (External Link)](https://dev.visucore.com/bitcoin/doxygen/)\n+- [Source Code Documentation (External Link)](https://dev.visucore.com/raven/doxygen/)\n - [Translation Process](translation_process.md)\n - [Translation Strings Policy](translation_strings_policy.md)\n - [Travis CI](travis-ci.md)\n@@ -61,9 +62,9 @@ The Bitcoin repo's [root README](/README.md) contains relevant information on th\n - [Benchmarking](benchmarking.md)\n \n ### Resources\n-* Discuss on the [BitcoinTalk](https://bitcointalk.org/) forums, in the [Development & Technical Discussion board](https://bitcointalk.org/index.php?board=6.0).\n-* Discuss project-specific development on #bitcoin-core-dev on Freenode. If you don't have an IRC client use [webchat here](http://webchat.freenode.net/?channels=bitcoin-core-dev).\n-* Discuss general Bitcoin development on #bitcoin-dev on Freenode. If you don't have an IRC client use [webchat here](http://webchat.freenode.net/?channels=bitcoin-dev).\n+* Discuss on the [RavenTalk](https://raventalk.org/) forums, in the [Development & Technical Discussion board](https://raventalk.org/index.php?board=6.0).\n+* Discuss project-specific development on #raven-core-dev on Freenode. If you don't have an IRC client use [webchat here](http://webchat.freenode.net/?channels=raven-core-dev).\n+* Discuss general Raven development on #raven-dev on Freenode. If you don't have an IRC client use [webchat here](http://webchat.freenode.net/?channels=raven-dev).\n \n ### Miscellaneous\n - [Assets Attribution](assets-attribution.md)"
      },
      {
        "sha": "69d635f2d6e83b109c68d7be669a5cb52b5b15c0",
        "filename": "doc/README_osx.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/doc/README_osx.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/doc/README_osx.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README_osx.md?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -92,6 +92,6 @@ build process to remain somewhat deterministic. Here's how it works:\n   that have been previously (deterministically) built in order to create a\n   final dmg.\n - The Apple keyholder uses this unsigned app to create a detached signature,\n-  using the script that is also included there. Detached signatures are available from this [repository](https://github.com/bitcoin-core/bitcoin-detached-sigs).\n+  using the script that is also included there. Detached signatures are available from this [repository](https://github.com/raven-core/raven-detached-sigs).\n - Builders feed the unsigned app + detached signature back into Gitian. It\n   uses the pre-built tools to recombine the pieces into a deterministic dmg."
      },
      {
        "sha": "4b9efffb8b55a052f1a5c2d6e4dded060c61c7a5",
        "filename": "doc/README_windows.txt",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/doc/README_windows.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/doc/README_windows.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README_windows.txt?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,23 +1,23 @@\n-Bitcoin Core\r\n+Raven Core\r\n =============\r\n \r\n Intro\r\n -----\r\n-Bitcoin is a free open source peer-to-peer electronic cash system that is\r\n+Raven is a free open source peer-to-peer electronic cash system that is\r\n completely decentralized, without the need for a central server or trusted\r\n parties.  Users hold the crypto keys to their own money and transact directly\r\n with each other, with the help of a P2P network to check for double-spending.\r\n \r\n \r\n Setup\r\n -----\r\n-Unpack the files into a directory and run bitcoin-qt.exe.\r\n+Unpack the files into a directory and run raven-qt.exe.\r\n \r\n-Bitcoin Core is the original Bitcoin client and it builds the backbone of the network.\r\n-However, it downloads and stores the entire history of Bitcoin transactions;\r\n+Raven Core is the original Raven client and it builds the backbone of the network.\r\n+However, it downloads and stores the entire history of Raven transactions;\r\n depending on the speed of your computer and network connection, the synchronization\r\n process can take anywhere from a few hours to a day or more.\r\n \r\n-See the bitcoin wiki at:\r\n-  https://en.bitcoin.it/wiki/Main_Page\r\n+See the raven wiki at:\r\n+  https://en.raven.it/wiki/Main_Page\r\n for more help and information.\r"
      },
      {
        "sha": "60eac653b1a3b4091e3efa1b6beaf1d313287d4c",
        "filename": "doc/REST-interface.md",
        "status": "modified",
        "additions": 12,
        "deletions": 11,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/doc/REST-interface.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/doc/REST-interface.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/REST-interface.md?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -3,19 +3,20 @@ Unauthenticated REST Interface\n \n The REST API can be enabled with the `-rest` option.\n \n-The interface runs on the same port as the JSON-RPC interface, by default port 8332 for mainnet and port 18332 for testnet.\n+The interface runs on the same port as the JSON-RPC interface, by default port 8766 for mainnet, port 18766 for testnet,\n+and port 18443 for regtest.\n \n Supported API\n -------------\n \n-####Transactions\n+#### Transactions\n `GET /rest/tx/<TX-HASH>.<bin|hex|json>`\n \n Given a transaction hash: returns a transaction in binary, hex-encoded binary, or JSON formats.\n \n For full TX query capability, one must enable the transaction index via \"txindex=1\" command line / configuration option.\n \n-####Blocks\n+#### Blocks\n `GET /rest/block/<BLOCK-HASH>.<bin|hex|json>`\n `GET /rest/block/notxdetails/<BLOCK-HASH>.<bin|hex|json>`\n \n@@ -25,12 +26,12 @@ The HTTP request and response are both handled entirely in-memory, thus making m\n \n With the /notxdetails/ option JSON response will only contain the transaction hash instead of the complete transaction details. The option only affects the JSON response.\n \n-####Blockheaders\n+#### Blockheaders\n `GET /rest/headers/<COUNT>/<BLOCK-HASH>.<bin|hex|json>`\n \n Given a block hash: returns <COUNT> amount of blockheaders in upward direction.\n \n-####Chaininfos\n+#### Chaininfos\n `GET /rest/chaininfo.json`\n \n Returns various state info regarding block chain processing.\n@@ -48,16 +49,16 @@ Only supports JSON as output format.\n * softforks : (array) status of softforks in progress\n * bip9_softforks : (object) status of BIP9 softforks in progress\n \n-####Query UTXO set\n+#### Query UTXO set\n `GET /rest/getutxos/<checkmempool>/<txid>-<n>/<txid>-<n>/.../<txid>-<n>.<bin|hex|json>`\n \n The getutxo command allows querying of the UTXO set given a set of outpoints.\n See BIP64 for input and output serialisation:\n-https://github.com/bitcoin/bips/blob/master/bip-0064.mediawiki\n+https://github.com/raven/bips/blob/master/bip-0064.mediawiki\n \n Example:\n ```\n-$ curl localhost:18332/rest/getutxos/checkmempool/b2cdfd7b89def827ff8af7cd9bff7627ff72e5e8b0f71210f92ea7a4000c5d75-0.json 2>/dev/null | json_pp\n+$ curl localhost:18766/rest/getutxos/checkmempool/b2cdfd7b89def827ff8af7cd9bff7627ff72e5e8b0f71210f92ea7a4000c5d75-0.json 2>/dev/null | json_pp\n {\n    \"chainHeight\" : 325347,\n    \"chaintipHash\" : \"00000000fb01a7f3745a717f8caebee056c484e6e0bfe4a9591c235bb70506fb\",\n@@ -81,7 +82,7 @@ $ curl localhost:18332/rest/getutxos/checkmempool/b2cdfd7b89def827ff8af7cd9bff76\n }\n ```\n \n-####Memory pool\n+#### Memory pool\n `GET /rest/mempool/info.json`\n \n Returns various information about the TX mempool.\n@@ -90,7 +91,7 @@ Only supports JSON as output format.\n * bytes : (numeric) size of the TX mempool in bytes\n * usage : (numeric) total TX mempool memory usage\n * maxmempool : (numeric) maximum memory usage for the mempool in bytes\n-* mempoolminfee : (numeric) minimum feerate (BTC per KB) for tx to be accepted\n+* mempoolminfee : (numeric) minimum feerate (RVN per KB) for tx to be accepted\n \n `GET /rest/mempool/contents.json`\n \n@@ -99,4 +100,4 @@ Only supports JSON as output format.\n \n Risks\n -------------\n-Running a web browser on the same node with a REST enabled bitcoind can be a risk. Accessing prepared XSS websites could read out tx/block data of your node by placing links like `<script src=\"http://127.0.0.1:8332/rest/tx/1234567890.json\">` which might break the nodes privacy.\n+Running a web browser on the same node with a REST enabled ravend can be a risk. Accessing prepared XSS websites could read out tx/block data of your node by placing links like `<script src=\"http://127.0.0.1:8766/rest/tx/1234567890.json\">` which might break the nodes privacy."
      },
      {
        "sha": "d68c623546dd954ce108c82714bfb9e0259f4b0f",
        "filename": "doc/assets-attribution.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/doc/assets-attribution.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/doc/assets-attribution.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/assets-attribution.md?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1 +1 @@\n-The list of assets used in the bitcoin source and their attribution can now be found in [contrib/debian/copyright](../contrib/debian/copyright).\n+The list of assets used in the raven source and their attribution can now be found in [contrib/debian/copyright](../contrib/debian/copyright)."
      },
      {
        "sha": "16b28a2eaa9965281c4713d379d642f100aa3c7e",
        "filename": "doc/benchmarking.md",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/doc/benchmarking.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/doc/benchmarking.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/benchmarking.md?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,11 +1,11 @@\n Benchmarking\n ============\n \n-Bitcoin Core has an internal benchmarking framework, with benchmarks\n+Raven Core has an internal benchmarking framework, with benchmarks\n for cryptographic algorithms such as SHA1, SHA256, SHA512 and RIPEMD160. As well as the rolling bloom filter.\n \n-After compiling bitcoin-core, the benchmarks can be run with:\n-`src/bench/bench_bitcoin`\n+After compiling raven-core, the benchmarks can be run with:\n+`src/bench/bench_raven`\n \n The output will look similar to:\n ```"
      },
      {
        "sha": "2edc4d5b4a2fd65ba255eaf2fae988d4c125bff1",
        "filename": "doc/bips.md",
        "status": "modified",
        "additions": 34,
        "deletions": 34,
        "changes": 68,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/doc/bips.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/doc/bips.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/bips.md?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,35 +1,35 @@\n-BIPs that are implemented by Bitcoin Core (up-to-date up to **v0.13.0**):\n+BIPs that are implemented by Raven Core (up-to-date up to **v0.13.0**):\n \n-* [`BIP 9`](https://github.com/bitcoin/bips/blob/master/bip-0009.mediawiki): The changes allowing multiple soft-forks to be deployed in parallel have been implemented since **v0.12.1**  ([PR #7575](https://github.com/bitcoin/bitcoin/pull/7575))\n-* [`BIP 11`](https://github.com/bitcoin/bips/blob/master/bip-0011.mediawiki): Multisig outputs are standard since **v0.6.0** ([PR #669](https://github.com/bitcoin/bitcoin/pull/669)).\n-* [`BIP 13`](https://github.com/bitcoin/bips/blob/master/bip-0013.mediawiki): The address format for P2SH addresses has been implemented since **v0.6.0** ([PR #669](https://github.com/bitcoin/bitcoin/pull/669)).\n-* [`BIP 14`](https://github.com/bitcoin/bips/blob/master/bip-0014.mediawiki): The subversion string is being used as User Agent since **v0.6.0** ([PR #669](https://github.com/bitcoin/bitcoin/pull/669)).\n-* [`BIP 16`](https://github.com/bitcoin/bips/blob/master/bip-0016.mediawiki): The pay-to-script-hash evaluation rules have been implemented since **v0.6.0**, and took effect on *April 1st 2012* ([PR #748](https://github.com/bitcoin/bitcoin/pull/748)).\n-* [`BIP 21`](https://github.com/bitcoin/bips/blob/master/bip-0021.mediawiki): The URI format for Bitcoin payments has been implemented since **v0.6.0** ([PR #176](https://github.com/bitcoin/bitcoin/pull/176)).\n-* [`BIP 22`](https://github.com/bitcoin/bips/blob/master/bip-0022.mediawiki): The 'getblocktemplate' (GBT) RPC protocol for mining has been implemented since **v0.7.0** ([PR #936](https://github.com/bitcoin/bitcoin/pull/936)).\n-* [`BIP 23`](https://github.com/bitcoin/bips/blob/master/bip-0023.mediawiki): Some extensions to GBT have been implemented since **v0.10.0rc1**, including longpolling and block proposals ([PR #1816](https://github.com/bitcoin/bitcoin/pull/1816)).\n-* [`BIP 30`](https://github.com/bitcoin/bips/blob/master/bip-0030.mediawiki): The evaluation rules to forbid creating new transactions with the same txid as previous not-fully-spent transactions were implemented since **v0.6.0**, and the rule took effect on *March 15th 2012* ([PR #915](https://github.com/bitcoin/bitcoin/pull/915)).\n-* [`BIP 31`](https://github.com/bitcoin/bips/blob/master/bip-0031.mediawiki): The 'pong' protocol message (and the protocol version bump to 60001) has been implemented since **v0.6.1** ([PR #1081](https://github.com/bitcoin/bitcoin/pull/1081)).\n-* [`BIP 32`](https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki): Hierarchical Deterministic Wallets has been implemented since **v0.13.0** ([PR #8035](https://github.com/bitcoin/bitcoin/pull/8035)).\n-* [`BIP 34`](https://github.com/bitcoin/bips/blob/master/bip-0034.mediawiki): The rule that requires blocks to contain their height (number) in the coinbase input, and the introduction of version 2 blocks has been implemented since **v0.7.0**. The rule took effect for version 2 blocks as of *block 224413* (March 5th 2013), and version 1 blocks are no longer allowed since *block 227931* (March 25th 2013) ([PR #1526](https://github.com/bitcoin/bitcoin/pull/1526)).\n-* [`BIP 35`](https://github.com/bitcoin/bips/blob/master/bip-0035.mediawiki): The 'mempool' protocol message (and the protocol version bump to 60002) has been implemented since **v0.7.0** ([PR #1641](https://github.com/bitcoin/bitcoin/pull/1641)).\n-* [`BIP 37`](https://github.com/bitcoin/bips/blob/master/bip-0037.mediawiki): The bloom filtering for transaction relaying, partial merkle trees for blocks, and the protocol version bump to 70001 (enabling low-bandwidth SPV clients) has been implemented since **v0.8.0** ([PR #1795](https://github.com/bitcoin/bitcoin/pull/1795)).\n-* [`BIP 42`](https://github.com/bitcoin/bips/blob/master/bip-0042.mediawiki): The bug that would have caused the subsidy schedule to resume after block 13440000 was fixed in **v0.9.2** ([PR #3842](https://github.com/bitcoin/bitcoin/pull/3842)).\n-* [`BIP 61`](https://github.com/bitcoin/bips/blob/master/bip-0061.mediawiki): The 'reject' protocol message (and the protocol version bump to 70002) was added in **v0.9.0** ([PR #3185](https://github.com/bitcoin/bitcoin/pull/3185)).\n-* [`BIP 65`](https://github.com/bitcoin/bips/blob/master/bip-0065.mediawiki): The CHECKLOCKTIMEVERIFY softfork was merged in **v0.12.0** ([PR #6351](https://github.com/bitcoin/bitcoin/pull/6351)), and backported to **v0.11.2** and **v0.10.4**. Mempool-only CLTV was added in [PR #6124](https://github.com/bitcoin/bitcoin/pull/6124).\n-* [`BIP 66`](https://github.com/bitcoin/bips/blob/master/bip-0066.mediawiki): The strict DER rules and associated version 3 blocks have been implemented since **v0.10.0** ([PR #5713](https://github.com/bitcoin/bitcoin/pull/5713)).\n-* [`BIP 68`](https://github.com/bitcoin/bips/blob/master/bip-0068.mediawiki): Sequence locks have been implemented as of **v0.12.1**  ([PR #7184](https://github.com/bitcoin/bitcoin/pull/7184)), and have been activated since *block 419328*.\n-* [`BIP 70`](https://github.com/bitcoin/bips/blob/master/bip-0070.mediawiki) [`71`](https://github.com/bitcoin/bips/blob/master/bip-0071.mediawiki) [`72`](https://github.com/bitcoin/bips/blob/master/bip-0072.mediawiki): Payment Protocol support has been available in Bitcoin Core GUI since **v0.9.0** ([PR #5216](https://github.com/bitcoin/bitcoin/pull/5216)).\n-* [`BIP 90`](https://github.com/bitcoin/bips/blob/master/bip-0090.mediawiki): Trigger mechanism for activation of BIPs 34, 65, and 66 has been simplified to block height checks since **v0.14.0** ([PR #8391](https://github.com/bitcoin/bitcoin/pull/8391)).\n-* [`BIP 111`](https://github.com/bitcoin/bips/blob/master/bip-0111.mediawiki): `NODE_BLOOM` service bit added, and enforced for all peer versions as of **v0.13.0** ([PR #6579](https://github.com/bitcoin/bitcoin/pull/6579) and [PR #6641](https://github.com/bitcoin/bitcoin/pull/6641)).\n-* [`BIP 112`](https://github.com/bitcoin/bips/blob/master/bip-0112.mediawiki): The CHECKSEQUENCEVERIFY opcode has been implemented since **v0.12.1** ([PR #7524](https://github.com/bitcoin/bitcoin/pull/7524)) and has been activated since *block 419328*.\n-* [`BIP 113`](https://github.com/bitcoin/bips/blob/master/bip-0113.mediawiki): Median time past lock-time calculations have been implemented since **v0.12.1** ([PR #6566](https://github.com/bitcoin/bitcoin/pull/6566)) and have been activated since *block 419328*.\n-* [`BIP 125`](https://github.com/bitcoin/bips/blob/master/bip-0125.mediawiki): Opt-in full replace-by-fee signaling honoured in mempool and mining as of **v0.12.0** ([PR 6871](https://github.com/bitcoin/bitcoin/pull/6871)).\n-* [`BIP 130`](https://github.com/bitcoin/bips/blob/master/bip-0130.mediawiki): direct headers announcement is negotiated with peer versions `>=70012` as of **v0.12.0** ([PR 6494](https://github.com/bitcoin/bitcoin/pull/6494)).\n-* [`BIP 133`](https://github.com/bitcoin/bips/blob/master/bip-0133.mediawiki): feefilter messages are respected and sent for peer versions `>=70013` as of **v0.13.0** ([PR 7542](https://github.com/bitcoin/bitcoin/pull/7542)).\n-* [`BIP 141`](https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki): Segregated Witness (Consensus Layer) as of **v0.13.0** ([PR 8149](https://github.com/bitcoin/bitcoin/pull/8149)), and defined for mainnet as of **v0.13.1** ([PR 8937](https://github.com/bitcoin/bitcoin/pull/8937)).\n-* [`BIP 143`](https://github.com/bitcoin/bips/blob/master/bip-0143.mediawiki): Transaction Signature Verification for Version 0 Witness Program as of **v0.13.0** ([PR 8149](https://github.com/bitcoin/bitcoin/pull/8149)) and defined for mainnet as of **v0.13.1** ([PR 8937](https://github.com/bitcoin/bitcoin/pull/8937)).\n-* [`BIP 144`](https://github.com/bitcoin/bips/blob/master/bip-0144.mediawiki): Segregated Witness as of **0.13.0** ([PR 8149](https://github.com/bitcoin/bitcoin/pull/8149)).\n-* [`BIP 145`](https://github.com/bitcoin/bips/blob/master/bip-0145.mediawiki): getblocktemplate updates for Segregated Witness as of **v0.13.0** ([PR 8149](https://github.com/bitcoin/bitcoin/pull/8149)).\n-* [`BIP 147`](https://github.com/bitcoin/bips/blob/master/bip-0147.mediawiki): NULLDUMMY softfork as of **v0.13.1** ([PR 8636](https://github.com/bitcoin/bitcoin/pull/8636) and [PR 8937](https://github.com/bitcoin/bitcoin/pull/8937)).\n-* [`BIP 152`](https://github.com/bitcoin/bips/blob/master/bip-0152.mediawiki): Compact block transfer and related optimizations are used as of **v0.13.0** ([PR 8068](https://github.com/bitcoin/bitcoin/pull/8068)).\n+* [`BIP 9`](https://github.com/raven/bips/blob/master/bip-0009.mediawiki): The changes allowing multiple soft-forks to be deployed in parallel have been implemented since **v0.12.1**  ([PR #7575](https://github.com/RavenProject/Ravencoin/pull/7575))\n+* [`BIP 11`](https://github.com/raven/bips/blob/master/bip-0011.mediawiki): Multisig outputs are standard since **v0.6.0** ([PR #669](https://github.com/RavenProject/Ravencoin/pull/669)).\n+* [`BIP 13`](https://github.com/raven/bips/blob/master/bip-0013.mediawiki): The address format for P2SH addresses has been implemented since **v0.6.0** ([PR #669](https://github.com/RavenProject/Ravencoin/pull/669)).\n+* [`BIP 14`](https://github.com/raven/bips/blob/master/bip-0014.mediawiki): The subversion string is being used as User Agent since **v0.6.0** ([PR #669](https://github.com/RavenProject/Ravencoin/pull/669)).\n+* [`BIP 16`](https://github.com/raven/bips/blob/master/bip-0016.mediawiki): The pay-to-script-hash evaluation rules have been implemented since **v0.6.0**, and took effect on *April 1st 2012* ([PR #748](https://github.com/RavenProject/Ravencoin/pull/748)).\n+* [`BIP 21`](https://github.com/raven/bips/blob/master/bip-0021.mediawiki): The URI format for Raven payments has been implemented since **v0.6.0** ([PR #176](https://github.com/RavenProject/Ravencoin/pull/176)).\n+* [`BIP 22`](https://github.com/raven/bips/blob/master/bip-0022.mediawiki): The 'getblocktemplate' (GBT) RPC protocol for mining has been implemented since **v0.7.0** ([PR #936](https://github.com/RavenProject/Ravencoin/pull/936)).\n+* [`BIP 23`](https://github.com/raven/bips/blob/master/bip-0023.mediawiki): Some extensions to GBT have been implemented since **v0.10.0rc1**, including longpolling and block proposals ([PR #1816](https://github.com/RavenProject/Ravencoin/pull/1816)).\n+* [`BIP 30`](https://github.com/raven/bips/blob/master/bip-0030.mediawiki): The evaluation rules to forbid creating new transactions with the same txid as previous not-fully-spent transactions were implemented since **v0.6.0**, and the rule took effect on *March 15th 2012* ([PR #915](https://github.com/RavenProject/Ravencoin/pull/915)).\n+* [`BIP 31`](https://github.com/raven/bips/blob/master/bip-0031.mediawiki): The 'pong' protocol message (and the protocol version bump to 60001) has been implemented since **v0.6.1** ([PR #1081](https://github.com/RavenProject/Ravencoin/pull/1081)).\n+* [`BIP 32`](https://github.com/raven/bips/blob/master/bip-0032.mediawiki): Hierarchical Deterministic Wallets has been implemented since **v0.13.0** ([PR #8035](https://github.com/RavenProject/Ravencoin/pull/8035)).\n+* [`BIP 34`](https://github.com/raven/bips/blob/master/bip-0034.mediawiki): The rule that requires blocks to contain their height (number) in the coinbase input, and the introduction of version 2 blocks has been implemented since **v0.7.0**. The rule took effect for version 2 blocks as of *block 224413* (March 5th 2013), and version 1 blocks are no longer allowed since *block 227931* (March 25th 2013) ([PR #1526](https://github.com/RavenProject/Ravencoin/pull/1526)).\n+* [`BIP 35`](https://github.com/raven/bips/blob/master/bip-0035.mediawiki): The 'mempool' protocol message (and the protocol version bump to 60002) has been implemented since **v0.7.0** ([PR #1641](https://github.com/RavenProject/Ravencoin/pull/1641)).\n+* [`BIP 37`](https://github.com/raven/bips/blob/master/bip-0037.mediawiki): The bloom filtering for transaction relaying, partial merkle trees for blocks, and the protocol version bump to 70001 (enabling low-bandwidth SPV clients) has been implemented since **v0.8.0** ([PR #1795](https://github.com/RavenProject/Ravencoin/pull/1795)).\n+* [`BIP 42`](https://github.com/raven/bips/blob/master/bip-0042.mediawiki): The bug that would have caused the subsidy schedule to resume after block 13440000 was fixed in **v0.9.2** ([PR #3842](https://github.com/RavenProject/Ravencoin/pull/3842)).\n+* [`BIP 61`](https://github.com/raven/bips/blob/master/bip-0061.mediawiki): The 'reject' protocol message (and the protocol version bump to 70002) was added in **v0.9.0** ([PR #3185](https://github.com/RavenProject/Ravencoin/pull/3185)).\n+* [`BIP 65`](https://github.com/raven/bips/blob/master/bip-0065.mediawiki): The CHECKLOCKTIMEVERIFY softfork was merged in **v0.12.0** ([PR #6351](https://github.com/RavenProject/Ravencoin/pull/6351)), and backported to **v0.11.2** and **v0.10.4**. Mempool-only CLTV was added in [PR #6124](https://github.com/RavenProject/Ravencoin/pull/6124).\n+* [`BIP 66`](https://github.com/raven/bips/blob/master/bip-0066.mediawiki): The strict DER rules and associated version 3 blocks have been implemented since **v0.10.0** ([PR #5713](https://github.com/RavenProject/Ravencoin/pull/5713)).\n+* [`BIP 68`](https://github.com/raven/bips/blob/master/bip-0068.mediawiki): Sequence locks have been implemented as of **v0.12.1**  ([PR #7184](https://github.com/RavenProject/Ravencoin/pull/7184)), and have been activated since *block 419328*.\n+* [`BIP 70`](https://github.com/raven/bips/blob/master/bip-0070.mediawiki) [`71`](https://github.com/raven/bips/blob/master/bip-0071.mediawiki) [`72`](https://github.com/raven/bips/blob/master/bip-0072.mediawiki): Payment Protocol support has been available in Raven Core GUI since **v0.9.0** ([PR #5216](https://github.com/RavenProject/Ravencoin/pull/5216)).\n+* [`BIP 90`](https://github.com/raven/bips/blob/master/bip-0090.mediawiki): Trigger mechanism for activation of BIPs 34, 65, and 66 has been simplified to block height checks since **v0.14.0** ([PR #8391](https://github.com/RavenProject/Ravencoin/pull/8391)).\n+* [`BIP 111`](https://github.com/raven/bips/blob/master/bip-0111.mediawiki): `NODE_BLOOM` service bit added, and enforced for all peer versions as of **v0.13.0** ([PR #6579](https://github.com/RavenProject/Ravencoin/pull/6579) and [PR #6641](https://github.com/RavenProject/Ravencoin/pull/6641)).\n+* [`BIP 112`](https://github.com/raven/bips/blob/master/bip-0112.mediawiki): The CHECKSEQUENCEVERIFY opcode has been implemented since **v0.12.1** ([PR #7524](https://github.com/RavenProject/Ravencoin/pull/7524)) and has been activated since *block 419328*.\n+* [`BIP 113`](https://github.com/raven/bips/blob/master/bip-0113.mediawiki): Median time past lock-time calculations have been implemented since **v0.12.1** ([PR #6566](https://github.com/RavenProject/Ravencoin/pull/6566)) and have been activated since *block 419328*.\n+* [`BIP 125`](https://github.com/raven/bips/blob/master/bip-0125.mediawiki): Opt-in full replace-by-fee signaling honoured in mempool and mining as of **v0.12.0** ([PR 6871](https://github.com/RavenProject/Ravencoin/pull/6871)).\n+* [`BIP 130`](https://github.com/raven/bips/blob/master/bip-0130.mediawiki): direct headers announcement is negotiated with peer versions `>=70012` as of **v0.12.0** ([PR 6494](https://github.com/RavenProject/Ravencoin/pull/6494)).\n+* [`BIP 133`](https://github.com/raven/bips/blob/master/bip-0133.mediawiki): feefilter messages are respected and sent for peer versions `>=70013` as of **v0.13.0** ([PR 7542](https://github.com/RavenProject/Ravencoin/pull/7542)).\n+* [`BIP 141`](https://github.com/raven/bips/blob/master/bip-0141.mediawiki): Segregated Witness (Consensus Layer) as of **v0.13.0** ([PR 8149](https://github.com/RavenProject/Ravencoin/pull/8149)), and defined for mainnet as of **v0.13.1** ([PR 8937](https://github.com/RavenProject/Ravencoin/pull/8937)).\n+* [`BIP 143`](https://github.com/raven/bips/blob/master/bip-0143.mediawiki): Transaction Signature Verification for Version 0 Witness Program as of **v0.13.0** ([PR 8149](https://github.com/RavenProject/Ravencoin/pull/8149)) and defined for mainnet as of **v0.13.1** ([PR 8937](https://github.com/RavenProject/Ravencoin/pull/8937)).\n+* [`BIP 144`](https://github.com/raven/bips/blob/master/bip-0144.mediawiki): Segregated Witness as of **0.13.0** ([PR 8149](https://github.com/RavenProject/Ravencoin/pull/8149)).\n+* [`BIP 145`](https://github.com/raven/bips/blob/master/bip-0145.mediawiki): getblocktemplate updates for Segregated Witness as of **v0.13.0** ([PR 8149](https://github.com/RavenProject/Ravencoin/pull/8149)).\n+* [`BIP 147`](https://github.com/raven/bips/blob/master/bip-0147.mediawiki): NULLDUMMY softfork as of **v0.13.1** ([PR 8636](https://github.com/RavenProject/Ravencoin/pull/8636) and [PR 8937](https://github.com/RavenProject/Ravencoin/pull/8937)).\n+* [`BIP 152`](https://github.com/raven/bips/blob/master/bip-0152.mediawiki): Compact block transfer and related optimizations are used as of **v0.13.0** ([PR 8068](https://github.com/RavenProject/Ravencoin/pull/8068))."
      },
      {
        "sha": "90305016d2033be0df79aebf85b196e1965585c5",
        "filename": "doc/build-openbsd.md",
        "status": "modified",
        "additions": 24,
        "deletions": 24,
        "changes": 48,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/doc/build-openbsd.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/doc/build-openbsd.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-openbsd.md?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,8 +1,8 @@\n OpenBSD build guide\n ======================\n-(updated for OpenBSD 6.0)\n+(updated for OpenBSD 6.1)\n \n-This guide describes how to build bitcoind and command-line utilities on OpenBSD.\n+This guide describes how to build ravend and command-line utilities on OpenBSD.\n \n As OpenBSD is most common as a server OS, we will not bother with the GUI.\n \n@@ -18,12 +18,12 @@ pkg_add automake # (select highest version, e.g. 1.15)\n pkg_add python # (select highest version, e.g. 3.5)\n ```\n \n-The default C++ compiler that comes with OpenBSD 5.9 is g++ 4.2. This version is old (from 2007), and is not able to compile the current version of Bitcoin Core, primarily as it has no C++11 support, but even before there were issues. So here we will be installing a newer compiler.\n+See [dependencies.md](dependencies.md) for a complete overview.\n \n GCC\n -------\n \n-You can install a newer version of gcc with:\n+The default C++ compiler that comes with OpenBSD 5.9 is g++ 4.2. This version is old (from 2007), and is not able to compile the current version of Raven Core, primarily as it has no C++11 support, but even before there were issues. So here we will be installing a newer compiler:\n \n ```bash\n pkg_add g++ # (select newest 4.x version, e.g. 4.9.3)\n@@ -35,30 +35,30 @@ This compiler will not overwrite the system compiler, it will be installed as `e\n \n Do not use `pkg_add boost`! The boost version installed thus is compiled using the `g++` compiler not `eg++`, which will result in a conflict between `/usr/local/lib/libestdc++.so.XX.0` and `/usr/lib/libstdc++.so.XX.0`, resulting in a test crash:\n \n-    test_bitcoin:/usr/lib/libstdc++.so.57.0: /usr/local/lib/libestdc++.so.17.0 : WARNING: symbol(_ZN11__gnu_debug17_S_debug_me ssagesE) size mismatch, relink your program\n+    test_raven:/usr/lib/libstdc++.so.57.0: /usr/local/lib/libestdc++.so.17.0 : WARNING: symbol(_ZN11__gnu_debug17_S_debug_me ssagesE) size mismatch, relink your program\n     ...\n     Segmentation fault (core dumped)\n \n-This makes it necessary to build boost, or at least the parts used by Bitcoin Core, manually:\n+This makes it necessary to build boost, or at least the parts used by Raven Core, manually:\n \n ```\n-# Pick some path to install boost to, here we create a directory within the bitcoin directory\n-BITCOIN_ROOT=$(pwd)\n-BOOST_PREFIX=\"${BITCOIN_ROOT}/boost\"\n+# Pick some path to install boost to, here we create a directory within the raven directory\n+RAVEN_ROOT=$(pwd)\n+BOOST_PREFIX=\"${RAVEN_ROOT}/boost\"\n mkdir -p $BOOST_PREFIX\n \n # Fetch the source and verify that it is not tampered with\n-curl -o boost_1_61_0.tar.bz2 http://heanet.dl.sourceforge.net/project/boost/boost/1.61.0/boost_1_61_0.tar.bz2\n-echo 'a547bd06c2fd9a71ba1d169d9cf0339da7ebf4753849a8f7d6fdb8feee99b640  boost_1_61_0.tar.bz2' | sha256 -c\n-# MUST output: (SHA256) boost_1_61_0.tar.bz2: OK\n-tar -xjf boost_1_61_0.tar.bz2\n+curl -o boost_1_64_0.tar.bz2 https://netcologne.dl.sourceforge.net/project/boost/boost/1.64.0/boost_1_64_0.tar.bz2\n+echo '7bcc5caace97baa948931d712ea5f37038dbb1c5d89b43ad4def4ed7cb683332 boost_1_64_0.tar.bz2' | sha256 -c\n+# MUST output: (SHA256) boost_1_64_0.tar.bz2: OK\n+tar -xjf boost_1_64_0.tar.bz2\n \n-# Boost 1.61 needs one small patch for OpenBSD\n-cd boost_1_61_0\n+# Boost 1.64 needs one small patch for OpenBSD\n+cd boost_1_64_0\n # Also here: https://gist.githubusercontent.com/laanwj/bf359281dc319b8ff2e1/raw/92250de8404b97bb99d72ab898f4a8cb35ae1ea3/patch-boost_test_impl_execution_monitor_ipp.patch\n patch -p0 < /usr/ports/devel/boost/patches/patch-boost_test_impl_execution_monitor_ipp\n \n-# Build w/ minimum configuration necessary for bitcoin\n+# Build w/ minimum configuration necessary for raven\n echo 'using gcc : : eg++ : <cxxflags>\"-fvisibility=hidden -fPIC\" <linkflags>\"\" <archiver>\"ar\" <striper>\"strip\"  <ranlib>\"ranlib\" <rc>\"\" : ;' > user-config.jam\n config_opts=\"runtime-link=shared threadapi=pthread threading=multi link=static variant=release --layout=tagged --build-type=complete --user-config=user-config.jam -sNO_BZIP2=1\"\n ./bootstrap.sh --without-icu --with-libraries=chrono,filesystem,program_options,system,thread,test\n@@ -74,9 +74,9 @@ See \"Berkeley DB\" in [build_unix.md](build_unix.md) for instructions on how to b\n You cannot use the BerkeleyDB library from ports, for the same reason as boost above (g++/libstd++ incompatibility).\n \n ```bash\n-# Pick some path to install BDB to, here we create a directory within the bitcoin directory\n-BITCOIN_ROOT=$(pwd)\n-BDB_PREFIX=\"${BITCOIN_ROOT}/db4\"\n+# Pick some path to install BDB to, here we create a directory within the raven directory\n+RAVEN_ROOT=$(pwd)\n+BDB_PREFIX=\"${RAVEN_ROOT}/db4\"\n mkdir -p $BDB_PREFIX\n \n # Fetch the source and verify that it is not tampered with\n@@ -99,7 +99,7 @@ The standard ulimit restrictions in OpenBSD are very strict:\n     data(kbytes)         1572864\n \n This is, unfortunately, no longer enough to compile some `.cpp` files in the project,\n-at least with gcc 4.9.3 (see issue https://github.com/bitcoin/bitcoin/issues/6658).\n+at least with gcc 4.9.3 (see issue https://github.com/RavenProject/Ravencoin/issues/6658).\n If your user is in the `staff` group the limit can be raised with:\n \n     ulimit -d 3000000\n@@ -108,7 +108,7 @@ The change will only affect the current shell and processes spawned by it. To\n make the change system-wide, change `datasize-cur` and `datasize-max` in\n `/etc/login.conf`, and reboot.\n \n-### Building Bitcoin Core\n+### Building Raven Core\n \n **Important**: use `gmake`, not `make`. The non-GNU `make` will exit with a horrible error.\n \n@@ -163,9 +163,9 @@ gmake\n However, this does not appear to work. Compilation succeeds, but link fails\n with many 'local symbol discarded' errors:\n \n-    local symbol 150: discarded in section `.text._ZN10tinyformat6detail14FormatIterator6finishEv' from libbitcoin_util.a(libbitcoin_util_a-random.o)\n-    local symbol 151: discarded in section `.text._ZN10tinyformat6detail14FormatIterator21streamStateFromFormatERSoRjPKcii' from libbitcoin_util.a(libbitcoin_util_a-random.o)\n-    local symbol 152: discarded in section `.text._ZN10tinyformat6detail12convertToIntIA13_cLb0EE6invokeERA13_Kc' from libbitcoin_util.a(libbitcoin_util_a-random.o)\n+    local symbol 150: discarded in section `.text._ZN10tinyformat6detail14FormatIterator6finishEv' from libraven_util.a(libraven_util_a-random.o)\n+    local symbol 151: discarded in section `.text._ZN10tinyformat6detail14FormatIterator21streamStateFromFormatERSoRjPKcii' from libraven_util.a(libraven_util_a-random.o)\n+    local symbol 152: discarded in section `.text._ZN10tinyformat6detail12convertToIntIA13_cLb0EE6invokeERA13_Kc' from libraven_util.a(libraven_util_a-random.o)\n \n According to similar reported errors this is a binutils (ld) issue in 2.15, the\n version installed by OpenBSD 5.7:"
      },
      {
        "sha": "ac565c7e5feacab59de3e27fd948195b8974bb9e",
        "filename": "doc/build-osx.md",
        "status": "modified",
        "additions": 20,
        "deletions": 18,
        "changes": 38,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/doc/build-osx.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/doc/build-osx.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-osx.md?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -16,25 +16,27 @@ Then install [Homebrew](https://brew.sh).\n Dependencies\n ----------------------\n \n-    brew install automake berkeley-db4 libtool boost --c++11 miniupnpc openssl pkg-config protobuf qt libevent\n+    brew install automake berkeley-db4 libtool boost --c++11 miniupnpc openssl pkg-config protobuf python3 qt libevent\n+\n+See [dependencies.md](dependencies.md) for a complete overview.\n \n If you want to build the disk image with `make deploy` (.dmg / optional), you need RSVG\n \n     brew install librsvg\n \n NOTE: Building with Qt4 is still supported, however, could result in a broken UI. Building with Qt5 is recommended.\n \n-Build Bitcoin Core\n+Build Raven Core\n ------------------------\n \n-1. Clone the bitcoin source code and cd into `bitcoin`\n+1. Clone the raven source code and cd into `raven`\n \n-        git clone https://github.com/bitcoin/bitcoin\n-        cd bitcoin\n+        git clone https://github.com/RavenProject/Ravencoin\n+        cd raven\n \n-2.  Build bitcoin-core:\n+2.  Build raven-core:\n \n-    Configure and build the headless bitcoin binaries as well as the GUI (if Qt is found).\n+    Configure and build the headless raven binaries as well as the GUI (if Qt is found).\n \n     You can disable the GUI build by passing `--without-gui` to configure.\n \n@@ -53,37 +55,37 @@ Build Bitcoin Core\n Running\n -------\n \n-Bitcoin Core is now available at `./src/bitcoind`\n+Raven Core is now available at `./src/ravend`\n \n Before running, it's recommended you create an RPC configuration file.\n \n-    echo -e \"rpcuser=bitcoinrpc\\nrpcpassword=$(xxd -l 16 -p /dev/urandom)\" > \"/Users/${USER}/Library/Application Support/Bitcoin/bitcoin.conf\"\n+    echo -e \"rpcuser=ravenrpc\\nrpcpassword=$(xxd -l 16 -p /dev/urandom)\" > \"/Users/${USER}/Library/Application Support/Raven/raven.conf\"\n \n-    chmod 600 \"/Users/${USER}/Library/Application Support/Bitcoin/bitcoin.conf\"\n+    chmod 600 \"/Users/${USER}/Library/Application Support/Raven/raven.conf\"\n \n-The first time you run bitcoind, it will start downloading the blockchain. This process could take several hours.\n+The first time you run ravend, it will start downloading the blockchain. This process could take several hours.\n \n You can monitor the download process by looking at the debug.log file:\n \n-    tail -f $HOME/Library/Application\\ Support/Bitcoin/debug.log\n+    tail -f $HOME/Library/Application\\ Support/Raven/debug.log\n \n Other commands:\n -------\n \n-    ./src/bitcoind -daemon # Starts the bitcoin daemon.\n-    ./src/bitcoin-cli --help # Outputs a list of command-line options.\n-    ./src/bitcoin-cli help # Outputs a list of RPC commands when the daemon is running.\n+    ./src/ravend -daemon # Starts the raven daemon.\n+    ./src/raven-cli --help # Outputs a list of command-line options.\n+    ./src/raven-cli help # Outputs a list of RPC commands when the daemon is running.\n \n Using Qt Creator as IDE\n ------------------------\n-You can use Qt Creator as an IDE, for bitcoin development.\n+You can use Qt Creator as an IDE, for raven development.\n Download and install the community edition of [Qt Creator](https://www.qt.io/download/).\n Uncheck everything except Qt Creator during the installation process.\n \n 1. Make sure you installed everything through Homebrew mentioned above\n 2. Do a proper ./configure --enable-debug\n 3. In Qt Creator do \"New Project\" -> Import Project -> Import Existing Project\n-4. Enter \"bitcoin-qt\" as project name, enter src/qt as location\n+4. Enter \"raven-qt\" as project name, enter src/qt as location\n 5. Leave the file selection as it is\n 6. Confirm the \"summary page\"\n 7. In the \"Projects\" tab select \"Manage Kits...\"\n@@ -96,4 +98,4 @@ Notes\n \n * Tested on OS X 10.8 through 10.12 on 64-bit Intel processors only.\n \n-* Building with downloaded Qt binaries is not officially supported. See the notes in [#7714](https://github.com/bitcoin/bitcoin/issues/7714)\n+* Building with downloaded Qt binaries is not officially supported. See the notes in [#7714](https://github.com/RavenProject/Ravencoin/issues/7714)"
      },
      {
        "sha": "6e3d56ff90158e65e5efddbc6e700e86f7d27bff",
        "filename": "doc/build-unix.md",
        "status": "modified",
        "additions": 28,
        "deletions": 28,
        "changes": 56,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/doc/build-unix.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/doc/build-unix.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-unix.md?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,12 +1,12 @@\n UNIX BUILD NOTES\n ====================\n-Some notes on how to build Bitcoin Core in Unix.\n+Some notes on how to build Raven Core in Unix.\n \n (for OpenBSD specific instructions, see [build-openbsd.md](build-openbsd.md))\n \n Note\n ---------------------\n-Always use absolute paths to configure and compile bitcoin and the dependencies,\n+Always use absolute paths to configure and compile raven and the dependencies,\n for example, when specifying the path of the dependency:\n \n \t../dist/configure --enable-cxx --disable-shared --with-pic --prefix=$BDB_PREFIX\n@@ -24,7 +24,7 @@ make\n make install # optional\n ```\n \n-This will build bitcoin-qt as well if the dependencies are met.\n+This will build raven-qt as well if the dependencies are met.\n \n Dependencies\n ---------------------\n@@ -49,13 +49,13 @@ Optional dependencies:\n  univalue    | Utility          | JSON parsing and encoding (bundled version will be used unless --with-system-univalue passed to configure)\n  libzmq3     | ZMQ notification | Optional, allows generating ZMQ notifications (requires ZMQ version >= 4.x)\n \n-For the versions used in the release, see [release-process.md](release-process.md) under *Fetch and build inputs*.\n+For the versions used, see [dependencies.md](dependencies.md)\n \n Memory Requirements\n --------------------\n \n C++ compilers are memory-hungry. It is recommended to have at least 1.5 GB of\n-memory available when compiling Bitcoin Core. On systems with less, gcc can be\n+memory available when compiling Raven Core. On systems with less, gcc can be\n tuned to conserve memory with additional CXXFLAGS:\n \n \n@@ -65,7 +65,7 @@ Dependency Build Instructions: Ubuntu & Debian\n ----------------------------------------------\n Build requirements:\n \n-    sudo apt-get install build-essential libtool autotools-dev automake pkg-config libssl-dev libevent-dev bsdmainutils\n+    sudo apt-get install build-essential libtool autotools-dev automake pkg-config libssl-dev libevent-dev bsdmainutils python3\n \n Options when installing required Boost library files:\n \n@@ -81,11 +81,11 @@ install necessary parts of boost:\n \n BerkeleyDB is required for the wallet.\n \n-**For Ubuntu only:** db4.8 packages are available [here](https://launchpad.net/~bitcoin/+archive/bitcoin).\n+**For Ubuntu only:** db4.8 packages are available [here](https://launchpad.net/~raven/+archive/raven).\n You can add the repository and install using the following commands:\n \n     sudo apt-get install software-properties-common\n-    sudo add-apt-repository ppa:bitcoin/bitcoin\n+    sudo add-apt-repository ppa:raven/raven\n     sudo apt-get update\n     sudo apt-get install libdb4.8-dev libdb4.8++-dev\n \n@@ -94,7 +94,7 @@ BerkeleyDB 5.1 or later, which break binary wallet compatibility with the distri\n are based on BerkeleyDB 4.8. If you do not care about wallet compatibility,\n pass `--with-incompatible-bdb` to configure.\n \n-See the section \"Disable-wallet mode\" to build Bitcoin Core without wallet.\n+See the section \"Disable-wallet mode\" to build Raven Core without wallet.\n \n Optional (see --with-miniupnpc and --enable-upnp-default):\n \n@@ -107,7 +107,7 @@ ZMQ dependencies (provides ZMQ API 4.x):\n Dependencies for the GUI: Ubuntu & Debian\n -----------------------------------------\n \n-If you want to build Bitcoin-Qt, make sure that the required packages for Qt development\n+If you want to build Raven-Qt, make sure that the required packages for Qt development\n are installed. Either Qt 5 or Qt 4 are necessary to build the GUI.\n If both Qt 4 and Qt 5 are installed, Qt 5 will be used. Pass `--with-gui=qt4` to configure to choose Qt4.\n To build without GUI pass `--without-gui`.\n@@ -124,14 +124,14 @@ libqrencode (optional) can be installed with:\n \n     sudo apt-get install libqrencode-dev\n \n-Once these are installed, they will be found by configure and a bitcoin-qt executable will be\n+Once these are installed, they will be found by configure and a raven-qt executable will be\n built by default.\n \n Dependency Build Instructions: Fedora\n -------------------------------------\n Build requirements:\n \n-    sudo dnf install gcc-c++ libtool make autoconf automake openssl-devel libevent-devel boost-devel libdb4-devel libdb4-cxx-devel\n+    sudo dnf install gcc-c++ libtool make autoconf automake openssl-devel libevent-devel boost-devel libdb4-devel libdb4-cxx-devel python3\n \n Optional:\n \n@@ -147,7 +147,7 @@ libqrencode (optional) can be installed with:\n \n Notes\n -----\n-The release is built with GCC and then \"strip bitcoind\" to strip the debug\n+The release is built with GCC and then \"strip ravend\" to strip the debug\n symbols, which reduces the executable size by about 90%.\n \n \n@@ -168,10 +168,10 @@ Berkeley DB\n It is recommended to use Berkeley DB 4.8. If you have to build it yourself:\n \n ```bash\n-BITCOIN_ROOT=$(pwd)\n+RAVEN_ROOT=$(pwd)\n \n-# Pick some path to install BDB to, here we create a directory within the bitcoin directory\n-BDB_PREFIX=\"${BITCOIN_ROOT}/db4\"\n+# Pick some path to install BDB to, here we create a directory within the raven directory\n+BDB_PREFIX=\"${RAVEN_ROOT}/db4\"\n mkdir -p $BDB_PREFIX\n \n # Fetch the source and verify that it is not tampered with\n@@ -186,8 +186,8 @@ cd db-4.8.30.NC/build_unix/\n ../dist/configure --enable-cxx --disable-shared --with-pic --prefix=$BDB_PREFIX\n make install\n \n-# Configure Bitcoin Core to use our own-built instance of BDB\n-cd $BITCOIN_ROOT\n+# Configure Raven Core to use our own-built instance of BDB\n+cd $RAVEN_ROOT\n ./autogen.sh\n ./configure LDFLAGS=\"-L${BDB_PREFIX}/lib/\" CPPFLAGS=\"-I${BDB_PREFIX}/include/\" # (other args...)\n ```\n@@ -205,7 +205,7 @@ If you need to build Boost yourself:\n \n Security\n --------\n-To help make your bitcoin installation more secure by making certain attacks impossible to\n+To help make your raven installation more secure by making certain attacks impossible to\n exploit even if a vulnerability is found, binaries are hardened by default.\n This can be disabled with:\n \n@@ -229,7 +229,7 @@ Hardening enables the following features:\n \n     To test that you have built PIE executable, install scanelf, part of paxutils, and use:\n \n-    \tscanelf -e ./bitcoin\n+    \tscanelf -e ./raven\n \n     The output should contain:\n \n@@ -238,13 +238,13 @@ Hardening enables the following features:\n \n * Non-executable Stack\n     If the stack is executable then trivial stack based buffer overflow exploits are possible if\n-    vulnerable buffers are found. By default, bitcoin should be built with a non-executable stack\n+    vulnerable buffers are found. By default, raven should be built with a non-executable stack\n     but if one of the libraries it uses asks for an executable stack or someone makes a mistake\n     and uses a compiler extension which requires an executable stack, it will silently build an\n     executable without the non-executable stack protection.\n \n     To verify that the stack is non-executable after compiling use:\n-    `scanelf -e ./bitcoin`\n+    `scanelf -e ./raven`\n \n     the output should contain:\n \tSTK/REL/PTL\n@@ -254,7 +254,7 @@ Hardening enables the following features:\n \n Disable-wallet mode\n --------------------\n-When the intention is to run only a P2P node without a wallet, bitcoin may be compiled in\n+When the intention is to run only a P2P node without a wallet, raven may be compiled in\n disable-wallet mode with:\n \n     ./configure --disable-wallet\n@@ -276,17 +276,17 @@ Setup and Build Example: Arch Linux\n This example lists the steps necessary to setup and build a command line only, non-wallet distribution of the latest changes on Arch Linux:\n \n     pacman -S git base-devel boost libevent python\n-    git clone https://github.com/bitcoin/bitcoin.git\n-    cd bitcoin/\n+    git clone https://github.com/RavenProject/Ravencoin.git\n+    cd raven/\n     ./autogen.sh\n     ./configure --disable-wallet --without-gui --without-miniupnpc\n     make check\n \n Note:\n Enabling wallet support requires either compiling against a Berkeley DB newer than 4.8 (package `db`) using `--with-incompatible-bdb`,\n or building and depending on a local version of Berkeley DB 4.8. The readily available Arch Linux packages are currently built using\n-`--with-incompatible-bdb` according to the [PKGBUILD](https://projects.archlinux.org/svntogit/community.git/tree/bitcoin/trunk/PKGBUILD).\n-As mentioned above, when maintaining portability of the wallet between the standard Bitcoin Core distributions and independently built\n+`--with-incompatible-bdb` according to the [PKGBUILD](https://projects.archlinux.org/svntogit/community.git/tree/raven/trunk/PKGBUILD).\n+As mentioned above, when maintaining portability of the wallet between the standard Raven Core distributions and independently built\n node software is desired, Berkeley DB 4.8 must be used.\n \n \n@@ -334,7 +334,7 @@ For the wallet (optional):\n This will give a warning \"configure: WARNING: Found Berkeley DB other\n than 4.8; wallets opened by this build will not be portable!\", but as FreeBSD never\n had a binary release, this may not matter. If backwards compatibility\n-with 4.8-built Bitcoin Core is needed follow the steps under \"Berkeley DB\" above.\n+with 4.8-built Raven Core is needed follow the steps under \"Berkeley DB\" above.\n \n Then build using:\n "
      },
      {
        "sha": "689408e0e2f6513e6a9dc7b301a873f6675a3716",
        "filename": "doc/build-windows.md",
        "status": "modified",
        "additions": 20,
        "deletions": 5,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/doc/build-windows.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/doc/build-windows.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-windows.md?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,10 +1,14 @@\n WINDOWS BUILD NOTES\n ====================\n \n-Below are some notes on how to build Bitcoin Core for Windows.\n+Below are some notes on how to build Raven Core for Windows.\n \n Most developers use cross-compilation from Ubuntu to build executables for\n-Windows. This is also used to build the release binaries.\n+Windows. Cross-compilation is also used to build the release binaries.\n+\n+Currently only building on Ubuntu Trusty 14.04 or Ubuntu Zesty 17.04 or later is supported.\n+Building on Ubuntu Xenial 16.04 is known to be broken, see extensive discussion in issue [8732](https://github.com/RavenProject/Ravencoin/issues/8732).\n+While it may be possible to do so with work arounds, it's potentially dangerous and not recommended.\n \n While there are potentially a number of ways to build on Windows (for example using msys / mingw-w64),\n using the Windows Subsystem For Linux is the most straightforward. If you are building with\n@@ -59,6 +63,15 @@ A host toolchain (`build-essential`) is necessary because some dependency\n packages (such as `protobuf`) need to build host utilities that are used in the\n build process.\n \n+See also: [dependencies.md](dependencies.md).\n+\n+If you're building on Ubuntu 17.04 or later, run these two commands, selecting the 'posix' variant for both,\n+to work around issues with mingw-w64. See issue [8732](https://github.com/RavenProject/Ravencoin/issues/8732) for more information.\n+```\n+sudo update-alternatives --config x86_64-w64-mingw32-g++\n+sudo update-alternatives --config x86_64-w64-mingw32-gcc\n+```\n+\n ## Building for 64-bit Windows\n \n To build executables for Windows 64-bit, install the following dependencies:\n@@ -67,6 +80,7 @@ To build executables for Windows 64-bit, install the following dependencies:\n \n Then build using:\n \n+    PATH=$(echo \"$PATH\" | sed -e 's/:\\/mnt.*//g') # strip out problematic Windows %PATH% imported var\n     cd depends\n     make HOST=x86_64-w64-mingw32\n     cd ..\n@@ -78,10 +92,11 @@ Then build using:\n \n To build executables for Windows 32-bit, install the following dependencies:\n \n-    sudo apt-get install g++-mingw-w64-i686 mingw-w64-i686-dev \n+    sudo apt-get install g++-mingw-w64-i686 mingw-w64-i686-dev\n \n Then build using:\n \n+    PATH=$(echo \"$PATH\" | sed -e 's/:\\/mnt.*//g') # strip out problematic Windows %PATH% imported var\n     cd depends\n     make HOST=i686-w64-mingw32\n     cd ..\n@@ -99,6 +114,6 @@ Installation\n After building using the Windows subsystem it can be useful to copy the compiled\n executables to a directory on the windows drive in the same directory structure\n as they appear in the release `.zip` archive. This can be done in the following\n-way. This will install to `c:\\workspace\\bitcoin`, for example:\n+way. This will install to `c:\\workspace\\raven`, for example:\n \n-    make install DESTDIR=/mnt/c/workspace/bitcoin\n+    make install DESTDIR=/mnt/c/workspace/raven"
      },
      {
        "sha": "0815c1735ad372b95eeffc1ee53466a88cf106e1",
        "filename": "doc/dependencies.md",
        "status": "added",
        "additions": 31,
        "deletions": 0,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/doc/dependencies.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/doc/dependencies.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/dependencies.md?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -0,0 +1,31 @@\n+Dependencies\n+============\n+\n+These are the dependencies currently used by Raven Core. You can find instructions for installing them in the `build-*.md` file for your platform.\n+\n+| Dependency | Version used | Minimum required | CVEs | Shared | [Bundled Qt library](https://doc.qt.io/qt-5/configure-options.html) |\n+| --- | --- | --- | --- | --- | --- |\n+| Berkeley DB | [4.8.30](http://www.oracle.com/technetwork/database/database-technologies/berkeleydb/downloads/index.html) | 4.8.x | No |  |  |\n+| Boost | [1.64.0](http://www.boost.org/users/download/) | [1.47.0](https://github.com/RavenProject/Ravencoin/pull/8920) | No |  |  |\n+| ccache | [3.3.4](https://ccache.samba.org/download.html) |  | No |  |  |\n+| Clang |  | [3.3+](http://llvm.org/releases/download.html) (C++11 support) |  |  |  |\n+| D-Bus | [1.10.18](https://cgit.freedesktop.org/dbus/dbus/tree/NEWS?h=dbus-1.10) |  | No | Yes |  |\n+| Expat | [2.2.1](https://libexpat.github.io/) |  | No | Yes |  |\n+| fontconfig | [2.12.1](https://www.freedesktop.org/software/fontconfig/release/) |  | No | Yes |  |\n+| FreeType | [2.7.1](http://download.savannah.gnu.org/releases/freetype) |  | No |  |  |\n+| GCC |  | [4.7+](https://gcc.gnu.org/) |  |  |  |\n+| HarfBuzz-NG |  |  |  |  |  |\n+| libevent | [2.1.8-stable](https://github.com/libevent/libevent/releases) | 2.0.22 | No |  |  |\n+| libjpeg |  |  |  |  | [Yes](https://github.com/RavenProject/Ravencoin/blob/master/depends/packages/qt.mk#L75) |\n+| libpng |  |  |  |  | [Yes](https://github.com/RavenProject/Ravencoin/blob/master/depends/packages/qt.mk#L74) |\n+| MiniUPnPc | [2.0.20170509](http://miniupnp.free.fr/files) |  | No |  |  |\n+| OpenSSL | [1.0.1k](https://www.openssl.org/source) |  | Yes |  |  |\n+| PCRE |  |  |  |  | [Yes](https://github.com/RavenProject/Ravencoin/blob/master/depends/packages/qt.mk#L76) |\n+| protobuf | [2.6.3](https://github.com/google/protobuf/releases) |  | No |  |  |\n+| Python (tests) |  | [3.4](https://www.python.org/downloads) |  |  |  |\n+| qrencode | [3.4.4](https://fukuchi.org/works/qrencode) |  | No |  |  |\n+| Qt | [5.7.1](https://download.qt.io/official_releases/qt/) | 4.7+ | No |  |  |\n+| XCB |  |  |  |  | [Yes](https://github.com/RavenProject/Ravencoin/blob/master/depends/packages/qt.mk#L94) (Linux only) |\n+| xkbcommon |  |  |  |  | [Yes](https://github.com/RavenProject/Ravencoin/blob/master/depends/packages/qt.mk#L93) (Linux only) |\n+| ZeroMQ | [4.1.5](https://github.com/zeromq/libzmq/releases) |  | No |  |  |\n+| zlib | [1.2.11](http://zlib.net/) |  |  |  | No |"
      },
      {
        "sha": "7410834bd94ab047fa418dff8b2955ad3bd13b1e",
        "filename": "doc/developer-notes.md",
        "status": "modified",
        "additions": 62,
        "deletions": 31,
        "changes": 93,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/doc/developer-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/doc/developer-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/developer-notes.md?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -4,7 +4,7 @@ Developer Notes\n Various coding styles have been used during the history of the codebase,\n and the result is not very consistent. However, we're now trying to converge to\n a single style, which is specified below. When writing patches, favor the new\n-style over attempting to mimick the surrounding style, except for move-only\n+style over attempting to mimic the surrounding style, except for move-only\n commits.\n \n Do not submit patches solely to modify the style of existing code.\n@@ -28,15 +28,17 @@ tool to clean up patches automatically before submission.\n required when doing so would need changes to significant pieces of existing\n code.\n   - Variable and namespace names are all lowercase, and may use `_` to\n-    separate words.\n+    separate words (snake_case).\n     - Class member variables have a `m_` prefix.\n     - Global variables have a `g_` prefix.\n   - Constant names are all uppercase, and use `_` to separate words.\n-  - Class names, function names and method names are CamelCase. Do not prefix\n-    class names with `C`.\n+  - Class names, function names and method names are UpperCamelCase\n+    (PascalCase). Do not prefix class names with `C`.\n \n - **Miscellaneous**\n   - `++i` is preferred over `i++`.\n+  - `nullptr` is preferred over `NULL` or `(void*)0`.\n+  - `static_assert` is preferred over `assert` where possible. Generally; compile-time checking is preferred over run-time checking.\n \n Block style example:\n ```c++\n@@ -151,7 +153,7 @@ to see it.\n \n **testnet and regtest modes**\n \n-Run with the -testnet option to run with \"play bitcoins\" on the test network, if you\n+Run with the -testnet option to run with \"play ravens\" on the test network, if you\n are testing multi-machine code that needs to operate across the internet.\n \n If you are testing something that can run on one machine, run with the -regtest option.\n@@ -160,7 +162,7 @@ that run in -regtest mode.\n \n **DEBUG_LOCKORDER**\n \n-Bitcoin Core is a multithreaded application, and deadlocks or other multithreading bugs\n+Raven Core is a multithreaded application, and deadlocks or other multithreading bugs\n can be very difficult to track down. Compiling with -DDEBUG_LOCKORDER (configure\n CXXFLAGS=\"-DDEBUG_LOCKORDER -g\") inserts run-time checks to keep track of which locks\n are held, and adds warnings to the debug.log file if inconsistencies are detected.\n@@ -195,7 +197,7 @@ Threads\n \n - ThreadMapPort : Universal plug-and-play startup/shutdown\n \n-- ThreadSocketHandler : Sends/Receives data from peers on port 8333.\n+- ThreadSocketHandler : Sends/Receives data from peers on port 8767.\n \n - ThreadOpenAddedConnections : Opens network connections to added nodes.\n \n@@ -207,9 +209,9 @@ Threads\n \n - ThreadFlushWalletDB : Close the wallet.dat file if it hasn't been used in 500ms.\n \n-- ThreadRPCServer : Remote procedure call handler, listens on port 8332 for connections and services them.\n+- ThreadRPCServer : Remote procedure call handler, listens on port 8766 for connections and services them.\n \n-- BitcoinMiner : Generates bitcoins (if wallet is enabled).\n+- RavenMiner : Generates ravens (if wallet is enabled).\n \n - Shutdown : Does an orderly shutdown of everything.\n \n@@ -219,7 +221,7 @@ Ignoring IDE/editor files\n In closed-source environments in which everyone uses the same IDE it is common\n to add temporary files it produces to the project-wide `.gitignore` file.\n \n-However, in open source software such as Bitcoin Core, where everyone uses\n+However, in open source software such as Raven Core, where everyone uses\n their own editors/IDE/tools, it is less common. Only you know what files your\n editor produces and this may change from version to version. The canonical way\n to do this is thus to create your local gitignore. Add this to `~/.gitconfig`:\n@@ -249,9 +251,9 @@ Development guidelines\n ============================\n \n A few non-style-related recommendations for developers, as well as points to\n-pay attention to for reviewers of Bitcoin Core code.\n+pay attention to for reviewers of Raven Core code.\n \n-General Bitcoin Core\n+General Raven Core\n ----------------------\n \n - New features should be exposed on RPC first, then can be made available in the GUI\n@@ -275,7 +277,7 @@ Wallet\n \n   - *Rationale*: In RPC code that conditionally uses the wallet (such as\n     `validateaddress`) it is easy to forget that global pointer `pwalletMain`\n-    can be NULL. See `test/functional/disablewallet.py` for functional tests\n+    can be nullptr. See `test/functional/disablewallet.py` for functional tests\n     exercising the API with `-disablewallet`\n \n - Include `db_cxx.h` (BerkeleyDB header) only when `ENABLE_WALLET` is set\n@@ -330,6 +332,12 @@ C++ data structures\n   - *Rationale*: Ensure determinism by avoiding accidental use of uninitialized\n     values. Also, static analyzers balk about this.\n \n+- By default, declare single-argument constructors `explicit`.\n+\n+  - *Rationale*: This is a precaution to avoid unintended conversions that might\n+    arise when single-argument constructors are used as implicit conversion\n+    functions.\n+\n - Use explicitly signed or unsigned `char`s, or even better `uint8_t` and\n   `int8_t`. Do not use bare `char` unless it is to pass to a third-party API.\n   This type can be signed or unsigned depending on the architecture, which can\n@@ -361,7 +369,7 @@ Strings and formatting\n \n - For `strprintf`, `LogPrint`, `LogPrintf` formatting characters don't need size specifiers\n \n-  - *Rationale*: Bitcoin Core uses tinyformat, which is type safe. Leave them out to avoid confusion\n+  - *Rationale*: Raven Core uses tinyformat, which is type safe. Leave them out to avoid confusion\n \n Variable names\n --------------\n@@ -467,12 +475,12 @@ Subtrees\n \n Several parts of the repository are subtrees of software maintained elsewhere.\n \n-Some of these are maintained by active developers of Bitcoin Core, in which case changes should probably go\n+Some of these are maintained by active developers of Raven Core, in which case changes should probably go\n directly upstream without being PRed directly against the project.  They will be merged back in the next\n subtree merge.\n \n Others are external projects without a tight relationship with our project.  Changes to these should also\n-be sent upstream but bugfixes may also be prudent to PR against Bitcoin Core so that they can be integrated\n+be sent upstream but bugfixes may also be prudent to PR against Raven Core so that they can be integrated\n quickly.  Cosmetic changes should be purely taken upstream.\n \n There is a tool in contrib/devtools/git-subtree-check.sh to check a subtree directory for consistency with\n@@ -484,10 +492,10 @@ Current subtrees include:\n   - Upstream at https://github.com/google/leveldb ; Maintained by Google, but open important PRs to Core to avoid delay\n \n - src/libsecp256k1\n-  - Upstream at https://github.com/bitcoin-core/secp256k1/ ; actively maintaned by Core contributors.\n+  - Upstream at https://github.com/raven-core/secp256k1/ ; actively maintaned by Core contributors.\n \n - src/crypto/ctaes\n-  - Upstream at https://github.com/bitcoin-core/ctaes ; actively maintained by Core contributors.\n+  - Upstream at https://github.com/raven-core/ctaes ; actively maintained by Core contributors.\n \n - src/univalue\n   - Upstream at https://github.com/jgarzik/univalue ; report important PRs to Core to avoid delay.\n@@ -535,12 +543,32 @@ Git and GitHub tips\n \n         [remote \"upstream-pull\"]\n                 fetch = +refs/pull/*:refs/remotes/upstream-pull/*\n-                url = git@github.com:bitcoin/bitcoin.git\n+                url = git@github.com:raven/raven.git\n \n   This will add an `upstream-pull` remote to your git repository, which can be fetched using `git fetch --all`\n   or `git fetch upstream-pull`. Afterwards, you can use `upstream-pull/NUMBER/head` in arguments to `git show`,\n   `git checkout` and anywhere a commit id would be acceptable to see the changes from pull request NUMBER.\n \n+Scripted diffs\n+--------------\n+\n+For reformatting and refactoring commits where the changes can be easily automated using a bash script, we use\n+scripted-diff commits. The bash script is included in the commit message and our Travis CI job checks that\n+the result of the script is identical to the commit. This aids reviewers since they can verify that the script\n+does exactly what it's supposed to do. It is also helpful for rebasing (since the same script can just be re-run\n+on the new master commit).\n+\n+To create a scripted-diff:\n+\n+- start the commit message with `scripted-diff:` (and then a description of the diff on the same line)\n+- in the commit message include the bash script between lines containing just the following text:\n+    - `-BEGIN VERIFY SCRIPT-`\n+    - `-END VERIFY SCRIPT-`\n+\n+The scripted-diff is verified by the tool `contrib/devtools/commit-script-check.sh`\n+\n+Commit `bb81e173` is an example of a scripted-diff.\n+\n RPC interface guidelines\n --------------------------\n \n@@ -561,29 +589,27 @@ A few guidelines for introducing and reviewing new RPC interfaces:\n     which is error prone, and it is easy to get things such as escaping wrong.\n     JSON already supports nested data structures, no need to re-invent the wheel.\n \n-  - *Exception*: AmountToValue can parse amounts as string. This was introduced because many JSON\n+  - *Exception*: AmountFromValue can parse amounts as string. This was introduced because many JSON\n     parsers and formatters hard-code handling decimal numbers as floating point\n     values, resulting in potential loss of precision. This is unacceptable for\n-    monetary values. **Always** use `AmountToValue` and `ValueToAmount` when\n+    monetary values. **Always** use `AmountFromValue` and `ValueFromAmount` when\n     inputting or outputting monetary values. The only exceptions to this are\n     `prioritisetransaction` and `getblocktemplate` because their interface\n     is specified as-is in BIP22.\n \n - Missing arguments and 'null' should be treated the same: as default values. If there is no\n-  default value, both cases should fail in the same way.\n+  default value, both cases should fail in the same way. The easiest way to follow this\n+  guideline is detect unspecified arguments with `params[x].isNull()` instead of\n+  `params.size() <= x`. The former returns true if the argument is either null or missing,\n+  while the latter returns true if is missing, and false if it is null.\n \n   - *Rationale*: Avoids surprises when switching to name-based arguments. Missing name-based arguments\n   are passed as 'null'.\n \n-  - *Exception*: Many legacy exceptions to this exist, one of the worst ones is\n-    `getbalance` which follows a completely different code path based on the\n-    number of arguments. We are still in the process of cleaning these up. Do not introduce\n-    new ones.\n-\n - Try not to overload methods on argument type. E.g. don't make `getblock(true)` and `getblock(\"hash\")`\n   do different things.\n \n-  - *Rationale*: This is impossible to use with `bitcoin-cli`, and can be surprising to users.\n+  - *Rationale*: This is impossible to use with `raven-cli`, and can be surprising to users.\n \n   - *Exception*: Some RPC calls can take both an `int` and `bool`, most notably when a bool was switched\n     to a multi-value, or due to other historical reasons. **Always** have false map to 0 and\n@@ -602,14 +628,19 @@ A few guidelines for introducing and reviewing new RPC interfaces:\n \n - Add every non-string RPC argument `(method, idx, name)` to the table `vRPCConvertParams` in `rpc/client.cpp`.\n \n-  - *Rationale*: `bitcoin-cli` and the GUI debug console use this table to determine how to\n+  - *Rationale*: `raven-cli` and the GUI debug console use this table to determine how to\n     convert a plaintext command line to JSON. If the types don't match, the method can be unusable\n     from there.\n \n - A RPC method must either be a wallet method or a non-wallet method. Do not\n-  introduce new methods such as `getinfo` and `signrawtransaction` that differ\n-  in behavior based on presence of a wallet.\n+  introduce new methods such as `signrawtransaction` that differ in behavior\n+  based on presence of a wallet.\n \n   - *Rationale*: as well as complicating the implementation and interfering\n     with the introduction of multi-wallet, wallet and non-wallet code should be\n     separated to avoid introducing circular dependencies between code units.\n+\n+- Try to make the RPC response a JSON object.\n+\n+  - *Rationale*: If a RPC response is not a JSON object then it is harder to avoid API breakage if\n+    new data in the response is needed."
      },
      {
        "sha": "e798731fe59899656344ec1b421d2d78ce2e4087",
        "filename": "doc/dnsseed-policy.md",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/doc/dnsseed-policy.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/doc/dnsseed-policy.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/dnsseed-policy.md?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,12 +1,12 @@\n Expectations for DNS Seed operators\n ====================================\n \n-Bitcoin Core attempts to minimize the level of trust in DNS seeds,\n+Raven Core attempts to minimize the level of trust in DNS seeds,\n but DNS seeds still pose a small amount of risk for the network.\n As such, DNS seeds must be run by entities which have some minimum\n-level of trust within the Bitcoin community.\n+level of trust within the Raven community.\n \n-Other implementations of Bitcoin software may also use the same\n+Other implementations of Raven software may also use the same\n seeds and may be more exposed. In light of this exposure, this\n document establishes some basic expectations for operating dnsseeds.\n \n@@ -16,7 +16,7 @@ and not sell or transfer control of the DNS seed. Any hosting services\n contracted by the operator are equally expected to uphold these expectations.\n \n 1. The DNS seed results must consist exclusively of fairly selected and\n-functioning Bitcoin nodes from the public network to the best of the\n+functioning Raven nodes from the public network to the best of the\n operator's understanding and capability.\n \n 2. For the avoidance of doubt, the results may be randomized but must not\n@@ -26,7 +26,7 @@ urgent technical necessity and disclosed.\n 3. The results may not be served with a DNS TTL of less than one minute.\n \n 4. Any logging of DNS queries should be only that which is necessary\n-for the operation of the service or urgent health of the Bitcoin\n+for the operation of the service or urgent health of the Raven\n network and must not be retained longer than necessary nor disclosed\n to any third party.\n \n@@ -42,13 +42,13 @@ details of their operating practices.\n related to the DNS seed operation.\n \n If these expectations cannot be satisfied the operator should\n-discontinue providing services and contact the active Bitcoin\n+discontinue providing services and contact the active Raven\n Core development team as well as posting on\n-[bitcoin-dev](https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev).\n+[raven-dev](https://lists.linuxfoundation.org/mailman/listinfo/raven-dev).\n \n Behavior outside of these expectations may be reasonable in some\n situations but should be discussed in public in advance.\n \n See also\n ----------\n-- [bitcoin-seeder](https://github.com/sipa/bitcoin-seeder) is a reference implementation of a DNS seed.\n+- [raven-seeder](https://github.com/sipa/raven-seeder) is a reference implementation of a DNS seed."
      },
      {
        "sha": "6180dc5f265d4cbc1c31f31fda2e2b812539959b",
        "filename": "doc/files.md",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/doc/files.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/doc/files.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/files.md?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,20 +1,21 @@\n \n * banlist.dat: stores the IPs/Subnets of banned nodes\n-* bitcoin.conf: contains configuration settings for bitcoind or bitcoin-qt\n-* bitcoind.pid: stores the process id of bitcoind while running\n+* raven.conf: contains configuration settings for ravend or raven-qt\n+* ravend.pid: stores the process id of ravend while running\n * blocks/blk000??.dat: block data (custom, 128 MiB per file); since 0.8.0\n * blocks/rev000??.dat; block undo data (custom); since 0.8.0 (format changed since pre-0.8)\n * blocks/index/*; block index (LevelDB); since 0.8.0\n * chainstate/*; block chain state database (LevelDB); since 0.8.0\n * database/*: BDB database environment; only used for wallet since 0.8.0\n * db.log: wallet database log file\n-* debug.log: contains debug information and general logging generated by bitcoind or bitcoin-qt\n+* debug.log: contains debug information and general logging generated by ravend or raven-qt\n * fee_estimates.dat: stores statistics used to estimate minimum transaction fees and priorities required for confirmation; since 0.10.0\n * mempool.dat: dump of the mempool's transactions; since 0.14.0.\n * peers.dat: peer IP address database (custom format); since 0.7.0\n * wallet.dat: personal wallet (BDB) with keys and transactions\n * .cookie: session RPC authentication cookie (written at start when cookie authentication is used, deleted on shutdown): since 0.12.0\n * onion_private_key: cached Tor hidden service private key for `-listenonion`: since 0.12.0\n+* guisettings.ini.bak: backup of former GUI settings after `-resetguisettings` is used\n \n Only used in pre-0.8.0\n ---------------------"
      },
      {
        "sha": "6fd5effbfb25206da588ebc2282c3daa741ae0f7",
        "filename": "doc/fuzzing.md",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/doc/fuzzing.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/doc/fuzzing.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/fuzzing.md?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,7 +1,7 @@\n-Fuzz-testing Bitcoin Core\n+Fuzz-testing Raven Core\n ==========================\n \n-A special test harness `test_bitcoin_fuzzy` is provided to provide an easy\n+A special test harness `test_raven_fuzzy` is provided to provide an easy\n entry point for fuzzers and the like. In this document we'll describe how to\n use it with AFL.\n \n@@ -20,13 +20,13 @@ export AFLPATH=$PWD\n Instrumentation\n ----------------\n \n-To build Bitcoin Core using AFL instrumentation (this assumes that the\n+To build Raven Core using AFL instrumentation (this assumes that the\n `AFLPATH` was set as above):\n ```\n ./configure --disable-ccache --disable-shared --enable-tests CC=${AFLPATH}/afl-gcc CXX=${AFLPATH}/afl-g++\n export AFL_HARDEN=1\n cd src/\n-make test/test_bitcoin_fuzzy\n+make test/test_raven_fuzzy\n ```\n We disable ccache because we don't want to pollute the ccache with instrumented\n objects, and similarly don't want to use non-instrumented cached objects linked\n@@ -35,7 +35,7 @@ in.\n The fuzzing can be sped up significantly (~200x) by using `afl-clang-fast` and\n `afl-clang-fast++` in place of `afl-gcc` and `afl-g++` when compiling. When\n compiling using `afl-clang-fast`/`afl-clang-fast++` the resulting\n-`test_bitcoin_fuzzy` binary will be instrumented in such a way that the AFL\n+`test_raven_fuzzy` binary will be instrumented in such a way that the AFL\n features \"persistent mode\" and \"deferred forkserver\" can be used. See\n https://github.com/mcarpenter/afl/tree/master/llvm_mode for details.\n \n@@ -55,7 +55,7 @@ AFLOUT=$PWD/outputs\n \n Example inputs are available from:\n \n-- https://download.visucore.com/bitcoin/bitcoin_fuzzy_in.tar.xz\n+- https://download.visucore.com/raven/raven_fuzzy_in.tar.xz\n - http://strateman.ninja/fuzzing.tar.xz\n \n Extract these (or other starting inputs) into the `inputs` directory before starting fuzzing.\n@@ -65,7 +65,7 @@ Fuzzing\n \n To start the actual fuzzing use:\n ```\n-$AFLPATH/afl-fuzz -i ${AFLIN} -o ${AFLOUT} -m52 -- test/test_bitcoin_fuzzy\n+$AFLPATH/afl-fuzz -i ${AFLIN} -o ${AFLOUT} -m52 -- test/test_raven_fuzzy\n ```\n \n You may have to change a few kernel parameters to test optimally - `afl-fuzz`"
      },
      {
        "sha": "9ccb9bd257ea61de6aaab4db1e9c2cd73aabe5a1",
        "filename": "doc/gitian-building.md",
        "status": "modified",
        "additions": 1,
        "deletions": 477,
        "changes": 478,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/doc/gitian-building.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/doc/gitian-building.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building.md?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,480 +1,4 @@\n Gitian building\n ================\n \n-*Setup instructions for a Gitian build of Bitcoin Core using a Debian VM or physical system.*\n-\n-Gitian is the deterministic build process that is used to build the Bitcoin\n-Core executables. It provides a way to be reasonably sure that the\n-executables are really built from the source on GitHub. It also makes sure that\n-the same, tested dependencies are used and statically built into the executable.\n-\n-Multiple developers build the source code by following a specific descriptor\n-(\"recipe\"), cryptographically sign the result, and upload the resulting signature.\n-These results are compared and only if they match, the build is accepted and uploaded\n-to bitcoin.org.\n-\n-More independent Gitian builders are needed, which is why this guide exists.\n-It is preferred you follow these steps yourself instead of using someone else's\n-VM image to avoid 'contaminating' the build.\n-\n-Table of Contents\n-------------------\n-\n-- [Create a new VirtualBox VM](#create-a-new-virtualbox-vm)\n-- [Connecting to the VM](#connecting-to-the-vm)\n-- [Setting up Debian for Gitian building](#setting-up-debian-for-gitian-building)\n-- [Installing Gitian](#installing-gitian)\n-- [Setting up the Gitian image](#setting-up-the-gitian-image)\n-- [Getting and building the inputs](#getting-and-building-the-inputs)\n-- [Building Bitcoin Core](#building-bitcoin-core)\n-- [Building an alternative repository](#building-an-alternative-repository)\n-- [Signing externally](#signing-externally)\n-- [Uploading signatures](#uploading-signatures)\n-\n-Preparing the Gitian builder host\n----------------------------------\n-\n-The first step is to prepare the host environment that will be used to perform the Gitian builds.\n-This guide explains how to set up the environment, and how to start the builds.\n-\n-Debian Linux was chosen as the host distribution because it has a lightweight install (in contrast to Ubuntu) and is readily available.\n-Any kind of virtualization can be used, for example:\n-- [VirtualBox](https://www.virtualbox.org/) (covered by this guide)\n-- [KVM](http://www.linux-kvm.org/page/Main_Page)\n-- [LXC](https://linuxcontainers.org/), see also [Gitian host docker container](https://github.com/gdm85/tenku/tree/master/docker/gitian-bitcoin-host/README.md).\n-\n-You can also install Gitian on actual hardware instead of using virtualization.\n-\n-Create a new VirtualBox VM\n----------------------------\n-In the VirtualBox GUI click \"New\" and choose the following parameters in the wizard:\n-\n-![](gitian-building/create_new_vm.png)\n-\n-- Type: Linux, Debian (64-bit)\n-\n-![](gitian-building/create_vm_memsize.png)\n-\n-- Memory Size: at least 3000MB, anything less and the build might not complete.\n-\n-![](gitian-building/create_vm_hard_disk.png)\n-\n-- Hard Disk: Create a virtual hard disk now\n-\n-![](gitian-building/create_vm_hard_disk_file_type.png)\n-\n-- Hard Disk file type: Use the default, VDI (VirtualBox Disk Image)\n-\n-![](gitian-building/create_vm_storage_physical_hard_disk.png)\n-\n-- Storage on physical hard disk: Dynamically Allocated\n-\n-![](gitian-building/create_vm_file_location_size.png)\n-\n-- File location and size: at least 40GB; as low as 20GB *may* be possible, but better to err on the safe side\n-- Click `Create`\n-\n-After creating the VM, we need to configure it.\n-\n-- Click the `Settings` button, then go to the `Network` tab. Adapter 1 should be attached to `NAT`.\n-\n-![](gitian-building/network_settings.png)\n-\n-- Click `Advanced`, then `Port Forwarding`. We want to set up a port through which we can reach the VM to get files in and out.\n-- Create a new rule by clicking the plus icon.\n-\n-![](gitian-building/port_forwarding_rules.png)\n-\n-- Set up the new rule the following way:\n-  - Name: `SSH`\n-  - Protocol: `TCP`\n-  - Leave Host IP empty\n-  - Host Port: `22222`\n-  - Leave Guest IP empty\n-  - Guest Port: `22`\n-\n-- Click `Ok` twice to save.\n-\n-Get the [Debian 8.x net installer](http://cdimage.debian.org/mirror/cdimage/archive/8.5.0/amd64/iso-cd/debian-8.5.0-amd64-netinst.iso) (a more recent minor version should also work, see also [Debian Network installation](https://www.debian.org/CD/netinst/)).\n-This DVD image can be [validated](https://www.debian.org/CD/verify) using a SHA256 hashing tool, for example on\n-Unixy OSes by entering the following in a terminal:\n-\n-    echo \"ad4e8c27c561ad8248d5ebc1d36eb172f884057bfeb2c22ead823f59fa8c3dff  debian-8.5.0-amd64-netinst.iso\" | sha256sum -c\n-    # (must return OK)\n-\n-Then start the VM. On the first launch you will be asked for a CD or DVD image. Choose the downloaded ISO.\n-\n-![](gitian-building/select_startup_disk.png)\n-\n-Installing Debian\n-------------------\n-\n-This section will explain how to install Debian on the newly created VM.\n-\n-- Choose the non-graphical installer.  We do not need the graphical environment; it will only increase installation time and disk usage.\n-\n-![](gitian-building/debian_install_1_boot_menu.png)\n-\n-**Note**: Navigating in the Debian installer:\n-To keep a setting at the default and proceed, just press `Enter`.\n-To select a different button, press `Tab`.\n-\n-- Choose locale and keyboard settings (doesn't matter, you can just go with the defaults or select your own information)\n-\n-![](gitian-building/debian_install_2_select_a_language.png)\n-![](gitian-building/debian_install_3_select_location.png)\n-![](gitian-building/debian_install_4_configure_keyboard.png)\n-\n-- The VM will detect network settings using DHCP, this should all proceed automatically\n-- Configure the network:\n-  - Hostname `debian`.\n-  - Leave domain name empty.\n-\n-![](gitian-building/debian_install_5_configure_the_network.png)\n-![](gitian-building/debian_install_6_domain_name.png)\n-\n-- Choose a root password and enter it twice (remember it for later)\n-\n-![](gitian-building/debian_install_6a_set_up_root_password.png)\n-\n-- Name the new user `debian` (the full name doesn't matter, you can leave it empty)\n-- Set the account username as `debian`\n-\n-![](gitian-building/debian_install_7_set_up_user_fullname.png)\n-![](gitian-building/debian_install_8_set_up_username.png)\n-\n-- Choose a user password and enter it twice (remember it for later)\n-\n-![](gitian-building/debian_install_9_user_password.png)\n-\n-- The installer will set up the clock using a time server; this process should be automatic\n-- Set up the clock: choose a time zone (depends on the locale settings that you picked earlier; specifics don't matter)  \n-\n-![](gitian-building/debian_install_10_configure_clock.png)\n-\n-- Disk setup\n-  - Partitioning method: Guided - Use the entire disk\n-\n-![](gitian-building/debian_install_11_partition_disks.png)\n-\n-  - Select disk to partition: SCSI1 (0,0,0)\n-\n-![](gitian-building/debian_install_12_choose_disk.png)\n-\n-  - Partition Disks -> *All files in one partition*\n-\n-![](gitian-building/all_files_in_one_partition.png)\n-\n-  - Finish partitioning and write changes to disk -> *Yes* (`Tab`, `Enter` to select the `Yes` button)\n-\n-![](gitian-building/debian_install_14_finish.png)\n-![](gitian-building/debian_install_15_write_changes.png)\n-\n-- The base system will be installed, this will take a minute or so\n-- Choose a mirror (any will do)\n-\n-![](gitian-building/debian_install_16_choose_a_mirror.png)\n-\n-- Enter proxy information (unless you are on an intranet, leave this empty)\n-\n-![](gitian-building/debian_install_18_proxy_settings.png)\n-\n-- Wait a bit while 'Select and install software' runs\n-- Participate in popularity contest -> *No*\n-- Choose software to install. We need just the base system.\n-- Make sure only 'SSH server' and 'Standard System Utilities' are checked\n-- Uncheck 'Debian Desktop Environment' and 'Print Server'\n-\n-![](gitian-building/debian_install_19_software_selection.png)\n-\n-- Install the GRUB boot loader to the master boot record? -> Yes\n-\n-![](gitian-building/debian_install_20_install_grub.png)\n-\n-- Device for boot loader installation -> ata-VBOX_HARDDISK\n-\n-![](gitian-building/debian_install_21_install_grub_bootloader.png)\n-\n-- Installation Complete -> *Continue*\n-- After installation, the VM will reboot and you will have a working Debian VM. Congratulations!\n-\n-![](gitian-building/debian_install_22_finish_installation.png)\n-\n-\n-After Installation\n--------------------\n-The next step in the guide involves logging in as root via SSH.\n-SSH login for root users is disabled by default, so we'll enable that now.\n-\n-Login to the VM using username `root` and the root password you chose earlier.\n-You'll be presented with a screen similar to this.\n-\n-![](gitian-building/debian_root_login.png)\n-\n-Type:\n-\n-```\n-sed -i 's/^PermitRootLogin.*/PermitRootLogin yes/' /etc/ssh/sshd_config\n-```\n-and press enter. Then,\n-```\n-/etc/init.d/ssh restart\n-```\n-and enter to restart SSH. Logout by typing 'logout' and pressing 'enter'.\n-\n-Connecting to the VM\n-----------------------\n-\n-After the VM has booted you can connect to it using SSH, and files can be copied from and to the VM using a SFTP utility.\n-Connect to `localhost`, port `22222` (or the port configured when installing the VM).\n-On Windows you can use [putty](http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html) and [WinSCP](http://winscp.net/eng/index.php).\n-\n-For example, to connect as `root` from a Linux command prompt use\n-\n-    $ ssh root@localhost -p 22222\n-    The authenticity of host '[localhost]:22222 ([127.0.0.1]:22222)' can't be established.\n-    RSA key fingerprint is ae:f5:c8:9f:17:c6:c7:1b:c2:1b:12:31:1d:bb:d0:c7.\n-    Are you sure you want to continue connecting (yes/no)? yes\n-    Warning: Permanently added '[localhost]:22222' (RSA) to the list of known hosts.\n-    root@localhost's password: (enter root password configured during install)\n-\n-    The programs included with the Debian GNU/Linux system are free software;\n-    the exact distribution terms for each program are described in the\n-    individual files in /usr/share/doc/*/copyright.\n-\n-    Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent\n-    permitted by applicable law.\n-    root@debian:~#\n-\n-Replace `root` with `debian` to log in as user.\n-\n-Setting up Debian for Gitian building\n---------------------------------------\n-\n-In this section we will be setting up the Debian installation for Gitian building.\n-\n-First we need to log in as `root` to set up dependencies and make sure that our\n-user can use the sudo command. Type/paste the following in the terminal:\n-\n-```bash\n-apt-get install git ruby sudo apt-cacher-ng qemu-utils debootstrap lxc python-cheetah parted kpartx bridge-utils make ubuntu-archive-keyring curl\n-adduser debian sudo\n-```\n-\n-Then set up LXC and the rest with the following, which is a complex jumble of settings and workarounds:\n-\n-```bash\n-# the version of lxc-start in Debian needs to run as root, so make sure\n-# that the build script can execute it without providing a password\n-echo \"%sudo ALL=NOPASSWD: /usr/bin/lxc-start\" > /etc/sudoers.d/gitian-lxc\n-echo \"%sudo ALL=NOPASSWD: /usr/bin/lxc-execute\" >> /etc/sudoers.d/gitian-lxc\n-# make /etc/rc.local script that sets up bridge between guest and host\n-echo '#!/bin/sh -e' > /etc/rc.local\n-echo 'brctl addbr br0' >> /etc/rc.local\n-echo 'ifconfig br0 10.0.3.2/24 up' >> /etc/rc.local\n-echo 'iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE' >> /etc/rc.local\n-echo 'echo 1 > /proc/sys/net/ipv4/ip_forward' >> /etc/rc.local\n-echo 'exit 0' >> /etc/rc.local\n-# make sure that USE_LXC is always set when logging in as debian,\n-# and configure LXC IP addresses\n-echo 'export USE_LXC=1' >> /home/debian/.profile\n-echo 'export GITIAN_HOST_IP=10.0.3.2' >> /home/debian/.profile\n-echo 'export LXC_GUEST_IP=10.0.3.5' >> /home/debian/.profile\n-reboot\n-```\n-\n-At the end the VM is rebooted to make sure that the changes take effect. The steps in this\n-section only need to be performed once.\n-\n-Installing Gitian\n-------------------\n-\n-Re-login as the user `debian` that was created during installation.\n-The rest of the steps in this guide will be performed as that user.\n-\n-There is no `python-vm-builder` package in Debian, so we need to install it from source ourselves,\n-\n-```bash\n-wget http://archive.ubuntu.com/ubuntu/pool/universe/v/vm-builder/vm-builder_0.12.4+bzr494.orig.tar.gz\n-echo \"76cbf8c52c391160b2641e7120dbade5afded713afaa6032f733a261f13e6a8e  vm-builder_0.12.4+bzr494.orig.tar.gz\" | sha256sum -c\n-# (verification -- must return OK)\n-tar -zxvf vm-builder_0.12.4+bzr494.orig.tar.gz\n-cd vm-builder-0.12.4+bzr494\n-sudo python setup.py install\n-cd ..\n-```\n-\n-**Note**: When sudo asks for a password, enter the password for the user *debian* not for *root*.\n-\n-Clone the git repositories for bitcoin and Gitian.\n-\n-```bash\n-git clone https://github.com/devrandom/gitian-builder.git\n-git clone https://github.com/bitcoin/bitcoin\n-git clone https://github.com/bitcoin-core/gitian.sigs.git\n-```\n-\n-Setting up the Gitian image\n--------------------------\n-\n-Gitian needs a virtual image of the operating system to build in.\n-Currently this is Ubuntu Trusty x86_64.\n-This image will be copied and used every time that a build is started to\n-make sure that the build is deterministic.\n-Creating the image will take a while, but only has to be done once.\n-\n-Execute the following as user `debian`:\n-\n-```bash\n-cd gitian-builder\n-bin/make-base-vm --lxc --arch amd64 --suite trusty\n-```\n-\n-There will be a lot of warnings printed during the build of the image. These can be ignored.\n-\n-**Note**: When sudo asks for a password, enter the password for the user *debian* not for *root*.\n-\n-Getting and building the inputs\n---------------------------------\n-\n-At this point you have two options, you can either use the automated script (found in [contrib/gitian-build.sh](/contrib/gitian-build.sh)) or you could manually do everything by following this guide. If you're using the automated script, then run it with the \"--setup\" command. Afterwards, run it with the \"--build\" command (example: \"contrib/gitian-build.sh -b signer 0.13.0\"). Otherwise ignore this.\n-\n-Follow the instructions in [doc/release-process.md](release-process.md#fetch-and-create-inputs-first-time-or-when-dependency-versions-change)\n-in the bitcoin repository under 'Fetch and create inputs' to install sources which require\n-manual intervention. Also optionally follow the next step: 'Seed the Gitian sources cache\n-and offline git repositories' which will fetch the remaining files required for building\n-offline.\n-\n-Building Bitcoin Core\n-----------------\n-\n-To build Bitcoin Core (for Linux, OS X and Windows) just follow the steps under 'perform\n-Gitian builds' in [doc/release-process.md](release-process.md#perform-gitian-builds) in the bitcoin repository.\n-\n-This may take some time as it will build all the dependencies needed for each descriptor.\n-These dependencies will be cached after a successful build to avoid rebuilding them when possible.\n-\n-At any time you can check the package installation and build progress with\n-\n-```bash\n-tail -f var/install.log\n-tail -f var/build.log\n-```\n-\n-Output from `gbuild` will look something like\n-\n-    Initialized empty Git repository in /home/debian/gitian-builder/inputs/bitcoin/.git/\n-    remote: Counting objects: 57959, done.\n-    remote: Total 57959 (delta 0), reused 0 (delta 0), pack-reused 57958\n-    Receiving objects: 100% (57959/57959), 53.76 MiB | 484.00 KiB/s, done.\n-    Resolving deltas: 100% (41590/41590), done.\n-    From https://github.com/bitcoin/bitcoin\n-    ... (new tags, new branch etc)\n-    --- Building for trusty amd64 ---\n-    Stopping target if it is up\n-    Making a new image copy\n-    stdin: is not a tty\n-    Starting target\n-    Checking if target is up\n-    Preparing build environment\n-    Updating apt-get repository (log in var/install.log)\n-    Installing additional packages (log in var/install.log)\n-    Grabbing package manifest\n-    stdin: is not a tty\n-    Creating build script (var/build-script)\n-    lxc-start: Connection refused - inotify event with no name (mask 32768)\n-    Running build script (log in var/build.log)\n-\n-Building an alternative repository\n------------------------------------\n-\n-If you want to do a test build of a pull on GitHub it can be useful to point\n-the Gitian builder at an alternative repository, using the same descriptors\n-and inputs.\n-\n-For example:\n-```bash\n-URL=https://github.com/laanwj/bitcoin.git\n-COMMIT=2014_03_windows_unicode_path\n-./bin/gbuild --commit bitcoin=${COMMIT} --url bitcoin=${URL} ../bitcoin/contrib/gitian-descriptors/gitian-linux.yml\n-./bin/gbuild --commit bitcoin=${COMMIT} --url bitcoin=${URL} ../bitcoin/contrib/gitian-descriptors/gitian-win.yml\n-./bin/gbuild --commit bitcoin=${COMMIT} --url bitcoin=${URL} ../bitcoin/contrib/gitian-descriptors/gitian-osx.yml\n-```\n-\n-Building fully offline\n------------------------\n-\n-For building fully offline including attaching signatures to unsigned builds, the detached-sigs repository\n-and the bitcoin git repository with the desired tag must both be available locally, and then gbuild must be\n-told where to find them. It also requires an apt-cacher-ng which is fully-populated but set to offline mode, or\n-manually disabling gitian-builder's use of apt-get to update the VM build environment.\n-\n-To configure apt-cacher-ng as an offline cacher, you will need to first populate its cache with the relevant\n-files. You must additionally patch target-bin/bootstrap-fixup to set its apt sources to something other than\n-plain archive.ubuntu.com: us.archive.ubuntu.com works.\n-\n-So, if you use LXC:\n-\n-```bash\n-export PATH=\"$PATH\":/path/to/gitian-builder/libexec\n-export USE_LXC=1\n-cd /path/to/gitian-builder\n-./libexec/make-clean-vm --suite trusty --arch amd64\n-\n-LXC_ARCH=amd64 LXC_SUITE=trusty on-target -u root apt-get update\n-LXC_ARCH=amd64 LXC_SUITE=trusty on-target -u root \\\n-  -e DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends -y install \\\n-  $( sed -ne '/^packages:/,/[^-] .*/ {/^- .*/{s/\"//g;s/- //;p}}' ../bitcoin/contrib/gitian-descriptors/*|sort|uniq )\n-LXC_ARCH=amd64 LXC_SUITE=trusty on-target -u root apt-get -q -y purge grub\n-LXC_ARCH=amd64 LXC_SUITE=trusty on-target -u root -e DEBIAN_FRONTEND=noninteractive apt-get -y dist-upgrade\n-```\n-\n-And then set offline mode for apt-cacher-ng:\n-\n-```\n-/etc/apt-cacher-ng/acng.conf\n-[...]\n-Offlinemode: 1\n-[...]\n-\n-service apt-cacher-ng restart\n-```\n-\n-Then when building, override the remote URLs that gbuild would otherwise pull from the Gitian descriptors::\n-```bash\n-\n-cd /some/root/path/\n-git clone https://github.com/bitcoin-core/bitcoin-detached-sigs.git\n-\n-BTCPATH=/some/root/path/bitcoin\n-SIGPATH=/some/root/path/bitcoin-detached-sigs\n-\n-./bin/gbuild --url bitcoin=${BTCPATH},signature=${SIGPATH} ../bitcoin/contrib/gitian-descriptors/gitian-win-signer.yml\n-```\n-\n-Signing externally\n--------------------\n-\n-If you want to do the PGP signing on another device, that's also possible; just define `SIGNER` as mentioned\n-and follow the steps in the build process as normal.\n-\n-    gpg: skipped \"laanwj\": secret key not available\n-\n-When you execute `gsign` you will get an error from GPG, which can be ignored. Copy the resulting `.assert` files\n-in `gitian.sigs` to your signing machine and do\n-\n-```bash\n-    gpg --detach-sign ${VERSION}-linux/${SIGNER}/bitcoin-linux-build.assert\n-    gpg --detach-sign ${VERSION}-win/${SIGNER}/bitcoin-win-build.assert\n-    gpg --detach-sign ${VERSION}-osx-unsigned/${SIGNER}/bitcoin-osx-build.assert\n-```\n-\n-This will create the `.sig` files that can be committed together with the `.assert` files to assert your\n-Gitian build.\n-\n-Uploading signatures\n----------------------\n-\n-After building and signing you can push your signatures (both the `.assert` and `.assert.sig` files) to the\n-[bitcoin-core/gitian.sigs](https://github.com/bitcoin-core/gitian.sigs/) repository, or if that's not possible create a pull\n-request. You can also mail the files to Wladimir (laanwj@gmail.com) and he will commit them.\n+This file was moved to [the Raven Core documentation repository](https://github.com/raven-core/docs/blob/master/gitian-building.md) at [https://github.com/raven-core/docs](https://github.com/raven-core/docs)."
      },
      {
        "sha": "8cbb0d8adc1deda1c7c4023611b65521e054ff69",
        "filename": "doc/gitian-building/all_files_in_one_partition.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/gitian-building/all_files_in_one_partition.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/gitian-building/all_files_in_one_partition.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/all_files_in_one_partition.png?ref=ddeacfcff563b602b8833287a34dfbee340e5bec"
      },
      {
        "sha": "dd22428e176b874afb2f5b9d1b018592fb0175d0",
        "filename": "doc/gitian-building/create_new_vm.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/gitian-building/create_new_vm.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/gitian-building/create_new_vm.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/create_new_vm.png?ref=ddeacfcff563b602b8833287a34dfbee340e5bec"
      },
      {
        "sha": "5f77206b6fa8f9f0f1bbd6d02819d67bf18327ad",
        "filename": "doc/gitian-building/create_vm_file_location_size.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/gitian-building/create_vm_file_location_size.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/gitian-building/create_vm_file_location_size.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/create_vm_file_location_size.png?ref=ddeacfcff563b602b8833287a34dfbee340e5bec"
      },
      {
        "sha": "8e29816fab9e7c8f97338ed43f0893f655134a5f",
        "filename": "doc/gitian-building/create_vm_hard_disk.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/gitian-building/create_vm_hard_disk.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/gitian-building/create_vm_hard_disk.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/create_vm_hard_disk.png?ref=ddeacfcff563b602b8833287a34dfbee340e5bec"
      },
      {
        "sha": "a157211cf5baf909149e73fddfc2556305f4b123",
        "filename": "doc/gitian-building/create_vm_hard_disk_file_type.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/gitian-building/create_vm_hard_disk_file_type.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/gitian-building/create_vm_hard_disk_file_type.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/create_vm_hard_disk_file_type.png?ref=ddeacfcff563b602b8833287a34dfbee340e5bec"
      },
      {
        "sha": "6f42cda73f3cabb02e39ae0309ac67f419a168c7",
        "filename": "doc/gitian-building/create_vm_memsize.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/gitian-building/create_vm_memsize.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/gitian-building/create_vm_memsize.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/create_vm_memsize.png?ref=ddeacfcff563b602b8833287a34dfbee340e5bec"
      },
      {
        "sha": "cee16a6c63b4f2dcd592ae8c9cdc02f278fbad81",
        "filename": "doc/gitian-building/create_vm_storage_physical_hard_disk.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/gitian-building/create_vm_storage_physical_hard_disk.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/gitian-building/create_vm_storage_physical_hard_disk.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/create_vm_storage_physical_hard_disk.png?ref=ddeacfcff563b602b8833287a34dfbee340e5bec"
      },
      {
        "sha": "7cda038ae47f97ddfaa905478599cafc6572dd1f",
        "filename": "doc/gitian-building/debian_install_10_configure_clock.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/gitian-building/debian_install_10_configure_clock.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/gitian-building/debian_install_10_configure_clock.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_10_configure_clock.png?ref=ddeacfcff563b602b8833287a34dfbee340e5bec"
      },
      {
        "sha": "2a648c517f429fb937275d5444a58f4830e8eae4",
        "filename": "doc/gitian-building/debian_install_11_partition_disks.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/gitian-building/debian_install_11_partition_disks.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/gitian-building/debian_install_11_partition_disks.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_11_partition_disks.png?ref=ddeacfcff563b602b8833287a34dfbee340e5bec"
      },
      {
        "sha": "0f3acc498e3e9cc04692a9c557a8eecb5029dc25",
        "filename": "doc/gitian-building/debian_install_12_choose_disk.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/gitian-building/debian_install_12_choose_disk.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/gitian-building/debian_install_12_choose_disk.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_12_choose_disk.png?ref=ddeacfcff563b602b8833287a34dfbee340e5bec"
      },
      {
        "sha": "c8ef0b37ad6232f87593ea448beaba089b568a91",
        "filename": "doc/gitian-building/debian_install_14_finish.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/gitian-building/debian_install_14_finish.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/gitian-building/debian_install_14_finish.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_14_finish.png?ref=ddeacfcff563b602b8833287a34dfbee340e5bec"
      },
      {
        "sha": "d8de00dec68c826485034c698079e5808f7dadfd",
        "filename": "doc/gitian-building/debian_install_15_write_changes.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/gitian-building/debian_install_15_write_changes.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/gitian-building/debian_install_15_write_changes.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_15_write_changes.png?ref=ddeacfcff563b602b8833287a34dfbee340e5bec"
      },
      {
        "sha": "0bd985b38c113ed9bbbe03808ace284476680edc",
        "filename": "doc/gitian-building/debian_install_16_choose_a_mirror.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/gitian-building/debian_install_16_choose_a_mirror.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/gitian-building/debian_install_16_choose_a_mirror.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_16_choose_a_mirror.png?ref=ddeacfcff563b602b8833287a34dfbee340e5bec"
      },
      {
        "sha": "2c19919f64b62d89883dc8e1308f179978b95ca4",
        "filename": "doc/gitian-building/debian_install_18_proxy_settings.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/gitian-building/debian_install_18_proxy_settings.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/gitian-building/debian_install_18_proxy_settings.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_18_proxy_settings.png?ref=ddeacfcff563b602b8833287a34dfbee340e5bec"
      },
      {
        "sha": "5430456b14f098d9e3561653352b826d19a2c38a",
        "filename": "doc/gitian-building/debian_install_19_software_selection.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/gitian-building/debian_install_19_software_selection.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/gitian-building/debian_install_19_software_selection.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_19_software_selection.png?ref=ddeacfcff563b602b8833287a34dfbee340e5bec"
      },
      {
        "sha": "216502e1c6eb6930ce60c1a36e7476e6fb8781d9",
        "filename": "doc/gitian-building/debian_install_1_boot_menu.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/gitian-building/debian_install_1_boot_menu.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/gitian-building/debian_install_1_boot_menu.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_1_boot_menu.png?ref=ddeacfcff563b602b8833287a34dfbee340e5bec"
      },
      {
        "sha": "d853c1587188c5fd4ede94ab00f9d8b6731674ac",
        "filename": "doc/gitian-building/debian_install_20_install_grub.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/gitian-building/debian_install_20_install_grub.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/gitian-building/debian_install_20_install_grub.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_20_install_grub.png?ref=ddeacfcff563b602b8833287a34dfbee340e5bec"
      },
      {
        "sha": "493ab806a673f5c8ee47db0bb5de6af0d5042b03",
        "filename": "doc/gitian-building/debian_install_21_install_grub_bootloader.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/gitian-building/debian_install_21_install_grub_bootloader.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/gitian-building/debian_install_21_install_grub_bootloader.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_21_install_grub_bootloader.png?ref=ddeacfcff563b602b8833287a34dfbee340e5bec"
      },
      {
        "sha": "7c4445585bc9982a5015959dba70d73b01885e08",
        "filename": "doc/gitian-building/debian_install_22_finish_installation.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/gitian-building/debian_install_22_finish_installation.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/gitian-building/debian_install_22_finish_installation.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_22_finish_installation.png?ref=ddeacfcff563b602b8833287a34dfbee340e5bec"
      },
      {
        "sha": "0228ae2c011daeababc75b915a12b28b702456c0",
        "filename": "doc/gitian-building/debian_install_2_select_a_language.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/gitian-building/debian_install_2_select_a_language.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/gitian-building/debian_install_2_select_a_language.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_2_select_a_language.png?ref=ddeacfcff563b602b8833287a34dfbee340e5bec"
      },
      {
        "sha": "7b18fba97577b521944f909ed57fd251942a9eab",
        "filename": "doc/gitian-building/debian_install_3_select_location.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/gitian-building/debian_install_3_select_location.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/gitian-building/debian_install_3_select_location.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_3_select_location.png?ref=ddeacfcff563b602b8833287a34dfbee340e5bec"
      },
      {
        "sha": "8e46117de4879a6de8b276813bef12c219cb4e8b",
        "filename": "doc/gitian-building/debian_install_4_configure_keyboard.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/gitian-building/debian_install_4_configure_keyboard.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/gitian-building/debian_install_4_configure_keyboard.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_4_configure_keyboard.png?ref=ddeacfcff563b602b8833287a34dfbee340e5bec"
      },
      {
        "sha": "8e3720f24322a54ef33893e8eff95383158bf3d9",
        "filename": "doc/gitian-building/debian_install_5_configure_the_network.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/gitian-building/debian_install_5_configure_the_network.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/gitian-building/debian_install_5_configure_the_network.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_5_configure_the_network.png?ref=ddeacfcff563b602b8833287a34dfbee340e5bec"
      },
      {
        "sha": "7a986d92f48ca3755e37993d098053321109751d",
        "filename": "doc/gitian-building/debian_install_6_domain_name.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/gitian-building/debian_install_6_domain_name.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/gitian-building/debian_install_6_domain_name.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_6_domain_name.png?ref=ddeacfcff563b602b8833287a34dfbee340e5bec"
      },
      {
        "sha": "dcade119676ed7e0c0f92cff6d6a064929a07a07",
        "filename": "doc/gitian-building/debian_install_6a_set_up_root_password.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/gitian-building/debian_install_6a_set_up_root_password.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/gitian-building/debian_install_6a_set_up_root_password.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_6a_set_up_root_password.png?ref=ddeacfcff563b602b8833287a34dfbee340e5bec"
      },
      {
        "sha": "6763c6e08ade2b17f050da257a76132f916e38f5",
        "filename": "doc/gitian-building/debian_install_7_set_up_user_fullname.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/gitian-building/debian_install_7_set_up_user_fullname.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/gitian-building/debian_install_7_set_up_user_fullname.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_7_set_up_user_fullname.png?ref=ddeacfcff563b602b8833287a34dfbee340e5bec"
      },
      {
        "sha": "bb04de96d23bdaa3e29fbe19891e42b881dd0a99",
        "filename": "doc/gitian-building/debian_install_8_set_up_username.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/gitian-building/debian_install_8_set_up_username.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/gitian-building/debian_install_8_set_up_username.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_8_set_up_username.png?ref=ddeacfcff563b602b8833287a34dfbee340e5bec"
      },
      {
        "sha": "981f1181d79d0d7fe2138f036d0f1bb41ec472fa",
        "filename": "doc/gitian-building/debian_install_9_user_password.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/gitian-building/debian_install_9_user_password.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/gitian-building/debian_install_9_user_password.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_9_user_password.png?ref=ddeacfcff563b602b8833287a34dfbee340e5bec"
      },
      {
        "sha": "14cdd5ba5b52cc32fbc0da62cf3671c3679b8d79",
        "filename": "doc/gitian-building/debian_root_login.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/gitian-building/debian_root_login.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/gitian-building/debian_root_login.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_root_login.png?ref=ddeacfcff563b602b8833287a34dfbee340e5bec"
      },
      {
        "sha": "9e714fd15451837980b9d12a931c294fc962b2a2",
        "filename": "doc/gitian-building/network_settings.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/gitian-building/network_settings.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/gitian-building/network_settings.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/network_settings.png?ref=ddeacfcff563b602b8833287a34dfbee340e5bec"
      },
      {
        "sha": "9e1fa2af20f48d482892b722b7288600bece322a",
        "filename": "doc/gitian-building/port_forwarding_rules.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/gitian-building/port_forwarding_rules.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/gitian-building/port_forwarding_rules.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/port_forwarding_rules.png?ref=ddeacfcff563b602b8833287a34dfbee340e5bec"
      },
      {
        "sha": "59bc093e2c3d35bee0d1bdc50f11f2cf2a6fdafe",
        "filename": "doc/gitian-building/select_startup_disk.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/gitian-building/select_startup_disk.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/gitian-building/select_startup_disk.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/select_startup_disk.png?ref=ddeacfcff563b602b8833287a34dfbee340e5bec"
      },
      {
        "sha": "3566e7923076895797717b1286834946c78620c4",
        "filename": "doc/init.md",
        "status": "modified",
        "additions": 53,
        "deletions": 53,
        "changes": 106,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/doc/init.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/doc/init.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/init.md?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,124 +1,124 @@\n-Sample init scripts and service configuration for bitcoind\n+Sample init scripts and service configuration for ravend\n ==========================================================\n \n Sample scripts and configuration files for systemd, Upstart and OpenRC\n can be found in the contrib/init folder.\n \n-    contrib/init/bitcoind.service:    systemd service unit configuration\n-    contrib/init/bitcoind.openrc:     OpenRC compatible SysV style init script\n-    contrib/init/bitcoind.openrcconf: OpenRC conf.d file\n-    contrib/init/bitcoind.conf:       Upstart service configuration file\n-    contrib/init/bitcoind.init:       CentOS compatible SysV style init script\n+    contrib/init/ravend.service:    systemd service unit configuration\n+    contrib/init/ravend.openrc:     OpenRC compatible SysV style init script\n+    contrib/init/ravend.openrcconf: OpenRC conf.d file\n+    contrib/init/ravend.conf:       Upstart service configuration file\n+    contrib/init/ravend.init:       CentOS compatible SysV style init script\n \n-1. Service User\n+Service User\n ---------------------------------\n \n-All three Linux startup configurations assume the existence of a \"bitcoin\" user\n+All three Linux startup configurations assume the existence of a \"raven\" user\n and group.  They must be created before attempting to use these scripts.\n-The OS X configuration assumes bitcoind will be set up for the current user.\n+The OS X configuration assumes ravend will be set up for the current user.\n \n-2. Configuration\n+Configuration\n ---------------------------------\n \n-At a bare minimum, bitcoind requires that the rpcpassword setting be set\n+At a bare minimum, ravend requires that the rpcpassword setting be set\n when running as a daemon.  If the configuration file does not exist or this\n-setting is not set, bitcoind will shutdown promptly after startup.\n+setting is not set, ravend will shutdown promptly after startup.\n \n This password does not have to be remembered or typed as it is mostly used\n-as a fixed token that bitcoind and client programs read from the configuration\n+as a fixed token that ravend and client programs read from the configuration\n file, however it is recommended that a strong and secure password be used\n as this password is security critical to securing the wallet should the\n wallet be enabled.\n \n-If bitcoind is run with the \"-server\" flag (set by default), and no rpcpassword is set,\n+If ravend is run with the \"-server\" flag (set by default), and no rpcpassword is set,\n it will use a special cookie file for authentication. The cookie is generated with random\n content when the daemon starts, and deleted when it exits. Read access to this file\n controls who can access it through RPC.\n \n By default the cookie is stored in the data directory, but it's location can be overridden\n with the option '-rpccookiefile'.\n \n-This allows for running bitcoind without having to do any manual configuration.\n+This allows for running ravend without having to do any manual configuration.\n \n `conf`, `pid`, and `wallet` accept relative paths which are interpreted as\n relative to the data directory. `wallet` *only* supports relative paths.\n \n For an example configuration file that describes the configuration settings,\n-see `contrib/debian/examples/bitcoin.conf`.\n+see `contrib/debian/examples/raven.conf`.\n \n-3. Paths\n+Paths\n ---------------------------------\n \n-3a) Linux\n+### Linux\n \n All three configurations assume several paths that might need to be adjusted.\n \n-Binary:              `/usr/bin/bitcoind`  \n-Configuration file:  `/etc/bitcoin/bitcoin.conf`  \n-Data directory:      `/var/lib/bitcoind`  \n-PID file:            `/var/run/bitcoind/bitcoind.pid` (OpenRC and Upstart) or `/var/lib/bitcoind/bitcoind.pid` (systemd)  \n-Lock file:           `/var/lock/subsys/bitcoind` (CentOS)  \n+Binary:              `/usr/bin/ravend`  \n+Configuration file:  `/etc/raven/raven.conf`  \n+Data directory:      `/var/lib/ravend`  \n+PID file:            `/var/run/ravend/ravend.pid` (OpenRC and Upstart) or `/var/lib/ravend/ravend.pid` (systemd)  \n+Lock file:           `/var/lock/subsys/ravend` (CentOS)  \n \n The configuration file, PID directory (if applicable) and data directory\n-should all be owned by the bitcoin user and group.  It is advised for security\n+should all be owned by the raven user and group.  It is advised for security\n reasons to make the configuration file and data directory only readable by the\n-bitcoin user and group.  Access to bitcoin-cli and other bitcoind rpc clients\n+raven user and group.  Access to raven-cli and other ravend rpc clients\n can then be controlled by group membership.\n \n-3b) Mac OS X\n+### Mac OS X\n \n-Binary:              `/usr/local/bin/bitcoind`  \n-Configuration file:  `~/Library/Application Support/Bitcoin/bitcoin.conf`  \n-Data directory:      `~/Library/Application Support/Bitcoin`\n-Lock file:           `~/Library/Application Support/Bitcoin/.lock`\n+Binary:              `/usr/local/bin/ravend`  \n+Configuration file:  `~/Library/Application Support/Raven/raven.conf`  \n+Data directory:      `~/Library/Application Support/Raven`  \n+Lock file:           `~/Library/Application Support/Raven/.lock`  \n \n-4. Installing Service Configuration\n+Installing Service Configuration\n -----------------------------------\n \n-4a) systemd\n+### systemd\n \n Installing this .service file consists of just copying it to\n /usr/lib/systemd/system directory, followed by the command\n `systemctl daemon-reload` in order to update running systemd configuration.\n \n-To test, run `systemctl start bitcoind` and to enable for system startup run\n-`systemctl enable bitcoind`\n+To test, run `systemctl start ravend` and to enable for system startup run\n+`systemctl enable ravend`\n \n-4b) OpenRC\n+### OpenRC\n \n-Rename bitcoind.openrc to bitcoind and drop it in /etc/init.d.  Double\n+Rename ravend.openrc to ravend and drop it in /etc/init.d.  Double\n check ownership and permissions and make it executable.  Test it with\n-`/etc/init.d/bitcoind start` and configure it to run on startup with\n-`rc-update add bitcoind`\n+`/etc/init.d/ravend start` and configure it to run on startup with\n+`rc-update add ravend`\n \n-4c) Upstart (for Debian/Ubuntu based distributions)\n+### Upstart (for Debian/Ubuntu based distributions)\n \n-Drop bitcoind.conf in /etc/init.  Test by running `service bitcoind start`\n+Drop ravend.conf in /etc/init.  Test by running `service ravend start`\n it will automatically start on reboot.\n \n NOTE: This script is incompatible with CentOS 5 and Amazon Linux 2014 as they\n use old versions of Upstart and do not supply the start-stop-daemon utility.\n \n-4d) CentOS\n+### CentOS\n \n-Copy bitcoind.init to /etc/init.d/bitcoind. Test by running `service bitcoind start`.\n+Copy ravend.init to /etc/init.d/ravend. Test by running `service ravend start`.\n \n-Using this script, you can adjust the path and flags to the bitcoind program by\n-setting the BITCOIND and FLAGS environment variables in the file\n-/etc/sysconfig/bitcoind. You can also use the DAEMONOPTS environment variable here.\n+Using this script, you can adjust the path and flags to the ravend program by\n+setting the RAVEND and FLAGS environment variables in the file\n+/etc/sysconfig/ravend. You can also use the DAEMONOPTS environment variable here.\n \n-4e) Mac OS X\n+### Mac OS X\n \n-Copy org.bitcoin.bitcoind.plist into ~/Library/LaunchAgents. Load the launch agent by\n-running `launchctl load ~/Library/LaunchAgents/org.bitcoin.bitcoind.plist`.\n+Copy org.raven.ravend.plist into ~/Library/LaunchAgents. Load the launch agent by\n+running `launchctl load ~/Library/LaunchAgents/org.raven.ravend.plist`.\n \n-This Launch Agent will cause bitcoind to start whenever the user logs in.\n+This Launch Agent will cause ravend to start whenever the user logs in.\n \n-NOTE: This approach is intended for those wanting to run bitcoind as the current user.\n-You will need to modify org.bitcoin.bitcoind.plist if you intend to use it as a\n-Launch Daemon with a dedicated bitcoin user.\n+NOTE: This approach is intended for those wanting to run ravend as the current user.\n+You will need to modify org.raven.ravend.plist if you intend to use it as a\n+Launch Daemon with a dedicated raven user.\n \n-5. Auto-respawn\n+Auto-respawn\n -----------------------------------\n \n Auto respawning is currently only configured for Upstart and systemd."
      },
      {
        "sha": "8138252d15eae2e207f7314675aeab3d45ce8e5a",
        "filename": "doc/man/Makefile.am",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/doc/man/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/doc/man/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/Makefile.am?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,13 +1,13 @@\n dist_man1_MANS=\n \n-if BUILD_BITCOIND\n-  dist_man1_MANS+=bitcoind.1\n+if BUILD_RAVEND\n+  dist_man1_MANS+=ravend.1\n endif\n \n if ENABLE_QT\n-  dist_man1_MANS+=bitcoin-qt.1\n+  dist_man1_MANS+=raven-qt.1\n endif\n \n-if BUILD_BITCOIN_UTILS\n-  dist_man1_MANS+=bitcoin-cli.1 bitcoin-tx.1\n+if BUILD_RAVEN_UTILS\n+  dist_man1_MANS+=raven-cli.1 raven-tx.1\n endif"
      },
      {
        "sha": "0d176a9abc26b3d5b182ada5d84664e346193e19",
        "filename": "doc/man/raven-cli.1",
        "status": "renamed",
        "additions": 33,
        "deletions": 15,
        "changes": 48,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/doc/man/raven-cli.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/doc/man/raven-cli.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/raven-cli.1?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,17 +1,17 @@\n .\\\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.47.4.\n-.TH BITCOIN-CLI \"1\" \"February 2017\" \"bitcoin-cli v0.14.99.0\" \"User Commands\"\n+.TH RAVEN-CLI \"1\" \"September 2017\" \"raven-cli v0.15.99.0\" \"User Commands\"\n .SH NAME\n-bitcoin-cli \\- manual page for bitcoin-cli v0.14.99.0\n+raven-cli \\- manual page for raven-cli v0.15.99.0\n .SH DESCRIPTION\n-Bitcoin Core RPC client version v0.14.99.0\n+Raven Core RPC client version v0.15.99.0\n .SS \"Usage:\"\n .TP\n-bitcoin\\-cli [options] <command> [params]\n-Send command to Bitcoin Core\n+raven\\-cli [options] <command> [params]\n+Send command to Raven Core\n .IP\n-bitcoin\\-cli [options] \\fB\\-named\\fR <command> [name=value] ... Send command to Bitcoin Core (with named arguments)\n-bitcoin\\-cli [options] help                List commands\n-bitcoin\\-cli [options] help <command>      Get help for a command\n+raven\\-cli [options] \\fB\\-named\\fR <command> [name=value] ... Send command to Raven Core (with named arguments)\n+raven\\-cli [options] help                List commands\n+raven\\-cli [options] help <command>      Get help for a command\n .SH OPTIONS\n .HP\n \\-?\n@@ -20,7 +20,7 @@ This help message\n .HP\n \\fB\\-conf=\\fR<file>\n .IP\n-Specify configuration file (default: bitcoin.conf)\n+Specify configuration file (default: raven.conf)\n .HP\n \\fB\\-datadir=\\fR<dir>\n .IP\n@@ -48,7 +48,7 @@ Send commands to node running on <ip> (default: 127.0.0.1)\n .HP\n \\fB\\-rpcport=\\fR<port>\n .IP\n-Connect to JSON\\-RPC on <port> (default: 8332 or testnet: 18332)\n+Connect to JSON\\-RPC on <port> (default: 8766 or testnet: 18766)\n .HP\n \\fB\\-rpcwait\\fR\n .IP\n@@ -64,18 +64,36 @@ Password for JSON\\-RPC connections\n .HP\n \\fB\\-rpcclienttimeout=\\fR<n>\n .IP\n-Timeout during HTTP requests (default: 900)\n+Timeout in seconds during HTTP requests, or 0 for no timeout. (default:\n+900)\n+.HP\n+\\fB\\-stdinrpcpass\\fR\n+.TP\n+Read RPC password from standard input as a single line.\n+When combined\n+.IP\n+with \\fB\\-stdin\\fR, the first line from standard input is used for the\n+RPC password.\n .HP\n \\fB\\-stdin\\fR\n .IP\n Read extra arguments from standard input, one per line until EOF/Ctrl\\-D\n-(recommended for sensitive information such as passphrases)\n+(recommended for sensitive information such as passphrases).\n+When combined with \\fB\\-stdinrpcpass\\fR, the first line from standard\n+input is used for the RPC password.\n+.HP\n+\\fB\\-rpcwallet=\\fR<walletname>\n+.IP\n+Send RPC for non\\-default wallet on RPC server (argument is wallet\n+filename in ravend directory, required if ravend/\\-Qt runs\n+with multiple wallets)\n .SH COPYRIGHT\n Copyright (C) 2009-2017 The Bitcoin Core developers\n+Copyright (c) 2017 The Raven Core developers\n \n-Please contribute if you find Bitcoin Core useful. Visit\n-<https://bitcoincore.org> for further information about the software.\n-The source code is available from <https://github.com/bitcoin/bitcoin>.\n+Please contribute if you find Raven Core useful. Visit\n+<https://ravencoin.org> for further information about the software.\n+The source code is available from <https://github.com/RavenProject/Ravencoin>.\n \n This is experimental software.\n Distributed under the MIT software license, see the accompanying file COPYING",
        "previous_filename": "doc/man/bitcoin-cli.1"
      },
      {
        "sha": "f84e998eca8c367cef593d6e67c5c8c77cb18330",
        "filename": "doc/man/raven-qt.1",
        "status": "renamed",
        "additions": 78,
        "deletions": 66,
        "changes": 144,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/doc/man/raven-qt.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/doc/man/raven-qt.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/raven-qt.1?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,12 +1,12 @@\n .\\\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.47.4.\n-.TH BITCOIN-QT \"1\" \"February 2017\" \"bitcoin-qt v0.14.99.0\" \"User Commands\"\n+.TH RAVEN-QT \"1\" \"September 2017\" \"raven-qt v0.15.99.0\" \"User Commands\"\n .SH NAME\n-bitcoin-qt \\- manual page for bitcoin-qt v0.14.99.0\n+raven-qt \\- manual page for raven-qt v0.15.99.0\n .SH DESCRIPTION\n-Bitcoin Core version v0.14.99.0 (64\\-bit)\n+Raven Core version v0.15.99.0 (64\\-bit)\n Usage:\n .IP\n-bitcoin\\-qt [command\\-line options]\n+raven\\-qt [command\\-line options]\n .SH OPTIONS\n .HP\n \\-?\n@@ -32,21 +32,21 @@ block hash)\n If this block is in the chain assume that it and its ancestors are valid\n and potentially skip their script verification (0 to verify all,\n default:\n-00000000000000000013176bf8d7dfeab4e1db31dc93bc311b436e82ab226b90,\n+0000000000000000003b9ce759c2a087d52abc4266f8f4ebd6d768b89defa50a,\n testnet:\n-00000000000128796ee387cf110ccb9d2f36cffaf7f73079c995377c65ac0dcc)\n+0000000002e9e7b00e1f6dc5123a04aad68dd0f0968d8c7aa45f6640795c37b1)\n .HP\n \\fB\\-conf=\\fR<file>\n .IP\n-Specify configuration file (default: bitcoin.conf)\n+Specify configuration file (default: raven.conf)\n .HP\n \\fB\\-datadir=\\fR<dir>\n .IP\n Specify data directory\n .HP\n \\fB\\-dbcache=\\fR<n>\n .IP\n-Set database cache size in megabytes (4 to 16384, default: 300)\n+Set database cache size in megabytes (4 to 16384, default: 450)\n .HP\n \\fB\\-loadblock=\\fR<file>\n .IP\n@@ -65,6 +65,10 @@ Keep the transaction memory pool below <n> megabytes (default: 300)\n Do not keep transactions in the mempool longer than <n> hours (default:\n 336)\n .HP\n+\\fB\\-persistmempool\\fR\n+.IP\n+Whether to save the mempool on shutdown and load on restart (default: 1)\n+.HP\n \\fB\\-blockreconstructionextratxn=\\fR<n>\n .IP\n Extra transactions to keep in memory for compact block reconstructions\n@@ -77,7 +81,7 @@ leave that many cores free, default: 0)\n .HP\n \\fB\\-pid=\\fR<file>\n .IP\n-Specify pid file (default: bitcoind.pid)\n+Specify pid file (default: ravend.pid)\n .HP\n \\fB\\-prune=\\fR<n>\n .IP\n@@ -131,8 +135,8 @@ for IPv6\n .HP\n \\fB\\-connect=\\fR<ip>\n .IP\n-Connect only to the specified node(s); \\fB\\-noconnect\\fR or \\fB\\-connect\\fR=\\fI\\,0\\/\\fR alone to\n-disable automatic connections\n+Connect only to the specified node(s); \\fB\\-connect\\fR=\\fI\\,0\\/\\fR disables automatic\n+connections\n .HP\n \\fB\\-discover\\fR\n .IP\n@@ -146,7 +150,7 @@ Allow DNS lookups for \\fB\\-addnode\\fR, \\fB\\-seednode\\fR and \\fB\\-connect\\fR (def\n \\fB\\-dnsseed\\fR\n .IP\n Query for peer addresses via DNS lookup, if low on addresses (default: 1\n-unless \\fB\\-connect\\fR/\\-noconnect)\n+unless \\fB\\-connect\\fR used)\n .HP\n \\fB\\-externalip=\\fR<ip>\n .IP\n@@ -158,8 +162,7 @@ Always query for peer addresses via DNS lookup (default: 0)\n .HP\n \\fB\\-listen\\fR\n .IP\n-Accept connections from outside (default: 1 if no \\fB\\-proxy\\fR or\n-\\fB\\-connect\\fR/\\-noconnect)\n+Accept connections from outside (default: 1 if no \\fB\\-proxy\\fR or \\fB\\-connect\\fR)\n .HP\n \\fB\\-listenonion\\fR\n .IP\n@@ -203,7 +206,7 @@ Support filtering of blocks and transaction with bloom filters (default:\n .HP\n \\fB\\-port=\\fR<port>\n .IP\n-Listen for connections on <port> (default: 8333 or testnet: 18333)\n+Listen for connections on <port> (default: 8767 or testnet: 18767)\n .HP\n \\fB\\-proxy=\\fR<ip:port>\n .IP\n@@ -214,11 +217,6 @@ Connect through SOCKS5 proxy\n Randomize credentials for every proxy connection. This enables Tor\n stream isolation (default: 1)\n .HP\n-\\fB\\-rpcserialversion\\fR\n-.IP\n-Sets the serialization of raw transaction or block hex returned in\n-non\\-verbose mode, non\\-segwit(0) or segwit(1) (default: 1)\n-.HP\n \\fB\\-seednode=\\fR<ip>\n .IP\n Connect to a node to retrieve peer addresses, and disconnect\n@@ -253,16 +251,6 @@ times. Whitelisted peers cannot be DoS banned and their\n transactions are always relayed, even if they are already in the\n mempool, useful e.g. for a gateway\n .HP\n-\\fB\\-whitelistrelay\\fR\n-.IP\n-Accept relayed transactions received from whitelisted peers even when\n-not relaying transactions (default: 1)\n-.HP\n-\\fB\\-whitelistforcerelay\\fR\n-.IP\n-Force relay of transactions from whitelisted peers even if they violate\n-local relay policy (default: 1)\n-.HP\n \\fB\\-maxuploadtarget=\\fR<n>\n .IP\n Tries to keep outbound traffic under the given target (in MiB per 24h),\n@@ -276,21 +264,29 @@ Do not load the wallet and disable wallet RPC calls\n .HP\n \\fB\\-keypool=\\fR<n>\n .IP\n-Set key pool size to <n> (default: 100)\n+Set key pool size to <n> (default: 1000)\n .HP\n \\fB\\-fallbackfee=\\fR<amt>\n .IP\n-A fee rate (in BTC/kB) that will be used when fee estimation has\n+A fee rate (in RVN/kB) that will be used when fee estimation has\n insufficient data (default: 0.0002)\n .HP\n+\\fB\\-discardfee=\\fR<amt>\n+.IP\n+The fee rate (in RVN/kB) that indicates your tolerance for discarding\n+change by adding it to the fee (default: 0.0001). Note: An output\n+is discarded if it is dust at this rate, but we will always\n+discard up to the dust relay fee and a discard fee above that is\n+limited by the fee estimate for the longest target\n+.HP\n \\fB\\-mintxfee=\\fR<amt>\n .IP\n-Fees (in BTC/kB) smaller than this are considered zero fee for\n+Fees (in RVN/kB) smaller than this are considered zero fee for\n transaction creation (default: 0.00001)\n .HP\n \\fB\\-paytxfee=\\fR<amt>\n .IP\n-Fee (in BTC/kB) to add to transactions you send (default: 0.00)\n+Fee (in RVN/kB) to add to transactions you send (default: 0.00)\n .HP\n \\fB\\-rescan\\fR\n .IP\n@@ -309,11 +305,6 @@ Spend unconfirmed change when sending transactions (default: 1)\n If paytxfee is not set, include enough fee so transactions begin\n confirmation on average within n blocks (default: 6)\n .HP\n-\\fB\\-usehd\\fR\n-.IP\n-Use hierarchical deterministic key generation (HD) after BIP32. Only has\n-effect during wallet creation/first start (default: 1)\n-.HP\n \\fB\\-walletrbf\\fR\n .IP\n Send transactions with full\\-RBF opt\\-in enabled (default: 0)\n@@ -370,10 +361,16 @@ Append comment to the user agent string\n .IP\n Output debugging information (default: 0, supplying <category> is\n optional). If <category> is not supplied or if <category> = 1,\n-output all debugging information.<category> can be: addrman,\n-alert, bench, cmpctblock, coindb, db, http, libevent, lock,\n-mempool, mempoolrej, net, proxy, prune, rand, reindex, rpc,\n-selectcoins, tor, zmq, qt.\n+output all debugging information. <category> can be: net, tor,\n+mempool, http, bench, zmq, db, rpc, estimatefee, addrman,\n+selectcoins, reindex, cmpctblock, rand, prune, proxy, mempoolrej,\n+libevent, coindb, qt, leveldb.\n+.HP\n+\\fB\\-debugexclude=\\fR<category>\n+.IP\n+Exclude debugging information for a category. Can be used in conjunction\n+with \\fB\\-debug\\fR=\\fI\\,1\\/\\fR to output debug logs for all categories except one\n+or more specified categories.\n .HP\n \\fB\\-help\\-debug\\fR\n .IP\n@@ -387,14 +384,9 @@ Include IP addresses in debug output (default: 0)\n .IP\n Prepend debug output with timestamp (default: 1)\n .HP\n-\\fB\\-minrelaytxfee=\\fR<amt>\n-.IP\n-Fees (in BTC/kB) smaller than this are considered zero fee for relaying,\n-mining and transaction creation (default: 0.00001)\n-.HP\n \\fB\\-maxtxfee=\\fR<amt>\n .IP\n-Maximum total fees (in BTC) to use in a single wallet transaction or raw\n+Maximum total fees (in RVN) to use in a single wallet transaction or raw\n transaction; setting this too low may abort large transactions\n (default: 0.10)\n .HP\n@@ -431,25 +423,36 @@ Maximum size of data in data carrier transactions we relay and mine\n \\fB\\-mempoolreplacement\\fR\n .IP\n Enable transaction replacement in the memory pool (default: 1)\n+.HP\n+\\fB\\-minrelaytxfee=\\fR<amt>\n+.IP\n+Fees (in RVN/kB) smaller than this are considered zero fee for relaying,\n+mining and transaction creation (default: 0.00001)\n+.HP\n+\\fB\\-whitelistrelay\\fR\n+.IP\n+Accept relayed transactions received from whitelisted peers even when\n+not relaying transactions (default: 1)\n+.HP\n+\\fB\\-whitelistforcerelay\\fR\n+.IP\n+Force relay of transactions from whitelisted peers even if they violate\n+local relay policy (default: 1)\n .PP\n Block creation options:\n .HP\n \\fB\\-blockmaxweight=\\fR<n>\n .IP\n-Set maximum BIP141 block weight (default: 3000000)\n+Set maximum BIP141 block weight (default: 3996000)\n .HP\n \\fB\\-blockmaxsize=\\fR<n>\n .IP\n-Set maximum block size in bytes (default: 750000)\n-.HP\n-\\fB\\-blockprioritysize=\\fR<n>\n-.IP\n-Set maximum size of high\\-priority/low\\-fee transactions in bytes\n-(default: 0)\n+Set maximum BIP141 block weight to this * 4. Deprecated, use\n+blockmaxweight\n .HP\n \\fB\\-blockmintxfee=\\fR<amt>\n .IP\n-Set lowest fee rate (in BTC/kB) for transactions to be included in block\n+Set lowest fee rate (in RVN/kB) for transactions to be included in block\n creation. (default: 0.00001)\n .PP\n RPC server options:\n@@ -462,11 +465,14 @@ Accept command line and JSON\\-RPC commands\n .IP\n Accept public REST requests (default: 0)\n .HP\n-\\fB\\-rpcbind=\\fR<addr>\n+\\fB\\-rpcbind=\\fR<addr>[:port]\n .IP\n-Bind to given address to listen for JSON\\-RPC connections. Use\n-[host]:port notation for IPv6. This option can be specified\n-multiple times (default: bind to all interfaces)\n+Bind to given address to listen for JSON\\-RPC connections. This option is\n+ignored unless \\fB\\-rpcallowip\\fR is also passed. Port is optional and\n+overrides \\fB\\-rpcport\\fR. Use [host]:port notation for IPv6. This\n+option can be specified multiple times (default: 127.0.0.1 and\n+::1 i.e., localhost, or if \\fB\\-rpcallowip\\fR has been specified,\n+0.0.0.0 and :: i.e., all addresses)\n .HP\n \\fB\\-rpccookiefile=\\fR<loc>\n .IP\n@@ -491,8 +497,8 @@ option can be specified multiple times\n .HP\n \\fB\\-rpcport=\\fR<port>\n .IP\n-Listen for JSON\\-RPC connections on <port> (default: 8332 or testnet:\n-18332)\n+Listen for JSON\\-RPC connections on <port> (default: 8766 or testnet:\n+18766)\n .HP\n \\fB\\-rpcallowip=\\fR<ip>\n .IP\n@@ -501,6 +507,11 @@ single IP (e.g. 1.2.3.4), a network/netmask (e.g.\n 1.2.3.4/255.255.255.0) or a network/CIDR (e.g. 1.2.3.4/24). This\n option can be specified multiple times\n .HP\n+\\fB\\-rpcserialversion\\fR\n+.IP\n+Sets the serialization of raw transaction or block hex returned in\n+non\\-verbose mode, non\\-segwit(0) or segwit(1) (default: 1)\n+.HP\n \\fB\\-rpcthreads=\\fR<n>\n .IP\n Set the number of threads to service RPC calls (default: 4)\n@@ -532,10 +543,11 @@ Show splash screen on startup (default: 1)\n Reset all settings changed in the GUI\n .SH COPYRIGHT\n Copyright (C) 2009-2017 The Bitcoin Core developers\n+Copyright (c) 2017 The Raven Core developers\n \n-Please contribute if you find Bitcoin Core useful. Visit\n-<https://bitcoincore.org> for further information about the software.\n-The source code is available from <https://github.com/bitcoin/bitcoin>.\n+Please contribute if you find Raven Core useful. Visit\n+<https://ravencoin.org> for further information about the software.\n+The source code is available from <https://github.com/RavenProject/Ravencoin>.\n \n This is experimental software.\n Distributed under the MIT software license, see the accompanying file COPYING",
        "previous_filename": "doc/man/bitcoin-qt.1"
      },
      {
        "sha": "0ea7da9360f0ce2643dd7559c02c9ad495dd7029",
        "filename": "doc/man/raven-tx.1",
        "status": "renamed",
        "additions": 16,
        "deletions": 10,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/doc/man/raven-tx.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/doc/man/raven-tx.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/raven-tx.1?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,16 +1,16 @@\n .\\\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.47.4.\n-.TH BITCOIN-TX \"1\" \"February 2017\" \"bitcoin-tx v0.14.99.0\" \"User Commands\"\n+.TH RAVEN-TX \"1\" \"September 2017\" \"raven-tx v0.15.99.0\" \"User Commands\"\n .SH NAME\n-bitcoin-tx \\- manual page for bitcoin-tx v0.14.99.0\n+raven-tx \\- manual page for raven-tx v0.15.99.0\n .SH DESCRIPTION\n-Bitcoin Core bitcoin\\-tx utility version v0.14.99.0\n+Raven Core raven\\-tx utility version v0.15.99.0\n .SS \"Usage:\"\n .TP\n-bitcoin\\-tx [options] <hex\\-tx> [commands]\n-Update hex\\-encoded bitcoin transaction\n+raven\\-tx [options] <hex\\-tx> [commands]\n+Update hex\\-encoded raven transaction\n .TP\n-bitcoin\\-tx [options] \\fB\\-create\\fR [commands]\n-Create hex\\-encoded bitcoin transaction\n+raven\\-tx [options] \\fB\\-create\\fR [commands]\n+Create hex\\-encoded raven transaction\n .SH OPTIONS\n .HP\n \\-?\n@@ -63,6 +63,11 @@ nversion=N\n .IP\n Set TX version to N\n .IP\n+replaceable(=N)\n+.IP\n+Set RBF opt\\-in sequence number for input N (if not provided, opt\\-in all\n+available inputs)\n+.IP\n outaddr=VALUE:ADDRESS\n .IP\n Add address\\-based output to TX\n@@ -108,10 +113,11 @@ set=NAME:JSON\\-STRING\n Set register NAME to given JSON\\-STRING\n .SH COPYRIGHT\n Copyright (C) 2009-2017 The Bitcoin Core developers\n+Copyright (c) 2017 The Raven Core developers\n \n-Please contribute if you find Bitcoin Core useful. Visit\n-<https://bitcoincore.org> for further information about the software.\n-The source code is available from <https://github.com/bitcoin/bitcoin>.\n+Please contribute if you find Raven Core useful. Visit\n+<https://ravencoin.org> for further information about the software.\n+The source code is available from <https://github.com/RavenProject/Ravencoin>.\n \n This is experimental software.\n Distributed under the MIT software license, see the accompanying file COPYING",
        "previous_filename": "doc/man/bitcoin-tx.1"
      },
      {
        "sha": "95fee9a86a564645c577f30b0fba458d3f65cab2",
        "filename": "doc/man/ravend.1",
        "status": "renamed",
        "additions": 79,
        "deletions": 67,
        "changes": 146,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/doc/man/ravend.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/doc/man/ravend.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/ravend.1?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,13 +1,13 @@\n .\\\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.47.4.\n-.TH BITCOIND \"1\" \"February 2017\" \"bitcoind v0.14.99.0\" \"User Commands\"\n+.TH RAVEND \"1\" \"September 2017\" \"ravend v0.15.99.0\" \"User Commands\"\n .SH NAME\n-bitcoind \\- manual page for bitcoind v0.14.99.0\n+ravend \\- manual page for ravend v0.15.99.0\n .SH DESCRIPTION\n-Bitcoin Core Daemon version v0.14.99.0\n+Raven Core Daemon version v0.15.99.0\n .SS \"Usage:\"\n .TP\n-bitcoind [options]\n-Start Bitcoin Core Daemon\n+ravend [options]\n+Start Raven Core Daemon\n .SH OPTIONS\n .HP\n \\-?\n@@ -33,13 +33,13 @@ block hash)\n If this block is in the chain assume that it and its ancestors are valid\n and potentially skip their script verification (0 to verify all,\n default:\n-00000000000000000013176bf8d7dfeab4e1db31dc93bc311b436e82ab226b90,\n+0000000000000000003b9ce759c2a087d52abc4266f8f4ebd6d768b89defa50a,\n testnet:\n-00000000000128796ee387cf110ccb9d2f36cffaf7f73079c995377c65ac0dcc)\n+0000000002e9e7b00e1f6dc5123a04aad68dd0f0968d8c7aa45f6640795c37b1)\n .HP\n \\fB\\-conf=\\fR<file>\n .IP\n-Specify configuration file (default: bitcoin.conf)\n+Specify configuration file (default: raven.conf)\n .HP\n \\fB\\-daemon\\fR\n .IP\n@@ -51,7 +51,7 @@ Specify data directory\n .HP\n \\fB\\-dbcache=\\fR<n>\n .IP\n-Set database cache size in megabytes (4 to 16384, default: 300)\n+Set database cache size in megabytes (4 to 16384, default: 450)\n .HP\n \\fB\\-loadblock=\\fR<file>\n .IP\n@@ -70,6 +70,10 @@ Keep the transaction memory pool below <n> megabytes (default: 300)\n Do not keep transactions in the mempool longer than <n> hours (default:\n 336)\n .HP\n+\\fB\\-persistmempool\\fR\n+.IP\n+Whether to save the mempool on shutdown and load on restart (default: 1)\n+.HP\n \\fB\\-blockreconstructionextratxn=\\fR<n>\n .IP\n Extra transactions to keep in memory for compact block reconstructions\n@@ -82,7 +86,7 @@ leave that many cores free, default: 0)\n .HP\n \\fB\\-pid=\\fR<file>\n .IP\n-Specify pid file (default: bitcoind.pid)\n+Specify pid file (default: ravend.pid)\n .HP\n \\fB\\-prune=\\fR<n>\n .IP\n@@ -136,8 +140,8 @@ for IPv6\n .HP\n \\fB\\-connect=\\fR<ip>\n .IP\n-Connect only to the specified node(s); \\fB\\-noconnect\\fR or \\fB\\-connect\\fR=\\fI\\,0\\/\\fR alone to\n-disable automatic connections\n+Connect only to the specified node(s); \\fB\\-connect\\fR=\\fI\\,0\\/\\fR disables automatic\n+connections\n .HP\n \\fB\\-discover\\fR\n .IP\n@@ -151,7 +155,7 @@ Allow DNS lookups for \\fB\\-addnode\\fR, \\fB\\-seednode\\fR and \\fB\\-connect\\fR (def\n \\fB\\-dnsseed\\fR\n .IP\n Query for peer addresses via DNS lookup, if low on addresses (default: 1\n-unless \\fB\\-connect\\fR/\\-noconnect)\n+unless \\fB\\-connect\\fR used)\n .HP\n \\fB\\-externalip=\\fR<ip>\n .IP\n@@ -163,8 +167,7 @@ Always query for peer addresses via DNS lookup (default: 0)\n .HP\n \\fB\\-listen\\fR\n .IP\n-Accept connections from outside (default: 1 if no \\fB\\-proxy\\fR or\n-\\fB\\-connect\\fR/\\-noconnect)\n+Accept connections from outside (default: 1 if no \\fB\\-proxy\\fR or \\fB\\-connect\\fR)\n .HP\n \\fB\\-listenonion\\fR\n .IP\n@@ -208,7 +211,7 @@ Support filtering of blocks and transaction with bloom filters (default:\n .HP\n \\fB\\-port=\\fR<port>\n .IP\n-Listen for connections on <port> (default: 8333 or testnet: 18333)\n+Listen for connections on <port> (default: 8767 or testnet: 18767)\n .HP\n \\fB\\-proxy=\\fR<ip:port>\n .IP\n@@ -219,11 +222,6 @@ Connect through SOCKS5 proxy\n Randomize credentials for every proxy connection. This enables Tor\n stream isolation (default: 1)\n .HP\n-\\fB\\-rpcserialversion\\fR\n-.IP\n-Sets the serialization of raw transaction or block hex returned in\n-non\\-verbose mode, non\\-segwit(0) or segwit(1) (default: 1)\n-.HP\n \\fB\\-seednode=\\fR<ip>\n .IP\n Connect to a node to retrieve peer addresses, and disconnect\n@@ -258,16 +256,6 @@ times. Whitelisted peers cannot be DoS banned and their\n transactions are always relayed, even if they are already in the\n mempool, useful e.g. for a gateway\n .HP\n-\\fB\\-whitelistrelay\\fR\n-.IP\n-Accept relayed transactions received from whitelisted peers even when\n-not relaying transactions (default: 1)\n-.HP\n-\\fB\\-whitelistforcerelay\\fR\n-.IP\n-Force relay of transactions from whitelisted peers even if they violate\n-local relay policy (default: 1)\n-.HP\n \\fB\\-maxuploadtarget=\\fR<n>\n .IP\n Tries to keep outbound traffic under the given target (in MiB per 24h),\n@@ -281,21 +269,29 @@ Do not load the wallet and disable wallet RPC calls\n .HP\n \\fB\\-keypool=\\fR<n>\n .IP\n-Set key pool size to <n> (default: 100)\n+Set key pool size to <n> (default: 1000)\n .HP\n \\fB\\-fallbackfee=\\fR<amt>\n .IP\n-A fee rate (in BTC/kB) that will be used when fee estimation has\n+A fee rate (in RVN/kB) that will be used when fee estimation has\n insufficient data (default: 0.0002)\n .HP\n+\\fB\\-discardfee=\\fR<amt>\n+.IP\n+The fee rate (in RVN/kB) that indicates your tolerance for discarding\n+change by adding it to the fee (default: 0.0001). Note: An output\n+is discarded if it is dust at this rate, but we will always\n+discard up to the dust relay fee and a discard fee above that is\n+limited by the fee estimate for the longest target\n+.HP\n \\fB\\-mintxfee=\\fR<amt>\n .IP\n-Fees (in BTC/kB) smaller than this are considered zero fee for\n+Fees (in RVN/kB) smaller than this are considered zero fee for\n transaction creation (default: 0.00001)\n .HP\n \\fB\\-paytxfee=\\fR<amt>\n .IP\n-Fee (in BTC/kB) to add to transactions you send (default: 0.00)\n+Fee (in RVN/kB) to add to transactions you send (default: 0.00)\n .HP\n \\fB\\-rescan\\fR\n .IP\n@@ -314,11 +310,6 @@ Spend unconfirmed change when sending transactions (default: 1)\n If paytxfee is not set, include enough fee so transactions begin\n confirmation on average within n blocks (default: 6)\n .HP\n-\\fB\\-usehd\\fR\n-.IP\n-Use hierarchical deterministic key generation (HD) after BIP32. Only has\n-effect during wallet creation/first start (default: 1)\n-.HP\n \\fB\\-walletrbf\\fR\n .IP\n Send transactions with full\\-RBF opt\\-in enabled (default: 0)\n@@ -375,10 +366,16 @@ Append comment to the user agent string\n .IP\n Output debugging information (default: 0, supplying <category> is\n optional). If <category> is not supplied or if <category> = 1,\n-output all debugging information.<category> can be: addrman,\n-alert, bench, cmpctblock, coindb, db, http, libevent, lock,\n-mempool, mempoolrej, net, proxy, prune, rand, reindex, rpc,\n-selectcoins, tor, zmq.\n+output all debugging information. <category> can be: net, tor,\n+mempool, http, bench, zmq, db, rpc, estimatefee, addrman,\n+selectcoins, reindex, cmpctblock, rand, prune, proxy, mempoolrej,\n+libevent, coindb, qt, leveldb.\n+.HP\n+\\fB\\-debugexclude=\\fR<category>\n+.IP\n+Exclude debugging information for a category. Can be used in conjunction\n+with \\fB\\-debug\\fR=\\fI\\,1\\/\\fR to output debug logs for all categories except one\n+or more specified categories.\n .HP\n \\fB\\-help\\-debug\\fR\n .IP\n@@ -392,14 +389,9 @@ Include IP addresses in debug output (default: 0)\n .IP\n Prepend debug output with timestamp (default: 1)\n .HP\n-\\fB\\-minrelaytxfee=\\fR<amt>\n-.IP\n-Fees (in BTC/kB) smaller than this are considered zero fee for relaying,\n-mining and transaction creation (default: 0.00001)\n-.HP\n \\fB\\-maxtxfee=\\fR<amt>\n .IP\n-Maximum total fees (in BTC) to use in a single wallet transaction or raw\n+Maximum total fees (in RVN) to use in a single wallet transaction or raw\n transaction; setting this too low may abort large transactions\n (default: 0.10)\n .HP\n@@ -436,25 +428,36 @@ Maximum size of data in data carrier transactions we relay and mine\n \\fB\\-mempoolreplacement\\fR\n .IP\n Enable transaction replacement in the memory pool (default: 1)\n+.HP\n+\\fB\\-minrelaytxfee=\\fR<amt>\n+.IP\n+Fees (in RVN/kB) smaller than this are considered zero fee for relaying,\n+mining and transaction creation (default: 0.00001)\n+.HP\n+\\fB\\-whitelistrelay\\fR\n+.IP\n+Accept relayed transactions received from whitelisted peers even when\n+not relaying transactions (default: 1)\n+.HP\n+\\fB\\-whitelistforcerelay\\fR\n+.IP\n+Force relay of transactions from whitelisted peers even if they violate\n+local relay policy (default: 1)\n .PP\n Block creation options:\n .HP\n \\fB\\-blockmaxweight=\\fR<n>\n .IP\n-Set maximum BIP141 block weight (default: 3000000)\n+Set maximum BIP141 block weight (default: 3996000)\n .HP\n \\fB\\-blockmaxsize=\\fR<n>\n .IP\n-Set maximum block size in bytes (default: 750000)\n-.HP\n-\\fB\\-blockprioritysize=\\fR<n>\n-.IP\n-Set maximum size of high\\-priority/low\\-fee transactions in bytes\n-(default: 0)\n+Set maximum BIP141 block weight to this * 4. Deprecated, use\n+blockmaxweight\n .HP\n \\fB\\-blockmintxfee=\\fR<amt>\n .IP\n-Set lowest fee rate (in BTC/kB) for transactions to be included in block\n+Set lowest fee rate (in RVN/kB) for transactions to be included in block\n creation. (default: 0.00001)\n .PP\n RPC server options:\n@@ -467,11 +470,14 @@ Accept command line and JSON\\-RPC commands\n .IP\n Accept public REST requests (default: 0)\n .HP\n-\\fB\\-rpcbind=\\fR<addr>\n+\\fB\\-rpcbind=\\fR<addr>[:port]\n .IP\n-Bind to given address to listen for JSON\\-RPC connections. Use\n-[host]:port notation for IPv6. This option can be specified\n-multiple times (default: bind to all interfaces)\n+Bind to given address to listen for JSON\\-RPC connections. This option is\n+ignored unless \\fB\\-rpcallowip\\fR is also passed. Port is optional and\n+overrides \\fB\\-rpcport\\fR. Use [host]:port notation for IPv6. This\n+option can be specified multiple times (default: 127.0.0.1 and\n+::1 i.e., localhost, or if \\fB\\-rpcallowip\\fR has been specified,\n+0.0.0.0 and :: i.e., all addresses)\n .HP\n \\fB\\-rpccookiefile=\\fR<loc>\n .IP\n@@ -496,8 +502,8 @@ option can be specified multiple times\n .HP\n \\fB\\-rpcport=\\fR<port>\n .IP\n-Listen for JSON\\-RPC connections on <port> (default: 8332 or testnet:\n-18332)\n+Listen for JSON\\-RPC connections on <port> (default: 8766 or testnet:\n+18766)\n .HP\n \\fB\\-rpcallowip=\\fR<ip>\n .IP\n@@ -506,15 +512,21 @@ single IP (e.g. 1.2.3.4), a network/netmask (e.g.\n 1.2.3.4/255.255.255.0) or a network/CIDR (e.g. 1.2.3.4/24). This\n option can be specified multiple times\n .HP\n+\\fB\\-rpcserialversion\\fR\n+.IP\n+Sets the serialization of raw transaction or block hex returned in\n+non\\-verbose mode, non\\-segwit(0) or segwit(1) (default: 1)\n+.HP\n \\fB\\-rpcthreads=\\fR<n>\n .IP\n Set the number of threads to service RPC calls (default: 4)\n .SH COPYRIGHT\n Copyright (C) 2009-2017 The Bitcoin Core developers\n+Copyright (c) 2017 The Raven Core developers\n \n-Please contribute if you find Bitcoin Core useful. Visit\n-<https://bitcoincore.org> for further information about the software.\n-The source code is available from <https://github.com/bitcoin/bitcoin>.\n+Please contribute if you find Raven Core useful. Visit\n+<https://ravencoin.org> for further information about the software.\n+The source code is available from <https://github.com/RavenProject/Ravencoin>.\n \n This is experimental software.\n Distributed under the MIT software license, see the accompanying file COPYING",
        "previous_filename": "doc/man/bitcoind.1"
      },
      {
        "sha": "61ff0c1c612e811767f43a26082507a755e9baa3",
        "filename": "doc/reduce-traffic.md",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/doc/reduce-traffic.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/doc/reduce-traffic.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/reduce-traffic.md?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -3,7 +3,7 @@ Reduce Traffic\n \n Some node operators need to deal with bandwidth caps imposed by their ISPs.\n \n-By default, bitcoin-core allows up to 125 connections to different peers, 8 of\n+By default, raven-core allows up to 125 connections to different peers, 8 of\n which are outbound. You can therefore, have at most 117 inbound connections.\n \n The default settings can result in relatively significant traffic consumption.\n@@ -33,5 +33,5 @@ blocks and transactions to fewer nodes.\n ## 3. Reduce maximum connections (`-maxconnections=<num>`)\n \n Reducing the maximum connected nodes to a minimum could be desirable if traffic\n-limits are tiny. Keep in mind that bitcoin's trustless model works best if you are\n+limits are tiny. Keep in mind that raven's trustless model works best if you are\n connected to a handful of nodes."
      },
      {
        "sha": "6cd7772630028ad24bd59b8c17467ccb3543e78f",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 64,
        "deletions": 75,
        "changes": 139,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -1,106 +1,95 @@\n (note: this is a temporary file, to be added-to by anybody, and moved to\n release-notes at release time)\n \n-Bitcoin Core version *version* is now available from:\n+Raven Core version *version* is now available from:\n \n-  <https://bitcoin.org/bin/bitcoin-core-*version*/>\n+  <https://raven.org/bin/raven-core-*version*/>\n \n This is a new major version release, including new features, various bugfixes\n and performance improvements, as well as updated translations.\n \n-Please report bugs using the issue tracker at github:\n+Please report bugs using the issue tracker at GitHub:\n \n-  <https://github.com/bitcoin/bitcoin/issues>\n+  <https://github.com/RavenProject/Ravencoin/issues>\n \n To receive security and update notifications, please subscribe to:\n \n-  <https://bitcoincore.org/en/list/announcements/join/>\n+  <https://ravencoin.org/en/list/announcements/join/>\n \n-Compatibility\n+How to Upgrade\n ==============\n \n-Bitcoin Core is extensively tested on multiple operating systems using\n-the Linux kernel, macOS 10.8+, and Windows Vista and later.\n+If you are running an older version, shut it down. Wait until it has completely\n+shut down (which might take a few minutes for older versions), then run the \n+installer (on Windows) or just copy over `/Applications/Raven-Qt` (on Mac)\n+or `ravend`/`raven-qt` (on Linux).\n+\n+The first time you run version 0.15.0, your chainstate database will be converted to a\n+new format, which will take anywhere from a few minutes to half an hour,\n+depending on the speed of your machine.\n+\n+Note that the block database format also changed in version 0.8.0 and there is no\n+automatic upgrade code from before version 0.8 to version 0.15.0. Upgrading\n+directly from 0.7.x and earlier without redownloading the blockchain is not supported.\n+However, as usual, old wallet versions are still supported.\n+\n+Downgrading warning\n+-------------------\n+\n+The chainstate database for this release is not compatible with previous\n+releases, so if you run 0.15 and then decide to switch back to any\n+older version, you will need to run the old release with the `-reindex-chainstate`\n+option to rebuild the chainstate data structures in the old format.\n+\n+If your node has pruning enabled, this will entail re-downloading and\n+processing the entire blockchain.\n+\n+Compatibility\n+==============\n \n-Microsoft ended support for Windows XP on [April 8th, 2014](https://www.microsoft.com/en-us/WindowsForBusiness/end-of-xp-support).\n-No attempt is made to prevent installing or running the software on Windows XP, you\n-can still do so at your own risk but be aware that there are known instabilities.\n-Please do not report issues about Windows XP to the issue tracker.\n+Raven Core is extensively tested on multiple operating systems using\n+the Linux kernel, macOS 10.8+, and Windows Vista and later. Windows XP is not supported.\n \n-Bitcoin Core should also work on most other Unix-like systems but is not\n+Raven Core should also work on most other Unix-like systems but is not\n frequently tested on them.\n \n Notable changes\n ===============\n \n-Low-level RPC changes\n+Miner block size limiting deprecated\n+------------------------------------\n+\n+Though blockmaxweight has been preferred for limiting the size of blocks returned by\n+getblocktemplate since 0.13.0, blockmaxsize remained as an option for those who wished\n+to limit their block size directly. Using this option resulted in a few UI issues as\n+well as non-optimal fee selection and ever-so-slightly worse performance, and has thus\n+now been deprecated. Further, the blockmaxsize option is now used only to calculate an\n+implied blockmaxweight, instead of limiting block size directly. Any miners who wish\n+to limit their blocks by size, instead of by weight, will have to do so manually by\n+removing transactions from their block template directly.\n+\n+HD-wallets by default\n ---------------------\n+Due to a backward-incompatible change in the wallet database, wallets created\n+with version 0.16.0 will be rejected by previous versions. Also, version 0.16.0\n+will only create hierarchical deterministic (HD) wallets.\n+\n+Low-level RPC changes\n+----------------------\n+- The \"currentblocksize\" value in getmininginfo has been removed.\n+- The deprecated RPC `getinfo` was removed. It is recommended that the more specific RPCs are used:\n+  * `getblockchaininfo`\n+  * `getnetworkinfo`\n+  * `getwalletinfo`\n+  * `getmininginfo`\n \n-- The new database model no longer stores information about transaction\n-  versions of unspent outputs. This means that:\n-  - The `gettxout` RPC no longer has a `version` field in the response.\n-  - The `gettxoutsetinfo` RPC reports `hash_serialized_2` instead of `hash_serialized`,\n-    which does not commit to the transaction versions of unspent outputs, but does\n-    commit to the height and coinbase information.\n-  - The `gettxoutsetinfo` response now contains `disk_size` and `bogosize` instead of\n-    `bytes_serialized`. The first is a more accurate estimate of actual disk usage, but\n-    is not deterministic. The second is unrelated to disk usage, but is a\n-    database-independent metric of UTXO set size: it counts every UTXO entry as 50 + the\n-    length of its scriptPubKey.\n-  - The `getutxos` REST path no longer reports the `txvers` field in JSON format,\n-    and always reports 0 for transaction versions in the binary format\n-\n-\n-- Error codes have been updated to be more accurate for the following error cases:\n-  - `getblock` now returns RPC_MISC_ERROR if the block can't be found on disk (for\n-  example if the block has been pruned). Previously returned RPC_INTERNAL_ERROR.\n-  - `pruneblockchain` now returns RPC_MISC_ERROR if the blocks cannot be pruned\n-  because the node is not in pruned mode. Previously returned RPC_METHOD_NOT_FOUND.\n-  - `pruneblockchain` now returns RPC_INVALID_PARAMETER if the blocks cannot be pruned\n-  because the supplied timestamp is too late. Previously returned RPC_INTERNAL_ERROR.\n-  - `pruneblockchain` now returns RPC_MISC_ERROR if the blocks cannot be pruned\n-  because the blockchain is too short. Previously returned RPC_INTERNAL_ERROR.\n-  - `setban` now returns RPC_CLIENT_INVALID_IP_OR_SUBNET if the supplied IP address\n-  or subnet is invalid. Previously returned RPC_CLIENT_NODE_ALREADY_ADDED.\n-  - `setban` now returns RPC_CLIENT_INVALID_IP_OR_SUBNET if the user tries to unban\n-  a node that has not previously been banned. Previously returned RPC_MISC_ERROR.\n-  - `removeprunedfunds` now returns RPC_WALLET_ERROR if bitcoind is unable to remove\n-  the transaction. Previously returned RPC_INTERNAL_ERROR.\n-  - `removeprunedfunds` now returns RPC_INVALID_PARAMETER if the transaction does not\n-  exist in the wallet. Previously returned RPC_INTERNAL_ERROR.\n-  - `fundrawtransaction` now returns RPC_INVALID_ADDRESS_OR_KEY if an invalid change\n-  address is provided. Previously returned RPC_INVALID_PARAMETER.\n-  - `fundrawtransaction` now returns RPC_WALLET_ERROR if bitcoind is unable to create\n-  the transaction. The error message provides further details. Previously returned\n-  RPC_INTERNAL_ERROR.\n-  - `bumpfee` now returns RPC_INVALID_PARAMETER if the provided transaction has\n-  descendants in the wallet. Previously returned RPC_MISC_ERROR.\n-  - `bumpfee` now returns RPC_INVALID_PARAMETER if the provided transaction has\n-  descendants in the mempool. Previously returned RPC_MISC_ERROR.\n-  - `bumpfee` now returns RPC_WALLET_ERROR if the provided transaction has\n-  has been mined or conflicts with a mined transaction. Previously returned\n-  RPC_INVALID_ADDRESS_OR_KEY.\n-  - `bumpfee` now returns RPC_WALLET_ERROR if the provided transaction is not\n-  BIP 125 replaceable. Previously returned RPC_INVALID_ADDRESS_OR_KEY.\n-  - `bumpfee` now returns RPC_WALLET_ERROR if the provided transaction has already\n-  been bumped by a different transaction. Previously returned RPC_INVALID_REQUEST.\n-  - `bumpfee` now returns RPC_WALLET_ERROR if the provided transaction contains\n-  inputs which don't belong to this wallet. Previously returned RPC_INVALID_ADDRESS_OR_KEY.\n-  - `bumpfee` now returns RPC_WALLET_ERROR if the provided transaction has multiple change\n-  outputs. Previously returned RPC_MISC_ERROR.\n-  - `bumpfee` now returns RPC_WALLET_ERROR if the provided transaction has no change\n-  output. Previously returned RPC_MISC_ERROR.\n-  - `bumpfee` now returns RPC_WALLET_ERROR if the fee is too high. Previously returned\n-  RPC_MISC_ERROR.\n-  - `bumpfee` now returns RPC_WALLET_ERROR if the fee is too low. Previously returned\n-  RPC_MISC_ERROR.\n-  - `bumpfee` now returns RPC_WALLET_ERROR if the change output is too small to bump the\n-  fee. Previously returned RPC_MISC_ERROR.\n+- `dumpwallet` no longer allows overwriting files. This is a security measure\n+  as well as prevents dangerous user mistakes.\n \n Credits\n =======\n \n Thanks to everyone who directly contributed to this release:\n \n \n-As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/).\n+As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/raven/)."
      },
      {
        "sha": "986b8832ec1893a5cc061ea14ac609e7836fbb4f",
        "filename": "doc/release-notes/release-notes-0.10.0.md",
        "status": "removed",
        "additions": 0,
        "deletions": 762,
        "changes": 762,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.10.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.10.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.10.0.md?ref=ddeacfcff563b602b8833287a34dfbee340e5bec",
        "patch": "@@ -1,762 +0,0 @@\n-Bitcoin Core version 0.10.0 is now available from:\n-\n-  https://bitcoin.org/bin/0.10.0/\n-\n-This is a new major version release, bringing both new features and\n-bug fixes.\n-\n-Please report bugs using the issue tracker at github:\n-\n-  https://github.com/bitcoin/bitcoin/issues\n-\n-Upgrading and downgrading\n-=========================\n-\n-How to Upgrade\n---------------\n-\n-If you are running an older version, shut it down. Wait until it has completely\n-shut down (which might take a few minutes for older versions), then run the\n-installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n-bitcoind/bitcoin-qt (on Linux).\n-\n-Downgrading warning\n----------------------\n-\n-Because release 0.10.0 makes use of headers-first synchronization and parallel\n-block download (see further), the block files and databases are not\n-backwards-compatible with older versions of Bitcoin Core or other software:\n-\n-* Blocks will be stored on disk out of order (in the order they are\n-received, really), which makes it incompatible with some tools or\n-other programs. Reindexing using earlier versions will also not work\n-anymore as a result of this.\n-\n-* The block index database will now hold headers for which no block is\n-stored on disk, which earlier versions won't support.\n-\n-If you want to be able to downgrade smoothly, make a backup of your entire data\n-directory. Without this your node will need start syncing (or importing from\n-bootstrap.dat) anew afterwards. It is possible that the data from a completely\n-synchronised 0.10 node may be usable in older versions as-is, but this is not\n-supported and may break as soon as the older version attempts to reindex.\n-\n-This does not affect wallet forward or backward compatibility.\n-\n-\n-Notable changes\n-===============\n-\n-Faster synchronization\n-----------------------\n-\n-Bitcoin Core now uses 'headers-first synchronization'. This means that we first\n-ask peers for block headers (a total of 27 megabytes, as of December 2014) and\n-validate those. In a second stage, when the headers have been discovered, we\n-download the blocks. However, as we already know about the whole chain in\n-advance, the blocks can be downloaded in parallel from all available peers.\n-\n-In practice, this means a much faster and more robust synchronization. On\n-recent hardware with a decent network link, it can be as little as 3 hours\n-for an initial full synchronization. You may notice a slower progress in the\n-very first few minutes, when headers are still being fetched and verified, but\n-it should gain speed afterwards.\n-\n-A few RPCs were added/updated as a result of this:\n-- `getblockchaininfo` now returns the number of validated headers in addition to\n-the number of validated blocks.\n-- `getpeerinfo` lists both the number of blocks and headers we know we have in\n-common with each peer. While synchronizing, the heights of the blocks that we\n-have requested from peers (but haven't received yet) are also listed as\n-'inflight'.\n-- A new RPC `getchaintips` lists all known branches of the block chain,\n-including those we only have headers for.\n-\n-Transaction fee changes\n------------------------\n-\n-This release automatically estimates how high a transaction fee (or how\n-high a priority) transactions require to be confirmed quickly. The default\n-settings will create transactions that confirm quickly; see the new\n-'txconfirmtarget' setting to control the tradeoff between fees and\n-confirmation times. Fees are added by default unless the 'sendfreetransactions' \n-setting is enabled.\n-\n-Prior releases used hard-coded fees (and priorities), and would\n-sometimes create transactions that took a very long time to confirm.\n-\n-Statistics used to estimate fees and priorities are saved in the\n-data directory in the `fee_estimates.dat` file just before\n-program shutdown, and are read in at startup.\n-\n-New command line options for transaction fee changes:\n-- `-txconfirmtarget=n` : create transactions that have enough fees (or priority)\n-so they are likely to begin confirmation within n blocks (default: 1). This setting\n-is over-ridden by the -paytxfee option.\n-- `-sendfreetransactions` : Send transactions as zero-fee transactions if possible \n-(default: 0)\n-\n-New RPC commands for fee estimation:\n-- `estimatefee nblocks` : Returns approximate fee-per-1,000-bytes needed for\n-a transaction to begin confirmation within nblocks. Returns -1 if not enough\n-transactions have been observed to compute a good estimate.\n-- `estimatepriority nblocks` : Returns approximate priority needed for\n-a zero-fee transaction to begin confirmation within nblocks. Returns -1 if not\n-enough free transactions have been observed to compute a good\n-estimate.\n-\n-RPC access control changes\n---------------------------\n-\n-Subnet matching for the purpose of access control is now done\n-by matching the binary network address, instead of with string wildcard matching.\n-For the user this means that `-rpcallowip` takes a subnet specification, which can be\n-\n-- a single IP address (e.g. `1.2.3.4` or `fe80::0012:3456:789a:bcde`)\n-- a network/CIDR (e.g. `1.2.3.0/24` or `fe80::0000/64`)\n-- a network/netmask (e.g. `1.2.3.4/255.255.255.0` or `fe80::0012:3456:789a:bcde/ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff`)\n-\n-An arbitrary number of `-rpcallow` arguments can be given. An incoming connection will be accepted if its origin address\n-matches one of them.\n-\n-For example:\n-\n-| 0.9.x and before                           | 0.10.x                                |\n-|--------------------------------------------|---------------------------------------|\n-| `-rpcallowip=192.168.1.1`                  | `-rpcallowip=192.168.1.1` (unchanged) |\n-| `-rpcallowip=192.168.1.*`                  | `-rpcallowip=192.168.1.0/24`          |\n-| `-rpcallowip=192.168.*`                    | `-rpcallowip=192.168.0.0/16`          |\n-| `-rpcallowip=*` (dangerous!)               | `-rpcallowip=::/0` (still dangerous!) |\n-\n-Using wildcards will result in the rule being rejected with the following error in debug.log:\n-\n-    Error: Invalid -rpcallowip subnet specification: *. Valid are a single IP (e.g. 1.2.3.4), a network/netmask (e.g. 1.2.3.4/255.255.255.0) or a network/CIDR (e.g. 1.2.3.4/24).\n-\n-\n-REST interface\n---------------\n-\n-A new HTTP API is exposed when running with the `-rest` flag, which allows\n-unauthenticated access to public node data.\n-\n-It is served on the same port as RPC, but does not need a password, and uses\n-plain HTTP instead of JSON-RPC.\n-\n-Assuming a local RPC server running on port 8332, it is possible to request:\n-- Blocks: http://localhost:8332/rest/block/*HASH*.*EXT*\n-- Blocks without transactions: http://localhost:8332/rest/block/notxdetails/*HASH*.*EXT*\n-- Transactions (requires `-txindex`): http://localhost:8332/rest/tx/*HASH*.*EXT*\n-\n-In every case, *EXT* can be `bin` (for raw binary data), `hex` (for hex-encoded\n-binary) or `json`.\n-\n-For more details, see the `doc/REST-interface.md` document in the repository.\n-\n-RPC Server \"Warm-Up\" Mode\n--------------------------\n-\n-The RPC server is started earlier now, before most of the expensive\n-intialisations like loading the block index.  It is available now almost\n-immediately after starting the process.  However, until all initialisations\n-are done, it always returns an immediate error with code -28 to all calls.\n-\n-This new behaviour can be useful for clients to know that a server is already\n-started and will be available soon (for instance, so that they do not\n-have to start it themselves).\n-\n-Improved signing security\n--------------------------\n-\n-For 0.10 the security of signing against unusual attacks has been\n-improved by making the signatures constant time and deterministic.\n-\n-This change is a result of switching signing to use libsecp256k1\n-instead of OpenSSL. Libsecp256k1 is a cryptographic library\n-optimized for the curve Bitcoin uses which was created by Bitcoin\n-Core developer Pieter Wuille.\n-\n-There exist attacks[1] against most ECC implementations where an\n-attacker on shared virtual machine hardware could extract a private\n-key if they could cause a target to sign using the same key hundreds\n-of times. While using shared hosts and reusing keys are inadvisable\n-for other reasons, it's a better practice to avoid the exposure.\n-\n-OpenSSL has code in their source repository for derandomization\n-and reduction in timing leaks that we've eagerly wanted to use for a\n-long time, but this functionality has still not made its\n-way into a released version of OpenSSL. Libsecp256k1 achieves\n-significantly stronger protection: As far as we're aware this is\n-the only deployed implementation of constant time signing for\n-the curve Bitcoin uses and we have reason to believe that\n-libsecp256k1 is better tested and more thoroughly reviewed\n-than the implementation in OpenSSL.\n-\n-[1] https://eprint.iacr.org/2014/161.pdf\n-\n-Watch-only wallet support\n--------------------------\n-\n-The wallet can now track transactions to and from wallets for which you know\n-all addresses (or scripts), even without the private keys.\n-\n-This can be used to track payments without needing the private keys online on a\n-possibly vulnerable system. In addition, it can help for (manual) construction\n-of multisig transactions where you are only one of the signers.\n-\n-One new RPC, `importaddress`, is added which functions similarly to\n-`importprivkey`, but instead takes an address or script (in hexadecimal) as\n-argument.  After using it, outputs credited to this address or script are\n-considered to be received, and transactions consuming these outputs will be\n-considered to be sent.\n-\n-The following RPCs have optional support for watch-only:\n-`getbalance`, `listreceivedbyaddress`, `listreceivedbyaccount`,\n-`listtransactions`, `listaccounts`, `listsinceblock`, `gettransaction`. See the\n-RPC documentation for those methods for more information.\n-\n-Compared to using `getrawtransaction`, this mechanism does not require\n-`-txindex`, scales better, integrates better with the wallet, and is compatible\n-with future block chain pruning functionality. It does mean that all relevant\n-addresses need to added to the wallet before the payment, though.\n-\n-Consensus library\n------------------\n-\n-Starting from 0.10.0, the Bitcoin Core distribution includes a consensus library.\n-\n-The purpose of this library is to make the verification functionality that is\n-critical to Bitcoin's consensus available to other applications, e.g. to language\n-bindings such as [python-bitcoinlib](https://pypi.python.org/pypi/python-bitcoinlib) or\n-alternative node implementations.\n-\n-This library is called `libbitcoinconsensus.so` (or, `.dll` for Windows).\n-Its interface is defined in the C header [bitcoinconsensus.h](https://github.com/bitcoin/bitcoin/blob/0.10/src/script/bitcoinconsensus.h).\n-\n-In its initial version the API includes two functions:\n-\n-- `bitcoinconsensus_verify_script` verifies a script. It returns whether the indicated input of the provided serialized transaction \n-correctly spends the passed scriptPubKey under additional constraints indicated by flags\n-- `bitcoinconsensus_version` returns the API version, currently at an experimental `0`\n-\n-The functionality is planned to be extended to e.g. UTXO management in upcoming releases, but the interface\n-for existing methods should remain stable.\n-\n-Standard script rules relaxed for P2SH addresses\n-------------------------------------------------\n-\n-The IsStandard() rules have been almost completely removed for P2SH\n-redemption scripts, allowing applications to make use of any valid\n-script type, such as \"n-of-m OR y\", hash-locked oracle addresses, etc.\n-While the Bitcoin protocol has always supported these types of script,\n-actually using them on mainnet has been previously inconvenient as\n-standard Bitcoin Core nodes wouldn't relay them to miners, nor would\n-most miners include them in blocks they mined.\n-\n-bitcoin-tx\n-----------\n-\n-It has been observed that many of the RPC functions offered by bitcoind are\n-\"pure functions\", and operate independently of the bitcoind wallet. This\n-included many of the RPC \"raw transaction\" API functions, such as\n-createrawtransaction.\n-\n-bitcoin-tx is a newly introduced command line utility designed to enable easy\n-manipulation of bitcoin transactions. A summary of its operation may be\n-obtained via \"bitcoin-tx --help\" Transactions may be created or signed in a\n-manner similar to the RPC raw tx API. Transactions may be updated, deleting\n-inputs or outputs, or appending new inputs and outputs. Custom scripts may be\n-easily composed using a simple text notation, borrowed from the bitcoin test\n-suite.\n-\n-This tool may be used for experimenting with new transaction types, signing\n-multi-party transactions, and many other uses. Long term, the goal is to\n-deprecate and remove \"pure function\" RPC API calls, as those do not require a\n-server round-trip to execute.\n-\n-Other utilities \"bitcoin-key\" and \"bitcoin-script\" have been proposed, making\n-key and script operations easily accessible via command line.\n-\n-Mining and relay policy enhancements\n-------------------------------------\n-\n-Bitcoin Core's block templates are now for version 3 blocks only, and any mining\n-software relying on its `getblocktemplate` must be updated in parallel to use\n-libblkmaker either version 0.4.2 or any version from 0.5.1 onward.\n-If you are solo mining, this will affect you the moment you upgrade Bitcoin\n-Core, which must be done prior to BIP66 achieving its 951/1001 status.\n-If you are mining with the stratum mining protocol: this does not affect you.\n-If you are mining with the getblocktemplate protocol to a pool: this will affect\n-you at the pool operator's discretion, which must be no later than BIP66\n-achieving its 951/1001 status.\n-\n-The `prioritisetransaction` RPC method has been added to enable miners to\n-manipulate the priority of transactions on an individual basis.\n-\n-Bitcoin Core now supports BIP 22 long polling, so mining software can be\n-notified immediately of new templates rather than having to poll periodically.\n-\n-Support for BIP 23 block proposals is now available in Bitcoin Core's\n-`getblocktemplate` method. This enables miners to check the basic validity of\n-their next block before expending work on it, reducing risks of accidental\n-hardforks or mining invalid blocks.\n-\n-Two new options to control mining policy:\n-- `-datacarrier=0/1` : Relay and mine \"data carrier\" (OP_RETURN) transactions\n-if this is 1.\n-- `-datacarriersize=n` : Maximum size, in bytes, we consider acceptable for\n-\"data carrier\" outputs.\n-\n-The relay policy has changed to more properly implement the desired behavior of not \n-relaying free (or very low fee) transactions unless they have a priority above the \n-AllowFreeThreshold(), in which case they are relayed subject to the rate limiter.\n-\n-BIP 66: strict DER encoding for signatures\n-------------------------------------------\n-\n-Bitcoin Core 0.10 implements BIP 66, which introduces block version 3, and a new\n-consensus rule, which prohibits non-DER signatures. Such transactions have been\n-non-standard since Bitcoin v0.8.0 (released in February 2013), but were\n-technically still permitted inside blocks.\n-\n-This change breaks the dependency on OpenSSL's signature parsing, and is\n-required if implementations would want to remove all of OpenSSL from the\n-consensus code.\n-\n-The same miner-voting mechanism as in BIP 34 is used: when 751 out of a\n-sequence of 1001 blocks have version number 3 or higher, the new consensus\n-rule becomes active for those blocks. When 951 out of a sequence of 1001\n-blocks have version number 3 or higher, it becomes mandatory for all blocks.\n-\n-Backward compatibility with current mining software is NOT provided, thus miners\n-should read the first paragraph of \"Mining and relay policy enhancements\" above.\n-\n-0.10.0 Change log\n-=================\n-\n-Detailed release notes follow. This overview includes changes that affect external\n-behavior, not code moves, refactors or string updates.\n-\n-RPC:\n-- `f923c07` Support IPv6 lookup in bitcoin-cli even when IPv6 only bound on localhost\n-- `b641c9c` Fix addnode \"onetry\": Connect with OpenNetworkConnection\n-- `171ca77` estimatefee / estimatepriority RPC methods\n-- `b750cf1` Remove cli functionality from bitcoind\n-- `f6984e8` Add \"chain\" to getmininginfo, improve help in getblockchaininfo\n-- `99ddc6c` Add nLocalServices info to RPC getinfo\n-- `cf0c47b` Remove getwork() RPC call\n-- `2a72d45` prioritisetransaction <txid> <priority delta> <priority tx fee>\n-- `e44fea5` Add an option `-datacarrier` to allow users to disable relaying/mining data carrier transactions\n-- `2ec5a3d` Prevent easy RPC memory exhaustion attack\n-- `d4640d7` Added argument to getbalance to include watchonly addresses and fixed errors in balance calculation\n-- `83f3543` Added argument to listaccounts to include watchonly addresses\n-- `952877e` Showing 'involvesWatchonly' property for transactions returned by 'listtransactions' and 'listsinceblock'. It is only appended when the transaction involves a watchonly address\n-- `d7d5d23` Added argument to listtransactions and listsinceblock to include watchonly addresses\n-- `f87ba3d` added includeWatchonly argument to 'gettransaction' because it affects balance calculation\n-- `0fa2f88` added includedWatchonly argument to listreceivedbyaddress/...account\n-- `6c37f7f` `getrawchangeaddress`: fail when keypool exhausted and wallet locked\n-- `ff6a7af` getblocktemplate: longpolling support\n-- `c4a321f` Add peerid to getpeerinfo to allow correlation with the logs\n-- `1b4568c` Add vout to ListTransactions output\n-- `b33bd7a` Implement \"getchaintips\" RPC command to monitor blockchain forks\n-- `733177e` Remove size limit in RPC client, keep it in server\n-- `6b5b7cb` Categorize rpc help overview\n-- `6f2c26a` Closely track mempool byte total. Add \"getmempoolinfo\" RPC\n-- `aa82795` Add detailed network info to getnetworkinfo RPC\n-- `01094bd` Don't reveal whether password is <20 or >20 characters in RPC\n-- `57153d4` rpc: Compute number of confirmations of a block from block height\n-- `ff36cbe` getnetworkinfo: export local node's client sub-version string\n-- `d14d7de` SanitizeString: allow '(' and ')'\n-- `31d6390` Fixed setaccount accepting foreign address\n-- `b5ec5fe` update getnetworkinfo help with subversion\n-- `ad6e601` RPC additions after headers-first\n-- `33dfbf5` rpc: Fix leveldb iterator leak, and flush before `gettxoutsetinfo`\n-- `2aa6329` Enable customising node policy for datacarrier data size with a -datacarriersize option\n-- `f877aaa` submitblock: Use a temporary CValidationState to determine accurately the outcome of ProcessBlock\n-- `e69a587` submitblock: Support for returning specific rejection reasons\n-- `af82884` Add \"warmup mode\" for RPC server\n-- `e2655e0` Add unauthenticated HTTP REST interface to public blockchain data\n-- `683dc40` Disable SSLv3 (in favor of TLS) for the RPC client and server\n-- `44b4c0d` signrawtransaction: validate private key\n-- `9765a50` Implement BIP 23 Block Proposal\n-- `f9de17e` Add warning comment to getinfo\n-\n-Command-line options:\n-- `ee21912` Use netmasks instead of wildcards for IP address matching\n-- `deb3572` Add `-rpcbind` option to allow binding RPC port on a specific interface\n-- `96b733e` Add `-version` option to get just the version\n-- `1569353` Add `-stopafterblockimport` option\n-- `77cbd46` Let -zapwallettxes recover transaction meta data\n-- `1c750db` remove -tor compatibility code (only allow -onion)\n-- `4aaa017` rework help messages for fee-related options\n-- `4278b1d` Clarify error message when invalid -rpcallowip\n-- `6b407e4` -datadir is now allowed in config files\n-- `bdd5b58` Add option `-sysperms` to disable 077 umask (create new files with system default umask)\n-- `cbe39a3` Add \"bitcoin-tx\" command line utility and supporting modules\n-- `dbca89b` Trigger -alertnotify if network is upgrading without you\n-- `ad96e7c` Make -reindex cope with out-of-order blocks\n-- `16d5194` Skip reindexed blocks individually\n-- `ec01243` --tracerpc option for regression tests\n-- `f654f00` Change -genproclimit default to 1\n-- `3c77714` Make -proxy set all network types, avoiding a connect leak\n-- `57be955` Remove -printblock, -printblocktree, and -printblockindex\n-- `ad3d208` remove -maxorphanblocks config parameter since it is no longer functional\n-\n-Block and transaction handling:\n-- `7a0e84d` ProcessGetData(): abort if a block file is missing from disk\n-- `8c93bf4` LoadBlockIndexDB(): Require block db reindex if any `blk*.dat` files are missing\n-- `77339e5` Get rid of the static chainMostWork (optimization)\n-- `4e0eed8` Allow ActivateBestChain to release its lock on cs_main\n-- `18e7216` Push cs_mains down in ProcessBlock\n-- `fa126ef` Avoid undefined behavior using CFlatData in CScript serialization\n-- `7f3b4e9` Relax IsStandard rules for pay-to-script-hash transactions\n-- `c9a0918` Add a skiplist to the CBlockIndex structure\n-- `bc42503` Use unordered_map for CCoinsViewCache with salted hash (optimization)\n-- `d4d3fbd` Do not flush the cache after every block outside of IBD (optimization)\n-- `ad08d0b` Bugfix: make CCoinsViewMemPool support pruned entries in underlying cache\n-- `5734d4d` Only remove actualy failed blocks from setBlockIndexValid\n-- `d70bc52` Rework block processing benchmark code\n-- `714a3e6` Only keep setBlockIndexValid entries that are possible improvements\n-- `ea100c7` Reduce maximum coinscache size during verification (reduce memory usage)\n-- `4fad8e6` Reject transactions with excessive numbers of sigops\n-- `b0875eb` Allow BatchWrite to destroy its input, reducing copying (optimization)\n-- `92bb6f2` Bypass reloading blocks from disk (optimization)\n-- `2e28031` Perform CVerifyDB on pcoinsdbview instead of pcoinsTip (reduce memory usage)\n-- `ab15b2e` Avoid copying undo data (optimization)\n-- `341735e` Headers-first synchronization\n-- `afc32c5` Fix rebuild-chainstate feature and improve its performance\n-- `e11b2ce` Fix large reorgs\n-- `ed6d1a2` Keep information about all block files in memory\n-- `a48f2d6` Abstract context-dependent block checking from acceptance\n-- `7e615f5` Fixed mempool sync after sending a transaction\n-- `51ce901` Improve chainstate/blockindex disk writing policy\n-- `a206950` Introduce separate flushing modes\n-- `9ec75c5` Add a locking mechanism to IsInitialBlockDownload to ensure it never goes from false to true\n-- `868d041` Remove coinbase-dependant transactions during reorg\n-- `723d12c` Remove txn which are invalidated by coinbase maturity during reorg\n-- `0cb8763` Check against MANDATORY flags prior to accepting to mempool\n-- `8446262` Reject headers that build on an invalid parent\n-- `008138c` Bugfix: only track UTXO modification after lookup\n-\n-P2P protocol and network code:\n-- `f80cffa` Do not trigger a DoS ban if SCRIPT_VERIFY_NULLDUMMY fails\n-- `c30329a` Add testnet DNS seed of Alex Kotenko\n-- `45a4baf` Add testnet DNS seed of Andreas Schildbach\n-- `f1920e8` Ping automatically every 2 minutes (unconditionally)\n-- `806fd19` Allocate receive buffers in on the fly\n-- `6ecf3ed` Display unknown commands received\n-- `aa81564` Track peers' available blocks\n-- `caf6150` Use async name resolving to improve net thread responsiveness\n-- `9f4da19` Use pong receive time rather than processing time\n-- `0127a9b` remove SOCKS4 support from core and GUI, use SOCKS5\n-- `40f5cb8` Send rejects and apply DoS scoring for errors in direct block validation\n-- `dc942e6` Introduce whitelisted peers\n-- `c994d2e` prevent SOCKET leak in BindListenPort()\n-- `a60120e` Add built-in seeds for .onion\n-- `60dc8e4` Allow -onlynet=onion to be used\n-- `3a56de7` addrman: Do not propagate obviously poor addresses onto the network\n-- `6050ab6` netbase: Make SOCKS5 negotiation interruptible\n-- `604ee2a` Remove tx from AlreadyAskedFor list once we receive it, not when we process it\n-- `efad808` Avoid reject message feedback loops\n-- `71697f9` Separate protocol versioning from clientversion\n-- `20a5f61` Don't relay alerts to peers before version negotiation\n-- `b4ee0bd` Introduce preferred download peers\n-- `845c86d` Do not use third party services for IP detection\n-- `12a49ca` Limit the number of new addressses to accumulate\n-- `35e408f` Regard connection failures as attempt for addrman\n-- `a3a7317` Introduce 10 minute block download timeout\n-- `3022e7d` Require sufficent priority for relay of free transactions\n-- `58fda4d` Update seed IPs, based on bitcoin.sipa.be crawler data\n-- `18021d0` Remove bitnodes.io from dnsseeds.\n-\n-Validation:\n-- `6fd7ef2` Also switch the (unused) verification code to low-s instead of even-s\n-- `584a358` Do merkle root and txid duplicates check simultaneously\n-- `217a5c9` When transaction outputs exceed inputs, show the offending amounts so as to aid debugging\n-- `f74fc9b` Print input index when signature validation fails, to aid debugging\n-- `6fd59ee` script.h: set_vch() should shift a >32 bit value\n-- `d752ba8` Add SCRIPT_VERIFY_SIGPUSHONLY (BIP62 rule 2) (test only)\n-- `698c6ab` Add SCRIPT_VERIFY_MINIMALDATA (BIP62 rules 3 and 4) (test only)\n-- `ab9edbd` script: create sane error return codes for script validation and remove logging\n-- `219a147` script: check ScriptError values in script tests\n-- `0391423` Discourage NOPs reserved for soft-fork upgrades\n-- `98b135f` Make STRICTENC invalid pubkeys fail the script rather than the opcode\n-- `307f7d4` Report script evaluation failures in log and reject messages\n-- `ace39db` consensus: guard against openssl's new strict DER checks\n-- `12b7c44` Improve robustness of DER recoding code\n-- `76ce5c8` fail immediately on an empty signature\n-\n-Build system:\n-- `f25e3ad` Fix build in OS X 10.9\n-- `65e8ba4` build: Switch to non-recursive make\n-- `460b32d` build: fix broken boost chrono check on some platforms\n-- `9ce0774` build: Fix windows configure when using --with-qt-libdir\n-- `ea96475` build: Add mention of --disable-wallet to bdb48 error messages\n-- `1dec09b` depends: add shared dependency builder\n-- `c101c76` build: Add --with-utils (bitcoin-cli and bitcoin-tx, default=yes). Help string consistency tweaks. Target sanity check fix\n-- `e432a5f` build: add option for reducing exports (v2)\n-- `6134b43` Fixing condition 'sabotaging' MSVC build\n-- `af0bd5e` osx: fix signing to make Gatekeeper happy (again)\n-- `a7d1f03` build: fix dynamic boost check when --with-boost= is used\n-- `d5fd094` build: fix qt test build when libprotobuf is in a non-standard path\n-- `2cf5f16` Add libbitcoinconsensus library\n-- `914868a` build: add a deterministic dmg signer \n-- `2d375fe` depends: bump openssl to 1.0.1k\n-- `b7a4ecc` Build: Only check for boost when building code that requires it\n-\n-Wallet:\n-- `b33d1f5` Use fee/priority estimates in wallet CreateTransaction\n-- `4b7b1bb` Sanity checks for estimates\n-- `c898846` Add support for watch-only addresses\n-- `d5087d1` Use script matching rather than destination matching for watch-only\n-- `d88af56` Fee fixes\n-- `a35b55b` Dont run full check every time we decrypt wallet\n-- `3a7c348` Fix make_change to not create half-satoshis\n-- `f606bb9` fix a possible memory leak in CWalletDB::Recover\n-- `870da77` fix possible memory leaks in CWallet::EncryptWallet\n-- `ccca27a` Watch-only fixes\n-- `9b1627d` [Wallet] Reduce minTxFee for transaction creation to 1000 satoshis\n-- `a53fd41` Deterministic signing\n-- `15ad0b5` Apply AreSane() checks to the fees from the network\n-- `11855c1` Enforce minRelayTxFee on wallet created tx and add a maxtxfee option\n-\n-GUI:\n-- `c21c74b` osx: Fix missing dock menu with qt5\n-- `b90711c` Fix Transaction details shows wrong To:\n-- `516053c` Make links in 'About Bitcoin Core' clickable\n-- `bdc83e8` Ensure payment request network matches client network\n-- `65f78a1` Add GUI view of peer information\n-- `06a91d9` VerifyDB progress reporting\n-- `fe6bff2` Add BerkeleyDB version info to RPCConsole\n-- `b917555` PeerTableModel: Fix potential deadlock. #4296\n-- `dff0e3b` Improve rpc console history behavior\n-- `95a9383` Remove CENT-fee-rule from coin control completely\n-- `56b07d2` Allow setting listen via GUI\n-- `d95ba75` Log messages with type>QtDebugMsg as non-debug\n-- `8969828` New status bar Unit Display Control and related changes\n-- `674c070` seed OpenSSL PNRG with Windows event data\n-- `509f926` Payment request parsing on startup now only changes network if a valid network name is specified\n-- `acd432b` Prevent balloon-spam after rescan\n-- `7007402` Implement SI-style (thin space) thoudands separator\n-- `91cce17` Use fixed-point arithmetic in amount spinbox\n-- `bdba2dd` Remove an obscure option no-one cares about\n-- `bd0aa10` Replace the temporary file hack currently used to change Bitcoin-Qt's dock icon (OS X) with a buffer-based solution\n-- `94e1b9e` Re-work overviewpage UI\n-- `8bfdc9a` Better looking trayicon\n-- `b197bf3` disable tray interactions when client model set to 0\n-- `1c5f0af` Add column Watch-only to transactions list\n-- `21f139b` Fix tablet crash. closes #4854\n-- `e84843c` Broken addresses on command line no longer trigger testnet\n-- `a49f11d` Change splash screen to normal window\n-- `1f9be98` Disable App Nap on OSX 10.9+\n-- `27c3e91` Add proxy to options overridden if necessary\n-- `4bd1185` Allow \"emergency\" shutdown during startup\n-- `d52f072` Don't show wallet options in the preferences menu when running with -disablewallet\n-- `6093aa1` Qt: QProgressBar CPU-Issue workaround\n-- `0ed9675` [Wallet] Add global boolean whether to send free transactions (default=true)\n-- `ed3e5e4` [Wallet] Add global boolean whether to pay at least the custom fee (default=true)\n-- `e7876b2` [Wallet] Prevent user from paying a non-sense fee\n-- `c1c9d5b` Add Smartfee to GUI\n-- `e0a25c5` Make askpassphrase dialog behave more sanely\n-- `94b362d` On close of splashscreen interrupt verifyDB\n-- `b790d13` English translation update\n-- `8543b0d` Correct tooltip on address book page\n-\n-Tests:\n-- `b41e594` Fix script test handling of empty scripts\n-- `d3a33fc` Test CHECKMULTISIG with m == 0 and n == 0\n-- `29c1749` Let tx (in)valid tests use any SCRIPT_VERIFY flag\n-- `6380180` Add rejection of non-null CHECKMULTISIG dummy values\n-- `21bf3d2` Add tests for BoostAsioToCNetAddr\n-- `b5ad5e7` Add Python test for -rpcbind and -rpcallowip\n-- `9ec0306` Add CODESEPARATOR/FindAndDelete() tests\n-- `75ebced` Added many rpc wallet tests\n-- `0193fb8` Allow multiple regression tests to run at once\n-- `92a6220` Hook up sanity checks\n-- `3820e01` Extend and move all crypto tests to crypto_tests.cpp\n-- `3f9a019` added list/get received by address/ account tests\n-- `a90689f` Remove timing-based signature cache unit test\n-- `236982c` Add skiplist unit tests\n-- `f4b00be` Add CChain::GetLocator() unit test\n-- `b45a6e8` Add test for getblocktemplate longpolling\n-- `cdf305e` Set -discover=0 in regtest framework\n-- `ed02282` additional test for OP_SIZE in script_valid.json\n-- `0072d98` script tests: BOOLAND, BOOLOR decode to integer\n-- `833ff16` script tests: values that overflow to 0 are true\n-- `4cac5db` script tests: value with trailing 0x00 is true\n-- `89101c6` script test: test case for 5-byte bools\n-- `d2d9dc0` script tests: add tests for CHECKMULTISIG limits\n-- `d789386` Add \"it works\" test for bitcoin-tx\n-- `df4d61e` Add bitcoin-tx tests\n-- `aa41ac2` Test IsPushOnly() with invalid push\n-- `6022b5d` Make `script_{valid,invalid}.json` validation flags configurable\n-- `8138cbe` Add automatic script test generation, and actual checksig tests\n-- `ed27e53` Add coins_tests with a large randomized CCoinViewCache test\n-- `9df9cf5` Make SCRIPT_VERIFY_STRICTENC compatible with BIP62\n-- `dcb9846` Extend getchaintips RPC test\n-- `554147a` Ensure MINIMALDATA invalid tests can only fail one way\n-- `dfeec18` Test every numeric-accepting opcode for correct handling of the numeric minimal encoding rule\n-- `2b62e17` Clearly separate PUSHDATA and numeric argument MINIMALDATA tests\n-- `16d78bd` Add valid invert of invalid every numeric opcode tests\n-- `f635269` tests: enable alertnotify test for Windows\n-- `7a41614` tests: allow rpc-tests to get filenames for bitcoind and bitcoin-cli from the environment\n-- `5122ea7` tests: fix forknotify.py on windows\n-- `fa7f8cd` tests: remove old pull-tester scripts\n-- `7667850` tests: replace the old (unused since Travis) tests with new rpc test scripts\n-- `f4e0aef` Do signature-s negation inside the tests\n-- `1837987` Optimize -regtest setgenerate block generation\n-- `2db4c8a` Fix node ranges in the test framework\n-- `a8b2ce5` regression test only setmocktime RPC call\n-- `daf03e7` RPC tests: create initial chain with specific timestamps\n-- `8656dbb` Port/fix txnmall.sh regression test\n-- `ca81587` Test the exact order of CHECKMULTISIG sig/pubkey evaluation\n-- `7357893` Prioritize and display -testsafemode status in UI\n-- `f321d6b` Add key generation/verification to ECC sanity check\n-- `132ea9b` miner_tests: Disable checkpoints so they don't fail the subsidy-change test\n-- `bc6cb41` QA RPC tests: Add tests block block proposals\n-- `f67a9ce` Use deterministically generated script tests\n-- `11d7a7d` [RPC] add rpc-test for http keep-alive (persistent connections)\n-- `34318d7` RPC-test based on invalidateblock for mempool coinbase spends\n-- `76ec867` Use actually valid transactions for script tests\n-- `c8589bf` Add actual signature tests\n-- `e2677d7` Fix smartfees test for change to relay policy\n-- `263b65e` tests: run sanity checks in tests too\n-\n-Miscellaneous:\n-- `122549f` Fix incorrect checkpoint data for testnet3\n-- `5bd02cf` Log used config file to debug.log on startup\n-- `68ba85f` Updated Debian example bitcoin.conf with config from wiki + removed some cruft and updated comments\n-- `e5ee8f0` Remove -beta suffix\n-- `38405ac` Add comment regarding experimental-use service bits\n-- `be873f6` Issue warning if collecting RandSeed data failed\n-- `8ae973c` Allocate more space if necessary in RandSeedAddPerfMon\n-- `675bcd5` Correct comment for 15-of-15 p2sh script size\n-- `fda3fed` libsecp256k1 integration\n-- `2e36866` Show nodeid instead of addresses in log (for anonymity) unless otherwise requested\n-- `cd01a5e` Enable paranoid corruption checks in LevelDB >= 1.16\n-- `9365937` Add comment about never updating nTimeOffset past 199 samples\n-- `403c1bf` contrib: remove getwork-based pyminer (as getwork API call has been removed)\n-- `0c3e101` contrib: Added systemd .service file in order to help distributions integrate bitcoind\n-- `0a0878d` doc: Add new DNSseed policy\n-- `2887bff` Update coding style and add .clang-format\n-- `5cbda4f` Changed LevelDB cursors to use scoped pointers to ensure destruction when going out of scope\n-- `b4a72a7` contrib/linearize: split output files based on new-timestamp-year or max-file-size\n-- `e982b57` Use explicit fflush() instead of setvbuf()\n-- `234bfbf` contrib: Add init scripts and docs for Upstart and OpenRC\n-- `01c2807` Add warning about the merkle-tree algorithm duplicate txid flaw\n-- `d6712db` Also create pid file in non-daemon mode\n-- `772ab0e` contrib: use batched JSON-RPC in linarize-hashes (optimization)\n-- `7ab4358` Update bash-completion for v0.10\n-- `6e6a36c` contrib: show pull # in prompt for github-merge script\n-- `5b9f842` Upgrade leveldb to 1.18, make chainstate databases compatible between ARM and x86 (issue #2293)\n-- `4e7c219` Catch UTXO set read errors and shutdown\n-- `867c600` Catch LevelDB errors during flush\n-- `06ca065` Fix CScriptID(const CScript& in) in empty script case\n-\n-Credits\n-=======\n-\n-Thanks to everyone who contributed to this release:\n-\n-- 21E14\n-- Adam Weiss\n-- Aitor Pazos\n-- Alexander Jeng\n-- Alex Morcos\n-- Alon Muroch\n-- Andreas Schildbach\n-- Andrew Poelstra\n-- Andy Alness\n-- Ashley Holman\n-- Benedict Chan\n-- Ben Holden-Crowther\n-- Bryan Bishop\n-- BtcDrak\n-- Christian von Roques\n-- Clinton Christian\n-- Cory Fields\n-- Cozz Lovan\n-- daniel\n-- Daniel Kraft\n-- David Hill\n-- Derek701\n-- dexX7\n-- dllud\n-- Dominyk Tiller\n-- Doug\n-- elichai\n-- elkingtowa\n-- ENikS\n-- Eric Shaw\n-- Federico Bond\n-- Francis GASCHET\n-- Gavin Andresen\n-- Giuseppe Mazzotta\n-- Glenn Willen\n-- Gregory Maxwell\n-- gubatron\n-- HarryWu\n-- himynameismartin\n-- Huang Le\n-- Ian Carroll\n-- imharrywu\n-- Jameson Lopp\n-- Janusz Lenar\n-- JaSK\n-- Jeff Garzik\n-- JL2035\n-- Johnathan Corgan\n-- Jonas Schnelli\n-- jtimon\n-- Julian Haight\n-- Kamil Domanski\n-- kazcw\n-- kevin\n-- kiwigb\n-- Kosta Zertsekel\n-- LongShao007\n-- Luke Dashjr\n-- Mark Friedenbach\n-- Mathy Vanvoorden\n-- Matt Corallo\n-- Matthew Bogosian\n-- Micha\n-- Michael Ford\n-- Mike Hearn\n-- mrbandrews\n-- mruddy\n-- ntrgn\n-- Otto Allmendinger\n-- paveljanik\n-- Pavel Vasin\n-- Peter Todd\n-- phantomcircuit\n-- Philip Kaufmann\n-- Pieter Wuille\n-- pryds\n-- randy-waterhouse\n-- R E Broadley\n-- Rose Toomey\n-- Ross Nicoll\n-- Roy Badami\n-- Ruben Dario Ponticelli\n-- Rune K. Svendsen\n-- Ryan X. Charles\n-- Saivann\n-- sandakersmann\n-- SergioDemianLerner\n-- shshshsh\n-- sinetek\n-- Stuart Cardall\n-- Suhas Daftuar\n-- Tawanda Kembo\n-- Teran McKinney\n-- tm314159\n-- Tom Harding\n-- Trevin Hofmann\n-- Whit J\n-- Wladimir J. van der Laan\n-- Yoichi Hirai\n-- Zak Wilcox\n-\n-As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/).\n-"
      },
      {
        "sha": "8f59f1f68c6905f9435b04bd029d3beef2a1f1e8",
        "filename": "doc/release-notes/release-notes-0.10.1.md",
        "status": "removed",
        "additions": 0,
        "deletions": 143,
        "changes": 143,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.10.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.10.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.10.1.md?ref=ddeacfcff563b602b8833287a34dfbee340e5bec",
        "patch": "@@ -1,143 +0,0 @@\n-Bitcoin Core version 0.10.1 is now available from:\n-\n-  <https://bitcoin.org/bin/bitcoin-core-0.10.1/>\n-\n-This is a new minor version release, bringing bug fixes and translation \n-updates. It is recommended to upgrade to this version.\n-\n-Please report bugs using the issue tracker at github:\n-\n-  <https://github.com/bitcoin/bitcoin/issues>\n-\n-Upgrading and downgrading\n-=========================\n-\n-How to Upgrade\n---------------\n-\n-If you are running an older version, shut it down. Wait until it has completely\n-shut down (which might take a few minutes for older versions), then run the\n-installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n-bitcoind/bitcoin-qt (on Linux).\n-\n-Downgrade warning\n-------------------\n-\n-Because release 0.10.0 and later makes use of headers-first synchronization and\n-parallel block download (see further), the block files and databases are not\n-backwards-compatible with pre-0.10 versions of Bitcoin Core or other software:\n-\n-* Blocks will be stored on disk out of order (in the order they are\n-received, really), which makes it incompatible with some tools or\n-other programs. Reindexing using earlier versions will also not work\n-anymore as a result of this.\n-\n-* The block index database will now hold headers for which no block is\n-stored on disk, which earlier versions won't support.\n-\n-If you want to be able to downgrade smoothly, make a backup of your entire data\n-directory. Without this your node will need start syncing (or importing from\n-bootstrap.dat) anew afterwards. It is possible that the data from a completely\n-synchronised 0.10 node may be usable in older versions as-is, but this is not\n-supported and may break as soon as the older version attempts to reindex.\n-\n-This does not affect wallet forward or backward compatibility.\n-\n-Notable changes\n-===============\n-\n-This is a minor release and hence there are no notable changes.\n-For the notable changes in 0.10, refer to the release notes for the\n-0.10.0 release at https://github.com/bitcoin/bitcoin/blob/v0.10.0/doc/release-notes.md\n-\n-0.10.1 Change log\n-=================\n-\n-Detailed release notes follow. This overview includes changes that affect external\n-behavior, not code moves, refactors or string updates.\n-\n-RPC:\n-- `7f502be` fix crash: createmultisig and addmultisigaddress\n-- `eae305f` Fix missing lock in submitblock\n-\n-Block (database) and transaction handling:\n-- `1d2cdd2` Fix InvalidateBlock to add chainActive.Tip to setBlockIndexCandidates\n-- `c91c660` fix InvalidateBlock to repopulate setBlockIndexCandidates\n-- `002c8a2` fix possible block db breakage during re-index\n-- `a1f425b` Add (optional) consistency check for the block chain data structures\n-- `1c62e84` Keep mempool consistent during block-reorgs\n-- `57d1f46` Fix CheckBlockIndex for reindex\n-- `bac6fca` Set nSequenceId when a block is fully linked\n-\n-P2P protocol and network code:\n-- `78f64ef` don't trickle for whitelisted nodes\n-- `ca301bf` Reduce fingerprinting through timestamps in 'addr' messages.\n-- `200f293` Ignore getaddr messages on Outbound connections.\n-- `d5d8998` Limit message sizes before transfer\n-- `aeb9279` Better fingerprinting protection for non-main-chain getdatas.\n-- `cf0218f` Make addrman's bucket placement deterministic (countermeasure 1 against eclipse attacks, see http://cs-people.bu.edu/heilman/eclipse/)\n-- `0c6f334` Always use a 50% chance to choose between tried and new entries (countermeasure 2 against eclipse attacks)\n-- `214154e` Do not bias outgoing connections towards fresh addresses (countermeasure 2 against eclipse attacks)\n-- `aa587d4` Scale up addrman (countermeasure 6 against eclipse attacks)\n-- `139cd81` Cap nAttempts penalty at 8 and switch to pow instead of a division loop\n-\n-Validation:\n-- `d148f62` Acquire CCheckQueue's lock to avoid race condition\n-\n-Build system:\n-- `8752b5c` 0.10 fix for crashes on OSX 10.6\n-\n-Wallet:\n-- N/A\n-\n-GUI:\n-- `2c08406` some mac specifiy cleanup (memory handling, unnecessary code)\n-- `81145a6` fix OSX dock icon window reopening\n-- `786cf72` fix a issue where \"command line options\"-action overwrite \"Preference\"-action (on OSX)\n-\n-Tests:\n-- `1117378` add RPC test for InvalidateBlock\n-\n-Miscellaneous:\n-- `c9e022b` Initialization: set Boost path locale in main thread\n-- `23126a0` Sanitize command strings before logging them.\n-- `323de27` Initialization: setup environment before starting Qt tests\n-- `7494e09` Initialization: setup environment before starting tests\n-- `df45564` Initialization: set fallback locale as environment variable\n-\n-Credits\n-=======\n-\n-Thanks to everyone who directly contributed to this release:\n-\n-- Alex Morcos\n-- Cory Fields\n-- dexX7\n-- fsb4000\n-- Gavin Andresen\n-- Gregory Maxwell\n-- Ivan Pustogarov\n-- Jonas Schnelli\n-- Matt Corallo\n-- mrbandrews\n-- Pieter Wuille\n-- Ruben de Vries\n-- Suhas Daftuar\n-- Wladimir J. van der Laan\n-\n-And all those who contributed additional code review and/or security research:\n-- 21E14\n-- Alison Kendler\n-- Aviv Zohar\n-- Ethan Heilman\n-- Evil-Knievel\n-- fanquake\n-- Jeff Garzik\n-- Jonas Nick\n-- Luke Dashjr\n-- Patrick Strateman\n-- Philip Kaufmann\n-- Sergio Demian Lerner\n-- Sharon Goldberg\n-\n-As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/)."
      },
      {
        "sha": "192ed69d299811b8b662f28905f73479266be820",
        "filename": "doc/release-notes/release-notes-0.10.2.md",
        "status": "removed",
        "additions": 0,
        "deletions": 86,
        "changes": 86,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.10.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.10.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.10.2.md?ref=ddeacfcff563b602b8833287a34dfbee340e5bec",
        "patch": "@@ -1,86 +0,0 @@\n-Bitcoin Core version 0.10.2 is now available from:\n-\n-  <https://bitcoin.org/bin/bitcoin-core-0.10.2/>\n-\n-This is a new minor version release, bringing minor bug fixes and translation \n-updates. It is recommended to upgrade to this version.\n-\n-Please report bugs using the issue tracker at github:\n-\n-  <https://github.com/bitcoin/bitcoin/issues>\n-\n-Upgrading and downgrading\n-=========================\n-\n-How to Upgrade\n---------------\n-\n-If you are running an older version, shut it down. Wait until it has completely\n-shut down (which might take a few minutes for older versions), then run the\n-installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n-bitcoind/bitcoin-qt (on Linux).\n-\n-Downgrade warning\n-------------------\n-\n-Because release 0.10.0 and later makes use of headers-first synchronization and\n-parallel block download (see further), the block files and databases are not\n-backwards-compatible with pre-0.10 versions of Bitcoin Core or other software:\n-\n-* Blocks will be stored on disk out of order (in the order they are\n-received, really), which makes it incompatible with some tools or\n-other programs. Reindexing using earlier versions will also not work\n-anymore as a result of this.\n-\n-* The block index database will now hold headers for which no block is\n-stored on disk, which earlier versions won't support.\n-\n-If you want to be able to downgrade smoothly, make a backup of your entire data\n-directory. Without this your node will need start syncing (or importing from\n-bootstrap.dat) anew afterwards. It is possible that the data from a completely\n-synchronised 0.10 node may be usable in older versions as-is, but this is not\n-supported and may break as soon as the older version attempts to reindex.\n-\n-This does not affect wallet forward or backward compatibility.\n-\n-Notable changes\n-===============\n-\n-This fixes a serious problem on Windows with data directories that have non-ASCII\n-characters (https://github.com/bitcoin/bitcoin/issues/6078).\n-\n-For other platforms there are no notable changes.\n-\n-For the notable changes in 0.10, refer to the release notes\n-at https://github.com/bitcoin/bitcoin/blob/v0.10.0/doc/release-notes.md\n-\n-0.10.2 Change log\n-=================\n-\n-Detailed release notes follow. This overview includes changes that affect external\n-behavior, not code moves, refactors or string updates.\n-\n-Wallet:\n-- `824c011` fix boost::get usage with boost 1.58\n-\n-Miscellaneous:\n-- `da65606` Avoid crash on start in TestBlockValidity with gen=1.\n-- `424ae66` don't imbue boost::filesystem::path with locale \"C\" on windows (fixes #6078)\n-\n-Credits\n-=======\n-\n-Thanks to everyone who directly contributed to this release:\n-\n-- Cory Fields\n-- Gregory Maxwell\n-- Jonas Schnelli\n-- Wladimir J. van der Laan\n-\n-And all those who contributed additional code review and/or security research:\n-\n-- dexX7\n-- Pieter Wuille\n-- vayvanne\n-\n-As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/)."
      },
      {
        "sha": "8a110e562c45376daea69efcb0837dc879ada66a",
        "filename": "doc/release-notes/release-notes-0.10.3.md",
        "status": "removed",
        "additions": 0,
        "deletions": 165,
        "changes": 165,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.10.3.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.10.3.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.10.3.md?ref=ddeacfcff563b602b8833287a34dfbee340e5bec",
        "patch": "@@ -1,165 +0,0 @@\n-Bitcoin Core version 0.10.3 is now available from:\n-\n-  <https://bitcoin.org/bin/bitcoin-core-0.10.3/>\n-\n-This is a new minor version release, bringing security fixes and translation \n-updates. It is recommended to upgrade to this version as soon as possible.\n-\n-Please report bugs using the issue tracker at github:\n-\n-  <https://github.com/bitcoin/bitcoin/issues>\n-\n-Upgrading and downgrading\n-=========================\n-\n-How to Upgrade\n---------------\n-\n-If you are running an older version, shut it down. Wait until it has completely\n-shut down (which might take a few minutes for older versions), then run the\n-installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n-bitcoind/bitcoin-qt (on Linux).\n-\n-Downgrade warning\n-------------------\n-\n-Because release 0.10.0 and later makes use of headers-first synchronization and\n-parallel block download (see further), the block files and databases are not\n-backwards-compatible with pre-0.10 versions of Bitcoin Core or other software:\n-\n-* Blocks will be stored on disk out of order (in the order they are\n-received, really), which makes it incompatible with some tools or\n-other programs. Reindexing using earlier versions will also not work\n-anymore as a result of this.\n-\n-* The block index database will now hold headers for which no block is\n-stored on disk, which earlier versions won't support.\n-\n-If you want to be able to downgrade smoothly, make a backup of your entire data\n-directory. Without this your node will need start syncing (or importing from\n-bootstrap.dat) anew afterwards. It is possible that the data from a completely\n-synchronised 0.10 node may be usable in older versions as-is, but this is not\n-supported and may break as soon as the older version attempts to reindex.\n-\n-This does not affect wallet forward or backward compatibility.\n-\n-Notable changes\n-===============\n-\n-Fix buffer overflow in bundled upnp\n-------------------------------------\n-\n-Bundled miniupnpc was updated to 1.9.20151008. This fixes a buffer overflow in\n-the XML parser during initial network discovery.\n-\n-Details can be found here: http://talosintel.com/reports/TALOS-2015-0035/\n-\n-This applies to the distributed executables only, not when building from source or\n-using distribution provided packages.\n-\n-Additionally, upnp has been disabled by default. This may result in a lower\n-number of reachable nodes on IPv4, however this prevents future libupnpc\n-vulnerabilities from being a structural risk to the network\n-(see https://github.com/bitcoin/bitcoin/pull/6795).\n-\n-Test for LowS signatures before relaying\n------------------------------------------\n-\n-Make the node require the canonical 'low-s' encoding for ECDSA signatures when\n-relaying or mining.  This removes a nuisance malleability vector.\n-\n-Consensus behavior is unchanged.\n-\n-If widely deployed this change would eliminate the last remaining known vector\n-for nuisance malleability on SIGHASH_ALL P2PKH transactions. On the down-side\n-it will block most transactions made by sufficiently out of date software.\n-\n-Unlike the other avenues to change txids on transactions this\n-one was randomly violated by all deployed bitcoin software prior to\n-its discovery. So, while other malleability vectors where made\n-non-standard as soon as they were discovered, this one has remained\n-permitted. Even BIP62 did not propose applying this rule to\n-old version transactions, but conforming implementations have become\n-much more common since BIP62 was initially written.\n-\n-Bitcoin Core has produced compatible signatures since a28fb70e in\n-September 2013, but this didn't make it into a release until 0.9\n-in March 2014; Bitcoinj has done so for a similar span of time.\n-Bitcoinjs and electrum have been more recently updated.\n-\n-This does not replace the need for BIP62 or similar, as miners can\n-still cooperate to break transactions.  Nor does it replace the\n-need for wallet software to handle malleability sanely[1]. This\n-only eliminates the cheap and irritating DOS attack.\n-\n-[1] On the Malleability of Bitcoin Transactions\n-Marcin Andrychowicz, Stefan Dziembowski, Daniel Malinowski, \u0141ukasz Mazurek\n-http://fc15.ifca.ai/preproceedings/bitcoin/paper_9.pdf\n-\n-Minimum relay fee default increase\n------------------------------------\n-\n-The default for the `-minrelaytxfee` setting has been increased from `0.00001`\n-to `0.00005`.\n-\n-This is necessitated by the current transaction flooding, causing\n-outrageous memory usage on nodes due to the mempool ballooning. This is a\n-temporary measure, bridging the time until a dynamic method for determining\n-this fee is merged (which will be in 0.12).\n-\n-(see https://github.com/bitcoin/bitcoin/pull/6793, as well as the 0.11.0\n-release notes, in which this value was suggested)\n-\n-0.10.3 Change log\n-=================\n-\n-Detailed release notes follow. This overview includes changes that affect external\n-behavior, not code moves, refactors or string updates.\n-\n-- #6186 `e4a7d51` Fix two problems in CSubnet parsing\n-- #6153 `ebd7d8d` Parameter interaction: disable upnp if -proxy set\n-- #6203 `ecc96f5` Remove P2SH coinbase flag, no longer interesting\n-- #6226 `181771b` json: fail read_string if string contains trailing garbage\n-- #6244 `09334e0` configure: Detect (and reject) LibreSSL\n-- #6276 `0fd8464` Fix getbalance * 0\n-- #6274 `be64204` Add option `-alerts` to opt out of alert system\n-- #6319 `3f55638` doc: update mailing list address\n-- #6438 `7e66e9c` openssl: avoid config file load/race\n-- #6439 `255eced` Updated URL location of netinstall for Debian\n-- #6412 `0739e6e` Test whether created sockets are select()able\n-- #6694 `f696ea1` [QT] fix thin space word wrap line brake issue\n-- #6704 `743cc9e` Backport bugfixes to 0.10\n-- #6769 `1cea6b0` Test LowS in standardness, removes nuisance malleability vector.\n-- #6789 `093d7b5` Update miniupnpc to 1.9.20151008\n-- #6795 `f2778e0` net: Disable upnp by default\n-- #6797 `91ef4d9` Do not store more than 200 timedata samples\n-- #6793 `842c48d` Bump minrelaytxfee default\n-\n-Credits\n-=======\n-\n-Thanks to everyone who directly contributed to this release:\n-\n-- Adam Weiss\n-- Alex Morcos\n-- Casey Rodarmor\n-- Cory Fields\n-- fanquake\n-- Gregory Maxwell\n-- Jonas Schnelli\n-- J Ross Nicoll\n-- Luke Dashjr\n-- Pavel Vasin\n-- Pieter Wuille\n-- randy-waterhouse\n-- \u0e3ftcDrak\n-- Tom Harding\n-- Veres Lajos\n-- Wladimir J. van der Laan\n-\n-And all those who contributed additional code review and/or security research:\n-\n-- timothy on IRC for reporting the issue\n-- Vulnerability in miniupnp discovered by Aleksandar Nikolic of Cisco Talos\n-\n-As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/)."
      },
      {
        "sha": "38a2c1347d0b8afbfe0c0481cd90b9db06854328",
        "filename": "doc/release-notes/release-notes-0.10.4.md",
        "status": "removed",
        "additions": 0,
        "deletions": 172,
        "changes": 172,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.10.4.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.10.4.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.10.4.md?ref=ddeacfcff563b602b8833287a34dfbee340e5bec",
        "patch": "@@ -1,172 +0,0 @@\n-Bitcoin Core version 0.10.4 is now available from:\n-\n-  <https://bitcoin.org/bin/bitcoin-core-0.10.4/>\n-\n-This is a new minor version release, bringing bug fixes, the BIP65\n-(CLTV) consensus change, and relay policy preparation for BIP113. It is\n-recommended to upgrade to this version as soon as possible.\n-\n-Please report bugs using the issue tracker at github:\n-\n-  <https://github.com/bitcoin/bitcoin/issues>\n-\n-Upgrading and downgrading\n-=========================\n-\n-How to Upgrade\n---------------\n-\n-If you are running an older version, shut it down. Wait until it has completely\n-shut down (which might take a few minutes for older versions), then run the\n-installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n-bitcoind/bitcoin-qt (on Linux).\n-\n-Downgrade warning\n-------------------\n-\n-Because release 0.10.0 and later makes use of headers-first synchronization and\n-parallel block download (see further), the block files and databases are not\n-backwards-compatible with pre-0.10 versions of Bitcoin Core or other software:\n-\n-* Blocks will be stored on disk out of order (in the order they are\n-received, really), which makes it incompatible with some tools or\n-other programs. Reindexing using earlier versions will also not work\n-anymore as a result of this.\n-\n-* The block index database will now hold headers for which no block is\n-stored on disk, which earlier versions won't support.\n-\n-If you want to be able to downgrade smoothly, make a backup of your entire data\n-directory. Without this your node will need start syncing (or importing from\n-bootstrap.dat) anew afterwards. It is possible that the data from a completely\n-synchronised 0.10 node may be usable in older versions as-is, but this is not\n-supported and may break as soon as the older version attempts to reindex.\n-\n-This does not affect wallet forward or backward compatibility. There are no\n-known problems when downgrading from 0.11.x to 0.10.x.\n-\n-Notable changes since 0.10.3\n-============================\n-\n-BIP65 soft fork to enforce OP_CHECKLOCKTIMEVERIFY opcode\n---------------------------------------------------------\n-\n-This release includes several changes related to the [BIP65][] soft fork\n-which redefines the existing OP_NOP2 opcode as OP_CHECKLOCKTIMEVERIFY\n-(CLTV) so that a transaction output can be made unspendable until a\n-specified point in the future.\n-\n-1. This release will only relay and mine transactions spending a CLTV\n-   output if they comply with the BIP65 rules as provided in code.\n-\n-2. This release will produce version 4 blocks by default. Please see the\n-   *notice to miners* below.\n-\n-3. Once 951 out of a sequence of 1,001 blocks on the local node's best block\n-   chain contain version 4 (or higher) blocks, this release will no\n-   longer accept new version 3 blocks and it will only accept version 4\n-   blocks if they comply with the BIP65 rules for CLTV.\n-\n-For more information about the soft-forking change, please see\n-<https://github.com/bitcoin/bitcoin/pull/6351>\n-\n-Graphs showing the progress towards block version 4 adoption may be\n-found at the URLs below:\n-\n-- Block versions over the last 50,000 blocks as progress towards BIP65\n-  consensus enforcement: <http://bitcoin.sipa.be/ver-50k.png>\n-\n-- Block versions over the last 2,000 blocks showing the days to the\n-  earliest possible BIP65 consensus-enforced block: <http://bitcoin.sipa.be/ver-2k.png>\n-\n-**Notice to miners:** Bitcoin Core\u2019s block templates are now for\n-version 4 blocks only, and any mining software relying on its\n-getblocktemplate must be updated in parallel to use libblkmaker either\n-version FIXME or any version from FIXME onward.\n-\n-- If you are solo mining, this will affect you the moment you upgrade\n-  Bitcoin Core, which must be done prior to BIP65 achieving its 951/1001\n-  status.\n-\n-- If you are mining with the stratum mining protocol: this does not\n-  affect you.\n-\n-- If you are mining with the getblocktemplate protocol to a pool: this\n-  will affect you at the pool operator\u2019s discretion, which must be no\n-  later than BIP65 achieving its 951/1001 status.\n-\n-[BIP65]: https://github.com/bitcoin/bips/blob/master/bip-0065.mediawiki\n-\n-Windows bug fix for corrupted UTXO database on unclean shutdowns\n-----------------------------------------------------------------\n-\n-Several Windows users reported that they often need to reindex the\n-entire blockchain after an unclean shutdown of Bitcoin Core on Windows\n-(or an unclean shutdown of Windows itself). Although unclean shutdowns\n-remain unsafe, this release no longer relies on memory-mapped files for\n-the UTXO database, which significantly reduced the frequency of unclean\n-shutdowns leading to required reindexes during testing.\n-\n-For more information, see: <https://github.com/bitcoin/bitcoin/pull/6917>\n-\n-Other fixes for database corruption on Windows are expected in the\n-next major release.\n-\n-0.10.4 Change log\n-=================\n-\n-Detailed release notes follow. This overview includes changes that affect\n-behavior, not code moves, refactors and string updates. For convenience in locating\n-the code changes and accompanying discussion, both the pull request and\n-git merge commit are mentioned.\n-\n-- #6953 `8b3311f` alias -h for --help\n-- #6953 `97546fc` Change URLs to https in debian/control\n-- #6953 `38671bf` Update debian/changelog and slight tweak to debian/control\n-- #6953 `256321e` Correct spelling mistakes in doc folder\n-- #6953 `eae0350` Clarification of unit test build instructions\n-- #6953 `90897ab` Update bluematt-key, the old one is long-since revoked\n-- #6953 `a2f2fb6` build: disable -Wself-assign\n-- #6953 `cf67d8b` Bugfix: Allow mining on top of old tip blocks for testnet (fixes testnet-in-a-box use case)\n-- #6953 `b3964e3` Drop \"with minimal dependencies\" from description\n-- #6953 `43c2789` Split bitcoin-tx into its own package\n-- #6953 `dfe0d4d` Include bitcoin-tx binary on Debian/Ubuntu\n-- #6953 `612efe8` [Qt] Raise debug window when requested\n-- #6953 `3ad96bd` Fix locking in GetTransaction\n-- #6953 `9c81005` Fix spelling of Qt\n-- #6946 `94b67e5` Update LevelDB\n-- #6706 `5dc72f8` CLTV: Add more tests to improve coverage\n-- #6706 `6a1343b` Add RPC tests for the CHECKLOCKTIMEVERIFY (BIP65) soft-fork\n-- #6706 `4137248` Add CHECKLOCKTIMEVERIFY (BIP65) soft-fork logic\n-- #6706 `0e01d0f` Enable CHECKLOCKTIMEVERIFY as a standard script verify flag\n-- #6706 `6d01325` Replace NOP2 with CHECKLOCKTIMEVERIFY (BIP65)\n-- #6706 `750d54f` Move LOCKTIME_THRESHOLD to src/script/script.h\n-- #6706 `6897468` Make CScriptNum() take nMaxNumSize as an argument\n-- #6867 `5297194` Set TCP_NODELAY on P2P sockets\n-- #6836 `fb818b6` Bring historical release notes up to date\n-- #6852 `0b3fd07` build: make sure OpenSSL heeds noexecstack\n-\n-Credits\n-=======\n-\n-Thanks to everyone who directly contributed to this release:\n-\n-- Alex Morcos\n-- Daniel Cousens\n-- Diego Viola\n-- Eric Lombrozo\n-- Esteban Ordano\n-- Gregory Maxwell\n-- Luke Dashjr\n-- MarcoFalke\n-- Matt Corallo\n-- Micha\n-- Mitchell Cash\n-- Peter Todd\n-- Pieter Wuille\n-- Wladimir J. van der Laan\n-- Zak Wilcox\n-\n-And those who contributed additional code review and/or security research.\n-\n-As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/)."
      },
      {
        "sha": "28e49fb7ea64838f81a72424217e755a62e865c8",
        "filename": "doc/release-notes/release-notes-0.11.0.md",
        "status": "removed",
        "additions": 0,
        "deletions": 505,
        "changes": 505,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.11.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.11.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.11.0.md?ref=ddeacfcff563b602b8833287a34dfbee340e5bec",
        "patch": "@@ -1,505 +0,0 @@\n-Bitcoin Core version 0.11.0 is now available from:\n-\n-  <https://bitcoin.org/bin/bitcoin-core-0.11.0/>\n-\n-This is a new major version release, bringing both new features and\n-bug fixes.\n-\n-Please report bugs using the issue tracker at github:\n-\n-  <https://github.com/bitcoin/bitcoin/issues>\n-\n-Upgrading and downgrading\n-=========================\n-\n-How to Upgrade\n---------------\n-\n-If you are running an older version, shut it down. Wait until it has completely\n-shut down (which might take a few minutes for older versions), then run the\n-installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n-bitcoind/bitcoin-qt (on Linux).\n-\n-Downgrade warning\n-------------------\n-\n-Because release 0.10.0 and later makes use of headers-first synchronization and\n-parallel block download (see further), the block files and databases are not\n-backwards-compatible with pre-0.10 versions of Bitcoin Core or other software:\n-\n-* Blocks will be stored on disk out of order (in the order they are\n-received, really), which makes it incompatible with some tools or\n-other programs. Reindexing using earlier versions will also not work\n-anymore as a result of this.\n-\n-* The block index database will now hold headers for which no block is\n-stored on disk, which earlier versions won't support.\n-\n-If you want to be able to downgrade smoothly, make a backup of your entire data\n-directory. Without this your node will need start syncing (or importing from\n-bootstrap.dat) anew afterwards. It is possible that the data from a completely\n-synchronised 0.10 node may be usable in older versions as-is, but this is not\n-supported and may break as soon as the older version attempts to reindex.\n-\n-This does not affect wallet forward or backward compatibility. There are no\n-known problems when downgrading from 0.11.x to 0.10.x.\n-\n-Important information\n-======================\n-\n-Transaction flooding\n----------------------\n-\n-At the time of this release, the P2P network is being flooded with low-fee\n-transactions. This causes a ballooning of the mempool size.\n-\n-If this growth of the mempool causes problematic memory use on your node, it is\n-possible to change a few configuration options to work around this. The growth\n-of the mempool can be monitored with the RPC command `getmempoolinfo`.\n-\n-One is to increase the minimum transaction relay fee `minrelaytxfee`, which\n-defaults to 0.00001. This will cause transactions with fewer BTC/kB fee to be\n-rejected, and thus fewer transactions entering the mempool.\n-\n-The other is to restrict the relaying of free transactions with\n-`limitfreerelay`. This option sets the number of kB/minute at which\n-free transactions (with enough priority) will be accepted. It defaults to 15.\n-Reducing this number reduces the speed at which the mempool can grow due\n-to free transactions.\n-\n-For example, add the following to `bitcoin.conf`:\n-\n-    minrelaytxfee=0.00005 \n-    limitfreerelay=5\n-\n-More robust solutions are being worked on for a follow-up release.\n-\n-Notable changes\n-===============\n-\n-Block file pruning\n-----------------------\n-\n-This release supports running a fully validating node without maintaining a copy \n-of the raw block and undo data on disk. To recap, there are four types of data \n-related to the blockchain in the bitcoin system: the raw blocks as received over \n-the network (blk???.dat), the undo data (rev???.dat), the block index and the \n-UTXO set (both LevelDB databases). The databases are built from the raw data.\n-\n-Block pruning allows Bitcoin Core to delete the raw block and undo data once \n-it's been validated and used to build the databases. At that point, the raw data \n-is used only to relay blocks to other nodes, to handle reorganizations, to look \n-up old transactions (if -txindex is enabled or via the RPC/REST interfaces), or \n-for rescanning the wallet. The block index continues to hold the metadata about \n-all blocks in the blockchain.\n-\n-The user specifies how much space to allot for block & undo files. The minimum \n-allowed is 550MB. Note that this is in addition to whatever is required for the \n-block index and UTXO databases. The minimum was chosen so that Bitcoin Core will \n-be able to maintain at least 288 blocks on disk (two days worth of blocks at 10 \n-minutes per block). In rare instances it is possible that the amount of space \n-used will exceed the pruning target in order to keep the required last 288 \n-blocks on disk.\n-\n-Block pruning works during initial sync in the same way as during steady state, \n-by deleting block files \"as you go\" whenever disk space is allocated. Thus, if \n-the user specifies 550MB, once that level is reached the program will begin \n-deleting the oldest block and undo files, while continuing to download the \n-blockchain.\n-\n-For now, block pruning disables block relay.  In the future, nodes with block \n-pruning will at a minimum relay \"new\" blocks, meaning blocks that extend their \n-active chain. \n-\n-Block pruning is currently incompatible with running a wallet due to the fact \n-that block data is used for rescanning the wallet and importing keys or \n-addresses (which require a rescan.) However, running the wallet with block \n-pruning will be supported in the near future, subject to those limitations.\n-\n-Block pruning is also incompatible with -txindex and will automatically disable \n-it.\n-\n-Once you have pruned blocks, going back to unpruned state requires \n-re-downloading the entire blockchain. To do this, re-start the node with \n--reindex. Note also that any problem that would cause a user to reindex (e.g., \n-disk corruption) will cause a pruned node to redownload the entire blockchain. \n-Finally, note that when a pruned node reindexes, it will delete any blk???.dat \n-and rev???.dat files in the data directory prior to restarting the download.\n-\n-To enable block pruning on the command line:\n-\n-- `-prune=N`: where N is the number of MB to allot for raw block & undo data.\n-\n-Modified RPC calls:\n-\n-- `getblockchaininfo` now includes whether we are in pruned mode or not.\n-- `getblock` will check if the block's data has been pruned and if so, return an \n-error.\n-- `getrawtransaction` will no longer be able to locate a transaction that has a \n-UTXO but where its block file has been pruned. \n-\n-Pruning is disabled by default.\n-\n-Big endian support\n---------------------\n-\n-Experimental support for big-endian CPU architectures was added in this\n-release. All little-endian specific code was replaced with endian-neutral\n-constructs. This has been tested on at least MIPS and PPC hosts. The build\n-system will automatically detect the endianness of the target.\n-\n-Memory usage optimization\n---------------------------\n-\n-There have been many changes in this release to reduce the default memory usage\n-of a node, among which:\n-\n-- Accurate UTXO cache size accounting (#6102); this makes the option `-dbcache`\n-  precise where this grossly underestimated memory usage before\n-- Reduce size of per-peer data structure (#6064 and others); this increases the\n-  number of connections that can be supported with the same amount of memory\n-- Reduce the number of threads (#5964, #5679); lowers the amount of (esp.\n-  virtual) memory needed\n-\n-Fee estimation changes\n-----------------------\n-\n-This release improves the algorithm used for fee estimation.  Previously, -1\n-was returned when there was insufficient data to give an estimate.  Now, -1\n-will also be returned when there is no fee or priority high enough for the\n-desired confirmation target. In those cases, it can help to ask for an estimate\n-for a higher target number of blocks. It is not uncommon for there to be no\n-fee or priority high enough to be reliably (85%) included in the next block and\n-for this reason, the default for `-txconfirmtarget=n` has changed from 1 to 2.\n-\n-Privacy: Disable wallet transaction broadcast\n-----------------------------------------------\n-\n-This release adds an option `-walletbroadcast=0` to prevent automatic\n-transaction broadcast and rebroadcast (#5951). This option allows separating\n-transaction submission from the node functionality.\n-\n-Making use of this, third-party scripts can be written to take care of\n-transaction (re)broadcast:\n-\n-- Send the transaction as normal, either through RPC or the GUI\n-- Retrieve the transaction data through RPC using `gettransaction` (NOT\n-  `getrawtransaction`). The `hex` field of the result will contain the raw\n-  hexadecimal representation of the transaction\n-- The transaction can then be broadcasted through arbitrary mechanisms\n-  supported by the script\n-\n-One such application is selective Tor usage, where the node runs on the normal\n-internet but transactions are broadcasted over Tor.\n-\n-For an example script see [bitcoin-submittx](https://github.com/laanwj/bitcoin-submittx).\n-\n-Privacy: Stream isolation for Tor\n-----------------------------------\n-\n-This release adds functionality to create a new circuit for every peer\n-connection, when the software is used with Tor. The new option,\n-`-proxyrandomize`, is on by default.\n-\n-When enabled, every outgoing connection will (potentially) go through a\n-different exit node. That significantly reduces the chance to get unlucky and\n-pick a single exit node that is either malicious, or widely banned from the P2P\n-network. This improves connection reliability as well as privacy, especially\n-for the initial connections.\n-\n-**Important note:** If a non-Tor SOCKS5 proxy is configured that supports\n-authentication, but doesn't require it, this change may cause that proxy to reject\n-connections. A user and password is sent where they weren't before. This setup\n-is exceedingly rare, but in this case `-proxyrandomize=0` can be passed to\n-disable the behavior.\n-\n-0.11.0 Change log\n-=================\n-\n-Detailed release notes follow. This overview includes changes that affect\n-behavior, not code moves, refactors and string updates. For convenience in locating\n-the code changes and accompanying discussion, both the pull request and\n-git merge commit are mentioned.\n-\n-### RPC and REST\n-- #5461 `5f7279a` signrawtransaction: validate private key\n-- #5444 `103f66b` Add /rest/headers/<count>/<hash>.<ext>\n-- #4964 `95ecc0a` Add scriptPubKey field to validateaddress RPC call\n-- #5476 `c986972` Add time offset into getpeerinfo output\n-- #5540 `84eba47` Add unconfirmed and immature balances to getwalletinfo\n-- #5599 `40e96a3` Get rid of the internal miner's hashmeter\n-- #5711 `87ecfb0` Push down RPC locks\n-- #5754 `1c4e3f9` fix getblocktemplate lock issue\n-- #5756 `5d901d8` Fix getblocktemplate_proposals test by mining one block\n-- #5548 `d48ce48` Add /rest/chaininfos\n-- #5992 `4c4f1b4` Push down RPC reqWallet flag\n-- #6036 `585b5db` Show zero value txouts in listunspent\n-- #5199 `6364408` Add RPC call `gettxoutproof` to generate and verify merkle blocks\n-- #5418 `16341cc` Report missing inputs in sendrawtransaction\n-- #5937 `40f5e8d` show script verification errors in signrawtransaction result\n-- #5420 `1fd2d39` getutxos REST command (based on Bip64)\n-- #6193 `42746b0` [REST] remove json input for getutxos, limit to query max. 15 outpoints\n-- #6226 `5901596` json: fail read_string if string contains trailing garbage\n-\n-### Configuration and command-line options\n-- #5636 `a353ad4` Add option `-allowselfsignedrootcertificate` to allow self signed root certs (for testing payment requests)\n-- #5900 `3e8a1f2` Add a consistency check `-checkblockindex` for the block chain data structures\n-- #5951 `7efc9cf` Make it possible to disable wallet transaction broadcast (using `-walletbroadcast=0`)\n-- #5911 `b6ea3bc` privacy: Stream isolation for Tor (on by default, use `-proxyrandomize=0` to disable)\n-- #5863 `c271304` Add autoprune functionality (`-prune=<size>`)\n-- #6153 `0bcf04f` Parameter interaction: disable upnp if -proxy set\n-- #6274 `4d9c7fe` Add option `-alerts` to opt out of alert system\n-\n-### Block and transaction handling\n-- #5367 `dcc1304` Do all block index writes in a batch\n-- #5253 `203632d` Check against MANDATORY flags prior to accepting to mempool\n-- #5459 `4406c3e` Reject headers that build on an invalid parent\n-- #5481 `055f3ae` Apply AreSane() checks to the fees from the network\n-- #5580 `40d65eb` Preemptively catch a few potential bugs\n-- #5349 `f55c5e9` Implement test for merkle tree malleability in CPartialMerkleTree\n-- #5564 `a89b837` clarify obscure uses of EvalScript()\n-- #5521 `8e4578a` Reject non-final txs even in testnet/regtest\n-- #5707 `6af674e` Change hardcoded character constants to descriptive named constants for db keys\n-- #5286 `fcf646c` Change the default maximum OP_RETURN size to 80 bytes\n-- #5710 `175d86e` Add more information to errors in ReadBlockFromDisk\n-- #5948 `b36f1ce` Use GetAncestor to compute new target\n-- #5959 `a0bfc69` Add additional block index consistency checks\n-- #6058 `7e0e7f8` autoprune minor post-merge improvements\n-- #5159 `2cc1372` New fee estimation code\n-- #6102 `6fb90d8` Implement accurate UTXO cache size accounting\n-- #6129 `2a82298` Bug fix for clearing fCheckForPruning\n-- #5947 `e9af4e6` Alert if it is very likely we are getting a bad chain\n-- #6203 `c00ae64` Remove P2SH coinbase flag, no longer interesting\n-- #5985 `37b4e42` Fix removing of orphan transactions\n-- #6221 `6cb70ca` Prune: Support noncontiguous block files\n-- #6256 `fce474c` Use best header chain timestamps to detect partitioning\n-- #6233 `a587606` Advance pindexLastCommonBlock for blocks in chainActive\n-\n-### P2P protocol and network code\n-- #5507 `844ace9` Prevent DOS attacks on in-flight data structures\n-- #5770 `32a8b6a` Sanitize command strings before logging them\n-- #5859 `dd4ffce` Add correct bool combiner for net signals\n-- #5876 `8e4fd0c` Add a NODE_GETUTXO service bit and document NODE_NETWORK\n-- #6028 `b9311fb` Move nLastTry from CAddress to CAddrInfo\n-- #5662 `5048465` Change download logic to allow calling getdata on inbound peers\n-- #5971 `18d2832` replace absolute sleep with conditional wait\n-- #5918 `7bf5d5e` Use equivalent PoW for non-main-chain requests\n-- #6059 `f026ab6` chainparams: use SeedSpec6's rather than CAddress's for fixed seeds\n-- #6080 `31c0bf1` Add jonasschnellis dns seeder\n-- #5976 `9f7809f` Reduce download timeouts as blocks arrive\n-- #6172 `b4bbad1` Ignore getheaders requests when not synced\n-- #5875 `304892f` Be stricter in processing unrequested blocks\n-- #6333 `41bbc85` Hardcoded seeds update June 2015\n-\n-### Validation\n-- #5143 `48e1765` Implement BIP62 rule 6\n-- #5713 `41e6e4c` Implement BIP66\n-\n-### Build system\n-- #5501 `c76c9d2` Add mips, mipsel and aarch64 to depends platforms\n-- #5334 `cf87536` libbitcoinconsensus: Add pkg-config support\n-- #5514 `ed11d53` Fix 'make distcheck'\n-- #5505 `a99ef7d` Build winshutdownmonitor.cpp on Windows only\n-- #5582 `e8a6639` Osx toolchain update\n-- #5684 `ab64022` osx: bump build sdk to 10.9\n-- #5695 `23ef5b7` depends: latest config.guess and config.sub\n-- #5509 `31dedb4` Fixes when compiling in c++11 mode\n-- #5819 `f8e68f7` release: use static libstdc++ and disable reduced exports by default\n-- #5510 `7c3fbc3` Big endian support\n-- #5149 `c7abfa5` Add script to verify all merge commits are signed\n-- #6082 `7abbb7e` qt: disable qt tests when one of the checks for the gui fails\n-- #6244 `0401aa2` configure: Detect (and reject) LibreSSL\n-- #6269 `95aca44` gitian: Use the new bitcoin-detached-sigs git repo for OSX signatures\n-- #6285 `ef1d506` Fix scheduler build with some boost versions.\n-- #6280 `25c2216` depends: fix Boost 1.55 build on GCC 5\n-- #6303 `b711599` gitian: add a gitian-win-signer descriptor\n-- #6246 `8ea6d37` Fix build on FreeBSD\n-- #6282 `daf956b` fix crash on shutdown when e.g. changing -txindex and abort action\n-- #6354 `bdf0d94` Gitian windows signing normalization\n-\n-### Wallet\n-- #2340 `811c71d` Discourage fee sniping with nLockTime\n-- #5485 `d01bcc4` Enforce minRelayTxFee on wallet created tx and add a maxtxfee option\n-- #5508 `9a5cabf` Add RandAddSeedPerfmon to MakeNewKey\n-- #4805 `8204e19` Do not flush the wallet in AddToWalletIfInvolvingMe(..)\n-- #5319 `93b7544` Clean up wallet encryption code\n-- #5831 `df5c246` Subtract fee from amount\n-- #6076 `6c97fd1` wallet: fix boost::get usage with boost 1.58\n-- #5511 `23c998d` Sort pending wallet transactions before reaccepting\n-- #6126 `26e08a1` Change default nTxConfirmTarget to 2\n-- #6183 `75a4d51` Fix off-by-one error w/ nLockTime in the wallet\n-- #6276 `c9fd907` Fix getbalance * 0\n-\n-### GUI\n-- #5219 `f3af0c8` New icons\n-- #5228 `bb3c75b` HiDPI (retina) support for splash screen\n-- #5258 `73cbf0a` The RPC Console should be a QWidget to make window more independent\n-- #5488 `851dfc7` Light blue icon color for regtest\n-- #5547 `a39aa74` New icon for the debug window\n-- #5493 `e515309` Adopt style colour for button icons\n-- #5557 `70477a0` On close of splashscreen interrupt verifyDB\n-- #5559 `83be8fd` Make the command-line-args dialog better\n-- #5144 `c5380a9` Elaborate on signverify message dialog warning\n-- #5489 `d1aa3c6` Optimize PNG files\n-- #5649 `e0cd2f5` Use text-color icons for system tray Send/Receive menu entries\n-- #5651 `848f55d` Coin Control: Use U+2248 \"ALMOST EQUAL TO\" rather than a simple tilde\n-- #5626 `ab0d798` Fix icon sizes and column width\n-- #5683 `c7b22aa` add new osx dmg background picture\n-- #5620 `7823598` Payment request expiration bug fix\n-- #5729 `9c4a5a5` Allow unit changes for read-only BitcoinAmountField\n-- #5753 `0f44672` Add bitcoin logo to about screen\n-- #5629 `a956586` Prevent amount overflow problem with payment requests\n-- #5830 `215475a` Don't save geometry for options and about/help window\n-- #5793 `d26f0b2` Honor current network when creating autostart link\n-- #5847 `f238add` Startup script for centos, with documentation\n-- #5915 `5bd3a92` Fix a static qt5 crash when using certain versions of libxcb\n-- #5898 `bb56781` Fix rpc console font size to flexible metrics\n-- #5467 `bc8535b` Payment request / server work - part 2\n-- #6161 `180c164` Remove movable option for toolbar\n-- #6160 `0d862c2` Overviewpage: make sure warning icons gets colored\n-\n-### Tests\n-- #5453 `2f2d337` Add ability to run single test manually to RPC tests\n-- #5421 `886eb57` Test unexecuted OP_CODESEPARATOR\n-- #5530 `565b300` Additional rpc tests\n-- #5611 `37b185c` Fix spurious windows test failures after 012598880c\n-- #5613 `2eda47b` Fix smartfees test for change to relay policy\n-- #5612 `e3f5727` Fix zapwallettxes test\n-- #5642 `30a5b5f` Prepare paymentservertests for new unit tests\n-- #5784 `e3a3cd7` Fix usage of NegateSignatureS in script_tests\n-- #5813 `ee9f2bf` Add unit tests for next difficulty calculations\n-- #5855 `d7989c0` Travis: run unit tests in different orders\n-- #5852 `cdae53e` Reinitialize state in between individual unit tests.\n-- #5883 `164d7b6` tests: add a BasicTestingSetup and apply to all tests\n-- #5940 `446bb70` Regression test for ResendWalletTransactions\n-- #6052 `cf7adad` fix and enable bip32 unit test\n-- #6039 `734f80a` tests: Error when setgenerate is used on regtest\n-- #6074 `948beaf` Correct the PUSHDATA4 minimal encoding test in script_invalid.json\n-- #6032 `e08886d` Stop nodes after RPC tests, even with --nocleanup\n-- #6075 `df1609f` Add additional script edge condition tests\n-- #5981 `da38dc6` Python P2P testing \n-- #5958 `9ef00c3` Add multisig rpc tests\n-- #6112 `fec5c0e` Add more script edge condition tests\n-\n-### Miscellaneous\n-- #5457, #5506, #5952, #6047 Update libsecp256k1\n-- #5437 `84857e8` Add missing CAutoFile::IsNull() check in main\n-- #5490 `ec20fd7` Replace uint256/uint160 with opaque blobs where possible\n-- #5654, #5764 Adding jonasschnelli's GPG key\n-- #5477 `5f04d1d` OS X 10.10: LSSharedFileListItemResolve() is deprecated\n-- #5679 `beff11a` Get rid of DetectShutdownThread\n-- #5787 `9bd8c9b` Add fanquake PGP key\n-- #5366 `47a79bb` No longer check osx compatibility in RenameThread\n-- #5689 `07f4386` openssl: abstract out OPENSSL_cleanse\n-- #5708 `8b298ca` Add list of implemented BIPs\n-- #5809 `46bfbe7` Add bitcoin-cli man page\n-- #5839 `86eb461` keys: remove libsecp256k1 verification until it's actually supported\n-- #5749 `d734d87` Help messages correctly formatted (79 chars)\n-- #5884 `7077fe6` BUGFIX: Stack around the variable 'rv' was corrupted\n-- #5849 `41259ca` contrib/init/bitcoind.openrc: Compatibility with previous OpenRC init script variables\n-- #5950 `41113e3` Fix locale fallback and guard tests against invalid locale settings\n-- #5965 `7c6bfb1` Add git-subtree-check.sh script\n-- #6033 `1623f6e` FreeBSD, OpenBSD thread renaming\n-- #6064 `b46e7c2` Several changes to mruset\n-- #6104 `3e2559c` Show an init message while activating best chain\n-- #6125 `351f73e` Clean up parsing of bool command line args\n-- #5964 `b4c219b` Lightweight task scheduler\n-- #6116 `30dc3c1` [OSX] rename Bitcoin-Qt.app to Bitcoin-Core.app\n-- #6168 `b3024f0` contrib/linearize: Support linearization of testnet blocks\n-- #6098 `7708fcd` Update Windows resource files (and add one for bitcoin-tx)\n-- #6159 `e1412d3` Catch errors on datadir lock and pidfile delete\n-- #6186 `182686c` Fix two problems in CSubnet parsing\n-- #6174 `df992b9` doc: add translation strings policy\n-- #6210 `dfdb6dd` build: disable optional use of gmp in internal secp256k1 build\n-- #6264 `94cd705` Remove translation for -help-debug options\n-- #6286 `3902c15` Remove berkeley-db4 workaround in MacOSX build docs\n-- #6319 `3f8fcc9` doc: update mailing list address\n-\n-Credits\n-=======\n-\n-Thanks to everyone who directly contributed to this release:\n-\n-- 21E14\n-- Adam Weiss\n-- Alex Morcos\n-- ayeowch\n-- azeteki\n-- Ben Holden-Crowther\n-- bikinibabe\n-- BitcoinPRReadingGroup\n-- Blake Jakopovic\n-- BtcDrak\n-- charlescharles\n-- Chris Arnesen\n-- Ciemon\n-- CohibAA\n-- Corinne Dashjr\n-- Cory Fields\n-- Cozz Lovan\n-- Daira Hopwood\n-- Daniel Kraft\n-- Dave Collins\n-- David A. Harding\n-- dexX7\n-- Earlz\n-- Eric Lombrozo\n-- Eric R. Schulz\n-- Everett Forth\n-- Flavien Charlon\n-- fsb4000\n-- Gavin Andresen\n-- Gregory Maxwell\n-- Heath\n-- Ivan Pustogarov\n-- Jacob Welsh\n-- Jameson Lopp\n-- Jason Lewicki\n-- Jeff Garzik\n-- Jonas Schnelli\n-- Jonathan Brown\n-- Jorge Tim\u00f3n\n-- joshr\n-- jtimon\n-- Julian Yap\n-- Luca Venturini\n-- Luke Dashjr\n-- Manuel Araoz\n-- MarcoFalke\n-- Matt Bogosian\n-- Matt Corallo\n-- Micha\n-- Michael Ford\n-- Mike Hearn\n-- mrbandrews\n-- Nicolas Benoit\n-- paveljanik\n-- Pavel Jan\u00edk\n-- Pavel Vasin\n-- Peter Todd\n-- Philip Kaufmann\n-- Pieter Wuille\n-- pstratem\n-- randy-waterhouse\n-- rion\n-- Rob Van Mieghem\n-- Ross Nicoll\n-- Ruben de Vries\n-- sandakersmann\n-- Shaul Kfir\n-- Shawn Wilkinson\n-- sinetek\n-- Suhas Daftuar\n-- svost\n-- Thomas Zander\n-- Tom Harding\n-- UdjinM6\n-- Vitalii Demianets\n-- Wladimir J. van der Laan\n-\n-And all those who contributed additional code review and/or security research:\n-\n-- Sergio Demian Lerner\n-\n-As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/).\n-"
      },
      {
        "sha": "799205691ed0f26322923693c2cbf523f0b6751e",
        "filename": "doc/release-notes/release-notes-0.11.1.md",
        "status": "removed",
        "additions": 0,
        "deletions": 172,
        "changes": 172,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.11.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.11.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.11.1.md?ref=ddeacfcff563b602b8833287a34dfbee340e5bec",
        "patch": "@@ -1,172 +0,0 @@\n-Bitcoin Core version 0.11.1 is now available from:\n-\n-  <https://bitcoin.org/bin/bitcoin-core-0.11.1/>\n-\n-This is a new minor version release, bringing security fixes. It is recommended\n-to upgrade to this version as soon as possible.\n-\n-Please report bugs using the issue tracker at github:\n-\n-  <https://github.com/bitcoin/bitcoin/issues>\n-\n-Upgrading and downgrading\n-=========================\n-\n-How to Upgrade\n---------------\n-\n-If you are running an older version, shut it down. Wait until it has completely\n-shut down (which might take a few minutes for older versions), then run the\n-installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n-bitcoind/bitcoin-qt (on Linux).\n-\n-Downgrade warning\n-------------------\n-\n-Because release 0.10.0 and later makes use of headers-first synchronization and\n-parallel block download (see further), the block files and databases are not\n-backwards-compatible with pre-0.10 versions of Bitcoin Core or other software:\n-\n-* Blocks will be stored on disk out of order (in the order they are\n-received, really), which makes it incompatible with some tools or\n-other programs. Reindexing using earlier versions will also not work\n-anymore as a result of this.\n-\n-* The block index database will now hold headers for which no block is\n-stored on disk, which earlier versions won't support.\n-\n-If you want to be able to downgrade smoothly, make a backup of your entire data\n-directory. Without this your node will need start syncing (or importing from\n-bootstrap.dat) anew afterwards. It is possible that the data from a completely\n-synchronised 0.10 node may be usable in older versions as-is, but this is not\n-supported and may break as soon as the older version attempts to reindex.\n-\n-This does not affect wallet forward or backward compatibility. There are no\n-known problems when downgrading from 0.11.x to 0.10.x.\n-\n-Notable changes\n-===============\n-\n-Fix buffer overflow in bundled upnp\n-------------------------------------\n-\n-Bundled miniupnpc was updated to 1.9.20151008. This fixes a buffer overflow in\n-the XML parser during initial network discovery.\n-\n-Details can be found here: http://talosintel.com/reports/TALOS-2015-0035/\n-\n-This applies to the distributed executables only, not when building from source or\n-using distribution provided packages.\n-\n-Additionally, upnp has been disabled by default. This may result in a lower\n-number of reachable nodes on IPv4, however this prevents future libupnpc\n-vulnerabilities from being a structural risk to the network\n-(see https://github.com/bitcoin/bitcoin/pull/6795).\n-\n-Test for LowS signatures before relaying\n------------------------------------------\n-\n-Make the node require the canonical 'low-s' encoding for ECDSA signatures when\n-relaying or mining.  This removes a nuisance malleability vector.\n-\n-Consensus behavior is unchanged.\n-\n-If widely deployed this change would eliminate the last remaining known vector\n-for nuisance malleability on SIGHASH_ALL P2PKH transactions. On the down-side\n-it will block most transactions made by sufficiently out of date software.\n-\n-Unlike the other avenues to change txids on transactions this\n-one was randomly violated by all deployed bitcoin software prior to\n-its discovery. So, while other malleability vectors where made\n-non-standard as soon as they were discovered, this one has remained\n-permitted. Even BIP62 did not propose applying this rule to\n-old version transactions, but conforming implementations have become\n-much more common since BIP62 was initially written.\n-\n-Bitcoin Core has produced compatible signatures since a28fb70e in\n-September 2013, but this didn't make it into a release until 0.9\n-in March 2014; Bitcoinj has done so for a similar span of time.\n-Bitcoinjs and electrum have been more recently updated.\n-\n-This does not replace the need for BIP62 or similar, as miners can\n-still cooperate to break transactions.  Nor does it replace the\n-need for wallet software to handle malleability sanely[1]. This\n-only eliminates the cheap and irritating DOS attack.\n-\n-[1] On the Malleability of Bitcoin Transactions\n-Marcin Andrychowicz, Stefan Dziembowski, Daniel Malinowski, \u0141ukasz Mazurek\n-http://fc15.ifca.ai/preproceedings/bitcoin/paper_9.pdf\n-\n-Minimum relay fee default increase\n------------------------------------\n-\n-The default for the `-minrelaytxfee` setting has been increased from `0.00001`\n-to `0.00005`.\n-\n-This is necessitated by the current transaction flooding, causing\n-outrageous memory usage on nodes due to the mempool ballooning. This is a\n-temporary measure, bridging the time until a dynamic method for determining\n-this fee is merged (which will be in 0.12).\n-\n-(see https://github.com/bitcoin/bitcoin/pull/6793, as well as the 0.11\n-release notes, in which this value was suggested)\n-\n-0.11.1 Change log\n-=================\n-\n-Detailed release notes follow. This overview includes changes that affect\n-behavior, not code moves, refactors and string updates. For convenience in locating\n-the code changes and accompanying discussion, both the pull request and\n-git merge commit are mentioned.\n-\n-- #6438 `2531438` openssl: avoid config file load/race\n-- #6439 `980f820` Updated URL location of netinstall for Debian\n-- #6384 `8e5a969` qt: Force TLS1.0+ for SSL connections\n-- #6471 `92401c2` Depends: bump to qt 5.5\n-- #6224 `93b606a` Be even stricter in processing unrequested blocks\n-- #6571 `100ac4e` libbitcoinconsensus: avoid a crash in multi-threaded environments\n-- #6545 `649f5d9` Do not store more than 200 timedata samples.\n-- #6694 `834e299` [QT] fix thin space word wrap line break issue\n-- #6703 `1cd7952` Backport bugfixes to 0.11\n-- #6750 `5ed8d0b` Recent rejects backport to v0.11\n-- #6769 `71cc9d9` Test LowS in standardness, removes nuisance malleability vector.\n-- #6789 `b4ad73f` Update miniupnpc to 1.9.20151008\n-- #6785 `b4dc33e` Backport to v0.11: In (strCommand == \"tx\"), return if AlreadyHave()\n-- #6412 `0095b9a` Test whether created sockets are select()able\n-- #6795 `4dbcec0` net: Disable upnp by default\n-- #6793 `e7bcc4a` Bump minrelaytxfee default\n-\n-Credits\n-=======\n-\n-Thanks to everyone who directly contributed to this release:\n-\n-- Adam Weiss\n-- Alex Morcos\n-- Casey Rodarmor\n-- Cory Fields\n-- fanquake\n-- Gregory Maxwell\n-- Jonas Schnelli\n-- J Ross Nicoll\n-- Luke Dashjr\n-- Pavel Jan\u00edk\n-- Pavel Vasin\n-- Peter Todd\n-- Pieter Wuille\n-- randy-waterhouse\n-- Ross Nicoll\n-- Suhas Daftuar\n-- tailsjoin\n-- \u0e3ftcDrak\n-- Tom Harding\n-- Veres Lajos\n-- Wladimir J. van der Laan\n-\n-And those who contributed additional code review and/or security research:\n-\n-- timothy on IRC for reporting the issue\n-- Vulnerability in miniupnp discovered by Aleksandar Nikolic of Cisco Talos\n-\n-As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/).\n-"
      },
      {
        "sha": "2351b80656542c3eee9b27c1f3fae5d3a46179d3",
        "filename": "doc/release-notes/release-notes-0.11.2.md",
        "status": "removed",
        "additions": 0,
        "deletions": 217,
        "changes": 217,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.11.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.11.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.11.2.md?ref=ddeacfcff563b602b8833287a34dfbee340e5bec",
        "patch": "@@ -1,217 +0,0 @@\n-Bitcoin Core version 0.11.2 is now available from:\n-\n-  <https://bitcoin.org/bin/bitcoin-core-0.11.2/>\n-\n-This is a new minor version release, bringing bug fixes, the BIP65\n-(CLTV) consensus change, and relay policy preparation for BIP113. It is\n-recommended to upgrade to this version as soon as possible.\n-\n-Please report bugs using the issue tracker at github:\n-\n-  <https://github.com/bitcoin/bitcoin/issues>\n-\n-Upgrading and downgrading\n-=========================\n-\n-How to Upgrade\n---------------\n-\n-If you are running an older version, shut it down. Wait until it has completely\n-shut down (which might take a few minutes for older versions), then run the\n-installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n-bitcoind/bitcoin-qt (on Linux).\n-\n-Downgrade warning\n-------------------\n-\n-Because release 0.10.0 and later makes use of headers-first synchronization and\n-parallel block download (see further), the block files and databases are not\n-backwards-compatible with pre-0.10 versions of Bitcoin Core or other software:\n-\n-* Blocks will be stored on disk out of order (in the order they are\n-received, really), which makes it incompatible with some tools or\n-other programs. Reindexing using earlier versions will also not work\n-anymore as a result of this.\n-\n-* The block index database will now hold headers for which no block is\n-stored on disk, which earlier versions won't support.\n-\n-If you want to be able to downgrade smoothly, make a backup of your entire data\n-directory. Without this your node will need start syncing (or importing from\n-bootstrap.dat) anew afterwards. It is possible that the data from a completely\n-synchronised 0.10 node may be usable in older versions as-is, but this is not\n-supported and may break as soon as the older version attempts to reindex.\n-\n-This does not affect wallet forward or backward compatibility. There are no\n-known problems when downgrading from 0.11.x to 0.10.x.\n-\n-Notable changes since 0.11.1\n-============================\n-\n-BIP65 soft fork to enforce OP_CHECKLOCKTIMEVERIFY opcode\n---------------------------------------------------------\n-\n-This release includes several changes related to the [BIP65][] soft fork\n-which redefines the existing OP_NOP2 opcode as OP_CHECKLOCKTIMEVERIFY\n-(CLTV) so that a transaction output can be made unspendable until a\n-specified point in the future.\n-\n-1. This release will only relay and mine transactions spending a CLTV\n-   output if they comply with the BIP65 rules as provided in code.\n-\n-2. This release will produce version 4 blocks by default. Please see the\n-   *notice to miners* below.\n-\n-3. Once 951 out of a sequence of 1,001 blocks on the local node's best block\n-   chain contain version 4 (or higher) blocks, this release will no\n-   longer accept new version 3 blocks and it will only accept version 4\n-   blocks if they comply with the BIP65 rules for CLTV.\n-\n-For more information about the soft-forking change, please see\n-<https://github.com/bitcoin/bitcoin/pull/6351>\n-\n-Graphs showing the progress towards block version 4 adoption may be\n-found at the URLs below:\n-\n-- Block versions over the last 50,000 blocks as progress towards BIP65\n-  consensus enforcement: <http://bitcoin.sipa.be/ver-50k.png>\n-\n-- Block versions over the last 2,000 blocks showing the days to the\n-  earliest possible BIP65 consensus-enforced block: <http://bitcoin.sipa.be/ver-2k.png>\n-\n-**Notice to miners:** Bitcoin Core\u2019s block templates are now for\n-version 4 blocks only, and any mining software relying on its\n-getblocktemplate must be updated in parallel to use libblkmaker either\n-version 0.4.3 or any version from 0.5.2 onward.\n-\n-- If you are solo mining, this will affect you the moment you upgrade\n-  Bitcoin Core, which must be done prior to BIP65 achieving its 951/1001\n-  status.\n-\n-- If you are mining with the stratum mining protocol: this does not\n-  affect you.\n-\n-- If you are mining with the getblocktemplate protocol to a pool: this\n-  will affect you at the pool operator\u2019s discretion, which must be no\n-  later than BIP65 achieving its 951/1001 status.\n-\n-[BIP65]: https://github.com/bitcoin/bips/blob/master/bip-0065.mediawiki\n-\n-BIP113 mempool-only locktime enforcement using GetMedianTimePast()\n-----------------------------------------------------------------\n-\n-Bitcoin transactions currently may specify a locktime indicating when\n-they may be added to a valid block.  Current consensus rules require\n-that blocks have a block header time greater than the locktime specified\n-in any transaction in that block.\n-\n-Miners get to choose what time they use for their header time, with the\n-consensus rule being that no node will accept a block whose time is more\n-than two hours in the future.  This creates a incentive for miners to\n-set their header times to future values in order to include locktimed\n-transactions which weren't supposed to be included for up to two more\n-hours.\n-\n-The consensus rules also specify that valid blocks may have a header\n-time greater than that of the median of the 11 previous blocks.  This\n-GetMedianTimePast() time has a key feature we generally associate with\n-time: it can't go backwards.\n-\n-[BIP113][] specifies a soft fork (**not enforced in this release**) that\n-weakens this perverse incentive for individual miners to use a future\n-time by requiring that valid blocks have a computed GetMedianTimePast()\n-greater than the locktime specified in any transaction in that block.\n-\n-Mempool inclusion rules currently require transactions to be valid for\n-immediate inclusion in a block in order to be accepted into the mempool.\n-This release begins applying the BIP113 rule to received transactions,\n-so transaction whose time is greater than the GetMedianTimePast() will\n-no longer be accepted into the mempool.\n-\n-**Implication for miners:** you will begin rejecting transactions that\n-would not be valid under BIP113, which will prevent you from producing\n-invalid blocks if/when BIP113 is enforced on the network. Any\n-transactions which are valid under the current rules but not yet valid\n-under the BIP113 rules will either be mined by other miners or delayed\n-until they are valid under BIP113. Note, however, that time-based\n-locktime transactions are more or less unseen on the network currently.\n-\n-**Implication for users:** GetMedianTimePast() always trails behind the\n-current time, so a transaction locktime set to the present time will be\n-rejected by nodes running this release until the median time moves\n-forward. To compensate, subtract one hour (3,600 seconds) from your\n-locktimes to allow those transactions to be included in mempools at\n-approximately the expected time.\n-\n-[BIP113]: https://github.com/bitcoin/bips/blob/master/bip-0113.mediawiki\n-\n-Windows bug fix for corrupted UTXO database on unclean shutdowns\n-----------------------------------------------------------------\n-\n-Several Windows users reported that they often need to reindex the\n-entire blockchain after an unclean shutdown of Bitcoin Core on Windows\n-(or an unclean shutdown of Windows itself). Although unclean shutdowns\n-remain unsafe, this release no longer relies on memory-mapped files for\n-the UTXO database, which significantly reduced the frequency of unclean\n-shutdowns leading to required reindexes during testing.\n-\n-For more information, see: <https://github.com/bitcoin/bitcoin/pull/6917>\n-\n-Other fixes for database corruption on Windows are expected in the\n-next major release.\n-\n-0.11.2 Change log\n-=================\n-\n-Detailed release notes follow. This overview includes changes that affect\n-behavior, not code moves, refactors and string updates. For convenience in locating\n-the code changes and accompanying discussion, both the pull request and\n-git merge commit are mentioned.\n-\n-- #6124 `684636b` Make CScriptNum() take nMaxNumSize as an argument\n-- #6124 `4fa7a04` Replace NOP2 with CHECKLOCKTIMEVERIFY (BIP65)\n-- #6124 `6ea5ca4` Enable CHECKLOCKTIMEVERIFY as a standard script verify flag\n-- #6351 `5e82e1c` Add CHECKLOCKTIMEVERIFY (BIP65) soft-fork logic\n-- #6353 `ba1da90` Show softfork status in getblockchaininfo\n-- #6351 `6af25b0` Add BIP65 to getblockchaininfo softforks list\n-- #6688 `01878c9` Fix locking in GetTransaction\n-- #6653 `b3eaa30` [Qt] Raise debug window when requested\n-- #6600 `1e672ae` Debian/Ubuntu: Include bitcoin-tx binary\n-- #6600 `2394f4d` Debian/Ubuntu: Split bitcoin-tx into its own package\n-- #5987 `33d6825` Bugfix: Allow mining on top of old tip blocks for testnet\n-- #6852 `21e58b8` build: make sure OpenSSL heeds noexecstack\n-- #6846 `af6edac` alias `-h` for `--help`\n-- #6867 `95a5039` Set TCP_NODELAY on P2P sockets.\n-- #6856 `dfe55bd` Do not allow blockfile pruning during reindex.\n-- #6566 `a1d3c6f` Add rules--presently disabled--for using GetMedianTimePast as end point for lock-time calculations\n-- #6566 `f720c5f` Enable policy enforcing GetMedianTimePast as the end point of lock-time constraints\n-- #6917 `0af5b8e` leveldb: Win32WritableFile without memory mapping\n-- #6948 `4e895b0` Always flush block and undo when switching to new file\n-\n-Credits\n-=======\n-\n-Thanks to everyone who directly contributed to this release:\n-\n-- Alex Morcos\n-- \u0e3ftcDrak\n-- Chris Kleeschulte\n-- Daniel Cousens\n-- Diego Viola\n-- Eric Lombrozo\n-- Esteban Ordano\n-- Gregory Maxwell\n-- Luke Dashjr\n-- Marco Falke\n-- Mark Friedenbach\n-- Matt Corallo\n-- Micha\n-- Mitchell Cash\n-- Peter Todd\n-- Pieter Wuille\n-- Wladimir J. van der Laan\n-- Zak Wilcox\n-\n-And those who contributed additional code review and/or security research.\n-\n-As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/)."
      },
      {
        "sha": "cf74a1797520713b405da0ac47e54fb978e344da",
        "filename": "doc/release-notes/release-notes-0.12.0.md",
        "status": "removed",
        "additions": 0,
        "deletions": 894,
        "changes": 894,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.12.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.12.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.12.0.md?ref=ddeacfcff563b602b8833287a34dfbee340e5bec",
        "patch": "@@ -1,894 +0,0 @@\n-Bitcoin Core version 0.12.0 is now available from:\n-\n-  <https://bitcoin.org/bin/bitcoin-core-0.12.0/>\n-\n-This is a new major version release, bringing new features and other improvements.\n-\n-Please report bugs using the issue tracker at github:\n-\n-  <https://github.com/bitcoin/bitcoin/issues>\n-\n-Upgrading and downgrading\n-=========================\n-\n-How to Upgrade\n---------------\n-\n-If you are running an older version, shut it down. Wait until it has completely\n-shut down (which might take a few minutes for older versions), then run the\n-installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n-bitcoind/bitcoin-qt (on Linux).\n-\n-Downgrade warning\n------------------\n-\n-### Downgrade to a version < 0.10.0\n-\n-Because release 0.10.0 and later makes use of headers-first synchronization and\n-parallel block download (see further), the block files and databases are not\n-backwards-compatible with pre-0.10 versions of Bitcoin Core or other software:\n-\n-* Blocks will be stored on disk out of order (in the order they are\n-received, really), which makes it incompatible with some tools or\n-other programs. Reindexing using earlier versions will also not work\n-anymore as a result of this.\n-\n-* The block index database will now hold headers for which no block is\n-stored on disk, which earlier versions won't support.\n-\n-If you want to be able to downgrade smoothly, make a backup of your entire data\n-directory. Without this your node will need start syncing (or importing from\n-bootstrap.dat) anew afterwards. It is possible that the data from a completely\n-synchronised 0.10 node may be usable in older versions as-is, but this is not\n-supported and may break as soon as the older version attempts to reindex.\n-\n-This does not affect wallet forward or backward compatibility.\n-\n-### Downgrade to a version < 0.12.0\n-\n-Because release 0.12.0 and later will obfuscate the chainstate on every\n-fresh sync or reindex, the chainstate is not backwards-compatible with\n-pre-0.12 versions of Bitcoin Core or other software.\n-\n-If you want to downgrade after you have done a reindex with 0.12.0 or later,\n-you will need to reindex when you first start Bitcoin Core version 0.11 or\n-earlier.\n-\n-Notable changes\n-===============\n-\n-Signature validation using libsecp256k1\n----------------------------------------\n-\n-ECDSA signatures inside Bitcoin transactions now use validation using\n-[libsecp256k1](https://github.com/bitcoin-core/secp256k1) instead of OpenSSL.\n-\n-Depending on the platform, this means a significant speedup for raw signature\n-validation speed. The advantage is largest on x86_64, where validation is over\n-five times faster. In practice, this translates to a raw reindexing and new\n-block validation times that are less than half of what it was before.\n-\n-Libsecp256k1 has undergone very extensive testing and validation.\n-\n-A side effect of this change is that libconsensus no longer depends on OpenSSL.\n-\n-Reduce upload traffic\n----------------------\n-\n-A major part of the outbound traffic is caused by serving historic blocks to\n-other nodes in initial block download state.\n-\n-It is now possible to reduce the total upload traffic via the `-maxuploadtarget`\n-parameter. This is *not* a hard limit but a threshold to minimize the outbound\n-traffic. When the limit is about to be reached, the uploaded data is cut by not\n-serving historic blocks (blocks older than one week).\n-Moreover, any SPV peer is disconnected when they request a filtered block.\n-\n-This option can be specified in MiB per day and is turned off by default\n-(`-maxuploadtarget=0`).\n-The recommended minimum is 144 * MAX_BLOCK_SIZE (currently 144MB) per day.\n-\n-Whitelisted peers will never be disconnected, although their traffic counts for\n-calculating the target.\n-\n-A more detailed documentation about keeping traffic low can be found in\n-[/doc/reduce-traffic.md](/doc/reduce-traffic.md).\n-\n-Direct headers announcement (BIP 130)\n--------------------------------------\n-\n-Between compatible peers, [BIP 130]\n-(https://github.com/bitcoin/bips/blob/master/bip-0130.mediawiki)\n-direct headers announcement is used. This means that blocks are advertised by\n-announcing their headers directly, instead of just announcing the hash. In a\n-reorganization, all new headers are sent, instead of just the new tip. This\n-can often prevent an extra roundtrip before the actual block is downloaded.\n-\n-Memory pool limiting\n---------------------\n-\n-Previous versions of Bitcoin Core had their mempool limited by checking\n-a transaction's fees against the node's minimum relay fee. There was no\n-upper bound on the size of the mempool and attackers could send a large\n-number of transactions paying just slighly more than the default minimum\n-relay fee to crash nodes with relatively low RAM. A temporary workaround\n-for previous versions of Bitcoin Core was to raise the default minimum\n-relay fee.\n-\n-Bitcoin Core 0.12 will have a strict maximum size on the mempool. The\n-default value is 300 MB and can be configured with the `-maxmempool`\n-parameter. Whenever a transaction would cause the mempool to exceed\n-its maximum size, the transaction that (along with in-mempool descendants) has\n-the lowest total feerate (as a package) will be evicted and the node's effective\n-minimum relay feerate will be increased to match this feerate plus the initial\n-minimum relay feerate. The initial minimum relay feerate is set to\n-1000 satoshis per kB.\n-\n-Bitcoin Core 0.12 also introduces new default policy limits on the length and\n-size of unconfirmed transaction chains that are allowed in the mempool\n-(generally limiting the length of unconfirmed chains to 25 transactions, with a\n-total size of 101 KB).  These limits can be overriden using command line\n-arguments; see the extended help (`--help -help-debug`) for more information.\n-\n-Opt-in Replace-by-fee transactions\n-----------------------------------\n-\n-It is now possible to replace transactions in the transaction memory pool of\n-Bitcoin Core 0.12 nodes. Bitcoin Core will only allow replacement of\n-transactions which have any of their inputs' `nSequence` number set to less\n-than `0xffffffff - 1`.  Moreover, a replacement transaction may only be\n-accepted when it pays sufficient fee, as described in [BIP 125]\n-(https://github.com/bitcoin/bips/blob/master/bip-0125.mediawiki).\n-\n-Transaction replacement can be disabled with a new command line option,\n-`-mempoolreplacement=0`.  Transactions signaling replacement under BIP125 will\n-still be allowed into the mempool in this configuration, but replacements will\n-be rejected.  This option is intended for miners who want to continue the\n-transaction selection behavior of previous releases.\n-\n-The `-mempoolreplacement` option is *not recommended* for wallet users seeking\n-to avoid receipt of unconfirmed opt-in transactions, because this option does\n-not prevent transactions which are replaceable under BIP 125 from being accepted\n-(only subsequent replacements, which other nodes on the network that implement\n-BIP 125 are likely to relay and mine).  Wallet users wishing to detect whether\n-a transaction is subject to replacement under BIP 125 should instead use the\n-updated RPC calls `gettransaction` and `listtransactions`, which now have an\n-additional field in the output indicating if a transaction is replaceable under\n-BIP125 (\"bip125-replaceable\").\n-\n-Note that the wallet in Bitcoin Core 0.12 does not yet have support for\n-creating transactions that would be replaceable under BIP 125.\n-\n-\n-RPC: Random-cookie RPC authentication\n--------------------------------------\n-\n-When no `-rpcpassword` is specified, the daemon now uses a special 'cookie'\n-file for authentication. This file is generated with random content when the\n-daemon starts, and deleted when it exits. Its contents are used as\n-authentication token. Read access to this file controls who can access through\n-RPC. By default it is stored in the data directory but its location can be\n-overridden with the option `-rpccookiefile`.\n-\n-This is similar to Tor's CookieAuthentication: see\n-https://www.torproject.org/docs/tor-manual.html.en\n-\n-This allows running bitcoind without having to do any manual configuration.\n-\n-Relay: Any sequence of pushdatas in OP_RETURN outputs now allowed\n------------------------------------------------------------------\n-\n-Previously OP_RETURN outputs with a payload were only relayed and mined if they\n-had a single pushdata. This restriction has been lifted to allow any\n-combination of data pushes and numeric constant opcodes (OP_1 to OP_16) after\n-the OP_RETURN. The limit on OP_RETURN output size is now applied to the entire\n-serialized scriptPubKey, 83 bytes by default. (the previous 80 byte default plus\n-three bytes overhead)\n-\n-Relay: New and only new blocks relayed when pruning\n----------------------------------------------------\n-\n-When running in pruned mode, the client will now relay new blocks. When\n-responding to the `getblocks` message, only hashes of blocks that are on disk\n-and are likely to remain there for some reasonable time window (1 hour) will be\n-returned (previously all relevant hashes were returned).\n-\n-Relay and Mining: Priority transactions\n----------------------------------------\n-\n-Bitcoin Core has a heuristic 'priority' based on coin value and age. This\n-calculation is used for relaying of transactions which do not pay the\n-minimum relay fee, and can be used as an alternative way of sorting\n-transactions for mined blocks. Bitcoin Core will relay transactions with\n-insufficient fees depending on the setting of `-limitfreerelay=<r>` (default:\n-`r=15` kB per minute) and `-blockprioritysize=<s>`.\n-\n-In Bitcoin Core 0.12, when mempool limit has been reached a higher minimum\n-relay fee takes effect to limit memory usage. Transactions which do not meet\n-this higher effective minimum relay fee will not be relayed or mined even if\n-they rank highly according to the priority heuristic.\n-\n-The mining of transactions based on their priority is also now disabled by\n-default. To re-enable it, simply set `-blockprioritysize=<n>` where is the size\n-in bytes of your blocks to reserve for these transactions. The old default was\n-50k, so to retain approximately the same policy, you would set\n-`-blockprioritysize=50000`.\n-\n-Additionally, as a result of computational simplifications, the priority value\n-used for transactions received with unconfirmed inputs is lower than in prior\n-versions due to avoiding recomputing the amounts as input transactions confirm.\n-\n-External miner policy set via the `prioritisetransaction` RPC to rank\n-transactions already in the mempool continues to work as it has previously.\n-Note, however, that if mining priority transactions is left disabled, the\n-priority delta will be ignored and only the fee metric will be effective.\n-\n-This internal automatic prioritization handling is being considered for removal\n-entirely in Bitcoin Core 0.13, and it is at this time undecided whether the\n-more accurate priority calculation for chained unconfirmed transactions will be\n-restored. Community direction on this topic is particularly requested to help\n-set project priorities.\n-\n-Automatically use Tor hidden services\n--------------------------------------\n-\n-Starting with Tor version 0.2.7.1 it is possible, through Tor's control socket\n-API, to create and destroy 'ephemeral' hidden services programmatically.\n-Bitcoin Core has been updated to make use of this.\n-\n-This means that if Tor is running (and proper authorization is available),\n-Bitcoin Core automatically creates a hidden service to listen on, without\n-manual configuration. Bitcoin Core will also use Tor automatically to connect\n-to other .onion nodes if the control socket can be successfully opened. This\n-will positively affect the number of available .onion nodes and their usage.\n-\n-This new feature is enabled by default if Bitcoin Core is listening, and\n-a connection to Tor can be made. It can be configured with the `-listenonion`,\n-`-torcontrol` and `-torpassword` settings. To show verbose debugging\n-information, pass `-debug=tor`.\n-\n-Notifications through ZMQ\n--------------------------\n-\n-Bitcoind can now (optionally) asynchronously notify clients through a\n-ZMQ-based PUB socket of the arrival of new transactions and blocks.\n-This feature requires installation of the ZMQ C API library 4.x and\n-configuring its use through the command line or configuration file.\n-Please see [docs/zmq.md](/doc/zmq.md) for details of operation.\n-\n-Wallet: Transaction fees\n-------------------------\n-\n-Various improvements have been made to how the wallet calculates\n-transaction fees.\n-\n-Users can decide to pay a predefined fee rate by setting `-paytxfee=<n>`\n-(or `settxfee <n>` rpc during runtime). A value of `n=0` signals Bitcoin\n-Core to use floating fees. By default, Bitcoin Core will use floating\n-fees.\n-\n-Based on past transaction data, floating fees approximate the fees\n-required to get into the `m`th block from now. This is configurable\n-with `-txconfirmtarget=<m>` (default: `2`).\n-\n-Sometimes, it is not possible to give good estimates, or an estimate\n-at all. Therefore, a fallback value can be set with `-fallbackfee=<f>`\n-(default: `0.0002` BTC/kB).\n-\n-At all times, Bitcoin Core will cap fees at `-maxtxfee=<x>` (default:\n-0.10) BTC.\n-Furthermore, Bitcoin Core will never create transactions paying less than\n-the current minimum relay fee.\n-Finally, a user can set the minimum fee rate for all transactions with\n-`-mintxfee=<i>`, which defaults to 1000 satoshis per kB.\n-\n-Wallet: Negative confirmations and conflict detection\n------------------------------------------------------\n-\n-The wallet will now report a negative number for confirmations that indicates\n-how deep in the block chain the conflict is found. For example, if a transaction\n-A has 5 confirmations and spends the same input as a wallet transaction B, B\n-will be reported as having -5 confirmations. If another wallet transaction C\n-spends an output from B, it will also be reported as having -5 confirmations.\n-To detect conflicts with historical transactions in the chain a one-time\n-`-rescan` may be needed.\n-\n-Unlike earlier versions, unconfirmed but non-conflicting transactions will never\n-get a negative confirmation count. They are not treated as spendable unless\n-they're coming from ourself (change) and accepted into our local mempool,\n-however. The new \"trusted\" field in the `listtransactions` RPC output\n-indicates whether outputs of an unconfirmed transaction are considered\n-spendable.\n-\n-Wallet: Merkle branches removed\n--------------------------------\n-\n-Previously, every wallet transaction stored a Merkle branch to prove its\n-presence in blocks. This wasn't being used for more than an expensive\n-sanity check. Since 0.12, these are no longer stored. When loading a\n-0.12 wallet into an older version, it will automatically rescan to avoid\n-failed checks.\n-\n-Wallet: Pruning\n----------------\n-\n-With 0.12 it is possible to use wallet functionality in pruned mode.\n-This can reduce the disk usage from currently around 60 GB to\n-around 2 GB.\n-\n-However, rescans as well as the RPCs `importwallet`, `importaddress`,\n-`importprivkey` are disabled.\n-\n-To enable block pruning set `prune=<N>` on the command line or in\n-`bitcoin.conf`, where `N` is the number of MiB to allot for\n-raw block & undo data.\n-\n-A value of 0 disables pruning. The minimal value above 0 is 550. Your\n-wallet is as secure with high values as it is with low ones. Higher\n-values merely ensure that your node will not shut down upon blockchain\n-reorganizations of more than 2 days - which are unlikely to happen in\n-practice. In future releases, a higher value may also help the network\n-as a whole: stored blocks could be served to other nodes.\n-\n-For further information about pruning, you may also consult the [release\n-notes of v0.11.0](https://github.com/bitcoin/bitcoin/blob/v0.11.0/doc/release-notes.md#block-file-pruning).\n-\n-`NODE_BLOOM` service bit\n-------------------------\n-\n-Support for the `NODE_BLOOM` service bit, as described in [BIP\n-111](https://github.com/bitcoin/bips/blob/master/bip-0111.mediawiki), has been\n-added to the P2P protocol code.\n-\n-BIP 111 defines a service bit to allow peers to advertise that they support\n-bloom filters (such as used by SPV clients) explicitly. It also bumps the protocol\n-version to allow peers to identify old nodes which allow bloom filtering of the\n-connection despite lacking the new service bit.\n-\n-In this version, it is only enforced for peers that send protocol versions\n-`>=70011`. For the next major version it is planned that this restriction will be\n-removed. It is recommended to update SPV clients to check for the `NODE_BLOOM`\n-service bit for nodes that report versions newer than 70011.\n-\n-Option parsing behavior\n------------------------\n-\n-Command line options are now parsed strictly in the order in which they are\n-specified. It used to be the case that `-X -noX` ends up, unintuitively, with X\n-set, as `-X` had precedence over `-noX`. This is no longer the case. Like for\n-other software, the last specified value for an option will hold.\n-\n-RPC: Low-level API changes\n---------------------------\n-\n-- Monetary amounts can be provided as strings. This means that for example the\n-  argument to sendtoaddress can be \"0.0001\" instead of 0.0001. This can be an\n-  advantage if a JSON library insists on using a lossy floating point type for\n-  numbers, which would be dangerous for monetary amounts.\n-\n-* The `asm` property of each scriptSig now contains the decoded signature hash\n-  type for each signature that provides a valid defined hash type.\n-\n-* OP_NOP2 has been renamed to OP_CHECKLOCKTIMEVERIFY by [BIP 65](https://github.com/bitcoin/bips/blob/master/bip-0065.mediawiki)\n-\n-The following items contain assembly representations of scriptSig signatures\n-and are affected by this change:\n-\n-- RPC `getrawtransaction`\n-- RPC `decoderawtransaction`\n-- RPC `decodescript`\n-- REST `/rest/tx/` (JSON format)\n-- REST `/rest/block/` (JSON format when including extended tx details)\n-- `bitcoin-tx -json`\n-\n-For example, the `scriptSig.asm` property of a transaction input that\n-previously showed an assembly representation of:\n-\n-    304502207fa7a6d1e0ee81132a269ad84e68d695483745cde8b541e3bf630749894e342a022100c1f7ab20e13e22fb95281a870f3dcf38d782e53023ee313d741ad0cfbc0c509001 400000 OP_NOP2\n-\n-now shows as:\n-\n-    304502207fa7a6d1e0ee81132a269ad84e68d695483745cde8b541e3bf630749894e342a022100c1f7ab20e13e22fb95281a870f3dcf38d782e53023ee313d741ad0cfbc0c5090[ALL] 400000 OP_CHECKLOCKTIMEVERIFY\n-\n-Note that the output of the RPC `decodescript` did not change because it is\n-configured specifically to process scriptPubKey and not scriptSig scripts.\n-\n-RPC: SSL support dropped\n-------------------------\n-\n-SSL support for RPC, previously enabled by the option `rpcssl` has been dropped\n-from both the client and the server. This was done in preparation for removing\n-the dependency on OpenSSL for the daemon completely.\n-\n-Trying to use `rpcssl` will result in an error:\n-\n-    Error: SSL mode for RPC (-rpcssl) is no longer supported.\n-\n-If you are one of the few people that relies on this feature, a flexible\n-migration path is to use `stunnel`. This is an utility that can tunnel\n-arbitrary TCP connections inside SSL. On e.g. Ubuntu it can be installed with:\n-\n-    sudo apt-get install stunnel4\n-\n-Then, to tunnel a SSL connection on 28332 to a RPC server bound on localhost on port 18332 do:\n-\n-    stunnel -d 28332 -r 127.0.0.1:18332 -p stunnel.pem -P ''\n-\n-It can also be set up system-wide in inetd style.\n-\n-Another way to re-attain SSL would be to setup a httpd reverse proxy. This solution\n-would allow the use of different authentication, loadbalancing, on-the-fly compression and\n-caching. A sample config for apache2 could look like:\n-\n-    Listen 443\n-\n-    NameVirtualHost *:443\n-    <VirtualHost *:443>\n-\n-    SSLEngine On\n-    SSLCertificateFile /etc/apache2/ssl/server.crt\n-    SSLCertificateKeyFile /etc/apache2/ssl/server.key\n-\n-    <Location /bitcoinrpc>\n-        ProxyPass http://127.0.0.1:8332/\n-        ProxyPassReverse http://127.0.0.1:8332/\n-        # optional enable digest auth\n-        # AuthType Digest\n-        # ...\n-\n-        # optional bypass bitcoind rpc basic auth\n-        # RequestHeader set Authorization \"Basic <hash>\"\n-        # get the <hash> from the shell with: base64 <<< bitcoinrpc:<password>\n-    </Location>\n-\n-    # Or, balance the load:\n-    # ProxyPass / balancer://balancer_cluster_name\n-\n-    </VirtualHost>\n-\n-Mining Code Changes\n--------------------\n-\n-The mining code in 0.12 has been optimized to be significantly faster and use less\n-memory. As part of these changes, consensus critical calculations are cached on a\n-transaction's acceptance into the mempool and the mining code now relies on the\n-consistency of the mempool to assemble blocks. However all blocks are still tested\n-for validity after assembly.\n-\n-Other P2P Changes\n------------------\n-\n-The list of banned peers is now stored on disk rather than in memory.\n-Restarting bitcoind will no longer clear out the list of banned peers; instead\n-a new RPC call (`clearbanned`) can be used to manually clear the list.  The new\n-`setban` RPC call can also be used to manually ban or unban a peer.\n-\n-0.12.0 Change log\n-=================\n-\n-Detailed release notes follow. This overview includes changes that affect\n-behavior, not code moves, refactors and string updates. For convenience in locating\n-the code changes and accompanying discussion, both the pull request and\n-git merge commit are mentioned.\n-\n-### RPC and REST\n-\n-- #6121 `466f0ea` Convert entire source tree from json_spirit to UniValue (Jonas Schnelli)\n-- #6234 `d38cd47` fix rpcmining/getblocktemplate univalue transition logic error (Jonas Schnelli)\n-- #6239 `643114f` Don't go through double in AmountFromValue and ValueFromAmount (Wladimir J. van der Laan)\n-- #6266 `ebab5d3` Fix univalue handling of \\u0000 characters. (Daniel Kraft)\n-- #6276 `f3d4dbb` Fix getbalance * 0 (Tom Harding)\n-- #6257 `5ebe7db` Add `paytxfee` and `errors` JSON fields where appropriate (Stephen)\n-- #6271 `754aae5` New RPC command disconnectnode (Alex van der Peet)\n-- #6158 `0abfa8a` Add setban/listbanned RPC commands (Jonas Schnelli)\n-- #6307 `7ecdcd9` rpcban fixes (Jonas Schnelli)\n-- #6290 `5753988` rpc: make `gettxoutsettinfo` run lock-free (Wladimir J. van der Laan)\n-- #6262 `247b914` Return all available information via RPC call \"validateaddress\" (dexX7)\n-- #6339 `c3f0490` UniValue: don't escape solidus, keep espacing of reverse solidus (Jonas Schnelli)\n-- #6353 `6bcb0a2` Show softfork status in getblockchaininfo (Wladimir J. van der Laan)\n-- #6247 `726e286` Add getblockheader RPC call (Peter Todd)\n-- #6362 `d6db115` Fix null id in RPC response during startup (Forrest Voight)\n-- #5486 `943b322` [REST] JSON support for /rest/headers (Jonas Schnelli)\n-- #6379 `c52e8b3` rpc: Accept scientific notation for monetary amounts in JSON (Wladimir J. van der Laan)\n-- #6388 `fd5dfda` rpc: Implement random-cookie based authentication (Wladimir J. van der Laan)\n-- #6457 `3c923e8` Include pruned state in chaininfo.json (Simon Males)\n-- #6456 `bfd807f` rpc: Avoid unnecessary parsing roundtrip in number formatting, fix locale issue (Wladimir J. van der Laan)\n-- #6380 `240b30e` rpc: Accept strings in AmountFromValue (Wladimir J. van der Laan)\n-- #6346 `6bb2805` Add OP_RETURN support in createrawtransaction RPC call, add tests. (paveljanik)\n-- #6013 `6feeec1` [REST] Add memory pool API (paveljanik)\n-- #6576 `da9beb2` Stop parsing JSON after first finished construct. (Daniel Kraft)\n-- #5677 `9aa9099` libevent-based http server (Wladimir J. van der Laan)\n-- #6633 `bbc2b39` Report minimum ping time in getpeerinfo (Matt Corallo)\n-- #6648 `cd381d7` Simplify logic of REST request suffix parsing. (Daniel Kraft)\n-- #6695 `5e21388` libevent http fixes (Wladimir J. van der Laan)\n-- #5264 `48efbdb` show scriptSig signature hash types in transaction decodes. fixes #3166 (mruddy)\n-- #6719 `1a9f19a` Make HTTP server shutdown more graceful (Wladimir J. van der Laan)\n-- #6859 `0fbfc51` http: Restrict maximum size of http + headers (Wladimir J. van der Laan)\n-- #5936 `bf7c195` [RPC] Add optional locktime to createrawtransaction (Tom Harding)\n-- #6877 `26f5b34` rpc: Add maxmempool and effective min fee to getmempoolinfo (Wladimir J. van der Laan)\n-- #6970 `92701b3` Fix crash in validateaddress with -disablewallet (Wladimir J. van der Laan)\n-- #5574 `755b4ba` Expose GUI labels in RPC as comments (Luke-Jr)\n-- #6990 `dbd2c13` http: speed up shutdown (Wladimir J. van der Laan)\n-- #7013 `36baa9f` Remove LOCK(cs_main) from decodescript (Peter Todd)\n-- #6999 `972bf9c` add (max)uploadtarget infos to getnettotals RPC help (Jonas Schnelli)\n-- #7011 `31de241` Add mediantime to getblockchaininfo (Peter Todd)\n-- #7065 `f91e29f` http: add Boost 1.49 compatibility (Wladimir J. van der Laan)\n-- #7087 `be281d8` [Net]Add -enforcenodebloom option (Patrick Strateman)\n-- #7044 `438ee59` RPC: Added additional config option for multiple RPC users. (Gregory Sanders)\n-- #7072 `c143c49` [RPC] Add transaction size to JSON output (Nikita Zhavoronkov)\n-- #7022 `9afbd96` Change default block priority size to 0 (Alex Morcos)\n-- #7141 `c0c08c7` rpc: Don't translate warning messages (Wladimir J. van der Laan)\n-- #7312 `fd4bd50` Add RPC call abandontransaction (Alex Morcos)\n-- #7222 `e25b158` RPC: indicate which transactions are replaceable (Suhas Daftuar)\n-- #7472 `b2f2b85` rpc: Add WWW-Authenticate header to 401 response (Wladimir J. van der Laan)\n-- #7469 `9cb31e6` net.h fix spelling: misbeha{b,v}ing (Matt)\n-\n-### Configuration and command-line options\n-\n-- #6164 `8d05ec7` Allow user to use -debug=1 to enable all debugging (lpescher)\n-- #5288 `4452205` Added `-whiteconnections=<n>` option (Josh Lehan)\n-- #6284 `10ac38e` Fix argument parsing oddity with -noX (Wladimir J. van der Laan)\n-- #6489 `c9c017a` Give a better error message if system clock is bad (Casey Rodarmor)\n-- #6462 `c384800` implement uacomment config parameter which can add comments to user agent as per BIP-0014 (Pavol Rusnak)\n-- #6647 `a3babc8` Sanitize uacomment (MarcoFalke)\n-- #6742 `3b2d37c` Changed logging to make -logtimestamps to work also for -printtoconsole (arnuschky)\n-- #6846 `2cd020d` alias -h for -help (Daniel Cousens)\n-- #6622 `7939164` Introduce -maxuploadtarget (Jonas Schnelli)\n-- #6881 `2b62551` Debug: Add option for microsecond precision in debug.log (Suhas Daftuar)\n-- #6776 `e06c14f` Support -checkmempool=N, which runs checks once every N transactions (Pieter Wuille)\n-- #6896 `d482c0a` Make -checkmempool=1 not fail through int32 overflow (Pieter Wuille)\n-- #6993 `b632145` Add -blocksonly option (Patrick Strateman)\n-- #7323 `a344880` 0.12: Backport -bytespersigop option (Luke-Jr)\n-- #7386 `da83ecd` Add option `-permitrbf` to set transaction replacement policy (Wladimir J. van der Laan)\n-- #7290 `b16b5bc` Add missing options help (MarcoFalke)\n-- #7440 `c76bfff` Rename permitrbf to mempoolreplacement and provide minimal string-list forward compatibility (Luke-Jr)\n-\n-### Block and transaction handling\n-\n-- #6203 `f00b623` Remove P2SH coinbase flag, no longer interesting (Luke-Jr)\n-- #6222 `9c93ee5` Explicitly set tx.nVersion for the genesis block and mining tests (Mark Friedenbach)\n-- #5985 `3a1d3e8` Fix removing of orphan transactions (Alex Morcos)\n-- #6221 `dd8fe82` Prune: Support noncontiguous block files (Adam Weiss)\n-- #6124 `41076aa` Mempool only CHECKLOCKTIMEVERIFY (BIP65) verification, unparameterized version (Peter Todd)\n-- #6329 `d0a10c1` acceptnonstdtxn option to skip (most) \"non-standard transaction\" checks, for testnet/regtest only (Luke-Jr)\n-- #6410 `7cdefb9` Implement accurate memory accounting for mempool (Pieter Wuille)\n-- #6444 `24ce77d` Exempt unspendable transaction outputs from dust checks (dexX7)\n-- #5913 `a0625b8` Add absurdly high fee message to validation state (Shaul Kfir)\n-- #6177 `2f746c6` Prevent block.nTime from decreasing (Mark Friedenbach)\n-- #6377 `e545371` Handle no chain tip available in InvalidChainFound() (Ross Nicoll)\n-- #6551 `39ddaeb` Handle leveldb::DestroyDB() errors on wipe failure (Adam Weiss)\n-- #6654 `b0ce450` Mempool package tracking (Suhas Daftuar)\n-- #6715 `82d2aef` Fix mempool packages (Suhas Daftuar)\n-- #6680 `4f44530` use CBlockIndex instead of uint256 for UpdatedBlockTip signal (Jonas Schnelli)\n-- #6650 `4fac576` Obfuscate chainstate (James O'Beirne)\n-- #6777 `9caaf6e` Unobfuscate chainstate data in CCoinsViewDB::GetStats (James O'Beirne)\n-- #6722 `3b20e23` Limit mempool by throwing away the cheapest txn and setting min relay fee to it (Matt Corallo)\n-- #6889 `38369dd` fix locking issue with new mempool limiting (Jonas Schnelli)\n-- #6464 `8f3b3cd` Always clean up manual transaction prioritization (Casey Rodarmor)\n-- #6865 `d0badb9` Fix chainstate serialized_size computation (Pieter Wuille)\n-- #6566 `ff057f4` BIP-113: Mempool-only median time-past as endpoint for lock-time calculations (Mark Friedenbach)\n-- #6934 `3038eb6` Restores mempool only BIP113 enforcement (Gregory Maxwell)\n-- #6965 `de7d459` Benchmark sanity checks and fork checks in ConnectBlock (Matt Corallo)\n-- #6918 `eb6172a` Make sigcache faster, more efficient, larger (Pieter Wuille)\n-- #6771 `38ed190` Policy: Lower default limits for tx chains (Alex Morcos)\n-- #6932 `73fa5e6` ModifyNewCoins saves database lookups (Alex Morcos)\n-- #5967 `05d5918` Alter assumptions in CCoinsViewCache::BatchWrite (Alex Morcos)\n-- #6871 `0e93586` nSequence-based Full-RBF opt-in (Peter Todd)\n-- #7008 `eb77416` Lower bound priority (Alex Morcos)\n-- #6915 `2ef5ffa` [Mempool] Improve removal of invalid transactions after reorgs (Suhas Daftuar)\n-- #6898 `4077ad2` Rewrite CreateNewBlock (Alex Morcos)\n-- #6872 `bdda4d5` Remove UTXO cache entries when the tx they were added for is removed/does not enter mempool (Matt Corallo)\n-- #7062 `12c469b` [Mempool] Fix mempool limiting and replace-by-fee for PrioritiseTransaction (Suhas Daftuar)\n-- #7276 `76de36f` Report non-mandatory script failures correctly (Pieter Wuille)\n-- #7217 `e08b7cb` Mark blocks with too many sigops as failed (Suhas Daftuar)\n-- #7387 `f4b2ce8` Get rid of inaccurate ScriptSigArgsExpected (Pieter Wuille)\n-\n-### P2P protocol and network code\n-\n-- #6172 `88a7ead` Ignore getheaders requests when not synced (Suhas Daftuar)\n-- #5875 `9d60602` Be stricter in processing unrequested blocks (Suhas Daftuar)\n-- #6256 `8ccc07c` Use best header chain timestamps to detect partitioning (Gavin Andresen)\n-- #6283 `a903ad7` make CAddrMan::size() return the correct type of size_t (Diapolo)\n-- #6272 `40400d5` Improve proxy initialization (continues #4871) (Wladimir J. van der Laan, Diapolo)\n-- #6310 `66e5465` banlist.dat: store banlist on disk (Jonas Schnelli)\n-- #6412 `1a2de32` Test whether created sockets are select()able (Pieter Wuille)\n-- #6498 `219b916` Keep track of recently rejected transactions with a rolling bloom filter (cont'd) (Peter Todd)\n-- #6556 `70ec975` Fix masking of irrelevant bits in address groups. (Alex Morcos)\n-- #6530 `ea19c2b` Improve addrman Select() performance when buckets are nearly empty (Pieter Wuille)\n-- #6583 `af9305a` add support for miniupnpc api version 14 (Pavel Vasin)\n-- #6374 `69dc5b5` Connection slot exhaustion DoS mitigation (Patrick Strateman)\n-- #6636 `536207f` net: correctly initialize nMinPingUsecTime (Wladimir J. van der Laan)\n-- #6579 `0c27795` Add NODE_BLOOM service bit and bump protocol version (Matt Corallo)\n-- #6148 `999c8be` Relay blocks when pruning (Suhas Daftuar)\n-- #6588 `cf9bb11` In (strCommand == \"tx\"), return if AlreadyHave() (Tom Harding)\n-- #6974 `2f71b07` Always allow getheaders from whitelisted peers (Wladimir J. van der Laan)\n-- #6639 `bd629d7` net: Automatically create hidden service, listen on Tor (Wladimir J. van der Laan)\n-- #6984 `9ffc687` don't enforce maxuploadtarget's disconnect for whitelisted peers (Jonas Schnelli)\n-- #7046 `c322652` Net: Improve blocks only mode. (Patrick Strateman)\n-- #7090 `d6454f6` Connect to Tor hidden services by default (when listening on Tor) (Peter Todd)\n-- #7106 `c894fbb` Fix and improve relay from whitelisted peers (Pieter Wuille)\n-- #7129 `5d5ef3a` Direct headers announcement (rebase of #6494) (Pieter Wuille)\n-- #7079 `1b5118b` Prevent peer flooding inv request queue (redux) (redux) (Gregory Maxwell)\n-- #7166 `6ba25d2` Disconnect on mempool requests from peers when over the upload limit. (Gregory Maxwell)\n-- #7133 `f31955d` Replace setInventoryKnown with a rolling bloom filter (rebase of #7100) (Pieter Wuille)\n-- #7174 `82aff88` Don't do mempool lookups for \"mempool\" command without a filter (Matt Corallo)\n-- #7179 `44fef99` net: Fix sent reject messages for blocks and transactions (Wladimir J. van der Laan)\n-- #7181 `8fc174a` net: Add and document network messages in protocol.h (Wladimir J. van der Laan)\n-- #7125 `10b88be` Replace global trickle node with random delays (Pieter Wuille)\n-- #7415 `cb83beb` net: Hardcoded seeds update January 2016 (Wladimir J. van der Laan)\n-- #7438 `e2d9a58` Do not absolutely protect local peers; decide group ties based on time (Gregory Maxwell)\n-- #7439 `86755bc` Add whitelistforcerelay to control forced relaying. [#7099 redux] (Gregory Maxwell)\n-- #7482 `e16f5b4` Ensure headers count is correct (Suhas Daftuar)\n-\n-### Validation\n-\n-- #5927 `8d9f0a6` Reduce checkpoints' effect on consensus. (Pieter Wuille)\n-- #6299 `24f2489` Bugfix: Don't check the genesis block header before accepting it (Jorge Tim\u00f3n)\n-- #6361 `d7ada03` Use real number of cores for default -par, ignore virtual cores (Wladimir J. van der Laan)\n-- #6519 `87f37e2` Make logging for validation optional (Wladimir J. van der Laan)\n-- #6351 `2a1090d` CHECKLOCKTIMEVERIFY (BIP65) IsSuperMajority() soft-fork (Peter Todd)\n-- #6931 `54e8bfe` Skip BIP 30 verification where not necessary (Alex Morcos)\n-- #6954 `e54ebbf` Switch to libsecp256k1-based ECDSA validation (Pieter Wuille)\n-- #6508 `61457c2` Switch to a constant-space Merkle root/branch algorithm. (Pieter Wuille)\n-- #6914 `327291a` Add pre-allocated vector type and use it for CScript (Pieter Wuille)\n-- #7500 `889e5b3` Correctly report high-S violations (Pieter Wuille)\n-\n-\n-### Build system\n-\n-- #6210 `0e4f2a0` build: disable optional use of gmp in internal secp256k1 build (Wladimir J. van der Laan)\n-- #6214 `87406aa` [OSX] revert renaming of Bitcoin-Qt.app and use CFBundleDisplayName (partial revert of #6116) (Jonas Schnelli)\n-- #6218 `9d67b10` build/gitian misc updates (Cory Fields)\n-- #6269 `d4565b6` gitian: Use the new bitcoin-detached-sigs git repo for OSX signatures (Cory Fields)\n-- #6418 `d4a910c` Add autogen.sh to source tarball. (randy-waterhouse)\n-- #6373 `1ae3196` depends: non-qt bumps for 0.12 (Cory Fields)\n-- #6434 `059b352` Preserve user-passed CXXFLAGS with --enable-debug (Gavin Andresen)\n-- #6501 `fee6554` Misc build fixes (Cory Fields)\n-- #6600 `ef4945f` Include bitcoin-tx binary on Debian/Ubuntu (Zak Wilcox)\n-- #6619 `4862708` depends: bump miniupnpc and ccache (Michael Ford)\n-- #6801 `ae69a75` [depends] Latest config.guess and config.sub (Michael Ford)\n-- #6938 `193f7b5` build: If both Qt4 and Qt5 are installed, use Qt5 (Wladimir J. van der Laan)\n-- #7092 `348b281` build: Set osx permissions in the dmg to make Gatekeeper happy (Cory Fields)\n-- #6980 `eccd671` [Depends] Bump Boost, miniupnpc, ccache & zeromq (Michael Ford)\n-- #7424 `aa26ee0` Add security/export checks to gitian and fix current failures (Cory Fields)\n-\n-### Wallet\n-\n-- #6183 `87550ee` Fix off-by-one error w/ nLockTime in the wallet (Peter Todd)\n-- #6057 `ac5476e` re-enable wallet in autoprune (Jonas Schnelli)\n-- #6356 `9e6c33b` Delay initial pruning until after wallet init (Adam Weiss)\n-- #6088 `91389e5` fundrawtransaction (Matt Corallo)\n-- #6415 `ddd8d80` Implement watchonly support in fundrawtransaction (Matt Corallo)\n-- #6567 `0f0f323` Fix crash when mining with empty keypool. (Daniel Kraft)\n-- #6688 `4939eab` Fix locking in GetTransaction. (Alex Morcos)\n-- #6645 `4dbd43e` Enable wallet key imports without rescan in pruned mode. (Gregory Maxwell)\n-- #6550 `5b77244` Do not store Merkle branches in the wallet. (Pieter Wuille)\n-- #5924 `12a7712` Clean up change computation in CreateTransaction. (Daniel Kraft)\n-- #6906 `48b5b84` Reject invalid pubkeys when reading ckey items from the wallet. (Gregory Maxwell)\n-- #7010 `e0a5ef8` Fix fundrawtransaction handling of includeWatching (Peter Todd)\n-- #6851 `616d61b` Optimisation: Store transaction list order in memory rather than compute it every need (Luke-Jr)\n-- #6134 `e92377f` Improve usage of fee estimation code (Alex Morcos)\n-- #7103 `a775182` [wallet, rpc tests] Fix settxfee, paytxfee (MarcoFalke)\n-- #7105 `30c2d8c` Keep track of explicit wallet conflicts instead of using mempool (Pieter Wuille)\n-- #7096 `9490bd7` [Wallet] Improve minimum absolute fee GUI options (Jonas Schnelli)\n-- #6216 `83f06ca` Take the training wheels off anti-fee-sniping (Peter Todd)\n-- #4906 `96e8d12` Issue#1643: Coinselection prunes extraneous inputs from ApproximateBestSubset (Murch)\n-- #7200 `06c6a58` Checks for null data transaction before issuing error to debug.log (Andy Craze)\n-- #7296 `a36d79b` Add sane fallback for fee estimation (Alex Morcos)\n-- #7293 `ff9b610` Add regression test for vValue sort order (MarcoFalke)\n-- #7306 `4707797` Make sure conflicted wallet tx's update balances (Alex Morcos)\n-- #7381 `621bbd8` [walletdb] Fix syntax error in key parser (MarcoFalke)\n-- #7491 `00ec73e` wallet: Ignore MarkConflict if block hash is not known (Wladimir J. van der Laan)\n-- #7502 `1329963` Update the wallet best block marker before pruning (Pieter Wuille)\n-\n-### GUI\n-\n-- #6217 `c57e12a` disconnect peers from peers tab via context menu (Diapolo)\n-- #6209 `ab0ec67` extend rpc console peers tab (Diapolo)\n-- #6484 `1369d69` use CHashWriter also in SignVerifyMessageDialog (Pavel Vasin)\n-- #6487 `9848d42` Introduce PlatformStyle (Wladimir J. van der Laan)\n-- #6505 `100c9d3` cleanup icons (MarcoFalke)\n-- #4587 `0c465f5` allow users to set -onion via GUI (Diapolo)\n-- #6529 `c0f66ce` show client user agent in debug window (Diapolo)\n-- #6594 `878ea69` Disallow duplicate windows. (Casey Rodarmor)\n-- #5665 `6f55cdd` add verifySize() function to PaymentServer (Diapolo)\n-- #6317 `ca5e2a1` minor optimisations in peertablemodel (Diapolo)\n-- #6315 `e59d2a8` allow banning and unbanning over UI->peers table (Jonas Schnelli)\n-- #6653 `e04b2fa` Pop debug window in foreground when opened twice (MarcoFalke)\n-- #6864 `c702521` Use monospace font (MarcoFalke)\n-- #6887 `3694b74` Update coin control and smartfee labels (MarcoFalke)\n-- #7000 `814697c` add shortcurts for debug-/console-window (Jonas Schnelli)\n-- #6951 `03403d8` Use maxTxFee instead of 10000000 (MarcoFalke)\n-- #7051 `a190777` ui: Add \"Copy raw transaction data\" to transaction list context menu (Wladimir J. van der Laan)\n-- #6979 `776848a` simple mempool info in debug window (Jonas Schnelli)\n-- #7006 `26af1ac` add startup option to reset Qt settings (Jonas Schnelli)\n-- #6780 `2a94cd6` Call init's parameter interaction before we create the UI options model (Jonas Schnelli)\n-- #7112 `96b8025` reduce cs_main locks during tip update, more fluently update UI (Jonas Schnelli)\n-- #7206 `f43c2f9` Add \"NODE_BLOOM\" to guiutil so that peers don't get UNKNOWN[4] (Matt Corallo)\n-- #7282 `5cadf3e` fix coincontrol update issue when deleting a send coins entry (Jonas Schnelli)\n-- #7319 `1320300` Intro: Display required space (MarcoFalke)\n-- #7318 `9265e89` quickfix for RPC timer interface problem (Jonas Schnelli)\n-- #7327 `b16b5bc` [Wallet] Transaction View: LastMonth calculation fixed (crowning-)\n-- #7364 `7726c48` [qt] Windows: Make rpcconsole monospace font larger (MarcoFalke)\n-- #7384 `294f432` [qt] Peertable: Increase SUBVERSION_COLUMN_WIDTH (MarcoFalke)\n-\n-### Tests and QA\n-\n-- #6305 `9005c91` build: comparison tool swap (Cory Fields)\n-- #6318 `e307e13` build: comparison tool NPE fix (Cory Fields)\n-- #6337 `0564c5b` Testing infrastructure: mocktime fixes (Gavin Andresen)\n-- #6350 `60abba1` add unit tests for the decodescript rpc (mruddy)\n-- #5881 `3203a08` Fix and improve txn_doublespend.py test (Tom Harding)\n-- #6390 `6a73d66` tests: Fix bitcoin-tx signing test case (Wladimir J. van der Laan)\n-- #6368 `7fc25c2` CLTV: Add more tests to improve coverage (Esteban Ordano)\n-- #6414 `5121c68` Fix intermittent test failure, reduce test time (Tom Harding)\n-- #6417 `44fa82d` [QA] fix possible reorg issue in (fund)rawtransaction(s).py RPC test (Jonas Schnelli)\n-- #6398 `3d9362d` rpc: Remove chain-specific RequireRPCPassword (Wladimir J. van der Laan)\n-- #6428 `bb59e78` tests: Remove old sh-based test framework (Wladimir J. van der Laan)\n-- #5515 `d946e9a` RFC: Assert on probable deadlocks if the second lock isnt try_lock (Matt Corallo)\n-- #6287 `d2464df` Clang lock debug (Cory Fields)\n-- #6465 `410fd74` Don't share objects between TestInstances (Casey Rodarmor)\n-- #6534 `6c1c7fd` Fix test locking issues and un-revert the probable-deadlines assertions commit (Cory Fields)\n-- #6509 `bb4faee` Fix race condition on test node shutdown (Casey Rodarmor)\n-- #6523 `561f8af` Add p2p-fullblocktest.py (Casey Rodarmor)\n-- #6590 `981fd92` Fix stale socket rebinding and re-enable python tests for Windows (Cory Fields)\n-- #6730 `cb4d6d0` build: Remove dependency of bitcoin-cli on secp256k1 (Wladimir J. van der Laan)\n-- #6616 `5ab5dca` Regression Tests: Migrated rpc-tests.sh to all Python rpc-tests.py (Peter Tschipper)\n-- #6720 `d479311` Creates unittests for addrman, makes addrman more testable. (Ethan Heilman)\n-- #6853 `c834f56` Added fPowNoRetargeting field to Consensus::Params (Eric Lombrozo)\n-- #6827 `87e5539` [rpc-tests] Check return code (MarcoFalke)\n-- #6848 `f2c869a` Add DERSIG transaction test cases (Ross Nicoll)\n-- #6813 `5242bb3` Support gathering code coverage data for RPC tests with lcov (dexX7)\n-- #6888 `c8322ff` Clear strMiscWarning before running PartitionAlert (Eric Lombrozo)\n-- #6894 `2675276` [Tests] Fix BIP65 p2p test (Suhas Daftuar)\n-- #6863 `725539e` [Test Suite] Fix test for null tx input (Daniel Kraft)\n-- #6926 `a6d0d62` tests: Initialize networking on windows (Wladimir J. van der Laan)\n-- #6822 `9fa54a1` [tests] Be more strict checking dust (MarcoFalke)\n-- #6804 `5fcc14e` [tests] Add basic coverage reporting for RPC tests (James O'Beirne)\n-- #7045 `72dccfc` Bugfix: Use unique autostart filenames on Linux for testnet/regtest (Luke-Jr)\n-- #7095 `d8368a0` Replace scriptnum_test's normative ScriptNum implementation (Wladimir J. van der Laan)\n-- #7063 `6abf6eb` [Tests] Add prioritisetransaction RPC test (Suhas Daftuar)\n-- #7137 `16f4a6e` Tests: Explicitly set chain limits in replace-by-fee test (Suhas Daftuar)\n-- #7216 `9572e49` Removed offline testnet DNSSeed 'alexykot.me'. (tnull)\n-- #7209 `f3ad812` test: don't override BITCOIND and BITCOINCLI if they're set (Wladimir J. van der Laan)\n-- #7226 `301f16a` Tests: Add more tests to p2p-fullblocktest (Suhas Daftuar)\n-- #7153 `9ef7c54` [Tests] Add mempool_limit.py test (Jonas Schnelli)\n-- #7170 `453c567` tests: Disable Tor interaction (Wladimir J. van der Laan)\n-- #7229 `1ed938b` [qa] wallet: Check if maintenance changes the balance (MarcoFalke)\n-- #7308 `d513405` [Tests] Eliminate intermittent failures in sendheaders.py (Suhas Daftuar)\n-- #7468 `947c4ff` [rpc-tests] Change solve() to use rehash (Brad Andrews)\n-\n-### Miscellaneous\n-\n-- #6213 `e54ff2f` [init] add -blockversion help and extend -upnp help (Diapolo)\n-- #5975 `1fea667` Consensus: Decouple ContextualCheckBlockHeader from checkpoints (Jorge Tim\u00f3n)\n-- #6061 `eba2f06` Separate Consensus::CheckTxInputs and GetSpendHeight in CheckInputs (Jorge Tim\u00f3n)\n-- #5994 `786ed11` detach wallet from miner (Jonas Schnelli)\n-- #6387 `11576a5` [bitcoin-cli] improve error output (Jonas Schnelli)\n-- #6401 `6db53b4` Add BITCOIND_SIGTERM_TIMEOUT to OpenRC init scripts (Florian Schmaus)\n-- #6430 `b01981e` doc: add documentation for shared library libbitcoinconsensus (Braydon Fuller)\n-- #6372 `dcc495e` Update Linearize tool to support Windows paths; fix variable scope; update README and example configuration (Paul Georgiou)\n-- #6453 `8fe5cce` Separate core memory usage computation in core_memusage.h (Pieter Wuille)\n-- #6149 `633fe10` Buffer log messages and explicitly open logs (Adam Weiss)\n-- #6488 `7cbed7f` Avoid leaking file descriptors in RegisterLoad (Casey Rodarmor)\n-- #6497 `a2bf40d` Make sure LogPrintf strings are line-terminated (Wladimir J. van der Laan)\n-- #6504 `b6fee6b` Rationalize currency unit to \"BTC\" (Ross Nicoll)\n-- #6507 `9bb4dd8` Removed contrib/bitrpc (Casey Rodarmor)\n-- #6527 `41d650f` Use unique name for AlertNotify tempfile (Casey Rodarmor)\n-- #6561 `e08a7d9` limitedmap fixes and tests (Casey Rodarmor)\n-- #6565 `a6f2aff` Make sure we re-acquire lock if a task throws (Casey Rodarmor)\n-- #6599 `f4d88c4` Make sure LogPrint strings are line-terminated (Ross Nicoll)\n-- #6630 `195942d` Replace boost::reverse_lock with our own (Casey Rodarmor)\n-- #6103 `13b8282` Add ZeroMQ notifications (Jo\u00e3o Barbosa)\n-- #6692 `d5d1d2e` devtools: don't push if signing fails in github-merge (Wladimir J. van der Laan)\n-- #6728 `2b0567b` timedata: Prevent warning overkill (Wladimir J. van der Laan)\n-- #6713 `f6ce59c` SanitizeString: Allow hypen char (MarcoFalke)\n-- #5987 `4899a04` Bugfix: Fix testnet-in-a-box use case (Luke-Jr)\n-- #6733 `b7d78fd` Simple benchmarking framework (Gavin Andresen)\n-- #6854 `a092970` devtools: Add security-check.py (Wladimir J. van der Laan)\n-- #6790 `fa1d252` devtools: add clang-format.py (MarcoFalke)\n-- #7114 `f3d0fdd` util: Don't set strMiscWarning on every exception (Wladimir J. van der Laan)\n-- #7078 `93e0514` uint256::GetCheapHash bigendian compatibility (arowser)\n-- #7094 `34e02e0` Assert now > 0 in GetTime GetTimeMillis GetTimeMicros (Patrick Strateman)\n-\n-Credits\n-=======\n-\n-Thanks to everyone who directly contributed to this release:\n-\n-- accraze\n-- Adam Weiss\n-- Alex Morcos\n-- Alex van der Peet\n-- AlSzacrel\n-- Altoidnerd\n-- Andriy Voskoboinyk\n-- antonio-fr\n-- Arne Brutschy\n-- Ashley Holman\n-- Bob McElrath\n-- Braydon Fuller\n-- BtcDrak\n-- Casey Rodarmor\n-- centaur1\n-- Chris Kleeschulte\n-- Christian Decker\n-- Cory Fields\n-- crowning-\n-- daniel\n-- Daniel Cousens\n-- Daniel Kraft\n-- David Hill\n-- dexX7\n-- Diego Viola\n-- Elias Rohrer\n-- Eric Lombrozo\n-- Erik Mossberg\n-- Esteban Ordano\n-- EthanHeilman\n-- Florian Schmaus\n-- Forrest Voight\n-- Gavin Andresen\n-- Gregory Maxwell\n-- Gregory Sanders / instagibbs\n-- Ian T\n-- Irving Ruan\n-- Jacob Welsh\n-- James O'Beirne\n-- Jeff Garzik\n-- Johnathan Corgan\n-- Jonas Schnelli\n-- Jonathan Cross\n-- Jo\u00e3o Barbosa\n-- Jorge Tim\u00f3n\n-- Josh Lehan\n-- J Ross Nicoll\n-- kazcw\n-- Kevin Cooper\n-- lpescher\n-- Luke Dashjr\n-- MarcoFalke\n-- Mark Friedenbach\n-- Matt\n-- Matt Bogosian\n-- Matt Corallo\n-- Matt Quinn\n-- Micha\n-- Michael\n-- Michael Ford / fanquake\n-- Midnight Magic\n-- Mitchell Cash\n-- mrbandrews\n-- mruddy\n-- Nick\n-- Patrick Strateman\n-- Paul Georgiou\n-- Paul Rabahy\n-- Pavel Jan\u00edk / paveljanik\n-- Pavel Vasin\n-- Pavol Rusnak\n-- Peter Josling\n-- Peter Todd\n-- Philip Kaufmann\n-- Pieter Wuille\n-- ptschip\n-- randy-waterhouse\n-- rion\n-- Ross Nicoll\n-- Ryan Havar\n-- Shaul Kfir\n-- Simon Males\n-- Stephen\n-- Suhas Daftuar\n-- tailsjoin\n-- Thomas Kerin\n-- Tom Harding\n-- tulip\n-- unsystemizer\n-- Veres Lajos\n-- Wladimir J. van der Laan\n-- xor-freenet\n-- Zak Wilcox\n-- zathras-crypto\n-\n-As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/)."
      },
      {
        "sha": "610cd481de4855f3d0d05e5d7d089f9c41ee9f06",
        "filename": "doc/release-notes/release-notes-0.12.1.md",
        "status": "removed",
        "additions": 0,
        "deletions": 198,
        "changes": 198,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.12.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.12.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.12.1.md?ref=ddeacfcff563b602b8833287a34dfbee340e5bec",
        "patch": "@@ -1,198 +0,0 @@\n-Bitcoin Core version 0.12.1 is now available from:\n-\n-  <https://bitcoin.org/bin/bitcoin-core-0.12.1/>\n-\n-This is a new minor version release, including the BIP9, BIP68 and BIP112\n-softfork, various bugfixes and updated translations.\n-\n-Please report bugs using the issue tracker at github:\n-\n-  <https://github.com/bitcoin/bitcoin/issues>\n-\n-Upgrading and downgrading\n-=========================\n-\n-How to Upgrade\n---------------\n-\n-If you are running an older version, shut it down. Wait until it has completely\n-shut down (which might take a few minutes for older versions), then run the\n-installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n-bitcoind/bitcoin-qt (on Linux).\n-\n-Downgrade warning\n------------------\n-\n-### Downgrade to a version < 0.12.0\n-\n-Because release 0.12.0 and later will obfuscate the chainstate on every\n-fresh sync or reindex, the chainstate is not backwards-compatible with\n-pre-0.12 versions of Bitcoin Core or other software.\n-\n-If you want to downgrade after you have done a reindex with 0.12.0 or later,\n-you will need to reindex when you first start Bitcoin Core version 0.11 or\n-earlier.\n-\n-Notable changes\n-===============\n-\n-First version bits BIP9 softfork deployment\n--------------------------------------------\n-\n-This release includes a soft fork deployment to enforce [BIP68][],\n-[BIP112][] and [BIP113][] using the [BIP9][] deployment mechanism.\n-\n-The deployment sets the block version number to 0x20000001 between\n-midnight 1st May 2016 and midnight 1st May 2017 to signal readiness for \n-deployment. The version number consists of 0x20000000 to indicate version\n-bits together with setting bit 0 to indicate support for this combined\n-deployment, shown as \"csv\" in the `getblockchaininfo` RPC call.\n-\n-For more information about the soft forking change, please see\n-<https://github.com/bitcoin/bitcoin/pull/7648>\n-\n-This specific backport pull-request can be viewed at\n-<https://github.com/bitcoin/bitcoin/pull/7543>\n-\n-[BIP9]: https://github.com/bitcoin/bips/blob/master/bip-0009.mediawiki\n-[BIP68]: https://github.com/bitcoin/bips/blob/master/bip-0068.mediawiki\n-[BIP112]: https://github.com/bitcoin/bips/blob/master/bip-0112.mediawiki\n-[BIP113]: https://github.com/bitcoin/bips/blob/master/bip-0113.mediawiki\n-\n-BIP68 soft fork to enforce sequence locks for relative locktime\n----------------------------------------------------------------\n-\n-[BIP68][] introduces relative lock-time consensus-enforced semantics of\n-the sequence number field to enable a signed transaction input to remain\n-invalid for a defined period of time after confirmation of its corresponding\n-outpoint.\n-\n-For more information about the implementation, see\n-<https://github.com/bitcoin/bitcoin/pull/7184>\n-\n-BIP112 soft fork to enforce OP_CHECKSEQUENCEVERIFY\n---------------------------------------------------\n-\n-[BIP112][] redefines the existing OP_NOP3 as OP_CHECKSEQUENCEVERIFY (CSV)\n-for a new opcode in the Bitcoin scripting system that in combination with\n-[BIP68][] allows execution pathways of a script to be restricted based\n-on the age of the output being spent.\n-\n-For more information about the implementation, see\n-<https://github.com/bitcoin/bitcoin/pull/7524>\n-\n-BIP113 locktime enforcement soft fork\n--------------------------------------\n-\n-Bitcoin Core 0.11.2 previously introduced mempool-only locktime\n-enforcement using GetMedianTimePast(). This release seeks to\n-consensus enforce the rule.\n-\n-Bitcoin transactions currently may specify a locktime indicating when\n-they may be added to a valid block.  Current consensus rules require\n-that blocks have a block header time greater than the locktime specified\n-in any transaction in that block.\n-\n-Miners get to choose what time they use for their header time, with the\n-consensus rule being that no node will accept a block whose time is more\n-than two hours in the future.  This creates a incentive for miners to\n-set their header times to future values in order to include locktimed\n-transactions which weren't supposed to be included for up to two more\n-hours.\n-\n-The consensus rules also specify that valid blocks may have a header\n-time greater than that of the median of the 11 previous blocks.  This\n-GetMedianTimePast() time has a key feature we generally associate with\n-time: it can't go backwards.\n-\n-[BIP113][] specifies a soft fork enforced in this release that\n-weakens this perverse incentive for individual miners to use a future\n-time by requiring that valid blocks have a computed GetMedianTimePast()\n-greater than the locktime specified in any transaction in that block.\n-\n-Mempool inclusion rules currently require transactions to be valid for\n-immediate inclusion in a block in order to be accepted into the mempool.\n-This release begins applying the BIP113 rule to received transactions,\n-so transaction whose time is greater than the GetMedianTimePast() will\n-no longer be accepted into the mempool.\n-\n-**Implication for miners:** you will begin rejecting transactions that\n-would not be valid under BIP113, which will prevent you from producing\n-invalid blocks when BIP113 is enforced on the network. Any\n-transactions which are valid under the current rules but not yet valid\n-under the BIP113 rules will either be mined by other miners or delayed\n-until they are valid under BIP113. Note, however, that time-based\n-locktime transactions are more or less unseen on the network currently.\n-\n-**Implication for users:** GetMedianTimePast() always trails behind the\n-current time, so a transaction locktime set to the present time will be\n-rejected by nodes running this release until the median time moves\n-forward. To compensate, subtract one hour (3,600 seconds) from your\n-locktimes to allow those transactions to be included in mempools at\n-approximately the expected time.\n-\n-For more information about the implementation, see\n-<https://github.com/bitcoin/bitcoin/pull/6566>\n-\n-Miscellaneous\n--------------\n-\n-The p2p alert system is off by default. To turn on, use `-alert` with\n-startup configuration.\n-\n-0.12.1 Change log\n-=================\n-\n-Detailed release notes follow. This overview includes changes that affect\n-behavior, not code moves, refactors and string updates. For convenience in locating\n-the code changes and accompanying discussion, both the pull request and\n-git merge commit are mentioned.\n-\n-### RPC and other APIs\n-- #7739 `7ffc2bd` Add abandoned status to listtransactions (jonasschnelli)\n-\n-### Block and transaction handling\n-- #7543 `834aaef` Backport BIP9, BIP68 and BIP112 with softfork (btcdrak)\n-\n-### P2P protocol and network code\n-- #7804 `90f1d24` Track block download times per individual block (sipa)\n-- #7832 `4c3a00d` Reduce block timeout to 10 minutes (laanwj)\n-\n-### Validation\n-- #7821 `4226aac` init: allow shutdown during 'Activating best chain...' (laanwj)\n-- #7835 `46898e7` Version 2 transactions remain non-standard until CSV activates (sdaftuar)\n-\n-### Build system\n-- #7487 `00d57b4` Workaround Travis-side CI issues (luke-jr)\n-- #7606 `a10da9a` No need to set -L and --location for curl (MarcoFalke)\n-- #7614 `ca8f160` Add curl to packages (now needed for depends) (luke-jr)\n-- #7776 `a784675` Remove unnecessary executables from gitian release (laanwj)\n-\n-### Wallet\n-- #7715 `19866c1` Fix calculation of balances and available coins. (morcos)\n-\n-### Miscellaneous\n-- #7617 `f04f4fd` Fix markdown syntax and line terminate LogPrint (MarcoFalke)\n-- #7747 `4d035bc` added depends cross compile info (accraze)\n-- #7741 `a0cea89` Mark p2p alert system as deprecated (btcdrak)\n-- #7780 `c5f94f6` Disable bad-chain alert (btcdrak)\n-\n-Credits\n-=======\n-\n-Thanks to everyone who directly contributed to this release:\n-\n-- accraze\n-- Alex Morcos\n-- BtcDrak\n-- Jonas Schnelli\n-- Luke Dashjr\n-- MarcoFalke\n-- Mark Friedenbach\n-- NicolasDorier\n-- Pieter Wuille\n-- Suhas Daftuar\n-- Wladimir J. van der Laan\n-\n-As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/).\n-"
      },
      {
        "sha": "4c3cb97df34cf5e13939e538bd8af50759cc92f6",
        "filename": "doc/release-notes/release-notes-0.13.0.md",
        "status": "removed",
        "additions": 0,
        "deletions": 868,
        "changes": 868,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.13.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.13.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.13.0.md?ref=ddeacfcff563b602b8833287a34dfbee340e5bec",
        "patch": "@@ -1,868 +0,0 @@\n-Bitcoin Core version 0.13.0 is now available from:\n-\n-  <https://bitcoin.org/bin/bitcoin-core-0.13.0/>\n-\n-This is a new major version release, including new features, various bugfixes\n-and performance improvements, as well as updated translations.\n-\n-Please report bugs using the issue tracker at github:\n-\n-  <https://github.com/bitcoin/bitcoin/issues>\n-\n-To receive security and update notifications, please subscribe to:\n-\n-  <https://bitcoincore.org/en/list/announcements/join/>\n-\n-Compatibility\n-==============\n-\n-Microsoft ended support for Windows XP on [April 8th, 2014](https://www.microsoft.com/en-us/WindowsForBusiness/end-of-xp-support),\n-an OS initially released in 2001. This means that not even critical security\n-updates will be released anymore. Without security updates, using a bitcoin\n-wallet on a XP machine is irresponsible at least.\n-\n-In addition to that, with 0.12.x there have been varied reports of Bitcoin Core\n-randomly crashing on Windows XP. It is [not clear](https://github.com/bitcoin/bitcoin/issues/7681#issuecomment-217439891)\n-what the source of these crashes is, but it is likely that upstream\n-libraries such as Qt are no longer being tested on XP.\n-\n-We do not have time nor resources to provide support for an OS that is\n-end-of-life. From 0.13.0 on, Windows XP is no longer supported. Users are\n-suggested to upgrade to a newer verion of Windows, or install an alternative OS\n-that is supported.\n-\n-No attempt is made to prevent installing or running the software on Windows XP,\n-you can still do so at your own risk, but do not expect it to work: do not\n-report issues about Windows XP to the issue tracker.\n-\n-Notable changes\n-===============\n-\n-Database cache memory increased\n---------------------------------\n-\n-As a result of growth of the UTXO set, performance with the prior default\n-database cache of 100 MiB has suffered.\n-For this reason the default was changed to 300 MiB in this release.\n-\n-For nodes on low-memory systems, the database cache can be changed back to\n-100 MiB (or to another value) by either:\n-\n-- Adding `dbcache=100` in bitcoin.conf\n-- Changing it in the GUI under `Options \u2192 Size of database cache`\n-\n-Note that the database cache setting has the most performance impact\n-during initial sync of a node, and when catching up after downtime.\n-\n-\n-bitcoin-cli: arguments privacy\n-------------------------------\n-\n-The RPC command line client gained a new argument, `-stdin`\n-to read extra arguments from standard input, one per line until EOF/Ctrl-D.\n-For example:\n-\n-    $ src/bitcoin-cli -stdin walletpassphrase\n-    mysecretcode\n-    120\n-    ..... press Ctrl-D here to end input\n-    $\n-\n-It is recommended to use this for sensitive information such as wallet\n-passphrases, as command-line arguments can usually be read from the process\n-table by any user on the system.\n-\n-\n-C++11 and Python 3\n-------------------\n-\n-Various code modernizations have been done. The Bitcoin Core code base has\n-started using C++11. This means that a C++11-capable compiler is now needed for\n-building. Effectively this means GCC 4.7 or higher, or Clang 3.3 or higher.\n-\n-When cross-compiling for a target that doesn't have C++11 libraries, configure with\n-`./configure --enable-glibc-back-compat ... LDFLAGS=-static-libstdc++`.\n-\n-For running the functional tests in `qa/rpc-tests`, Python3.4 or higher is now\n-required.\n-\n-\n-Linux ARM builds\n-----------------\n-\n-Due to popular request, Linux ARM builds have been added to the uploaded\n-executables.\n-\n-The following extra files can be found in the download directory or torrent:\n-\n-- `bitcoin-${VERSION}-arm-linux-gnueabihf.tar.gz`: Linux binaries targeting\n-  the 32-bit ARMv7-A architecture.\n-- `bitcoin-${VERSION}-aarch64-linux-gnu.tar.gz`: Linux binaries targeting\n-  the 64-bit ARMv8-A architecture.\n-\n-ARM builds are still experimental. If you have problems on a certain device or\n-Linux distribution combination please report them on the bug tracker, it may be\n-possible to resolve them. Note that the device you use must be (backward)\n-compatible with the architecture targeted by the binary that you use.\n-For example, a Raspberry Pi 2 Model B or Raspberry Pi 3 Model B (in its 32-bit\n-execution state) device, can run the 32-bit ARMv7-A targeted binary. However,\n-no model of Raspberry Pi 1 device can run either binary because they are all\n-ARMv6 architecture devices that are not compatible with ARMv7-A or ARMv8-A.\n-\n-Note that Android is not considered ARM Linux in this context. The executables\n-are not expected to work out of the box on Android.\n-\n-\n-Compact Block support (BIP 152)\n--------------------------------\n-\n-Support for block relay using the Compact Blocks protocol has been implemented\n-in PR 8068.\n-\n-The primary goal is reducing the bandwidth spikes at relay time, though in many\n-cases it also reduces propagation delay. It is automatically enabled between\n-compatible peers.\n-[BIP 152](https://github.com/bitcoin/bips/blob/master/bip-0152.mediawiki)\n-\n-As a side-effect, ordinary non-mining nodes will download and upload blocks\n-faster if those blocks were produced by miners using similar transaction\n-filtering policies. This means that a miner who produces a block with many\n-transactions discouraged by your node will be relayed slower than one with\n-only transactions already in your memory pool. The overall effect of such\n-relay differences on the network may result in blocks which include widely-\n-discouraged transactions losing a stale block race, and therefore miners may\n-wish to configure their node to take common relay policies into consideration.\n-\n-\n-Hierarchical Deterministic Key Generation\n------------------------------------------\n-Newly created wallets will use hierarchical deterministic key generation\n-according to BIP32 (keypath m/0'/0'/k').\n-Existing wallets will still use traditional key generation.\n-\n-Backups of HD wallets, regardless of when they have been created, can\n-therefore be used to re-generate all possible private keys, even the\n-ones which haven't already been generated during the time of the backup.\n-**Attention:** Encrypting the wallet will create a new seed which requires\n-a new backup!\n-\n-Wallet dumps (created using the `dumpwallet` RPC) will contain the deterministic\n-seed. This is expected to allow future versions to import the seed and all\n-associated funds, but this is not yet implemented.\n-\n-HD key generation for new wallets can be disabled by `-usehd=0`. Keep in\n-mind that this flag only has affect on newly created wallets.\n-You can't disable HD key generation once you have created a HD wallet.\n-\n-There is no distinction between internal (change) and external keys.\n-\n-HD wallets are incompatible with older versions of Bitcoin Core.\n-\n-[Pull request](https://github.com/bitcoin/bitcoin/pull/8035/files), [BIP 32](https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki)\n-\n-\n-Segregated Witness\n-------------------\n-\n-The code preparations for Segregated Witness (\"segwit\"), as described in [BIP\n-141](https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki), [BIP\n-143](https://github.com/bitcoin/bips/blob/master/bip-0143.mediawiki), [BIP\n-144](https://github.com/bitcoin/bips/blob/master/bip-0144.mediawiki), and [BIP\n-145](https://github.com/bitcoin/bips/blob/master/bip-0145.mediawiki) are\n-finished and included in this release.  However, BIP 141 does not yet specify\n-activation parameters on mainnet, and so this release does not support segwit\n-use on mainnet.  Testnet use is supported, and after BIP 141 is updated with\n-proposed parameters, a future release of Bitcoin Core is expected that\n-implements those parameters for mainnet.\n-\n-Furthermore, because segwit activation is not yet specified for mainnet,\n-version 0.13.0 will behave similarly as other pre-segwit releases even after a\n-future activation of BIP 141 on the network.  Upgrading from 0.13.0 will be\n-required in order to utilize segwit-related features on mainnet (such as signal\n-BIP 141 activation, mine segwit blocks, fully validate segwit blocks, relay\n-segwit blocks to other segwit nodes, and use segwit transactions in the\n-wallet, etc).\n-\n-\n-Mining transaction selection (\"Child Pays For Parent\")\n-------------------------------------------------------\n-\n-The mining transaction selection algorithm has been replaced with an algorithm\n-that selects transactions based on their feerate inclusive of unconfirmed\n-ancestor transactions.  This means that a low-fee transaction can become more\n-likely to be selected if a high-fee transaction that spends its outputs is\n-relayed.\n-\n-With this change, the `-blockminsize` command line option has been removed.\n-\n-The command line option `-blockmaxsize` remains an option to specify the\n-maximum number of serialized bytes in a generated block.  In addition, the new\n-command line option `-blockmaxweight` has been added, which specifies the\n-maximum \"block weight\" of a generated block, as defined by [BIP 141 (Segregated\n-Witness)] (https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki).\n-\n-In preparation for Segregated Witness, the mining algorithm has been modified\n-to optimize transaction selection for a given block weight, rather than a given\n-number of serialized bytes in a block.  In this release, transaction selection\n-is unaffected by this distinction (as BIP 141 activation is not supported on\n-mainnet in this release, see above), but in future releases and after BIP 141\n-activation, these calculations would be expected to differ.\n-\n-For optimal runtime performance, miners using this release should specify\n-`-blockmaxweight` on the command line, and not specify `-blockmaxsize`.\n-Additionally (or only) specifying `-blockmaxsize`, or relying on default\n-settings for both, may result in performance degradation, as the logic to\n-support `-blockmaxsize` performs additional computation to ensure that\n-constraint is met.  (Note that for mainnet, in this release, the equivalent\n-parameter for `-blockmaxweight` would be four times the desired\n-`-blockmaxsize`.  See [BIP 141]\n-(https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki) for additional\n-details.)\n-\n-In the future, the `-blockmaxsize` option may be removed, as block creation is\n-no longer optimized for this metric.  Feedback is requested on whether to\n-deprecate or keep this command line option in future releases.\n-\n-\n-Reindexing changes\n-------------------\n-\n-In earlier versions, reindexing did validation while reading through the block\n-files on disk. These two have now been split up, so that all blocks are known\n-before validation starts. This was necessary to make certain optimizations that\n-are available during normal synchronizations also available during reindexing.\n-\n-The two phases are distinct in the Bitcoin-Qt GUI. During the first one,\n-\"Reindexing blocks on disk\" is shown. During the second (slower) one,\n-\"Processing blocks on disk\" is shown.\n-\n-It is possible to only redo validation now, without rebuilding the block index,\n-using the command line option `-reindex-chainstate` (in addition to\n-`-reindex` which does both). This new option is useful when the blocks on disk\n-are assumed to be fine, but the chainstate is still corrupted. It is also\n-useful for benchmarks.\n-\n-\n-Removal of internal miner\n---------------------------\n-\n-As CPU mining has been useless for a long time, the internal miner has been\n-removed in this release, and replaced with a simpler implementation for the\n-test framework.\n-\n-The overall result of this is that `setgenerate` RPC call has been removed, as\n-well as the `-gen` and `-genproclimit` command-line options.\n-\n-For testing, the `generate` call can still be used to mine a block, and a new\n-RPC call `generatetoaddress` has been added to mine to a specific address. This\n-works with wallet disabled.\n-\n-\n-New bytespersigop implementation\n---------------------------------\n-\n-The former implementation of the bytespersigop filter accidentally broke bare\n-multisig (which is meant to be controlled by the `permitbaremultisig` option),\n-since the consensus protocol always counts these older transaction forms as 20\n-sigops for backwards compatibility. Simply fixing this bug by counting more\n-accurately would have reintroduced a vulnerability. It has therefore been\n-replaced with a new implementation that rather than filter such transactions,\n-instead treats them (for fee purposes only) as if they were in fact the size\n-of a transaction actually using all 20 sigops.\n-\n-\n-Low-level P2P changes\n-----------------------\n-\n-- The optional new p2p message \"feefilter\" is implemented and the protocol\n-  version is bumped to 70013. Upon receiving a feefilter message from a peer,\n-  a node will not send invs for any transactions which do not meet the filter\n-  feerate. [BIP 133](https://github.com/bitcoin/bips/blob/master/bip-0133.mediawiki)\n-\n-- The P2P alert system has been removed in PR #7692 and the `alert` P2P message\n-  is no longer supported.\n-\n-- The transaction relay mechanism used to relay one quarter of all transactions\n-  instantly, while queueing up the rest and sending them out in batch. As\n-  this resulted in chains of dependent transactions being reordered, it\n-  systematically hurt transaction relay. The relay code was redesigned in PRs\n-  \\#7840 and #8082, and now always batches transactions announcements while also\n-  sorting them according to dependency order. This significantly reduces orphan\n-  transactions. To compensate for the removal of instant relay, the frequency of\n-  batch sending was doubled for outgoing peers.\n-\n-- Since PR #7840 the BIP35 `mempool` command is also subject to batch processing.\n-  Also the `mempool` message is no longer handled for non-whitelisted peers when\n-  `NODE_BLOOM` is disabled through `-peerbloomfilters=0`.\n-\n-- The maximum size of orphan transactions that are kept in memory until their\n-  ancestors arrive has been raised in PR #8179 from 5000 to 99999 bytes. They\n-  are now also removed from memory when they are included in a block, conflict\n-  with a block, and time out after 20 minutes.\n-\n-- We respond at most once to a getaddr request during the lifetime of a\n-  connection since PR #7856.\n-\n-- Connections to peers who have recently been the first one to give us a valid\n-  new block or transaction are protected from disconnections since PR #8084.\n-\n-\n-Low-level RPC changes\n-----------------------\n-\n-- RPC calls have been added to output detailed statistics for individual mempool\n-  entries, as well as to calculate the in-mempool ancestors or descendants of a\n-  transaction: see `getmempoolentry`, `getmempoolancestors`, `getmempooldescendants`.\n-\n-- `gettxoutsetinfo` UTXO hash (`hash_serialized`) has changed. There was a divergence between\n-  32-bit and 64-bit platforms, and the txids were missing in the hashed data. This has been\n-  fixed, but this means that the output will be different than from previous versions.\n-\n-- Full UTF-8 support in the RPC API. Non-ASCII characters in, for example,\n-  wallet labels have always been malformed because they weren't taken into account\n-  properly in JSON RPC processing. This is no longer the case. This also affects\n-  the GUI debug console.\n-\n-- Asm script outputs replacements for OP_NOP2 and OP_NOP3\n-\n-  - OP_NOP2 has been renamed to OP_CHECKLOCKTIMEVERIFY by [BIP \n-65](https://github.com/bitcoin/bips/blob/master/bip-0065.mediawiki)\n-\n-  - OP_NOP3 has been renamed to OP_CHECKSEQUENCEVERIFY by [BIP \n-112](https://github.com/bitcoin/bips/blob/master/bip-0112.mediawiki)\n-\n-  - The following outputs are affected by this change:\n-\n-    - RPC `getrawtransaction` (in verbose mode)\n-    - RPC `decoderawtransaction`\n-    - RPC `decodescript`\n-    - REST `/rest/tx/` (JSON format)\n-    - REST `/rest/block/` (JSON format when including extended tx details)\n-    - `bitcoin-tx -json`\n-\n-- The sorting of the output of the `getrawmempool` output has changed.\n-\n-- New RPC commands: `generatetoaddress`, `importprunedfunds`, `removeprunedfunds`, `signmessagewithprivkey`,\n-  `getmempoolancestors`, `getmempooldescendants`, `getmempoolentry`,\n-  `createwitnessaddress`, `addwitnessaddress`.\n-\n-- Removed RPC commands: `setgenerate`, `getgenerate`.\n-\n-- New options were added to `fundrawtransaction`: `includeWatching`, `changeAddress`, `changePosition` and `feeRate`.\n-\n-\n-Low-level ZMQ changes\n-----------------------\n-\n-- Each ZMQ notification now contains an up-counting sequence number that allows\n-  listeners to detect lost notifications.\n-  The sequence number is always the last element in a multi-part ZMQ notification and\n-  therefore backward compatible. Each message type has its own counter.\n-  PR [#7762](https://github.com/bitcoin/bitcoin/pull/7762).\n-\n-\n-0.13.0 Change log\n-=================\n-\n-Detailed release notes follow. This overview includes changes that affect\n-behavior, not code moves, refactors and string updates. For convenience in locating\n-the code changes and accompanying discussion, both the pull request and\n-git merge commit are mentioned.\n-\n-### RPC and other APIs\n-\n-- #7156 `9ee02cf` Remove cs_main lock from `createrawtransaction` (laanwj)\n-- #7326 `2cd004b` Fix typo, wrong information in gettxout help text (paveljanik)\n-- #7222 `82429d0` Indicate which transactions are signaling opt-in RBF (sdaftuar)\n-- #7480 `b49a623` Changed getnetworkhps value to double to avoid overflow (instagibbs)\n-- #7550 `8b958ab` Input-from-stdin mode for bitcoin-cli (laanwj)\n-- #7670 `c9a1265` Use cached block hash in blockToJSON() (rat4)\n-- #7726 `9af69fa` Correct importaddress help reference to importpubkey (CypherGrue)\n-- #7766 `16555b6` Register calls where they are defined (laanwj)\n-- #7797 `e662a76` Fix generatetoaddress failing to parse address (mruddy)\n-- #7774 `916b15a` Add versionHex in getblock and getblockheader JSON results (mruddy)\n-- #7863 `72c54e3` Getblockchaininfo: make bip9_softforks an object, not an array (rustyrussell)\n-- #7842 `d97101e` Do not print minping time in getpeerinfo when no ping received yet (paveljanik)\n-- #7518 `be14ca5` Add multiple options to fundrawtransaction (promag)\n-- #7756 `9e47fce` Add cursor to iterate over utxo set, use this in `gettxoutsetinfo` (laanwj)\n-- #7848 `88616d2` Divergence between 32- and 64-bit when hashing >4GB affects `gettxoutsetinfo` (laanwj)\n-- #7827 `4205ad7` Speed up `getchaintips` (mrbandrews)\n-- #7762 `a1eb344` Append a message sequence number to every ZMQ notification (jonasschnelli)\n-- #7688 `46880ed` List solvability in listunspent output and improve help (sipa)\n-- #7926 `5725807` Push back `getaddednodeinfo` dead value (instagibbs)\n-- #7953 `0630353` Create `signmessagewithprivkey` rpc (achow101)\n-- #8049 `c028c7b` Expose information on whether transaction relay is enabled in `getnetworkinfo` (laanwj)\n-- #7967 `8c1e49b` Add feerate option to `fundrawtransaction` (jonasschnelli)\n-- #8118 `9b6a48c` Reduce unnecessary hashing in `signrawtransaction` (jonasnick)\n-- #7957 `79004d4` Add support for transaction sequence number (jonasschnelli)\n-- #8153 `75ec320` `fundrawtransaction` feeRate: Use BTC/kB (MarcoFalke)\n-- #7292 `7ce9ac5` Expose ancestor/descendant information over RPC (sdaftuar)\n-- #8171 `62fcf27` Fix createrawtx sequence number unsigned int parsing (jonasschnelli)\n-- #7892 `9c3d0fa` Add full UTF-8 support to RPC (laanwj)\n-- #8317 `304eff3` Don't use floating point in rpcwallet (MarcoFalke)\n-- #8258 `5a06ebb` Hide softfork in `getblockchaininfo` if timeout is 0 (jl2012)\n-- #8244 `1922e5a` Remove unnecessary LOCK(cs_main) in getrawmempool (dcousens)\n-\n-### Block and transaction handling\n-\n-- #7056 `6a07208` Save last db read (morcos)\n-- #6842 `0192806` Limitfreerelay edge case bugfix (ptschip)\n-- #7084 `11d74f6` Replace maxFeeRate of 10000*minRelayTxFee with maxTxFee in mempool (MarcoFalke)\n-- #7539 `9f33dba` Add tags to mempool's mapTx indices (sdaftuar)\n-- #7592 `26a2a72` Re-remove ERROR logging for mempool rejects (laanwj)\n-- #7187 `14d6324` Keep reorgs fast for SequenceLocks checks (morcos)\n-- #7594 `01f4267` Mempool: Add tracking of ancestor packages (sdaftuar)\n-- #7904 `fc9e334` Txdb: Fix assert crash in new UTXO set cursor (laanwj)\n-- #7927 `f9c2ac7` Minor changes to dbwrapper to simplify support for other databases (laanwj)\n-- #7933 `e26b620` Fix OOM when deserializing UTXO entries with invalid length (sipa)\n-- #8020 `5e374f7` Use SipHash-2-4 for various non-cryptographic hashes (sipa)\n-- #8076 `d720980` VerifyDB: don't check blocks that have been pruned (sdaftuar)\n-- #8080 `862fd24` Do not use mempool for GETDATA for tx accepted after the last mempool req (gmaxwell)\n-- #7997 `a82f033` Replace mapNextTx with slimmer setSpends (kazcw)\n-- #8220 `1f86d64` Stop trimming when mapTx is empty (sipa)\n-- #8273 `396f9d6` Bump `-dbcache` default to 300MiB (laanwj)\n-- #7225 `eb33179` Eliminate unnecessary call to CheckBlock (sdaftuar)\n-- #7907 `006cdf6` Optimize and Cleanup CScript::FindAndDelete (pstratem)\n-- #7917 `239d419` Optimize reindex (sipa)\n-- #7763 `3081fb9` Put hex-encoded version in UpdateTip (sipa)\n-- #8149 `d612837` Testnet-only segregated witness (sipa)\n-- #8305 `3730393` Improve handling of unconnecting headers (sdaftuar)\n-- #8363 `fca1a41` Rename \"block cost\" to \"block weight\" (sdaftuar)\n-- #8381 `f84ee3d` Make witness v0 outputs non-standard (jl2012)\n-- #8364 `3f65ba2` Treat high-sigop transactions as larger rather than rejecting them (sipa)\n-\n-### P2P protocol and network code\n-\n-- #6589 `dc0305d` Log bytes recv/sent per command (jonasschnelli)\n-- #7164 `3b43cad` Do not download transactions during initial blockchain sync (ptschip)\n-- #7458 `898fedf` peers.dat, banlist.dat recreated when missing (kirkalx)\n-- #7637 `3da5d1b` Fix memleak in TorController (laanwj, jonasschnelli)\n-- #7553 `9f14e5a` Remove vfReachable and modify IsReachable to only use vfLimited (pstratem)\n-- #7708 `9426632` De-neuter NODE_BLOOM (pstratem)\n-- #7692 `29b2be6` Remove P2P alert system (btcdrak)\n-- #7542 `c946a15` Implement \"feefilter\" P2P message (morcos)\n-- #7573 `352fd57` Add `-maxtimeadjustment` command line option (mruddy)\n-- #7570 `232592a` Add IPv6 Link-Local Address Support (mruddy)\n-- #7874 `e6a4d48` Improve AlreadyHave (morcos)\n-- #7856 `64e71b3` Only send one GetAddr response per connection (gmaxwell)\n-- #7868 `7daa3ad` Split DNS resolving functionality out of net structures (theuni)\n-- #7919 `7617682` Fix headers announcements edge case (sdaftuar)\n-- #7514 `d9594bf` Fix IsInitialBlockDownload for testnet (jmacwhyte)\n-- #7959 `03cf6e8` fix race that could fail to persist a ban (kazcw)\n-- #7840 `3b9a0bf` Several performance and privacy improvements to inv/mempool handling (sipa)\n-- #8011 `65aecda` Don't run ThreadMessageHandler at lowered priority (kazcw)\n-- #7696 `5c3f8dd` Fix de-serialization bug where AddrMan is left corrupted (EthanHeilman)\n-- #7932 `ed749bd` CAddrMan::Deserialize handle corrupt serializations better (pstratem)\n-- #7906 `83121cc` Prerequisites for p2p encapsulation changes (theuni)\n-- #8033 `18436d8` Fix Socks5() connect failures to be less noisy and less unnecessarily scary (wtogami)\n-- #8082 `01d8359` Defer inserting into maprelay until just before relaying (gmaxwell)\n-- #7960 `6a22373` Only use AddInventoryKnown for transactions (sdaftuar)\n-- #8078 `2156fa2` Disable the mempool P2P command when bloom filters disabled (petertodd)\n-- #8065 `67c91f8` Addrman offline attempts (gmaxwell)\n-- #7703 `761cddb` Tor: Change auth order to only use password auth if -torpassword (laanwj)\n-- #8083 `cd0c513` Add support for dnsseeds with option to filter by servicebits (jonasschnelli)\n-- #8173 `4286f43` Use SipHash for node eviction (sipa)\n-- #8154 `1445835` Drop vAddrToSend after sending big addr message (kazcw)\n-- #7749 `be9711e` Enforce expected outbound services (sipa)\n-- #8208 `0a64777` Do not set extra flags for unfiltered DNS seed results (sipa)\n-- #8084 `e4bb4a8` Add recently accepted blocks and txn to AttemptToEvictConnection (gmaxwell)\n-- #8113 `3f89a53` Rework addnode behaviour (sipa)\n-- #8179 `94ab58b` Evict orphans which are included or precluded by accepted blocks (gmaxwell)\n-- #8068 `e9d76a1` Compact Blocks (TheBlueMatt)\n-- #8204 `0833894` Update petertodd's testnet seed (petertodd)\n-- #8247 `5cd35d3` Mark my dnsseed as supporting filtering (sipa)\n-- #8275 `042c323` Remove bad chain alert partition check (btcdrak)\n-- #8271 `1bc9c80` Do not send witnesses in cmpctblock (sipa)\n-- #8312 `ca40ef6` Fix mempool DoS vulnerability from malleated transactions (sdaftuar)\n-- #7180 `16ccb74` Account for `sendheaders` `verack` messages (laanwj)\n-- #8102 `425278d` Bugfix: use global ::fRelayTxes instead of CNode in version send (sipa)\n-- #8408 `b7e2011` Prevent fingerprinting, disk-DoS with compact blocks (sdaftuar)\n-\n-### Build system\n-\n-- #7302 `41f1a3e` C++11 build/runtime fixes (theuni)\n-- #7322 `fd9356b` c++11: add scoped enum fallbacks to CPPFLAGS rather than defining them locally (theuni)\n-- #7441 `a6771fc` Use Debian 8.3 in gitian build guide (fanquake)\n-- #7349 `152a821` Build against system UniValue when available (luke-jr)\n-- #7520 `621940e` LibreSSL doesn't define OPENSSL_VERSION, use LIBRESSL_VERSION_TEXT instead (paveljanik)\n-- #7528 `9b9bfce` autogen.sh: warn about needing autoconf if autoreconf is not found (knocte)\n-- #7504 `19324cf` Crystal clean make clean (paveljanik)\n-- #7619 `18b3f1b` Add missing sudo entry in gitian VM setup (btcdrak)\n-- #7616 `639ec58`  [depends] Delete unused patches  (MarcoFalke)\n-- #7658 `c15eb28` Add curl to Gitian setup instructions (btcdrak)\n-- #7710 `909b72b` [Depends] Bump miniupnpc and config.guess+sub (fanquake)\n-- #7723 `5131005` build: python 3 compatibility (laanwj)\n-- #7477 `28ad4d9` Fix quoting of copyright holders in configure.ac (domob1812)\n-- #7711 `a67bc5e` [build-aux] Update Boost & check macros to latest serials (fanquake)\n-- #7788 `4dc1b3a` Use relative paths instead of absolute paths in protoc calls (paveljanik)\n-- #7809 `bbd210d` depends: some base fixes/changes (theuni)\n-- #7603 `73fc922` Build System: Use PACKAGE_TARNAME in NSIS script (JeremyRand)\n-- #7905 `187186b` test: move accounting_tests and rpc_wallet_tests to wallet/test (laanwj)\n-- #7911 `351abf9` leveldb: integrate leveldb into our buildsystem (theuni)\n-- #7944 `a407807` Re-instate TARGET_OS=linux in configure.ac. Removed by 351abf9e035 (randy-waterhouse)\n-- #7920 `c3e3cfb` Switch Travis to Trusty (theuni)\n-- #7954 `08b37c5` build: quiet annoying warnings without adding new ones (theuni)\n-- #7165 `06162f1` build: Enable C++11 in build, require C++11 compiler (laanwj)\n-- #7982 `559fbae` build: No need to check for leveldb atomics (theuni)\n-- #8002 `f9b4582` [depends] Add -stdlib=libc++ to darwin CXX flags (fanquake)\n-- #7993 `6a034ed` [depends] Bump Freetype, ccache, ZeroMQ, miniupnpc, expat (fanquake)\n-- #8167 `19ea173` Ship debug tarballs/zips with debug symbols (theuni)\n-- #8175 `f0299d8` Add --disable-bench to config flags for windows (laanwj)\n-- #7283 `fd9881a` [gitian] Default reference_datetime to commit author date (MarcoFalke)\n-- #8181 `9201ce8` Get rid of `CLIENT_DATE` (laanwj)\n-- #8133 `fde0ac4` Finish up out-of-tree changes (theuni)\n-- #8188 `65a9d7d` Add armhf/aarch64 gitian builds (theuni)\n-- #8194 `cca1c8c` [gitian] set correct PATH for wrappers (MarcoFalke)\n-- #8198 `5201614` Sync ax_pthread with upstream draft4 (fanquake)\n-- #8210 `12a541e` [Qt] Bump to Qt5.6.1 (jonasschnelli)\n-- #8285 `da50997` windows: Add testnet link to installer (laanwj)\n-- #8304 `0cca2fe` [travis] Update SDK_URL (MarcoFalke)\n-- #8310 `6ae20df` Require boost for bench (theuni)\n-- #8315 `2e51590` Don't require sudo for Linux (theuni)\n-- #8314 `67caef6` Fix pkg-config issues for 0.13 (theuni)\n-- #8373 `1fe7f40` Fix OSX non-deterministic dmg (theuni)\n-- #8358 `cfd1280` Gbuild: Set memory explicitly (default is too low) (MarcoFalke)\n-\n-### GUI\n-\n-- #7154 `00b4b8d` Add InMempool() info to transaction details (jonasschnelli)\n-- #7068 `5f3c670` [RPC-Tests] add simple way to run rpc test over QT clients (jonasschnelli)\n-- #7218 `a1c185b` Fix misleading translation (MarcoFalke)\n-- #7214 `be9a9a3` qt5: Use the fixed font the system recommends (MarcoFalke)\n-- #7256 `08ab906` Add note to coin control dialog QT5 workaround (fanquake)\n-- #7255 `e289807` Replace some instances of formatWithUnit with formatHtmlWithUnit (fanquake)\n-- #7317 `3b57e9c` Fix RPCTimerInterface ordering issue (jonasschnelli)\n-- #7327 `c079d79` Transaction View: LastMonth calculation fixed (crowning-)\n-- #7334 `e1060c5` coincontrol workaround is still needed in qt5.4 (fixed in qt5.5) (MarcoFalke)\n-- #7383 `ae2db67` Rename \"amount\" to \"requested amount\" in receive coins table (jonasschnelli)\n-- #7396 `cdcbc59` Add option to increase/decrease font size in the console window (jonasschnelli)\n-- #7437 `9645218` Disable tab navigation for peers tables (Kefkius)\n-- #7604 `354b03d` build: Remove spurious dollar sign. Fixes #7189 (dooglus)\n-- #7605 `7f001bd` Remove openssl info from init/log and from Qt debug window (jonasschnelli)\n-- #7628 `87d6562` Add 'copy full transaction details' option (ericshawlinux)\n-- #7613 `3798e5d` Add autocomplete to bitcoin-qt's console window (GamerSg)\n-- #7668 `b24266c` Fix history deletion bug after font size change (achow101)\n-- #7680 `41d2dfa` Remove reflection from `about` icon (laanwj)\n-- #7686 `f034bce` Remove 0-fee from send dialog (MarcoFalke)\n-- #7506 `b88e0b0` Use CCoinControl selection in CWallet::FundTransaction (promag)\n-- #7732 `0b98dd7` Debug window: replace \"Build date\" with \"Datadir\" (jonasschnelli)\n-- #7761 `60db51d` remove trailing output-index from transaction-id (jonasschnelli)\n-- #7772 `6383268` Clear the input line after activating autocomplete (paveljanik)\n-- #7925 `f604bf6` Fix out-of-tree GUI builds (laanwj)\n-- #7939 `574ddc6` Make it possible to show details for multiple transactions (laanwj)\n-- #8012 `b33824b` Delay user confirmation of send (Tyler-Hardin)\n-- #8006 `7c8558d` Add option to disable the system tray icon (Tyler-Hardin)\n-- #8046 `169d379` Fix Cmd-Q / Menu Quit shutdown on OSX (jonasschnelli)\n-- #8042 `6929711` Don't allow to open the debug window during splashscreen & verification state (jonasschnelli)\n-- #8014 `77b49ac` Sort transactions by date (Tyler-Hardin)\n-- #8073 `eb2f6f7` askpassphrasedialog: Clear pass fields on accept (rat4)\n-- #8129 `ee1533e` Fix RPC console auto completer (UdjinM6)\n-- #7636 `fb0ac48` Add bitcoin address label to request payment QR code (makevoid)\n-- #8231 `760a6c7` Fix a bug where the SplashScreen will not be hidden during startup (jonasschnelli)\n-- #8256 `af2421c` BUG: bitcoin-qt crash (fsb4000)\n-- #8257 `ff03c50` Do not ask a UI question from bitcoind (sipa)\n-- #8288 `91abb77` Network-specific example address (laanwj)\n-- #7707 `a914968` UI support for abandoned transactions (jonasschnelli)\n-- #8207 `f7a403b` Add a link to the Bitcoin-Core repository and website to the About Dialog (MarcoFalke)\n-- #8281 `6a87eb0` Remove client name from debug window (laanwj)\n-- #8407 `45eba4b` Add dbcache migration path (jonasschnelli)\n-\n-### Wallet\n-\n-- #7262 `fc08994` Reduce inefficiency of GetAccountAddress() (dooglus)\n-- #7537 `78e81b0` Warn on unexpected EOF while salvaging wallet (laanwj)\n-- #7521 `3368895` Don't resend wallet txs that aren't in our own mempool (morcos)\n-- #7576 `86a1ec5` Move wallet help string creation to CWallet (jonasschnelli)\n-- #7577 `5b3b5a7` Move \"load wallet phase\" to CWallet (jonasschnelli)\n-- #7608 `0735c0c` Move hardcoded file name out of log messages (MarcoFalke)\n-- #7649 `4900641` Prevent multiple calls to CWallet::AvailableCoins (promag)\n-- #7646 `e5c3511` Fix lockunspent help message (promag)\n-- #7558 `b35a591` Add import/removeprunedfunds rpc call (instagibbs)\n-- #6215 `48c5adf` add bip32 pub key serialization (jonasschnelli)\n-- #7913 `bafd075` Fix for incorrect locking in GetPubKey() (keystore.cpp) (yurizhykin)\n-- #8036 `41138f9` init: Move berkeleydb version reporting to wallet (laanwj)\n-- #8028 `373b50d` Fix insanity of CWalletDB::WriteTx and CWalletTx::WriteToDisk (pstratem)\n-- #8061 `f6b7df3` Improve Wallet encapsulation (pstratem)\n-- #7891 `950be19` Always require OS randomness when generating secret keys (sipa)\n-- #7689 `b89ef13` Replace OpenSSL AES with ctaes-based version (sipa)\n-- #7825 `f972b04` Prevent multiple calls to ExtractDestination (pedrobranco)\n-- #8137 `243ac0c` Improve CWallet API with new AccountMove function (pstratem)\n-- #8142 `52c3f34` Improve CWallet API  with new GetAccountPubkey function (pstratem)\n-- #8035 `b67a472` Add simplest BIP32/deterministic key generation implementation (jonasschnelli)\n-- #7687 `a6ddb19` Stop treating importaddress'ed scripts as change (sipa)\n-- #8298 `aef3811` wallet: Revert input selection post-pruning (laanwj)\n-- #8324 `bc94b87` Keep HD seed during salvagewallet (jonasschnelli)\n-- #8323 `238300b` Add HD keypath to CKeyMetadata, report metadata in validateaddress (jonasschnelli)\n-- #8367 `3b38a6a` Ensure <0.13 clients can't open HD wallets (jonasschnelli)\n-- #8378 `ebea651` Move SetMinVersion for FEATURE_HD to SetHDMasterKey (pstratem)\n-- #8390 `73adfe3` Correct hdmasterkeyid/masterkeyid name confusion (jonasschnelli)\n-- #8206 `18b8ee1` Add HD xpriv to dumpwallet (jonasschnelli)\n-- #8389 `c3c82c4` Create a new HD seed after encrypting the wallet (jonasschnelli)\n-\n-### Tests and QA\n-\n-- #7320 `d3dfc6d` Test walletpassphrase timeout (MarcoFalke)\n-- #7208 `47c5ed1` Make max tip age an option instead of chainparam (laanwj)\n-- #7372 `21376af` Trivial: [qa] wallet: Print maintenance (MarcoFalke)\n-- #7280 `668906f` [travis] Fail when documentation is outdated (MarcoFalke)\n-- #7177 `93b0576` [qa] Change default block priority size to 0 (MarcoFalke)\n-- #7236 `02676c5` Use createrawtx locktime parm in txn_clone (dgenr8)\n-- #7212 `326ffed` Adds unittests for CAddrMan and CAddrinfo, removes source of non-determinism (EthanHeilman)\n-- #7490 `d007511` tests: Remove May15 test (laanwj)\n-- #7531 `18cb2d5` Add bip68-sequence.py to extended rpc tests (btcdrak)\n-- #7536 `ce5fc02` test: test leading spaces for ParseHex (laanwj)\n-- #7620 `1b68de3` [travis] Only run check-doc.py once (MarcoFalke)\n-- #7455 `7f96671` [travis] Exit early when check-doc.py fails (MarcoFalke)\n-- #7667 `56d2c4e` Move GetTempPath() to testutil (musalbas)\n-- #7517 `f1ca891` test: script_error checking in script_invalid tests (laanwj)\n-- #7684 `3d0dfdb` Extend tests (MarcoFalke)\n-- #7697 `622fe6c` Tests: make prioritise_transaction.py more robust (sdaftuar)\n-- #7709 `efde86b` Tests: fix missing import in mempool_packages (sdaftuar)\n-- #7702 `29e1131` Add tests verifychain, lockunspent, getbalance, listsinceblock (MarcoFalke)\n-- #7720 `3b4324b` rpc-test: Normalize assert() (MarcoFalke)\n-- #7757 `26794d4` wallet: Wait for reindex to catch up (MarcoFalke)\n-- #7764 `a65b36c` Don't run pruning.py twice (MarcoFalke)\n-- #7773 `7c80e72` Fix comments in tests (btcdrak)\n-- #7489 `e9723cb` tests: Make proxy_test work on travis servers without IPv6 (laanwj)\n-- #7801 `70ac71b` Remove misleading \"errorString syntax\" (MarcoFalke)\n-- #7803 `401c65c` maxblocksinflight: Actually enable test (MarcoFalke)\n-- #7802 `3bc71e1` httpbasics: Actually test second connection (MarcoFalke)\n-- #7849 `ab8586e` tests: add varints_bitpatterns test (laanwj)\n-- #7846 `491171f` Clean up lockorder data of destroyed mutexes (sipa)\n-- #7853 `6ef5e00` py2: Unfiddle strings into bytes explicitly (MarcoFalke)\n-- #7878 `53adc83` [test] bctest.py: Revert faa41ee (MarcoFalke)\n-- #7798 `cabba24` [travis] Print the commit which was evaluated (MarcoFalke)\n-- #7833 `b1bf511` tests: Check Content-Type header returned from RPC server (laanwj)\n-- #7851 `fa9d86f` pull-tester: Don't mute zmq ImportError (MarcoFalke)\n-- #7822 `0e6fd5e` Add listunspent() test for spendable/unspendable UTXO (jpdffonseca)\n-- #7912 `59ad568` Tests: Fix deserialization of reject messages (sdaftuar)\n-- #7941 `0ea3941` Fixing comment in script_test.json test case (Christewart)\n-- #7807 `0ad1041` Fixed miner test values, gave constants for less error-prone values (instagibbs)\n-- #7980 `88b77c7` Smartfees: Properly use ordered dict (MarcoFalke)\n-- #7814 `77b637f` Switch to py3 (MarcoFalke)\n-- #8030 `409a8a1` Revert fatal-ness of missing python-zmq (laanwj)\n-- #8018 `3e90fe6` Autofind rpc tests --srcdir (jonasschnelli)\n-- #8016 `5767e80` Fix multithread CScheduler and reenable test (paveljanik)\n-- #7972 `423ca30` pull-tester: Run rpc test in parallel  (MarcoFalke)\n-- #8039 `69b3a6d` Bench: Add crypto hash benchmarks (laanwj)\n-- #8041 `5b736dd` Fix bip9-softforks blockstore issue (MarcoFalke)\n-- #7994 `1f01443` Add op csv tests to script_tests.json (Christewart)\n-- #8038 `e2bf830` Various minor fixes (MarcoFalke)\n-- #8072 `1b87e5b` Travis: 'make check' in parallel and verbose (theuni)\n-- #8056 `8844ef1` Remove hardcoded \"4 nodes\" from test_framework (MarcoFalke)\n-- #8047 `37f9a1f` Test_framework: Set wait-timeout for bitcoind procs (MarcoFalke)\n-- #8095 `6700cc9` Test framework: only cleanup on successful test runs (sdaftuar)\n-- #8098 `06bd4f6` Test_framework: Append portseed to tmpdir (MarcoFalke)\n-- #8104 `6ff2c8d` Add timeout to sync_blocks() and sync_mempools() (sdaftuar)\n-- #8111 `61b8684` Benchmark SipHash (sipa)\n-- #8107 `52b803e` Bench: Added base58 encoding/decoding benchmarks (yurizhykin)\n-- #8115 `0026e0e` Avoid integer division in the benchmark inner-most loop (gmaxwell)\n-- #8090 `a2df115` Adding P2SH(p2pkh) script test case (Christewart)\n-- #7992 `ec45cc5` Extend #7956 with one more test (TheBlueMatt)\n-- #8139 `ae5575b` Fix interrupted HTTP RPC connection workaround for Python 3.5+ (sipa)\n-- #8164 `0f24eaf` [Bitcoin-Tx] fix missing test fixtures, fix 32bit atoi issue (jonasschnelli)\n-- #8166 `0b5279f` Src/test: Do not shadow local variables (paveljanik)\n-- #8141 `44c1b1c` Continuing port of java comparison tool (mrbandrews)\n-- #8201 `36b7400` fundrawtransaction: Fix race, assert amounts (MarcoFalke)\n-- #8214 `ed2cd59` Mininode: fail on send_message instead of silent return (MarcoFalke)\n-- #8215 `a072d1a` Don't use floating point in wallet tests (MarcoFalke)\n-- #8066 `65c2058` Test_framework: Use different rpc_auth_pair for each node (MarcoFalke)\n-- #8216 `0d41d70` Assert 'changePosition out of bounds'  (MarcoFalke)\n-- #8222 `961893f` Enable mempool consistency checks in unit tests (sipa)\n-- #7751 `84370d5` test_framework: python3.4 authproxy compat (laanwj)\n-- #7744 `d8e862a` test_framework: detect failure of bitcoind startup (laanwj)\n-- #8280 `115735d` Increase sync_blocks() timeouts in pruning.py (MarcoFalke)\n-- #8340 `af9b7a9` Solve trivial merge conflict in p2p-segwit.py (MarcoFalke)\n-- #8067 `3e4cf8f` Travis: use slim generic image, and some fixups (theuni)\n-- #7951 `5c7df70` Test_framework: Properly print exception (MarcoFalke)\n-- #8070 `7771aa5` Remove non-determinism which is breaking net_tests #8069 (EthanHeilman)\n-- #8309 `bb2646a` Add wallet-hd test (MarcoFalke)\n-- #8444 `cd0910b` Fix p2p-feefilter.py for changed tx relay behavior (sdaftuar)\n-\n-### Mining\n-\n-- #7507 `11c7699` Remove internal miner (Leviathn)\n-- #7663 `c87f51e` Make the generate RPC call function for non-regtest (sipa)\n-- #7671 `e2ebd25` Add generatetoaddress RPC to mine to an address (achow101)\n-- #7935 `66ed450` Versionbits: GBT support (luke-jr)\n-- #7600 `66db2d6` Select transactions using feerate-with-ancestors (sdaftuar)\n-- #8295 `f5660d3` Mining-related fixups for 0.13.0 (sdaftuar)\n-- #7796 `536b75e` Add support for negative fee rates, fixes `prioritizetransaction` (MarcoFalke)\n-- #8362 `86edc20` Scale legacy sigop count in CreateNewBlock (sdaftuar)\n-- #8489 `8b0eee6` Bugfix: Use pre-BIP141 sigops until segwit activates (GBT) (luke-jr)\n-\n-### Documentation and miscellaneous\n-\n-- #7423 `69e2a40` Add example for building with constrained resources (jarret)\n-- #8254 `c2c69ed` Add OSX ZMQ requirement to QA readme (fanquake)\n-- #8203 `377d131` Clarify documentation for running a tor node (nathaniel-mahieu)\n-- #7428 `4b12266` Add example for listing ./configure flags (nathaniel-mahieu)\n-- #7847 `3eae681` Add arch linux build example (mruddy)\n-- #7968 `ff69aaf` Fedora build requirements (wtogami)\n-- #8013 `fbedc09` Fedora build requirements, add gcc-c++ and fix typo (wtogami)\n-- #8009 `fbd8478` Fixed invalid example paths in gitian-building.md (JeremyRand)\n-- #8240 `63fbdbc` Mention Windows XP end of support in release notes (laanwj)\n-- #8303 `5077d2c` Update bips.md for CSV softfork (fanquake)\n-- #7789 `e0b3e19` Add note about using the Qt official binary installer (paveljanik)\n-- #7791 `e30a5b0` Change Precise to Trusty in gitian-building.md (JeremyRand)\n-- #7838 `8bb5d3d` Update gitian build guide to debian 8.4.0 (fanquake)\n-- #7855 `b778e59` Replace precise with trusty (MarcoFalke)\n-- #7975 `fc23fee` Update bitcoin-core GitHub links (MarcoFalke)\n-- #8034 `e3a8207` Add basic git squash workflow (fanquake)\n-- #7813 `214ec0b` Update port in tor.md (MarcoFalke)\n-- #8193 `37c9830` Use Debian 8.5 in the gitian-build guide (fanquake)\n-- #8261 `3685e0c` Clarify help for `getblockchaininfo` (paveljanik)\n-- #7185 `ea0f5a2` Note that reviewers should mention the id of the commits they reviewed (pstratem)\n-- #7290 `c851d8d` [init] Add missing help for args (MarcoFalke)\n-- #7281 `f9fd4c2` Improve CheckInputs() comment about sig verification (petertodd)\n-- #7417 `1e06bab` Minor improvements to the release process (PRabahy)\n-- #7444 `4cdbd42` Improve block validity/ConnectBlock() comments (petertodd)\n-- #7527 `db2e1c0` Fix and cleanup listreceivedbyX documentation (instagibbs)\n-- #7541 `b6e00af` Clarify description of blockindex (pinheadmz)\n-- #7590 `f06af57` Improving wording related to Boost library requirements [updated] (jonathancross)\n-- #7635 `0fa88ef` Add dependency info to test docs (elliotolds)\n-- #7609 `3ba07bd` RPM spec file project (AliceWonderMiscreations)\n-- #7850 `229a17c` Removed call to `TryCreateDirectory` from `GetDefaultDataDir` in `src/util.cpp` (alexreg)\n-- #7888 `ec870e1` Prevector: fix 2 bugs in currently unreached code paths (kazcw)\n-- #7922 `90653bc` CBase58Data::SetString: cleanse the full vector (kazcw)\n-- #7881 `c4e8390` Update release process (laanwj)\n-- #7952 `a9c8b74` Log invalid block hash to make debugging easier (paveljanik)\n-- #7974 `8206835` More comments on the design of AttemptToEvictConnection (gmaxwell)\n-- #7795 `47a7cfb` UpdateTip: log only one line at most per block (laanwj)\n-- #8110 `e7e25ea` Add benchmarking notes (fanquake)\n-- #8121 `58f0c92` Update implemented BIPs list (fanquake)\n-- #8029 `58725ba` Simplify OS X build notes (fanquake)\n-- #8143 `d46b8b5` comment nit: miners don't vote (instagibbs)\n-- #8136 `22e0b35` Log/report in 10% steps during VerifyDB (jonasschnelli)\n-- #8168 `d366185` util: Add ParseUInt32 and ParseUInt64 (laanwj)\n-- #8178 `f7b1bfc` Add git and github tips and tricks to developer notes (sipa)\n-- #8177 `67db011` developer notes: updates for C++11 (kazcw)\n-- #8229 `8ccdac1` [Doc] Update OS X build notes for 10.11 SDK (fanquake)\n-- #8233 `9f1807a` Mention Linux ARM executables in release process and notes (laanwj)\n-- #7540 `ff46dd4` Rename OP_NOP3 to OP_CHECKSEQUENCEVERIFY (btcdrak)\n-- #8289 `26316ff` bash-completion: Adapt for 0.12 and 0.13 (roques)\n-- #7453 `3dc3149` Missing patches from 0.12 (MarcoFalke)\n-- #7113 `54a550b` Switch to a more efficient rolling Bloom filter (sipa)\n-- #7257 `de9e5ea` Combine common error strings for different options so translations can be shared and reused (luke-jr)\n-- #7304 `b8f485c` [contrib] Add clang-format-diff.py (MarcoFalke)\n-- #7378 `e6f97ef` devtools: replace github-merge with python version (laanwj)\n-- #7395 `0893705` devtools: show pull and commit information in github-merge (laanwj)\n-- #7402 `6a5932b` devtools: github-merge get toplevel dir without extra whitespace (achow101)\n-- #7425 `20a408c` devtools: Fix utf-8 support in messages for github-merge (laanwj)\n-- #7632 `409f843` Delete outdated test-patches reference (Lewuathe)\n-- #7662 `386f438` remove unused NOBLKS_VERSION_{START,END} constants (rat4)\n-- #7737 `aa0d2b2` devtools: make github-merge.py use py3 (laanwj)\n-- #7781 `55db5f0` devtools: Auto-set branch to merge to in github-merge (laanwj)\n-- #7934 `f17032f` Improve rolling bloom filter performance and benchmark (sipa)\n-- #8004 `2efe38b` signal handling: fReopenDebugLog and fRequestShutdown should be type sig_atomic_t (catilac)\n-- #7713 `f6598df` Fixes for verify-commits script (petertodd)\n-- #8412 `8360d5b` libconsensus: Expose a flag for BIP112 (jtimon)\n-\n-Credits\n-=======\n-\n-Thanks to everyone who directly contributed to this release:\n-\n-- 21E14\n-- accraze\n-- Adam Brown\n-- Alexander Regueiro\n-- Alex Morcos\n-- Alfie John\n-- Alice Wonder\n-- AlSzacrel\n-- Andrew Chow\n-- Andr\u00e9s G. Aragoneses\n-- Bob McElrath\n-- BtcDrak\n-- calebogden\n-- C\u00e9dric F\u00e9lizard\n-- Chirag Dav\u00e9\n-- Chris Moore\n-- Chris Stewart\n-- Christian von Roques\n-- Chris Wheeler\n-- Cory Fields\n-- crowning-\n-- Daniel Cousens\n-- Daniel Kraft\n-- Denis Lukianov\n-- Elias Rohrer\n-- Elliot Olds\n-- Eric Shaw\n-- error10\n-- Ethan Heilman\n-- face\n-- fanquake\n-- Francesco 'makevoid' Canessa\n-- fsb4000\n-- Gavin Andresen\n-- gladoscc\n-- Gregory Maxwell\n-- Gregory Sanders\n-- instagibbs\n-- James O'Beirne\n-- Jannes Faber\n-- Jarret Dyrbye\n-- Jeremy Rand\n-- jloughry\n-- jmacwhyte\n-- Joao Fonseca\n-- Johnson Lau\n-- Jonas Nick\n-- Jonas Schnelli\n-- Jonathan Cross\n-- Jo\u00e3o Barbosa\n-- Jorge Tim\u00f3n\n-- Kaz Wesley\n-- Kefkius\n-- kirkalx\n-- Krzysztof Jurewicz\n-- Leviathn\n-- lewuathe\n-- Luke Dashjr\n-- Luv Khemani\n-- Marcel Kr\u00fcger\n-- Marco Falke\n-- Mark Friedenbach\n-- Matt\n-- Matt Bogosian\n-- Matt Corallo\n-- Matthew English\n-- Matthew Zipkin\n-- mb300sd\n-- Mitchell Cash\n-- mrbandrews\n-- mruddy\n-- Murch\n-- Mustafa\n-- Nathaniel Mahieu\n-- Nicolas Dorier\n-- Patrick Strateman\n-- Paul Rabahy\n-- paveljanik\n-- Pavel Jan\u00edk\n-- Pavel Vasin\n-- Pedro Branco\n-- Peter Todd\n-- Philip Kaufmann\n-- Pieter Wuille\n-- Prayag Verma\n-- ptschip\n-- Puru\n-- randy-waterhouse\n-- R E Broadley\n-- Rusty Russell\n-- Suhas Daftuar\n-- Suriyaa Kudo\n-- TheLazieR Yip\n-- Thomas Kerin\n-- Tom Harding\n-- Tyler Hardin\n-- UdjinM6\n-- Warren Togami\n-- Will Binns\n-- Wladimir J. van der Laan\n-- Yuri Zhykin\n-\n-As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/)."
      },
      {
        "sha": "75c2d61be8d3c1b3c85bf9a89df1821b39d42e56",
        "filename": "doc/release-notes/release-notes-0.13.1.md",
        "status": "removed",
        "additions": 0,
        "deletions": 410,
        "changes": 410,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.13.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.13.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.13.1.md?ref=ddeacfcff563b602b8833287a34dfbee340e5bec",
        "patch": "@@ -1,410 +0,0 @@\n-Bitcoin Core version 0.13.1 is now available from:\n-\n-  <https://bitcoin.org/bin/bitcoin-core-0.13.1/>\n-\n-This is a new minor version release, including activation parameters for the\n-segwit softfork, various bugfixes and performance improvements, as well as\n-updated translations.\n-\n-Please report bugs using the issue tracker at github:\n-\n-  <https://github.com/bitcoin/bitcoin/issues>\n-\n-To receive security and update notifications, please subscribe to:\n-\n-  <https://bitcoincore.org/en/list/announcements/join/>\n-\n-Compatibility\n-==============\n-\n-Microsoft ended support for Windows XP on [April 8th, 2014](https://www.microsoft.com/en-us/WindowsForBusiness/end-of-xp-support),\n-an OS initially released in 2001. This means that not even critical security\n-updates will be released anymore. Without security updates, using a bitcoin\n-wallet on a XP machine is irresponsible at least.\n-\n-In addition to that, with 0.12.x there have been varied reports of Bitcoin Core\n-randomly crashing on Windows XP. It is [not clear](https://github.com/bitcoin/bitcoin/issues/7681#issuecomment-217439891)\n-what the source of these crashes is, but it is likely that upstream\n-libraries such as Qt are no longer being tested on XP.\n-\n-We do not have time nor resources to provide support for an OS that is\n-end-of-life. From 0.13.0 on, Windows XP is no longer supported. Users are\n-suggested to upgrade to a newer version of Windows, or install an alternative OS\n-that is supported.\n-\n-No attempt is made to prevent installing or running the software on Windows XP,\n-you can still do so at your own risk, but do not expect it to work: do not\n-report issues about Windows XP to the issue tracker.\n-\n-From 0.13.1 onwards OS X 10.7 is no longer supported. 0.13.0 was intended to work on 10.7+, \n-but severe issues with the libc++ version on 10.7.x keep it from running reliably. \n-0.13.1 now requires 10.8+, and will communicate that to 10.7 users, rather than crashing unexpectedly.\n-\n-Notable changes\n-===============\n-\n-Segregated witness soft fork\n-----------------------------\n-\n-Segregated witness (segwit) is a soft fork that, if activated, will\n-allow transaction-producing software to separate (segregate) transaction\n-signatures (witnesses) from the part of the data in a transaction that is\n-covered by the txid. This provides several immediate benefits:\n-\n-- **Elimination of unwanted transaction malleability:** Segregating the witness\n-  allows both existing and upgraded software to calculate the transaction\n-  identifier (txid) of transactions without referencing the witness, which can\n-  sometimes be changed by third-parties (such as miners) or by co-signers in a\n-  multisig spend. This solves all known cases of unwanted transaction\n-  malleability, which is a problem that makes programming Bitcoin wallet\n-  software more difficult and which seriously complicates the design of smart\n-  contracts for Bitcoin.\n-\n-- **Capacity increase:** Segwit transactions contain new fields that are not\n-  part of the data currently used to calculate the size of a block, which\n-  allows a block containing segwit transactions to hold more data than allowed\n-  by the current maximum block size. Estimates based on the transactions\n-  currently found in blocks indicate that if all wallets switch to using\n-  segwit, the network will be able to support about 70% more transactions. The\n-  network will also be able to support more of the advanced-style payments\n-  (such as multisig) than it can support now because of the different weighting\n-  given to different parts of a transaction after segwit activates (see the\n-  following section for details).\n-\n-- **Weighting data based on how it affects node performance:** Some parts of\n-  each Bitcoin block need to be stored by nodes in order to validate future\n-  blocks; other parts of a block can be immediately forgotten (pruned) or used\n-  only for helping other nodes sync their copy of the block chain.  One large\n-  part of the immediately prunable data are transaction signatures (witnesses),\n-  and segwit makes it possible to give a different \"weight\" to segregated\n-  witnesses to correspond with the lower demands they place on node resources.\n-  Specifically, each byte of a segregated witness is given a weight of 1, each\n-  other byte in a block is given a weight of 4, and the maximum allowed weight\n-  of a block is 4 million.  Weighting the data this way better aligns the most\n-  profitable strategy for creating blocks with the long-term costs of block\n-  validation.\n-\n-- **Signature covers value:** A simple improvement in the way signatures are\n-  generated in segwit simplifies the design of secure signature generators\n-  (such as hardware wallets), reduces the amount of data the signature\n-  generator needs to download, and allows the signature generator to operate\n-  more quickly.  This is made possible by having the generator sign the amount\n-  of bitcoins they think they are spending, and by having full nodes refuse to\n-  accept those signatures unless the amount of bitcoins being spent is exactly\n-  the same as was signed.  For non-segwit transactions, wallets instead had to\n-  download the complete previous transactions being spent for every payment\n-  they made, which could be a slow operation on hardware wallets and in other\n-  situations where bandwidth or computation speed was constrained.\n-\n-- **Linear scaling of sighash operations:** In 2015 a block was produced that\n-  required about 25 seconds to validate on modern hardware because of the way\n-  transaction signature hashes are performed.  Other similar blocks, or blocks\n-  that could take even longer to validate, can still be produced today.  The\n-  problem that caused this can't be fixed in a soft fork without unwanted\n-  side-effects, but transactions that opt-in to using segwit will now use a\n-  different signature method that doesn't suffer from this problem and doesn't\n-  have any unwanted side-effects.\n-\n-- **Increased security for multisig:** Bitcoin addresses (both P2PKH addresses\n-  that start with a '1' and P2SH addresses that start with a '3') use a hash\n-  function known as RIPEMD-160.  For P2PKH addresses, this provides about 160\n-  bits of security---which is beyond what cryptographers believe can be broken\n-  today.  But because P2SH is more flexible, only about 80 bits of security is\n-  provided per address. Although 80 bits is very strong security, it is within\n-  the realm of possibility that it can be broken by a powerful adversary.\n-  Segwit allows advanced transactions to use the SHA256 hash function instead,\n-  which provides about 128 bits of security  (that is 281 trillion times as\n-  much security as 80 bits and is equivalent to the maximum bits of security\n-  believed to be provided by Bitcoin's choice of parameters for its Elliptic\n-  Curve Digital Security Algorithm [ECDSA].)\n-\n-- **More efficient almost-full-node security** Satoshi Nakamoto's original\n-  Bitcoin paper describes a method for allowing newly-started full nodes to\n-  skip downloading and validating some data from historic blocks that are\n-  protected by large amounts of proof of work.  Unfortunately, Nakamoto's\n-  method can't guarantee that a newly-started node using this method will\n-  produce an accurate copy of Bitcoin's current ledger (called the UTXO set),\n-  making the node vulnerable to falling out of consensus with other nodes.\n-  Although the problems with Nakamoto's method can't be fixed in a soft fork,\n-  Segwit accomplishes something similar to his original proposal: it makes it\n-  possible for a node to optionally skip downloading some blockchain data\n-  (specifically, the segregated witnesses) while still ensuring that the node\n-  can build an accurate copy of the UTXO set for the block chain with the most\n-  proof of work.  Segwit enables this capability at the consensus layer, but\n-  note that Bitcoin Core does not provide an option to use this capability as\n-  of this 0.13.1 release.\n-\n-- **Script versioning:** Segwit makes it easy for future soft forks to allow\n-  Bitcoin users to individually opt-in to almost any change in the Bitcoin\n-  Script language when those users receive new transactions.  Features\n-  currently being researched by Bitcoin Core contributors that may use this\n-  capability include support for Schnorr signatures, which can improve the\n-  privacy and efficiency of multisig transactions (or transactions with\n-  multiple inputs), and Merklized Abstract Syntax Trees (MAST), which can\n-  improve the privacy and efficiency of scripts with two or more conditions.\n-  Other Bitcoin community members are studying several other improvements\n-  that can be made using script versioning.\n-\n-Activation for the segwit soft fork is being managed using BIP9\n-versionbits.  Segwit's version bit is bit 1, and nodes will begin\n-tracking which blocks signal support for segwit at the beginning of the\n-first retarget period after segwit's start date of 15 November 2016.  If\n-95% of blocks within a 2,016-block retarget period (about two weeks)\n-signal support for segwit, the soft fork will be locked in.  After\n-another 2,016 blocks, segwit will activate.\n-\n-For more information about segwit, please see the [segwit FAQ][], the\n-[segwit wallet developers guide][] or BIPs [141][BIP141], [143][BIP143],\n-[144][BIP144], and [145][BIP145].  If you're a miner or mining pool\n-operator, please see the [versionbits FAQ][] for information about\n-signaling support for a soft fork.\n-\n-[Segwit FAQ]: https://bitcoincore.org/en/2016/01/26/segwit-benefits/\n-[segwit wallet developers guide]: https://bitcoincore.org/en/segwit_wallet_dev/\n-[BIP141]: https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki\n-[BIP143]: https://github.com/bitcoin/bips/blob/master/bip-0143.mediawiki\n-[BIP144]: https://github.com/bitcoin/bips/blob/master/bip-0144.mediawiki\n-[BIP145]: https://github.com/bitcoin/bips/blob/master/bip-0145.mediawiki\n-[versionbits FAQ]: https://bitcoincore.org/en/2016/06/08/version-bits-miners-faq/\n-\n-\n-Null dummy soft fork\n--------------------\n-\n-Combined with the segwit soft fork is an additional change that turns a\n-long-existing network relay policy into a consensus rule. The\n-`OP_CHECKMULTISIG` and `OP_CHECKMULTISIGVERIFY` opcodes consume an extra\n-stack element (\"dummy element\") after signature validation. The dummy\n-element is not inspected in any manner, and could be replaced by any\n-value without invalidating the script.\n-\n-Because any value can be used for this dummy element, it's possible for\n-a third-party to insert data into other people's transactions, changing\n-the transaction's txid (called transaction malleability) and possibly\n-causing other problems.\n-\n-Since Bitcoin Core 0.10.0, nodes have defaulted to only relaying and\n-mining transactions whose dummy element was a null value (0x00, also\n-called OP_0).  The null dummy soft fork turns this relay rule into a\n-consensus rule both for non-segwit transactions and segwit transactions,\n-so that this method of mutating transactions is permanently eliminated\n-from the network.\n-\n-Signaling for the null dummy soft fork is done by signaling support\n-for segwit, and the null dummy soft fork will activate at the same time\n-as segwit.\n-\n-For more information, please see [BIP147][].\n-\n-[BIP147]: https://github.com/bitcoin/bips/blob/master/bip-0147.mediawiki\n-\n-Low-level RPC changes\n----------------------\n-\n-- `importprunedfunds` only accepts two required arguments. Some versions accept\n-  an optional third arg, which was always ignored. Make sure to never pass more\n-  than two arguments.\n-\n-\n-Linux ARM builds\n-----------------\n-\n-With the 0.13.0 release, pre-built Linux ARM binaries were added to the set of\n-uploaded executables. Additional detail on the ARM architecture targeted by each\n-is provided below.\n-\n-The following extra files can be found in the download directory or torrent:\n-\n-- `bitcoin-${VERSION}-arm-linux-gnueabihf.tar.gz`: Linux binaries targeting\n-  the 32-bit ARMv7-A architecture.\n-- `bitcoin-${VERSION}-aarch64-linux-gnu.tar.gz`: Linux binaries targeting\n-  the 64-bit ARMv8-A architecture.\n-\n-ARM builds are still experimental. If you have problems on a certain device or\n-Linux distribution combination please report them on the bug tracker, it may be\n-possible to resolve them. Note that the device you use must be (backward)\n-compatible with the architecture targeted by the binary that you use.\n-For example, a Raspberry Pi 2 Model B or Raspberry Pi 3 Model B (in its 32-bit\n-execution state) device, can run the 32-bit ARMv7-A targeted binary. However,\n-no model of Raspberry Pi 1 device can run either binary because they are all\n-ARMv6 architecture devices that are not compatible with ARMv7-A or ARMv8-A.\n-\n-Note that Android is not considered ARM Linux in this context. The executables\n-are not expected to work out of the box on Android.\n-\n-\n-0.13.1 Change log\n-=================\n-\n-Detailed release notes follow. This overview includes changes that affect\n-behavior, not code moves, refactors and string updates. For convenience in locating\n-the code changes and accompanying discussion, both the pull request and\n-git merge commit are mentioned.\n-\n-### Consensus\n-- #8636 `9dfa0c8` Implement NULLDUMMY softfork (BIP147) (jl2012)\n-- #8848 `7a34a46` Add NULLDUMMY verify flag in bitcoinconsensus.h (jl2012)\n-- #8937 `8b66659` Define start and end time for segwit deployment (sipa)\n-\n-### RPC and other APIs\n-- #8581 `526d2b0` Drop misleading option in importprunedfunds (MarcoFalke)\n-- #8699 `a5ec248` Remove createwitnessaddress RPC command (jl2012)\n-- #8780 `794b007` Deprecate getinfo (MarcoFalke)\n-- #8832 `83ad563` Throw JSONRPCError when utxo set can not be read (MarcoFalke)\n-- #8884 `b987348` getblockchaininfo help: pruneheight is the lowest, not highest, block (luke-jr)\n-- #8858 `3f508ed` rpc: Generate auth cookie in hex instead of base64 (laanwj)\n-- #8951 `7c2bf4b` RPC/Mining: getblocktemplate: Update and fix formatting of help (luke-jr)\n-\n-### Block and transaction handling\n-- #8611 `a9429ca` Reduce default number of blocks to check at startup (sipa)\n-- #8634 `3e80ab7` Add policy: null signature for failed CHECK(MULTI)SIG (jl2012)\n-- #8525 `1672225` Do not store witness txn in rejection cache (sipa)\n-- #8499 `9777fe1` Add several policy limits and disable uncompressed keys for segwit scripts (jl2012)\n-- #8526 `0027672` Make non-minimal OP_IF/NOTIF argument non-standard for P2WSH (jl2012)\n-- #8524 `b8c79a0` Precompute sighashes (sipa)\n-- #8651 `b8c79a0` Predeclare PrecomputedTransactionData as struct (sipa)\n-\n-### P2P protocol and network code\n-- #8740 `42ea51a` No longer send local address in addrMe (laanwj)\n-- #8427 `69d1cd2` Ignore `notfound` P2P messages (laanwj)\n-- #8573 `4f84082` Set jonasschnellis dns-seeder filter flag (jonasschnelli)\n-- #8712 `23feab1` Remove maxuploadtargets recommended minimum (jonasschnelli)\n-- #8862 `7ae6242` Fix a few cases where messages were sent after requested disconnect (theuni)\n-- #8393 `fe1975a` Support for compact blocks together with segwit (sipa)\n-- #8282 `2611ad7` Feeler connections to increase online addrs in the tried table (EthanHeilman)\n-- #8612 `2215c22` Check for compatibility with download in FindNextBlocksToDownload (sipa)\n-- #8606 `bbf379b` Fix some locks (sipa)\n-- #8594 `ab295bb` Do not add random inbound peers to addrman (gmaxwell)\n-- #8940 `5b4192b` Add x9 service bit support to dnsseed.bluematt.me, seed.bitcoinstats.com (TheBlueMatt, cdecker)\n-- #8944 `685e4c7` Remove bogus assert on number of oubound connections. (TheBlueMatt)\n-- #8949 `0dbc48a` Be more agressive in getting connections to peers with relevant services (gmaxwell)\n-\n-### Build system\n-- #8293 `fa5b249` Allow building libbitcoinconsensus without any univalue (luke-jr)\n-- #8492 `8b0bdd3` Allow building bench_bitcoin by itself (luke-jr)\n-- #8563 `147003c` Add configure check for -latomic (ajtowns)\n-- #8626 `ea51b0f` Berkeley DB v6 compatibility fix (netsafe)\n-- #8520 `75f2065` Remove check for `openssl/ec.h` (laanwj)\n-\n-### GUI\n-- #8481 `d9f0d4e` Fix minimize and close bugs (adlawren)\n-- #8487 `a37cec5` Persist the datadir after option reset (achow101)\n-- #8697 `41fd852` Fix op order to append first alert (rodasmith)\n-- #8678 `8e03382` Fix UI bug that could result in paying unexpected fee (jonasschnelli)\n-- #8911 `7634d8e` Translate all files, even if wallet disabled (laanwj)\n-- #8540 `1db3352` Fix random segfault when closing \"Choose data directory\" dialog (laanwj)\n-- #7579 `f1c0d78` Show network/chain errors in the GUI (jonasschnelli)\n-\n-### Wallet\n-- #8443 `464dedd` Trivial cleanup of HD wallet changes (jonasschnelli)\n-- #8539 `cb07f19` CDB: fix debug output (crowning-)\n-- #8664 `091cdeb` Fix segwit-related wallet bug (sdaftuar)\n-- #8693 `c6a6291` Add witness address to address book (instagibbs)\n-- #8765 `6288659` Remove \"unused\" ThreadFlushWalletDB from removeprunedfunds (jonasschnelli)\n-\n-### Tests and QA\n-- #8713 `ae8c7df` create_cache: Delete temp dir when done (MarcoFalke)\n-- #8716 `e34374e` Check legacy wallet as well (MarcoFalke)\n-- #8750 `d6ebe13` Refactor RPCTestHandler to prevent TimeoutExpired (MarcoFalke)\n-- #8652 `63462c2` remove root test directory for RPC tests (yurizhykin)\n-- #8724 `da94272` walletbackup: Sync blocks inside the loop (MarcoFalke)\n-- #8400 `bea02dc` enable rpcbind_test (yurizhykin)\n-- #8417 `f70be14` Add walletdump RPC test (including HD- & encryption-tests) (jonasschnelli)\n-- #8419 `a7aa3cc` Enable size accounting in mining unit tests (sdaftuar)\n-- #8442 `8bb1efd` Rework hd wallet dump test (MarcoFalke)\n-- #8528 `3606b6b` Update p2p-segwit.py to reflect correct behavior (instagibbs)\n-- #8531 `a27cdd8` abandonconflict: Use assert_equal (MarcoFalke)\n-- #8667 `6b07362` Fix SIGHASH_SINGLE bug in test_framework SignatureHash (jl2012)\n-- #8673 `03b0196` Fix obvious assignment/equality error in test (JeremyRubin)\n-- #8739 `cef633c` Fix broken sendcmpct test in p2p-compactblocks.py (sdaftuar)\n-- #8418 `ff893aa` Add tests for compact blocks (sdaftuar)\n-- #8803 `375437c` Ping regularly in p2p-segwit.py to keep connection alive (jl2012)\n-- #8827 `9bbe66e` Split up slow RPC calls to avoid pruning test timeouts (sdaftuar)\n-- #8829 `2a8bca4` Add bitcoin-tx JSON tests (jnewbery)\n-- #8834 `1dd1783` blockstore: Switch to dumb dbm (MarcoFalke)\n-- #8835 `d87227d` nulldummy.py: Don't run unused code (MarcoFalke)\n-- #8836 `eb18cc1` bitcoin-util-test.py should fail if the output file is empty (jnewbery)\n-- #8839 `31ab2f8` Avoid ConnectionResetErrors during RPC tests (laanwj)\n-- #8840 `cbc3fe5` Explicitly set encoding to utf8 when opening text files (laanwj)\n-- #8841 `3e4abb5` Fix nulldummy test (jl2012)\n-- #8854 `624a007` Fix race condition in p2p-compactblocks test (sdaftuar)\n-- #8857 `1f60d45` mininode: Only allow named args in wait_until (MarcoFalke)\n-- #8860 `0bee740` util: Move wait_bitcoinds() into stop_nodes() (MarcoFalke)\n-- #8882 `b73f065` Fix race conditions in p2p-compactblocks.py and sendheaders.py (sdaftuar)\n-- #8904 `cc6f551` Fix compact block shortids for a test case (dagurval)\n-\n-### Documentation\n-- #8754 `0e2c6bd` Target protobuf 2.6 in OS X build notes. (fanquake)\n-- #8461 `b17a3f9` Document return value of networkhashps for getmininginfo RPC endpoint (jlopp)\n-- #8512 `156e305` Corrected JSON typo on setban of net.cpp (sevastos)\n-- #8683 `8a7d7ff` Fix incorrect file name bitcoin.qrc  (bitcoinsSG)\n-- #8891 `5e0dd9e` Update bips.md for Segregated Witness (fanquake)\n-- #8545 `863ae74` Update git-subtree-check.sh README (MarcoFalke)\n-- #8607 `486650a` Fix doxygen off-by-one comments, fix typos (MarcoFalke)\n-- #8560 `c493f43` Fix two VarInt examples in serialize.h (cbarcenas)\n-- #8737 `084cae9` UndoReadFromDisk works on undo files (rev), not on block files (paveljanik)\n-- #8625 `0a35573` Clarify statement about parallel jobs in rpc-tests.py (isle2983)\n-- #8624 `0e6d753` build: Mention curl (MarcoFalke)\n-- #8604 `b09e13c` build,doc: Update for 0.13.0+ and OpenBSD 5.9 (laanwj)\n-- #8939 `06d15fb` Update implemented bips for 0.13.1 (sipa)\n-\n-### Miscellaneous\n-- #8742 `d31ac72` Specify Protobuf version 2 in paymentrequest.proto (fanquake)\n-- #8414,#8558,#8676,#8700,#8701,#8702 Add missing copyright headers (isle2983, kazcw)\n-- #8899 `4ed2627` Fix wake from sleep issue with Boost 1.59.0 (fanquake)\n-- #8817 `bcf3806` update bitcoin-tx to output witness data (jnewbery)\n-- #8513 `4e5fc31` Fix a type error that would not compile on OSX. (JeremyRubin)\n-- #8392 `30eac2d` Fix several node initialization issues (sipa)\n-- #8548 `305d8ac` Use `__func__` to get function name for output printing (MarcoFalke)\n-- #8291 `a987431` [util] CopyrightHolders: Check for untranslated substitution (MarcoFalke)\n-\n-Credits\n-=======\n-\n-Thanks to everyone who directly contributed to this release:\n-\n-- adlawren\n-- Alexey Vesnin\n-- Anders \u00d8yvind Urke-S\u00e6tre\n-- Andrew Chow\n-- Anthony Towns\n-- BtcDrak\n-- Chris Stewart\n-- Christian Barcenas\n-- Christian Decker\n-- Cory Fields\n-- crowning-\n-- Dagur Valberg Johannsson\n-- David A. Harding\n-- Eric Lombrozo\n-- Ethan Heilman\n-- fanquake\n-- Gaurav Rana\n-- Gregory Maxwell\n-- instagibbs\n-- isle2983\n-- Jameson Lopp\n-- Jeremy Rubin\n-- jnewbery\n-- Johnson Lau\n-- Jonas Schnelli\n-- jonnynewbs\n-- Justin Camarena\n-- Kaz Wesley\n-- leijurv\n-- Luke Dashjr\n-- MarcoFalke\n-- Marty Jones\n-- Matt Corallo\n-- Micha\n-- Michael Ford\n-- mruddy\n-- Pavel Jan\u00edk\n-- Pieter Wuille\n-- rodasmith\n-- Sev\n-- Suhas Daftuar\n-- whythat\n-- Wladimir J. van der Laan\n-\n-As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/)."
      },
      {
        "sha": "45fff5c8bbdc1bb2834e204412164f8b34140bde",
        "filename": "doc/release-notes/release-notes-0.13.2.md",
        "status": "removed",
        "additions": 0,
        "deletions": 178,
        "changes": 178,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.13.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.13.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.13.2.md?ref=ddeacfcff563b602b8833287a34dfbee340e5bec",
        "patch": "@@ -1,178 +0,0 @@\n-Bitcoin Core version 0.13.2 is now available from:\n-\n-  <https://bitcoin.org/bin/bitcoin-core-0.13.2/>\n-\n-This is a new minor version release, including various bugfixes and\n-performance improvements, as well as updated translations.\n-\n-Please report bugs using the issue tracker at github:\n-\n-  <https://github.com/bitcoin/bitcoin/issues>\n-\n-To receive security and update notifications, please subscribe to:\n-\n-  <https://bitcoincore.org/en/list/announcements/join/>\n-\n-Compatibility\n-==============\n-\n-Microsoft ended support for Windows XP on [April 8th, 2014](https://www.microsoft.com/en-us/WindowsForBusiness/end-of-xp-support),\n-an OS initially released in 2001. This means that not even critical security\n-updates will be released anymore. Without security updates, using a bitcoin\n-wallet on a XP machine is irresponsible at least.\n-\n-In addition to that, with 0.12.x there have been varied reports of Bitcoin Core\n-randomly crashing on Windows XP. It is [not clear](https://github.com/bitcoin/bitcoin/issues/7681#issuecomment-217439891)\n-what the source of these crashes is, but it is likely that upstream\n-libraries such as Qt are no longer being tested on XP.\n-\n-We do not have time nor resources to provide support for an OS that is\n-end-of-life. From 0.13.0 on, Windows XP is no longer supported. Users are\n-suggested to upgrade to a newer version of Windows, or install an alternative OS\n-that is supported.\n-\n-No attempt is made to prevent installing or running the software on Windows XP,\n-you can still do so at your own risk, but do not expect it to work: do not\n-report issues about Windows XP to the issue tracker.\n-\n-From 0.13.1 onwards OS X 10.7 is no longer supported. 0.13.0 was intended to work on 10.7+, \n-but severe issues with the libc++ version on 10.7.x keep it from running reliably. \n-0.13.1 now requires 10.8+, and will communicate that to 10.7 users, rather than crashing unexpectedly.\n-\n-Notable changes\n-===============\n-\n-Change to wallet handling of mempool rejection\n------------------------------------------------\n-\n-When a newly created transaction failed to enter the mempool due to\n-the limits on chains of unconfirmed transactions the sending RPC\n-calls would return an error.  The transaction would still be queued\n-in the wallet and, once some of the parent transactions were\n-confirmed, broadcast after the software was restarted.\n-\n-This behavior has been changed to return success and to reattempt\n-mempool insertion at the same time transaction rebroadcast is\n-attempted, avoiding a need for a restart.\n-\n-Transactions in the wallet which cannot be accepted into the mempool\n-can be abandoned with the previously existing abandontransaction RPC\n-(or in the GUI via a context menu on the transaction).\n-\n-\n-0.13.2 Change log\n-=================\n-\n-Detailed release notes follow. This overview includes changes that affect\n-behavior, not code moves, refactors and string updates. For convenience in locating\n-the code changes and accompanying discussion, both the pull request and\n-git merge commit are mentioned.\n-\n-### Consensus\n-- #9293 `e591c10` [0.13 Backport #9053] IBD using chainwork instead of height and not using header timestamp (gmaxwell)\n-- #9053 `5b93eee` IBD using chainwork instead of height and not using header timestamps (gmaxwell)\n-\n-### RPC and other APIs\n-- #8845 `1d048b9` Don't return the address of a P2SH of a P2SH (jnewbery)\n-- #9041 `87fbced` keypoololdest denote Unix epoch, not GMT (s-matthew-english)\n-- #9122 `f82c81b` fix getnettotals RPC description about timemillis (visvirial)\n-- #9042 `5bcb05d` [rpc] ParseHash: Fail when length is not 64 (MarcoFalke)\n-- #9194 `f26dab7` Add option to return non-segwit serialization via rpc (instagibbs)\n-- #9347 `b711390` [0.13.2] wallet/rpc backports (MarcoFalke)\n-- #9292 `c365556` Complain when unknown rpcserialversion is specified (sipa)\n-- #9322 `49a612f` [qa] Don't set unknown rpcserialversion (MarcoFalke)\n-\n-### Block and transaction handling\n-- #8357 `ce0d817` [mempool] Fix relaypriority calculation error (maiiz)\n-- #9267 `0a4aa87` [0.13 backport #9239] Disable fee estimates for a confirm target of 1 block (morcos)\n-- #9196 `0c09d9f` Send tip change notification from invalidateblock (ryanofsky)\n-\n-### P2P protocol and network code\n-- #8995 `9ef3875` Add missing cs_main lock to ::GETBLOCKTXN processing (TheBlueMatt)\n-- #9234 `94531b5` torcontrol: Explicitly request RSA1024 private key (laanwj)\n-- #8637 `2cad5db` Compact Block Tweaks (rebase of #8235) (sipa)\n-- #9058 `286e548` Fixes for p2p-compactblocks.py test timeouts on travis (#8842) (ryanofsky)\n-- #8865 `4c71fc4` Decouple peer-processing-logic from block-connection-logic (TheBlueMatt)\n-- #9117 `6fe3981` net: don't send feefilter messages before the version handshake is complete (theuni)\n-- #9188 `ca1fd75` Make orphan parent fetching ask for witnesses (gmaxwell)\n-- #9052 `3a3bcbf` Use RelevantServices instead of node_network in AttemptToEvict (gmaxwell)\n-- #9048 `9460771` [0.13 backport #9026] Fix handling of invalid compact blocks (sdaftuar)\n-- #9357 `03b6f62` [0.13 backport #9352] Attempt reconstruction from all compact block announcements (sdaftuar)\n-- #9189 `b96a8f7` Always add default_witness_commitment with GBT client support (sipa)\n-- #9253 `28d0f22` Fix calculation of number of bound sockets to use (TheBlueMatt)\n-- #9199 `da5a16b` Always drop the least preferred HB peer when adding a new one (gmaxwell)\n-\n-### Build system\n-- #9169 `d1b4da9` build: fix qt5.7 build under macOS (theuni)\n-- #9326 `a0f7ece` Update for OpenSSL 1.1 API (gmaxwell)\n-- #9224 `396c405` Prevent FD_SETSIZE error building on OpenBSD (ivdsangen)\n-\n-### GUI\n-- #8972 `6f86b53` Make warnings label selectable (jonasschnelli) (MarcoFalke)\n-- #9185 `6d70a73` Fix coincontrol sort issue (jonasschnelli)\n-- #9094 `5f3a12c` Use correct conversion function for boost::path datadir (laanwj)\n-- #8908 `4a974b2` Update bitcoin-qt.desktop (s-matthew-english)\n-- #9190 `dc46b10` Plug many memory leaks (laanwj)\n-\n-### Wallet\n-- #9290 `35174a0` Make RelayWalletTransaction attempt to AcceptToMemoryPool (gmaxwell)\n-- #9295 `43bcfca` Bugfix: Fundrawtransaction: don't terminate when keypool is empty (jonasschnelli)\n-- #9302 `f5d606e` Return txid even if ATMP fails for new transaction (sipa)\n-- #9262 `fe39f26` Prefer coins that have fewer ancestors, sanity check txn before ATMP (instagibbs)\n-\n-### Tests and QA\n-- #9159 `eca9b46` Wait for specific block announcement in p2p-compactblocks (ryanofsky)\n-- #9186 `dccdc3a` Fix use-after-free in scheduler tests (laanwj)\n-- #9168 `3107280` Add assert_raises_message to check specific error message (mrbandrews)\n-- #9191 `29435db` 0.13.2 Backports (MarcoFalke)\n-- #9077 `1d4c884` Increase wallet-dump RPC timeout (ryanofsky)\n-- #9098 `ecd7db5` Handle zombies and cluttered tmpdirs (MarcoFalke)\n-- #8927 `387ec9d` Add script tests for FindAndDelete in pre-segwit and segwit scripts (jl2012)\n-- #9200 `eebc699` bench: Fix subtle counting issue when rescaling iteration count (laanwj)\n-\n-### Miscellaneous\n-- #8838 `094848b` Calculate size and weight of block correctly in CreateNewBlock() (jnewbery)\n-- #8920 `40169dc` Set minimum required Boost to 1.47.0 (fanquake)\n-- #9251 `a710a43` Improvement of documentation of command line parameter 'whitelist' (wodry)\n-- #8932 `106da69` Allow bitcoin-tx to create v2 transactions (btcdrak)\n-- #8929 `12428b4` add software-properties-common (sigwo)\n-- #9120 `08d1c90` bug: Missed one \"return false\" in recent refactoring in #9067 (UdjinM6)\n-- #9067 `f85ee01` Fix exit codes (UdjinM6)\n-- #9340 `fb987b3` [0.13] Update secp256k1 subtree (MarcoFalke)\n-- #9229 `b172377` Remove calls to getaddrinfo_a (TheBlueMatt)\n-\n-Credits\n-=======\n-\n-Thanks to everyone who directly contributed to this release:\n-\n-- Alex Morcos\n-- BtcDrak\n-- Cory Fields\n-- fanquake\n-- Gregory Maxwell\n-- Gregory Sanders\n-- instagibbs\n-- Ivo van der Sangen\n-- jnewbery\n-- Johnson Lau\n-- Jonas Schnelli\n-- Luke Dashjr\n-- maiiz\n-- MarcoFalke\n-- Masahiko Hyuga\n-- Matt Corallo\n-- matthias\n-- mrbandrews\n-- Pavel Jan\u00edk\n-- Pieter Wuille\n-- randy-waterhouse\n-- Russell Yanofsky\n-- S. Matthew English\n-- Steven\n-- Suhas Daftuar\n-- UdjinM6\n-- Wladimir J. van der Laan\n-- wodry\n-\n-As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/)."
      },
      {
        "sha": "c41f22979b581f3ba6af58b73b578c8d138fa966",
        "filename": "doc/release-notes/release-notes-0.14.0.md",
        "status": "removed",
        "additions": 0,
        "deletions": 873,
        "changes": 873,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.14.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.14.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.14.0.md?ref=ddeacfcff563b602b8833287a34dfbee340e5bec",
        "patch": "@@ -1,873 +0,0 @@\n-Bitcoin Core version 0.14.0 is now available from:\n-\n-  <https://bitcoin.org/bin/bitcoin-core-0.14.0/>\n-\n-This is a new major version release, including new features, various bugfixes\n-and performance improvements, as well as updated translations.\n-\n-Please report bugs using the issue tracker at github:\n-\n-  <https://github.com/bitcoin/bitcoin/issues>\n-\n-To receive security and update notifications, please subscribe to:\n-\n-  <https://bitcoincore.org/en/list/announcements/join/>\n-\n-Compatibility\n-==============\n-\n-Bitcoin Core is extensively tested on multiple operating systems using\n-the Linux kernel, macOS 10.8+, and Windows Vista and later.\n-\n-Microsoft ended support for Windows XP on [April 8th, 2014](https://www.microsoft.com/en-us/WindowsForBusiness/end-of-xp-support),\n-No attempt is made to prevent installing or running the software on Windows XP, you\n-can still do so at your own risk but be aware that there are known instabilities and issues.\n-Please do not report issues about Windows XP to the issue tracker.\n-\n-Bitcoin Core should also work on most other Unix-like systems but is not\n-frequently tested on them.\n-\n-Notable changes\n-===============\n-\n-Performance Improvements\n---------------\n-\n-Validation speed and network propagation performance have been greatly\n-improved, leading to much shorter sync and initial block download times.\n-\n-- The script signature cache has been reimplemented as a \"cuckoo cache\",\n-  allowing for more signatures to be cached and faster lookups.\n-- Assumed-valid blocks have been introduced which allows script validation to\n-  be skipped for ancestors of known-good blocks, without changing the security\n-  model. See below for more details.\n-- In some cases, compact blocks are now relayed before being fully validated as\n-  per BIP152.\n-- P2P networking has been refactored with a focus on concurrency and\n-  throughput. Network operations are no longer bottlenecked by validation. As a\n-  result, block fetching is several times faster than previous releases in many\n-  cases.\n-- The UTXO cache now claims unused mempool memory. This speeds up initial block\n-  download as UTXO lookups are a major bottleneck there, and there is no use for\n-  the mempool at that stage.\n-\n-\n-Manual Pruning\n---------------\n-\n-Bitcoin Core has supported automatically pruning the blockchain since 0.11. Pruning\n-the blockchain allows for significant storage space savings as the vast majority of\n-the downloaded data can be discarded after processing so very little of it remains\n-on the disk.\n-\n-Manual block pruning can now be enabled by setting `-prune=1`. Once that is set,\n-the RPC command `pruneblockchain` can be used to prune the blockchain up to the\n-specified height or timestamp.\n-\n-`getinfo` Deprecated\n---------------------\n-\n-The `getinfo` RPC command has been deprecated. Each field in the RPC call\n-has been moved to another command's output with that command also giving\n-additional information that `getinfo` did not provide. The following table\n-shows where each field has been moved to:\n-\n-|`getinfo` field   | Moved to                                  |\n-|------------------|-------------------------------------------|\n-`\"version\"`\t   | `getnetworkinfo()[\"version\"]`\n-`\"protocolversion\"`| `getnetworkinfo()[\"protocolversion\"]`\n-`\"walletversion\"`  | `getwalletinfo()[\"walletversion\"]`\n-`\"balance\"`\t   | `getwalletinfo()[\"balance\"]`\n-`\"blocks\"`\t   | `getblockchaininfo()[\"blocks\"]`\n-`\"timeoffset\"`\t   | `getnetworkinfo()[\"timeoffset\"]`\n-`\"connections\"`\t   | `getnetworkinfo()[\"connections\"]`\n-`\"proxy\"`\t   | `getnetworkinfo()[\"networks\"][0][\"proxy\"]`\n-`\"difficulty\"`\t   | `getblockchaininfo()[\"difficulty\"]`\n-`\"testnet\"`\t   | `getblockchaininfo()[\"chain\"] == \"test\"`\n-`\"keypoololdest\"`  | `getwalletinfo()[\"keypoololdest\"]`\n-`\"keypoolsize\"`\t   | `getwalletinfo()[\"keypoolsize\"]`\n-`\"unlocked_until\"` | `getwalletinfo()[\"unlocked_until\"]`\n-`\"paytxfee\"`\t   | `getwalletinfo()[\"paytxfee\"]`\n-`\"relayfee\"`\t   | `getnetworkinfo()[\"relayfee\"]`\n-`\"errors\"`\t   | `getnetworkinfo()[\"warnings\"]`\n-\n-ZMQ On Windows\n---------------\n-\n-Previously the ZeroMQ notification system was unavailable on Windows\n-due to various issues with ZMQ. These have been fixed upstream and\n-now ZMQ can be used on Windows. Please see [this document](https://github.com/bitcoin/bitcoin/blob/master/doc/zmq.md) for\n-help with using ZMQ in general.\n-\n-Nested RPC Commands in Debug Console\n-------------------------------------\n-\n-The ability to nest RPC commands has been added to the debug console. This\n-allows users to have the output of a command become the input to another\n-command without running the commands separately.\n-\n-The nested RPC commands use bracket syntax (i.e. `getwalletinfo()`) and can\n-be nested (i.e. `getblock(getblockhash(1))`). Simple queries can be\n-done with square brackets where object values are accessed with either an \n-array index or a non-quoted string (i.e. `listunspent()[0][txid]`). Both\n-commas and spaces can be used to separate parameters in both the bracket syntax\n-and normal RPC command syntax.\n-\n-Network Activity Toggle\n------------------------\n-\n-A RPC command and GUI toggle have been added to enable or disable all p2p\n-network activity. The network status icon in the bottom right hand corner \n-is now the GUI toggle. Clicking the icon will either enable or disable all\n-p2p network activity. If network activity is disabled, the icon will \n-be grayed out with an X on top of it.\n-\n-Additionally the `setnetworkactive` RPC command has been added which does\n-the same thing as the GUI icon. The command takes one boolean parameter,\n-`true` enables networking and `false` disables it.\n-\n-Out-of-sync Modal Info Layer\n-----------------------------\n-\n-When Bitcoin Core is out-of-sync on startup, a semi-transparent information\n-layer will be shown over top of the normal display. This layer contains\n-details about the current sync progress and estimates the amount of time\n-remaining to finish syncing. This layer can also be hidden and subsequently\n-unhidden by clicking on the progress bar at the bottom of the window.\n-\n-Support for JSON-RPC Named Arguments\n-------------------------------------\n-\n-Commands sent over the JSON-RPC interface and through the `bitcoin-cli` binary\n-can now use named arguments. This follows the [JSON-RPC specification](http://www.jsonrpc.org/specification)\n-for passing parameters by-name with an object.\n-\n-`bitcoin-cli` has been updated to support this by parsing `name=value` arguments\n-when the `-named` option is given.\n-\n-Some examples:\n-\n-    src/bitcoin-cli -named help command=\"help\"\n-    src/bitcoin-cli -named getblockhash height=0\n-    src/bitcoin-cli -named getblock blockhash=000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f\n-    src/bitcoin-cli -named sendtoaddress address=\"(snip)\" amount=\"1.0\" subtractfeefromamount=true\n-\n-The order of arguments doesn't matter in this case. Named arguments are also\n-useful to leave out arguments that should stay at their default value. The\n-rarely-used arguments `comment` and `comment_to` to `sendtoaddress`, for example, can\n-be left out. However, this is not yet implemented for many RPC calls, this is\n-expected to land in a later release.\n-\n-The RPC server remains fully backwards compatible with positional arguments.\n-\n-Opt into RBF When Sending\n--------------------------\n-\n-A new startup option, `-walletrbf`, has been added to allow users to have all\n-transactions sent opt into RBF support. The default value for this option is\n-currently `false`, so transactions will not opt into RBF by default. The new\n-`bumpfee` RPC can be used to replace transactions that opt into RBF.\n-\n-Sensitive Data Is No Longer Stored In Debug Console History\n------------------------------------------------------------\n-\n-The debug console maintains a history of previously entered commands that can be\n-accessed by pressing the Up-arrow key so that users can easily reuse previously\n-entered commands. Commands which have sensitive information such as passphrases and\n-private keys will now have a `(...)` in place of the parameters when accessed through\n-the history.\n-\n-Retaining the Mempool Across Restarts\n--------------------------------------\n-\n-The mempool will be saved to the data directory prior to shutdown\n-to a `mempool.dat` file. This file preserves the mempool so that when the node\n-restarts the mempool can be filled with transactions without waiting for new transactions\n-to be created. This will also preserve any changes made to a transaction through\n-commands such as `prioritisetransaction` so that those changes will not be lost.\n-\n-Final Alert\n------------\n-\n-The Alert System was [disabled and deprecated](https://bitcoin.org/en/alert/2016-11-01-alert-retirement) in Bitcoin Core 0.12.1 and removed in 0.13.0. \n-The Alert System was retired with a maximum sequence final alert which causes any nodes\n-supporting the Alert System to display a static hard-coded \"Alert Key Compromised\" message which also\n-prevents any other alerts from overriding it. This final alert is hard-coded into this release\n-so that all old nodes receive the final alert.\n-\n-GUI Changes\n------------\n-\n- - After resetting the options by clicking the `Reset Options` button \n-   in the options dialog or with the `-resetguioptions` startup option, \n-   the user will be prompted to choose the data directory again. This \n-   is to ensure that custom data directories will be kept after the \n-   option reset which clears the custom data directory set via the choose \n-   datadir dialog.\n-\n- - Multiple peers can now be selected in the list of peers in the debug \n-   window. This allows for users to ban or disconnect multiple peers \n-   simultaneously instead of banning them one at a time.\n-\n- - An indicator has been added to the bottom right hand corner of the main\n-   window to indicate whether the wallet being used is a HD wallet. This\n-   icon will be grayed out with an X on top of it if the wallet is not a\n-   HD wallet.\n-\n-Low-level RPC changes\n-----------------------\n-\n- - `importprunedfunds` only accepts two required arguments. Some versions accept\n-   an optional third arg, which was always ignored. Make sure to never pass more\n-   than two arguments.\n-\n- - The first boolean argument to `getaddednodeinfo` has been removed. This is \n-   an incompatible change.\n-\n- - RPC command `getmininginfo` loses the \"testnet\" field in favor of the more\n-   generic \"chain\" (which has been present for years).\n-\n- - A new RPC command `preciousblock` has been added which marks a block as\n-   precious. A precious block will be treated as if it were received earlier\n-   than a competing block.\n-\n- - A new RPC command `importmulti` has been added which receives an array of \n-   JSON objects representing the intention of importing a public key, a \n-   private key, an address and script/p2sh\n-\n- - Use of `getrawtransaction` for retrieving confirmed transactions with unspent\n-   outputs has been deprecated. For now this will still work, but in the future\n-   it may change to only be able to retrieve information about transactions in\n-   the mempool or if `txindex` is enabled.\n-\n- - A new RPC command `getmemoryinfo` has been added which will return information\n-   about the memory usage of Bitcoin Core. This was added in conjunction with\n-   optimizations to memory management. See [Pull #8753](https://github.com/bitcoin/bitcoin/pull/8753)\n-   for more information.\n-\n- - A new RPC command `bumpfee` has been added which allows replacing an\n-   unconfirmed wallet transaction that signaled RBF (see the `-walletrbf`\n-   startup option above) with a new transaction that pays a higher fee, and\n-   should be more likely to get confirmed quickly.\n-\n-HTTP REST Changes\n------------------\n-\n- - UTXO set query (`GET /rest/getutxos/<checkmempool>/<txid>-<n>/<txid>-<n>\n-   /.../<txid>-<n>.<bin|hex|json>`) responses were changed to return status \n-   code `HTTP_BAD_REQUEST` (400) instead of `HTTP_INTERNAL_SERVER_ERROR` (500)\n-   when requests contain invalid parameters.\n-\n-Minimum Fee Rate Policies\n--------------------------\n-\n-Since the changes in 0.12 to automatically limit the size of the mempool and improve the performance of block creation in mining code it has not been important for relay nodes or miners to set `-minrelaytxfee`. With this release the following concepts that were tied to this option have been separated out:\n-- incremental relay fee used for calculating BIP 125 replacement and mempool limiting. (1000 satoshis/kB)\n-- calculation of threshold for a dust output. (effectively 3 * 1000 satoshis/kB)\n-- minimum fee rate of a package of transactions to be included in a block created by the mining code. If miners wish to set this minimum they can use the new `-blockmintxfee` option.  (defaults to 1000 satoshis/kB)\n-\n-The `-minrelaytxfee` option continues to exist but is recommended to be left unset.\n-\n-Fee Estimation Changes\n-----------------------\n-\n-- Since 0.13.2 fee estimation for a confirmation target of 1 block has been\n-  disabled. The fee slider will no longer be able to choose a target of 1 block.\n-  This is only a minor behavior change as there was often insufficient\n-  data for this target anyway. `estimatefee 1` will now always return -1 and\n-  `estimatesmartfee 1` will start searching at a target of 2.\n-\n-- The default target for fee estimation is changed to 6 blocks in both the GUI\n-  (previously 25) and for RPC calls (previously 2).\n-\n-Removal of Priority Estimation\n-------------------------------\n-\n-- Estimation of \"priority\" needed for a transaction to be included within a target\n-  number of blocks has been removed.  The RPC calls are deprecated and will either\n-  return -1 or 1e24 appropriately. The format for `fee_estimates.dat` has also\n-  changed to no longer save these priority estimates. It will automatically be\n-  converted to the new format which is not readable by prior versions of the\n-  software.\n-\n-- Support for \"priority\" (coin age) transaction sorting for mining is\n-  considered deprecated in Core and will be removed in the next major version.\n-  This is not to be confused with the `prioritisetransaction` RPC which will remain\n-  supported by Core for adding fee deltas to transactions.\n-\n-P2P connection management\n---------------------------\n-\n-- Peers manually added through the `-addnode` option or `addnode` RPC now have their own\n-  limit of eight connections which does not compete with other inbound or outbound\n-  connection usage and is not subject to the limitation imposed by the `-maxconnections`\n-  option.\n-\n-- New connections to manually added peers are performed more quickly.\n-\n-Introduction of assumed-valid blocks\n--------------------------------------\n-\n-- A significant portion of the initial block download time is spent verifying\n-  scripts/signatures.  Although the verification must pass to ensure the security\n-  of the system, no other result from this verification is needed: If the node\n-  knew the history of a given block were valid it could skip checking scripts\n-  for its ancestors.\n-\n-- A new configuration option 'assumevalid' is provided to express this knowledge\n-  to the software.  Unlike the 'checkpoints' in the past this setting does not\n-  force the use of a particular chain: chains that are consistent with it are\n-  processed quicker, but other chains are still accepted if they'd otherwise\n-  be chosen as best. Also unlike 'checkpoints' the user can configure which\n-  block history is assumed true, this means that even outdated software can\n-  sync more quickly if the setting is updated by the user.\n-\n-- Because the validity of a chain history is a simple objective fact it is much\n-  easier to review this setting.  As a result the software ships with a default\n-  value adjusted to match the current chain shortly before release.  The use\n-  of this default value can be disabled by setting -assumevalid=0\n-\n-Fundrawtransaction change address reuse\n-----------------------------------------\n-\n-- Before 0.14, `fundrawtransaction` was by default wallet stateless. In\n-  almost all cases `fundrawtransaction` does add a change-output to the\n-  outputs of the funded transaction. Before 0.14, the used keypool key was\n-  never marked as change-address key and directly returned to the keypool\n-  (leading to address reuse).  Before 0.14, calling `getnewaddress`\n-  directly after `fundrawtransaction` did generate the same address as\n-  the change-output address.\n-\n-- Since 0.14, fundrawtransaction does reserve the change-output-key from\n-  the keypool by default (optional by setting  `reserveChangeKey`, default =\n-  `true`)\n-\n-- Users should also consider using `getrawchangeaddress()` in conjunction\n-  with `fundrawtransaction`'s `changeAddress` option.\n-\n-Unused mempool memory used by coincache\n-----------------------------------------\n-\n-- Before 0.14, memory reserved for mempool (using the `-maxmempool` option)\n-  went unused during initial block download, or IBD. In 0.14, the UTXO DB cache\n-  (controlled with the `-dbcache` option) borrows memory from the mempool\n-  when there is extra memory available. This may result in an increase in\n-  memory usage during IBD for those previously relying on only the `-dbcache`\n-  option to limit memory during that time.\n-\n-0.14.0 Change log\n-=================\n-\n-Detailed release notes follow. This overview includes changes that affect\n-behavior, not code moves, minor refactors and string updates. For convenience\n-in locating the code changes and accompanying discussion, both the pull request\n-and git merge commit are mentioned.\n-\n-### RPC and other APIs\n-- #8421 `b77bb95` httpserver: drop boost dependency (theuni)\n-- #8638 `f061415` rest.cpp: change `HTTP_INTERNAL_SERVER_ERROR` to `HTTP_BAD_REQUEST` (djpnewton)\n-- #8272 `91990ee` Make the dummy argument to getaddednodeinfo optional (sipa)\n-- #8722 `bb843ad` bitcoin-cli: More detailed error reporting (laanwj)\n-- #6996 `7f71a3c` Add preciousblock RPC (sipa)\n-- #8788 `97c7f73` Give RPC commands more information about the RPC request (jonasschnelli)\n-- #7948 `5d2c8e5` Augment getblockchaininfo bip9\\_softforks data (mruddy)\n-- #8980 `0e22855` importmulti: Avoid using boost::variant::operator!=, which is only in newer boost versions (luke-jr)\n-- #9025 `4d8558a` Getrawtransaction should take a bool for verbose (jnewbery)\n-- #8811 `5754e03` Add support for JSON-RPC named arguments (laanwj)\n-- #9520 `2456a83` Deprecate non-txindex getrawtransaction and better warning (sipa)\n-- #9518 `a65ced1` Return height of last block pruned by pruneblockchain RPC (ryanofsky)\n-- #9222 `7cb024e` Add 'subtractFeeFromAmount' option to 'fundrawtransaction' (dooglus)\n-- #8456 `2ef52d3` Simplified `bumpfee` command (mrbandrews)\n-- #9516 `727a798` Bug-fix: listsinceblock: use fork point as reference for blocks in reorg'd chains (kallewoof)\n-- #9640 `7bfb770` Bumpfee: bugfixes for error handling and feerate calculation (sdaftuar)\n-- #9673 `8d6447e` Set correct metadata on bumpfee wallet transactions (ryanofsky)\n-- #9650 `40f7e27` Better handle invalid parameters to signrawtransaction (TheBlueMatt)\n-- #9682 `edc9e63` Require timestamps for importmulti keys (ryanofsky)\n-- #9108 `d8e8b06` Use importmulti timestamp when importing watch only keys (on top of #9682) (ryanofsky)\n-- #9756 `7a93af8` Return error when importmulti called with invalid address (ryanofsky)\n-- #9778 `ad168ef` Add two hour buffer to manual pruning (morcos)\n-- #9761 `9828f9a` Use 2 hour grace period for key timestamps in importmulti rescans (ryanofsky)\n-- #9474 `48d7e0d` Mark the minconf parameter to move as ignored (sipa)\n-- #9619 `861cb0c` Bugfix: RPC/Mining: GBT should return 1 MB sizelimit before segwit activates (luke-jr)\n-- #9773 `9072395` Return errors from importmulti if complete rescans are not successful (ryanofsky)\n-\n-### Block and transaction handling\n-- #8391 `37d83bb` Consensus: Remove ISM (NicolasDorier)\n-- #8365 `618c9dd` Treat high-sigop transactions as larger rather than rejecting them (sipa)\n-- #8814 `14b7b3f` wallet, policy: ParameterInteraction: Don't allow 0 fee (MarcoFalke)\n-- #8515 `9bdf526` A few mempool removal optimizations (sipa)\n-- #8448 `101c642` Store mempool and prioritization data to disk (sipa)\n-- #7730 `3c03dc2` Remove priority estimation (morcos)\n-- #9111 `fb15610` Remove unused variable `UNLIKELY_PCT` from fees.h (fanquake)\n-- #9133 `434e683` Unset fImporting for loading mempool (morcos)\n-- #9179 `b9a87b4` Set `DEFAULT_LIMITFREERELAY` = 0 kB/minute (MarcoFalke)\n-- #9239 `3fbf079` Disable fee estimates for 1-block target (morcos)\n-- #7562 `1eef038` Bump transaction version default to 2 (btcdrak)\n-- #9313,#9367 If we don't allow free txs, always send a fee filter (morcos)\n-- #9346 `b99a093` Batch construct batches (sipa)\n-- #9262 `5a70572` Prefer coins that have fewer ancestors, sanity check txn before ATMP (instagibbs)\n-- #9288 `1ce7ede` Fix a bug if the min fee is 0 for FeeFilterRounder (morcos)\n-- #9395 `0fc1c31` Add test for `-walletrejectlongchains` (morcos)\n-- #9107 `7dac1e5` Safer modify new coins (morcos)\n-- #9312 `a72f76c` Increase mempool expiry time to 2 weeks (morcos)\n-- #8610 `c252685` Share unused mempool memory with coincache (sipa)\n-- #9138 `f646275` Improve fee estimation (morcos)\n-- #9408 `46b249e` Allow shutdown during LoadMempool, dump only when necessary (jonasschnelli)\n-- #9310 `8c87f17` Assert FRESH validity in CCoinsViewCache::BatchWrite (ryanofsky)\n-- #7871 `e2e624d` Manual block file pruning (mrbandrews)\n-- #9507 `0595042` Fix use-after-free in CTxMemPool::removeConflicts() (sdaftuar)\n-- #9380 `dd98f04` Separate different uses of minimum fees (morcos)\n-- #9596 `71148b8` bugfix save feeDelta instead of priorityDelta in DumpMempool (morcos)\n-- #9371 `4a1dc35` Notify on removal (morcos)\n-- #9519 `9b4d267` Exclude RBF replacement txs from fee estimation (morcos)\n-- #8606 `e2a1a1e` Fix some locks (sipa)\n-- #8681 `6898213` Performance Regression Fix: Pre-Allocate txChanged vector (JeremyRubin)\n-- #8223 `744d265` c++11: Use std::unique\\_ptr for block creation (domob1812)\n-- #9125 `7490ae8` Make CBlock a vector of shared\\_ptr of CTransactions (sipa)\n-- #8930 `93566e0` Move orphan processing to ActivateBestChain (TheBlueMatt)\n-- #8580 `46904ee` Make CTransaction actually immutable (sipa)\n-- #9240 `a1dcf2e` Remove txConflicted (morcos)\n-- #8589 `e8cfe1e` Inline CTxInWitness inside CTxIn (sipa)\n-- #9349 `2db4cbc` Make CScript (and prevector) c++11 movable (sipa)\n-- #9252 `ce5c1f4` Release cs\\_main before calling ProcessNewBlock, or processing headers (cmpctblock handling) (sdaftuar)\n-- #9283 `869781c` A few more CTransactionRef optimizations (sipa)\n-- #9499 `9c9af5a` Use recent-rejects, orphans, and recently-replaced txn for compact-block-reconstruction (TheBlueMatt)\n-- #9813 `3972a8e` Read/write mempool.dat as a binary (paveljanik)\n-\n-### P2P protocol and network code\n-- #8128 `1030fa7` Turn net structures into dumb storage classes (theuni)\n-- #8282 `026c6ed` Feeler connections to increase online addrs in the tried table (EthanHeilman)\n-- #8462 `53f8f22` Move AdvertiseLocal debug output to net category (Mirobit)\n-- #8612 `84decb5` Check for compatibility with download in FindNextBlocksToDownload (sipa)\n-- #8594 `5b2ea29` Do not add random inbound peers to addrman (gmaxwell)\n-- #8085 `6423116` Begin encapsulation (theuni)\n-- #8715 `881d7ea` only delete CConnman if it's been created (theuni)\n-- #8707 `f07424a` Fix maxuploadtarget setting (theuni)\n-- #8661 `d2e4655` Do not set an addr time penalty when a peer advertises itself (gmaxwell)\n-- #8822 `9bc6a6b` Consistent checksum handling (laanwj)\n-- #8936 `1230890` Report NodeId in misbehaving debug (rebroad)\n-- #8968 `3cf496d` Don't hold cs\\_main when calling ProcessNewBlock from a cmpctblock (TheBlueMatt)\n-- #9002 `e1d1f57` Make connect=0 disable automatic outbound connections (gmaxwell)\n-- #9050 `fcf61b8` Make a few values immutable, and use deterministic randomness for the localnonce (theuni)\n-- #8969 `3665483` Decouple peer-processing-logic from block-connection-logic (#2) (TheBlueMatt)\n-- #8708 `c8c572f` have CConnman handle message sending (theuni)\n-- #8709 `1e50d22` Allow filterclear messages for enabling TX relay only (rebroad)\n-- #9045 `9f554e0` Hash P2P messages as they are received instead of at process-time (TheBlueMatt)\n-- #9026 `dc6b940` Fix handling of invalid compact blocks (sdaftuar)\n-- #8996 `ab914a6` Network activity toggle (luke-jr)\n-- #9131 `62af164` fNetworkActive is not protected by a lock, use an atomic (jonasschnelli)\n-- #8872 `0c577f2` Remove block-request logic from INV message processing (TheBlueMatt)\n-- #8690 `791b58d` Do not fully sort all nodes for addr relay (sipa)\n-- #9128 `76fec09` Decouple CConnman and message serialization (theuni)\n-- #9226 `3bf06e9` Remove fNetworkNode and pnodeLocalHost (gmaxwell)\n-- #9352 `a7f7651` Attempt reconstruction from all compact block announcements (sdaftuar)\n-- #9319 `a55716a` Break addnode out from the outbound connection limits (gmaxwell)\n-- #9261 `2742568` Add unstored orphans with rejected parents to recentRejects (morcos)\n-- #9441 `8b66bf7` Massive speedup. Net locks overhaul (theuni)\n-- #9375 `3908fc4` Relay compact block messages prior to full block connection (TheBlueMatt)\n-- #9400 `8a445c5` Set peers as HB peers upon full block validation (instagibbs)\n-- #9561 `6696b46` Wake message handling thread when we receive a new block (TheBlueMatt)\n-- #9535 `82274c0` Split CNode::cs\\_vSend: message processing and message sending (TheBlueMatt)\n-- #9606 `3f9f962` Consistently use GetTimeMicros() for inactivity checks (sdaftuar)\n-- #9594 `fd70211` Send final alert message to older peers after connecting (gmaxwell)\n-- #9626 `36966a1` Clean up a few CConnman cs\\_vNodes/CNode things (TheBlueMatt)\n-- #9609 `4966917` Fix remaining net assertions (theuni)\n-- #9671 `7821db3` Fix super-unlikely race introduced in 236618061a445d2cb11e72 (TheBlueMatt)\n-- #9730 `33f3b21` Remove bitseed.xf2.org form the dns seed list (jonasschnelli)\n-- #9698 `2447c10` Fix socket close race (theuni)\n-- #9708 `a06ede9` Clean up all known races/platform-specific UB at the time PR was opened (TheBlueMatt)\n-- #9715 `b08656e` Disconnect peers which we do not receive VERACKs from within 60 sec (TheBlueMatt)\n-- #9720 `e87ce95` Fix banning and disallow sending messages before receiving verack (theuni)\n-- #9268 `09c4fd1` Fix rounding privacy leak introduced in #9260 (TheBlueMatt)\n-- #9075 `9346f84` Decouple peer-processing-logic from block-connection-logic (#3) (TheBlueMatt)\n-- #8688 `047ded0` Move static global randomizer seeds into CConnman (sipa)\n-- #9289 `d9ae1ce` net: drop boost::thread\\_group (theuni)\n-\n-### Validation\n-- #9014 `d04aeba` Fix block-connection performance regression (TheBlueMatt)\n-- #9299 `d52ce89` Remove no longer needed check for premature v2 txs (morcos)\n-- #9273 `b68685a` Remove unused `CDiskBlockPos*` argument from ProcessNewBlock (TheBlueMatt)\n-- #8895 `b83264d` Better SigCache Implementation (JeremyRubin)\n-- #9490 `e126d0c` Replace FindLatestBefore used by importmulti with FindEarliestAtLeast (gmaxwell)\n-- #9484 `812714f` Introduce assumevalid setting to skip validation presumed valid scripts (gmaxwell)\n-- #9511 `7884956` Don't overwrite validation state with corruption check (morcos)\n-- #9765 `1e92e04` Harden against mistakes handling invalid blocks (sdaftuar)\n-- #9779 `3c02b95` Update nMinimumChainWork and defaultAssumeValid (gmaxwell)\n-- #8524 `19b0f33` Precompute sighashes (sipa)\n-- #9791 `1825a03` Avoid VLA in hash.h (sipa)\n-\n-### Build system\n-- #8238 `6caf3ee` ZeroMQ 4.1.5 && ZMQ on Windows (fanquake)\n-- #8520 `b40e19c` Remove check for `openssl/ec.h` (laanwj)\n-- #8617 `de07fdc` Include instructions to extract Mac OS X SDK on Linux using 7zip and SleuthKit (luke-jr)\n-- #8566 `7b98895` Easy to use gitian building script (achow101)\n-- #8604 `f256843` build,doc: Update for 0.13.0+ and OpenBSD 5.9 (laanwj)\n-- #8640 `2663e51` depends: Remove Qt46 package (fanquake)\n-- #8645 `8ea4440` Remove unused Qt 4.6 patch (droark)\n-- #8608 `7e9ab95` Install manpages via make install, also add some autogenerated manpages (nomnombtc)\n-- #8781 `ca69ef4` contrib: delete `qt_translations.py` (MarcoFalke)\n-- #8783 `64dc645` share: remove qt/protobuf.pri (MarcoFalke)\n-- #8423 `3166dff` depends: expat 2.2.0, ccache 3.3.1, fontconfig 2.12.1 (fanquake)\n-- #8791 `b694b0d` travis: cross-mac: explicitly enable gui (MarcoFalke)\n-- #8820 `dc64141` depends: Fix Qt compilation with Xcode 8 (fanquake)\n-- #8730 `489a6ab` depends: Add libevent compatibility patch for windows (laanwj)\n-- #8819 `c841816` depends: Boost 1.61.0 (fanquake)\n-- #8826 `f560d95` Do not include `env_win.cc` on non-Windows systems (paveljanik)\n-- #8948 `e077e00` Reorder Windows gitian build order to match Linux (Michagogo)\n-- #8568 `078900d` new var `DIST_CONTRIB` adds useful things for packagers from contrib (nomnombtc)\n-- #9114 `21e6c6b` depends: Set `OSX_MIN_VERSION` to 10.8 (fanquake)\n-- #9140 `018a4eb` Bugfix: Correctly replace generated headers and fail cleanly (luke-jr)\n-- #9156 `a8b2a82` Add compile and link options echo to configure (jonasschnelli)\n-- #9393 `03d85f6` Include cuckoocache header in Makefile (MarcoFalke)\n-- #9420 `bebe369` Fix linker error when configured with --enable-lcov (droark)\n-- #9412 `53442af` Fix 'make deploy' for OSX (jonasschnelli)\n-- #9475 `7014506` Let autoconf detect presence of `EVP_MD_CTX_new` (luke-jr)\n-- #9513 `bbf193f` Fix qt distdir builds (theuni)\n-- #9471 `ca615e6` depends: libevent 2.1.7rc (fanquake)\n-- #9468 `f9117f2` depends: Dependency updates for 0.14.0 (fanquake)\n-- #9469 `01c4576` depends: Qt 5.7.1 (fanquake)\n-- #9574 `5ac6687` depends: Fix QT build on OSX (fanquake)\n-- #9646 `720b579` depends: Fix cross build for qt5.7 (theuni)\n-- #9705 `6a55515` Add options to override BDB cflags/libs (laanwj)\n-- #8249 `4e1567a` Enable (and check for) 64-bit ASLR on Windows (laanwj)\n-- #9758 `476cc47` Selectively suppress deprecation warnings (jonasschnelli)\n-- #9783 `6d61a2b` release: bump gitian descriptors for a new 0.14 package cache (theuni)\n-- #9789 `749fe95` build: add --enable-werror and warn on vla's (theuni)\n-- #9831 `99fd85c` build: force a c++ standard to be specified (theuni)\n-\n-### GUI\n-- #8192 `c503863` Remove URLs from About dialog translations (fanquake)\n-- #8540 `36404ae` Fix random segfault when closing \"Choose data directory\" dialog (laanwj)\n-- #8517 `2468292` Show wallet HD state in statusbar (jonasschnelli)\n-- #8463 `62a5a8a` Remove Priority from coincontrol dialog (MarcoFalke)\n-- #7579 `0606f95` Show network/chain errors in the GUI (jonasschnelli)\n-- #8583 `c19f8a4` Show XTHIN in GUI (rebroad)\n-- #7783 `4335d5a` RPC-Console: support nested commands and simple value queries (jonasschnelli)\n-- #8672 `6052d50` Show transaction size in transaction details window (Cocosoft)\n-- #8777 `fec6af7` WalletModel: Expose disablewallet (MarcoFalke)\n-- #8371 `24f72e9` Add out-of-sync modal info layer (jonasschnelli)\n-- #8885 `b2fec4e` Fix ban from qt console (theuni)\n-- #8821 `bf8e68a` sync-overlay: Don't block during reindex (MarcoFalke)\n-- #8906 `088d1f4` sync-overlay: Don't show progress twice (MarcoFalke)\n-- #8918 `47ace42` Add \"Copy URI\" to payment request context menu (luke-jr)\n-- #8925 `f628d9a` Display minimum ping in debug window (rebroad)\n-- #8774 `3e942a7` Qt refactors to better abstract wallet access (luke-jr)\n-- #8985 `7b1bfa3` Use pindexBestHeader instead of setBlockIndexCandidates for NotifyHeaderTip() (jonasschnelli)\n-- #8989 `d2143dc` Overhaul smart-fee slider, adjust default confirmation target (jonasschnelli)\n-- #9043 `273bde3` Return useful error message on ATMP failure (MarcoFalke)\n-- #9088 `4e57824` Reduce ambiguity of warning message (rebroad)\n-- #8874 `e984730` Multiple Selection for peer and ban tables (achow101)\n-- #9145 `924745d` Make network disabled icon 50% opaque (MarcoFalke)\n-- #9130 `ac489b2` Mention the new network toggle functionality in the tooltip (paveljanik)\n-- #9218 `4d955fc` Show progress overlay when clicking spinner icon (laanwj)\n-- #9280 `e15660c` Show ModalOverlay by pressing the progress bar, allow hiding (jonasschnelli)\n-- #9296 `fde7d99` Fix missed change to WalletTx structure (morcos)\n-- #9266 `2044e37` Bugfix: Qt/RPCConsole: Put column enum in the right places (luke-jr)\n-- #9255 `9851a84` layoutAboutToChange signal is called layoutAboutToBeChanged (laanwj)\n-- #9330 `47e6a19` Console: add security warning (jonasschnelli)\n-- #9329 `db45ad8` Console: allow empty arguments (jonasschnelli)\n-- #8877 `6dc4c43` Qt RPC console: history sensitive-data filter, and saving input line when browsing history (luke-jr)\n-- #9462 `649cf5f` Do not translate tilde character (MarcoFalke)\n-- #9457 `123ea73` Select more files for translation (MarcoFalke)\n-- #9413 `fd7d8c7` CoinControl: Allow non-wallet owned change addresses (jonasschnelli)\n-- #9461 `b250686` Improve progress display during headers-sync and peer-finding (jonasschnelli)\n-- #9588 `5086452` Use nPowTargetSpacing constant (MarcoFalke)\n-- #9637 `d9e4d1d` Fix transaction details output-index to reflect vout index (jonasschnelli)\n-- #9718 `36f9d3a` Qt/Intro: Various fixes (luke-jr)\n-- #9735 `ec66d06` devtools: Handle Qt formatting characters edge-case in update-translations.py (laanwj)\n-- #9755 `a441db0` Bugfix: Qt/Options: Restore persistent \"restart required\" notice (luke-jr)\n-- #9817 `7d75a5a` Fix segfault crash when shutdown the GUI in disablewallet mode (jonasschnelli)\n-\n-### Wallet\n-- #8152 `b9c1cd8` Remove `CWalletDB*` parameter from CWallet::AddToWallet (pstratem)\n-- #8432 `c7e05b3` Make CWallet::fFileBacked private (pstratem)\n-- #8445 `f916700` Move CWallet::setKeyPool to private section of CWallet (pstratem)\n-- #8564 `0168019` Remove unused code/conditions in ReadAtCursor (jonasschnelli)\n-- #8601 `37ac678` Add option to opt into full-RBF when sending funds (rebase, original by petertodd) (laanwj)\n-- #8494 `a5b20ed` init, wallet: ParameterInteraction() iff wallet enabled (MarcoFalke)\n-- #8760 `02ac669` init: Get rid of some `ENABLE_WALLET` (MarcoFalke)\n-- #8696 `a1f8d3e` Wallet: Remove last external reference to CWalletDB (pstratem)\n-- #8768 `886e8c9` init: Get rid of fDisableWallet (MarcoFalke)\n-- #8486 `ab0b411` Add high transaction fee warnings (MarcoFalke)\n-- #8851 `940748b` Move key derivation logic from GenerateNewKey to DeriveNewChildKey (pstratem)\n-- #8287 `e10af96` Set fLimitFree = true (MarcoFalke)\n-- #8928 `c587577` Fix init segfault where InitLoadWallet() calls ATMP before genesis (TheBlueMatt)\n-- #7551 `f2d7056` Add importmulti RPC call (pedrobranco)\n-- #9016 `0dcb888` Return useful error message on ATMP failure (instagibbs)\n-- #8753 `f8723d2` Locked memory manager (laanwj)\n-- #8828 `a4fd8df` Move CWalletDB::ReorderTransactions to CWallet (pstratem)\n-- #8977 `6a1343f` Refactor wallet/init interaction (Reaccept wtx, flush thread) (jonasschnelli)\n-- #9036 `ed0cc50` Change default confirm target from 2 to 6 (laanwj)\n-- #9071 `d1871da` Declare wallet.h functions inline (sipa)\n-- #9132 `f54e460` Make strWalletFile const (jonasschnelli)\n-- #9141 `5ea5e04` Remove unnecessary calls to CheckFinalTx (jonasschnelli)\n-- #9165 `c01f16a` SendMoney: use already-calculated balance (instagibbs)\n-- #9311 `a336d13` Flush wallet after abandontransaction (morcos)\n-- #8717 `38e4887` Addition of ImmatureCreditCached to MarkDirty() (spencerlievens)\n-- #9446 `510c0d9` SetMerkleBranch: remove unused code, remove cs\\_main lock requirement (jonasschnelli)\n-- #8776 `2a524b8` Wallet refactoring leading up to multiwallet (luke-jr)\n-- #9465 `a7d55c9` Do not perform ECDSA signing in the fee calculation inner loop (gmaxwell)\n-- #9404 `12e3112` Smarter coordination of change and fee in CreateTransaction (morcos)\n-- #9377 `fb75cd0` fundrawtransaction: Keep change-output keys by default, make it optional (jonasschnelli)\n-- #9578 `923dc44` Add missing mempool lock for CalculateMemPoolAncestors (TheBlueMatt)\n-- #9227 `02464da` Make nWalletDBUpdated atomic to avoid a potential race (pstratem)\n-- #9764 `f8af89a` Prevent \"overrides a member function but is not marked 'override'\" warnings (laanwj)\n-- #9771 `e43a585` Add missing cs\\_wallet lock that triggers new lock held assertion (ryanofsky)\n-- #9316 `3097ea4` Disable free transactions when relay is disabled (MarcoFalke)\n-- #9615 `d2c9e4d` Wallet incremental fee (morcos)\n-- #9760 `40c754c` Remove importmulti always-true check (ryanofsky)\n-\n-### Tests and QA\n-- #8270 `6e5e5ab` Tests: Use portable #! in python scripts (/usr/bin/env) (ChoHag)\n-- #8534,#8504 Remove java comparison tool (laanwj,MarcoFalke)\n-- #8482 `740cff5` Use single cache dir for chains (MarcoFalke)\n-- #8450 `21857d2` Replace `rpc_wallet_tests.cpp` with python RPC unit tests (pstratem)\n-- #8671 `ddc3080` Minimal fix to slow prevector tests as stopgap measure (JeremyRubin)\n-- #8680 `666eaf0` Address Travis spurious failures (theuni)\n-- #8789 `e31a43c` pull-tester: Only print output when failed (MarcoFalke)\n-- #8810 `14e8f99` tests: Add exception error message for JSONRPCException (laanwj)\n-- #8830 `ef0801b` test: Add option to run bitcoin-util-test.py manually (jnewbery)\n-- #8881 `e66cc1d` Add some verbose logging to bitcoin-util-test.py (jnewbery)\n-- #8922 `0329511` Send segwit-encoded blocktxn messages in p2p-compactblocks (TheBlueMatt)\n-- #8873 `74dc388` Add microbenchmarks to profile more code paths (ryanofsky)\n-- #9032 `6a8be7b` test: Add format-dependent comparison to bctest (laanwj)\n-- #9023 `774db92` Add logging to bitcoin-util-test.py (jnewbery)\n-- #9065 `c9bdf9a` Merge `doc/unit-tests.md` into `src/test/README.md` (laanwj)\n-- #9069 `ed64bce` Clean up bctest.py and bitcoin-util-test.py (jnewbery)\n-- #9095 `b8f43e3` test: Fix test\\_random includes (MarcoFalke)\n-- #8894 `faec09b` Testing: Include fRelay in mininode version messages (jnewbery)\n-- #9097 `e536499` Rework `sync_*` and preciousblock.py (MarcoFalke)\n-- #9049 `71bc39e` Remove duplicatable duplicate-input check from CheckTransaction (TheBlueMatt)\n-- #9136 `b422913` sync\\_blocks cleanup (ryanofsky)\n-- #9151 `4333b1c` proxy\\_test: Calculate hardcoded port numbers (MarcoFalke)\n-- #9206 `e662d28` Make test constant consistent with consensus.h (btcdrak)\n-- #9139 `0de7fd3` Change sync\\_blocks to pick smarter maxheight (on top of #9196) (ryanofsky)\n-- #9100 `97ec6e5` tx\\_valid: re-order inputs to how they are encoded (dcousens)\n-- #9202 `e56cf67` bench: Add support for measuring CPU cycles (laanwj)\n-- #9223 `5412c08` unification of Bloom filter representation (s-matthew-english)\n-- #9257 `d7ba4a2` Dump debug logs on travis failures (sdaftuar)\n-- #9221 `9e4bb31` Get rid of duplicate code (MarcoFalke)\n-- #9274 `919db03` Use cached utxo set to fix performance regression (MarcoFalke)\n-- #9276 `ea33f19` Some minor testing cleanups (morcos)\n-- #9291 `8601784` Remove mapOrphanTransactionsByPrev from DoS\\_tests (sipa)\n-- #9309 `76fcd9d` Wallet needs to stay unlocked for whole test (morcos)\n-- #9172 `5bc209c` Resurrect pstratem's \"Simple fuzzing framework\" (laanwj)\n-- #9331 `c6fd923` Add test for rescan feature of wallet key import RPCs (ryanofsky)\n-- #9354 `b416095` Make fuzzer actually test CTxOutCompressor (sipa)\n-- #9390,#9416 travis: make distdir (MarcoFalke)\n-- #9308 `0698639` test: Add CCoinsViewCache Access/Modify/Write tests (ryanofsky)\n-- #9406 `0f921e6` Re-enable a blank v1 Tx JSON test (droark)\n-- #9435 `dbc8a8c` Removed unused variable in test, fixing warning (ryanofsky)\n-- #9436 `dce853e` test: Include tx data in `EXTRA_DIST` (MarcoFalke)\n-- #9525 `02e5308` test: Include tx data in `EXTRA_DIST` (MarcoFalke)\n-- #9498 `054d664` Basic CCheckQueue Benchmarks (JeremyRubin)\n-- #9554 `0b96abc` test: Avoid potential NULL pointer dereference in `addrman_tests.cpp` (practicalswift)\n-- #9628 `f895023` Increase a sync\\_blocks timeout in pruning.py (sdaftuar)\n-- #9638 `a7ea2f8` Actually test assertions in pruning.py (MarcoFalke)\n-- #9647 `e99f0d7` Skip RAII event tests if libevent is built without `event_set_mem_functions` (luke-jr)\n-- #9691 `fc67cd2` Init ECC context for `test_bitcoin_fuzzy` (gmaxwell)\n-- #9712 `d304fef` bench: Fix initialization order in registration (laanwj)\n-- #9707 `b860915` Fix RPC failure testing (jnewbery)\n-- #9269 `43e8150` Align struct COrphan definition (sipa)\n-- #9820 `599c69a` Fix pruning test broken by 2 hour manual prune window (ryanofsky)\n-- #9824 `260c71c` qa: Check return code when stopping nodes (MarcoFalke)\n-- #9875 `50953c2` tests: Fix dangling pwalletMain pointer in wallet tests (laanwj)\n-- #9839 `eddaa6b` [qa] Make import-rescan.py watchonly check reliable (ryanofsky)\n-\n-### Documentation\n-- #8332 `806b9e7` Clarify witness branches in transaction.h serialization (dcousens)\n-- #8935 `0306978` Documentation: Building on Windows with WSL (pooleja)\n-- #9144 `c98f6b3` Correct waitforblockheight example help text (fanquake)\n-- #9407 `041331e` Added missing colons in when running help command (anditto)\n-- #9378 `870cd2b` Add documentation for CWalletTx::fFromMe member (ryanofsky)\n-- #9297 `0b73807` Various RPC help outputs updated (Mirobit)\n-- #9613 `07421cf` Clarify getbalance help string to explain interaction with bumpfee (ryanofsky)\n-- #9663 `e30d928` Clarify listunspent amount description (instagibbs)\n-- #9396 `d65a13b` Updated listsinceblock rpc documentation (accraze)\n-- #8747 `ce43630` rpc: Fix transaction size comments and RPC help text (jnewbery)\n-- #8058 `bbd9740` Doc: Add issue template (AmirAbrams)\n-- #8567 `85d4e21` Add default port numbers to REST doc (djpnewton)\n-- #8624 `89de153` build: Mention curl (MarcoFalke)\n-- #8786 `9da7366` Mandatory copyright agreement (achow101)\n-- #8823 `7b05af6` Add privacy recommendation when running hidden service (laanwj)\n-- #9433 `caa2f10` Update the Windows build notes (droark)\n-- #8879 `f928050` Rework docs (MarcoFalke)\n-- #8887 `61d191f` Improve GitHub issue template (fanquake)\n-- #8787 `279bbad` Add missing autogen to example builds (AmirAbrams)\n-- #8892 `d270c30` Add build instructions for FreeBSD (laanwj)\n-- #8890 `c71a654` Update Doxygen configuration file (fanquake)\n-- #9207 `fa1f944` Move comments above bash command in build-unix (AmirAbrams)\n-- #9219 `c4522e7` Improve windows build instructions using Linux subsystem (laanwj)\n-- #8954 `932d02a` contrib: Add README for pgp keys (MarcoFalke)\n-- #9093 `2fae5b9` release-process: Mention GitHub release and archived release notes (MarcoFalke)\n-- #8743 `bae178f` Remove old manpages from contrib/debian in favour of doc/man (fanquake)\n-- #9550 `4105cb6` Trim down the XP notice and say more about what we support (gmaxwell)\n-- #9246 `9851498` Developer docs about existing subtrees (gmaxwell)\n-- #9401 `c2ea1e6` Make rpcauth help message clearer, add example in example .conf (instagibbs)\n-- #9022,#9033 Document dropping OS X 10.7 support (fanquake, MarcoFalke)\n-- #8771 `bc9e3ab` contributing: Mention not to open several pulls (luke-jr)\n-- #8852 `7b784cc` Mention Gitian building script in doc (Laudaa) (laanwj)\n-- #8915 `03dd707` Add copyright/patent issues to possible NACK reasons (petertodd)\n-- #8965 `23e03f8` Mention that PPA doesn't support Debian (anduck)\n-- #9115 `bfc7aad` Mention reporting security issues responsibly (paveljanik)\n-- #9840 `08e0690` Update sendfrom RPC help to correct coin selection misconception (ryanofsky)\n-- #9865 `289204f` Change bitcoin address in RPC help message (marijnfs)\n-\n-### Miscellaneous\n-- #8274 `7a2d402` util: Update tinyformat (laanwj)\n-- #8291 `5cac8b1` util: CopyrightHolders: Check for untranslated substitution (MarcoFalke)\n-- #8557 `44691f3` contrib: Rework verifybinaries (MarcoFalke)\n-- #8621 `e8ed6eb` contrib: python: Don't use shell=True (MarcoFalke)\n-- #8813 `fb24d7e` bitcoind: Daemonize using daemon(3) (laanwj)\n-- #9004 `67728a3` Clarify `listenonion` (unsystemizer)\n-- #8674 `bae81b8` tools for analyzing, updating and adding copyright headers in source files (isle2983)\n-- #8976 `8c6218a` libconsensus: Add input validation of flags (laanwj)\n-- #9112 `46027e8` Avoid ugly exception in log on unknown inv type (laanwj)\n-- #8837 `2108911` Allow bitcoin-tx to parse partial transactions (jnewbery)\n-- #9204 `74ced54` Clarify CreateTransaction error messages (instagibbs)\n-- #9265 `31bcc66` bitcoin-cli: Make error message less confusing (laanwj)\n-- #9303 `72bf1b3` Update comments in ctaes (sipa)\n-- #9417 `c4b7d4f` Do not evaluate hidden LogPrint arguments (sipa)\n-- #9506 `593a00c` RFC: Improve style for if indentation (sipa)\n-- #8883 `d5d4ad8` Add all standard TXO types to bitcoin-tx (jnewbery)\n-- #9531 `23281a4` Release notes for estimation changes  (morcos)\n-- #9486 `f62bc10` Make peer=%d log prints consistent (TheBlueMatt)\n-- #9552 `41cb05c` Add IPv6 support to qos.sh (jamesmacwhite)\n-- #9542 `e9e7993` Docs: Update CONTRIBUTING.md (jnewbery)\n-- #9649 `53ab12d` Remove unused clang format dev script (MarcoFalke)\n-- #9625 `77bd8c4` Increase minimum debug.log size to 10MB after shrink (morcos)\n-- #9070 `7b22e50` Lockedpool fixes (kazcw)\n-- #8779 `7008e28` contrib: Delete spendfrom (MarcoFalke)\n-- #9587,#8793,#9496,#8191,#8109,#8655,#8472,#8677,#8981,#9124  Avoid shadowing of variables (paveljanik)\n-- #9063 `f2a6e82` Use deprecated `MAP_ANON` if `MAP_ANONYMOUS` is not defined (paveljanik)\n-- #9060 `1107653` Fix bloom filter init to isEmpty = true (robmcl4)\n-- #8613 `613bda4` LevelDB 1.19 (sipa)\n-- #9225 `5488514` Fix some benign races (TheBlueMatt)\n-- #8736 `5fa7b07` base58: Improve DecodeBase58 performance (wjx)\n-- #9039 `e81df49` Various serialization simplifcations and optimizations (sipa)\n-- #9010 `a143b88` Split up AppInit2 into multiple phases, daemonize after datadir lock errors (laanwj)\n-- #9230 `c79e52a` Fix some benign races in timestamp logging (TheBlueMatt)\n-- #9183,#9260 Mrs Peacock in The Library with The Candlestick (killed main.{h,cpp}) (TheBlueMatt)\n-- #9236 `7f72568` Fix races for strMiscWarning and `fLargeWork*Found`, make QT runawayException use GetWarnings (gmaxwell)\n-- #9243 `7aa7004` Clean up mapArgs and mapMultiArgs Usage (TheBlueMatt)\n-- #9387 `cfe41d7` RAII of libevent stuff using unique ptrs with deleters (kallewoof)\n-- #9472 `fac0f30` Disentangle progress estimation from checkpoints and update it (sipa)\n-- #9512 `6012967` Fix various things -fsanitize complains about (sipa)\n-- #9373,#9580 Various linearization script issues (droark)\n-- #9674 `dd163f5` Lock debugging: Always enforce strict lock ordering (try or not) (TheBlueMatt)\n-- #8453,#9334  Update to latest libsecp256k1 (laanwj,sipa)\n-- #9656 `7c93952` Check verify-commits on pushes to master (TheBlueMatt)\n-- #9679 `a351162` Access WorkQueue::running only within the cs lock (TheBlueMatt)\n-- #9777 `8dee822` Handle unusual maxsigcachesize gracefully (jnewbery)\n-- #8863,#8807 univalue: Pull subtree (MarcoFalke)\n-- #9798 `e22c067` Fix Issue #9775 (Check returned value of fopen) (kirit93)\n-- #9856 `69832aa` Terminate immediately when allocation fails (theuni)\n-\n-Credits\n-=======\n-\n-Thanks to everyone who directly contributed to this release:\n-\n-- accraze\n-- adlawren\n-- Alex Morcos\n-- Alexey Vesnin\n-- Amir Abrams\n-- Anders \u00d8yvind Urke-S\u00e6tre\n-- Anditto Heristyo\n-- Andrew Chow\n-- anduck\n-- Anthony Towns\n-- Brian Deery\n-- BtcDrak\n-- Chris Moore\n-- Chris Stewart\n-- Christian Barcenas\n-- Christian Decker\n-- Cory Fields\n-- crowning-\n-- CryptAxe\n-- CryptoVote\n-- Dagur Valberg Johannsson\n-- Daniel Cousens\n-- Daniel Kraft\n-- Derek Miller\n-- djpnewton\n-- Don Patterson\n-- Doug\n-- Douglas Roark\n-- Ethan Heilman\n-- fsb4000\n-- Gaurav Rana\n-- Geoffrey Tsui\n-- Greg Walker\n-- Gregory Maxwell\n-- Gregory Sanders\n-- Hampus Sj\u00f6berg\n-- isle2983\n-- Ivo van der Sangen\n-- James White\n-- Jameson Lopp\n-- Jeremy Rubin\n-- Jiaxing Wang\n-- jnewbery\n-- John Newbery\n-- Johnson Lau\n-- Jon Lund Steffensen\n-- Jonas Schnelli\n-- jonnynewbs\n-- Jorge Tim\u00f3n\n-- Justin Camarena\n-- Karl-Johan Alm\n-- Kaz Wesley\n-- kirit93\n-- Koki Takahashi\n-- Lauda\n-- leijurv\n-- lizhi\n-- Luke Dashjr\n-- maiiz\n-- MarcoFalke\n-- Marijn Stollenga\n-- Marty Jones\n-- Masahiko Hyuga\n-- Matt Corallo\n-- Matthew King\n-- matthias\n-- Micha\n-- Michael Ford\n-- Michael Rotarius\n-- Mitchell Cash\n-- mrbandrews\n-- mruddy\n-- Nicolas DORIER\n-- nomnombtc\n-- Patrick Strateman\n-- Pavel Jan\u00edk\n-- Pedro Branco\n-- Peter Todd\n-- Pieter Wuille\n-- poole\\_party\n-- practicalswift\n-- R E Broadley\n-- randy-waterhouse\n-- Richard Kiss\n-- Robert McLaughlin\n-- rodasmith\n-- Russell Yanofsky\n-- S. Matthew English\n-- Sev\n-- Spencer Lievens\n-- Stanislas Marion\n-- Steven\n-- Suhas Daftuar\n-- Thomas Snider\n-- UdjinM6\n-- unsystemizer\n-- whythat\n-- Will Binns\n-- Wladimir J. van der Laan\n-- wodry\n-- Zak Wilcox\n-\n-As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/)."
      },
      {
        "sha": "ef072afd4d7fb94d29007038e587eacb40358a98",
        "filename": "doc/release-notes/release-notes-0.14.1.md",
        "status": "removed",
        "additions": 0,
        "deletions": 143,
        "changes": 143,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.14.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.14.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.14.1.md?ref=ddeacfcff563b602b8833287a34dfbee340e5bec",
        "patch": "@@ -1,143 +0,0 @@\n-Bitcoin Core version 0.14.1 is now available from:\n-\n-  <https://bitcoin.org/bin/bitcoin-core-0.14.1/>\n-\n-This is a new minor version release, including various bugfixes and\n-performance improvements, as well as updated translations.\n-\n-Please report bugs using the issue tracker at github:\n-\n-  <https://github.com/bitcoin/bitcoin/issues>\n-\n-To receive security and update notifications, please subscribe to:\n-\n-  <https://bitcoincore.org/en/list/announcements/join/>\n-\n-Compatibility\n-==============\n-\n-Bitcoin Core is extensively tested on multiple operating systems using\n-the Linux kernel, macOS 10.8+, and Windows Vista and later.\n-\n-Microsoft ended support for Windows XP on [April 8th, 2014](https://www.microsoft.com/en-us/WindowsForBusiness/end-of-xp-support),\n-No attempt is made to prevent installing or running the software on Windows XP, you\n-can still do so at your own risk but be aware that there are known instabilities and issues.\n-Please do not report issues about Windows XP to the issue tracker.\n-\n-Bitcoin Core should also work on most other Unix-like systems but is not\n-frequently tested on them.\n-\n-Notable changes\n-===============\n-\n-RPC changes\n------------\n-\n-- The first positional argument of `createrawtransaction` was renamed from\n-  `transactions` to `inputs`.\n-\n-- The argument of `disconnectnode` was renamed from `node` to `address`.\n-\n-These interface changes break compatibility with 0.14.0, when the named\n-arguments functionality, introduced in 0.14.0, is used. Client software\n-using these calls with named arguments needs to be updated.\n-\n-Mining\n-------\n-\n-In previous versions, getblocktemplate required segwit support from downstream\n-clients/miners once the feature activated on the network. In this version, it\n-now supports non-segwit clients even after activation, by removing all segwit\n-transactions from the returned block template. This allows non-segwit miners to\n-continue functioning correctly even after segwit has activated.\n-\n-Due to the limitations in previous versions, getblocktemplate also recommended\n-non-segwit clients to not signal for the segwit version-bit. Since this is no\n-longer an issue, getblocktemplate now always recommends signalling segwit for\n-all miners. This is safe because ability to enforce the rule is the only\n-required criteria for safe activation, not actually producing segwit-enabled\n-blocks.\n-\n-UTXO memory accounting\n-----------------------\n-\n-Memory usage for the UTXO cache is being calculated more accurately, so that\n-the configured limit (`-dbcache`) will be respected when memory usage peaks\n-during cache flushes.  The memory accounting in prior releases is estimated to\n-only account for half the actual peak utilization.\n-\n-The default `-dbcache` has also been changed in this release to 450MiB.  Users\n-who currently set `-dbcache` to a high value (e.g. to keep the UTXO more fully\n-cached in memory) should consider increasing this setting in order to achieve\n-the same cache performance as prior releases.  Users on low-memory systems\n-(such as systems with 1GB or less) should consider specifying a lower value for\n-this parameter.\n-\n-Additional information relating to running on low-memory systems can be found\n-here:\n-[reducing-bitcoind-memory-usage.md](https://gist.github.com/laanwj/efe29c7661ce9b6620a7).\n-\n-0.14.1 Change log\n-=================\n-\n-Detailed release notes follow. This overview includes changes that affect\n-behavior, not code moves, refactors and string updates. For convenience in locating\n-the code changes and accompanying discussion, both the pull request and\n-git merge commit are mentioned.\n-\n-### RPC and other APIs\n-- #10084 `142fbb2` Rename first named arg of createrawtransaction (MarcoFalke)\n-- #10139 `f15268d` Remove auth cookie on shutdown (practicalswift)\n-- #10146 `2fea10a` Better error handling for submitblock (rawodb, gmaxwell)\n-- #10144 `d947afc` Prioritisetransaction wasn't always updating ancestor fee (sdaftuar)\n-- #10204 `3c79602` Rename disconnectnode argument (jnewbery)\n-\n-### Block and transaction handling\n-- #10126 `0b5e162` Compensate for memory peak at flush time (sipa)\n-- #9912 `fc3d7db` Optimize GetWitnessHash() for non-segwit transactions (sdaftuar)\n-- #10133 `ab864d3` Clean up calculations of pcoinsTip memory usage (morcos)\n-\n-### P2P protocol and network code\n-- #9953/#10013 `d2548a4` Fix shutdown hang with >= 8 -addnodes set (TheBlueMatt)\n-- #10176 `30fa231` net: gracefully handle NodeId wrapping (theuni)\n-\n-### Build system\n-- #9973 `e9611d1` depends: fix zlib build on osx (theuni)\n-\n-### GUI\n-- #10060 `ddc2dd1` Ensure an item exists on the rpcconsole stack before adding (achow101)\n-\n-### Mining\n-- #9955/#10006 `569596c` Don't require segwit in getblocktemplate for segwit signalling or mining (sdaftuar)\n-- #9959/#10127 `b5c3440` Prevent slowdown in CreateNewBlock on large mempools (sdaftuar)\n-\n-### Tests and QA\n-- #10157 `55f641c` Fix the `mempool_packages.py` test (sdaftuar)\n-\n-### Miscellaneous\n-- #10037 `4d8e660` Trivial: Fix typo in help getrawtransaction RPC (keystrike)\n-- #10120 `e4c9a90` util: Work around (virtual) memory exhaustion on 32-bit w/ glibc (laanwj)\n-- #10130 `ecc5232` bitcoin-tx input verification (awemany, jnewbery)\n-\n-Credits\n-=======\n-\n-Thanks to everyone who directly contributed to this release:\n-\n-- Alex Morcos\n-- Andrew Chow\n-- Awemany\n-- Cory Fields\n-- Gregory Maxwell\n-- James Evans\n-- John Newbery\n-- MarcoFalke\n-- Matt Corallo\n-- Pieter Wuille\n-- practicalswift\n-- rawodb\n-- Suhas Daftuar\n-- Wladimir J. van der Laan\n-\n-As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/).\n-"
      },
      {
        "sha": "0ad554b7738c17a4017b57234fce1132f9a9ed45",
        "filename": "doc/release-notes/release-notes-0.14.2.md",
        "status": "removed",
        "additions": 0,
        "deletions": 102,
        "changes": 102,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.14.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.14.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.14.2.md?ref=ddeacfcff563b602b8833287a34dfbee340e5bec",
        "patch": "@@ -1,102 +0,0 @@\n-Bitcoin Core version 0.14.2 is now available from:\n-\n-  <https://bitcoin.org/bin/bitcoin-core-0.14.2/>\n-\n-This is a new minor version release, including various bugfixes and\n-performance improvements, as well as updated translations.\n-\n-Please report bugs using the issue tracker at github:\n-\n-  <https://github.com/bitcoin/bitcoin/issues>\n-\n-To receive security and update notifications, please subscribe to:\n-\n-  <https://bitcoincore.org/en/list/announcements/join/>\n-\n-Compatibility\n-==============\n-\n-Bitcoin Core is extensively tested on multiple operating systems using\n-the Linux kernel, macOS 10.8+, and Windows Vista and later.\n-\n-Microsoft ended support for Windows XP on [April 8th, 2014](https://www.microsoft.com/en-us/WindowsForBusiness/end-of-xp-support),\n-No attempt is made to prevent installing or running the software on Windows XP, you\n-can still do so at your own risk but be aware that there are known instabilities and issues.\n-Please do not report issues about Windows XP to the issue tracker.\n-\n-Bitcoin Core should also work on most other Unix-like systems but is not\n-frequently tested on them.\n-\n-Notable changes\n-===============\n-\n-miniupnp CVE-2017-8798\n-----------------------------\n-\n-Bundled miniupnpc was updated to 2.0.20170509. This fixes an integer signedness error\n-(present in MiniUPnPc v1.4.20101221 through v2.0) that allows remote attackers\n-(within the LAN) to cause a denial of service or possibly have unspecified\n-other impact.\n-\n-This only affects users that have explicitly enabled UPnP through the GUI\n-setting or through the `-upnp` option, as since the last UPnP vulnerability\n-(in Bitcoin Core 0.10.3) it has been disabled by default.\n-\n-If you use this option, it is recommended to upgrade to this version as soon as\n-possible.\n-\n-Known Bugs\n-==========\n-\n-Since 0.14.0 the approximate transaction fee shown in Bitcoin-Qt when using coin\n-control and smart fee estimation does not reflect any change in target from the\n-smart fee slider. It will only present an approximate fee calculated using the\n-default target. The fee calculated using the correct target is still applied to\n-the transaction and shown in the final send confirmation dialog.\n-\n-0.14.2 Change log\n-=================\n-\n-Detailed release notes follow. This overview includes changes that affect\n-behavior, not code moves, refactors and string updates. For convenience in locating\n-the code changes and accompanying discussion, both the pull request and\n-git merge commit are mentioned.\n-\n-### RPC and other APIs\n-- #10410 `321419b` Fix importwallet edge case rescan bug (ryanofsky)\n-\n-### P2P protocol and network code\n-- #10424 `37a8fc5` Populate services in GetLocalAddress (morcos)\n-- #10441 `9e3ad50` Only enforce expected services for half of outgoing connections (theuni)\n-\n-### Build system\n-- #10414 `ffb0c4b` miniupnpc 2.0.20170509 (fanquake)\n-- #10228 `ae479bc` Regenerate bitcoin-config.h as necessary (theuni)\n-\n-### Miscellaneous\n-- #10245 `44a17f2` Minor fix in build documentation for FreeBSD 11 (shigeya)\n-- #10215 `0aee4a1` Check interruptNet during dnsseed lookups (TheBlueMatt)\n-\n-### GUI\n-- #10231 `1e936d7` Reduce a significant cs_main lock freeze (jonasschnelli)\n-\n-### Wallet\n-- #10294 `1847642` Unset change position when there is no change (instagibbs)\n-\n-Credits\n-=======\n-\n-Thanks to everyone who directly contributed to this release:\n-\n-- Alex Morcos\n-- Cory Fields\n-- fanquake\n-- Gregory Sanders\n-- Jonas Schnelli\n-- Matt Corallo\n-- Russell Yanofsky\n-- Shigeya Suzuki\n-- Wladimir J. van der Laan\n-\n-As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/).\n-"
      },
      {
        "sha": "f2360ae10e1c2b196abf1d5d66fcf03f675c3fb4",
        "filename": "doc/release-notes/release-notes-0.15.0.1.md",
        "status": "added",
        "additions": 87,
        "deletions": 0,
        "changes": 87,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/doc/release-notes/release-notes-0.15.0.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/doc/release-notes/release-notes-0.15.0.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.15.0.1.md?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -0,0 +1,87 @@\n+Raven Core version *0.15.0.1* is now available from:\n+\n+  <https://raven.org/bin/raven-core-0.15.0.1/>\n+\n+and\n+\n+  <https://ravencoin.org/bin/raven-core-0.15.0.1/>\n+\n+This is a minor bug fix for 0.15.0.\n+\n+Please report bugs using the issue tracker at GitHub:\n+\n+  <https://github.com/RavenProject/Ravencoin/issues>\n+\n+To receive security and update notifications, please subscribe to:\n+\n+  <https://ravencoin.org/en/list/announcements/join/>\n+\n+How to Upgrade\n+==============\n+\n+If you are running an older version, shut it down. Wait until it has completely\n+shut down (which might take a few minutes for older versions), then run the \n+installer (on Windows) or just copy over `/Applications/Raven-Qt` (on Mac)\n+or `ravend`/`raven-qt` (on Linux).\n+\n+The first time you run version 0.15.0 or higher, your chainstate database will\n+be converted to a new format, which will take anywhere from a few minutes to\n+half an hour, depending on the speed of your machine.\n+\n+The file format of `fee_estimates.dat` changed in version 0.15.0. Hence, a\n+downgrade from version 0.15.0 or upgrade to version 0.15.0 will cause all fee\n+estimates to be discarded.\n+\n+Note that the block database format also changed in version 0.8.0 and there is no\n+automatic upgrade code from before version 0.8 to version 0.15.0. Upgrading\n+directly from 0.7.x and earlier without redownloading the blockchain is not supported.\n+However, as usual, old wallet versions are still supported.\n+\n+Downgrading warning\n+-------------------\n+\n+The chainstate database for this release is not compatible with previous\n+releases, so if you run 0.15 and then decide to switch back to any\n+older version, you will need to run the old release with the `-reindex-chainstate`\n+option to rebuild the chainstate data structures in the old format.\n+\n+If your node has pruning enabled, this will entail re-downloading and\n+processing the entire blockchain.\n+\n+Compatibility\n+==============\n+\n+Raven Core is extensively tested on multiple operating systems using\n+the Linux kernel, macOS 10.8+, and Windows Vista and later. Windows XP is not supported.\n+\n+Raven Core should also work on most other Unix-like systems but is not\n+frequently tested on them.\n+\n+Notable changes\n+===============\n+\n+GUI startup crash issue\n+-------------------------\n+\n+After upgrade to 0.15.0, some clients would crash at startup because a custom\n+fee setting was configured that no longer exists in the GUI. This is a minimal\n+patch to avoid this issue from occuring.\n+\n+0.15.0.1 Change log\n+====================\n+\n+-  #11332 `46c8d23` Fix possible crash with invalid nCustomFeeRadio in QSettings (achow101, TheBlueMatt)\n+\n+Also the manpages were updated, as this was forgotten for 0.15.0.\n+\n+Credits\n+=======\n+\n+Thanks to everyone who directly contributed to this release:\n+\n+- Andrew Chow\n+- Matt Corallo\n+- Jonas Schnelli\n+- Wladimir J. van der Laan\n+\n+As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/raven/)."
      },
      {
        "sha": "d6939b97e268015055ce68638491ae8d713143fe",
        "filename": "doc/release-notes/release-notes-0.15.0.md",
        "status": "added",
        "additions": 878,
        "deletions": 0,
        "changes": 878,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/doc/release-notes/release-notes-0.15.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/doc/release-notes/release-notes-0.15.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.15.0.md?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "patch": "@@ -0,0 +1,878 @@\n+Raven Core version *0.15.0* is now available from:\n+\n+  <https://raven.org/bin/raven-core-0.15.0/>\n+\n+This is a new major version release, including new features, various bugfixes\n+and performance improvements, as well as updated translations.\n+\n+Please report bugs using the issue tracker at GitHub:\n+\n+  <https://github.com/RavenProject/Ravencoin/issues>\n+\n+To receive security and update notifications, please subscribe to:\n+\n+  <https://ravencoin.org/en/list/announcements/join/>\n+\n+How to Upgrade\n+==============\n+\n+If you are running an older version, shut it down. Wait until it has completely\n+shut down (which might take a few minutes for older versions), then run the \n+installer (on Windows) or just copy over `/Applications/Raven-Qt` (on Mac)\n+or `ravend`/`raven-qt` (on Linux).\n+\n+The first time you run version 0.15.0, your chainstate database will be converted to a\n+new format, which will take anywhere from a few minutes to half an hour,\n+depending on the speed of your machine.\n+\n+The file format of `fee_estimates.dat` changed in version 0.15.0. Hence, a\n+downgrade from version 0.15.0 or upgrade to version 0.15.0 will cause all fee\n+estimates to be discarded.\n+\n+Note that the block database format also changed in version 0.8.0 and there is no\n+automatic upgrade code from before version 0.8 to version 0.15.0. Upgrading\n+directly from 0.7.x and earlier without redownloading the blockchain is not supported.\n+However, as usual, old wallet versions are still supported.\n+\n+Downgrading warning\n+-------------------\n+\n+The chainstate database for this release is not compatible with previous\n+releases, so if you run 0.15 and then decide to switch back to any\n+older version, you will need to run the old release with the `-reindex-chainstate`\n+option to rebuild the chainstate data structures in the old format.\n+\n+If your node has pruning enabled, this will entail re-downloading and\n+processing the entire blockchain.\n+\n+Compatibility\n+==============\n+\n+Raven Core is extensively tested on multiple operating systems using\n+the Linux kernel, macOS 10.8+, and Windows Vista and later. Windows XP is not supported.\n+\n+Raven Core should also work on most other Unix-like systems but is not\n+frequently tested on them.\n+\n+Notes for 0.15.0\n+================\n+\n+Current SegWit support\n+----------------------\n+\n+Version 0.15.0 supports adding a segregated witness address via the `addwitnessaddress` RPC, but\n+please note that this is a testing/expert RPC, which does not guarantee recovery from backup. Only use\n+this RPC if you know what you are doing. More complete wallet support for segregated witness is coming\n+in a next version.\n+\n+Rescanning with encrypted wallets\n+---------------------------------\n+\n+As in previous versions, when using an encrypted HD wallet, the keypool cannot be topped up without unlocking\n+the wallet. This means that currently, in order to recover from a backup of an encrypted HD wallet, the user\n+must unlock the wallet with a really long timeout and manually trigger a rescan, otherwise they risk missing\n+some keys when auto-topup cannot run. Unfortunately there is no `rescan` RPC in this version, that will be\n+included in a future version, so for now a rescan can be triggered using one of the `import*` commands, using\n+a dummy address generated by another (trusted) wallet.\n+\n+Notable changes\n+===============\n+\n+Performance Improvements\n+------------------------\n+\n+Version 0.15 contains a number of significant performance improvements, which make\n+Initial Block Download, startup, transaction and block validation much faster:\n+\n+- The chainstate database (which is used for tracking UTXOs) has been changed\n+  from a per-transaction model to a per-output model (See [PR 10195](https://github.com/RavenProject/Ravencoin/pull/10195)). Advantages of this model\n+  are that it:\n+    - avoids the CPU overhead of deserializing and serializing the unused outputs;\n+    - has more predictable memory usage;\n+    - uses simpler code;\n+    - is adaptable to various future cache flushing strategies.\n+\n+  As a result, validating the blockchain during Initial Block Download (IBD) and reindex\n+  is ~30-40% faster, uses 10-20% less memory, and flushes to disk far less frequently.\n+  The only downside is that the on-disk database is 15% larger. During the conversion from the previous format\n+  a few extra gigabytes may be used.\n+- Earlier versions experienced a spike in memory usage while flushing UTXO updates to disk.\n+  As a result, only half of the available memory was actually used as cache, and the other half was\n+  reserved to accommodate flushing. This is no longer the case (See [PR 10148](https://github.com/RavenProject/Ravencoin/pull/10148)), and the entirety of\n+  the available cache (see `-dbcache`) is now actually used as cache. This reduces the flushing\n+  frequency by a factor 2 or more.\n+- In previous versions, signature validation for transactions has been cached when the\n+  transaction is accepted to the mempool. Version 0.15 extends this to cache the entire script\n+  validity (See [PR 10192](https://github.com/RavenProject/Ravencoin/pull/10192)). This means that if a transaction in a block has already been accepted to the\n+  mempool, the scriptSig does not need to be re-evaluated. Empirical tests show that\n+  this results in new block validation being 40-50% faster.\n+- LevelDB has been upgraded to version 1.20 (See [PR 10544](https://github.com/RavenProject/Ravencoin/pull/10544)). This version contains hardware acceleration for CRC\n+  on architectures supporting SSE 4.2. As a result, synchronization and block validation are now faster.\n+- SHA256 hashing has been optimized for architectures supporting SSE 4 (See [PR 10821](https://github.com/RavenProject/Ravencoin/pull/10821)). SHA256 is around\n+  50% faster on supported hardware, which results in around 5% faster IBD and block\n+  validation. In version 0.15, SHA256 hardware optimization is disabled in release builds by\n+  default, but can be enabled by using `--enable-experimental-asm` when building.\n+- Refill of the keypool no longer flushes the wallet between each key which resulted in a ~20x speedup in creating a new wallet. Part of this speedup was used to increase the default keypool to 1000 keys to make recovery more robust. (See [PR 10831](https://github.com/RavenProject/Ravencoin/pull/10831)).\n+\n+Fee Estimation Improvements\n+---------------------------\n+\n+Fee estimation has been significantly improved in version 0.15, with more accurate fee estimates used by the wallet and a wider range of options for advanced users of the `estimatesmartfee` and `estimaterawfee` RPCs (See [PR 10199](https://github.com/RavenProject/Ravencoin/pull/10199)).\n+\n+### Changes to internal logic and wallet behavior\n+\n+- Internally, estimates are now tracked on 3 different time horizons. This allows for longer targets and means estimates adjust more quickly to changes in conditions.\n+- Estimates can now be *conservative* or *economical*. *Conservative* estimates use longer time horizons to produce an estimate which is less susceptible to rapid changes in fee conditions. *Economical* estimates use shorter time horizons and will be more affected by short-term changes in fee conditions. Economical estimates may be considerably lower during periods of low transaction activity (for example over weekends), but may result in transactions being unconfirmed if prevailing fees increase rapidly.\n+- By default, the wallet will use conservative fee estimates to increase the reliability of transactions being confirmed within the desired target. For transactions that are marked as replaceable, the wallet will use an economical estimate by default, since the fee can be 'bumped' if the fee conditions change rapidly (See [PR 10589](https://github.com/RavenProject/Ravencoin/pull/10589)).\n+- Estimates can now be made for confirmation targets up to 1008 blocks (one week).\n+- More data on historical fee rates is stored, leading to more precise fee estimates.\n+- Transactions which leave the mempool due to eviction or other non-confirmed reasons are now taken into account by the fee estimation logic, leading to more accurate fee estimates.\n+- The fee estimation logic will make sure enough data has been gathered to return a meaningful estimate. If there is insufficient data, a fallback default fee is used.\n+\n+### Changes to fee estimate RPCs\n+\n+- The `estimatefee` RPC is now deprecated in favor of using only `estimatesmartfee` (which is the implementation used by the GUI)\n+- The `estimatesmartfee` RPC interface has been changed (See [PR 10707](https://github.com/RavenProject/Ravencoin/pull/10707)):\n+    - The `nblocks` argument has been renamed to `conf_target` (to be consistent with other RPC methods).\n+    - An `estimate_mode` argument has been added. This argument takes one of the following strings: `CONSERVATIVE`, `ECONOMICAL` or `UNSET` (which defaults to `CONSERVATIVE`).\n+    - The RPC return object now contains an `errors` member, which returns errors encountered during processing.\n+    - If Raven Core has not been running for long enough and has not seen enough blocks or transactions to produce an accurate fee estimation, an error will be returned (previously a value of -1 was used to indicate an error, which could be confused for a feerate).\n+- A new `estimaterawfee` RPC is added to provide raw fee data. External clients can query and use this data in their own fee estimation logic.\n+\n+Multi-wallet support\n+--------------------\n+\n+Raven Core now supports loading multiple, separate wallets (See [PR 8694](https://github.com/RavenProject/Ravencoin/pull/8694), [PR 10849](https://github.com/RavenProject/Ravencoin/pull/10849)). The wallets are completely separated, with individual balances, keys and received transactions.\n+\n+Multi-wallet is enabled by using more than one `-wallet` argument when starting Raven, either on the command line or in the Raven config file.\n+\n+**In Raven-Qt, only the first wallet will be displayed and accessible for creating and signing transactions.** GUI selectable multiple wallets will be supported in a future version. However, even in 0.15 other loaded wallets will remain synchronized to the node's current tip in the background. This can be useful if running a pruned node, since loading a wallet where the most recent sync is beyond the pruned height results in having to download and revalidate the whole blockchain. Continuing to synchronize all wallets in the background avoids this problem.\n+\n+Raven Core 0.15.0 contains the following changes to the RPC interface and `raven-cli` for multi-wallet:\n+\n+* When running Raven Core with a single wallet, there are **no** changes to the RPC interface or `raven-cli`. All RPC calls and `raven-cli` commands continue to work as before.\n+* When running Raven Core with multi-wallet, all *node-level* RPC methods continue to work as before. HTTP RPC requests should be send to the normal `<RPC IP address>:<RPC port>/` endpoint, and `raven-cli` commands should be run as before. A *node-level* RPC method is any method which does not require access to the wallet.\n+* When running Raven Core with multi-wallet, *wallet-level* RPC methods must specify the wallet for which they're intended in every request. HTTP RPC requests should be send to the `<RPC IP address>:<RPC port>/wallet/<wallet name>/` endpoint, for example `127.0.0.1:8766/wallet/wallet1.dat/`. `raven-cli` commands should be run with a `-rpcwallet` option, for example `raven-cli -rpcwallet=wallet1.dat getbalance`.\n+* A new *node-level* `listwallets` RPC method is added to display which wallets are currently loaded. The names returned by this method are the same as those used in the HTTP endpoint and for the `rpcwallet` argument.\n+\n+Note that while multi-wallet is now fully supported, the RPC multi-wallet interface should be considered unstable for version 0.15.0, and there may backwards-incompatible changes in future versions.\n+\n+Replace-by-fee control in the GUI\n+---------------------------------\n+\n+Raven Core has supported creating opt-in replace-by-fee (RBF) transactions\n+since version 0.12.0, and since version 0.14.0 has included a `bumpfee` RPC method to\n+replace unconfirmed opt-in RBF transactions with a new transaction that pays\n+a higher fee.\n+\n+In version 0.15, creating an opt-in RBF transaction and replacing the unconfirmed\n+transaction with a higher-fee transaction are both supported in the GUI (See [PR 9592](https://github.com/RavenProject/Ravencoin/pull/9592)).\n+\n+Removal of Coin Age Priority\n+----------------------------\n+\n+In previous versions of Raven Core, a portion of each block could be reserved for transactions based on the age and value of UTXOs they spent. This concept (Coin Age Priority) is a policy choice by miners, and there are no consensus rules around the inclusion of Coin Age Priority transactions in blocks. In practice, only a few miners continue to use Coin Age Priority for transaction selection in blocks. Raven Core 0.15 removes all remaining support for Coin Age Priority (See [PR 9602](https://github.com/RavenProject/Ravencoin/pull/9602)). This has the following implications:\n+\n+- The concept of *free transactions* has been removed. High Coin Age Priority transactions would previously be allowed to be relayed even if they didn't attach a miner fee. This is no longer possible since there is no concept of Coin Age Priority. The `-limitfreerelay` and `-relaypriority` options which controlled relay of free transactions have therefore been removed.\n+- The `-sendfreetransactions` option has been removed, since almost all miners do not include transactions which do not attach a transaction fee.\n+- The `-blockprioritysize` option has been removed.\n+- The `estimatepriority` and `estimatesmartpriority` RPCs have been removed.\n+- The `getmempoolancestors`, `getmempooldescendants`, `getmempoolentry` and `getrawmempool` RPCs no longer return `startingpriority` and `currentpriority`.\n+- The `prioritisetransaction` RPC no longer takes a `priority_delta` argument, which is replaced by a `dummy` argument for backwards compatibility with clients using positional arguments. The RPC is still used to change the apparent fee-rate of the transaction by using the `fee_delta` argument.\n+- `-minrelaytxfee` can now be set to 0. If `minrelaytxfee` is set, then fees smaller than `minrelaytxfee` (per kB) are rejected from relaying, mining and transaction creation. This defaults to 1000 satoshi/kB.\n+- The `-printpriority` option has been updated to only output the fee rate and hash of transactions included in a block by the mining code.\n+\n+Mempool Persistence Across Restarts\n+-----------------------------------\n+\n+Version 0.14 introduced mempool persistence across restarts (the mempool is saved to a `mempool.dat` file in the data directory prior to shutdown and restores the mempool when the node is restarted). Version 0.15 allows this feature to be switched on or off using the `-persistmempool` command-line option (See [PR 9966](https://github.com/RavenProject/Ravencoin/pull/9966)). By default, the option is set to true, and the mempool is saved on shutdown and reloaded on startup. If set to false, the `mempool.dat` file will not be loaded on startup or saved on shutdown.\n+\n+New RPC methods\n+---------------\n+\n+Version 0.15 introduces several new RPC methods:\n+\n+- `abortrescan` stops current wallet rescan, e.g. when triggered by an `importprivkey` call (See [PR 10208](https://github.com/RavenProject/Ravencoin/pull/10208)).\n+- `combinerawtransaction` accepts a JSON array of raw transactions and combines them into a single raw transaction (See [PR 10571](https://github.com/RavenProject/Ravencoin/pull/10571)).\n+- `estimaterawfee` returns raw fee data so that customized logic can be implemented to analyze the data and calculate estimates. See [Fee Estimation Improvements](#fee-estimation-improvements) for full details on changes to the fee estimation logic and interface.\n+- `getchaintxstats` returns statistics about the total number and rate of transactions\n+  in the chain (See [PR 9733](https://github.com/RavenProject/Ravencoin/pull/9733)).\n+- `listwallets` lists wallets which are currently loaded. See the *Multi-wallet* section\n+  of these release notes for full details (See [Multi-wallet support](#multi-wallet-support)).\n+- `uptime` returns the total runtime of the `ravend` server since its last start (See [PR 10400](https://github.com/RavenProject/Ravencoin/pull/10400)).\n+\n+Low-level RPC changes\n+---------------------\n+\n+- When using Raven Core in multi-wallet mode, RPC requests for wallet methods must specify\n+  the wallet that they're intended for. See [Multi-wallet support](#multi-wallet-support) for full details.\n+\n+- The new database model no longer stores information about transaction\n+  versions of unspent outputs (See [Performance improvements](#performance-improvements)). This means that:\n+  - The `gettxout` RPC no longer has a `version` field in the response.\n+  - The `gettxoutsetinfo` RPC reports `hash_serialized_2` instead of `hash_serialized`,\n+    which does not commit to the transaction versions of unspent outputs, but does\n+    commit to the height and coinbase information.\n+  - The `getutxos` REST path no longer reports the `txvers` field in JSON format,\n+    and always reports 0 for transaction versions in the binary format\n+\n+- The `estimatefee` RPC is deprecated. Clients should switch to using the `estimatesmartfee` RPC, which returns better fee estimates. See [Fee Estimation Improvements](#fee-estimation-improvements) for full details on changes to the fee estimation logic and interface.\n+\n+- The `gettxoutsetinfo` response now contains `disk_size` and `bogosize` instead of\n+  `bytes_serialized`. The first is a more accurate estimate of actual disk usage, but\n+  is not deterministic. The second is unrelated to disk usage, but is a\n+  database-independent metric of UTXO set size: it counts every UTXO entry as 50 + the\n+  length of its scriptPubKey (See [PR 10426](https://github.com/RavenProject/Ravencoin/pull/10426)).\n+\n+- `signrawtransaction` can no longer be used to combine multiple transactions into a single transaction. Instead, use the new `combinerawtransaction` RPC (See [PR 10571](https://github.com/RavenProject/Ravencoin/pull/10571)).\n+\n+- `fundrawtransaction` no longer accepts a `reserveChangeKey` option. This option used to allow RPC users to fund a raw transaction using an key from the keypool for the change address without removing it from the available keys in the keypool. The key could then be re-used for a `getnewaddress` call, which could potentially result in confusing or dangerous behaviour (See [PR 10784](https://github.com/RavenProject/Ravencoin/pull/10784)).\n+\n+- `estimatepriority` and `estimatesmartpriority` have been removed. See [Removal of Coin Age Priority](#removal-of-coin-age-priority).\n+\n+- The `listunspent` RPC now takes a `query_options` argument (see [PR 8952](https://github.com/RavenProject/Ravencoin/pull/8952)), which is a JSON object\n+  containing one or more of the following members:\n+  - `minimumAmount` - a number specifying the minimum value of each UTXO\n+  - `maximumAmount` - a number specifying the maximum value of each UTXO\n+  - `maximumCount` - a number specifying the minimum number of UTXOs\n+  - `minimumSumAmount` - a number specifying the minimum sum value of all UTXOs\n+\n+- The `getmempoolancestors`, `getmempooldescendants`, `getmempoolentry` and `getrawmempool` RPCs no longer return `startingpriority` and `currentpriority`. See [Removal of Coin Age Priority](#removal-of-coin-age-priority).\n+\n+- The `dumpwallet` RPC now returns the full absolute path to the dumped wallet. It\n+  used to return no value, even if successful (See [PR 9740](https://github.com/RavenProject/Ravencoin/pull/9740)).\n+\n+- In the `getpeerinfo` RPC, the return object for each peer now returns an `addrbind` member, which contains the ip address and port of the connection to the peer. This is in addition to the `addrlocal` member which contains the ip address and port of the local node as reported by the peer (See [PR 10478](https://github.com/RavenProject/Ravencoin/pull/10478)).\n+\n+- The `disconnectnode` RPC can now disconnect a node specified by node ID (as well as by IP address/port). To disconnect a node based on node ID, call the RPC with the new `nodeid` argument (See [PR 10143](https://github.com/RavenProject/Ravencoin/pull/10143)).\n+\n+- The second argument in `prioritisetransaction` has been renamed from `priority_delta` to `dummy` since Raven Core no longer has a concept of coin age priority. The `dummy` argument has no functional effect, but is retained for positional argument compatibility. See [Removal of Coin Age Priority](#removal-of-coin-age-priority).\n+\n+- The `resendwallettransactions` RPC throws an error if the `-walletbroadcast` option is set to false (See [PR 10995](https://github.com/RavenProject/Ravencoin/pull/10995)).\n+\n+- The second argument in the `submitblock` RPC argument has been renamed from `parameters` to `dummy`. This argument never had any effect, and the renaming is simply to communicate this fact to the user (See [PR 10191](https://github.com/RavenProject/Ravencoin/pull/10191))\n+  (Clients should, however, use positional arguments for `submitblock` in order to be compatible with BIP 22.)\n+\n+- The `verbose` argument of `getblock` has been renamed to `verbosity` and now takes an integer from 0 to 2. Verbose level 0 is equivalent to `verbose=false`. Verbose level 1 is equivalent to `verbose=true`. Verbose level 2 will give the full transaction details of each transaction in the output as given by `getrawtransaction`. The old behavior of using the `verbose` named argument and a boolean value is still maintained for compatibility.\n+\n+- Error codes have been updated to be more accurate for the following error cases (See [PR 9853](https://github.com/RavenProject/Ravencoin/pull/9853)):\n+  - `getblock` now returns RPC_MISC_ERROR if the block can't be found on disk (for\n+  example if the block has been pruned). Previously returned RPC_INTERNAL_ERROR.\n+  - `pruneblockchain` now returns RPC_MISC_ERROR if the blocks cannot be pruned\n+  because the node is not in pruned mode. Previously returned RPC_METHOD_NOT_FOUND.\n+  - `pruneblockchain` now returns RPC_INVALID_PARAMETER if the blocks cannot be pruned\n+  because the supplied timestamp is too late. Previously returned RPC_INTERNAL_ERROR.\n+  - `pruneblockchain` now returns RPC_MISC_ERROR if the blocks cannot be pruned\n+  because the blockchain is too short. Previously returned RPC_INTERNAL_ERROR.\n+  - `setban` now returns RPC_CLIENT_INVALID_IP_OR_SUBNET if the supplied IP address\n+  or subnet is invalid. Previously returned RPC_CLIENT_NODE_ALREADY_ADDED.\n+  - `setban` now returns RPC_CLIENT_INVALID_IP_OR_SUBNET if the user tries to unban\n+  a node that has not previously been banned. Previously returned RPC_MISC_ERROR.\n+  - `removeprunedfunds` now returns RPC_WALLET_ERROR if `ravend` is unable to remove\n+  the transaction. Previously returned RPC_INTERNAL_ERROR.\n+  - `removeprunedfunds` now returns RPC_INVALID_PARAMETER if the transaction does not\n+  exist in the wallet. Previously returned RPC_INTERNAL_ERROR.\n+  - `fundrawtransaction` now returns RPC_INVALID_ADDRESS_OR_KEY if an invalid change\n+  address is provided. Previously returned RPC_INVALID_PARAMETER.\n+  - `fundrawtransaction` now returns RPC_WALLET_ERROR if `ravend` is unable to create\n+  the transaction. The error message provides further details. Previously returned\n+  RPC_INTERNAL_ERROR.\n+  - `bumpfee` now returns RPC_INVALID_PARAMETER if the provided transaction has\n+  descendants in the wallet. Previously returned RPC_MISC_ERROR.\n+  - `bumpfee` now returns RPC_INVALID_PARAMETER if the provided transaction has\n+  descendants in the mempool. Previously returned RPC_MISC_ERROR.\n+  - `bumpfee` now returns RPC_WALLET_ERROR if the provided transaction has\n+  has been mined or conflicts with a mined transaction. Previously returned\n+  RPC_INVALID_ADDRESS_OR_KEY.\n+  - `bumpfee` now returns RPC_WALLET_ERROR if the provided transaction is not\n+  BIP 125 replaceable. Previously returned RPC_INVALID_ADDRESS_OR_KEY.\n+  - `bumpfee` now returns RPC_WALLET_ERROR if the provided transaction has already\n+  been bumped by a different transaction. Previously returned RPC_INVALID_REQUEST.\n+  - `bumpfee` now returns RPC_WALLET_ERROR if the provided transaction contains\n+  inputs which don't belong to this wallet. Previously returned RPC_INVALID_ADDRESS_OR_KEY.\n+  - `bumpfee` now returns RPC_WALLET_ERROR if the provided transaction has multiple change\n+  outputs. Previously returned RPC_MISC_ERROR.\n+  - `bumpfee` now returns RPC_WALLET_ERROR if the provided transaction has no change\n+  output. Previously returned RPC_MISC_ERROR.\n+  - `bumpfee` now returns RPC_WALLET_ERROR if the fee is too high. Previously returned\n+  RPC_MISC_ERROR.\n+  - `bumpfee` now returns RPC_WALLET_ERROR if the fee is too low. Previously returned\n+  RPC_MISC_ERROR.\n+  - `bumpfee` now returns RPC_WALLET_ERROR if the change output is too small to bump the\n+  fee. Previously returned RPC_MISC_ERROR.\n+\n+0.15.0 Change log\n+=================\n+\n+### RPC and other APIs\n+- #9485 `61a640e` ZMQ example using python3 and asyncio (mcelrath)\n+- #9894 `0496e15` remove 'label' filter for rpc command help (instagibbs)\n+- #9853 `02bd6e9` Fix error codes from various RPCs (jnewbery)\n+- #9842 `598ef9c` Fix RPC failure testing (continuation of #9707) (jnewbery)\n+- #10038 `d34995a` Add mallocinfo mode to `getmemoryinfo` RPC (laanwj)\n+- #9500 `3568b30` [Qt][RPC] Autocomplete commands for 'help' command in debug console (achow101)\n+- #10056 `e6156a0` [zmq] Call va_end() on va_start()ed args (kallewoof)\n+- #10086 `7438cea` Trivial: move rpcserialversion into RPC option group (jlopp)\n+- #10150 `350b224` [rpc] Add logging rpc (jnewbery)\n+- #10208 `393160c` [wallet] Rescan abortability (kallewoof)\n+- #10143 `a987def` [net] Allow disconnectnode RPC to be called with node id (jnewbery)\n+- #10281 `0e8499c` doc: Add RPC interface guidelines (laanwj)\n+- #9733 `d4732f3` Add getchaintxstats RPC (sipa)\n+- #10310 `f4b15e2` [doc] Add hint about getmempoolentry to getrawmempool help (kallewoof)\n+- #8704 `96c850c` [RPC] Transaction details in getblock (achow101)\n+- #8952 `9390845` Add query options to listunspent RPC call (pedrobranco)\n+- #10413 `08ac35a` Fix docs (there's no rpc command setpaytxfee) (RHavar)\n+- #8384 `e317c0d` Add witness data output to TxInError messages (instagibbs)\n+- #9571 `4677151` RPC: getblockchaininfo returns BIP signaling statistics  (pinheadmz)\n+- #10450 `ef2d062` Fix bumpfee rpc \"errors\" return value (ryanofsky)\n+- #10475 `39039b1` [RPC] getmempoolinfo mempoolminfee is a RVN/KB feerate (instagibbs)\n+- #10478 `296928e` rpc: Add listen address to incoming connections in `getpeerinfo` (laanwj)\n+- #10403 `08d0390` Fix importmulti failure to return rescan errors (ryanofsky)\n+- #9740 `9fec4da` Add friendly output to dumpwallet (aideca)\n+- #10426 `16f6c98` Replace bytes_serialized with bogosize (sipa)\n+- #10252 `980deaf` RPC/Mining: Restore API compatibility for prioritisetransaction (luke-jr)\n+- #9672 `46311e7` Opt-into-RBF for RPC & raven-tx (luke-jr)\n+- #10481 `9c248e3` Decodehextx scripts sanity check  (achow101)\n+- #10488 `fa1f106` Note that the prioritizetransaction dummy value is deprecated, and has no meaning (TheBlueMatt)\n+- #9738 `c94b89e` gettxoutproof() should return consistent result (jnewbery)\n+- #10191 `00350bd` [trivial] Rename unused RPC arguments 'dummy' (jnewbery)\n+- #10627 `b62b4c8` fixed listunspent rpc convert parameter (tnakagawa)\n+- #10412 `bef02fb` Improve wallet rescan API (ryanofsky)\n+- #10400 `1680ee0` [RPC] Add an uptime command that displays the amount of time (in seconds) ravend has been running (rvelhote)\n+- #10683 `d81bec7` rpc: Move the `generate` RPC call to rpcwallet (laanwj)\n+- #10710 `30bc0f6` REST/RPC example update (Mirobit)\n+- #10747 `9edda0c` [rpc] fix verbose argument for getblock in raven-cli (jnewbery)\n+- #10589 `104f5f2` More economical fee estimates for RBF and RPC options to control (morcos)\n+- #10543 `b27b004` Change API to estimaterawfee (morcos)\n+- #10807 `afd2fca` getbalance example covers at least 6 confirms (instagibbs)\n+- #10707 `75b5643` Better API for estimatesmartfee RPC  (morcos)\n+- #10784 `9e8d6a3` Do not allow users to get keys from keypool without reserving them (TheBlueMatt)\n+- #10857 `d445a2c` [RPC] Add a deprecation warning to getinfo's output (achow101)\n+- #10571 `adf170d` [RPC]Move transaction combining from signrawtransaction to new RPC (achow101)\n+- #10783 `041dad9` [RPC] Various rpc argument fixes (instagibbs)\n+- #9622 `6ef3c7e` [rpc] listsinceblock should include lost transactions when parameter is a reorg'd block (kallewoof)\n+- #10799 `8537187` Prevent user from specifying conflicting parameters to fundrawtx (TheBlueMatt)\n+- #10931 `0b11a07` Fix misleading \"Method not found\" multiwallet errors (ryanofsky)\n+- #10788 `f66c596` [RPC] Fix addwitnessaddress by replacing ismine with producesignature (achow101)\n+- #10999 `627c3c0` Fix amounts formatting in `decoderawtransaction` (laanwj)\n+- #11002 `4268426` [wallet] return correct error code from resendwallettransaction (jnewbery)\n+- #11029 `96a63a3` [RPC] trivial: gettxout no longer shows version of tx (FelixWeis)\n+- #11083 `6c2b008` Fix combinerawtransaction RPC help result section (jonasnick)\n+- #11027 `07164bb` [RPC] Only return hex field once in getrawtransaction (achow101)\n+- #10698 `5af6572` Be consistent in calling transactions \"replaceable\" for Opt-In RBF (TheBlueMatt)\n+\n+### Block and transaction handling\n+- #9801 `a8c5751` Removed redundant parameter from mempool.PrioritiseTransaction (gubatron)\n+- #9819 `1efc99c` Remove harmless read of unusued priority estimates (morcos)\n+- #9822 `b7547fa` Remove block file location upgrade code (benma)\n+- #9602 `30ff3a2` Remove coin age priority and free transactions - implementation (morcos)\n+- #9548 `47510ad` Remove min reasonable fee (morcos)\n+- #10249 `c73af54` Switch CCoinsMap from boost to std unordered_map (sipa)\n+- #9966 `2a183de` Control mempool persistence using a command line parameter (jnewbery)\n+- #10199 `318ea50` Better fee estimates (morcos)\n+- #10196 `bee3529` Bugfix: PrioritiseTransaction updates the mempool tx counter (sdaftuar)\n+- #10195 `1088b02` Switch chainstate db and cache to per-txout model (sipa)\n+- #10284 `c2ab38b` Always log debug information for fee calculation in CreateTransaction (morcos)\n+- #10503 `efbcf2b` Use REJECT_DUPLICATE for already known and conflicted txn (sipa)\n+- #10537 `b3eb0d6` Few Minor per-utxo assert-semantics re-adds and tweak (TheBlueMatt)\n+- #10626 `8c841a3` doc: Remove outdated minrelaytxfee comment (MarcoFalke)\n+- #10559 `234ffc6` Change semantics of HaveCoinInCache to match HaveCoin (morcos)\n+- #10581 `7878353` Simplify return values of GetCoin/HaveCoin(InCache) (sipa)\n+- #10684 `a381f6a` Remove no longer used mempool.exists(outpoint) (morcos)\n+- #10148 `d4e551a` Use non-atomic flushing with block replay (sipa)\n+- #10685 `30c2130` Clarify CCoinsViewMemPool documentation (TheBlueMatt)\n+- #10558 `90a002e` Address nits from per-utxo change (morcos)\n+- #10706 `6859ad2` Improve wallet fee logic and fix GUI bugs (morcos)\n+- #10526 `754aa02` Force on-the-fly compaction during pertxout upgrade (sipa)\n+- #10985 `d896d5c` Add undocumented -forcecompactdb to force LevelDB compactions (sipa)\n+- #10292 `e4bbd3d` Improved efficiency in COutPoint constructors (mm-s)\n+- #10290 `8d6d43e` Add -stopatheight for benchmarking (sipa)\n+\n+### P2P protocol and network code\n+- #9726 `7639d38` netbase: Do not print an error on connection timeouts through proxy (laanwj)\n+- #9805 `5b583ef` Add seed.btc.petertodd.org to mainnet DNS seeds (petertodd)\n+- #9861 `22f609f` Trivial: Debug log ambiguity fix for peer addrs (keystrike)\n+- #9774 `90cb2a2` Enable host lookups for -proxy and -onion parameters (jmcorgan)\n+- #9558 `7b585cf` Clarify assumptions made about when BlockCheck is called (TheBlueMatt)\n+- #10135 `e19586a` [p2p] Send the correct error code in reject messages (jnewbery)\n+- #9665 `eab00d9` Use cached [compact] blocks to respond to getdata messages (TheBlueMatt)\n+- #10215 `a077a90` Check interruptNet during dnsseed lookups (TheBlueMatt)\n+- #10234 `faf2dea` [net] listbanned RPC and QT should show correct banned subnets (jnewbery)\n+- #10134 `314ebdf` [qa] Fixes segwit block relay test after inv-direct-fetch was disabled (sdaftuar)\n+- #10351 `3f57c55` removed unused code in INV message (Greg-Griffith)\n+- #10061 `ae78609` [net] Added SetSocketNoDelay() utility function (tjps)\n+- #10408 `28c6e8d` Net: Improvements to Tor control port parser (str4d)\n+- #10460 `5c63d66` Broadcast address every day, not 9 hours (sipa)\n+- #10471 `400fdd0` Denote functions CNode::GetRecvVersion() and CNode::GetRefCount()  as const (pavlosantoniou)\n+- #10345 `67700b3` [P2P] Timeout for headers sync (sdaftuar)\n+- #10564 `8d9f45e` Return early in IsBanned (gmaxwell)\n+- #10587 `de8db47` Net: Fix resource leak in ReadBinaryFile(...) (practicalswift)\n+- #9549 `b33ca14` [net] Avoid possibility of NULL pointer dereference in MarkBlockAsInFlight(...) (practicalswift)\n+- #10446 `2772dc9` net: avoid extra dns query per seed (theuni)\n+- #10824 `9dd6a2b` Avoid unnecessary work in SetNetworkActive (promag)\n+- #10948 `df3a6f4` p2p: Hardcoded seeds update pre-0.15 branch (laanwj)\n+- #10977 `02f4c4a` [net] Fix use of uninitialized value in getnetworkinfo(const JSONRPCRequest&) (practicalswift)\n+- #10982 `c8b62c7` Disconnect network service bits 6 and 8 until Aug 1, 2018 (TheBlueMatt)\n+- #11012 `0e5cff6` Make sure to clean up mapBlockSource if we've already seen the block (theuni)\n+\n+### Validation\n+- #9725 `67023e9` CValidationInterface Cleanups (TheBlueMatt)\n+- #10178 `2584925` Remove CValidationInterface::UpdatedTransaction (TheBlueMatt)\n+- #10201 `a6548a4` pass Consensus::Params& to functions in validation.cpp and make them static (mariodian)\n+- #10297 `431a548` Simplify DisconnectBlock arguments/return value (sipa)\n+- #10464 `f94b7d5` Introduce static DoWarning (simplify UpdateTip) (jtimon)\n+- #10569 `2e7d8f8` Fix stopatheight (achow101)\n+- #10192 `2935b46` Cache full script execution results in addition to signatures (TheBlueMatt)\n+- #10179 `21ed30a` Give CValidationInterface Support for calling notifications on the CScheduler Thread (TheBlueMatt)\n+- #10557 `66270a4` Make check to distinguish between orphan txs and old txs more efficient (morcos)\n+- #10775 `7c2400c` nCheckDepth chain height fix (romanornr)\n+- #10821 `16240f4` Add SSE4 optimized SHA256 (sipa)\n+- #10854 `04d395e` Avoid using sizes on non-fixed-width types to derive protocol constants (gmaxwell)\n+- #10945 `2a50b11` Update defaultAssumeValid according to release-process.md (gmaxwell)\n+- #10986 `2361208` Update chain transaction statistics (sipa)\n+- #11028 `6bdf4b3` Avoid masking of difficulty adjustment errors by checkpoints (sipa)\n+- #9533 `cb598cf` Allow non-power-of-2 signature cache sizes (sipa)\n+- #9208 `acd9957` Improve DisconnectTip performance (sdaftuar)\n+- #10618 `f90603a` Remove confusing MAX_BLOCK_BASE_SIZE (gmaxwell)\n+- #10758 `bd92424` Fix some chainstate-init-order bugs (TheBlueMatt)\n+- #10550 `b7296bc` Don't return stale data from CCoinsViewCache::Cursor() (ryanofsky)\n+- #10998 `2507fd5` Fix upgrade cancel warnings (TheBlueMatt)\n+- #9868 `cbdb473` Abstract out the command line options for block assembly (sipa)\n+\n+### Build system\n+- #9727 `5f0556d` Remove fallbacks for boost_filesystem < v3 (laanwj)\n+- #9788 `50a2265` gitian: bump descriptors for master (theuni)\n+- #9794 `7ca2f54` Minor update to qrencode package builder (mitchellcash)\n+- #9514 `2cc0df1` release: Windows signing script (theuni)\n+- #9921 `8b789d8` build: Probe MSG_DONTWAIT in the same way as MSG_NOSIGNAL (laanwj)\n+- #10011 `32d1b34` build: Fix typo s/HAVE_DONTWAIT/HAVE_MSG_DONTWAIT (laanwj)\n+- #9946 `90dd9e6` Fix build errors if spaces in path or parent directory (pinheadmz)\n+- #10136 `81da4c7` build: Disable Wshadow warning (laanwj)\n+- #10166 `64962ae` Ignore Doxyfile generated from Doxyfile.in template (paveljanik)\n+- #10239 `0416ea9` Make Boost use std::atomic internally (sipa)\n+- #10228 `27faa6c` build: regenerate raven-config.h as necessary (theuni)\n+- #10273 `8979f45` [scripts] Minor improvements to `macdeployqtplus` script (chrisgavin)\n+- #10325 `a26280b` 0.15.0 Depends Updates (fanquake)\n+- #10328 `79aeff6` Update contrib/debian to latest Ubuntu PPA upload (TheBlueMatt)\n+- #7522 `d25449f` Bugfix: Only use git for build info if the repository is actually the right one (luke-jr)\n+- #10489 `e654d61` build: silence gcc7's implicit fallthrough warning (theuni)\n+- #10549 `ad1a13e` Avoid printing generic and duplicated \"checking for QT\" during ./configure (drizzt)\n+- #10628 `8465b68` [depends] expat 2.2.1 (fanquake)\n+- #10806 `db825d2` build: verify that the assembler can handle crc32 functions (theuni)\n+- #10766 `b4d03be` Building Environment: Set ARFLAGS to cr (ReneNyffenegger)\n+- #10803 `91edda8` Explicitly search for bdb5.3 (pstratem)\n+- #10855 `81560b0` random: only use getentropy on openbsd (theuni)\n+- #10508 `1caafa6` Run Qt wallet tests on travis (ryanofsky)\n+- #10851 `e222618` depends: fix fontconfig with newer glibc (theuni)\n+- #10971 `88b1e4b` build: fix missing sse42 in depends builds (theuni)\n+- #11097 `129b03f` gitian: quick hack to fix version string in releases (theuni)\n+- #10039 `919aaf6` Fix compile errors with Qt 5.3.2 and Boost 1.55.0 (ryanofsky)\n+- #10168 `7032021` Fix build warning from #error text (jnewbery)\n+- #10301 `318392c` Check if sys/random.h is required for getentropy (jameshilliard)\n+\n+### GUI\n+- #9724 `1a9fd5c` Qt/Intro: Add explanation of IBD process (luke-jr)\n+- #9834 `b00ba62` qt: clean up initialize/shutdown signals (benma)\n+- #9481 `ce01e62` [Qt] Show more significant warning if we fall back to the default fee (jonasschnelli)\n+- #9974 `b9f930b` Add basic Qt wallet test (ryanofsky)\n+- #9690 `a387d3a` Change 'Clear' button string to 'Reset' (da2x)\n+- #9592 `9c7b7cf` [Qt] Add checkbox in the GUI to opt-in to RBF when creating a transaction (ryanofsky)\n+- #10098 `2b477e6` Make qt wallet test compatible with qt4 (ryanofsky)\n+- #9890 `1fa4ae6` Add a button to open the config file in a text editor (ericshawlinux)\n+- #10156 `51833a1` Fix for issues with startup and multiple monitors on windows (AllanDoensen)\n+- #10177 `de01da7` Changed \"Send\" button default status from true to false (KibbledJiveElkZoo)\n+- #10221 `e96486c` Stop treating coinbase outputs differently in GUI: show them at 1conf (TheBlueMatt)\n+- #10231 `987a6c0` [Qt] Reduce a significant cs_main lock freeze (jonasschnelli)\n+- #10242 `f6f3b58` [qt] Don't call method on null WalletModel object (ryanofsky)\n+- #10093 `a3e756b` [Qt] Don't add arguments of sensitive command to console window (jonasschnelli)\n+- #10362 `95546c8` [GUI] Add OSX keystroke to RPCConsole info (spencerlievens)\n+- #9697 `962cd3f` [Qt] simple fee bumper with user verification (jonasschnelli)\n+- #10390 `e477516` [wallet] remove minimum total fee option (instagibbs)\n+- #10420 `4314544` Add Qt tests for wallet spends & bumpfee (ryanofsky)\n+- #10454 `c1c9a95` Fix broken q4 test build (ryanofsky)\n+- #10449 `64beb13` Overhaul Qt fee bumper (jonasschnelli)\n+- #10582 `7c72fb9` Pass in smart fee slider value to coin control dialog (morcos)\n+- #10673 `4c72cc3` [qt] Avoid potential null pointer dereference in TransactionView::exportClicked() (practicalswift)\n+- #10769 `8fdd23a` [Qt] replace fee slider with a Dropdown, extend conf. targets (jonasschnelli)\n+- #10870 `412b466` [Qt] Use wallet 0 in rpc console if running with multiple wallets (jonasschnelli)\n+- #10988 `a9dd111` qt: Increase BLOCK_CHAIN_SIZE constants (laanwj)\n+- #10644 `e292140` Slightly overhaul NSI pixmaps (jonasschnelli)\n+- #10660 `0c3542e` Allow to cancel the txdb upgrade via splashscreen keypress 'q' (jonasschnelli)\n+\n+### Wallet\n+- #9359 `f7ec7cf` Add test for CWalletTx::GetImmatureCredit() returning stale values (ryanofsky)\n+- #9576 `56ab672` [wallet] Remove redundant initialization (practicalswift)\n+- #9333 `fa625b0` Document CWalletTx::mapValue entries and remove erase of nonexistent \"version\" entry (ryanofsky)\n+- #9906 `72fb515` Disallow copy constructor CReserveKeys (instagibbs)\n+- #9369 `3178b2c` Factor out CWallet::nTimeSmart computation into a method (ryanofsky)\n+- #9830 `afcd7c0` Add safe flag to listunspent result (NicolasDorier)\n+- #9993 `c49355c` Initialize nRelockTime (pstratem)\n+- #9818 `3d857f3` Save watch only key timestamps when reimporting keys (ryanofsky)\n+- #9294 `f34cdcb` Use internal HD chain for change outputs (hd split) (jonasschnelli)\n+- #10164 `e183ea2` Wallet: reduce excess logic InMempool() (kewde)\n+- #10186 `c9ff4f8` Remove SYNC_TRANSACTION_NOT_IN_BLOCK magic number (jnewbery)\n+- #10226 `64c45aa` wallet: Use boost to more portably ensure -wallet specifies only a filename (luke-jr)\n+- #9827 `c91ca0a` Improve ScanForWalletTransactions return value (ryanofsky)\n+- #9951 `fa1ac28` Wallet database handling abstractions/simplifications (laanwj)\n+- #10265 `c29a0d4` [wallet] [moveonly] Check non-null pindex before potentially referencing (kallewoof)\n+- #10283 `a550f6e` Cleanup: reduce to one GetMinimumFee call signature (morcos)\n+- #10294 `e2b99b1` [Wallet] unset change position when there is no change (instagibbs)\n+- #10115 `d3dce0e` Avoid reading the old hd master key during wallet encryption (TheBlueMatt)\n+- #10341 `18c9deb` rpc/wallet: Workaround older UniValue which returns a std::string temporary for get_str (luke-jr)\n+- #10308 `94e5227` [wallet] Securely erase potentially sensitive keys/values (tjps)\n+- #10257 `ea1fd43` [test] Add test for getmemoryinfo (jimmysong)\n+- #10295 `ce8176d` [qt] Move some WalletModel functions into CWallet (ryanofsky)\n+- #10506 `7cc2c67` Fix bumpfee test after #10449 (ryanofsky)\n+- #10500 `098b01d` Avoid CWalletTx copies in GetAddressBalances and GetAddressGroupings (ryanofsky)\n+- #10455 `0747d33` Simplify feebumper minimum fee code slightly (ryanofsky)\n+- #10522 `2805d60` [wallet] Remove unused variables (practicalswift)\n+- #8694 `177433a` Basic multiwallet support (luke-jr)\n+- #10598 `7a74f88` Supress struct/class mismatch warnings introduced in #10284 (paveljanik)\n+- #9343 `209eef6` Don't create change at dust limit (morcos)\n+- #10744 `ed88e31` Use method name via __func__ macro (darksh1ne)\n+- #10712 `e8b9523` Add change output if necessary to reduce excess fee (morcos)\n+- #10816 `1c011ff` Properly forbid -salvagewallet and -zapwallettxes for multi wallet (morcos)\n+- #10235 `5cfdda2` Track keypool entries as internal vs external in memory (TheBlueMatt)\n+- #10330 `bf0a08b` [wallet] fix zapwallettxes interaction with persistent mempool (jnewbery)\n+- #10831 `0b01935` Batch flushing operations to the walletdb during top up and increase keypool size (gmaxwell)\n+- #10795 `7b6e8bc` No longer ever reuse keypool indexes (TheBlueMatt)\n+- #10849 `bde4f93` Multiwallet: simplest endpoint support (jonasschnelli)\n+- #10817 `9022aa3` Redefine Dust and add a discard_rate (morcos)\n+- #10883 `bf3b742` Rename -usewallet to -rpcwallet (morcos)\n+- #10604 `420238d` [wallet] [tests] Add listwallets RPC, include wallet name in `getwalletinfo` and add multiwallet test (jnewbery)\n+- #10885 `70888a3` Reject invalid wallets (promag)\n+- #10949 `af56397` Clarify help message for -discardfee (morcos)\n+- #10942 `2e857bb` Eliminate fee overpaying edge case when subtracting fee from recipients (morcos)\n+- #10995 `fa64636` Fix resendwallettransactions assert failure if -walletbroadcast=0 (TheBlueMatt)\n+- #11022 `653a46d` Basic keypool topup (jnewbery)\n+- #11081 `9fe1f6b` Add length check for CExtKey deserialization (jonasschnelli, guidovranken)\n+- #11044 `4ef8374` [wallet] Keypool topup cleanups (jnewbery)\n+- #11145 `e51bb71` Fix rounding bug in calculation of minimum change (morcos)\n+- #9605 `779f2f9` Use CScheduler for wallet flushing, remove ThreadFlushWalletDB (TheBlueMatt)\n+- #10108 `4e3efd4` ApproximateBestSubset should take inputs by reference, not value (RHavar)\n+\n+### Tests and QA\n+- #9744 `8efd1c8` Remove unused module from rpc-tests (34ro)\n+- #9657 `7ff4a53` Improve rpc-tests.py (jnewbery)\n+- #9766 `7146d96` Add --exclude option to rpc-tests.py (jnewbery)\n+- #9577 `d6064a8` Fix docstrings in qa tests (jnewbery)\n+- #9823 `a13a417` qa: Set correct path for binaries in rpc tests (MarcoFalke)\n+- #9847 `6206252` Extra test vector for BIP32 (sipa)\n+- #9350 `88c2ae3` [Trivial] Adding label for amount inside of tx_valid/tx_invalid.json (Christewart)\n+- #9888 `36afd4d` travis: Verify commits only for one target (MarcoFalke)\n+- #9904 `58861ad` test: Fail if InitBlockIndex fails (laanwj)\n+- #9828 `67c5cc1` Avoid -Wshadow warnings in wallet_tests (ryanofsky)\n+- #9832 `48c3429` [qa] assert_start_raises_init_error (NicolasDorier)\n+- #9739 `9d5fcbf` Fix BIP68 activation test (jnewbery)\n+- #9547 `d32581c` bench: Assert that division by zero is unreachable (practicalswift)\n+- #9843 `c78adbf` Fix segwit getblocktemplate test (jnewbery)\n+- #9929 `d5ce14e` tests: Delete unused function _rpchost_to_args (laanwj)\n+- #9555 `19be26a` [test] Avoid reading a potentially uninitialized variable in tx_invalid-test (transaction_tests.cpp) (practicalswift)\n+- #9945 `ac23a7c` Improve logging in bctest.py if there is a formatting mismatch (jnewbery)\n+- #9768 `8910b47` [qa] Add logging to test_framework.py (jnewbery)\n+- #9972 `21833f9` Fix extended rpc tests broken by #9768 (jnewbery)\n+- #9977 `857d1e1` QA: getblocktemplate_longpoll.py should always use >0 fee tx (sdaftuar)\n+- #9970 `3cc13ea` Improve readability of segwit.py, smartfees.py (sdaftuar)\n+- #9497 `2c781fb` CCheckQueue Unit Tests (JeremyRubin)\n+- #10024 `9225de2` [trivial] Use log.info() instead of print() in remaining functional test cases (jnewbery)\n+- #9956 `3192e52` Reorganise qa directory (jnewbery)\n+- #10017 `02d64bd` combine_logs.py - aggregates log files from multiple ravends during functional tests (jnewbery)\n+- #10047 `dfef6b6` [tests] Remove unused variables and imports (practicalswift)\n+- #9701 `a230b05` Make bumpfee tests less fragile (ryanofsky)\n+- #10053 `ca20923` [test] Allow functional test cases to be skipped (jnewbery)\n+- #10052 `a0b1e57` [test] Run extended tests once daily in Travis (jnewbery)\n+- #10069 `1118493` [QA] Fix typo in fundrawtransaction test (NicolasDorier)\n+- #10083 `c044f03` [QA] Renaming rawTx into rawtx (NicolasDorier)\n+- #10073 `b1a4f27` Actually run assumevalid.py (jnewbery)\n+- #9780 `c412fd8` Suppress noisy output from qa tests in Travis (jnewbery)\n+- #10096 `79af9fb` Check that all test scripts in test/functional are being run (jnewbery)\n+- #10076 `5b029aa` [qa] combine_logs: Use ordered list for logfiles (MarcoFalke)\n+- #10107 `f2734c2` Remove unused variable. Remove accidental trailing semicolons in Python code (practicalswift)\n+- #10109 `8ac8041` Remove SingleNodeConnCB (jnewbery)\n+- #10114 `edc62c9` [tests] sync_with_ping should assert that ping hasn't timed out (jnewbery)\n+- #10128 `427d2fd` Speed Up CuckooCache tests (JeremyRubin)\n+- #10072 `12af74b` Remove sources of unreliablility in extended functional tests (jnewbery)\n+- #10077 `ebfd653` [qa] Add setnetworkactive smoke test (MarcoFalke)\n+- #10152 `080d7c7` [trivial] remove unused line in Travis config (jnewbery)\n+- #10159 `df1ca9e` [tests] color test results and sort alphabetically (jnewbery)\n+- #10124 `88799ea` [test] Suppress test logging spam (jnewbery)\n+- #10142 `ed09dd3` Run raven_test-qt under minimal QPA platform (ryanofsky)\n+- #9949 `a27dbc5` [bench] Avoid function call arguments which are pointers to uninitialized values (practicalswift)\n+- #10187 `b44adf9` tests: Fix test_runner return value in case of skipped test (laanwj)\n+- #10197 `d86bb07` [tests] Functional test warnings (jnewbery)\n+- #10219 `9111df9` Tests: Order Python Tests Differently (jimmysong)\n+- #10229 `f3db4c6` Tests: Add test for getdifficulty (jimmysong)\n+- #10224 `2723bcd` [test] Add test for getaddednodeinfo (jimmysong)\n+- #10023 `c530c15` [tests] remove maxblocksinflight.py (functionality covered by other test) (jnewbery)\n+- #10097 `1b25b6d` Move zmq test skipping logic into individual test case (jnewbery)\n+- #10272 `54e2d87` [Tests] Prevent warning: variable 'x' is uninitialized (paveljanik)\n+- #10225 `e0a7e19` [test] Add aborttrescan tests (kallewoof)\n+- #10278 `8254a8a` [test] Add Unit Test for GetListenPort (jimmysong)\n+- #10280 `47535d7` [test] Unit test amount.h/amount.cpp (jimmysong)\n+- #10256 `80c3a73` [test] Add test for gettxout to wallet.py (jimmysong)\n+- #10264 `492d22f` [test] Add tests for getconnectioncount, getnettotals and ping (jimmysong)\n+- #10169 `8f3e384` [tests] Remove func test code duplication (jnewbery)\n+- #10198 `dc8fc0c` [tests] Remove is_network_split from functional test framework (jnewbery)\n+- #10255 `3c5e6c9` [test] Add test for listaddressgroupings (jimmysong)\n+- #10137 `75171f0` Remove unused import. Remove accidental trailing semicolons (practicalswift)\n+- #10307 `83073de` [tests] allow zmq test to be run in out-of-tree builds (jnewbery)\n+- #10344 `e927483` [tests] Fix abandonconflict.py intermittency (jnewbery)\n+- #10318 `170bc2c` [tests] fix wait_for_inv() (jnewbery)\n+- #10171 `fff72de` [tests] Add node methods to test framework (jnewbery)\n+- #10352 `23d78c4` test: Add elapsed time to RPC tracing (laanwj)\n+- #10342 `6a796b2` [tests] Improve mempool_persist test (jnewbery)\n+- #10287 `776ba23` [tests] Update Unit Test for addrman.h/addrman.cpp (jimmysong)\n+- #10365 `7ee5236` [tests] increase timeouts in sendheaders test (jnewbery)\n+- #10361 `f6241b3` qa: disablewallet: Check that wallet is really disabled (MarcoFalke)\n+- #10371 `4b766fc` [tests] Clean up addrman_tests.cpp (jimmysong)\n+- #10253 `87abe20` [test] Add test for getnetworkhashps (jimmysong)\n+- #10376 `8bd16ee` [tests] fix disconnect_ban intermittency (jnewbery)\n+- #10374 `5411997` qa: Warn when specified test is not found (MarcoFalke)\n+- #10405 `0542978` tests: Correct testcase in script_tests.json for large number OP_EQUAL (laanwj)\n+- #10429 `6b99daf` tests: fix spurious addrman test failure (theuni)\n+- #10433 `8e57256` [tests] improve tmpdir structure (jnewbery)\n+- #10415 `217b416` [tests] Speed up fuzzing by ~200x when using afl-fuzz (practicalswift)\n+- #10445 `b4b057a` Add test for empty chain and reorg consistency for gettxoutsetinfo (gmaxwell)\n+- #10423 `1aefc94` [tests] skipped tests should clean up after themselves (jnewbery)\n+- #10359 `329fc1d` [tests] functional tests should call RavenTestFramework start/stop node methods (jnewbery)\n+- #10514 `e103b3f` Bugfix: missing == 0 after randrange (sipa)\n+- #10515 `c871f32` [test] Add test for getchaintxstats (jimmysong)\n+- #10509 `bea5b00` Remove xvfb configuration from travis (ryanofsky)\n+- #10535 `30853e1` [qa] fundrawtx: Fix shutdown race (MarcoFalke)\n+- #9909 `300f8e7` tests: Add FindEarliestAtLeast test for edge cases (ryanofsky)\n+- #10331 `75e898c` Share config between util and functional tests (jnewbery)\n+- #10321 `e801084` Use FastRandomContext for all tests (sipa)\n+- #10524 `6c2d81f` [tests] Remove printf(...) (practicalswift)\n+- #10547 `71ab6e5` [tests] Use FastRandomContext instead of boost::random::{mt19937,uniform_int_distribution} (practicalswift)\n+- #10551 `6702617` [Tests] Wallet encryption functional tests (achow101)\n+- #10555 `643fa0b` [tests] various improvements to zmq_test.py (jnewbery)\n+- #10533 `d083bd9` [tests] Use cookie auth instead of rpcuser and rpcpassword (achow101)\n+- #10632 `c68a9a6` qa: Add stopatheight test (MarcoFalke)\n+- #10636 `4bc853b` [qa] util: Check return code after closing ravend proc (MarcoFalke)\n+- #10662 `e0a7801` Initialize randomness in benchmarks (achow101)\n+- #10612 `7c87a9c` The young person's guide to the test_framework (jnewbery)\n+- #10659 `acb1153` [qa] blockchain: Pass on closed connection during generate call (MarcoFalke)\n+- #10690 `416af3e` [qa] Bugfix: allow overriding extra_args in ComparisonTestFramework (sdaftuar)\n+- #10556 `65cc7aa` Move stop/start functions from utils.py into RavenTestFramework (jnewbery)\n+- #10704 `dd07f47` [tests] nits in dbcrash.py (jnewbery)\n+- #10743 `be82498` [test] don't run dbcrash.py on Travis (jnewbery)\n+- #10761 `d3b5870` [tests] fix replace_by_fee.py (jnewbery)\n+- #10759 `1d4805c` Fix multi_rpc test for hosts that dont default to utf8 (TheBlueMatt)\n+- #10190 `e4f226a` [tests] mining functional tests (including regression test for submitblock) (jnewbery)\n+- #10739 `1fc783f` test: Move variable `state` down where it is used (paveljanik)\n+- #9980 `fee0d80` Fix mem access violation merkleblock (Christewart)\n+- #10893 `0c173a1` [QA] Avoid running multiwallet.py twice (jonasschnelli)\n+- #10927 `9d5e8f9` test: Make sure wallet.backup is created in temp path (laanwj)\n+- #10899 `f29d5db` [test] Qt: Use _putenv_s instead of setenv on Windows builds (brianmcmichael)\n+- #10912 `5c8eb79` [tests] Fix incorrect memory_cleanse(\u2026) call in crypto_tests.cpp (practicalswift)\n+- #11001 `fa8a063` [tests] Test disconnecting unsupported service bits logic (jnewbery)\n+- #10695 `929fd72` [qa] Rewrite BIP65/BIP66 functional tests (sdaftuar)\n+- #10963 `ecd2135` [bench] Restore format state of cout after printing with std::fixed/setprecision (practicalswift)\n+- #11025 `e5d26e4` qa: Fix inv race in example_test (MarcoFalke)\n+- #10765 `2c811e0` Tests: address placement should be deterministic by default (ReneNyffenegger)\n+- #11000 `ac016e1` test: Add resendwallettransactions functional tests (promag)\n+- #11032 `aeb3175` [qa] Fix block message processing error in sendheaders.py (sdaftuar)\n+- #10105 `0b9fb68` [tests] fixup - make all Travis test runs quiet, non just cron job runs (jnewbery)\n+- #10222 `6ce7337` [tests] test_runner - check unicode (jnewbery)\n+- #10327 `35da2ae` [tests] remove import-abort-rescan.py (jnewbery)\n+- #11023 `bf74d37` [tests] Add option to attach a python debugger if functional test fails (jnewbery)\n+- #10565 `8c2098a` [coverage] Remove subtrees and benchmarks from coverage report (achow101)\n+\n+### Miscellaneous\n+- #9871 `be8ba2c` Add a tree sha512 hash to merge commits (sipa)\n+- #9821 `d19d45a` util: Specific GetOSRandom for Linux/FreeBSD/OpenBSD (laanwj)\n+- #9903 `ba80a68` Docs: add details to -rpcclienttimeout doc (ian-kelling)\n+- #9910 `53c300f` Docs: correct and elaborate -rpcbind doc (ian-kelling)\n+- #9905 `01b7cda` [contrib] gh-merge: Move second sha512 check to the end (MarcoFalke)\n+- #9880 `4df8213` Verify Tree-SHA512s in merge commits, enforce sigs are not SHA1 (TheBlueMatt)\n+- #9932 `00c13ea` Fix verify-commits on travis and always check top commit's tree (TheBlueMatt)\n+- #9952 `6996e06` Add historical release notes for 0.14.0 (laanwj)\n+- #9940 `fa99663` Fix verify-commits on OSX, update for new bad Tree-SHA512, point travis to different keyservers (TheBlueMatt)\n+- #9963 `8040ae6` util: Properly handle errors during log message formatting (laanwj)\n+- #9984 `cce056d` devtools: Make github-merge compute SHA512 from git, instead of worktree (laanwj)\n+- #9995 `8bcf934` [doc] clarify blockchain size and pruning (askmike)\n+- #9734 `0c17afc` Add updating of chainTxData to release process (sipa)\n+- #10063 `530fcbd` add missing spaces so that markdown recognizes headline (flack)\n+- #10085 `db1ae54` Docs: remove 'noconnect' option (jlopp)\n+- #10090 `8e4f7e7` Update raven.conf with example for pruning (coinables)\n+- #9424 `1a5aaab` Change LogAcceptCategory to use uint32_t rather than sets of strings (gmaxwell)\n+- #10036 `fbf36ca` Fix init README format to render correctly on github (jlopp)\n+- #10058 `a2cd0b0` No need to use OpenSSL malloc/free (tjps)\n+- #10123 `471ed00` Allow debug logs to be excluded from specified component (jnewbery)\n+- #10104 `fadf078` linearize script: Option to use RPC cookie (achow101)\n+- #10162 `a3a2160` [trivial] Log calls to getblocktemplate (jnewbery)\n+- #10155 `928695b` build: Deduplicate version numbers (laanwj)\n+- #10211 `a86255b` [doc] Contributor fixes & new \"finding reviewers\" section (kallewoof)\n+- #10250 `1428f30` Fix some empty vector references (sipa)\n+- #10270 `95f5e44` Remove Clang workaround for Boost 1.46 (fanquake)\n+- #10263 `cb007e4` Trivial: fix fee estimate write error log message (CryptAxe)\n+- #9670 `bd9ec0e` contrib: github-merge improvements (laanwj)\n+- #10260 `1d75597` [doc] Minor corrections to osx dependencies (fanquake)\n+- #10189 `750c5a5` devtools/net: add a verifier for scriptable changes. Use it to make CNode::id private (theuni)\n+- #10322 `bc64b5a` Use hardware timestamps in RNG seeding (sipa)\n+- #10381 `7f2b9e0` Shadowing warnings are not enabled by default, update doc accordingly (paveljanik)\n+- #10380 `b6ee855` [doc] Removing comments about dirty entries on txmempool (madeo)\n+- #10383 `d0c37ee` [logging] log system time and mock time (jnewbery)\n+- #10404 `b45a52a` doc: Add logging to FinalizeNode() (sdaftuar)\n+- #10388 `526e839` Output line to debug.log when IsInitialBlockDownload latches to false (morcos)\n+- #10372 `15254e9` Add perf counter data to GetStrongRandBytes state in scheduler (TheBlueMatt)\n+- #10461 `55b72f3` Update style guide (sipa)\n+- #10486 `10e8c0a` devtools: Retry after signing fails in github-merge (laanwj)\n+- #10447 `f259263` Make ravend invalid argument error message specific (laanwj)\n+- #10495 `6a38b79` contrib: Update location of seeds.txt (laanwj)\n+- #10469 `b6b150b` Fixing typo in rpcdump.cpp help message (keystrike)\n+- #10451 `27b9931` contrib/init/ravend.openrcconf: Don't disable wallet by default (luke-jr)\n+- #10323 `00d3692` Update to latest libsecp256k1 master (sipa)\n+- #10422 `cec9e1e` Fix timestamp in fee estimate debug message (morcos)\n+- #10566 `5d034ee` [docs] Use the \"domain name setup\" image (previously unused) in the gitian docs (practicalswift)\n+- #10534 `a514ac3` Clarify prevector::erase and avoid swap-to-clear (sipa)\n+- #10575 `22ec768` Header include guideline (sipa)\n+- #10480 `fbf5d3b` Improve commit-check-script.sh (sipa)\n+- #10502 `1ad3d4e` scripted-diff: Remove BOOST_FOREACH, Q_FOREACH and PAIRTYPE (jtimon)\n+- #10377 `b63be2c` Use rdrand as entropy source on supported platforms (sipa)\n+- #9895 `228c319` Turn TryCreateDirectory() into TryCreateDirectories() (benma)\n+- #10602 `d76e84a` Make clang-format use C++11 features (e.g. A<A<int>> instead of A<A<int> >) (practicalswift)\n+- #10623 `c38f540` doc: Add 0.14.2 release notes (MarcoFalke)\n+- #10276 `b750b33` contrib/verifybinaries: allow filtering by platform (knocte)\n+- #10248 `01c4b14` Rewrite addrdb with less duplication using CHashVerifier (sipa)\n+- #10577 `232508f` Add an explanation of quickly hashing onto a non-power of two range (gmaxwell)\n+- #10608 `eee398f` Add a comment explaining the use of MAX_BLOCK_BASE_SIZE (gmaxwell)\n+- #10728 `7397af9` fix typo in help text for removeprunedfunds (AkioNak)\n+- #10193 `6dbcc74` scripted-diff: Remove #include <boost/foreach.hpp> (jtimon)\n+- #10676 `379aed0` document script-based return fields for validateaddress (instagibbs)\n+- #10651 `cef4b5c` Verify binaries from ravencore.org and raven.org (TheBlueMatt)\n+- #10786 `ca4c545` Add PR description to merge commit in github-merge.py (sipa)\n+- #10812 `c5904e8` [utils] Allow raven-cli's -rpcconnect option to be used with square brackets (jnewbery)\n+- #10842 `3895e25` Fix incorrect Doxygen tag (@ince \u2192 @since). Doxygen parameter name matching (practicalswift)\n+- #10681 `df0793f` add gdb attach process to test README (instagibbs)\n+- #10789 `1124328` Punctuation/grammer fixes in rpcwallet.cpp (stevendlander)\n+- #10655 `78f307b` Properly document target_confirmations in listsinceblock (RHavar)\n+- #10917 `5c003cb` developer-notes: add reference to snake_case and PascalCase (benma)\n+- #11003 `4b5a7ce` Docs: Capitalize bullet points in CONTRIBUTING guide (eklitzke)\n+- #10968 `98aa3f6` Add instructions for parallel gitian builds (coblee)\n+- #11076 `1c4b9b3` 0.15 release-notes nits: fix redundancy, remove accidental parenthesis & fix range style (practicalswift)\n+- #11090 `8f0121c` Update contributor names in release-notes.md (Derek701)\n+- #11056 `cbdd338` disable jni in builds (instagibbs)\n+- #11080 `2b59cfb` doc: Update build-openbsd for 6.1 (laanwj)\n+- #11119 `0a6af47` [doc] build-windows: Mention that only trusty works (MarcoFalke)\n+- #11108 `e8ad101` Changing -txindex requires -reindex, not -reindex-chainstate (TheBlueMatt)\n+- #9792 `342b9bc` FastRandomContext improvements and switch to ChaCha20 (sipa)\n+- #9505 `67ed40e` Prevector Quick Destruct (JeremyRubin)\n+- #10820 `ef37f20` Use cpuid intrinsics instead of asm code (sipa)\n+- #9999 `a328904` [LevelDB] Plug leveldb logs to raven logs (NicolasDorier)\n+- #9693 `c5e9e42` Prevent integer overflow in ReadVarInt (gmaxwell)\n+- #10129 `351d0ad` scheduler: fix sub-second precision with boost < 1.50 (theuni)\n+- #10153 `fade788` logging: Fix off-by-one for shrinkdebugfile default (MarcoFalke)\n+- #10305 `c45da32` Fix potential NPD introduced in b297426c (TheBlueMatt)\n+- #10338 `daf3e7d` Maintain state across GetStrongRandBytes calls (sipa)\n+- #10544 `a4fe077` Update to LevelDB 1.20 (sipa)\n+- #10614 `cafe24f` random: fix crash on some 64bit platforms (theuni)\n+- #10714 `2a09a38` Avoid printing incorrect block indexing time due to uninitialized variable (practicalswift)\n+- #10837 `8bc6d1f` Fix resource leak on error in GetDevURandom (corebob)\n+- #10832 `89bb036` init: Factor out AppInitLockDataDirectory and fix startup core dump issue (laanwj)\n+- #10914 `b995a37` Add missing lock in CScheduler::AreThreadsServicingQueue() (TheBlueMatt)\n+- #10958 `659c096` Update to latest Raven patches for LevelDB (sipa)\n+- #10919 `c1c671f` Fix more init bugs (TheBlueMatt)\n+\n+Credits\n+=======\n+\n+Thanks to everyone who directly contributed to this release:\n+\n+- \u30ed\u30cf\u30f3 \u30c0\u30eb\n+- Ahmad Kazi\n+- aideca\n+- Akio Nakamura\n+- Alex Morcos\n+- Allan Doensen\n+- Andres G. Aragoneses\n+- Andrew Chow\n+- Angel Leon\n+- Awemany\n+- Bob McElrath\n+- Brian McMichael\n+- BtcDrak\n+- Charlie Lee\n+- Chris Gavin\n+- Chris Stewart\n+- Cory Fields\n+- CryptAxe\n+- Dag Robole\n+- Daniel Aleksandersen\n+- Daniel Cousens\n+- darksh1ne\n+- Dimitris Tsapakidis\n+- Eric Shaw\n+- Evan Klitzke\n+- fanquake\n+- Felix Weis\n+- flack\n+- Guido Vranken\n+- Greg Griffith\n+- Gregory Maxwell\n+- Gregory Sanders\n+- Ian Kelling\n+- Jack Grigg\n+- James Evans\n+- James Hilliard\n+- Jameson Lopp\n+- Jeremy Rubin\n+- Jimmy Song\n+- Jo\u00e3o Barbosa\n+- Johnathan Corgan\n+- John Newbery\n+- Jonas Schnelli\n+- Jorge Tim\u00f3n\n+- Karl-Johan Alm\n+- kewde\n+- KibbledJiveElkZoo\n+- Kirit Thadaka\n+- kobake\n+- Kyle Honeycutt\n+- Lawrence Nahum\n+- Luke Dashjr\n+- Marco Falke\n+- Marcos Mayorga\n+- Marijn Stollenga\n+- Mario Dian\n+- Mark Friedenbach\n+- Marko Bencun\n+- Masahiko Hyuga\n+- Matt Corallo\n+- Matthew Zipkin\n+- Matthias Grundmann\n+- Michael Goldstein\n+- Michael Rotarius\n+- Mikerah\n+- Mike van Rossum\n+- Mitchell Cash\n+- Nicolas Dorier\n+- Patrick Strateman\n+- Pavel Jan\u00edk\n+- Pavlos Antoniou\n+- Pavol Rusnak\n+- Pedro Branco\n+- Peter Todd\n+- Pieter Wuille\n+- practicalswift\n+- Ren\u00e9 Nyffenegger\n+- Ricardo Velhote\n+- romanornr\n+- Russell Yanofsky\n+- Rusty Russell\n+- Ryan Havar\n+- shaolinfry\n+- Shigeya Suzuki\n+- Simone Madeo\n+- Spencer Lievens\n+- Steven D. Lander\n+- Suhas Daftuar\n+- Takashi Mitsuta\n+- Thomas Snider\n+- Timothy Redaelli\n+- tintinweb\n+- tnaka\n+- Warren Togami\n+- Wladimir J. van der Laan\n+\n+As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/raven/)."
      },
      {
        "sha": "38715bc75fe27a48c253ee43474f926df7065593",
        "filename": "doc/release-notes/release-notes-0.3.12.md",
        "status": "removed",
        "additions": 0,
        "deletions": 13,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.3.12.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.3.12.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.12.md?ref=ddeacfcff563b602b8833287a34dfbee340e5bec",
        "patch": "@@ -1,13 +0,0 @@\n-Version 0.3.12 is now available.\n-\n-Features:\n-* json-rpc errors return a more standard error object. (thanks to Gavin Andresen)\n-* json-rpc command line returns exit codes.\n-* json-rpc \"backupwallet\" command.\n-* Recovers and continues if an exception is caused by a message you received.  Other nodes shouldn't be able to cause an exception, and it hasn't happened before, but if a way is found to cause an exception, this would keep it from being used to stop network nodes.\n-\n-If you have json-rpc code that checks the contents of the error string, you need to change it to expect error objects of the form {\"code\":<number>,\"message\":<string>}, which is the standard.  See this thread:\n-http://www.bitcoin.org/smf/index.php?topic=969.0\n-\n-Download:\n-http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.3.12/"
      },
      {
        "sha": "2b95ff233d4c2810f9a2fd58b63d528ba65bd108",
        "filename": "doc/release-notes/release-notes-0.3.13.md",
        "status": "removed",
        "additions": 0,
        "deletions": 26,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.3.13.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.3.13.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.13.md?ref=ddeacfcff563b602b8833287a34dfbee340e5bec",
        "patch": "@@ -1,26 +0,0 @@\n-Version 0.3.13 is now available.  You should upgrade to prevent potential problems with 0/unconfirmed transactions.  Note: 0.3.13 prevents problems if you haven't already spent a 0/unconfirmed transaction, but if that already happened, you need 0.3.13.2.\n-\n-Changes:\n-* Don't count or spend payments until they have 1 confirmation.\n-* Internal version number from 312 to 31300.\n-* Only accept transactions sent by IP address if -allowreceivebyip is specified.\n-* Dropped DB_PRIVATE Berkeley DB flag.\n-* Fix problem sending the last cent with sub-cent fractional change.\n-* Auto-detect whether to use 128-bit 4-way SSE2 on Linux.\n-Gavin Andresen:\n-* Option -rpcallowip= to accept json-rpc connections from another machine.\n-* Clean shutdown on SIGTERM on Linux.\n-\n-Download:\n-http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.3.13/\n-\n-(Thanks Laszlo for the Mac OSX build!)\n-\n-Note:\n-The SSE2 auto-detect in the Linux 64-bit version doesn't work with AMD in 64-bit mode.  Please try this instead and let me know if it gets it right:\n-http://www.bitcoin.org/download/bitcoin-0.3.13.1-specialbuild-linux64.tar.gz\n-\n-You can still control the SSE2 use manually with -4way and -4way=0.\n-\n-Version 0.3.13.2 (SVN rev 161) has improvements for the case where you already had 0/unconfirmed transactions that you might have already spent.  Here's a Windows build of it:\n-http://www.bitcoin.org/download/bitcoin-0.3.13.2-win32-setup.exe"
      },
      {
        "sha": "e73052ed9bf0ba3b9dc59f8218d2eb69ea950cac",
        "filename": "doc/release-notes/release-notes-0.3.14.md",
        "status": "removed",
        "additions": 0,
        "deletions": 11,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.3.14.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.3.14.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.14.md?ref=ddeacfcff563b602b8833287a34dfbee340e5bec",
        "patch": "@@ -1,11 +0,0 @@\n-Version 0.3.14 is now available\n-http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.3.14/\n-\n-Changes:\n-* Key pool feature for safer wallet backup\n-Gavin Andresen:\n-* TEST network mode with switch -testnet\n-* Option to use SSL for JSON-RPC connections on unix/osx\n-* validateaddress RPC command\n-eurekafag:\n-* Russian translation"
      },
      {
        "sha": "b98052ef5934de489f2f527d50abb51be95244d6",
        "filename": "doc/release-notes/release-notes-0.3.15.md",
        "status": "removed",
        "additions": 0,
        "deletions": 6,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.3.15.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.3.15.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.15.md?ref=ddeacfcff563b602b8833287a34dfbee340e5bec",
        "patch": "@@ -1,6 +0,0 @@\n-* paytxfee switch is now per KB, so it adds the correct fee for large transactions\n-* sending avoids using coins with less than 6 confirmations if it can\n-* BitcoinMiner processes transactions in priority order based on age of dependencies\n-* make sure generation doesn't start before block 74000 downloaded\n-* bugfixes by Dean Gores\n-* testnet, keypoololdest and paytxfee added to getinfo"
      },
      {
        "sha": "743f84f30e9c2ad96251f433cad3468f3e591662",
        "filename": "doc/release-notes/release-notes-0.3.16.md",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.3.16.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.3.16.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.16.md?ref=ddeacfcff563b602b8833287a34dfbee340e5bec",
        "patch": "@@ -1 +0,0 @@\n-Never released."
      },
      {
        "sha": "d3604b8f8867f1a2629d9daf971f463b291f0a5c",
        "filename": "doc/release-notes/release-notes-0.3.17.md",
        "status": "removed",
        "additions": 0,
        "deletions": 12,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.3.17.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.3.17.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.17.md?ref=ddeacfcff563b602b8833287a34dfbee340e5bec",
        "patch": "@@ -1,12 +0,0 @@\n-Version 0.3.17 is now available.\n-\n-Changes:\n-* new getwork, thanks m0mchil\n-* added transaction fee setting in UI options menu\n-* free transaction limits\n-* sendtoaddress returns transaction id instead of \"sent\"\n-* getaccountaddress <account>\n-\n-The UI transaction fee setting was easy since it was still there from 0.1.5 and all I had to do was re-enable it.\n-\n-The accounts-based commands: move, sendfrom and getbalance <account> will be in the next release.  We still have some more changes to make first."
      },
      {
        "sha": "ab1c2e0692ffba94d66a5201ac2675c83cc60f11",
        "filename": "doc/release-notes/release-notes-0.3.18.md",
        "status": "removed",
        "additions": 0,
        "deletions": 11,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.3.18.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.3.18.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.18.md?ref=ddeacfcff563b602b8833287a34dfbee340e5bec",
        "patch": "@@ -1,11 +0,0 @@\n-Changes:\n-* Fixed a wallet.dat compatibility problem if you downgraded from 0.3.17 and then upgraded again\n-* IsStandard() check to only include known transaction types in blocks\n-* Jgarzik's optimisation to speed up the initial block download a little\n-\n-The main addition in this release is the Accounts-Based JSON-RPC commands that Gavin's been working on (more details at http://www.bitcoin.org/smf/index.php?topic=1886.0).  \n-* getaccountaddress\n-* sendfrom\n-* move\n-* getbalance\n-* listtransactions"
      },
      {
        "sha": "fcd867561d62341eef06d84cee4edec1e1894fed",
        "filename": "doc/release-notes/release-notes-0.3.19.md",
        "status": "removed",
        "additions": 0,
        "deletions": 9,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.3.19.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.3.19.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.19.md?ref=ddeacfcff563b602b8833287a34dfbee340e5bec",
        "patch": "@@ -1,9 +0,0 @@\n-There's more work to do on DoS, but I'm doing a quick build of what I have so far in case it's needed, before venturing into more complex ideas.  The build for this is version 0.3.19.\n-\n-- Added some DoS controls\n-As Gavin and I have said clearly before, the software is not at all resistant to DoS attack.  This is one improvement, but there are still more ways to attack than I can count.  \n-\n-I'm leaving the -limitfreerelay part as a switch for now and it's there if you need it.\n-\n-- Removed \"safe mode\" alerts\n-\"safe mode\" alerts was a temporary measure after the 0.3.9 overflow bug.  We can say all we want that users can just run with \"-disablesafemode\", but it's better just not to have it for the sake of appearances.  It was never intended as a long term feature.  Safe mode can still be triggered by seeing a longer (greater total PoW) invalid block chain."
      },
      {
        "sha": "6c5682ea4e2811a2bab3691d1fff5987538d2aff",
        "filename": "doc/release-notes/release-notes-0.3.20.1.md",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.3.20.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.3.20.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.20.1.md?ref=ddeacfcff563b602b8833287a34dfbee340e5bec",
        "patch": "@@ -1 +0,0 @@\n-Never released or release notes were lost."
      },
      {
        "sha": "09ecb736bdb3f808a5d59ce3bf851c6c159ca6ce",
        "filename": "doc/release-notes/release-notes-0.3.20.2.md",
        "status": "removed",
        "additions": 0,
        "deletions": 17,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.3.20.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.3.20.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.20.2.md?ref=ddeacfcff563b602b8833287a34dfbee340e5bec",
        "patch": "@@ -1,17 +0,0 @@\n-The maxsendbuffer bug (0.3.20.1 clients not being able to download the block chain from other 0.3.20.1 clients) was only going to get\n-worse as people upgraded, so I cherry-picked the bug fix and created a minor release yesterday.\n-\n-The Amazon Machine Images I used to do the builds are available:\n-\n-  ami-38a05251   Bitcoin-v0.3.20.2 Mingw    (Windows; Administrator password 'bitcoin development')\n-  ami-30a05259   Bitcoin_0.3.20.2 Linux32\n-  ami-8abc4ee3   Bitcoin_0.3.20.2 Linux64\n-\n-(mac build will be done soon)\n-\n-If you have already downloaded version 0.3.20.1, please either add this to your bitcoin.conf file:\n-\n-  maxsendbuffer=10000\n-  maxreceivebuffer=10000\n-\n-... or download the new version."
      },
      {
        "sha": "9ae21802ee89b6587f006c73838ccbd34deb882e",
        "filename": "doc/release-notes/release-notes-0.3.20.md",
        "status": "removed",
        "additions": 0,
        "deletions": 22,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.3.20.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.3.20.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.20.md?ref=ddeacfcff563b602b8833287a34dfbee340e5bec",
        "patch": "@@ -1,22 +0,0 @@\n-Please checkout the git integration branch from:\n-\n-https://github.com/bitcoin/bitcoin\n-\n-... and help test.  The new features that need testing are:\n-\n-* -nolisten : https://github.com/bitcoin/bitcoin/pull/11\n-* -rescan : scan block chain for missing wallet transactions\n-* -printtoconsole : https://github.com/bitcoin/bitcoin/pull/37\n-* RPC gettransaction details : https://github.com/bitcoin/bitcoin/pull/24\n-* listtransactions new features : https://github.com/bitcoin/bitcoin/pull/10\n-\n-Bug fixes that also need testing:\n-\n-* -maxconnections= : https://github.com/bitcoin/bitcoin/pull/42\n-* RPC listaccounts minconf : https://github.com/bitcoin/bitcoin/pull/27\n-* RPC move, add time to output : https://github.com/bitcoin/bitcoin/pull/21\n-* ...and several improvements to --help output.\n-\n-This needs more testing on Windows!  Please drop me a quick private message, email, or IRC message if you are able to do some testing.  If you find bugs, please open an issue at:\n-\n-https://github.com/bitcoin/bitcoin/issues"
      },
      {
        "sha": "f3b6bc426470d4137edc1b477ef9c3b400e0073e",
        "filename": "doc/release-notes/release-notes-0.3.21.md",
        "status": "removed",
        "additions": 0,
        "deletions": 20,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.3.21.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.3.21.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.21.md?ref=ddeacfcff563b602b8833287a34dfbee340e5bec",
        "patch": "@@ -1,20 +0,0 @@\n-Binaries for Bitcoin version 0.3.21 are available at:\n-  https://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.3.21/\n-\n-Changes and new features from the 0.3.20 release include:\n-\n-* Universal Plug and Play support.  Enable automatic opening of a port for incoming connections by running bitcoin or bitcoind with the - -upnp=1 command line switch or using the Options dialog box.\n-\n-* Support for full-precision bitcoin amounts.  You can now send, and bitcoin will display, bitcoin amounts smaller than 0.01.  However, sending fewer than 0.01 bitcoins still requires a 0.01 bitcoin fee (so you can send 1.0001 bitcoins without a fee, but you will be asked to pay a fee if you try to send 0.0001).\n-\n-* A new method of finding bitcoin nodes to connect with, via DNS A records. Use the -dnsseed option to enable.\n-\n-For developers, changes to bitcoin's remote-procedure-call API:\n-\n-* New rpc command \"sendmany\" to send bitcoins to more than one address in a single transaction.\n-\n-* Several bug fixes, including a serious intermittent bug that would sometimes cause bitcoind to stop accepting rpc requests. \n-\n-* -logtimestamps option, to add a timestamp to each line in debug.log.\n-\n-* Immature blocks (newly generated, under 120 confirmations) are now shown in listtransactions."
      },
      {
        "sha": "4c05e3e5e78e309770aed4974be1707a8d44d255",
        "filename": "doc/release-notes/release-notes-0.3.22.md",
        "status": "removed",
        "additions": 0,
        "deletions": 16,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.3.22.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.3.22.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.22.md?ref=ddeacfcff563b602b8833287a34dfbee340e5bec",
        "patch": "@@ -1,16 +0,0 @@\n-Download URL: https://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.3.22/\n-\n-This is largely a bugfix and TX fee schedule release.  We also hope to make 0.3.23 a quick release, to fix problems that the network has seen due to explosive growth in the past week.\n-\n-Notable changes:\n-* Client will accept and relay TX's with 0.0005 BTC fee schedule (users still pay 0.01 BTC per kb, until next version)\n-* Non-standard transactions accepted on testnet\n-* Source code tree reorganized (prep for autotools build)\n-* Remove \"Generate Coins\" option from GUI, and remove 4way SSE miner.  Internal reference CPU miner remains available, but users are directed to external miners for best hash production.\n-* IRC is overflowing.  Client now bootstraps to channels #bitcoin00 - #bitcoin99\n-* DNS names now may be used with -addnode, -connect (requires -dns to enable)\n-\n-RPC changes:\n-* 'listtransactions' adds 'from' param, for range queries\n-* 'move' may take account balances negative\n-* 'settxfee' added, to manually set TX fee"
      },
      {
        "sha": "c1d520e4925d6c57ed72f0c8a34f29a250f71efe",
        "filename": "doc/release-notes/release-notes-0.3.23.md",
        "status": "removed",
        "additions": 0,
        "deletions": 10,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.3.23.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.3.23.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.23.md?ref=ddeacfcff563b602b8833287a34dfbee340e5bec",
        "patch": "@@ -1,10 +0,0 @@\n-Win32, Linux, MacOSX and source releases for bitcoin v0.3.23 have been uploaded to\n-https://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.3.23/\n-\n-This is another quick bugfix release, trying to deal with the influx of new bitcoin users.\n-\n-Main items of note:\n-\n-* P2P connect-to-node logic changed to reduce timeout a bit.  The network saw a huge influx of new users, who do not permit incoming connections.  This change is a short-term hack, to more quickly hunt for useful P2P connections.  Better \"leaf node\" logic is in the works, but this should let us limp along until then.  One may use -upnp to properly forward ports, and help the network.\n-* Transaction fee reduced to 0.0005 for new transactions\n-* Client will relay transactions with fees as low as 0.0001 BTC"
      },
      {
        "sha": "d35ac66f2c8a07e8912426c10e2e4c158680ad21",
        "filename": "doc/release-notes/release-notes-0.3.24.md",
        "status": "removed",
        "additions": 0,
        "deletions": 20,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.3.24.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.3.24.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.24.md?ref=ddeacfcff563b602b8833287a34dfbee340e5bec",
        "patch": "@@ -1,20 +0,0 @@\n-Bitcoin v0.3.24 is now available for download at\n-https://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.3.24/\n-\n-This is another bug fix release.  We had hoped to have wallet encryption ready for release, but more urgent fixes for existing clients were needed -- most notably block download problems were getting severe.  Wallet encryption is ready for testing at https://github.com/bitcoin/bitcoin/pull/352 for the git-savvy, and hopefully will follow shortly in the next release, v0.4.\n-\n-Notable fixes in v0.3.24, and the main reasons for this release:\n-\n-F1) Block downloads were failing or taking unreasonable amounts of time to complete, because the increased size of the block chain was bumping up against some earlier buffer-size DoS limits.\n-\n-F2) Fix crash caused by loss/lack of network connection.\n-\n-Notable changes in v0.3.24:\n-\n-C1) DNS seeding enabled by default.\n-\n-C2) UPNP enabled by default in the GUI client.  The percentage of bitcoin clients that accept incoming connections is quite small, and that is a problem.  This should help.  bitcoind, and unofficial builds, are unchanged (though we encourage use of \"-upnp\" to help the network!)\n-\n-C3) Initial unit testing framework.  Bitcoin sorely needs automated tests, and this is a beginning.  Contributions welcome.\n-\n-C4) Internal wallet code cleanup.  While invisible to an end user, this change provides the basis for v0.4's wallet encryption."
      },
      {
        "sha": "145072a369d85a83b312100cf4d7089a591c1bfc",
        "filename": "doc/release-notes/release-notes-0.4.0.md",
        "status": "removed",
        "additions": 0,
        "deletions": 70,
        "changes": 70,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.4.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.4.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.4.0.md?ref=ddeacfcff563b602b8833287a34dfbee340e5bec",
        "patch": "@@ -1,70 +0,0 @@\n-Bitcoin version 0.4.0 is now available for download at:\n-http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.4.0/\n-\n-The main feature in this release is wallet private key encryption;\n-you can set a passphrase that must be entered before sending coins.\n-See below for more information; if you decide to encrypt your wallet,\n-WRITE DOWN YOUR PASSPHRASE AND PUT IT IN A SECURE LOCATION. If you\n-forget or lose your wallet passphrase, you lose your bitcoins.\n-Previous versions of bitcoin are unable to read encrypted wallets,\n-and will crash on startup if the wallet is encrypted.\n-\n-Also note: bitcoin version 0.4 uses a newer version of Berkeley DB\n-(bdb version 4.8) than previous versions (bdb 4.7). If you upgrade\n-to version 0.4 and then revert back to an earlier version of bitcoin\n-the it may be unable to start because bdb 4.7 cannot read bdb 4.8\n-\"log\" files.\n-\n-\n-Notable bug fixes from version 0.3.24:\n-\n-Fix several bitcoin-becomes-unresponsive bugs due to multithreading\n-deadlocks.\n-\n-Optimize database writes for large (lots of inputs) transactions\n-(fixes a potential denial-of-service attack)\n-\n-\n-Wallet Encryption\n-\n-Bitcoin supports native wallet encryption so that people who steal your\n-wallet file don't automatically get access to all of your Bitcoins.\n-In order to enable this feature, choose \"Encrypt Wallet\" from the\n-Options menu.  You will be prompted to enter a passphrase, which\n-will be used as the key to encrypt your wallet and will be needed\n-every time you wish to send Bitcoins.  If you lose this passphrase,\n-you will lose access to spend all of the bitcoins in your wallet,\n-no one, not even the Bitcoin developers can recover your Bitcoins.\n-This means you are responsible for your own security, store your\n-passphrase in a secure location and do not forget it.\n-\n-Remember that the encryption built into bitcoin only encrypts the\n-actual keys which are required to send your bitcoins, not the full\n-wallet.  This means that someone who steals your wallet file will\n-be able to see all the addresses which belong to you, as well as the\n-relevant transactions, you are only protected from someone spending\n-your coins.\n-\n-It is recommended that you backup your wallet file before you\n-encrypt your wallet.  To do this, close the Bitcoin client and\n-copy the wallet.dat file from ~/.bitcoin/ on Linux, /Users/(user\n-name)/Application Support/Bitcoin/ on Mac OSX, and %APPDATA%/Bitcoin/\n-on Windows (that is /Users/(user name)/AppData/Roaming/Bitcoin on\n-Windows Vista and 7 and /Documents and Settings/(user name)/Application\n-Data/Bitcoin on Windows XP).  Once you have copied that file to a\n-safe location, reopen the Bitcoin client and Encrypt your wallet.\n-If everything goes fine, delete the backup and enjoy your encrypted\n-wallet.  Note that once you encrypt your wallet, you will never be\n-able to go back to a version of the Bitcoin client older than 0.4.\n-\n-Keep in mind that you are always responsible for your own security.\n-All it takes is a slightly more advanced wallet-stealing trojan which\n-installs a keylogger to steal your wallet passphrase as you enter it\n-in addition to your wallet file and you have lost all your Bitcoins.\n-Wallet encryption cannot keep you safe if you do not practice\n-good security, such as running up-to-date antivirus software, only\n-entering your wallet passphrase in the Bitcoin client and using the\n-same passphrase only as your wallet passphrase.\n-\n-See the doc/README file in the bitcoin source for technical details\n-of wallet encryption."
      },
      {
        "sha": "ac471a8d7feddfd3235a1a1b7973cb06f2e768ed",
        "filename": "doc/release-notes/release-notes-0.4.1.md",
        "status": "removed",
        "additions": 0,
        "deletions": 38,
        "changes": 38,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.4.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.4.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.4.1.md?ref=ddeacfcff563b602b8833287a34dfbee340e5bec",
        "patch": "@@ -1,38 +0,0 @@\n-Bitcoin version 0.4.1 is now available for download at:\n-http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.4.1/\n-\n-This is a bugfix only release based on 0.4.0.\n-\n-Please report bugs by replying to this forum thread.\n-\n-MAJOR BUG FIX  (CVE-2011-4447)\n-\n-The wallet encryption feature introduced in Bitcoin version 0.4.0 did not sufficiently secure the private keys. An attacker who\n-managed to get a copy of your encrypted wallet.dat file might be able to recover some or all of the unencrypted keys and steal the\n-associated coins.\n-\n-If you have a previously encrypted wallet.dat, the first time you run wxbitcoin or bitcoind the wallet will be rewritten, Bitcoin will\n-shut down, and you will be prompted to restart it to run with the new, properly encrypted file.\n-\n-If you had a previously encrypted wallet.dat that might have been copied or stolen (for example, you backed it up to a public\n-location) you should send all of your bitcoins to yourself using a new bitcoin address and stop using any previously generated addresses.\n-\n-Wallets encrypted with this version of Bitcoin are written properly.\n-\n-Technical note: the encrypted wallet's 'keypool' will be regenerated the first time you request a new bitcoin address; to be certain that the\n-new private keys are properly backed up you should:\n-\n-1. Run Bitcoin and let it rewrite the wallet.dat file\n-\n-2. Run it again, then ask it for a new bitcoin address.\n-wxBitcoin: new address visible on main window\n-bitcoind: run the 'walletpassphrase' RPC command to unlock the wallet,  then run the 'getnewaddress' RPC command.\n-\n-3. If your encrypted wallet.dat may have been copied or stolen, send all of your bitcoins to the new bitcoin address.\n-\n-4. Shut down Bitcoin, then backup the wallet.dat file.\n-IMPORTANT: be sure to request a new bitcoin address before backing up, so that the 'keypool' is regenerated and backed up.\n-\n-\"Security in depth\" is always a good idea, so choosing a secure location for the backup and/or encrypting the backup before uploading it is recommended. And as in previous releases, if your machine is infected by malware there are several ways an attacker might steal your bitcoins.\n-\n-Thanks to Alan Reiner (etotheipi) for finding and reporting this bug."
      },
      {
        "sha": "6c5682ea4e2811a2bab3691d1fff5987538d2aff",
        "filename": "doc/release-notes/release-notes-0.4.2.md",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.4.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.4.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.4.2.md?ref=ddeacfcff563b602b8833287a34dfbee340e5bec",
        "patch": "@@ -1 +0,0 @@\n-Never released or release notes were lost."
      },
      {
        "sha": "fea1ae75b5e829cf38271ad529262d806d314303",
        "filename": "doc/release-notes/release-notes-0.4.3.md",
        "status": "removed",
        "additions": 0,
        "deletions": 21,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.4.3.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.4.3.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.4.3.md?ref=ddeacfcff563b602b8833287a34dfbee340e5bec",
        "patch": "@@ -1,21 +0,0 @@\n-bitcoind version 0.4.3 is now available for download at:\n-http://luke.dashjr.org/programs/bitcoin/files/bitcoind-0.4.3/ (until Gavin uploads to SourceForge)\n-\n-This is a bugfix-only release based on 0.4.0.\n-\n-Please note that the wxBitcoin GUI client is no longer maintained nor supported. If someone would like to step up to maintain this, they should contact Luke-Jr.\n-\n-Please report bugs for the daemon only using the issue tracker at github:\n-https://github.com/bitcoin/bitcoin/issues\n-\n-Stable source code is hosted at Gitorious:\n-http://gitorious.org/bitcoin/bitcoind-stable/archive-tarball/v0.4.3#.tar.gz\n-\n-BUG FIXES\n-\n-Cease locking memory used by non-sensitive information (this caused a huge performance hit on some platforms, especially noticable during initial blockchain download).\n-Fixed some address-handling deadlocks (client freezes).\n-No longer accept inbound connections over the internet when Bitcoin is being used with Tor (identity leak).\n-Use the correct base transaction fee of 0.0005 BTC for accepting transactions into mined blocks (since 0.4.0, it was incorrectly accepting 0.0001 BTC which was only meant to be relayed).\n-Add new DNS seeds (maintained by Pieter Wuille and Luke Dashjr).\n-"
      },
      {
        "sha": "f435ba71604df49ca4cc6dbcd67fcd512498f186",
        "filename": "doc/release-notes/release-notes-0.4.4.md",
        "status": "removed",
        "additions": 0,
        "deletions": 30,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.4.4.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.4.4.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.4.4.md?ref=ddeacfcff563b602b8833287a34dfbee340e5bec",
        "patch": "@@ -1,30 +0,0 @@\n-Bitcoin version 0.4.4 is now available for download at:\n-http://luke.dashjr.org/programs/bitcoin/files/bitcoind-0.4.4/\n-\n-This is a bugfix-only release based on 0.4.0.\n-\n-Please note that the wxBitcoin GUI client is no longer maintained nor supported. If someone would like to step up to maintain this, they should contact Luke-Jr.\n-\n-Please report bugs for the daemon only using the issue tracker at github:\n-https://github.com/bitcoin/bitcoin/issues\n-\n-Stable source code is hosted at Gitorious:\n-http://gitorious.org/bitcoin/bitcoind-stable/archive-tarball/v0.4.4#.tar.gz\n-\n-BUG FIXES\n-\n-Limit the number of orphan transactions stored in memory, to prevent a potential denial-of-service attack by flooding orphan transactions. Also never store invalid transactions at all.\n-Fix possible buffer overflow on systems with very long application data paths. This is not exploitable.\n-Resolved multiple bugs preventing long-term unlocking of encrypted wallets (issue #922).\n-Only send local IP in \"version\" messages if it is globally routable (ie, not private), and try to get such an IP from UPnP if applicable.\n-Reannounce UPnP port forwards every 20 minutes, to workaround routers expiring old entries, and allow the -upnp option to override any stored setting.\n-Various memory leaks and potential null pointer deferences have been\n-fixed.\n-Several shutdown issues have been fixed.\n-Check that keys stored in the wallet are valid at startup, and if not,\n-report corruption.\n-Various build fixes.\n-If no password is specified to bitcoind, recommend a secure password.\n-Update hard-coded fallback seed nodes, choosing recent ones with long uptime and versions at least 0.4.0.\n-Add checkpoint at block 168,000.\n-"
      },
      {
        "sha": "6c5682ea4e2811a2bab3691d1fff5987538d2aff",
        "filename": "doc/release-notes/release-notes-0.4.5.md",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.4.5.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.4.5.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.4.5.md?ref=ddeacfcff563b602b8833287a34dfbee340e5bec",
        "patch": "@@ -1 +0,0 @@\n-Never released or release notes were lost."
      },
      {
        "sha": "07c5e4b6948a5da619c6e82277d9aa4e0a629109",
        "filename": "doc/release-notes/release-notes-0.4.6.md",
        "status": "removed",
        "additions": 0,
        "deletions": 37,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.4.6.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.4.6.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.4.6.md?ref=ddeacfcff563b602b8833287a34dfbee340e5bec",
        "patch": "@@ -1,37 +0,0 @@\n-bitcoind version 0.4.6 is now available for download at:\n-Windows: installer | zip (sig)\n-Source: tar.gz\n-bitcoind and Bitcoin-Qt version 0.6.0.7 are also tagged in git, but it is recommended to upgrade to 0.6.1.\n-\n-These are bugfix-only releases.\n-\n-Please report bugs by replying to this forum thread. Note that the 0.4.x wxBitcoin GUI client is no longer maintained nor supported. If someone would like to step up to maintain this, they should contact Luke-Jr.\n-\n-BUG FIXES\n-\n-Version 0.6.0 allowed importing invalid \"private keys\", which would be unspendable; 0.6.0.7 will now verify the private key is valid, and refuse to import an invalid one\n-Verify status of encrypt/decrypt calls to detect failed padding\n-Check blocks for duplicate transactions earlier. Fixes #1167\n-Upgrade Windows builds to OpenSSL 1.0.1b\n-Set label when selecting an address that already has a label. Fixes #1080 (Bitcoin-Qt)\n-JSON-RPC listtransactions's from/count handling is now fixed\n-Optimize and fix multithreaded access, when checking whether we already know about transactions\n-Fix potential networking deadlock\n-Proper support for Growl 1.3 notifications\n-Display an error, rather than crashing, if encoding a QR Code failed (0.6.0.7)\n-Don't erroneously set \"Display addresses\" for users who haven't explicitly enabled it (Bitcoin-Qt)\n-Some non-ASCII input in JSON-RPC expecting hexadecimal may have been misinterpreted rather than rejected\n-Missing error condition checking added\n-Do not show green tick unless all known blocks are downloaded. Fixes #921 (Bitcoin-Qt)\n-Increase time ago of last block for \"up to date\" status from 30 to 90 minutes\n-Show a message box when runaway exception happens (Bitcoin-Qt)\n-Use a messagebox to display the error when -server is provided without providing a rpc password\n-Show error message instead of exception crash when unable to bind RPC port (Bitcoin-Qt)\n-Correct sign message bitcoin address tooltip. Fixes #1050 (Bitcoin-Qt)\n-Removed \"(no label)\" from QR Code dialog titlebar if we have no label (0.6.0.7)\n-Removed an ugly line break in tooltip for mature transactions (0.6.0.7)\n-Add missing tooltip and key shortcut in settings dialog (part of #1088) (Bitcoin-Qt)\n-Work around issue in boost::program_options that prevents from compiling in clang\n-Fixed bugs occurring only on platforms with unsigned characters (such as ARM).\n-Rename make_windows_icon.py to .sh as it is a shell script. Fixes #1099 (Bitcoin-Qt)\n-Various trivial internal corrections to types used for counting/size loops and warnings"
      },
      {
        "sha": "baa409b5f2fc97464ffb2087a12bbd77e67f6e01",
        "filename": "doc/release-notes/release-notes-0.5.0.md",
        "status": "removed",
        "additions": 0,
        "deletions": 70,
        "changes": 70,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.5.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.5.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.5.0.md?ref=ddeacfcff563b602b8833287a34dfbee340e5bec",
        "patch": "@@ -1,70 +0,0 @@\n-Bitcoin version 0.5.0 is now available for download at:\n-http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.5.0/\n-\n-The major change for this release is a completely new graphical interface that uses the Qt user interface toolkit.\n-\n-This release include German, Spanish, Spanish-Castilian, Norwegian and Dutch translations. More translations are welcome; join the project at Transifex if you can help:\n-https://www.transifex.net/projects/p/bitcoin/\n-\n-Please report bugs using the issue tracker at github:\n-https://github.com/bitcoin/bitcoin/issues\n-\n-For Ubuntu users, there is a new ppa maintained by Matt Corallo which you can add to your system so that it will automatically keep bitcoin up-to-date.  Just type \"sudo apt-add-repository ppa:bitcoin/bitcoin\" in your terminal, then install the bitcoin-qt package.\n-\n-MAJOR BUG FIX  (CVE-2011-4447)\n-\n-The wallet encryption feature introduced in Bitcoin version 0.4.0 did not sufficiently secure the private keys. An attacker who\n-managed to get a copy of your encrypted wallet.dat file might be able to recover some or all of the unencrypted keys and steal the\n-associated coins.\n-\n-If you have a previously encrypted wallet.dat, the first time you run bitcoin-qt or bitcoind the wallet will be rewritten, Bitcoin will\n-shut down, and you will be prompted to restart it to run with the new, properly encrypted file.\n-\n-If you had a previously encrypted wallet.dat that might have been copied or stolen (for example, you backed it up to a public\n-location) you should send all of your bitcoins to yourself using a new bitcoin address and stop using any previously generated addresses.\n-\n-Wallets encrypted with this version of Bitcoin are written properly.\n-\n-Technical note: the encrypted wallet's 'keypool' will be regenerated the first time you request a new bitcoin address; to be certain that the\n-new private keys are properly backed up you should:\n-\n-1. Run Bitcoin and let it rewrite the wallet.dat file\n-\n-2. Run it again, then ask it for a new bitcoin address.\n-Bitcoin-Qt: Address Book, then New Address...\n-bitcoind: run the 'walletpassphrase' RPC command to unlock the wallet,  then run the 'getnewaddress' RPC command.\n-\n-3. If your encrypted wallet.dat may have been copied or stolen, send  all of your bitcoins to the new bitcoin address.\n-\n-4. Shut down Bitcoin, then backup the wallet.dat file.\n-IMPORTANT: be sure to request a new bitcoin address before backing up, so that the 'keypool' is regenerated and backed up.\n-\n-\"Security in depth\" is always a good idea, so choosing a secure location for the backup and/or encrypting the backup before uploading it is recommended. And as in previous releases, if your machine is infected by malware there are several ways an attacker might steal your bitcoins.\n-\n-Thanks to Alan Reiner (etotheipi) for finding and reporting this bug.\n-\n-MAJOR GUI CHANGES\n-\n-\"Splash\" graphics at startup that show address/wallet/blockchain loading progress.\n-\n-\"Synchronizing with network\" progress bar to show block-chain download progress.\n-\n-Icons at the bottom of the window that show how well connected you are to the network, with tooltips to display details.\n-\n-Drag and drop support for bitcoin: URIs on web pages.\n-\n-Export transactions as a .csv file.\n-\n-Many other GUI improvements, large and small.\n-\n-RPC CHANGES\n-\n-getmemorypool : new RPC command, provides everything needed to construct a block with a custom generation transaction and submit a solution\n-\n-listsinceblock : new RPC command, list transactions since given block\n-\n-signmessage/verifymessage : new RPC commands to sign a message with one of your private keys or verify that a message signed by the private key associated with a bitcoin address.\n-\n-GENERAL CHANGES\n-\n-Faster initial block download."
      },
      {
        "sha": "d56bff6d956bc65b55a13da46d3525dc4cefd26f",
        "filename": "doc/release-notes/release-notes-0.5.1.md",
        "status": "removed",
        "additions": 0,
        "deletions": 43,
        "changes": 43,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.5.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.5.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.5.1.md?ref=ddeacfcff563b602b8833287a34dfbee340e5bec",
        "patch": "@@ -1,43 +0,0 @@\n-Bitcoin version 0.5.1 is now available for download at:\n-http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.5.1/\n-\n-This is a bugfix-only release.\n-\n-This release includes 13 translations, including 5 new translations:\n-Italian, Hungarian, Ukranian, Portuguese (Brazilian) and Simplified Chinese.\n-More translations are welcome; join the project at Transifex if you can help:\n-https://www.transifex.net/projects/p/bitcoin/\n-\n-Please report bugs using the issue tracker at github:\n-https://github.com/bitcoin/bitcoin/issues\n-\n-Project source code is hosted at github; we are no longer\n-distributing .tar.gz files here, you can get them\n-directly from github:\n-https://github.com/bitcoin/bitcoin/tarball/v0.5.1  # .tar.gz\n-https://github.com/bitcoin/bitcoin/zipball/v0.5.1  # .zip\n-\n-For Ubuntu users, there is a new ppa maintained by Matt Corallo which\n-you can add to your system so that it will automatically keep\n-bitcoin up-to-date.  Just type\n-sudo apt-add-repository ppa:bitcoin/bitcoin\n-in your terminal, then install the bitcoin-qt package.\n-\n-\n-BUG FIXES\n-\n-Re-enable SSL support for the JSON-RPC interface (it was unintentionally\n-disabled for the 0.5.0 release binaries).\n-\n-The code that finds peers via \"dns seeds\" no longer stops bitcoin startup\n-if one of the dns seed machines is down.\n-\n-Tooltips on the transaction list view were rendering incorrectly (as black boxes\n-or with a transparent background).\n-\n-Prevent a denial-of-service attack involving flooding a bitcoin node with\n-orphan blocks.\n-\n-The wallet passphrase dialog now warns you if the caps lock key was pressed.\n-\n-Improved searching in addresses and labels in bitcoin-qt."
      },
      {
        "sha": "f79816668d8ccd9e379a8e98713e298d86c7079d",
        "filename": "doc/release-notes/release-notes-0.5.2.md",
        "status": "removed",
        "additions": 0,
        "deletions": 22,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.5.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.5.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.5.2.md?ref=ddeacfcff563b602b8833287a34dfbee340e5bec",
        "patch": "@@ -1,22 +0,0 @@\n-Bitcoin version 0.5.2 is now available for download at:\n-http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.5.2/\n-\n-This is a bugfix-only release based on 0.5.1.\n-\n-Please report bugs using the issue tracker at github:\n-https://github.com/bitcoin/bitcoin/issues\n-\n-Stable source code is hosted at Gitorious:\n-http://gitorious.org/bitcoin/bitcoind-stable/archive-tarball/v0.5.2#.tar.gz\n-\n-BUG FIXES\n-\n-Check all transactions in blocks after the last checkpoint (0.5.0 and 0.5.1 skipped checking ECDSA signatures during initial blockchain download).\n-Cease locking memory used by non-sensitive information (this caused a huge performance hit on some platforms, especially noticable during initial blockchain download; this was\n-not a security vulnerability).\n-Fixed some address-handling deadlocks (client freezes).\n-No longer accept inbound connections over the internet when Bitcoin is being used with Tor (identity leak).\n-Re-enable SSL support for the JSON-RPC interface (it was unintentionally disabled for the 0.5.0 and 0.5.1 release Linux binaries).\n-Use the correct base transaction fee of 0.0005 BTC for accepting transactions into mined blocks (since 0.4.0, it was incorrectly accepting 0.0001 BTC which was only meant to be relayed).\n-Don't show \"IP\" for transactions which are not necessarily IP transactions.\n-Add new DNS seeds (maintained by Pieter Wuille and Luke Dashjr)."
      },
      {
        "sha": "7c84c53325c8f638b309771c3c6df1dfa79743d1",
        "filename": "doc/release-notes/release-notes-0.5.3.md",
        "status": "removed",
        "additions": 0,
        "deletions": 42,
        "changes": 42,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.5.3.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.5.3.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.5.3.md?ref=ddeacfcff563b602b8833287a34dfbee340e5bec",
        "patch": "@@ -1,42 +0,0 @@\n-Bitcoin version 0.5.3 is now available for download at:\n-http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.5.3/\n-\n-This is a bugfix-only release based on 0.5.1.\n-It also includes a few protocol updates.\n-\n-Please report bugs using the issue tracker at github:\n-https://github.com/bitcoin/bitcoin/issues\n-\n-Stable source code is hosted at Gitorious:\n-http://gitorious.org/bitcoin/bitcoind-stable/archive-tarball/v0.5.3#.tar.gz\n-\n-PROTOCOL UPDATES\n-\n-BIP 30: Introduce a new network rule: \"a block is not valid if it contains a transaction whose hash already exists in the block chain, unless all that transaction's outputs were already spent before said block\" beginning on March 15, 2012, 00:00 UTC.\n-On testnet, allow mining of min-difficulty blocks if 20 minutes have gone by without mining a regular-difficulty block. This is to make testing Bitcoin easier, and will not affect normal mode.\n-\n-BUG FIXES\n-\n-Limit the number of orphan transactions stored in memory, to prevent a potential denial-of-service attack by flooding orphan transactions. Also never store invalid transactions at all.\n-Fix possible buffer overflow on systems with very long application data paths. This is not exploitable.\n-Resolved multiple bugs preventing long-term unlocking of encrypted wallets\n-(issue #922).\n-Only send local IP in \"version\" messages if it is globally routable (ie, not private), and try to get such an IP from UPnP if applicable.\n-Reannounce UPnP port forwards every 20 minutes, to workaround routers expiring old entries, and allow the -upnp option to override any stored setting.\n-Skip splash screen when -min is used, and fix Minimize to Tray function.\n-Do not blank \"label\" in Bitcoin-Qt \"Send\" tab, if the user has already entered something.\n-Correct various labels and messages.\n-Various memory leaks and potential null pointer deferences have been fixed.\n-Handle invalid Bitcoin URIs using \"bitcoin://\" instead of \"bitcoin:\".\n-Several shutdown issues have been fixed.\n-Revert to \"global progress indication\", as starting from zero every time was considered too confusing for many users.\n-Check that keys stored in the wallet are valid at startup, and if not, report corruption.\n-Enable accessible widgets on Windows, so that people with screen readers such as NVDA can make sense of it.\n-Various build fixes.\n-If no password is specified to bitcoind, recommend a secure password.\n-Automatically focus and scroll to new \"Send coins\" entries in Bitcoin-Qt.\n-Show a message box for --help on Windows, for Bitcoin-Qt.\n-Add missing \"About Qt\" menu option to show built-in Qt About dialog.\n-Don't show \"-daemon\" as an option for Bitcoin-Qt, since it isn't available.\n-Update hard-coded fallback seed nodes, choosing recent ones with long uptime and versions at least 0.4.0.\n-Add checkpoint at block 168,000."
      },
      {
        "sha": "fcde3ac4e3a1b1e09fa6c3a72cf17c923cfa20b3",
        "filename": "doc/release-notes/release-notes-0.5.4.md",
        "status": "removed",
        "additions": 0,
        "deletions": 39,
        "changes": 39,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.5.4.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.5.4.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.5.4.md?ref=ddeacfcff563b602b8833287a34dfbee340e5bec",
        "patch": "@@ -1,39 +0,0 @@\n-Bitcoin version 0.5.4 is now available for download at:\n-http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.5.4/\n-NOTE: 0.5.4rc3 is being renamed to 0.5.4 final with no changes.\n-\n-This is a bugfix-only release in the 0.5.x series, plus a few protocol updates.\n-\n-Please report bugs using the issue tracker at github:\n-https://github.com/bitcoin/bitcoin/issues\n-\n-Stable source code is hosted at Gitorious:\n-http://gitorious.org/bitcoin/bitcoind-stable/archive-tarball/v0.5.4#.tar.gz\n-\n-PROTOCOL UPDATES\n-\n-BIP 16: Special-case \"pay to script hash\" logic to enable minimal validation of new transactions.\n-Support for validating message signatures produced with compressed public keys.\n-\n-BUG FIXES\n-\n-Build with thread-safe MingW libraries for Windows, fixing a dangerous memory corruption scenario when exceptions are thrown.\n-Fix broken testnet mining.\n-Stop excess inventory relay during initial block download.\n-When disconnecting a node, clear the received buffer so that we do not process any already received messages.\n-Yet another attempt at implementing \"minimize to tray\" that works on all operating systems.\n-Fix Bitcoin-Qt notifications under Growl 1.3.\n-Increase required age of Bitcoin-Qt's \"not up to date\" status from 30 to 90 minutes.\n-Implemented missing verifications that led to crash on entering some wrong passphrases for encrypted wallets.\n-Fix default filename suffixes in GNOME save dialog.\n-Make the \"Send coins\" tab use the configured unit type, even on the first attempt.\n-Print detailed wallet loading errors to debug.log when it is corrupt.\n-Allocate exactly the amount of space needed for signing transactions, instead of a fixed 10k buffer.\n-Workaround for improbable memory access violation.\n-Check wallet's minimum version before trying to load it.\n-Remove wxBitcoin properly when installing Bitcoin-Qt over it. (Windows)\n-Detail reorganization information better in debug log.\n-Use a messagebox to display the error when -server is provided without configuring a RPC password.\n-Testing suite build now honours provided CXXFLAGS.\n-Removed an extraneous line-break in mature transaction tooltips.\n-Fix some grammatical errors in translation process documentation."
      },
      {
        "sha": "75ebc3e6b62269aff03d48828913807eabca071a",
        "filename": "doc/release-notes/release-notes-0.5.5.md",
        "status": "removed",
        "additions": 0,
        "deletions": 37,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.5.5.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.5.5.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.5.5.md?ref=ddeacfcff563b602b8833287a34dfbee340e5bec",
        "patch": "@@ -1,37 +0,0 @@\n-bitcoind and Bitcoin-Qt version 0.5.5 are now available for download at:\n-Windows: installer | zip (sig)\n-Source: tar.gz\n-bitcoind and Bitcoin-Qt version 0.6.0.7 are also tagged in git, but it is recommended to upgrade to 0.6.1.\n-\n-These are bugfix-only releases.\n-\n-Please report bugs by replying to this forum thread. Note that the 0.4.x wxBitcoin GUI client is no longer maintained nor supported. If someone would like to step up to maintain this, they should contact Luke-Jr.\n-\n-BUG FIXES\n-\n-Version 0.6.0 allowed importing invalid \"private keys\", which would be unspendable; 0.6.0.7 will now verify the private key is valid, and refuse to import an invalid one\n-Verify status of encrypt/decrypt calls to detect failed padding\n-Check blocks for duplicate transactions earlier. Fixes #1167\n-Upgrade Windows builds to OpenSSL 1.0.1b\n-Set label when selecting an address that already has a label. Fixes #1080 (Bitcoin-Qt)\n-JSON-RPC listtransactions's from/count handling is now fixed\n-Optimize and fix multithreaded access, when checking whether we already know about transactions\n-Fix potential networking deadlock\n-Proper support for Growl 1.3 notifications\n-Display an error, rather than crashing, if encoding a QR Code failed (0.6.0.7)\n-Don't erroneously set \"Display addresses\" for users who haven't explicitly enabled it (Bitcoin-Qt)\n-Some non-ASCII input in JSON-RPC expecting hexadecimal may have been misinterpreted rather than rejected\n-Missing error condition checking added\n-Do not show green tick unless all known blocks are downloaded. Fixes #921 (Bitcoin-Qt)\n-Increase time ago of last block for \"up to date\" status from 30 to 90 minutes\n-Show a message box when runaway exception happens (Bitcoin-Qt)\n-Use a messagebox to display the error when -server is provided without providing a rpc password\n-Show error message instead of exception crash when unable to bind RPC port (Bitcoin-Qt)\n-Correct sign message bitcoin address tooltip. Fixes #1050 (Bitcoin-Qt)\n-Removed \"(no label)\" from QR Code dialog titlebar if we have no label (0.6.0.7)\n-Removed an ugly line break in tooltip for mature transactions (0.6.0.7)\n-Add missing tooltip and key shortcut in settings dialog (part of #1088) (Bitcoin-Qt)\n-Work around issue in boost::program_options that prevents from compiling in clang\n-Fixed bugs occurring only on platforms with unsigned characters (such as ARM).\n-Rename make_windows_icon.py to .sh as it is a shell script. Fixes #1099 (Bitcoin-Qt)\n-Various trivial internal corrections to types used for counting/size loops and warnings"
      },
      {
        "sha": "1963a362591566d6aadd24b8634dbfe589e68eb9",
        "filename": "doc/release-notes/release-notes-0.6.0.md",
        "status": "removed",
        "additions": 0,
        "deletions": 138,
        "changes": 138,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.6.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.6.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.6.0.md?ref=ddeacfcff563b602b8833287a34dfbee340e5bec",
        "patch": "@@ -1,138 +0,0 @@\n-Bitcoin version 0.6.0 is now available for download at:\n-http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.6.0/test/\n-\n-This release includes more than 20 language localizations.\n-More translations are welcome; join the\n-project at Transifex to help:\n-https://www.transifex.net/projects/p/bitcoin/\n-\n-Please report bugs using the issue tracker at github:\n-https://github.com/bitcoin/bitcoin/issues\n-\n-Project source code is hosted at github; we are no longer\n-distributing .tar.gz files here, you can get them\n-directly from github:\n-https://github.com/bitcoin/bitcoin/tarball/v0.6.0  # .tar.gz\n-https://github.com/bitcoin/bitcoin/zipball/v0.6.0  # .zip\n-\n-For Ubuntu users, there is a ppa maintained by Matt Corallo which\n-you can add to your system so that it will automatically keep\n-bitcoin up-to-date.  Just type\n-sudo apt-add-repository ppa:bitcoin/bitcoin\n-in your terminal, then install the bitcoin-qt package.\n-\n-\n-KNOWN ISSUES\n-\n-Shutting down while synchronizing with the network\n-(downloading the blockchain) can take more than a minute,\n-because database writes are queued to speed up download\n-time.\n-\n-\n-NEW FEATURES SINCE BITCOIN VERSION 0.5\n-\n-Initial network synchronization should be much faster\n-(one or two hours on a typical machine instead of ten or more\n-hours).\n-\n-Backup Wallet menu option.\n-\n-Bitcoin-Qt can display and save QR codes for sending\n-and receiving addresses.\n-\n-New context menu on addresses to copy/edit/delete them.\n-\n-New Sign Message dialog that allows you to prove that you\n-own a bitcoin address by creating a digital\n-signature.\n-\n-New wallets created with this version will\n-use 33-byte 'compressed' public keys instead of\n-65-byte public keys, resulting in smaller\n-transactions and less traffic on the bitcoin\n-network. The shorter keys are already supported\n-by the network but wallet.dat files containing\n-short keys are not compatible with earlier\n-versions of Bitcoin-Qt/bitcoind.\n-\n-New command-line argument -blocknotify=<command>\n-that will spawn a shell process to run <command> \n-when a new block is accepted.\n-\n-New command-line argument -splash=0 to disable\n-Bitcoin-Qt's initial splash screen\n-\n-validateaddress JSON-RPC api command output includes\n-two new fields for addresses in the wallet:\n-pubkey : hexadecimal public key\n-iscompressed : true if pubkey is a short 33-byte key\n-\n-New JSON-RPC api commands for dumping/importing\n-private keys from the wallet (dumprivkey, importprivkey).\n-\n-New JSON-RPC api command for getting information about\n-blocks (getblock, getblockhash).\n-\n-New JSON-RPC api command (getmininginfo) for getting\n-extra information related to mining. The getinfo\n-JSON-RPC command no longer includes mining-related\n-information (generate/genproclimit/hashespersec).\n-\n-\n-\n-NOTABLE CHANGES\n-\n-BIP30 implemented (security fix for an attack involving\n-duplicate \"coinbase transactions\").\n-\n-The -nolisten, -noupnp and -nodnsseed command-line\n-options were renamed to -listen, -upnp and -dnsseed,\n-with a default value of 1. The old names are still\n-supported for compatibility (so specifying -nolisten\n-is automatically interpreted as -listen=0; every\n-boolean argument can now be specified as either\n--foo or -nofoo).\n-\n-The -noirc command-line options was renamed to\n--irc, with a default value of 0. Run -irc=1 to\n-get the old behavior.\n-\n-Three fill-up-available-memory denial-of-service\n-attacks were fixed.\n-\n-\n-NOT YET IMPLEMENTED FEATURES\n-\n-Support for clicking on bitcoin: URIs and\n-opening/launching Bitcoin-Qt is available only on Linux,\n-and only if you configure your desktop to launch\n-Bitcoin-Qt. All platforms support dragging and dropping\n-bitcoin: URIs onto the Bitcoin-Qt window to start\n-payment.\n-\n-\n-PRELIMINARY SUPPORT FOR MULTISIGNATURE TRANSACTIONS\n-\n-This release has preliminary support for multisignature\n-transactions-- transactions that require authorization\n-from more than one person or device before they\n-will be accepted by the bitcoin network.\n-\n-Prior to this release, multisignature transactions\n-were considered 'non-standard' and were ignored;\n-with this release multisignature transactions are\n-considered standard and will start to be relayed\n-and accepted into blocks.\n-\n-It is expected that future releases of Bitcoin-Qt\n-will support the creation of multisignature transactions,\n-once enough of the network has upgraded so relaying\n-and validating them is robust.\n-\n-For this release, creation and testing of multisignature\n-transactions is limited to the bitcoin test network using\n-the \"addmultisigaddress\" JSON-RPC api call.\n-\n-Short multisignature address support is included in this\n-release, as specified in BIP 13 and BIP 16."
      },
      {
        "sha": "ef7966ecd6809ec3a0805bfca30b9a52ab8e33c7",
        "filename": "doc/release-notes/release-notes-0.6.1.md",
        "status": "removed",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.6.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.6.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.6.1.md?ref=ddeacfcff563b602b8833287a34dfbee340e5bec",
        "patch": "@@ -1,2 +0,0 @@\n-Never released\n-"
      },
      {
        "sha": "bb85fb23a0414b84a75bec16cf8f26b06f8d3777",
        "filename": "doc/release-notes/release-notes-0.6.2.md",
        "status": "removed",
        "additions": 0,
        "deletions": 50,
        "changes": 50,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.6.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.6.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.6.2.md?ref=ddeacfcff563b602b8833287a34dfbee340e5bec",
        "patch": "@@ -1,50 +0,0 @@\n-Bitcoin version 0.6.2 is now available for download at:\n-http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.6.2/\n-\n-This is a bug-fix and code-cleanup release, with no major new features.\n-\n-Please report bugs using the github issue tracker at:\n-https://github.com/bitcoin/bitcoin/issues\n-\n-\n-NOTABLE CHANGES\n-\n-Much faster shutdowns. However, the blkindex.dat file is no longer\n-portable to different data directories by default. If you need a\n-portable blkindex.dat file then run with the new -detachdb=1 option\n-or the \"Detach databases at shutdown\" GUI preference.\n-\n-Fixed https://github.com/bitcoin/bitcoin/issues/1065, a bug that\n-could cause long-running nodes to crash.\n-\n-Mac and Windows binaries are compiled against OpenSSL 1.0.1b (Linux\n-binaries are dynamically linked to the version of OpenSSL on the system).\n-\n-\n-CHANGE SUMMARY\n-\n-Use 'git shortlog --no-merges v0.6.0..' for a summary of this release.\n-\n-Source codebase changes:\n-- Many source code cleanups and warnings fixes.  Close to building with -Wall\n-- Locking overhaul, and several minor locking fixes\n-- Several source code portability fixes, e.g. FreeBSD\n-\n-JSON-RPC interface changes:\n-- addmultisigaddress enabled for mainnet (previously only enabled for testnet)\n-\n-Network protocol changes:\n-- protocol version 60001\n-- added nonce value to \"ping\" message (BIP 31)\n-- added new \"pong\" message (BIP 31)\n-\n-Backend storage changes:\n-- Less redundant database flushing, especially during initial block download\n-- Shutdown improvements (see above)\n-\n-Qt user interface:\n-- minor URI handling improvements\n-- progressbar improvements\n-- error handling improvements (show message box rather than console exception,\n-etc.)\n-- by popular request, make 4th bar of connection icon green"
      },
      {
        "sha": "c27f607b5c58e3c2f16bb49bbcf7d8122e40af85",
        "filename": "doc/release-notes/release-notes-0.6.3.md",
        "status": "removed",
        "additions": 0,
        "deletions": 29,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.6.3.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.6.3.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.6.3.md?ref=ddeacfcff563b602b8833287a34dfbee340e5bec",
        "patch": "@@ -1,29 +0,0 @@\n-Bitcoin version 0.6.3 is now available for download at:\n-  http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.6.3/\n-\n-This is a bug-fix release, with no new features.\n-\n-Please report bugs using the issue tracker at github:\n-  https://github.com/bitcoin/bitcoin/issues\n-\n-CHANGE SUMMARY\n-\n-Fixed a serious denial-of-service attack that could cause the\n-bitcoin process to become unresponsive. Thanks to Sergio Lerner\n-for finding and responsibly reporting the problem. (CVE-2012-3789)\n-\n-Optimized the process of checking transaction signatures, to\n-speed up processing of new block messages and make propagating\n-blocks across the network faster.\n-\n-Fixed an obscure bug that could cause the bitcoin process to get\n-stuck on an invalid block-chain, if the invalid chain was\n-hundreds of blocks long.\n-\n-Bitcoin-Qt no longer automatically selects the first address\n-in the address book (Issue #1384).\n-\n-Fixed minimize-to-dock behavior of Bitcoin-Qt on the Mac.\n-\n-Added a block checkpoint at block 185,333 to speed up initial\n-blockchain download."
      },
      {
        "sha": "d33a58f99ffea8145816480f24a7bada55cdd574",
        "filename": "doc/release-notes/release-notes-0.7.0.md",
        "status": "removed",
        "additions": 0,
        "deletions": 169,
        "changes": 169,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.7.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.7.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.7.0.md?ref=ddeacfcff563b602b8833287a34dfbee340e5bec",
        "patch": "@@ -1,169 +0,0 @@\n-Bitcoin version 0.7.0 is now available for download at:\n-  http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.7.0/\n-\n-We recommend that everybody running prior versions of bitcoind/Bitcoin-Qt\n-upgrade to this release, except for users running Mac OSX 10.5.\n-\n-Please report bugs using the issue tracker at github:\n-  https://github.com/bitcoin/bitcoin/issues\n-\n-Project source code is hosted at github; you can get\n-source-only tarballs/zipballs directly from there:\n-  https://github.com/bitcoin/bitcoin/tarball/v0.7.0  # .tar.gz\n-  https://github.com/bitcoin/bitcoin/zipball/v0.7.0  # .zip\n-\n-Ubuntu Linux users can use the \"Personal Package Archive\" (PPA)\n-maintained by Matt Corallo to automatically keep \n-bitcoin up-to-date.  Just type\n-  sudo apt-add-repository ppa:bitcoin/bitcoin\n-  sudo apt-get update\n-in your terminal, then install the bitcoin-qt package:\n-  sudo apt-get install bitcoin-qt\n-\n-\n-How to Upgrade\n-\n-If you are running an older version, shut it down. Wait\n-until it has completely shut down (which might take a few minutes for older\n-versions), then run the installer (on Windows) or just copy over\n-Code:\n-/Applications/Bitcoin-Qt\n-(on Mac) or\n-Code:\n-bitcoind/bitcoin-qt\n-(on Linux).\n-\n-If you were running on Linux with a version that might have been compiled\n-with a different version of Berkeley DB (for example, if you were using the\n-PPA and are switching to the binary release), then run the old version again\n-with the -detachdb argument and shut it down; if you do not, then the new\n-version will not be able to read the database files and will exit with an error.\n-\n-Incompatible Changes\n-\n-* Replaced the 'getmemorypool' RPC command with 'getblocktemplate/submitblock'\n-  and 'getrawmempool' commands.\n-* Remove deprecated RPC 'getblocknumber'\n-\n-Bitcoin Improvement Proposals implemented\n-\n-BIP 22 - 'getblocktemplate', 'submitblock' RPCs\n-BIP 34 - block version 2, height in coinbase\n-BIP 35 - 'mempool' message, extended 'getdata' message behavior\n-\n-\n-Core bitcoin handling and blockchain database\n-\n-* Reduced CPU usage, by eliminating some redundant hash calculations\n-* Cache signature verifications, to eliminate redundant signature checks\n-* Transactions with zero-value outputs are considered non-standard\n-* Mining: when creating new blocks, sort 'paid' area by fee-per-kb\n-* Database: better validation of on-disk stored data\n-* Database: minor optimizations and reliability improvements\n-* -loadblock=FILE will import an external block file\n-* Additional DoS (denial-of-service) prevention measures\n-* New blockchain checkpoint at block 193,000\n-\n-\n-JSON-RPC API\n-\n-* Internal HTTP server is now thread-per-connection, rather than\n-  a single-threaded queue that would stall on network I/O.\n-* Internal HTTP server supports HTTP/1.1, pipelined requests and\n-  connection keep-alive.\n-* Support JSON-RPC 2.0 batches, to encapsulate multiple JSON-RPC requests\n-  within a single HTTP request.\n-* IPv6 support\n-* Added raw transaction API.  See https://gist.github.com/2839617\n-* Added 'getrawmempool', to list contents of TX memory pool\n-* Added 'getpeerinfo', to list data about each connected network peer\n-* Added 'listaddressgroupings' for better coin control\n-* Rework getblock call.\n-* Remove deprecated RPC 'getblocknumber'\n-* Remove superceded RPC 'getmemorypool' (see BIP 22, above)\n-* listtransactions output now displays \"smart\" times for transactions,\n-  and 'blocktime' and 'timereceived' fields were added\n-\n-\n-P2P networking\n-\n-* IPv6 support\n-* Tor hidden service support (see doc/Tor.txt)\n-* Attempts to fix \"stuck blockchain download\" problems\n-* Replace BDB database \"addr.dat\" with internally-managed \"peers.dat\"\n-  file containing peer address data.\n-* Lower default send buffer from 10MB to 1MB\n-* proxy: SOCKS5 by default\n-* Support connecting by hostnames passed to proxy\n-* Add -seednode connections, and use this instead of DNS seeds when proxied\n-* Added -externalip and -discover\n-* Add -onlynet to connect only to a given network (IPv4, IPv6, or Tor)\n-* Separate listening sockets, -bind=<addr>\n-\n-\n-Qt GUI\n-\n-* Add UI RPC console / debug window\n-* Re-Enable URI handling on Windows, add safety checks and tray-notifications\n-* Harmonize the use of ellipsis (\"...\") to be used in menus, but not on buttons\n-* Add 2 labels to the overviewpage that display Wallet and Transaction status (obsolete or current)\n-* Extend the optionsdialog (e.g. language selection) and re-work it to a tabbed UI\n-* Merge sign/verify message into a single window with tabbed UI\n-* Ensure a changed bitcoin unit immediately updates all GUI elements that use units\n-* Update QR Code dialog\n-* Improve error reporting at startup\n-* Fine-grained UI updates for a much smoother UI during block downloads\n-* Remove autocorrection of 0/i in addresses in UI\n-* Reorganize tray icon menu into more logical order\n-* Persistently poll for balance change when number of blocks changed\n-* Much better translations\n-* Override progress bar design on platforms with segmented progress bars to assist with readability\n-* Added 'immature balance' display on the overview page\n-* (Windows only): enable ASLR and DEP for bitcoin-qt.exe\n-* (Windows only): add meta-data to bitcoin-qt.exe (e.g. description)\n-\n-Internal codebase\n-\n-* Additional unit tests\n-* Compile warning fixes\n-\n-\n-Miscellaneous\n-\n-* Reopen debug.log upon SIGHUP\n-* Bash programmable completion for bitcoind(1)\n-* On supported OS's, each thread is given a useful name\n-\n-\n-Thanks to everybody who contributed to this release:\n-\n-Chris Moore\n-Christian von Roques\n-David Joel Schwartz\n-Douglas Huff\n-Fordy\n-Gavin Andresen\n-Giel van Schijndel\n-Gregory Maxwell\n-Jeff Garzik\n-Luke Dashjr\n-Matt Corallo\n-Michael Ford\n-Michael Hendricks\n-Peter Todd\n-Philip Kaufmann\n-Pieter Wuille\n-R E Broadley\n-Ricardo M. Correia\n-Rune K. Svendsen\n-Scott Ellis\n-Stephane Glondu\n-Wladimir J. van der Laan\n-cardpuncher\n-coderrr\n-fanquake\n-grimd34th\n-sje397\n-xanatos\n-\n-Thanks to Sergio Lerner for reporting denial-of-service vulnerabilities fixed in this release."
      },
      {
        "sha": "22e910c09fdf5959931d28bdbabf43fd1aebce81",
        "filename": "doc/release-notes/release-notes-0.7.1.md",
        "status": "removed",
        "additions": 0,
        "deletions": 110,
        "changes": 110,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.7.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.7.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.7.1.md?ref=ddeacfcff563b602b8833287a34dfbee340e5bec",
        "patch": "@@ -1,110 +0,0 @@\n-Bitcoin version 0.7.1 is now available from:\n-  http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.7.1/\n-\n-This is a bug-fix minor release.\n-\n-Please report bugs using the issue tracker at github:\n-  https://github.com/bitcoin/bitcoin/issues\n-\n-Project source code is hosted at github; you can get\n-source-only tarballs/zipballs directly from there:\n-  https://github.com/bitcoin/bitcoin/tarball/v0.7.1  # .tar.gz\n-  https://github.com/bitcoin/bitcoin/zipball/v0.7.1  # .zip\n-\n-Ubuntu Linux users can use the \"Personal Package Archive\" (PPA)\n-maintained by Matt Corallo to automatically keep \n-up-to-date.  Just type:\n-  sudo apt-add-repository ppa:bitcoin/bitcoin\n-  sudo apt-get update\n-in your terminal, then install the bitcoin-qt package:\n-  sudo apt-get install bitcoin-qt\n-\n-KNOWN ISSUES\n-------------\n-\n-Mac OSX 10.5 is no longer supported.\n-\n-How to Upgrade\n---------------\n-\n-If you are running an older version, shut it down. Wait\n-until it has completely shut down (which might take a few minutes for older\n-versions), then run the installer (on Windows) or just copy over\n-/Applications/Bitcoin-Qt (on Mac) or bitcoind/bitcoin-qt (on Linux).\n-\n-If you were running on Linux with a version that might have been compiled\n-with a different version of Berkeley DB (for example, if you were using an\n-Ubuntu PPA version), then run the old version again with the -detachdb\n-argument and shut it down; if you do not, then the new version will not\n-be able to read the database files and will exit with an error.\n-\n-Explanation of -detachdb (and the new \"stop true\" RPC command):\n-The Berkeley DB database library stores data in both \".dat\" and\n-\"log\" files, so the database is always in a consistent state,\n-even in case of power failure or other sudden shutdown. The\n-format of the \".dat\" files is portable between different\n-versions of Berkeley DB, but the \"log\" files are not-- even minor\n-version differences may have incompatible \"log\" files. The\n--detachdb option moves any pending changes from the \"log\" files\n-to the \"blkindex.dat\" file for maximum compatibility, but makes\n-shutdown much slower. Note that the \"wallet.dat\" file is always\n-detached, and versions prior to 0.6.0 detached all databases\n-at shutdown.\n-\n-New features\n-------------\n-\n-* Added a boolean argument to the RPC 'stop' command, if true sets\n-  -detachdb to create standalone database .dat files before shutting down.\n-\n-* -salvagewallet command-line option, which moves any existing wallet.dat\n-  to wallet.{timestamp}.dat and then attempts to salvage public/private\n-  keys and master encryption keys (if the wallet is encrypted) into\n-  a new wallet.dat. This should only be used if your wallet becomes\n-  corrupted, and is not intended to replace regular wallet backups.\n-\n-* Import $DataDir/bootstrap.dat automatically, if it exists.\n-\n-Dependency changes\n-------------------\n-\n-* Qt 4.8.2 for Windows builds\n-\n-* openssl 1.0.1c\n-\n-Bug fixes\n----------\n-\n-* Clicking on a bitcoin: URI on Windows should now launch Bitcoin-Qt properly.\n-\n-* When running -testnet, use RPC port 18332 by default.\n-\n-* Better detection and handling of corrupt wallet.dat and blkindex.dat files.\n-  Previous versions would crash with a DB_RUNRECOVERY exception, this\n-  version detects most problems and tells you how to recover if it\n-  cannot recover itself.\n-\n-* Fixed an uninitialized variable bug that could cause transactions to\n-  be reported out of order.\n-\n-* Fixed a bug that could cause occasional crashes on exit.\n-\n-* Warn the user that they need to create fresh wallet backups after they\n-  encrypt their wallet.\n-\n-----------------------------------------------------\n-Thanks to everybody who contributed to this release:\n-\n-Gavin Andresen\n-Jeff Garzik\n-Luke Dashjr\n-Mark Friedenbach\n-Matt Corallo\n-Philip Kaufmann\n-Pieter Wuille\n-Rune K. Svendsen\n-Virgil Dupras\n-Wladimir J. van der Laan\n-fanquake\n-kjj2\n-xanatos"
      },
      {
        "sha": "40af34962bd9c91478dc2eda9bb853a39bd8d436",
        "filename": "doc/release-notes/release-notes-0.7.2.md",
        "status": "removed",
        "additions": 0,
        "deletions": 68,
        "changes": 68,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.7.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.7.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.7.2.md?ref=ddeacfcff563b602b8833287a34dfbee340e5bec",
        "patch": "@@ -1,68 +0,0 @@\n-Bitcoin version 0.7.2 is now available from:\n-  http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.7.2\n-\n-This is a bug-fix minor release.\n-\n-Please report bugs using the issue tracker at github:\n-  https://github.com/bitcoin/bitcoin/issues\n-\n-How to Upgrade\n---------------\n-\n-If you are running an older version, shut it down. Wait\n-until it has completely shut down (which might take a few minutes for older\n-versions), then run the installer (on Windows) or just copy over\n-/Applications/Bitcoin-Qt (on Mac) or bitcoind/bitcoin-qt (on Linux).\n-\n-If you were running on Linux with a version that might have been compiled\n-with a different version of Berkeley DB (for example, if you were using an\n-Ubuntu PPA version), then run the old version again with the -detachdb\n-argument and shut it down; if you do not, then the new version will not\n-be able to read the database files and will exit with an error.\n-\n-Explanation of -detachdb (and the new \"stop true\" RPC command):\n-The Berkeley DB database library stores data in both \".dat\" and\n-\"log\" files, so the database is always in a consistent state,\n-even in case of power failure or other sudden shutdown. The\n-format of the \".dat\" files is portable between different\n-versions of Berkeley DB, but the \"log\" files are not-- even minor\n-version differences may have incompatible \"log\" files. The\n--detachdb option moves any pending changes from the \"log\" files\n-to the \"blkindex.dat\" file for maximum compatibility, but makes\n-shutdown much slower. Note that the \"wallet.dat\" file is always\n-detached, and versions prior to 0.6.0 detached all databases\n-at shutdown.\n-\n-Bug fixes\n----------\n-\n-* Prevent RPC 'move' from deadlocking. This was caused by trying to lock the\n-  database twice.\n-\n-* Fix use-after-free problems in initialization and shutdown, the latter of\n-  which caused Bitcoin-Qt to crash on Windows when exiting.\n-\n-* Correct library linking so building on Windows natively works.\n-\n-* Avoid a race condition and out-of-bounds read in block creation/mining code.\n-\n-* Improve platform compatibility quirks, including fix for 100% CPU utilization\n-  on FreeBSD 9.\n-\n-* A few minor corrections to error handling, and updated translations.\n-\n-* OSX 10.5 supported again\n-\n-----------------------------------------------------\n-Thanks to everybody who contributed to this release:\n-\n-Alex\n-dansmith\n-Gavin Andresen\n-Gregory Maxwell\n-Jeff Garzik\n-Luke Dashjr\n-Philip Kaufmann\n-Pieter Wuille\n-Wladimir J. van der Laan\n-grimd34th"
      },
      {
        "sha": "4e98a7740fc2522bfa96c0b1d76133ce88e8113a",
        "filename": "doc/release-notes/release-notes-0.8.0.md",
        "status": "removed",
        "additions": 0,
        "deletions": 139,
        "changes": 139,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.8.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.8.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.8.0.md?ref=ddeacfcff563b602b8833287a34dfbee340e5bec",
        "patch": "@@ -1,139 +0,0 @@\n-Bitcoin-Qt version 0.8.0 is now available from:\n-  http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.8.0/\n-\n-This is a major release designed to improve performance and handle the\n-increasing volume of transactions on the network.\n-\n-Please report bugs using the issue tracker at github:\n-  https://github.com/bitcoin/bitcoin/issues\n-\n-How to Upgrade\n---------------\n-\n-If you are running an older version, shut it down. Wait\n-until it has completely shut down (which might take a few minutes for older\n-versions), then run the installer (on Windows) or just copy over\n-/Applications/Bitcoin-Qt (on Mac) or bitcoind/bitcoin-qt (on Linux).\n-\n-The first time you run after the upgrade a re-indexing process will be\n-started that will take anywhere from 30 minutes to several hours,\n-depending on the speed of your machine.\n-\n-Incompatible Changes\n---------------------\n-\n-This release no longer maintains a full index of historical transaction ids\n-by default, so looking up an arbitrary transaction using the getrawtransaction\n-RPC call will not work. If you need that functionality, you must run once\n-with -txindex=1 -reindex=1 to rebuild block-chain indices (see below for more\n-details).\n-\n-Improvements\n-------------\n-\n-Mac and Windows binaries are signed with certificates owned by the Bitcoin\n-Foundation, to be compatible with the new security features in OSX 10.8 and\n-Windows 8.\n-\n-LevelDB, a fast, open-source, non-relational database from Google, is\n-now used to store transaction and block indices.  LevelDB works much better\n-on machines with slow I/O and is faster in general. Berkeley DB is now only\n-used for the wallet.dat file (public and private wallet keys and transactions\n-relevant to you).\n-\n-Pieter Wuille implemented many optimizations to the way transactions are\n-verified, so a running, synchronized node uses less working memory and does\n-much less I/O. He also implemented parallel signature checking, so if you\n-have a multi-CPU machine all CPUs will be used to verify transactions.\n-\n-New Features\n-------------\n-\n-\"Bloom filter\" support in the network protocol for sending only relevant transactions to\n-lightweight clients.\n-\n-contrib/verifysfbinaries is a shell-script to verify that the binary downloads\n-at sourceforge have not been tampered with. If you are able, you can help make\n-everybody's downloads more secure by running this occasionally to check PGP\n-signatures against download file checksums.\n-\n-contrib/spendfrom is a python-language command-line utility that demonstrates\n-how to use the \"raw transactions\" JSON-RPC api to send coins received from particular\n-addresses (also known as \"coin control\").\n-\n-New/changed settings (command-line or bitcoin.conf file)\n---------------------------------------------------------\n-\n-dbcache : controls LevelDB memory usage.\n-\n-par : controls how many threads to use to validate transactions. Defaults to the number\n-of CPUs on your machine, use -par=1 to limit to a single CPU.\n-\n-txindex : maintains an extra index of old, spent transaction ids so they will be found\n-by the getrawtransaction JSON-RPC method.\n-\n-reindex : rebuild block and transaction indices from the downloaded block data.\n-\n-New JSON-RPC API Features\n--------------------------\n-\n-lockunspent / listlockunspent allow locking transaction outputs for a period of time so\n-they will not be spent by other processes that might be accessing the same wallet.\n-\n-addnode / getaddednodeinfo methods, to connect to specific peers without restarting.\n-\n-importprivkey now takes an optional boolean parameter (default true) to control whether\n-or not to rescan the blockchain for transactions after importing a new private key.\n-\n-Important Bug Fixes\n--------------------\n-\n-Privacy leak: the position of the \"change\" output in most transactions was not being\n-properly randomized, making network analysis of the transaction graph to identify\n-users' wallets easier. \n-\n-Zero-confirmation transaction vulnerability: accepting zero-confirmation transactions\n-(transactions that have not yet been included in a block) from somebody you do not\n-trust is still not recommended, because there will always be ways for attackers to\n-double-spend zero-confirmation transactions. However, this release includes a bug\n-fix that makes it a little bit more difficult for attackers to double-spend a\n-certain type (\"lockTime in the future\") of zero-confirmation transaction.\n-\n-Dependency Changes\n-------------------\n-\n-Qt 4.8.3 (compiling against older versions of Qt 4 should continue to work)\n-\n-\n-Thanks to everybody who contributed to this release:\n-----------------------------------------------------\n-\n-Alexander Kjeldaas\n-Andrey Alekseenko\n-Arnav Singh\n-Christian von Roques\n-Eric Lombrozo\n-Forrest Voight\n-Gavin Andresen\n-Gregory Maxwell\n-Jeff Garzik\n-Luke Dashjr\n-Matt Corallo\n-Mike Cassano\n-Mike Hearn\n-Peter Todd\n-Philip Kaufmann\n-Pieter Wuille\n-Richard Schwab\n-Robert Backhaus\n-Rune K. Svendsen\n-Sergio Demian Lerner\n-Wladimir J. van der Laan\n-burger2\n-default\n-fanquake\n-grimd34th\n-justmoon\n-redshark1802\n-tucenaber\n-xanatos"
      },
      {
        "sha": "4fd546bee00f9e78541190dd1ceb22cff35c3f09",
        "filename": "doc/release-notes/release-notes-0.8.1.md",
        "status": "removed",
        "additions": 0,
        "deletions": 22,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.8.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.8.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.8.1.md?ref=ddeacfcff563b602b8833287a34dfbee340e5bec",
        "patch": "@@ -1,22 +0,0 @@\n-Bitcoin-Qt/bitcoind version 0.8.1 is now available from:\n-  http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.8.1/\n-\n-This is a maintenance release that adds a new network rule to avoid\n-a chain-forking incompatibility with versions 0.7.2 and earlier.\n-\n-Please report bugs using the issue tracker at github:\n-  https://github.com/bitcoin/bitcoin/issues\n-\n-\n-How to Upgrade\n---------------\n-\n-If you are running an older version, shut it down. Wait\n-until it has completely shut down (which might take a few minutes for older\n-versions), then run the installer (on Windows) or just copy over\n-/Applications/Bitcoin-Qt (on Mac) or bitcoind/bitcoin-qt (on Linux).\n-\n-If you are upgrading from version 0.7.2 or earlier, the first time you\n-run 0.8.1 your blockchain files will be re-indexed, which will take\n-anywhere from 30 minutes to several hours, depending on the speed of\n-your machine."
      },
      {
        "sha": "eea9ba2a2c3c88b7fa5ac3b8f138f8ae39a59b75",
        "filename": "doc/release-notes/release-notes-0.8.2.md",
        "status": "removed",
        "additions": 0,
        "deletions": 137,
        "changes": 137,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.8.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.8.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.8.2.md?ref=ddeacfcff563b602b8833287a34dfbee340e5bec",
        "patch": "@@ -1,137 +0,0 @@\n-Bitcoin-Qt version 0.8.2 is now available from:\n-  http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.8.2/\n-\n-This is a maintenance release that fixes many bugs and includes\n-a few small new features.\n-\n-Please report bugs using the issue tracker at github:\n-  https://github.com/bitcoin/bitcoin/issues\n-\n-\n-How to Upgrade\n-\n-If you are running an older version, shut it down. Wait\n-until it has completely shut down (which might take a few minutes for older\n-versions), then run the installer (on Windows) or just copy over\n-/Applications/Bitcoin-Qt (on Mac) or bitcoind/bitcoin-qt (on Linux).\n-\n-If you are upgrading from version 0.7.2 or earlier, the first time you\n-run 0.8.2 your blockchain files will be re-indexed, which will take\n-anywhere from 30 minutes to several hours, depending on the speed of\n-your machine.\n-\n-0.8.2 Release notes\n-\n-Fee Policy changes\n-\n-The default fee for low-priority transactions is lowered from 0.0005 BTC \n-(for each 1,000 bytes in the transaction; an average transaction is\n-about 500 bytes) to 0.0001 BTC.\n-\n-Payments (transaction outputs) of 0.543 times the minimum relay fee\n-(0.00005430 BTC) are now considered 'non-standard', because storing them\n-costs the network more than they are worth and spending them will usually\n-cost their owner more in transaction fees than they are worth.\n-\n-Non-standard transactions are not relayed across the network, are not included\n-in blocks by most miners, and will not show up in your wallet until they are\n-included in a block.\n-\n-The default fee policy can be overridden using the -mintxfee and -minrelaytxfee\n-command-line options, but note that we intend to replace the hard-coded fees\n-with code that automatically calculates and suggests appropriate fees in the\n-0.9 release and note that if you set a fee policy significantly different from\n-the rest of the network your transactions may never confirm.\n-\n-Bitcoin-Qt changes\n-\n-* New icon and splash screen\n-* Improve reporting of synchronization process\n-* Remove hardcoded fee recommendations\n-* Improve metadata of executable on MacOSX and Windows\n-* Move export button to individual tabs instead of toolbar\n-* Add \"send coins\" command to context menu in address book\n-* Add \"copy txid\" command to copy transaction IDs from transaction overview\n-* Save & restore window size and position when showing & hiding window\n-* New translations: Arabic (ar), Bosnian (bs), Catalan (ca), Welsh (cy),\n-  Esperanto (eo), Interlingua (la), Latvian (lv) and many improvements\n-  to current translations\n-\n-MacOSX:\n-* OSX support for click-to-pay (bitcoin:) links\n-* Fix GUI disappearing problem on MacOSX (issue #1522)\n-\n-Linux/Unix:\n-* Copy addresses to middle-mouse-button clipboard\n-\n-\n-Command-line options\n-\n-* -walletnotify will call a command on receiving transactions that affect the wallet.\n-* -alertnotify will call a command on receiving an alert from the network.\n-* -par now takes a negative number, to leave a certain amount of cores free.\n-\n-JSON-RPC API changes\n-\n-* fixed a getblocktemplate bug that caused excessive CPU creating blocks.\n-* listunspent now lists account and address information.\n-* getinfo now also returns the time adjustment estimated from your peers.\n-* getpeerinfo now returns bytessent, bytesrecv and syncnode.\n-* gettxoutsetinfo returns statistics about the unspent transaction output database.\n-* gettxout returns information about a specific unspent transaction output.\n-\n-\n-Networking changes\n-\n-* Significant changes to the networking code, reducing latency and memory consumption.\n-* Avoid initial block download stalling.\n-* Remove IRC seeding support.\n-* Performance tweaks.\n-* Added testnet DNS seeds.\n-\n-Wallet compatibility/rescuing\n-\n-* Cases where wallets cannot be opened in another version/installation should be reduced.\n-* -salvagewallet now works for encrypted wallets.\n-\n-\n-Known Bugs\n-\n-* Entering the 'getblocktemplate' or 'getwork' RPC commands into the Bitcoin-Qt debug\n-console will cause Bitcoin-Qt to crash. Run Bitcoin-Qt with the -server command-line\n-option to workaround.\n-\n-Thanks to everybody who contributed to the 0.8.2 release!\n-\n-APerson241\n-Andrew Poelstra\n-Calvin Owens\n-Chuck LeDuc D\u00edaz\n-Colin Dean\n-David Griffith\n-David Serrano\n-Eric Lombrozo\n-Gavin Andresen\n-Gregory Maxwell\n-Jeff Garzik\n-Jonas Schnelli\n-Larry Gilbert\n-Luke Dashjr\n-Matt Corallo\n-Michael Ford\n-Mike Hearn\n-Patrick Brown\n-Peter Todd\n-Philip Kaufmann\n-Pieter Wuille\n-Richard Schwab\n-Roman Mindalev\n-Scott Howard\n-Tariq Bashir\n-Warren Togami\n-Wladimir J. van der Laan\n-freewil\n-gladoscc\n-kjj2\n-mb300sd\n-super3"
      },
      {
        "sha": "856c20aa33d5d82ed189ed6e90a4a32b40673f15",
        "filename": "doc/release-notes/release-notes-0.8.3.md",
        "status": "removed",
        "additions": 0,
        "deletions": 18,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.8.3.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.8.3.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.8.3.md?ref=ddeacfcff563b602b8833287a34dfbee340e5bec",
        "patch": "@@ -1,18 +0,0 @@\n-Bitcoin-Qt version 0.8.3 is now available from:\n-  http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.8.3/\n-\n-This is a maintenance release to fix a denial-of-service attack that\n-can cause nodes to crash.\n-\n-Please report bugs using the issue tracker at github:\n-  https://github.com/bitcoin/bitcoin/issues\n-\n-0.8.3 Release notes\n-\n-Truncate over-size messages to prevent a memory exhaustion attack.\n-\n-Fix a regression that causes excessive re-writing of the 'peers.dat' file.\n-\n-\n-Thanks to Peter Todd for responsibly disclosing the vulnerability\n-( CVE-2013-4627 ) and creating a fix."
      },
      {
        "sha": "c6f31f1fa4a58040ca94bb23dbb9ae5bf5a24798",
        "filename": "doc/release-notes/release-notes-0.8.4.md",
        "status": "removed",
        "additions": 0,
        "deletions": 83,
        "changes": 83,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.8.4.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.8.4.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.8.4.md?ref=ddeacfcff563b602b8833287a34dfbee340e5bec",
        "patch": "@@ -1,83 +0,0 @@\n-Bitcoin-Qt version 0.8.4 is now available from:\n-  http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.8.4/\n-\n-This is a maintenance release to fix a critical bug and three\n-security issues; we urge all users to upgrade.\n-\n-Please report bugs using the issue tracker at github:\n-  https://github.com/bitcoin/bitcoin/issues\n-\n-\n-How to Upgrade\n---------------\n-\n-If you are running an older version, shut it down. Wait\n-until it has completely shut down (which might take a few minutes for older\n-versions), then run the installer (on Windows) or just copy over\n-/Applications/Bitcoin-Qt (on Mac) or bitcoind/bitcoin-qt (on Linux).\n-\n-If you are upgrading from version 0.7.2 or earlier, the first time you\n-run 0.8.4 your blockchain files will be re-indexed, which will take\n-anywhere from 30 minutes to several hours, depending on the speed of\n-your machine.\n-\n-0.8.4 Release notes\n-===================\n-\n-Security issues\n----------------\n-\n-An attacker could send a series of messages that resulted in\n-an integer division-by-zero error in the Bloom Filter handling\n-code, causing the Bitcoin-Qt or bitcoind process to crash.\n-Bloom filters were introduced with version 0.8, so versions 0.8.0\n-through 0.8.3 are vulnerable to this critical denial-of-service attack.\n-\n-A constant-time algorithm is now used to check RPC password\n-guess attempts; fixes https://github.com/bitcoin/bitcoin/issues/2838\n-(CVE-2013-4165)\n-\n-Implement a better fix for the fill-memory-with-orphan-transactions\n-attack that was fixed in 0.8.3. See\n-https://bitslog.wordpress.com/2013/07/18/buggy-cve-2013-4627-patch-open-new-vectors-of-attack/\n-for a description of the weaknesses of the previous fix.\n-(CVE-2013-4627)\n-\n-Bugs fixed\n-----------\n-\n-Fix multi-block reorg transaction resurrection.\n-\n-Fix non-standard disconnected transactions causing mempool orphans.\n-This bug could cause nodes running with the -debug flag to crash.\n-\n-OSX: use 'FD_FULLSYNC' with LevelDB, which will (hopefully!)\n-prevent the database corruption issues many people have\n-experienced on OSX.\n-\n-Linux: clicking on bitcoin: links was broken if you were using\n-a Gnome-based desktop.\n-\n-Fix a hang-at-shutdown bug that only affects users that compile\n-their own version of Bitcoin against Boost versions 1.50-1.52.\n-\n-Other changes\n--------------\n-\n-Checkpoint at block 250,000 to speed up initial block downloads\n-and make the progress indicator when downloading more accurate.\n-\n-\n-Thanks to everybody who contributed to the 0.8.4 releases!\n-----------------------------------------------------------\n-\n-Pieter Wuille\n-Warren Togami\n-Patrick Strateman\n-pakt\n-Gregory Maxwell\n-Sergio Demian Lerner\n-grayleonard\n-Cory Fields\n-Matt Corallo\n-Gavin Andresen"
      },
      {
        "sha": "aa93fe7c715c23c967fd01e8af9a9337a34291a4",
        "filename": "doc/release-notes/release-notes-0.8.5.md",
        "status": "removed",
        "additions": 0,
        "deletions": 44,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.8.5.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.8.5.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.8.5.md?ref=ddeacfcff563b602b8833287a34dfbee340e5bec",
        "patch": "@@ -1,44 +0,0 @@\n-Bitcoin-Qt version 0.8.5 is now available from:\n-  http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.8.5/\n-\n-This is a maintenance release to fix a critical bug;\n-we urge all users to upgrade.\n-\n-Please report bugs using the issue tracker at github:\n-  https://github.com/bitcoin/bitcoin/issues\n-\n-\n-How to Upgrade\n---------------\n-\n-If you are running an older version, shut it down. Wait\n-until it has completely shut down (which might take a few minutes for older\n-versions), then run the installer (on Windows) or just copy over\n-/Applications/Bitcoin-Qt (on Mac) or bitcoind/bitcoin-qt (on Linux).\n-\n-If you are upgrading from version 0.7.2 or earlier, the first time you\n-run 0.8.5 your blockchain files will be re-indexed, which will take\n-anywhere from 30 minutes to several hours, depending on the speed of\n-your machine.\n-\n-0.8.5 Release notes\n-===================\n-\n-Bugs fixed\n-----------\n-\n-Transactions with version numbers larger than 0x7fffffff were\n-incorrectly being relayed and included in blocks.\n-\n-Blocks containing transactions with version numbers larger\n-than 0x7fffffff caused the code that checks for LevelDB database\n-inconsistencies at startup to erroneously report database\n-corruption and suggest that you reindex your database.\n-\n-This release also contains a non-critical fix to the code that\n-enforces BIP 34 (block height in the coinbase transaction).\n-\n---\n-\n-Thanks to Gregory Maxwell and Pieter Wuille for quickly\n-identifying and fixing the transaction version number bug."
      },
      {
        "sha": "39a45e0db565713a2bb06c1761f17e44c83f6fdd",
        "filename": "doc/release-notes/release-notes-0.8.6.md",
        "status": "removed",
        "additions": 0,
        "deletions": 66,
        "changes": 66,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.8.6.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.8.6.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.8.6.md?ref=ddeacfcff563b602b8833287a34dfbee340e5bec",
        "patch": "@@ -1,66 +0,0 @@\n-Bitcoin-Qt version 0.8.6 final is now available from:\n-\n-  http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.8.6/\n-\n-This is a maintenance release to fix a critical bug; we urge all users to upgrade.\n-\n-Please report bugs using the issue tracker at github:\n-\n-  https://github.com/bitcoin/bitcoin/issues\n-\n-How to Upgrade\n---------------\n-\n-If you already downloaded 0.8.6rc1 you do not need to re-download. This release is exactly the same.\n-\n-If you are running an older version, shut it down. Wait\n-until it has completely shut down (which might take a few minutes for older\n-versions), then run the installer (on Windows) or just copy over\n-/Applications/Bitcoin-Qt (on Mac) or bitcoind/bitcoin-qt (on Linux).\n-\n-If you are upgrading from version 0.7.2 or earlier, the first time you\n-run 0.8.6 your blockchain files will be re-indexed, which will take\n-anywhere from 30 minutes to several hours, depending on the speed of\n-your machine.\n-\n-0.8.6 Release notes\n-===================\n-\n-- Default block size increase for miners.\n-  (see https://gist.github.com/gavinandresen/7670433#086-accept-into-block)\n-\n-- Remove the all-outputs-must-be-greater-than-CENT-to-qualify-as-free rule for relaying\n-  (see https://gist.github.com/gavinandresen/7670433#086-relaying)\n-\n-- Lower maximum size for free transaction creation\n-  (see https://gist.github.com/gavinandresen/7670433#086-wallet)\n-\n-- OSX block chain database corruption fixes\n-  - Update leveldb to 1.13\n-  - Use fcntl with `F_FULLSYNC` instead of fsync on OSX\n-  - Use native Darwin memory barriers\n-  - Replace use of mmap in leveldb for improved reliability (only on OSX)\n-\n-- Fix nodes forwarding transactions with empty vins and getting banned\n-\n-- Network code performance and robustness improvements\n-\n-- Additional debug.log logging for diagnosis of network problems, log timestamps by default\n-\n-- Fix Bitcoin-Qt startup crash when clicking dock icon on OSX \n-\n-- Fix memory leaks in CKey::SetCompactSignature() and Key::SignCompact()\n-\n-- Fix rare GUI crash on send\n-\n-- Various small GUI, documentation and build fixes\n-\n-Warning\n--------\n-\n-- There have been frequent reports of users running out of virtual memory on 32-bit systems\n-  during the initial sync.\n-  Hence it is recommended to use a 64-bit executable if possible.\n-  A 64-bit executable for Windows is planned for 0.9.\n-\n-Note: Gavin Andresen's GPG signing key for SHA256SUMS.asc has been changed from  key id 1FC730C1 to sub key 7BF6E212 (see https://github.com/bitcoin/bitcoin.org/pull/279)."
      },
      {
        "sha": "170410ca40a3bd1bb059f02a7102d88e0ab95e27",
        "filename": "doc/release-notes/release-notes-0.9.0.md",
        "status": "removed",
        "additions": 0,
        "deletions": 411,
        "changes": 411,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.9.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.9.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.9.0.md?ref=ddeacfcff563b602b8833287a34dfbee340e5bec",
        "patch": "@@ -1,411 +0,0 @@\n-Bitcoin Core version 0.9.0 is now available from:\n-\n-  https://bitcoin.org/bin/0.9.0/\n-\n-This is a new major version release, bringing both new features and\n-bug fixes.\n-\n-Please report bugs using the issue tracker at github:\n-\n-  https://github.com/bitcoin/bitcoin/issues\n-\n-How to Upgrade\n---------------\n-\n-If you are running an older version, shut it down. Wait until it has completely\n-shut down (which might take a few minutes for older versions), uninstall all\n-earlier versions of Bitcoin, then run the installer (on Windows) or just copy\n-over /Applications/Bitcoin-Qt (on Mac) or bitcoind/bitcoin-qt (on Linux).\n-\n-If you are upgrading from version 0.7.2 or earlier, the first time you run\n-0.9.0 your blockchain files will be re-indexed, which will take anywhere from \n-30 minutes to several hours, depending on the speed of your machine.\n-\n-On Windows, do not forget to uninstall all earlier versions of the Bitcoin\n-client first, especially if you are switching to the 64-bit version.\n-\n-Windows 64-bit installer\n--------------------------\n-\n-New in 0.9.0 is the Windows 64-bit version of the client. There have been\n-frequent reports of users running out of virtual memory on 32-bit systems\n-during the initial sync. Because of this it is recommended to install the\n-64-bit version if your system supports it.\n-\n-NOTE: Release candidate 2 Windows binaries are not code-signed; use PGP\n-and the SHA256SUMS.asc file to make sure your binaries are correct.\n-In the final 0.9.0 release, Windows setup.exe binaries will be code-signed.\n-\n-OSX 10.5 / 32-bit no longer supported\n--------------------------------------\n-\n-0.9.0 drops support for older Macs. The minimum requirements are now:\n-* A 64-bit-capable CPU (see http://support.apple.com/kb/ht3696);\n-* Mac OS 10.6 or later (see https://support.apple.com/kb/ht1633).\n-\n-Downgrading warnings\n---------------------\n-\n-The 'chainstate' for this release is not always compatible with previous\n-releases, so if you run 0.9 and then decide to switch back to a\n-0.8.x release you might get a blockchain validation error when starting the\n-old release (due to 'pruned outputs' being omitted from the index of\n-unspent transaction outputs).\n-\n-Running the old release with the -reindex option will rebuild the chainstate\n-data structures and correct the problem.\n-\n-Also, the first time you run a 0.8.x release on a 0.9 wallet it will rescan\n-the blockchain for missing spent coins, which will take a long time (tens\n-of minutes on a typical machine).\n-\n-Rebranding to Bitcoin Core\n----------------------------\n-\n-To reduce confusion between Bitcoin-the-network and Bitcoin-the-software we\n-have renamed the reference client to Bitcoin Core.\n-\n-\n-OP_RETURN and data in the block chain\n--------------------------------------\n-On OP_RETURN:  There was been some confusion and misunderstanding in\n-the community, regarding the OP_RETURN feature in 0.9 and data in the\n-blockchain.  This change is not an endorsement of storing data in the\n-blockchain.  The OP_RETURN change creates a provably-prunable output,\n-to avoid data storage schemes -- some of which were already deployed --\n-that were storing arbitrary data such as images as forever-unspendable\n-TX outputs, bloating bitcoin's UTXO database.\n-\n-Storing arbitrary data in the blockchain is still a bad idea; it is less\n-costly and far more efficient to store non-currency data elsewhere.\n-\n-Autotools build system\n------------------------\n-\n-For 0.9.0 we switched to an autotools-based build system instead of individual\n-(q)makefiles.\n-\n-Using the standard \"./autogen.sh; ./configure; make\" to build Bitcoin-Qt and\n-bitcoind makes it easier for experienced open source developers to contribute \n-to the project.\n-\n-Be sure to check doc/build-*.md for your platform before building from source.\n-\n-Bitcoin-cli\n--------------\n-\n-Another change in the 0.9 release is moving away from the bitcoind executable\n-functioning both as a server and as a RPC client. The RPC client functionality\n-(\"tell the running bitcoin daemon to do THIS\") was split into a separate\n-executable, 'bitcoin-cli'. The RPC client code will eventually be removed from\n-bitcoind, but will be kept for backwards compatibility for a release or two.\n-\n-`walletpassphrase` RPC\n------------------------\n-\n-The behavior of the `walletpassphrase` RPC when the wallet is already unlocked\n-has changed between 0.8 and 0.9.\n-\n-The 0.8 behavior of `walletpassphrase` is to fail when the wallet is already unlocked:\n-\n-    > walletpassphrase 1000\n-    walletunlocktime = now + 1000\n-    > walletpassphrase 10\n-    Error: Wallet is already unlocked (old unlock time stays)\n-\n-The new behavior of `walletpassphrase` is to set a new unlock time overriding\n-the old one:\n-\n-    > walletpassphrase 1000\n-    walletunlocktime = now + 1000\n-    > walletpassphrase 10\n-    walletunlocktime = now + 10 (overriding the old unlock time)\n-\n-Transaction malleability-related fixes\n---------------------------------------\n-\n-This release contains a few fixes for transaction ID (TXID) malleability \n-issues:\n-\n-- -nospendzeroconfchange command-line option, to avoid spending\n-  zero-confirmation change\n-- IsStandard() transaction rules tightened to prevent relaying and mining of\n-  mutated transactions\n-- Additional information in listtransactions/gettransaction output to\n-  report wallet transactions that conflict with each other because\n-  they spend the same outputs.\n-- Bug fixes to the getbalance/listaccounts RPC commands, which would report\n-  incorrect balances for double-spent (or mutated) transactions.\n-- New option: -zapwallettxes to rebuild the wallet's transaction information\n-\n-Transaction Fees\n-----------------\n-\n-This release drops the default fee required to relay transactions across the\n-network and for miners to consider the transaction in their blocks to\n-0.01mBTC per kilobyte.\n-\n-Note that getting a transaction relayed across the network does NOT guarantee\n-that the transaction will be accepted by a miner; by default, miners fill\n-their blocks with 50 kilobytes of high-priority transactions, and then with\n-700 kilobytes of the highest-fee-per-kilobyte transactions.\n-\n-The minimum relay/mining fee-per-kilobyte may be changed with the\n-minrelaytxfee option. Note that previous releases incorrectly used\n-the mintxfee setting to determine which low-priority transactions should\n-be considered for inclusion in blocks.\n-\n-The wallet code still uses a default fee for low-priority transactions of\n-0.1mBTC per kilobyte. During periods of heavy transaction volume, even this\n-fee may not be enough to get transactions confirmed quickly; the mintxfee\n-option may be used to override the default.\n-\n-0.9.0 Release notes\n-=======================\n-\n-RPC:\n-\n-- New notion of 'conflicted' transactions, reported as confirmations: -1\n-- 'listreceivedbyaddress' now provides tx ids\n-- Add raw transaction hex to 'gettransaction' output\n-- Updated help and tests for 'getreceivedby(account|address)'\n-- In 'getblock', accept 2nd 'verbose' parameter, similar to getrawtransaction,\n-  but defaulting to 1 for backward compatibility\n-- Add 'verifychain', to verify chain database at runtime\n-- Add 'dumpwallet' and 'importwallet' RPCs\n-- 'keypoolrefill' gains optional size parameter\n-- Add 'getbestblockhash', to return tip of best chain\n-- Add 'chainwork' (the total work done by all blocks since the genesis block)\n-  to 'getblock' output\n-- Make RPC password resistant to timing attacks\n-- Clarify help messages and add examples\n-- Add 'getrawchangeaddress' call for raw transaction change destinations\n-- Reject insanely high fees by default in 'sendrawtransaction'\n-- Add RPC call 'decodescript' to decode a hex-encoded transaction script\n-- Make 'validateaddress' provide redeemScript\n-- Add 'getnetworkhashps' to get the calculated network hashrate\n-- New RPC 'ping' command to request ping, new 'pingtime' and 'pingwait' fields\n-  in 'getpeerinfo' output\n-- Adding new 'addrlocal' field to 'getpeerinfo' output\n-- Add verbose boolean to 'getrawmempool'\n-- Add rpc command 'getunconfirmedbalance' to obtain total unconfirmed balance\n-- Explicitly ensure that wallet is unlocked in `importprivkey`\n-- Add check for valid keys in `importprivkey`\n-\n-Command-line options:\n-\n-- New option: -nospendzeroconfchange to never spend unconfirmed change outputs\n-- New option: -zapwallettxes to rebuild the wallet's transaction information\n-- Rename option '-tor' to '-onion' to better reflect what it does\n-- Add '-disablewallet' mode to let bitcoind run entirely without wallet (when\n-  built with wallet)\n-- Update default '-rpcsslciphers' to include TLSv1.2\n-- make '-logtimestamps' default on and rework help-message\n-- RPC client option: '-rpcwait', to wait for server start\n-- Remove '-logtodebugger'\n-- Allow `-noserver` with bitcoind\n-\n-Block-chain handling and storage:\n-\n-- Update leveldb to 1.15\n-- Check for correct genesis (prevent cases where a datadir from the wrong\n-  network is accidentally loaded)\n-- Allow txindex to be removed and add a reindex dialog\n-- Log aborted block database rebuilds\n-- Store orphan blocks in serialized form, to save memory\n-- Limit the number of orphan blocks in memory to 750\n-- Fix non-standard disconnected transactions causing mempool orphans\n-- Add a new checkpoint at block 279,000\n-\n-Wallet:\n-\n-- Bug fixes and new regression tests to correctly compute\n-  the balance of wallets containing double-spent (or mutated) transactions\n-- Store key creation time. Calculate whole-wallet birthday.\n-- Optimize rescan to skip blocks prior to birthday\n-- Let user select wallet file with -wallet=foo.dat\n-- Consider generated coins mature at 101 instead of 120 blocks\n-- Improve wallet load time\n-- Don't count txins for priority to encourage sweeping\n-- Don't create empty transactions when reading a corrupted wallet\n-- Fix rescan to start from beginning after importprivkey\n-- Only create signatures with low S values\n-\n-Mining:\n-\n-- Increase default -blockmaxsize/prioritysize to 750K/50K\n-- 'getblocktemplate' does not require a key to create a block template\n-- Mining code fee policy now matches relay fee policy\n-\n-Protocol and network:\n-\n-- Drop the fee required to relay a transaction to 0.01mBTC per kilobyte\n-- Send tx relay flag with version\n-- New 'reject' P2P message (BIP 0061, see\n-  https://gist.github.com/gavinandresen/7079034 for draft)\n-- Dump addresses every 15 minutes instead of 10 seconds\n-- Relay OP_RETURN data TxOut as standard transaction type\n-- Remove CENT-output free transaction rule when relaying\n-- Lower maximum size for free transaction creation\n-- Send multiple inv messages if mempool.size > MAX_INV_SZ\n-- Split MIN_PROTO_VERSION into INIT_PROTO_VERSION and MIN_PEER_PROTO_VERSION\n-- Do not treat fFromMe transaction differently when broadcasting\n-- Process received messages one at a time without sleeping between messages\n-- Improve logging of failed connections\n-- Bump protocol version to 70002\n-- Add some additional logging to give extra network insight\n-- Added new DNS seed from bitcoinstats.com\n-\n-Validation:\n-\n-- Log reason for non-standard transaction rejection\n-- Prune provably-unspendable outputs, and adapt consistency check for it.\n-- Detect any sufficiently long fork and add a warning\n-- Call the -alertnotify script when we see a long or invalid fork\n-- Fix multi-block reorg transaction resurrection\n-- Reject non-canonically-encoded serialization sizes\n-- Reject dust amounts during validation\n-- Accept nLockTime transactions that finalize in the next block\n-\n-Build system:\n-\n-- Switch to autotools-based build system\n-- Build without wallet by passing `--disable-wallet` to configure, this \n-  removes the BerkeleyDB dependency\n-- Upgrade gitian dependencies (libpng, libz, libupnpc, boost, openssl) to more\n-  recent versions\n-- Windows 64-bit build support\n-- Solaris compatibility fixes\n-- Check integrity of gitian input source tarballs\n-- Enable full GCC Stack-smashing protection for all OSes\n-\n-GUI:\n-\n-- Switch to Qt 5.2.0 for Windows build\n-- Add payment request (BIP 0070) support\n-- Improve options dialog\n-- Show transaction fee in new send confirmation dialog\n-- Add total balance in overview page\n-- Allow user to choose data directory on first start, when data directory is\n-  missing, or when the -choosedatadir option is passed\n-- Save and restore window positions\n-- Add vout index to transaction id in transactions details dialog\n-- Add network traffic graph in debug window\n-- Add open URI dialog\n-- Add Coin Control Features\n-- Improve receive coins workflow: make the 'Receive' tab into a form to request\n-  payments, and move historical address list functionality to File menu.\n-- Rebrand to `Bitcoin Core`\n-- Move initialization/shutdown to a thread. This prevents \"Not responding\"\n-  messages during startup. Also show a window during shutdown.\n-- Don't regenerate autostart link on every client startup\n-- Show and store message of normal bitcoin:URI\n-- Fix richtext detection hang issue on very old Qt versions\n-- OS X: Make use of the 10.8+ user notification center to display Growl-like \n-  notifications\n-- OS X: Added NSHighResolutionCapable flag to Info.plist for better font\n-  rendering on Retina displays.\n-- OS X: Fix bitcoin-qt startup crash when clicking dock icon\n-- Linux: Fix Gnome bitcoin: URI handler\n-\n-Miscellaneous:\n-\n-- Add Linux script (contrib/qos/tc.sh) to limit outgoing bandwidth\n-- Add '-regtest' mode, similar to testnet but private with instant block\n-  generation with 'setgenerate' RPC.\n-- Add 'linearize.py' script to contrib, for creating bootstrap.dat\n-- Add separate bitcoin-cli client\n-\n-Credits\n---------\n-\n-Thanks to everyone who contributed to this release:\n-\n-- Andrey\n-- Ashley Holman\n-- b6393ce9-d324-4fe1-996b-acf82dbc3d53\n-- bitsofproof\n-- Brandon Dahler\n-- Calvin Tam\n-- Christian Decker\n-- Christian von Roques\n-- Christopher Latham\n-- Chuck\n-- coblee\n-- constantined\n-- Cory Fields\n-- Cozz Lovan\n-- daniel\n-- Daniel Larimer\n-- David Hill\n-- Dmitry Smirnov\n-- Drak\n-- Eric Lombrozo\n-- fanquake\n-- fcicq\n-- Florin\n-- frewil\n-- Gavin Andresen\n-- Gregory Maxwell\n-- gubatron\n-- Guillermo C\u00e9spedes Tab\u00e1rez\n-- Haakon Nilsen\n-- HaltingState\n-- Han Lin Yap\n-- harry\n-- Ian Kelling\n-- Jeff Garzik\n-- Johnathan Corgan\n-- Jonas Schnelli\n-- Josh Lehan\n-- Josh Triplett\n-- Julian Langschaedel\n-- Kangmo\n-- Lake Denman\n-- Luke Dashjr\n-- Mark Friedenbach\n-- Matt Corallo\n-- Michael Bauer\n-- Michael Ford\n-- Michagogo\n-- Midnight Magic\n-- Mike Hearn\n-- Nils Schneider\n-- Noel Tiernan\n-- Olivier Langlois\n-- patrick s\n-- Patrick Strateman\n-- paveljanik\n-- Peter Todd\n-- phantomcircuit\n-- phelixbtc\n-- Philip Kaufmann\n-- Pieter Wuille\n-- Rav3nPL\n-- R E Broadley\n-- regergregregerrge\n-- Robert Backhaus\n-- Roman Mindalev\n-- Rune K. Svendsen\n-- Ryan Niebur\n-- Scott Ellis\n-- Scott Willeke\n-- Sergey Kazenyuk\n-- Shawn Wilkinson\n-- Sined\n-- sje\n-- Subo1978\n-- super3\n-- Tamas Blummer\n-- theuni\n-- Thomas Holenstein\n-- Timon Rapp\n-- Timothy Stranex\n-- Tom Geller\n-- Torstein Huseb\u00f8\n-- Vaclav Vobornik\n-- vhf / victor felder\n-- Vinnie Falco\n-- Warren Togami\n-- Wil Bown\n-- Wladimir J. van der Laan"
      },
      {
        "sha": "0552053d27b8f76e9f5a80cdfcfb0420d64afc86",
        "filename": "doc/release-notes/release-notes-0.9.1.md",
        "status": "removed",
        "additions": 0,
        "deletions": 53,
        "changes": 53,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.9.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.9.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.9.1.md?ref=ddeacfcff563b602b8833287a34dfbee340e5bec",
        "patch": "@@ -1,53 +0,0 @@\n-Bitcoin Core version 0.9.1 is now available from:\n-\n-  https://bitcoin.org/bin/0.9.1/\n-\n-This is a security update. It is recommended to upgrade to this release\n-as soon as possible.\n-\n-It is especially important to upgrade if you currently have version\n-0.9.0 installed and are using the graphical interface OR you are using\n-bitcoind from any pre-0.9.1 version, and have enabled SSL for RPC and\n-have configured allowip to allow rpc connections from potentially\n-hostile hosts.\n-\n-Please report bugs using the issue tracker at github:\n-\n-  https://github.com/bitcoin/bitcoin/issues\n-\n-How to Upgrade\n---------------\n-\n-If you are running an older version, shut it down. Wait until it has completely\n-shut down (which might take a few minutes for older versions), then run the\n-installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n-bitcoind/bitcoin-qt (on Linux).\n-\n-If you are upgrading from version 0.7.2 or earlier, the first time you run\n-0.9.1 your blockchain files will be re-indexed, which will take anywhere from \n-30 minutes to several hours, depending on the speed of your machine.\n-\n-0.9.1 Release notes\n-=======================\n-\n-No code changes were made between 0.9.0 and 0.9.1. Only the dependencies were changed.\n-\n-- Upgrade OpenSSL to 1.0.1g. This release fixes the following vulnerabilities which can\n-  affect the Bitcoin Core software:\n-\n-  - CVE-2014-0160 (\"heartbleed\")\n-    A missing bounds check in the handling of the TLS heartbeat extension can\n-    be used to reveal up to 64k of memory to a connected client or server.\n-\n-  - CVE-2014-0076\n-    The Montgomery ladder implementation in OpenSSL does not ensure that\n-    certain swap operations have a constant-time behavior, which makes it\n-    easier for local users to obtain ECDSA nonces via a FLUSH+RELOAD cache\n-    side-channel attack.\n-\n-- Add statically built executables to Linux build\n-\n-Credits\n---------\n-\n-Credits go to the OpenSSL team for fixing the vulnerabilities quickly."
      },
      {
        "sha": "3168ad1a5ad79a7d9ea5dcbf35b8e924dcaaa752",
        "filename": "doc/release-notes/release-notes-0.9.2.1.md",
        "status": "removed",
        "additions": 0,
        "deletions": 207,
        "changes": 207,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.9.2.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.9.2.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.9.2.1.md?ref=ddeacfcff563b602b8833287a34dfbee340e5bec",
        "patch": "@@ -1,207 +0,0 @@\n-Bitcoin Core version 0.9.2.1 is now available from:\n-\n-  https://bitcoin.org/bin/0.9.2.1/\n-\n-This is a new minor version release, bringing mostly bug fixes and some minor\n-improvements. OpenSSL has been updated because of a security issue (CVE-2014-0224).\n-Upgrading to this release is recommended.\n-\n-Please report bugs using the issue tracker at github:\n-\n-  https://github.com/bitcoin/bitcoin/issues\n-\n-How to Upgrade\n---------------\n-\n-If you are running an older version, shut it down. Wait until it has completely\n-shut down (which might take a few minutes for older versions), then run the\n-installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n-bitcoind/bitcoin-qt (on Linux).\n-\n-If you are upgrading from version 0.7.2 or earlier, the first time you run\n-0.9.2.1 your blockchain files will be re-indexed, which will take anywhere from \n-30 minutes to several hours, depending on the speed of your machine.\n-\n-Downgrading warnings\n---------------------\n-\n-The 'chainstate' for this release is not always compatible with previous\n-releases, so if you run 0.9.x and then decide to switch back to a\n-0.8.x release you might get a blockchain validation error when starting the\n-old release (due to 'pruned outputs' being omitted from the index of\n-unspent transaction outputs).\n-\n-Running the old release with the -reindex option will rebuild the chainstate\n-data structures and correct the problem.\n-\n-Also, the first time you run a 0.8.x release on a 0.9 wallet it will rescan\n-the blockchain for missing spent coins, which will take a long time (tens\n-of minutes on a typical machine).\n-\n-Important changes\n-==================\n-\n-Gitian OSX build\n------------------\n-\n-The deterministic build system that was already used for Windows and Linux\n-builds is now used for OSX as well. Although the resulting executables have\n-been tested quite a bit, there could be possible regressions. Be sure to report\n-these on the Github bug tracker mentioned above.\n-\n-Compatibility of Linux build\n------------------------------\n-\n-For Linux we now build against Qt 4.6, and filter the symbols for libstdc++ and glibc.\n-This brings back compatibility with\n-\n-- Debian 6+ / Tails\n-- Ubuntu 10.04\n-- CentOS 6.5\n-\n-0.9.2 - 0.9.2.1 Release notes\n-=======================\n-\n-The OpenSSL dependency in the gitian builds has been upgraded to 1.0.1h because of CVE-2014-0224.\n-\n-RPC:\n-\n-- Add `getwalletinfo`, `getblockchaininfo` and `getnetworkinfo` calls (will replace hodge-podge `getinfo` at some point)\n-- Add a `relayfee` field to `getnetworkinfo`\n-- Fix RPC related shutdown hangs and leaks\n-- Always show syncnode in `getpeerinfo`\n-- `sendrawtransaction`: report the reject code and reason, and make it possible to re-send transactions that are already in the mempool\n-- `getmininginfo` show right genproclimit\n-\n-Command-line options:\n-\n-- Fix `-printblocktree` output\n-- Show error message if ReadConfigFile fails\n-\n-Block-chain handling and storage:\n-\n-- Fix for GetBlockValue() after block 13,440,000 (BIP42)\n-- Upgrade leveldb to 1.17\n-\n-Protocol and network code:\n-\n-- Per-peer block download tracking and stalled download detection\n-- Add new DNS seed from bitnodes.io\n-- Prevent socket leak in ThreadSocketHandler and correct some proxy related socket leaks\n-- Use pnode->nLastRecv as sync score (was the wrong way around)\n-\n-Wallet:\n-\n-- Make GetAvailableCredit run GetHash() only once per transaction (performance improvement)\n-- Lower paytxfee warning threshold from 0.25 BTC to 0.01 BTC\n-- Fix importwallet nTimeFirstKey (trigger necessary rescans)\n-- Log BerkeleyDB version at startup\n-- CWallet init fix\n-\n-Build system:\n-\n-- Add OSX build descriptors to gitian\n-- Fix explicit --disable-qt-dbus\n-- Don't require db_cxx.h when compiling with wallet disabled and GUI enabled\n-- Improve missing boost error reporting\n-- Upgrade miniupnpc version to 1.9\n-- gitian-linux: --enable-glibc-back-compat for binary compatibility with old distributions\n-- gitian: don't export any symbols from executable\n-- gitian: build against Qt 4.6\n-- devtools: add script to check symbols from Linux gitian executables\n-- Remove build-time no-IPv6 setting\n-\n-GUI:\n-\n-- Fix various coin control visual issues\n-- Show number of in/out connections in debug console\n-- Show weeks as well as years behind for long timespans behind\n-- Enable and disable the Show and Remove buttons for requested payments history based on whether any entry is selected.\n-- Show also value for options overridden on command line in options dialog\n-- Fill in label from address book also for URIs\n-- Fixes feel when resizing the last column on tables (issue #2862)\n-- Fix ESC in disablewallet mode\n-- Add expert section to wallet tab in optionsdialog\n-- Do proper boost::path conversion (fixes unicode in datadir)\n-- Only override -datadir if different from the default (fixes -datadir in config file)\n-- Show rescan progress at start-up\n-- Show importwallet progress\n-- Get required locks upfront in polling functions (avoids hanging on locks)\n-- Catch Windows shutdown events while client is running\n-- Optionally add third party links to transaction context menu\n-- Check for !pixmap() before trying to export QR code (avoids crashes when no QR code could be generated)\n-- Fix \"Start bitcoin on system login\"\n-\n-Miscellaneous:\n-\n-- Replace non-threadsafe C functions (gmtime, strerror and setlocale)\n-- Add missing cs_main and wallet locks\n-- Avoid exception at startup when system locale not recognized\n-- Changed bitrpc.py's raw_input to getpass for passwords to conceal characters during command line input\n-- devtools: add a script to fetch and postprocess translations\n-\n-Credits\n---------\n-\n-Thanks to everyone who contributed to this release:\n-\n-- Addy Yeow\n-- Altoidnerd\n-- Andrea D'Amore\n-- Andreas Schildbach\n-- Bardi Harborow\n-- Brandon Dahler\n-- Bryan Bishop\n-- Chris Beams\n-- Christian von Roques\n-- Cory Fields\n-- Cozz Lovan\n-- daniel\n-- Daniel Newton\n-- David A. Harding\n-- ditto-b\n-- duanemoody\n-- Eric S. Bullington\n-- Fabian Raetz\n-- Gavin Andresen\n-- Gregory Maxwell\n-- gubatron\n-- Haakon Nilsen\n-- harry\n-- Hector Jusforgues\n-- Isidoro Ghezzi\n-- Jeff Garzik\n-- Johnathan Corgan\n-- jtimon\n-- Kamil Domanski\n-- langerhans\n-- Luke Dashjr\n-- Manuel Araoz\n-- Mark Friedenbach\n-- Matt Corallo\n-- Matthew Bogosian\n-- Meeh\n-- Michael Ford\n-- Michagogo\n-- Mikael Wikman\n-- Mike Hearn\n-- olalonde\n-- paveljanik\n-- peryaudo\n-- Philip Kaufmann\n-- philsong\n-- Pieter Wuille\n-- R E Broadley\n-- richierichrawr\n-- Rune K. Svendsen\n-- rxl\n-- shshshsh\n-- Simon de la Rouviere\n-- Stuart Cardall\n-- super3\n-- Telepatheic\n-- Thomas Zander\n-- Torstein Huseb\u00f8\n-- Warren Togami\n-- Wladimir J. van der Laan\n-- Yoichi Hirai"
      },
      {
        "sha": "a2749e549f7663f674d496da600c0bf282a851d2",
        "filename": "doc/release-notes/release-notes-0.9.2.md",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.9.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.9.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.9.2.md?ref=ddeacfcff563b602b8833287a34dfbee340e5bec"
      },
      {
        "sha": "0765a360b29dab1fbfbcf30f4f8ebcf6979f42bd",
        "filename": "doc/release-notes/release-notes-0.9.3.md",
        "status": "removed",
        "additions": 0,
        "deletions": 101,
        "changes": 101,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.9.3.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.9.3.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.9.3.md?ref=ddeacfcff563b602b8833287a34dfbee340e5bec"
      },
      {
        "sha": "7ee73246a9b043d643226551b29143857e44bac9",
        "filename": "doc/release-notes/release-notes-0.9.4.md",
        "status": "removed",
        "additions": 0,
        "deletions": 95,
        "changes": 95,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.9.4.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.9.4.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.9.4.md?ref=ddeacfcff563b602b8833287a34dfbee340e5bec"
      },
      {
        "sha": "bed0af9879bf44e651b8726426d0209c4c75ef96",
        "filename": "doc/release-notes/release-notes-0.9.5.md",
        "status": "removed",
        "additions": 0,
        "deletions": 60,
        "changes": 60,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.9.5.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/doc/release-notes/release-notes-0.9.5.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.9.5.md?ref=ddeacfcff563b602b8833287a34dfbee340e5bec"
      },
      {
        "sha": "8958faa24a37299f0aac61360873fee14d3ce2ae",
        "filename": "doc/release-process.md",
        "status": "modified",
        "additions": 75,
        "deletions": 75,
        "changes": 150,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/doc/release-process.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/doc/release-process.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-process.md?ref=de86fc295a089c93c852aaa2cef56116eb71ef96"
      },
      {
        "sha": "70255d8046a84abd2d0f6b15aaa2fa75c75563dc",
        "filename": "doc/shared-libraries.md",
        "status": "modified",
        "additions": 22,
        "deletions": 22,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/doc/shared-libraries.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/doc/shared-libraries.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/shared-libraries.md?ref=de86fc295a089c93c852aaa2cef56116eb71ef96"
      },
      {
        "sha": "b2ea368fc711a2994ef89c0edaefd2f45293b941",
        "filename": "doc/tor.md",
        "status": "modified",
        "additions": 24,
        "deletions": 24,
        "changes": 48,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/doc/tor.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/doc/tor.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/tor.md?ref=de86fc295a089c93c852aaa2cef56116eb71ef96"
      },
      {
        "sha": "c1d5a6e9af824749f6fe0d23bc3673e717b32de2",
        "filename": "doc/translation_process.md",
        "status": "modified",
        "additions": 18,
        "deletions": 18,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/doc/translation_process.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/doc/translation_process.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/translation_process.md?ref=de86fc295a089c93c852aaa2cef56116eb71ef96"
      },
      {
        "sha": "8551926d2bd09935f2589ad889a65597f736036c",
        "filename": "doc/translation_strings_policy.md",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/doc/translation_strings_policy.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/doc/translation_strings_policy.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/translation_strings_policy.md?ref=de86fc295a089c93c852aaa2cef56116eb71ef96"
      },
      {
        "sha": "42ab85e5d7fec2a85fdc6c64410ebace37c1b3f7",
        "filename": "doc/travis-ci.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/doc/travis-ci.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/doc/travis-ci.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/travis-ci.md?ref=de86fc295a089c93c852aaa2cef56116eb71ef96"
      },
      {
        "sha": "bded4ea3ea6b7fda9fdbb2b681aaeb5dce273c4d",
        "filename": "doc/zmq.md",
        "status": "modified",
        "additions": 11,
        "deletions": 11,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/doc/zmq.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/doc/zmq.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/zmq.md?ref=de86fc295a089c93c852aaa2cef56116eb71ef96"
      },
      {
        "sha": "ec649d251426e563ad18ae503b6353afcf18db3b",
        "filename": "libravenconsensus.pc.in",
        "status": "renamed",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/libravenconsensus.pc.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/libravenconsensus.pc.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/libravenconsensus.pc.in?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "previous_filename": "libbitcoinconsensus.pc.in"
      },
      {
        "sha": "89ed6aaa1620a9ab9f139551e838e447dfcde485",
        "filename": "pre-release/linux/README.md",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/pre-release/linux/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/pre-release/linux/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/pre-release/linux/README.md?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "previous_filename": "binaries/pre-release/linux/README.md"
      },
      {
        "sha": "ff594e3ffe3db529fb13464a879242bd232f555a",
        "filename": "pre-release/mac/README.md",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/pre-release/mac/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/pre-release/mac/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/pre-release/mac/README.md?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "previous_filename": "binaries/pre-release/mac/README.md"
      },
      {
        "sha": "d4d3c50f579571ef9537fc6d19fc7592528cc3ca",
        "filename": "pre-release/windows/README.md",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/pre-release/windows/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/pre-release/windows/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/pre-release/windows/README.md?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "previous_filename": "binaries/pre-release/windows/README.md"
      },
      {
        "sha": "8d1c8b69c3fce7bea45c73efd06983e3c419a92f",
        "filename": "release/README.md",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/release/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/release/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/release/README.md?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "previous_filename": "binaries/release/README.md"
      },
      {
        "sha": "89ed6aaa1620a9ab9f139551e838e447dfcde485",
        "filename": "release/linux/README.md",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/release/linux/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/release/linux/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/release/linux/README.md?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "previous_filename": "binaries/release/linux/README.md"
      },
      {
        "sha": "0930b1242fae97c59afb87ff5cd2fb31cbd6aa49",
        "filename": "release/linux/centos_7/md5sum",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/release/linux/centos_7/md5sum",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/release/linux/centos_7/md5sum",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/release/linux/centos_7/md5sum?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "previous_filename": "binaries/release/linux/centos_7/md5sum"
      },
      {
        "sha": "47d82ce2ca93da46d4d06cc7074b37e6036e84b9",
        "filename": "release/linux/centos_7/raven-cli",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/release/linux/centos_7/raven-cli",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/release/linux/centos_7/raven-cli",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/release/linux/centos_7/raven-cli?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "previous_filename": "binaries/release/linux/centos_7/raven-cli"
      },
      {
        "sha": "9c058f40bc52165b20dd6b2a4d86ab73ee083878",
        "filename": "release/linux/centos_7/raven-tx",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/release/linux/centos_7/raven-tx",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/release/linux/centos_7/raven-tx",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/release/linux/centos_7/raven-tx?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "previous_filename": "binaries/release/linux/centos_7/raven-tx"
      },
      {
        "sha": "d97ad97bcee4585260687ed6ee04456b29dc91a8",
        "filename": "release/linux/centos_7/ravend",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/release/linux/centos_7/ravend",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/release/linux/centos_7/ravend",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/release/linux/centos_7/ravend?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "previous_filename": "binaries/release/linux/centos_7/ravend"
      },
      {
        "sha": "8cb1ccfa2e54f85be585b5038a5a5ddcbed4debd",
        "filename": "release/linux/centos_7/sha256sum",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/release/linux/centos_7/sha256sum",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/release/linux/centos_7/sha256sum",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/release/linux/centos_7/sha256sum?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "previous_filename": "binaries/release/linux/centos_7/sha256sum"
      },
      {
        "sha": "3a8730f530738e8c21684692e466b2ea7153bfa8",
        "filename": "release/linux/fedora/md5sum",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/release/linux/fedora/md5sum",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/release/linux/fedora/md5sum",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/release/linux/fedora/md5sum?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "previous_filename": "binaries/release/linux/fedora/md5sum"
      },
      {
        "sha": "adf8bf1ecee728cf5a3ddc808dce3349ccc91f44",
        "filename": "release/linux/fedora/raven-cli",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/release/linux/fedora/raven-cli",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/release/linux/fedora/raven-cli",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/release/linux/fedora/raven-cli?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "previous_filename": "binaries/release/linux/fedora/raven-cli"
      },
      {
        "sha": "420234b454cfdeab0ce4885386795cb8f6a1da87",
        "filename": "release/linux/fedora/raven-tx",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/release/linux/fedora/raven-tx",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/release/linux/fedora/raven-tx",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/release/linux/fedora/raven-tx?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "previous_filename": "binaries/release/linux/fedora/raven-tx"
      },
      {
        "sha": "3a92d2bf8079911def604e5fc3bfc193cecfcb19",
        "filename": "release/linux/fedora/ravend",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/release/linux/fedora/ravend",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/release/linux/fedora/ravend",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/release/linux/fedora/ravend?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "previous_filename": "binaries/release/linux/fedora/ravend"
      },
      {
        "sha": "bbc58d2b4eee50a4dbd6aaec4ff35c6b6d8d9c5b",
        "filename": "release/linux/fedora/sha256sum",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/release/linux/fedora/sha256sum",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/release/linux/fedora/sha256sum",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/release/linux/fedora/sha256sum?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "previous_filename": "binaries/release/linux/fedora/sha256sum"
      },
      {
        "sha": "eb8996efdc068ba3977de20f632709a7eacddd6c",
        "filename": "release/linux/ubuntu_16.04/md5sum",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/release/linux/ubuntu_16.04/md5sum",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/release/linux/ubuntu_16.04/md5sum",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/release/linux/ubuntu_16.04/md5sum?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "previous_filename": "binaries/release/linux/ubuntu_16.04/md5sum"
      },
      {
        "sha": "7b6695d4674cfac0fe294e267a9a133161d7651d",
        "filename": "release/linux/ubuntu_16.04/raven-cli",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/release/linux/ubuntu_16.04/raven-cli",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/release/linux/ubuntu_16.04/raven-cli",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/release/linux/ubuntu_16.04/raven-cli?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "previous_filename": "binaries/release/linux/ubuntu_16.04/raven-cli"
      },
      {
        "sha": "a36424760bb3490e4e04ce36f8d6b321ca36a42f",
        "filename": "release/linux/ubuntu_16.04/raven-tx",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/release/linux/ubuntu_16.04/raven-tx",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/release/linux/ubuntu_16.04/raven-tx",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/release/linux/ubuntu_16.04/raven-tx?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "previous_filename": "binaries/release/linux/ubuntu_16.04/raven-tx"
      },
      {
        "sha": "386e06654606fa90959e6c9edc8cb800733e3946",
        "filename": "release/linux/ubuntu_16.04/ravend",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/release/linux/ubuntu_16.04/ravend",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/release/linux/ubuntu_16.04/ravend",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/release/linux/ubuntu_16.04/ravend?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "previous_filename": "binaries/release/linux/ubuntu_16.04/ravend"
      },
      {
        "sha": "c13d5ae794ada5531b5568286a82cfeed5f071d9",
        "filename": "release/linux/ubuntu_16.04/sha256sum",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/release/linux/ubuntu_16.04/sha256sum",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/release/linux/ubuntu_16.04/sha256sum",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/release/linux/ubuntu_16.04/sha256sum?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "previous_filename": "binaries/release/linux/ubuntu_16.04/sha256sum"
      },
      {
        "sha": "59edf142be88956ab0478485a08d76cf95e1279d",
        "filename": "release/linux/ubuntu_17.04/md5sum",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/release/linux/ubuntu_17.04/md5sum",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/release/linux/ubuntu_17.04/md5sum",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/release/linux/ubuntu_17.04/md5sum?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "previous_filename": "binaries/release/linux/ubuntu_17.04/md5sum"
      },
      {
        "sha": "1a70030792ad829988db38be0eea6bbbe86908a2",
        "filename": "release/linux/ubuntu_17.04/raven-cli",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/release/linux/ubuntu_17.04/raven-cli",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/release/linux/ubuntu_17.04/raven-cli",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/release/linux/ubuntu_17.04/raven-cli?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "previous_filename": "binaries/release/linux/ubuntu_17.04/raven-cli"
      },
      {
        "sha": "3f9a661315d0d75093a87ff17a38285e820e9e41",
        "filename": "release/linux/ubuntu_17.04/raven-tx",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/release/linux/ubuntu_17.04/raven-tx",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/release/linux/ubuntu_17.04/raven-tx",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/release/linux/ubuntu_17.04/raven-tx?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "previous_filename": "binaries/release/linux/ubuntu_17.04/raven-tx"
      },
      {
        "sha": "5f1c08d3c8834224f545f800e9bcea4a111e6ac3",
        "filename": "release/linux/ubuntu_17.04/ravend",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/release/linux/ubuntu_17.04/ravend",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/release/linux/ubuntu_17.04/ravend",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/release/linux/ubuntu_17.04/ravend?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "previous_filename": "binaries/release/linux/ubuntu_17.04/ravend"
      },
      {
        "sha": "93629d38dc777df05d114387e626b67a438cb97b",
        "filename": "release/linux/ubuntu_17.04/sha256sum",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/release/linux/ubuntu_17.04/sha256sum",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/release/linux/ubuntu_17.04/sha256sum",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/release/linux/ubuntu_17.04/sha256sum?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "previous_filename": "binaries/release/linux/ubuntu_17.04/sha256sum"
      },
      {
        "sha": "ff594e3ffe3db529fb13464a879242bd232f555a",
        "filename": "release/mac/README.md",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/release/mac/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/release/mac/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/release/mac/README.md?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "previous_filename": "binaries/release/mac/README.md"
      },
      {
        "sha": "5494b501c81657c55117cd9dddedcd089bcd7344",
        "filename": "release/mac/Raven-Qt.dmg",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/release/mac/Raven-Qt.dmg",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/release/mac/Raven-Qt.dmg",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/release/mac/Raven-Qt.dmg?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "previous_filename": "binaries/release/mac/Raven-Qt.dmg"
      },
      {
        "sha": "de7c6075daf813953269733afd2ff7184256ccc6",
        "filename": "release/mac/md5sum",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/release/mac/md5sum",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/release/mac/md5sum",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/release/mac/md5sum?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "previous_filename": "binaries/release/mac/md5sum"
      },
      {
        "sha": "354cec60c04d268b867986d20c1e75068faa0135",
        "filename": "release/mac/raven-cli",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/release/mac/raven-cli",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/release/mac/raven-cli",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/release/mac/raven-cli?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "previous_filename": "binaries/release/mac/raven-cli"
      },
      {
        "sha": "7d8a29c00aefad135d13ff3fdc29f3d607dbe215",
        "filename": "release/mac/raven-tx",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/release/mac/raven-tx",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/release/mac/raven-tx",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/release/mac/raven-tx?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "previous_filename": "binaries/release/mac/raven-tx"
      },
      {
        "sha": "f67ff9a2186ef640f2f81b2f322ed3766ce01ed4",
        "filename": "release/mac/ravend",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/release/mac/ravend",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/release/mac/ravend",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/release/mac/ravend?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "previous_filename": "binaries/release/mac/ravend"
      },
      {
        "sha": "2faa953c1a82c70bdc64d9fb0456a419d0a817b0",
        "filename": "release/mac/sha256sum",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/release/mac/sha256sum",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/release/mac/sha256sum",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/release/mac/sha256sum?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "previous_filename": "binaries/release/mac/sha256sum"
      },
      {
        "sha": "d4d3c50f579571ef9537fc6d19fc7592528cc3ca",
        "filename": "release/windows/README.md",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/release/windows/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/release/windows/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/release/windows/README.md?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "previous_filename": "binaries/release/windows/README.md"
      },
      {
        "sha": "5bd5907777a79cea3c3c87c4906265b4382142e7",
        "filename": "release/windows/md5sum",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/release/windows/md5sum",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/release/windows/md5sum",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/release/windows/md5sum?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "previous_filename": "binaries/release/windows/md5sum"
      },
      {
        "sha": "c9342164791419baaf44dc8ec46e2d06d9bdb13e",
        "filename": "release/windows/raven-cli.exe",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/release/windows/raven-cli.exe",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/release/windows/raven-cli.exe",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/release/windows/raven-cli.exe?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "previous_filename": "binaries/release/windows/raven-cli.exe"
      },
      {
        "sha": "1930eaebe7f8001fac3782d38782599eb13e7d77",
        "filename": "release/windows/raven-qt.exe",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/release/windows/raven-qt.exe",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/release/windows/raven-qt.exe",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/release/windows/raven-qt.exe?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "previous_filename": "binaries/release/windows/raven-qt.exe"
      },
      {
        "sha": "3351b13da468d0c71cae95bfab9d4d4ed1d9d07d",
        "filename": "release/windows/raven-tx.exe",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/release/windows/raven-tx.exe",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/release/windows/raven-tx.exe",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/release/windows/raven-tx.exe?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "previous_filename": "binaries/release/windows/raven-tx.exe"
      },
      {
        "sha": "8aeac3f849b3c267c63f96994aafde42f8caf37a",
        "filename": "release/windows/ravend.exe",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/release/windows/ravend.exe",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/release/windows/ravend.exe",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/release/windows/ravend.exe?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "previous_filename": "binaries/release/windows/ravend.exe"
      },
      {
        "sha": "6121aebed63aab3ef8e021756c4c5ac7b902e5c5",
        "filename": "release/windows/sha256sum",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/release/windows/sha256sum",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/release/windows/sha256sum",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/release/windows/sha256sum?ref=de86fc295a089c93c852aaa2cef56116eb71ef96",
        "previous_filename": "binaries/release/windows/sha256sum"
      },
      {
        "sha": "beb0d7073c0d27596dce49fe58aa2b05307bea7f",
        "filename": "share/certs/BitcoinFoundation_Apple_Cert.pem",
        "status": "removed",
        "additions": 0,
        "deletions": 37,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/share/certs/BitcoinFoundation_Apple_Cert.pem",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/share/certs/BitcoinFoundation_Apple_Cert.pem",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/certs/BitcoinFoundation_Apple_Cert.pem?ref=ddeacfcff563b602b8833287a34dfbee340e5bec"
      },
      {
        "sha": "dc752d455c911113eac90c4a601925ce6dd59f5f",
        "filename": "share/certs/BitcoinFoundation_Comodo_Cert.pem",
        "status": "removed",
        "additions": 0,
        "deletions": 37,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/share/certs/BitcoinFoundation_Comodo_Cert.pem",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/share/certs/BitcoinFoundation_Comodo_Cert.pem",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/certs/BitcoinFoundation_Comodo_Cert.pem?ref=ddeacfcff563b602b8833287a34dfbee340e5bec"
      },
      {
        "sha": "8d50144c21f9bd3726b9b12e09e8c3ff44d6e595",
        "filename": "share/certs/PrivateKeyNotes.md",
        "status": "removed",
        "additions": 0,
        "deletions": 46,
        "changes": 46,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/share/certs/PrivateKeyNotes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/share/certs/PrivateKeyNotes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/certs/PrivateKeyNotes.md?ref=ddeacfcff563b602b8833287a34dfbee340e5bec"
      },
      {
        "sha": "24ada4e0a09a8bef6e8c203acf9f71c7930b2a5b",
        "filename": "share/genbuild.sh",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/de86fc295a089c93c852aaa2cef56116eb71ef96/share/genbuild.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/de86fc295a089c93c852aaa2cef56116eb71ef96/share/genbuild.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/genbuild.sh?ref=de86fc295a089c93c852aaa2cef56116eb71ef96"
      },
      {
        "sha": "f5480f41616a81cc3b65d0625f4f5e6f01a2f861",
        "filename": "share/pixmaps/bitcoin.ico",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/share/pixmaps/bitcoin.ico",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/share/pixmaps/bitcoin.ico",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/pixmaps/bitcoin.ico?ref=ddeacfcff563b602b8833287a34dfbee340e5bec"
      },
      {
        "sha": "55039b1c920d2c73de7384ece75f0a7b3d147676",
        "filename": "share/pixmaps/bitcoin128.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/share/pixmaps/bitcoin128.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/share/pixmaps/bitcoin128.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/pixmaps/bitcoin128.png?ref=ddeacfcff563b602b8833287a34dfbee340e5bec"
      },
      {
        "sha": "d8e41e9ea4413d5e19c4c671efce359c236f419f",
        "filename": "share/pixmaps/bitcoin128.xpm",
        "status": "removed",
        "additions": 0,
        "deletions": 384,
        "changes": 384,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/share/pixmaps/bitcoin128.xpm",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/share/pixmaps/bitcoin128.xpm",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/pixmaps/bitcoin128.xpm?ref=ddeacfcff563b602b8833287a34dfbee340e5bec"
      },
      {
        "sha": "5537479095c62d1fd4ab69ea7cf90b6596dacd39",
        "filename": "share/pixmaps/bitcoin16.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/share/pixmaps/bitcoin16.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/share/pixmaps/bitcoin16.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/pixmaps/bitcoin16.png?ref=ddeacfcff563b602b8833287a34dfbee340e5bec"
      },
      {
        "sha": "40a0624ac72a6a0dccbbebad7c5653756b5c1d4f",
        "filename": "share/pixmaps/bitcoin16.xpm",
        "status": "removed",
        "additions": 0,
        "deletions": 181,
        "changes": 181,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/share/pixmaps/bitcoin16.xpm",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/share/pixmaps/bitcoin16.xpm",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/pixmaps/bitcoin16.xpm?ref=ddeacfcff563b602b8833287a34dfbee340e5bec"
      },
      {
        "sha": "1d42116ef1199d86749d17f1740121a659262f4a",
        "filename": "share/pixmaps/bitcoin256.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/share/pixmaps/bitcoin256.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/share/pixmaps/bitcoin256.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/pixmaps/bitcoin256.png?ref=ddeacfcff563b602b8833287a34dfbee340e5bec"
      },
      {
        "sha": "87bb35cdadd6b5eddd394ec277b4d5713f38f7a0",
        "filename": "share/pixmaps/bitcoin256.xpm",
        "status": "removed",
        "additions": 0,
        "deletions": 465,
        "changes": 465,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/share/pixmaps/bitcoin256.xpm",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/share/pixmaps/bitcoin256.xpm",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/pixmaps/bitcoin256.xpm?ref=ddeacfcff563b602b8833287a34dfbee340e5bec"
      },
      {
        "sha": "367abfcc8e0f48779b51a99d03f3389f216c6c8c",
        "filename": "share/pixmaps/bitcoin32.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddeacfcff563b602b8833287a34dfbee340e5bec/share/pixmaps/bitcoin32.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddeacfcff563b602b8833287a34dfbee340e5bec/share/pixmaps/bitcoin32.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/pixmaps/bitcoin32.png?ref=ddeacfcff563b602b8833287a34dfbee340e5bec"
      }
    ]
  },
  {
    "sha": "64978ddf2d287705b73346a1a021b5104b5f48e8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2NDk3OGRkZjJkMjg3NzA1YjczMzQ2YTFhMDIxYjUxMDRiNWY0OGU4",
    "commit": {
      "author": {
        "name": "RavenCoinDev",
        "email": "ravencoindev@gmail.com",
        "date": "2018-01-05T18:12:49Z"
      },
      "committer": {
        "name": "RavenCoinDev",
        "email": "ravencoindev@gmail.com",
        "date": "2018-01-05T18:12:49Z"
      },
      "message": "Moved the binary releases back into the binaries directory",
      "tree": {
        "sha": "f6be3cb98df5cdb66e39dbd70400af71ce67fac1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f6be3cb98df5cdb66e39dbd70400af71ce67fac1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/64978ddf2d287705b73346a1a021b5104b5f48e8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/64978ddf2d287705b73346a1a021b5104b5f48e8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/64978ddf2d287705b73346a1a021b5104b5f48e8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/64978ddf2d287705b73346a1a021b5104b5f48e8/comments",
    "author": {
      "login": "RavenCoinDev",
      "id": 35130252,
      "node_id": "MDQ6VXNlcjM1MTMwMjUy",
      "avatar_url": "https://avatars.githubusercontent.com/u/35130252?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RavenCoinDev",
      "html_url": "https://github.com/RavenCoinDev",
      "followers_url": "https://api.github.com/users/RavenCoinDev/followers",
      "following_url": "https://api.github.com/users/RavenCoinDev/following{/other_user}",
      "gists_url": "https://api.github.com/users/RavenCoinDev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RavenCoinDev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RavenCoinDev/subscriptions",
      "organizations_url": "https://api.github.com/users/RavenCoinDev/orgs",
      "repos_url": "https://api.github.com/users/RavenCoinDev/repos",
      "events_url": "https://api.github.com/users/RavenCoinDev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RavenCoinDev/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "RavenCoinDev",
      "id": 35130252,
      "node_id": "MDQ6VXNlcjM1MTMwMjUy",
      "avatar_url": "https://avatars.githubusercontent.com/u/35130252?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RavenCoinDev",
      "html_url": "https://github.com/RavenCoinDev",
      "followers_url": "https://api.github.com/users/RavenCoinDev/followers",
      "following_url": "https://api.github.com/users/RavenCoinDev/following{/other_user}",
      "gists_url": "https://api.github.com/users/RavenCoinDev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RavenCoinDev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RavenCoinDev/subscriptions",
      "organizations_url": "https://api.github.com/users/RavenCoinDev/orgs",
      "repos_url": "https://api.github.com/users/RavenCoinDev/repos",
      "events_url": "https://api.github.com/users/RavenCoinDev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RavenCoinDev/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "de86fc295a089c93c852aaa2cef56116eb71ef96",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/de86fc295a089c93c852aaa2cef56116eb71ef96",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/de86fc295a089c93c852aaa2cef56116eb71ef96"
      }
    ],
    "stats": {
      "total": 0,
      "additions": 0,
      "deletions": 0
    },
    "files": [
      {
        "sha": "89ed6aaa1620a9ab9f139551e838e447dfcde485",
        "filename": "binaries/pre-release/linux/README.md",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/64978ddf2d287705b73346a1a021b5104b5f48e8/binaries/pre-release/linux/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/64978ddf2d287705b73346a1a021b5104b5f48e8/binaries/pre-release/linux/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/pre-release/linux/README.md?ref=64978ddf2d287705b73346a1a021b5104b5f48e8",
        "previous_filename": "pre-release/linux/README.md"
      },
      {
        "sha": "ff594e3ffe3db529fb13464a879242bd232f555a",
        "filename": "binaries/pre-release/mac/README.md",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/64978ddf2d287705b73346a1a021b5104b5f48e8/binaries/pre-release/mac/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/64978ddf2d287705b73346a1a021b5104b5f48e8/binaries/pre-release/mac/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/pre-release/mac/README.md?ref=64978ddf2d287705b73346a1a021b5104b5f48e8",
        "previous_filename": "pre-release/mac/README.md"
      },
      {
        "sha": "d4d3c50f579571ef9537fc6d19fc7592528cc3ca",
        "filename": "binaries/pre-release/windows/README.md",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/64978ddf2d287705b73346a1a021b5104b5f48e8/binaries/pre-release/windows/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/64978ddf2d287705b73346a1a021b5104b5f48e8/binaries/pre-release/windows/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/pre-release/windows/README.md?ref=64978ddf2d287705b73346a1a021b5104b5f48e8",
        "previous_filename": "pre-release/windows/README.md"
      },
      {
        "sha": "8d1c8b69c3fce7bea45c73efd06983e3c419a92f",
        "filename": "binaries/release/README.md",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/64978ddf2d287705b73346a1a021b5104b5f48e8/binaries/release/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/64978ddf2d287705b73346a1a021b5104b5f48e8/binaries/release/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/README.md?ref=64978ddf2d287705b73346a1a021b5104b5f48e8",
        "previous_filename": "release/README.md"
      },
      {
        "sha": "89ed6aaa1620a9ab9f139551e838e447dfcde485",
        "filename": "binaries/release/linux/README.md",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/64978ddf2d287705b73346a1a021b5104b5f48e8/binaries/release/linux/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/64978ddf2d287705b73346a1a021b5104b5f48e8/binaries/release/linux/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/linux/README.md?ref=64978ddf2d287705b73346a1a021b5104b5f48e8",
        "previous_filename": "release/linux/README.md"
      },
      {
        "sha": "0930b1242fae97c59afb87ff5cd2fb31cbd6aa49",
        "filename": "binaries/release/linux/centos_7/md5sum",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/64978ddf2d287705b73346a1a021b5104b5f48e8/binaries/release/linux/centos_7/md5sum",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/64978ddf2d287705b73346a1a021b5104b5f48e8/binaries/release/linux/centos_7/md5sum",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/linux/centos_7/md5sum?ref=64978ddf2d287705b73346a1a021b5104b5f48e8",
        "previous_filename": "release/linux/centos_7/md5sum"
      },
      {
        "sha": "47d82ce2ca93da46d4d06cc7074b37e6036e84b9",
        "filename": "binaries/release/linux/centos_7/raven-cli",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/64978ddf2d287705b73346a1a021b5104b5f48e8/binaries/release/linux/centos_7/raven-cli",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/64978ddf2d287705b73346a1a021b5104b5f48e8/binaries/release/linux/centos_7/raven-cli",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/linux/centos_7/raven-cli?ref=64978ddf2d287705b73346a1a021b5104b5f48e8",
        "previous_filename": "release/linux/centos_7/raven-cli"
      },
      {
        "sha": "9c058f40bc52165b20dd6b2a4d86ab73ee083878",
        "filename": "binaries/release/linux/centos_7/raven-tx",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/64978ddf2d287705b73346a1a021b5104b5f48e8/binaries/release/linux/centos_7/raven-tx",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/64978ddf2d287705b73346a1a021b5104b5f48e8/binaries/release/linux/centos_7/raven-tx",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/linux/centos_7/raven-tx?ref=64978ddf2d287705b73346a1a021b5104b5f48e8",
        "previous_filename": "release/linux/centos_7/raven-tx"
      },
      {
        "sha": "d97ad97bcee4585260687ed6ee04456b29dc91a8",
        "filename": "binaries/release/linux/centos_7/ravend",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/64978ddf2d287705b73346a1a021b5104b5f48e8/binaries/release/linux/centos_7/ravend",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/64978ddf2d287705b73346a1a021b5104b5f48e8/binaries/release/linux/centos_7/ravend",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/linux/centos_7/ravend?ref=64978ddf2d287705b73346a1a021b5104b5f48e8",
        "previous_filename": "release/linux/centos_7/ravend"
      },
      {
        "sha": "8cb1ccfa2e54f85be585b5038a5a5ddcbed4debd",
        "filename": "binaries/release/linux/centos_7/sha256sum",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/64978ddf2d287705b73346a1a021b5104b5f48e8/binaries/release/linux/centos_7/sha256sum",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/64978ddf2d287705b73346a1a021b5104b5f48e8/binaries/release/linux/centos_7/sha256sum",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/linux/centos_7/sha256sum?ref=64978ddf2d287705b73346a1a021b5104b5f48e8",
        "previous_filename": "release/linux/centos_7/sha256sum"
      },
      {
        "sha": "3a8730f530738e8c21684692e466b2ea7153bfa8",
        "filename": "binaries/release/linux/fedora/md5sum",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/64978ddf2d287705b73346a1a021b5104b5f48e8/binaries/release/linux/fedora/md5sum",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/64978ddf2d287705b73346a1a021b5104b5f48e8/binaries/release/linux/fedora/md5sum",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/linux/fedora/md5sum?ref=64978ddf2d287705b73346a1a021b5104b5f48e8",
        "previous_filename": "release/linux/fedora/md5sum"
      },
      {
        "sha": "adf8bf1ecee728cf5a3ddc808dce3349ccc91f44",
        "filename": "binaries/release/linux/fedora/raven-cli",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/64978ddf2d287705b73346a1a021b5104b5f48e8/binaries/release/linux/fedora/raven-cli",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/64978ddf2d287705b73346a1a021b5104b5f48e8/binaries/release/linux/fedora/raven-cli",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/linux/fedora/raven-cli?ref=64978ddf2d287705b73346a1a021b5104b5f48e8",
        "previous_filename": "release/linux/fedora/raven-cli"
      },
      {
        "sha": "420234b454cfdeab0ce4885386795cb8f6a1da87",
        "filename": "binaries/release/linux/fedora/raven-tx",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/64978ddf2d287705b73346a1a021b5104b5f48e8/binaries/release/linux/fedora/raven-tx",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/64978ddf2d287705b73346a1a021b5104b5f48e8/binaries/release/linux/fedora/raven-tx",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/linux/fedora/raven-tx?ref=64978ddf2d287705b73346a1a021b5104b5f48e8",
        "previous_filename": "release/linux/fedora/raven-tx"
      },
      {
        "sha": "3a92d2bf8079911def604e5fc3bfc193cecfcb19",
        "filename": "binaries/release/linux/fedora/ravend",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/64978ddf2d287705b73346a1a021b5104b5f48e8/binaries/release/linux/fedora/ravend",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/64978ddf2d287705b73346a1a021b5104b5f48e8/binaries/release/linux/fedora/ravend",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/linux/fedora/ravend?ref=64978ddf2d287705b73346a1a021b5104b5f48e8",
        "previous_filename": "release/linux/fedora/ravend"
      },
      {
        "sha": "bbc58d2b4eee50a4dbd6aaec4ff35c6b6d8d9c5b",
        "filename": "binaries/release/linux/fedora/sha256sum",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/64978ddf2d287705b73346a1a021b5104b5f48e8/binaries/release/linux/fedora/sha256sum",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/64978ddf2d287705b73346a1a021b5104b5f48e8/binaries/release/linux/fedora/sha256sum",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/linux/fedora/sha256sum?ref=64978ddf2d287705b73346a1a021b5104b5f48e8",
        "previous_filename": "release/linux/fedora/sha256sum"
      },
      {
        "sha": "eb8996efdc068ba3977de20f632709a7eacddd6c",
        "filename": "binaries/release/linux/ubuntu_16.04/md5sum",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/64978ddf2d287705b73346a1a021b5104b5f48e8/binaries/release/linux/ubuntu_16.04/md5sum",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/64978ddf2d287705b73346a1a021b5104b5f48e8/binaries/release/linux/ubuntu_16.04/md5sum",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/linux/ubuntu_16.04/md5sum?ref=64978ddf2d287705b73346a1a021b5104b5f48e8",
        "previous_filename": "release/linux/ubuntu_16.04/md5sum"
      },
      {
        "sha": "7b6695d4674cfac0fe294e267a9a133161d7651d",
        "filename": "binaries/release/linux/ubuntu_16.04/raven-cli",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/64978ddf2d287705b73346a1a021b5104b5f48e8/binaries/release/linux/ubuntu_16.04/raven-cli",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/64978ddf2d287705b73346a1a021b5104b5f48e8/binaries/release/linux/ubuntu_16.04/raven-cli",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/linux/ubuntu_16.04/raven-cli?ref=64978ddf2d287705b73346a1a021b5104b5f48e8",
        "previous_filename": "release/linux/ubuntu_16.04/raven-cli"
      },
      {
        "sha": "a36424760bb3490e4e04ce36f8d6b321ca36a42f",
        "filename": "binaries/release/linux/ubuntu_16.04/raven-tx",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/64978ddf2d287705b73346a1a021b5104b5f48e8/binaries/release/linux/ubuntu_16.04/raven-tx",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/64978ddf2d287705b73346a1a021b5104b5f48e8/binaries/release/linux/ubuntu_16.04/raven-tx",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/linux/ubuntu_16.04/raven-tx?ref=64978ddf2d287705b73346a1a021b5104b5f48e8",
        "previous_filename": "release/linux/ubuntu_16.04/raven-tx"
      },
      {
        "sha": "386e06654606fa90959e6c9edc8cb800733e3946",
        "filename": "binaries/release/linux/ubuntu_16.04/ravend",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/64978ddf2d287705b73346a1a021b5104b5f48e8/binaries/release/linux/ubuntu_16.04/ravend",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/64978ddf2d287705b73346a1a021b5104b5f48e8/binaries/release/linux/ubuntu_16.04/ravend",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/linux/ubuntu_16.04/ravend?ref=64978ddf2d287705b73346a1a021b5104b5f48e8",
        "previous_filename": "release/linux/ubuntu_16.04/ravend"
      },
      {
        "sha": "c13d5ae794ada5531b5568286a82cfeed5f071d9",
        "filename": "binaries/release/linux/ubuntu_16.04/sha256sum",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/64978ddf2d287705b73346a1a021b5104b5f48e8/binaries/release/linux/ubuntu_16.04/sha256sum",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/64978ddf2d287705b73346a1a021b5104b5f48e8/binaries/release/linux/ubuntu_16.04/sha256sum",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/linux/ubuntu_16.04/sha256sum?ref=64978ddf2d287705b73346a1a021b5104b5f48e8",
        "previous_filename": "release/linux/ubuntu_16.04/sha256sum"
      },
      {
        "sha": "59edf142be88956ab0478485a08d76cf95e1279d",
        "filename": "binaries/release/linux/ubuntu_17.04/md5sum",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/64978ddf2d287705b73346a1a021b5104b5f48e8/binaries/release/linux/ubuntu_17.04/md5sum",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/64978ddf2d287705b73346a1a021b5104b5f48e8/binaries/release/linux/ubuntu_17.04/md5sum",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/linux/ubuntu_17.04/md5sum?ref=64978ddf2d287705b73346a1a021b5104b5f48e8",
        "previous_filename": "release/linux/ubuntu_17.04/md5sum"
      },
      {
        "sha": "1a70030792ad829988db38be0eea6bbbe86908a2",
        "filename": "binaries/release/linux/ubuntu_17.04/raven-cli",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/64978ddf2d287705b73346a1a021b5104b5f48e8/binaries/release/linux/ubuntu_17.04/raven-cli",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/64978ddf2d287705b73346a1a021b5104b5f48e8/binaries/release/linux/ubuntu_17.04/raven-cli",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/linux/ubuntu_17.04/raven-cli?ref=64978ddf2d287705b73346a1a021b5104b5f48e8",
        "previous_filename": "release/linux/ubuntu_17.04/raven-cli"
      },
      {
        "sha": "3f9a661315d0d75093a87ff17a38285e820e9e41",
        "filename": "binaries/release/linux/ubuntu_17.04/raven-tx",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/64978ddf2d287705b73346a1a021b5104b5f48e8/binaries/release/linux/ubuntu_17.04/raven-tx",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/64978ddf2d287705b73346a1a021b5104b5f48e8/binaries/release/linux/ubuntu_17.04/raven-tx",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/linux/ubuntu_17.04/raven-tx?ref=64978ddf2d287705b73346a1a021b5104b5f48e8",
        "previous_filename": "release/linux/ubuntu_17.04/raven-tx"
      },
      {
        "sha": "5f1c08d3c8834224f545f800e9bcea4a111e6ac3",
        "filename": "binaries/release/linux/ubuntu_17.04/ravend",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/64978ddf2d287705b73346a1a021b5104b5f48e8/binaries/release/linux/ubuntu_17.04/ravend",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/64978ddf2d287705b73346a1a021b5104b5f48e8/binaries/release/linux/ubuntu_17.04/ravend",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/linux/ubuntu_17.04/ravend?ref=64978ddf2d287705b73346a1a021b5104b5f48e8",
        "previous_filename": "release/linux/ubuntu_17.04/ravend"
      },
      {
        "sha": "93629d38dc777df05d114387e626b67a438cb97b",
        "filename": "binaries/release/linux/ubuntu_17.04/sha256sum",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/64978ddf2d287705b73346a1a021b5104b5f48e8/binaries/release/linux/ubuntu_17.04/sha256sum",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/64978ddf2d287705b73346a1a021b5104b5f48e8/binaries/release/linux/ubuntu_17.04/sha256sum",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/linux/ubuntu_17.04/sha256sum?ref=64978ddf2d287705b73346a1a021b5104b5f48e8",
        "previous_filename": "release/linux/ubuntu_17.04/sha256sum"
      },
      {
        "sha": "ff594e3ffe3db529fb13464a879242bd232f555a",
        "filename": "binaries/release/mac/README.md",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/64978ddf2d287705b73346a1a021b5104b5f48e8/binaries/release/mac/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/64978ddf2d287705b73346a1a021b5104b5f48e8/binaries/release/mac/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/mac/README.md?ref=64978ddf2d287705b73346a1a021b5104b5f48e8",
        "previous_filename": "release/mac/README.md"
      },
      {
        "sha": "5494b501c81657c55117cd9dddedcd089bcd7344",
        "filename": "binaries/release/mac/Raven-Qt.dmg",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/64978ddf2d287705b73346a1a021b5104b5f48e8/binaries/release/mac/Raven-Qt.dmg",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/64978ddf2d287705b73346a1a021b5104b5f48e8/binaries/release/mac/Raven-Qt.dmg",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/mac/Raven-Qt.dmg?ref=64978ddf2d287705b73346a1a021b5104b5f48e8",
        "previous_filename": "release/mac/Raven-Qt.dmg"
      },
      {
        "sha": "de7c6075daf813953269733afd2ff7184256ccc6",
        "filename": "binaries/release/mac/md5sum",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/64978ddf2d287705b73346a1a021b5104b5f48e8/binaries/release/mac/md5sum",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/64978ddf2d287705b73346a1a021b5104b5f48e8/binaries/release/mac/md5sum",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/mac/md5sum?ref=64978ddf2d287705b73346a1a021b5104b5f48e8",
        "previous_filename": "release/mac/md5sum"
      },
      {
        "sha": "354cec60c04d268b867986d20c1e75068faa0135",
        "filename": "binaries/release/mac/raven-cli",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/64978ddf2d287705b73346a1a021b5104b5f48e8/binaries/release/mac/raven-cli",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/64978ddf2d287705b73346a1a021b5104b5f48e8/binaries/release/mac/raven-cli",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/mac/raven-cli?ref=64978ddf2d287705b73346a1a021b5104b5f48e8",
        "previous_filename": "release/mac/raven-cli"
      },
      {
        "sha": "7d8a29c00aefad135d13ff3fdc29f3d607dbe215",
        "filename": "binaries/release/mac/raven-tx",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/64978ddf2d287705b73346a1a021b5104b5f48e8/binaries/release/mac/raven-tx",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/64978ddf2d287705b73346a1a021b5104b5f48e8/binaries/release/mac/raven-tx",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/mac/raven-tx?ref=64978ddf2d287705b73346a1a021b5104b5f48e8",
        "previous_filename": "release/mac/raven-tx"
      },
      {
        "sha": "f67ff9a2186ef640f2f81b2f322ed3766ce01ed4",
        "filename": "binaries/release/mac/ravend",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/64978ddf2d287705b73346a1a021b5104b5f48e8/binaries/release/mac/ravend",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/64978ddf2d287705b73346a1a021b5104b5f48e8/binaries/release/mac/ravend",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/mac/ravend?ref=64978ddf2d287705b73346a1a021b5104b5f48e8",
        "previous_filename": "release/mac/ravend"
      },
      {
        "sha": "2faa953c1a82c70bdc64d9fb0456a419d0a817b0",
        "filename": "binaries/release/mac/sha256sum",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/64978ddf2d287705b73346a1a021b5104b5f48e8/binaries/release/mac/sha256sum",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/64978ddf2d287705b73346a1a021b5104b5f48e8/binaries/release/mac/sha256sum",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/mac/sha256sum?ref=64978ddf2d287705b73346a1a021b5104b5f48e8",
        "previous_filename": "release/mac/sha256sum"
      },
      {
        "sha": "d4d3c50f579571ef9537fc6d19fc7592528cc3ca",
        "filename": "binaries/release/windows/README.md",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/64978ddf2d287705b73346a1a021b5104b5f48e8/binaries/release/windows/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/64978ddf2d287705b73346a1a021b5104b5f48e8/binaries/release/windows/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/windows/README.md?ref=64978ddf2d287705b73346a1a021b5104b5f48e8",
        "previous_filename": "release/windows/README.md"
      },
      {
        "sha": "5bd5907777a79cea3c3c87c4906265b4382142e7",
        "filename": "binaries/release/windows/md5sum",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/64978ddf2d287705b73346a1a021b5104b5f48e8/binaries/release/windows/md5sum",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/64978ddf2d287705b73346a1a021b5104b5f48e8/binaries/release/windows/md5sum",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/windows/md5sum?ref=64978ddf2d287705b73346a1a021b5104b5f48e8",
        "previous_filename": "release/windows/md5sum"
      },
      {
        "sha": "c9342164791419baaf44dc8ec46e2d06d9bdb13e",
        "filename": "binaries/release/windows/raven-cli.exe",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/64978ddf2d287705b73346a1a021b5104b5f48e8/binaries/release/windows/raven-cli.exe",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/64978ddf2d287705b73346a1a021b5104b5f48e8/binaries/release/windows/raven-cli.exe",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/windows/raven-cli.exe?ref=64978ddf2d287705b73346a1a021b5104b5f48e8",
        "previous_filename": "release/windows/raven-cli.exe"
      },
      {
        "sha": "1930eaebe7f8001fac3782d38782599eb13e7d77",
        "filename": "binaries/release/windows/raven-qt.exe",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/64978ddf2d287705b73346a1a021b5104b5f48e8/binaries/release/windows/raven-qt.exe",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/64978ddf2d287705b73346a1a021b5104b5f48e8/binaries/release/windows/raven-qt.exe",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/windows/raven-qt.exe?ref=64978ddf2d287705b73346a1a021b5104b5f48e8",
        "previous_filename": "release/windows/raven-qt.exe"
      },
      {
        "sha": "3351b13da468d0c71cae95bfab9d4d4ed1d9d07d",
        "filename": "binaries/release/windows/raven-tx.exe",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/64978ddf2d287705b73346a1a021b5104b5f48e8/binaries/release/windows/raven-tx.exe",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/64978ddf2d287705b73346a1a021b5104b5f48e8/binaries/release/windows/raven-tx.exe",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/windows/raven-tx.exe?ref=64978ddf2d287705b73346a1a021b5104b5f48e8",
        "previous_filename": "release/windows/raven-tx.exe"
      },
      {
        "sha": "8aeac3f849b3c267c63f96994aafde42f8caf37a",
        "filename": "binaries/release/windows/ravend.exe",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/64978ddf2d287705b73346a1a021b5104b5f48e8/binaries/release/windows/ravend.exe",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/64978ddf2d287705b73346a1a021b5104b5f48e8/binaries/release/windows/ravend.exe",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/windows/ravend.exe?ref=64978ddf2d287705b73346a1a021b5104b5f48e8",
        "previous_filename": "release/windows/ravend.exe"
      },
      {
        "sha": "6121aebed63aab3ef8e021756c4c5ac7b902e5c5",
        "filename": "binaries/release/windows/sha256sum",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/64978ddf2d287705b73346a1a021b5104b5f48e8/binaries/release/windows/sha256sum",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/64978ddf2d287705b73346a1a021b5104b5f48e8/binaries/release/windows/sha256sum",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/windows/sha256sum?ref=64978ddf2d287705b73346a1a021b5104b5f48e8",
        "previous_filename": "release/windows/sha256sum"
      }
    ]
  },
  {
    "sha": "811bb1c727868bfa7ae315e10ad8247950f64533",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4MTFiYjFjNzI3ODY4YmZhN2FlMzE1ZTEwYWQ4MjQ3OTUwZjY0NTMz",
    "commit": {
      "author": {
        "name": "RavenCoinDev",
        "email": "ravencoindev@gmail.com",
        "date": "2018-01-09T23:59:59Z"
      },
      "committer": {
        "name": "RavenCoinDev",
        "email": "ravencoindev@gmail.com",
        "date": "2018-01-09T23:59:59Z"
      },
      "message": "Added linux QT apps and an updated Mac QT app",
      "tree": {
        "sha": "cd6d53b061cf5c453c9886679561fb4f2cdf407a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cd6d53b061cf5c453c9886679561fb4f2cdf407a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/811bb1c727868bfa7ae315e10ad8247950f64533",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/811bb1c727868bfa7ae315e10ad8247950f64533",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/811bb1c727868bfa7ae315e10ad8247950f64533",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/811bb1c727868bfa7ae315e10ad8247950f64533/comments",
    "author": {
      "login": "RavenCoinDev",
      "id": 35130252,
      "node_id": "MDQ6VXNlcjM1MTMwMjUy",
      "avatar_url": "https://avatars.githubusercontent.com/u/35130252?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RavenCoinDev",
      "html_url": "https://github.com/RavenCoinDev",
      "followers_url": "https://api.github.com/users/RavenCoinDev/followers",
      "following_url": "https://api.github.com/users/RavenCoinDev/following{/other_user}",
      "gists_url": "https://api.github.com/users/RavenCoinDev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RavenCoinDev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RavenCoinDev/subscriptions",
      "organizations_url": "https://api.github.com/users/RavenCoinDev/orgs",
      "repos_url": "https://api.github.com/users/RavenCoinDev/repos",
      "events_url": "https://api.github.com/users/RavenCoinDev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RavenCoinDev/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "RavenCoinDev",
      "id": 35130252,
      "node_id": "MDQ6VXNlcjM1MTMwMjUy",
      "avatar_url": "https://avatars.githubusercontent.com/u/35130252?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RavenCoinDev",
      "html_url": "https://github.com/RavenCoinDev",
      "followers_url": "https://api.github.com/users/RavenCoinDev/followers",
      "following_url": "https://api.github.com/users/RavenCoinDev/following{/other_user}",
      "gists_url": "https://api.github.com/users/RavenCoinDev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RavenCoinDev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RavenCoinDev/subscriptions",
      "organizations_url": "https://api.github.com/users/RavenCoinDev/orgs",
      "repos_url": "https://api.github.com/users/RavenCoinDev/repos",
      "events_url": "https://api.github.com/users/RavenCoinDev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RavenCoinDev/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "64978ddf2d287705b73346a1a021b5104b5f48e8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/64978ddf2d287705b73346a1a021b5104b5f48e8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/64978ddf2d287705b73346a1a021b5104b5f48e8"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 2,
      "deletions": 3
    },
    "files": [
      {
        "sha": "fe08e228f4865b10f683567b657fddb195768b20",
        "filename": ".gitignore",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/811bb1c727868bfa7ae315e10ad8247950f64533/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/811bb1c727868bfa7ae315e10ad8247950f64533/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.gitignore?ref=811bb1c727868bfa7ae315e10ad8247950f64533",
        "patch": "@@ -79,7 +79,6 @@ src/qt/test/moc*.cpp\n # Compilation and Qt preprocessor part\n *.qm\n Makefile\n-raven-qt\n Raven-Qt.app\n \n # Unit-tests"
      },
      {
        "sha": "a719e7bdb19a659d7d09164f36c178dbb3b040a9",
        "filename": "binaries/release/linux/centos_7/raven-qt",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/811bb1c727868bfa7ae315e10ad8247950f64533/binaries/release/linux/centos_7/raven-qt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/811bb1c727868bfa7ae315e10ad8247950f64533/binaries/release/linux/centos_7/raven-qt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/linux/centos_7/raven-qt?ref=811bb1c727868bfa7ae315e10ad8247950f64533"
      },
      {
        "sha": "05af95b44caa4052d956dde161242384cde00714",
        "filename": "binaries/release/linux/fedora/raven-qt",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/811bb1c727868bfa7ae315e10ad8247950f64533/binaries/release/linux/fedora/raven-qt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/811bb1c727868bfa7ae315e10ad8247950f64533/binaries/release/linux/fedora/raven-qt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/linux/fedora/raven-qt?ref=811bb1c727868bfa7ae315e10ad8247950f64533"
      },
      {
        "sha": "21834a9defcd8fc81a11d373a0a80f7c8fc608c4",
        "filename": "binaries/release/linux/ubuntu_16.04/raven-qt",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/811bb1c727868bfa7ae315e10ad8247950f64533/binaries/release/linux/ubuntu_16.04/raven-qt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/811bb1c727868bfa7ae315e10ad8247950f64533/binaries/release/linux/ubuntu_16.04/raven-qt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/linux/ubuntu_16.04/raven-qt?ref=811bb1c727868bfa7ae315e10ad8247950f64533"
      },
      {
        "sha": "9f46227181d5116a71f41b494e9715412f28af5e",
        "filename": "binaries/release/linux/ubuntu_17.04/raven-qt",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/811bb1c727868bfa7ae315e10ad8247950f64533/binaries/release/linux/ubuntu_17.04/raven-qt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/811bb1c727868bfa7ae315e10ad8247950f64533/binaries/release/linux/ubuntu_17.04/raven-qt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/linux/ubuntu_17.04/raven-qt?ref=811bb1c727868bfa7ae315e10ad8247950f64533"
      },
      {
        "sha": "e8d648dfd771375084e875fa7d381045971359ee",
        "filename": "binaries/release/mac/Raven-Qt.dmg",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/811bb1c727868bfa7ae315e10ad8247950f64533/binaries/release/mac/Raven-Qt.dmg",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/811bb1c727868bfa7ae315e10ad8247950f64533/binaries/release/mac/Raven-Qt.dmg",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/mac/Raven-Qt.dmg?ref=811bb1c727868bfa7ae315e10ad8247950f64533"
      },
      {
        "sha": "fec25a616b943e6a067cd237ad1854c1f9e9eda1",
        "filename": "binaries/release/mac/md5sum",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/811bb1c727868bfa7ae315e10ad8247950f64533/binaries/release/mac/md5sum",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/811bb1c727868bfa7ae315e10ad8247950f64533/binaries/release/mac/md5sum",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/mac/md5sum?ref=811bb1c727868bfa7ae315e10ad8247950f64533",
        "patch": "@@ -2,4 +2,4 @@ MD5 (raven-cli) = ce44a94ea6b4be45f5a89d0f303fc529\n MD5 (raven-qt) = 500711d0ffc7470bfcad2d22fe8b30c8\n MD5 (raven-tx) = 173690818bb27504353a1183a0d82d22\n MD5 (ravend) = 409e6d375d060df2bbf83c229c63cc67\n-MD5 (Raven-Qt.dmg) = d4fe0cb07122ff7bc22e022f6b043e35\n+MD5 (Raven-Qt.dmg) = 5e1fefbab829ac68632292086e858fbc"
      },
      {
        "sha": "bbc54a5f6fba1872d89e741b92ad58a1e62c8d9f",
        "filename": "binaries/release/mac/raven-qt",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/811bb1c727868bfa7ae315e10ad8247950f64533/binaries/release/mac/raven-qt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/811bb1c727868bfa7ae315e10ad8247950f64533/binaries/release/mac/raven-qt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/mac/raven-qt?ref=811bb1c727868bfa7ae315e10ad8247950f64533"
      },
      {
        "sha": "c439bc2d29320eec91918641a27b28f13a532b48",
        "filename": "binaries/release/mac/sha256sum",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/811bb1c727868bfa7ae315e10ad8247950f64533/binaries/release/mac/sha256sum",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/811bb1c727868bfa7ae315e10ad8247950f64533/binaries/release/mac/sha256sum",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/binaries/release/mac/sha256sum?ref=811bb1c727868bfa7ae315e10ad8247950f64533",
        "patch": "@@ -2,4 +2,4 @@\n 0ffdaddba715eaf6368d615af7e5b55c575c6ad3bbdbca1802a71df24acd9df5  raven-qt\n f5790ec8f992c55a29c19c38641d1970b1a2af39192403e61e687dde7d9419d3  raven-tx\n 7f67c1d96acb888797438ff4649b47492062b4f44052c0c59e5ca5610d08b494  ravend\n-8affffd7f8e2d7d86c1abf62385bd71b971e0a96f26cc34318f81fcadc83bd9f  Raven-Qt.dmg\n+3516f13086956f5dca4bf9ba7e9da65459f998adeee4a68ed4d4af2ebbef4004  Raven-Qt.dmg"
      }
    ]
  },
  {
    "sha": "d5bd50691d6a2769740a9e4a882517ba234b4c7d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkNWJkNTA2OTFkNmEyNzY5NzQwYTllNGE4ODI1MTdiYTIzNGI0Yzdk",
    "commit": {
      "author": {
        "name": "RavenCoinDev",
        "email": "ravencoindev@gmail.com",
        "date": "2018-01-10T21:55:13Z"
      },
      "committer": {
        "name": "RavenCoinDev",
        "email": "ravencoindev@gmail.com",
        "date": "2018-01-10T21:55:13Z"
      },
      "message": "Update README",
      "tree": {
        "sha": "babeaac789a60ee7f23d0d768abad743ea077c98",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/babeaac789a60ee7f23d0d768abad743ea077c98"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d5bd50691d6a2769740a9e4a882517ba234b4c7d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d5bd50691d6a2769740a9e4a882517ba234b4c7d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d5bd50691d6a2769740a9e4a882517ba234b4c7d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d5bd50691d6a2769740a9e4a882517ba234b4c7d/comments",
    "author": {
      "login": "RavenCoinDev",
      "id": 35130252,
      "node_id": "MDQ6VXNlcjM1MTMwMjUy",
      "avatar_url": "https://avatars.githubusercontent.com/u/35130252?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RavenCoinDev",
      "html_url": "https://github.com/RavenCoinDev",
      "followers_url": "https://api.github.com/users/RavenCoinDev/followers",
      "following_url": "https://api.github.com/users/RavenCoinDev/following{/other_user}",
      "gists_url": "https://api.github.com/users/RavenCoinDev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RavenCoinDev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RavenCoinDev/subscriptions",
      "organizations_url": "https://api.github.com/users/RavenCoinDev/orgs",
      "repos_url": "https://api.github.com/users/RavenCoinDev/repos",
      "events_url": "https://api.github.com/users/RavenCoinDev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RavenCoinDev/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "RavenCoinDev",
      "id": 35130252,
      "node_id": "MDQ6VXNlcjM1MTMwMjUy",
      "avatar_url": "https://avatars.githubusercontent.com/u/35130252?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RavenCoinDev",
      "html_url": "https://github.com/RavenCoinDev",
      "followers_url": "https://api.github.com/users/RavenCoinDev/followers",
      "following_url": "https://api.github.com/users/RavenCoinDev/following{/other_user}",
      "gists_url": "https://api.github.com/users/RavenCoinDev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RavenCoinDev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RavenCoinDev/subscriptions",
      "organizations_url": "https://api.github.com/users/RavenCoinDev/orgs",
      "repos_url": "https://api.github.com/users/RavenCoinDev/repos",
      "events_url": "https://api.github.com/users/RavenCoinDev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RavenCoinDev/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "811bb1c727868bfa7ae315e10ad8247950f64533",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/811bb1c727868bfa7ae315e10ad8247950f64533",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/811bb1c727868bfa7ae315e10ad8247950f64533"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 1,
      "deletions": 18
    },
    "files": [
      {
        "sha": "d219494a24a83b2f914416b56842f33c6764f218",
        "filename": "README.md",
        "status": "modified",
        "additions": 1,
        "deletions": 18,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d5bd50691d6a2769740a9e4a882517ba234b4c7d/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d5bd50691d6a2769740a9e4a882517ba234b4c7d/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/README.md?ref=d5bd50691d6a2769740a9e4a882517ba234b4c7d",
        "patch": "@@ -1,8 +1,6 @@\n Raven Core integration/staging tree\n =====================================\n \n-[![Build Status](https://travis-ci.org/raven/raven.svg?branch=master)](https://travis-ci.org/raven/raven)\n-\n https://ravencoin.org\n \n What is Raven?\n@@ -15,8 +13,7 @@ out collectively by the network. Raven Core is the name of open source\n software which enables the use of this currency.\n \n For more information, as well as an immediately useable, binary version of\n-the Raven Core software, see https://raven.org/en/download, or read the\n-[original whitepaper](https://ravencoin.org/raven.pdf).\n+the Raven Core software, see https://ravencoin.org\n \n License\n -------\n@@ -58,7 +55,6 @@ There are also [regression and integration tests](/test), written\n in Python, that are run automatically on the build server.\n These tests can be run (if the [test dependencies](/test) are installed) with: `test/functional/test_runner.py`\n \n-The Travis CI system makes sure that every pull request is built for Windows, Linux, and OS X, and that unit/sanity tests are run automatically.\n \n ### Manual Quality Assurance (QA) Testing\n \n@@ -67,19 +63,6 @@ code. This is especially important for large or high-risk changes. It is useful\n to add a test plan to the pull request description if testing the changes is\n not straightforward.\n \n-Translations\n-------------\n-\n-Changes to translations as well as new translations can be submitted to\n-[Raven Core's Transifex page](https://www.transifex.com/projects/p/raven/).\n-\n-Translations are periodically pulled from Transifex and merged into the git repository. See the\n-[translation process](doc/translation_process.md) for details on how this works.\n-\n-**Important**: We do not accept translation changes as GitHub pull requests because the next\n-pull from Transifex would automatically overwrite them again.\n-\n-Translators should also subscribe to the [mailing list](https://groups.google.com/forum/#!forum/raven-translators).\n \n About Ravencoin\n ----------------"
      }
    ]
  },
  {
    "sha": "83135f235494438f4fdd1d37c10337baf1bcbcf8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4MzEzNWYyMzU0OTQ0MzhmNGZkZDFkMzdjMTAzMzdiYWYxYmNiY2Y4",
    "commit": {
      "author": {
        "name": "RavenCoinDev",
        "email": "ravencoindev@gmail.com",
        "date": "2018-01-21T20:36:26Z"
      },
      "committer": {
        "name": "RavenCoinDev",
        "email": "ravencoindev@gmail.com",
        "date": "2018-01-21T20:36:26Z"
      },
      "message": "fixed ppa to use when building for *nix",
      "tree": {
        "sha": "2bd7bb6dc3316b22e1132d30c08b8c6551cb54a2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2bd7bb6dc3316b22e1132d30c08b8c6551cb54a2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/83135f235494438f4fdd1d37c10337baf1bcbcf8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/83135f235494438f4fdd1d37c10337baf1bcbcf8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/83135f235494438f4fdd1d37c10337baf1bcbcf8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/83135f235494438f4fdd1d37c10337baf1bcbcf8/comments",
    "author": {
      "login": "RavenCoinDev",
      "id": 35130252,
      "node_id": "MDQ6VXNlcjM1MTMwMjUy",
      "avatar_url": "https://avatars.githubusercontent.com/u/35130252?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RavenCoinDev",
      "html_url": "https://github.com/RavenCoinDev",
      "followers_url": "https://api.github.com/users/RavenCoinDev/followers",
      "following_url": "https://api.github.com/users/RavenCoinDev/following{/other_user}",
      "gists_url": "https://api.github.com/users/RavenCoinDev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RavenCoinDev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RavenCoinDev/subscriptions",
      "organizations_url": "https://api.github.com/users/RavenCoinDev/orgs",
      "repos_url": "https://api.github.com/users/RavenCoinDev/repos",
      "events_url": "https://api.github.com/users/RavenCoinDev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RavenCoinDev/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "RavenCoinDev",
      "id": 35130252,
      "node_id": "MDQ6VXNlcjM1MTMwMjUy",
      "avatar_url": "https://avatars.githubusercontent.com/u/35130252?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RavenCoinDev",
      "html_url": "https://github.com/RavenCoinDev",
      "followers_url": "https://api.github.com/users/RavenCoinDev/followers",
      "following_url": "https://api.github.com/users/RavenCoinDev/following{/other_user}",
      "gists_url": "https://api.github.com/users/RavenCoinDev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RavenCoinDev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RavenCoinDev/subscriptions",
      "organizations_url": "https://api.github.com/users/RavenCoinDev/orgs",
      "repos_url": "https://api.github.com/users/RavenCoinDev/repos",
      "events_url": "https://api.github.com/users/RavenCoinDev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RavenCoinDev/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "811bb1c727868bfa7ae315e10ad8247950f64533",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/811bb1c727868bfa7ae315e10ad8247950f64533",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/811bb1c727868bfa7ae315e10ad8247950f64533"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "7ffe50e3a8d9c54638a1682cbea091ec06e1687a",
        "filename": "doc/build-unix.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/83135f235494438f4fdd1d37c10337baf1bcbcf8/doc/build-unix.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/83135f235494438f4fdd1d37c10337baf1bcbcf8/doc/build-unix.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-unix.md?ref=83135f235494438f4fdd1d37c10337baf1bcbcf8",
        "patch": "@@ -85,7 +85,7 @@ BerkeleyDB is required for the wallet.\n You can add the repository and install using the following commands:\n \n     sudo apt-get install software-properties-common\n-    sudo add-apt-repository ppa:raven/raven\n+    sudo add-apt-repository ppa:bitcoin/bitcoin\n     sudo apt-get update\n     sudo apt-get install libdb4.8-dev libdb4.8++-dev\n "
      }
    ]
  },
  {
    "sha": "0d16e713b50462f8600b9270a94d4d5291278260",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowZDE2ZTcxM2I1MDQ2MmY4NjAwYjkyNzBhOTRkNGQ1MjkxMjc4MjYw",
    "commit": {
      "author": {
        "name": "RavenCoinDev",
        "email": "ravencoindev@gmail.com",
        "date": "2018-01-21T20:36:50Z"
      },
      "committer": {
        "name": "RavenCoinDev",
        "email": "ravencoindev@gmail.com",
        "date": "2018-01-21T20:36:50Z"
      },
      "message": "Merge branch 'master' of https://github.com/RavenProject/Ravencoin",
      "tree": {
        "sha": "2224778964e52613c3d458a2ca39c3ecb8a20135",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2224778964e52613c3d458a2ca39c3ecb8a20135"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0d16e713b50462f8600b9270a94d4d5291278260",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0d16e713b50462f8600b9270a94d4d5291278260",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0d16e713b50462f8600b9270a94d4d5291278260",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0d16e713b50462f8600b9270a94d4d5291278260/comments",
    "author": {
      "login": "RavenCoinDev",
      "id": 35130252,
      "node_id": "MDQ6VXNlcjM1MTMwMjUy",
      "avatar_url": "https://avatars.githubusercontent.com/u/35130252?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RavenCoinDev",
      "html_url": "https://github.com/RavenCoinDev",
      "followers_url": "https://api.github.com/users/RavenCoinDev/followers",
      "following_url": "https://api.github.com/users/RavenCoinDev/following{/other_user}",
      "gists_url": "https://api.github.com/users/RavenCoinDev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RavenCoinDev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RavenCoinDev/subscriptions",
      "organizations_url": "https://api.github.com/users/RavenCoinDev/orgs",
      "repos_url": "https://api.github.com/users/RavenCoinDev/repos",
      "events_url": "https://api.github.com/users/RavenCoinDev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RavenCoinDev/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "RavenCoinDev",
      "id": 35130252,
      "node_id": "MDQ6VXNlcjM1MTMwMjUy",
      "avatar_url": "https://avatars.githubusercontent.com/u/35130252?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RavenCoinDev",
      "html_url": "https://github.com/RavenCoinDev",
      "followers_url": "https://api.github.com/users/RavenCoinDev/followers",
      "following_url": "https://api.github.com/users/RavenCoinDev/following{/other_user}",
      "gists_url": "https://api.github.com/users/RavenCoinDev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RavenCoinDev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RavenCoinDev/subscriptions",
      "organizations_url": "https://api.github.com/users/RavenCoinDev/orgs",
      "repos_url": "https://api.github.com/users/RavenCoinDev/repos",
      "events_url": "https://api.github.com/users/RavenCoinDev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RavenCoinDev/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "83135f235494438f4fdd1d37c10337baf1bcbcf8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/83135f235494438f4fdd1d37c10337baf1bcbcf8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/83135f235494438f4fdd1d37c10337baf1bcbcf8"
      },
      {
        "sha": "d5bd50691d6a2769740a9e4a882517ba234b4c7d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d5bd50691d6a2769740a9e4a882517ba234b4c7d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d5bd50691d6a2769740a9e4a882517ba234b4c7d"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 1,
      "deletions": 18
    },
    "files": [
      {
        "sha": "d219494a24a83b2f914416b56842f33c6764f218",
        "filename": "README.md",
        "status": "modified",
        "additions": 1,
        "deletions": 18,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0d16e713b50462f8600b9270a94d4d5291278260/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0d16e713b50462f8600b9270a94d4d5291278260/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/README.md?ref=0d16e713b50462f8600b9270a94d4d5291278260",
        "patch": "@@ -1,8 +1,6 @@\n Raven Core integration/staging tree\n =====================================\n \n-[![Build Status](https://travis-ci.org/raven/raven.svg?branch=master)](https://travis-ci.org/raven/raven)\n-\n https://ravencoin.org\n \n What is Raven?\n@@ -15,8 +13,7 @@ out collectively by the network. Raven Core is the name of open source\n software which enables the use of this currency.\n \n For more information, as well as an immediately useable, binary version of\n-the Raven Core software, see https://raven.org/en/download, or read the\n-[original whitepaper](https://ravencoin.org/raven.pdf).\n+the Raven Core software, see https://ravencoin.org\n \n License\n -------\n@@ -58,7 +55,6 @@ There are also [regression and integration tests](/test), written\n in Python, that are run automatically on the build server.\n These tests can be run (if the [test dependencies](/test) are installed) with: `test/functional/test_runner.py`\n \n-The Travis CI system makes sure that every pull request is built for Windows, Linux, and OS X, and that unit/sanity tests are run automatically.\n \n ### Manual Quality Assurance (QA) Testing\n \n@@ -67,19 +63,6 @@ code. This is especially important for large or high-risk changes. It is useful\n to add a test plan to the pull request description if testing the changes is\n not straightforward.\n \n-Translations\n-------------\n-\n-Changes to translations as well as new translations can be submitted to\n-[Raven Core's Transifex page](https://www.transifex.com/projects/p/raven/).\n-\n-Translations are periodically pulled from Transifex and merged into the git repository. See the\n-[translation process](doc/translation_process.md) for details on how this works.\n-\n-**Important**: We do not accept translation changes as GitHub pull requests because the next\n-pull from Transifex would automatically overwrite them again.\n-\n-Translators should also subscribe to the [mailing list](https://groups.google.com/forum/#!forum/raven-translators).\n \n About Ravencoin\n ----------------"
      }
    ]
  }
]