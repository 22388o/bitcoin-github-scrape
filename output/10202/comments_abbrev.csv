NicolasDorier,2017-04-18T02:23:00Z,"Fixed the end-of-line and fixed `wallet.cpp` to not break QT coin control as suggested by @TheBlueMatt .\nIn a follow up PR I will clean QT coin control dialog to use `AddKnownCoin`. I briefly tried to do that, it simplified quite a lot. I prefer keeping it in another PR though.",https://github.com/bitcoin/bitcoin/pull/10202#issuecomment-294654158,294654158,
jonasschnelli,2017-04-19T10:10:59Z,"Concept ACK.\nI think we should not have two code parts for handling pre-selected-inputs and I think we should avoid using `boost::optional` (if reasonable possible).",https://github.com/bitcoin/bitcoin/pull/10202#issuecomment-295201169,295201169,
kanzure,2017-05-12T17:13:21Z,"> Its really quite unfortunate we cant properly calculate fee when using most outputs here. Maybe its possible to assume, at a minimum, a compressed pubkey and standard signature size for ""normal"" things like P2PH? Alternatively, could force the user to provide some additional data, like a set of pubkeys needed.\n\nHow about user gives an estimated final transaction size (minus whatever fundrawt",https://github.com/bitcoin/bitcoin/pull/10202#issuecomment-301134038,301134038,
NicolasDorier,2017-05-17T08:23:43Z,"@kanzure I think nothing has to be done to calculate fee correctly. Currently, the user can just fill dummy input of the right size into the scriptSig, this would correctly evaluate the fees.",https://github.com/bitcoin/bitcoin/pull/10202#issuecomment-302021113,302021113,
NicolasDorier,2017-05-17T08:56:46Z,"I rebased, and rewrote this part https://github.com/bitcoin/bitcoin/pull/10202/files#diff-b2bb174788c7409b671c46ccc86034bdL2259 to be more diff friendly so you can see it is trivially right.",https://github.com/bitcoin/bitcoin/pull/10202#issuecomment-302028893,302028893,
NicolasDorier,2017-05-17T08:58:59Z,"@jonasschnelli I did not managed to find good alternative to `boost::optional`.  I tried `bool FindKnownCoin(coinst COutPoint&, CInputCoin& output)` but since CInputCoin can't be in uninitialized state, it does not work.\n\nI don't think it is such a big deal, we use `boost::optional` elsewhere and `std::optional` will eventually exist.",https://github.com/bitcoin/bitcoin/pull/10202#issuecomment-302029415,302029415,
jonasschnelli,2017-08-15T19:43:22Z,Needs rebase.,https://github.com/bitcoin/bitcoin/pull/10202#issuecomment-322568120,322568120,
NicolasDorier,2018-03-06T17:12:41Z,I workedaround this need for this.,https://github.com/bitcoin/bitcoin/pull/10202#issuecomment-370855798,370855798,
domob1812,2019-02-05T15:58:41Z,"This would indeed be very useful.  Was there a particular reason for closing this, or was it simply closed because it was no longer needed for you?  Would it make sense for me to take up the patch, rebase it and resubmit?  Or are there any technical objections to the code / approach itself?",https://github.com/bitcoin/bitcoin/pull/10202#issuecomment-460692752,460692752,
NicolasDorier,2019-02-09T11:00:18Z,"@domob1812 I closed it because for my projects I decided to stop using RPC's wallet API completely, and did my own wallet. It was the fastest way to reach my goal, so I did not wanted to spend time rebasing this over and over. Feel free to clone this PR and take care of it.",https://github.com/bitcoin/bitcoin/pull/10202#issuecomment-462034452,462034452,
domob1812,2019-02-10T10:18:09Z,"@NicolasDorier:  Thanks for the answer, that makes sense.  I also have other, more important things to work on for now, but then I'll consider taking over this PR when I run into the need to do this on my own projects.",https://github.com/bitcoin/bitcoin/pull/10202#issuecomment-462120007,462120007,
JeremyRand,2021-10-03T18:26:27Z,"Am I correct in inferring that if https://github.com/bitcoin/bitcoin/pull/17211 gets merged, that would eliminate the need for this PR?  Or does this PR do something that that PR doesn't do?",https://github.com/bitcoin/bitcoin/pull/10202#issuecomment-933001599,933001599,
TheBlueMatt,2017-04-17T19:45:44Z,Wont this break Qt coin control as-is? I believe it either needs a similar AddKnownCoins call or the old code needs to remain and just get a second option.,https://github.com/bitcoin/bitcoin/pull/10202#discussion_r111805843,111805843,src/wallet/wallet.cpp
jonasschnelli,2017-04-19T09:41:38Z,"Can we avoid `boost::optional`?\nMaybe `std::shared_ptr<CInputCoin>` should do it?\nMaybe switch the map keys to std::pair<uint256, int>?",https://github.com/bitcoin/bitcoin/pull/10202#discussion_r112158346,112158346,src/wallet/coincontrol.h
jonasschnelli,2017-04-19T09:43:59Z,"Why not use `setSelected` (and maybe extend/migrate it to fit your use-case), AFAIK they serve the same purpose (selecting an desired input over the GUI).\n\nI think this is not something we should fix in a follow-up PR because it kinda messes up the design.",https://github.com/bitcoin/bitcoin/pull/10202#discussion_r112158774,112158774,src/wallet/coincontrol.h
NicolasDorier,2017-04-19T11:29:17Z,"why? We are already using `boost::optional` from https://github.com/bitcoin/bitcoin/pull/10165/files#diff-b2bb174788c7409b671c46ccc86034bdR2088 . This will be implemented in `std::` in C++0x17 as well. I was kind of against it on https://github.com/bitcoin/bitcoin/pull/10165, but it turns out to be very handy.",https://github.com/bitcoin/bitcoin/pull/10202#discussion_r112177146,112177146,src/wallet/coincontrol.h
NicolasDorier,2017-04-19T11:31:58Z,"I briefly tried, but it changes lot's of stuff in the QT Code. I prefer doing it in a separate PR, as I fear the changes will be too hard to review.\n\nThe design of this PR will not be greatly impacted once I switch setSelected to use CInputCoin everywhere. Basically only this block https://github.com/bitcoin/bitcoin/pull/10202/files#diff-b2bb174788c7409b671c46ccc86034bdR2247  will need to be r",https://github.com/bitcoin/bitcoin/pull/10202#discussion_r112177563,112177563,src/wallet/coincontrol.h
NicolasDorier,2017-04-19T11:44:19Z,"Another solution is\n\n`bool FindKnownCoin(coinst COutPoint&, CInputCoin& output)`",https://github.com/bitcoin/bitcoin/pull/10202#discussion_r112179581,112179581,src/wallet/coincontrol.h
