[
  {
    "sha": "c43da3f183819f3def8a4d128489dafeef9307e6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjNDNkYTNmMTgzODE5ZjNkZWY4YTRkMTI4NDg5ZGFmZWVmOTMwN2U2",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2013-06-23T22:23:28Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2013-06-24T09:48:14Z"
      },
      "message": "Dump addresses every 15 minutes instead of 10 seconds",
      "tree": {
        "sha": "09f6d606ef372e776bec259f6ca63037ab6b816e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/09f6d606ef372e776bec259f6ca63037ab6b816e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c43da3f183819f3def8a4d128489dafeef9307e6",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c43da3f183819f3def8a4d128489dafeef9307e6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c43da3f183819f3def8a4d128489dafeef9307e6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c43da3f183819f3def8a4d128489dafeef9307e6/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fd967fed89a294622f24c8e97c0ed23afb969edd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fd967fed89a294622f24c8e97c0ed23afb969edd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fd967fed89a294622f24c8e97c0ed23afb969edd"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 6,
      "deletions": 3
    },
    "files": [
      {
        "sha": "5418c3de40609767c4c77485b791adcc398b7050",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c43da3f183819f3def8a4d128489dafeef9307e6/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c43da3f183819f3def8a4d128489dafeef9307e6/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=c43da3f183819f3def8a4d128489dafeef9307e6",
        "patch": "@@ -22,6 +22,9 @@\n #include <miniupnpc/upnperrors.h>\n #endif\n \n+// Dump addresses to peers.dat every 15 minutes (900s)\n+#define DUMP_ADDRESSES_INTERVAL 900\n+\n using namespace std;\n using namespace boost;\n \n@@ -1730,7 +1733,7 @@ void StartNode(boost::thread_group& threadGroup)\n     threadGroup.create_thread(boost::bind(&TraceThread<void (*)()>, \"msghand\", &ThreadMessageHandler));\n \n     // Dump network addresses\n-    threadGroup.create_thread(boost::bind(&LoopForever<void (*)()>, \"dumpaddr\", &DumpAddresses, 10000));\n+    threadGroup.create_thread(boost::bind(&LoopForever<void (*)()>, \"dumpaddr\", &DumpAddresses, DUMP_ADDRESSES_INTERVAL * 1000));\n }\n \n bool StopNode()"
      },
      {
        "sha": "bee2749c16a5810abd61630099ab2cf0e5ca48f3",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c43da3f183819f3def8a4d128489dafeef9307e6/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c43da3f183819f3def8a4d128489dafeef9307e6/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=c43da3f183819f3def8a4d128489dafeef9307e6",
        "patch": "@@ -527,7 +527,7 @@ inline uint32_t ByteReverse(uint32_t value)\n // Standard wrapper for do-something-forever thread functions.\n // \"Forever\" really means until the thread is interrupted.\n // Use it like:\n-//   new boost::thread(boost::bind(&LoopForever<void (*)()>, \"dumpaddr\", &DumpAddresses, 10000));\n+//   new boost::thread(boost::bind(&LoopForever<void (*)()>, \"dumpaddr\", &DumpAddresses, 900000));\n // or maybe:\n //    boost::function<void()> f = boost::bind(&FunctionWithArg, argument);\n //    threadGroup.create_thread(boost::bind(&LoopForever<boost::function<void()> >, \"nothing\", f, milliseconds));\n@@ -540,8 +540,8 @@ template <typename Callable> void LoopForever(const char* name,  Callable func,\n     {\n         while (1)\n         {\n-            func();\n             MilliSleep(msecs);\n+            func();\n         }\n     }\n     catch (boost::thread_interrupted)"
      }
    ]
  }
]