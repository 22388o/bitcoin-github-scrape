DrahtBot,2020-08-04 17:29:27,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19107 (p2p: Move all header verification into the network layer, extend logging by troygiorshev)\n* #16546 (External sign",https://github.com/bitcoin/bitcoin/pull/19660#issuecomment-668727310,668727310,
hebasto,2020-08-06 06:27:13,Concept ACK.,https://github.com/bitcoin/bitcoin/pull/19660#issuecomment-669729652,669729652,
theStack,2020-08-06 16:53:31,Concept ACK,https://github.com/bitcoin/bitcoin/pull/19660#issuecomment-670049619,670049619,
laanwj,2020-08-06 17:42:20,Squashed the fixme commits,https://github.com/bitcoin/bitcoin/pull/19660#issuecomment-670077923,670077923,
elichai,2020-08-08 11:20:13,"Nice! \nCode review ACK 0a8aa626dd69a357e1b798b07b64cf4177a464a3",https://github.com/bitcoin/bitcoin/pull/19660#issuecomment-670909667,670909667,
jonatack,2020-08-05 06:53:07,nit: Perhaps use the pre-increment (`++i`) operator.,https://github.com/bitcoin/bitcoin/pull/19660#discussion_r465511518,465511518,src/uint256.cpp
promag,2020-08-05 09:36:10,Nice.,https://github.com/bitcoin/bitcoin/pull/19660#discussion_r465600166,465600166,src/rpc/request.cpp
promag,2020-08-05 09:40:02,"Correct me if I'm wrong, but isn't this duplicating memory usage?",https://github.com/bitcoin/bitcoin/pull/19660#discussion_r465602335,465602335,src/uint256.cpp
laanwj,2020-08-05 09:42:25,Sounds good to me,https://github.com/bitcoin/bitcoin/pull/19660#discussion_r465603699,465603699,src/uint256.cpp
laanwj,2020-08-05 10:41:45,"Not really: is is a local variable, all this does is create a small (32 bytes for uint256) temporary buffer on the stack.\n(I've opted to do this instead of creating a vector from the iterators, which would be a heap allocation)",https://github.com/bitcoin/bitcoin/pull/19660#discussion_r465634975,465634975,src/uint256.cpp
hebasto,2020-08-06 06:46:39,Does `static` is really needed here?,https://github.com/bitcoin/bitcoin/pull/19660#discussion_r466180759,466180759,src/util/strencodings.h
hebasto,2020-08-06 06:47:28,"nit:\n```suggestion\n    static constexpr char hexmap[16] = { '0', '1', '2', '3', '4', '5', '6', '7',\n```",https://github.com/bitcoin/bitcoin/pull/19660#discussion_r466181100,466181100,src/util/strencodings.cpp
laanwj,2020-08-06 09:22:32,I don't think it is,https://github.com/bitcoin/bitcoin/pull/19660#discussion_r466271023,466271023,src/util/strencodings.h
laanwj,2020-08-06 09:23:19,"I'm not sure. Does this make a difference for an array?\n\nEdit: well it works so I don't think there any hurt in changing itâ€¦",https://github.com/bitcoin/bitcoin/pull/19660#discussion_r466271948,466271948,src/util/strencodings.cpp
laanwj,2020-08-07 07:39:49,Maybe we want to give `WitnessUnknown` `.data()` and `.size()` fields to avoid having to do this explicitly. Don't know. Probably not in thie PR though.,https://github.com/bitcoin/bitcoin/pull/19660#discussion_r466875209,466875209,src/rpc/util.cpp
