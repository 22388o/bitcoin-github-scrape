[
  {
    "sha": "53c00e18bb0266fea632651c15f72e4897d58f91",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1M2MwMGUxOGJiMDI2NmZlYTYzMjY1MWMxNWY3MmU0ODk3ZDU4Zjkx",
    "commit": {
      "author": {
        "name": "Raw Ol' Dirty",
        "email": "rawodb@users.noreply.github.com",
        "date": "2017-08-08T19:42:53Z"
      },
      "committer": {
        "name": "Raw Ol' Dirty",
        "email": "rawodb@users.noreply.github.com",
        "date": "2017-08-08T20:17:44Z"
      },
      "message": "Add information about the next state in getblockchaininfo rpc request",
      "tree": {
        "sha": "34e3a93489a13c759a6a92c7e7619f3d7e27bfaa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/34e3a93489a13c759a6a92c7e7619f3d7e27bfaa"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/53c00e18bb0266fea632651c15f72e4897d58f91",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/53c00e18bb0266fea632651c15f72e4897d58f91",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/53c00e18bb0266fea632651c15f72e4897d58f91",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/53c00e18bb0266fea632651c15f72e4897d58f91/comments",
    "author": {
      "login": "rawodb",
      "id": 20778324,
      "node_id": "MDQ6VXNlcjIwNzc4MzI0",
      "avatar_url": "https://avatars.githubusercontent.com/u/20778324?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rawodb",
      "html_url": "https://github.com/rawodb",
      "followers_url": "https://api.github.com/users/rawodb/followers",
      "following_url": "https://api.github.com/users/rawodb/following{/other_user}",
      "gists_url": "https://api.github.com/users/rawodb/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rawodb/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rawodb/subscriptions",
      "organizations_url": "https://api.github.com/users/rawodb/orgs",
      "repos_url": "https://api.github.com/users/rawodb/repos",
      "events_url": "https://api.github.com/users/rawodb/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rawodb/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "rawodb",
      "id": 20778324,
      "node_id": "MDQ6VXNlcjIwNzc4MzI0",
      "avatar_url": "https://avatars.githubusercontent.com/u/20778324?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rawodb",
      "html_url": "https://github.com/rawodb",
      "followers_url": "https://api.github.com/users/rawodb/followers",
      "following_url": "https://api.github.com/users/rawodb/following{/other_user}",
      "gists_url": "https://api.github.com/users/rawodb/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rawodb/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rawodb/subscriptions",
      "organizations_url": "https://api.github.com/users/rawodb/orgs",
      "repos_url": "https://api.github.com/users/rawodb/repos",
      "events_url": "https://api.github.com/users/rawodb/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rawodb/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2507fd55568b361080e9127f40584af2df64f76e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2507fd55568b361080e9127f40584af2df64f76e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2507fd55568b361080e9127f40584af2df64f76e"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 13,
      "deletions": 10
    },
    "files": [
      {
        "sha": "e1fb460152d32c2b29d66a3fea412f4dc9164f37",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 10,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/53c00e18bb0266fea632651c15f72e4897d58f91/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/53c00e18bb0266fea632651c15f72e4897d58f91/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=53c00e18bb0266fea632651c15f72e4897d58f91",
        "patch": "@@ -1079,31 +1079,33 @@ static UniValue BIP9SoftForkDesc(const Consensus::Params& consensusParams, Conse\n {\n     UniValue rv(UniValue::VOBJ);\n     const ThresholdState thresholdState = VersionBitsTipState(consensusParams, id);\n-    switch (thresholdState) {\n-    case THRESHOLD_DEFINED: rv.push_back(Pair(\"status\", \"defined\")); break;\n-    case THRESHOLD_STARTED: rv.push_back(Pair(\"status\", \"started\")); break;\n-    case THRESHOLD_LOCKED_IN: rv.push_back(Pair(\"status\", \"locked_in\")); break;\n-    case THRESHOLD_ACTIVE: rv.push_back(Pair(\"status\", \"active\")); break;\n-    case THRESHOLD_FAILED: rv.push_back(Pair(\"status\", \"failed\")); break;\n-    }\n     if (THRESHOLD_STARTED == thresholdState)\n     {\n         rv.push_back(Pair(\"bit\", consensusParams.vDeployments[id].bit));\n     }\n     rv.push_back(Pair(\"startTime\", consensusParams.vDeployments[id].nStartTime));\n     rv.push_back(Pair(\"timeout\", consensusParams.vDeployments[id].nTimeout));\n     rv.push_back(Pair(\"since\", VersionBitsTipStateSinceHeight(consensusParams, id)));\n-    if (THRESHOLD_STARTED == thresholdState)\n+    BIP9Stats statsStruct = VersionBitsTipStatistics(consensusParams, id);\n+    bool isLockedIn = (statsStruct.count >= statsStruct.threshold) || (THRESHOLD_LOCKED_IN == thresholdState || THRESHOLD_ACTIVE == thresholdState);\n+    if (THRESHOLD_STARTED == thresholdState || THRESHOLD_LOCKED_IN == thresholdState)\n     {\n         UniValue statsUV(UniValue::VOBJ);\n-        BIP9Stats statsStruct = VersionBitsTipStatistics(consensusParams, id);\n         statsUV.push_back(Pair(\"period\", statsStruct.period));\n         statsUV.push_back(Pair(\"threshold\", statsStruct.threshold));\n         statsUV.push_back(Pair(\"elapsed\", statsStruct.elapsed));\n         statsUV.push_back(Pair(\"count\", statsStruct.count));\n         statsUV.push_back(Pair(\"possible\", statsStruct.possible));\n+\tstatsUV.push_back(Pair(\"locked_in\", isLockedIn));\n         rv.push_back(Pair(\"statistics\", statsUV));\n     }\n+    switch (thresholdState) {\n+    case THRESHOLD_DEFINED: rv.push_back(Pair(\"status\", \"defined\")); rv.push_back(Pair(\"statusNext\", \"started\")); break;\n+    case THRESHOLD_STARTED: rv.push_back(Pair(\"status\", \"started\")); rv.push_back(Pair(\"statusNext\", (isLockedIn ? \"locked_in\" : (statsStruct.possible==true?\"possible\":\"started\")))); break;\n+    case THRESHOLD_LOCKED_IN: rv.push_back(Pair(\"status\", \"locked_in\")); rv.push_back(Pair(\"statusNext\", \"active\")); break;\n+    case THRESHOLD_ACTIVE: rv.push_back(Pair(\"status\", \"active\")); rv.push_back(Pair(\"statusNext\", \"active\")); break;\n+    case THRESHOLD_FAILED: rv.push_back(Pair(\"status\", \"failed\")); rv.push_back(Pair(\"statusNext\", \"failed\")); break;\n+    }\n     return rv;\n }\n \n@@ -1145,7 +1147,8 @@ UniValue getblockchaininfo(const JSONRPCRequest& request)\n             \"  ],\\n\"\n             \"  \\\"bip9_softforks\\\": {          (object) status of BIP9 softforks in progress\\n\"\n             \"     \\\"xxxx\\\" : {                (string) name of the softfork\\n\"\n-            \"        \\\"status\\\": \\\"xxxx\\\",    (string) one of \\\"defined\\\", \\\"started\\\", \\\"locked_in\\\", \\\"active\\\", \\\"failed\\\"\\n\"\n+            \"        \\\"status\\\": \\\"xxx\\\",     (string) one of \\\"defined\\\", \\\"started\\\", \\\"locked_in\\\", \\\"active\\\", \\\"failed\\\"\\n\"\n+            \"        \\\"statusNext\\\": \\\"xxx\\\", (string) one of \\\"defined\\\", \\\"started\\\", \\\"possible\\\", \\\"locked_in\\\", \\\"active\\\", \\\"failed\\\"\\n\"\n             \"        \\\"bit\\\": xx,             (numeric) the bit (0-28) in the block version field used to signal this softfork (only for \\\"started\\\" status)\\n\"\n             \"        \\\"startTime\\\": xx,       (numeric) the minimum median time past of a block at which the bit gains its meaning\\n\"\n             \"        \\\"timeout\\\": xx,         (numeric) the median time past of a block at which the deployment is considered failed if not yet locked in\\n\""
      }
    ]
  }
]