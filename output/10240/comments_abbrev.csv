ryanofsky,2017-05-01T18:46:02Z,"I know there was discussion about this in IRC last week, but I didn't follow closely. Would it be better to review this PR now, or hold off for more changes?",https://github.com/bitcoin/bitcoin/pull/10240#issuecomment-298399758,298399758,
jonasschnelli,2017-05-02T13:08:00Z,I'm currently implementing the changes we discussed in last weeks RIC meeting. A review makes more sense after the overhaul.,https://github.com/bitcoin/bitcoin/pull/10240#issuecomment-298630235,298630235,
jonasschnelli,2017-05-03T15:37:31Z,"Completely rewrote this PR. Keeping the WIP tag for now.\nThe current implementation takes care of encrypted and unencrypted wallets (also in conjunction with pruning).\n\n### unencrypted wallets\nFor unencrypted wallets, the key pool will always be topped up. During sync (SyncTransaction), we check for used keypool keys and mark all keys up to the matched key as used. Additionally we topup th",https://github.com/bitcoin/bitcoin/pull/10240#issuecomment-298949058,298949058,
jonasschnelli,2017-05-04T15:48:50Z,"All tests are passing now.\nRemoved WIP tag.\nOverhauled PR description",https://github.com/bitcoin/bitcoin/pull/10240#issuecomment-299226759,299226759,
jonasschnelli,2017-05-12T08:29:55Z,"Needed rebase.\nAddressed most of @ryanofsky points.",https://github.com/bitcoin/bitcoin/pull/10240#issuecomment-301017020,301017020,
sipa,2017-06-12T22:31:12Z,Needs rebase.,https://github.com/bitcoin/bitcoin/pull/10240#issuecomment-307952392,307952392,
gmaxwell,2017-06-15T20:05:48Z,"Will begin code review post rebase.\n\nQuestion about the parameters--  Why 20? that is very small,  I am not aware of any reason to not have it be more like-- say-- 10,000.   With a large number the pause is hopefully seldom/never hit.  Electrum uses a very small number because its a single user wallet and has to send all these addresses for processing to a remote server.   In a commercial appl",https://github.com/bitcoin/bitcoin/pull/10240#issuecomment-308851475,308851475,
jonasschnelli,2017-06-15T20:27:07Z,"Agree that 20 is probably way to low.\nIt's just a single constant and I worry more about getting the PR on a level where everything works as expected. Changing the 20 to 1000 then is simple... once the PR is stable, we can also test performance better (maybe between 20 and 10k).",https://github.com/bitcoin/bitcoin/pull/10240#issuecomment-308856449,308856449,
jonasschnelli,2017-07-14T21:22:53Z,Closing in favor of #10830,https://github.com/bitcoin/bitcoin/pull/10240#issuecomment-315471237,315471237,
jonasschnelli,2017-05-04T15:53:27Z,I guess this is very inefficient and something like #10235 should allow to speed up things.,https://github.com/bitcoin/bitcoin/pull/10240#discussion_r114818486,114818486,src/wallet/wallet.cpp
ryanofsky,2017-05-05T16:03:34Z,"In commit ""Add basic HD wallet restore functionality""\n\nMaybe rename this variable. (It shadows CWallet::setKeyPool, which makes that variable more annoying to grep for.)",https://github.com/bitcoin/bitcoin/pull/10240#discussion_r115032554,115032554,src/wallet/wallet.cpp
ryanofsky,2017-05-05T16:32:30Z,"In commit ""Add basic HD wallet restore functionality""\n\nMaybe avoid BOOST_FOREACH here and below.",https://github.com/bitcoin/bitcoin/pull/10240#discussion_r115037977,115037977,src/wallet/wallet.cpp
ryanofsky,2017-05-05T16:59:29Z,"In commit ""Add basic HD wallet restore functionality""\n\nIt seems like this for-loop could be eliminated if you just changed GetAllReserveKeys to return `map<CKeyID, int64_t>` instead of `set<CKeyID>`. I think making this change would add less code than is written here.",https://github.com/bitcoin/bitcoin/pull/10240#discussion_r115042948,115042948,src/wallet/wallet.cpp
ryanofsky,2017-05-05T17:01:52Z,"In commit ""Add basic HD wallet restore functionality""\n\nShould move this declaration closer to where it's actually used way below.",https://github.com/bitcoin/bitcoin/pull/10240#discussion_r115043447,115043447,src/wallet/wallet.cpp
ryanofsky,2017-05-05T17:05:46Z,"In commit ""Add basic HD wallet restore functionality""\n\nShouldn't it be an error if this condition is not true?",https://github.com/bitcoin/bitcoin/pull/10240#discussion_r115044224,115044224,src/wallet/wallet.cpp
ryanofsky,2017-05-05T17:09:25Z,"In commit ""Add basic HD wallet restore functionality""\n\nAs an simplification (and optimization), you can exit the loop if `id > foundIndex`, since `setKeyPool` is an ordered set.",https://github.com/bitcoin/bitcoin/pull/10240#discussion_r115044903,115044903,src/wallet/wallet.cpp
ryanofsky,2017-05-05T17:32:11Z,"In commit ""Add basic HD wallet restore functionality""\n\nPhrase ""In case you recover a HD wallet"" seems too vague to be meaningful. I might say something more detailed like, ""In the case where you just restored an old wallet.dat backup that was not topped-up with the most recently derived HD keys, transactions using those keys will not show up in the wallet, and funds that are available to spend",https://github.com/bitcoin/bitcoin/pull/10240#discussion_r115049299,115049299,src/wallet/wallet.cpp
ryanofsky,2017-05-05T17:46:36Z,"In commit ""Add basic HD wallet restore functionality""\n\nSince this is warning that the requested size is below the recommended limit, it would be good to mention what the recommended limit actually is. And again ""recover a HD wallet"" seems vague. I'd maybe write this as, ""Your keypool configured to store less than 20 keys. The recommended size is -keypool=100. Using a larger keypool will make i",https://github.com/bitcoin/bitcoin/pull/10240#discussion_r115052129,115052129,src/wallet/wallet.cpp
ryanofsky,2017-05-05T18:03:36Z,"In commit ""Add basic HD wallet restore functionality""\n\nWould expand this comment. Maybe ""Check if any keys in the wallet keypool that were supposed to be unused have appeared in a new transaction. If so, remove those keys from the keypool. This can happen when restoring an old wallet backup that does not contain the mostly recently created transactions from newer versions of the wallet.""",https://github.com/bitcoin/bitcoin/pull/10240#discussion_r115055571,115055571,src/wallet/wallet.cpp
ryanofsky,2017-05-05T18:28:33Z,"In commit ""Add request-halt flag to BlockConnected signal"".\n\nCompile error here (line needs to be moved up)\n\n",https://github.com/bitcoin/bitcoin/pull/10240#discussion_r115060607,115060607,src/wallet/wallet.cpp
ryanofsky,2017-05-05T18:33:21Z,"In commit ""Wallet: allow to eventually pause verification if keypool requires""\n\nNo need to add the {} and extra indentation here in TransactionAddedToMempool. (It throws off the github diff and makes the other changes harder to follow).",https://github.com/bitcoin/bitcoin/pull/10240#discussion_r115061522,115061522,src/wallet/wallet.cpp
ryanofsky,2017-05-05T18:35:26Z,"In commit ""Wallet: allow to eventually pause verification if keypool requires""\n\nAgain unnecessary {} and indentation make the diff messy here in BlockDisconnected",https://github.com/bitcoin/bitcoin/pull/10240#discussion_r115061963,115061963,src/wallet/wallet.cpp
ryanofsky,2017-05-05T18:39:39Z,"In commit ""Wallet: allow to eventually pause verification if keypool requires""\n\nThese functions are never called anywhere, and appear to be deleted in the next commit. Would remove them from this commit.",https://github.com/bitcoin/bitcoin/pull/10240#discussion_r115062815,115062815,src/wallet/wallet.h
ryanofsky,2017-05-05T18:41:29Z,"In commit ""Wallet: allow to eventually pause verification if keypool requires""\n\nWould update the printf to say this is pausing downloads / transaction processing.",https://github.com/bitcoin/bitcoin/pull/10240#discussion_r115063131,115063131,src/wallet/wallet.cpp
ryanofsky,2017-05-05T18:42:46Z,"In commit ""Wallet: allow to eventually pause verification if keypool requires""\n\nThis variable should be better documented. I think you could basically take the text from your PR description and paste it here.",https://github.com/bitcoin/bitcoin/pull/10240#discussion_r115063363,115063363,src/wallet/wallet.h
ryanofsky,2017-05-05T18:50:43Z,"In commit ""Add request-halt flag to BlockConnected signal"".\n\nWhat's the advantage of requesting a pause in this delayed and indirect way via BlockConnected instead of immediately setting `setBlockRequestsPaused(true); setTipUpdatesPaused(true);` when the keypool fails to top up in `MarkReserveKeysAsUsed()`? The indirect approach seems to add a lot of complexity.\n\n\n",https://github.com/bitcoin/bitcoin/pull/10240#discussion_r115064943,115064943,src/wallet/wallet.cpp
ryanofsky,2017-05-05T18:54:04Z,"In commit ""Ensure we pause wallet sync when the keypool requires extension""\n\nThis diff logically seems like it should be part of the ""Add request-halt flag to BlockConnected signal"" commit. Moving it there would make the commit history easier to understand.",https://github.com/bitcoin/bitcoin/pull/10240#discussion_r115065542,115065542,src/validation.cpp
ryanofsky,2017-05-05T18:55:33Z,"In commit ""Ensure we pause wallet sync when the keypool requires extension""\n\nConsider moving this change to the ""Add option to pause block requests"" commit.",https://github.com/bitcoin/bitcoin/pull/10240#discussion_r115065830,115065830,src/validation.cpp
ryanofsky,2017-05-05T18:55:57Z,"In commit ""Ensure we pause wallet sync when the keypool requires extension""\n\nConsider moving this change to the ""Add option to pause tip updates"" commit.",https://github.com/bitcoin/bitcoin/pull/10240#discussion_r115065922,115065922,src/validation.cpp
ryanofsky,2017-05-05T19:01:33Z,"In commit ""Ensure we pause wallet sync when the keypool requires extension""\n\nWould it make sense to call this automatically inside TopUpKeyPool? Seems strange to have to implement it separately for RPC and Qt wallet interfaces.",https://github.com/bitcoin/bitcoin/pull/10240#discussion_r115066863,115066863,src/wallet/rpcwallet.cpp
ryanofsky,2017-05-05T19:11:11Z,"In commit ""Ensure we pause wallet sync when the keypool requires extension""\n\nIt seems kind of abrupt and unfriendly that entering your passphrase to unlock the wallet could suddenly trigger a shutdown. Wouldn't it be better to detect this condition before unpausing, and if it happens, let the node stay up and paused instead of shutting it down?",https://github.com/bitcoin/bitcoin/pull/10240#discussion_r115068537,115068537,src/wallet/wallet.cpp
ryanofsky,2017-05-05T19:14:32Z,"In commit ""Extend wallet hd restore functional test""\n\nAlready listed",https://github.com/bitcoin/bitcoin/pull/10240#discussion_r115069097,115069097,test/functional/test_runner.py
ryanofsky,2017-05-05T19:28:30Z,"In commit ""Make sure we check the keypool min size during startup""\n\nWarning should suggest how to fix the problem, and also ideally also include more background information (maybe consider using my previous suggestion for the -keypool limit warning).",https://github.com/bitcoin/bitcoin/pull/10240#discussion_r115071463,115071463,src/wallet/wallet.cpp
ryanofsky,2017-05-05T19:41:06Z,"In commit ""Make sure we check the keypool min size during startup""\n\nThis pausing behavior seems like it should be optional, because even in the worst case, you should be able to recover from any problem by topping up your keypool and doing a rescan. Maybe `HD_RESTORE_KEYPOOL_SIZE_MIN` should be renamed something like `PAUSE_SYNC_WHEN_KEYPOOL_SMALLER_THAN` and be a config option.",https://github.com/bitcoin/bitcoin/pull/10240#discussion_r115073522,115073522,src/wallet/wallet.cpp
ryanofsky,2017-05-05T19:48:49Z,"In commit ""Make sure we pause immediately if we receive a pause-request""\n\nWould squash this commit into the commit ""Add request-halt flag to BlockConnected signal"" (along with the other change I suggest moving there) so this is understandable in the correct context.",https://github.com/bitcoin/bitcoin/pull/10240#discussion_r115074802,115074802,src/validation.cpp
ryanofsky,2017-05-05T19:58:36Z,"In commit ""SetSoftArg the keypool always to the minimum gap limit if HD is enabled""\n\nIt seems like it would be a lot harder to for someone to understand what this ""ignore gap limit"" option does than the `PAUSE_SYNC_WHEN_KEYPOOL_SMALLER_THAN` option I suggested in another comment. Would be curious to know what you think about it.",https://github.com/bitcoin/bitcoin/pull/10240#discussion_r115076481,115076481,src/wallet/wallet.cpp
ryanofsky,2017-05-05T19:59:54Z,"In commit ""SetSoftArg the keypool always to the minimum gap limit if HD is enabled""\n\nThis seems broken. It's still pausing but just no longer warning that the pause took place?",https://github.com/bitcoin/bitcoin/pull/10240#discussion_r115076701,115076701,src/wallet/wallet.cpp
ryanofsky,2017-05-05T20:02:26Z,"In commit ""SetSoftArg the keypool always to the minimum gap limit if HD is enabled""\n\nIs this change meant to be part of this commit? I don't think there's an interaction with hdignoregaplimit here.",https://github.com/bitcoin/bitcoin/pull/10240#discussion_r115077168,115077168,test/functional/wallet-hd.py
ryanofsky,2017-05-05T20:08:57Z,"In commit ""Ensure we pause wallet sync when the keypool requires extension""\n\nIt should be possible to handle this without any polling or notifications by making `fPauseBlockRequests` and `fPauseTipUpdates` counters instead of bools. The counters would need to be incremented whenever `fSyncPausedUntilKeypoolExt` changed from false to true in any wallet, and decremented when it changed from true",https://github.com/bitcoin/bitcoin/pull/10240#discussion_r115078268,115078268,src/wallet/wallet.cpp
jonasschnelli,2017-05-12T07:56:07Z,"As you mention, it would be much simpler to call `setBlockRequestsPaused()`, but, wouldn't it be a massive layer violation? Communicating through the signals doesn't require that the wallet needs to know what the full node parts is really doing. But maybe im overcomplicating things here.",https://github.com/bitcoin/bitcoin/pull/10240#discussion_r116170837,116170837,src/wallet/wallet.cpp
jonasschnelli,2017-05-12T08:10:26Z,"The `-hdignoregaplimit` is for debug purposes only. Our tests run with a keypool size of 1 and therefor would cause troubles running post this PR without a ""ignore"" option, and I don't think it matter how we ""ignore"" the gap limit and over a startup argument seems the be the simplest way.",https://github.com/bitcoin/bitcoin/pull/10240#discussion_r116173110,116173110,src/wallet/wallet.cpp
jonasschnelli,2017-05-12T08:12:12Z,"Yes. Thats a good idea. Do you think this should be done in this PR or can we tackle this once we have multiple places where the sync may get paused?\nCounters may also introduce the risk of unwillingly increasing it twice (while only decrease it once).",https://github.com/bitcoin/bitcoin/pull/10240#discussion_r116173407,116173407,src/wallet/wallet.cpp
jonasschnelli,2017-05-12T08:15:28Z,It would also require to keep the `fInternal` flags in memory (for the address book internal/external change flagging). This is independently addresses in #10238.,https://github.com/bitcoin/bitcoin/pull/10240#discussion_r116173980,116173980,src/wallet/wallet.cpp
jonasschnelli,2017-05-12T08:20:00Z,"I guess it already tries to avoid this situation by disabling the block downloads if the wallet is encrypted and the node runes in prune-mode.\nBut there is no guarantee that we won't prune bellow the wallets best block,.. this why this shutdown/protection is here.",https://github.com/bitcoin/bitcoin/pull/10240#discussion_r116174946,116174946,src/wallet/wallet.cpp
ryanofsky,2017-06-08T15:22:10Z,"> Would squash this commit into the commit ""Add request-halt flag to BlockConnected signal"" (along with the other change I suggest moving there) so this is understandable in the correct context.\n\n(unchanged)",https://github.com/bitcoin/bitcoin/pull/10240#discussion_r120918741,120918741,src/validation.cpp
ryanofsky,2017-06-08T15:22:38Z,"> As you mention, it would be much simpler to call setBlockRequestsPaused(), but, wouldn't it be a massive layer violation? Communicating through the signals doesn't require that the wallet needs to know what the full node parts is really doing. But maybe im overcomplicating things here.\n\nI don't see why it would be a problem to call `setBlockRequestsPaused(true)` from `CWallet::MarkReserveKey",https://github.com/bitcoin/bitcoin/pull/10240#discussion_r120918877,120918877,src/wallet/wallet.cpp
ryanofsky,2017-06-08T15:23:03Z,"> But there is no guarantee that we won't prune bellow the wallets best block,.. this why this shutdown/protection is here.\n\nWouldn't just staying paused in this case offer as much protection as briefly unpausing and then shutting down?",https://github.com/bitcoin/bitcoin/pull/10240#discussion_r120919001,120919001,src/wallet/wallet.cpp
ryanofsky,2017-06-08T15:23:13Z,"> Should move this declaration closer to where it's actually used way below.\n\n(unchanged)",https://github.com/bitcoin/bitcoin/pull/10240#discussion_r120919053,120919053,src/wallet/wallet.cpp
ryanofsky,2017-06-08T15:23:19Z,"> It would also require to keep the fInternal flags in memory (for the address book internal/external change flagging). This is independently addresses in #10238.\n\nYeah probably not worth simplifying this if it will be obsoleted by #10238.",https://github.com/bitcoin/bitcoin/pull/10240#discussion_r120919083,120919083,src/wallet/wallet.cpp
ryanofsky,2017-06-08T15:23:26Z,"> As an simplification (and optimization), you can exit the loop if id > foundIndex, since setKeyPool is an ordered set.\n\n(unchanged)",https://github.com/bitcoin/bitcoin/pull/10240#discussion_r120919114,120919114,src/wallet/wallet.cpp
ryanofsky,2017-06-08T15:23:34Z,"> Shouldn't it be an error if this condition is not true?\n\n(unchanged)",https://github.com/bitcoin/bitcoin/pull/10240#discussion_r120919150,120919150,src/wallet/wallet.cpp
ryanofsky,2017-06-08T15:23:42Z,">Is this change meant to be part of this commit? I don't think there's an interaction with hdignoregaplimit here.\n\n(unchanged)",https://github.com/bitcoin/bitcoin/pull/10240#discussion_r120919193,120919193,test/functional/wallet-hd.py
ryanofsky,2017-06-08T15:23:56Z,"> The -hdignoregaplimit is for debug purposes only\n\nMaybe it's not worth fixing, but even as a developer I think ""pause sync when keypool is smaller than"" is clearer than ""ignore hd gap limit"" because one name tells you literally what the option does, while the other refers obliquely to what the option doesn't do.",https://github.com/bitcoin/bitcoin/pull/10240#discussion_r120919269,120919269,src/wallet/wallet.cpp
ryanofsky,2017-06-08T15:24:52Z,Fixed in 5b70a2289e96f0ce8c49678e613845572d8203bc,https://github.com/bitcoin/bitcoin/pull/10240#discussion_r120919546,120919546,src/wallet/wallet.cpp
ryanofsky,2017-06-08T15:24:58Z,"> Phrase ""In case you recover a HD wallet"" seems too vague to be meaningful.\n\n(unchanged)",https://github.com/bitcoin/bitcoin/pull/10240#discussion_r120919583,120919583,src/wallet/wallet.cpp
ryanofsky,2017-06-08T15:25:32Z,"> Since this is warning that the requested size is below the recommended limit, it would be good to mention what the recommended limit actually is.\n\n(unchanged)",https://github.com/bitcoin/bitcoin/pull/10240#discussion_r120919724,120919724,src/wallet/wallet.cpp
ryanofsky,2017-06-08T15:26:15Z,"> Compile error here (line needs to be moved up)\n\nError is still present (commit ""Add request-halt flag to BlockConnected signal)",https://github.com/bitcoin/bitcoin/pull/10240#discussion_r120919944,120919944,src/wallet/wallet.cpp
ryanofsky,2017-06-08T15:26:31Z,Added in 5b70a2289e96f0ce8c49678e613845572d8203bc.,https://github.com/bitcoin/bitcoin/pull/10240#discussion_r120920008,120920008,src/wallet/wallet.h
ryanofsky,2017-06-08T15:27:02Z,">This diff logically seems like it should be part of the ""Add request-halt flag to BlockConnected signal"" commit. Moving it there would make the commit history easier to understand.\n\n(unchanged)",https://github.com/bitcoin/bitcoin/pull/10240#discussion_r120920174,120920174,src/validation.cpp
ryanofsky,2017-06-08T15:27:09Z,"> Consider moving this change to the ""Add option to pause block requests"" commit.\n\n(unchanged)",https://github.com/bitcoin/bitcoin/pull/10240#discussion_r120920214,120920214,src/validation.cpp
ryanofsky,2017-06-08T15:27:15Z,">Consider moving this change to the ""Add option to pause tip updates"" commit.\n\n(unchanged)",https://github.com/bitcoin/bitcoin/pull/10240#discussion_r120920245,120920245,src/validation.cpp
ryanofsky,2017-06-08T15:27:21Z,">Would it make sense to call this automatically inside TopUpKeyPool? Seems strange to have to implement it separately for RPC and Qt wallet interfaces\n\n(unchanged)",https://github.com/bitcoin/bitcoin/pull/10240#discussion_r120920268,120920268,src/wallet/rpcwallet.cpp
ryanofsky,2017-06-08T15:27:52Z,">Already listed\n\n(unchanged)",https://github.com/bitcoin/bitcoin/pull/10240#discussion_r120920419,120920419,test/functional/test_runner.py
ryanofsky,2017-06-08T15:28:05Z,"> This pausing behavior seems like it should be optional\n\nThe ""-hdignoregaplimit"" argument added in the next commit does make this optional (commit ""SetSoftArg the keypool always to the minimum gap limit""), though I still think a single ""pause sync when keypool smaller than"" check would be a little cleaner than separate ""keypool size min"" and ""ignore gap limit"" checks.",https://github.com/bitcoin/bitcoin/pull/10240#discussion_r120920486,120920486,src/wallet/wallet.cpp
ryanofsky,2017-06-08T15:28:23Z,"> Warning should suggest how to fix the problem, and also ideally also include more background information (maybe consider using my previous suggestion for the -keypool limit warning).\n\n(unchanged)",https://github.com/bitcoin/bitcoin/pull/10240#discussion_r120920557,120920557,src/wallet/wallet.cpp
ryanofsky,2017-06-08T15:29:14Z,"> This seems broken. It's still pausing but just no longer warning that the pause took place?\n\nOn second look, this seems ok because CWallet::CheckKeypoolMinSize now checks for ""-hdignoregaplimit"" and disables the pause.",https://github.com/bitcoin/bitcoin/pull/10240#discussion_r120920775,120920775,src/wallet/wallet.cpp
ryanofsky,2017-06-08T18:33:52Z,"In commit ""SetSoftArg the keypool always to the minimum gap limit if HD is enabled""\n\nIt might be a good idea to keep the warning about missing funds in the case where IsCrypted && size < KEYPOOL_SIZE_MIN && GetBool(""-hdignoregaplimit""). I also had a suggestion about this warning in\nhttps://github.com/bitcoin/bitcoin/pull/10240#discussion_r115049299",https://github.com/bitcoin/bitcoin/pull/10240#discussion_r120965597,120965597,src/wallet/wallet.cpp
ryanofsky,2017-06-08T18:50:15Z,"In commit ""Make sure we check the keypool min size during startup""\n\nWhy drop this warning? It still seems useful to warn about the ""-keypool"" being too small even if KeypoolCountExternalKeys() is momentarily returning a high number of keys. (I also had another suggestion about this warning at https://github.com/bitcoin/bitcoin/pull/10240#discussion_r115052129)",https://github.com/bitcoin/bitcoin/pull/10240#discussion_r120969753,120969753,src/wallet/wallet.cpp
ryanofsky,2017-06-08T19:22:52Z,">Would expand this comment\n\nDone in 2a203b73fd2d7b016cd5f55977135a15a982414d",https://github.com/bitcoin/bitcoin/pull/10240#discussion_r120976622,120976622,src/wallet/wallet.cpp
ryanofsky,2017-06-08T19:23:50Z,">Do you think this should be done in this PR or can we tackle this once we have multiple places where the sync may get paused?\n\nMaybe, this PR is already pretty complicated, so I wouldn't want to tack this on in extra commits, but it could be nice if implemented to replace the existing ""Add option to pause..."" commits.",https://github.com/bitcoin/bitcoin/pull/10240#discussion_r120976859,120976859,src/wallet/wallet.cpp
ryanofsky,2017-06-08T19:24:42Z,"> Maybe rename this variable. (It shadows CWallet::setKeyPool, which makes that variable more annoying to grep for.)\n\nDone in 2a203b73fd2d7b016cd5f55977135a15a982414d\n",https://github.com/bitcoin/bitcoin/pull/10240#discussion_r120977058,120977058,src/wallet/wallet.cpp
ryanofsky,2017-06-08T19:25:03Z,">No need to add the {} and extra indentation\n\n(unchanged)",https://github.com/bitcoin/bitcoin/pull/10240#discussion_r120977130,120977130,src/wallet/wallet.cpp
ryanofsky,2017-06-08T19:25:22Z,">Maybe avoid BOOST_FOREACH here and below.\n\nDone in 2a203b73fd2d7b016cd5f55977135a15a982414d",https://github.com/bitcoin/bitcoin/pull/10240#discussion_r120977187,120977187,src/wallet/wallet.cpp
ryanofsky,2017-06-08T19:25:42Z,">Again unnecessary {} and indentation make the diff messy here in BlockDisconnected\n\n(unchanged)",https://github.com/bitcoin/bitcoin/pull/10240#discussion_r120977253,120977253,src/wallet/wallet.cpp
ryanofsky,2017-06-08T19:26:09Z,">These functions are never called anywhere, and appear to be deleted in the next commit. Would remove them from this commit.\n\nRemoved in 5b70a2289e96f0ce8c49678e613845572d8203bc\n",https://github.com/bitcoin/bitcoin/pull/10240#discussion_r120977350,120977350,src/wallet/wallet.h
jnewbery,2017-06-12T22:06:24Z,"I'm not going to comment on @ryanofsky's other comments regarding commit order (although they all sound sensible). This one should definitely be fixed in commit  ""Add request-halt flag to BlockConnected signal"" since it breaks the build and so breaks git bisect.",https://github.com/bitcoin/bitcoin/pull/10240#discussion_r121538887,121538887,src/wallet/wallet.cpp
jnewbery,2017-06-12T22:06:38Z,nit: braces,https://github.com/bitcoin/bitcoin/pull/10240#discussion_r121538932,121538932,src/net_processing.cpp
jnewbery,2017-06-12T22:11:54Z,nit: s/will allow to temporary/will temporarily,https://github.com/bitcoin/bitcoin/pull/10240#discussion_r121539814,121539814,src/validation.h
jnewbery,2017-06-12T22:12:06Z,nit: s/will temporary/will temporarily,https://github.com/bitcoin/bitcoin/pull/10240#discussion_r121539847,121539847,src/validation.h
jnewbery,2017-06-12T22:14:03Z,"nit:\n\n    // Give a hint to the wallet in case we have paused sync (we may have fallen bellow the hd gap limit).\n    // This runs synchronously, at least during the resync, we can be sure the keypool can be topped up",https://github.com/bitcoin/bitcoin/pull/10240#discussion_r121540156,121540156,src/wallet/rpcwallet.cpp
jnewbery,2017-06-12T22:16:54Z,nit: avoid `BOOST_FOREACH`,https://github.com/bitcoin/bitcoin/pull/10240#discussion_r121540588,121540588,src/wallet/wallet.cpp
jnewbery,2017-06-12T22:21:34Z,I don't think there's any need to change the indentation here,https://github.com/bitcoin/bitcoin/pull/10240#discussion_r121541385,121541385,src/wallet/wallet.cpp
jnewbery,2017-06-12T22:25:14Z,"As you note, this doesn't work with multiwallet, which has now been merged. I think the `setBlockRequestsPaused()` and `setTipUpdatesPaused()` logic will now need to be updated to store the BlockRequests and TipUpdates state for each of the wallets.",https://github.com/bitcoin/bitcoin/pull/10240#discussion_r121541946,121541946,src/wallet/wallet.cpp
jnewbery,2017-06-12T22:25:35Z,nit: braces,https://github.com/bitcoin/bitcoin/pull/10240#discussion_r121542001,121542001,src/wallet/wallet.cpp
jnewbery,2017-06-12T22:26:32Z,nit: braces,https://github.com/bitcoin/bitcoin/pull/10240#discussion_r121542158,121542158,src/wallet/wallet.cpp
jnewbery,2017-06-12T22:41:10Z,"I don't think you need to set `fSyncPausedUntilKeypoolExt` and log here, since the call to `CheckKeypoolMinSize()` below will catch when the keypool is too small.\n\nI think this also prevents `-hdignoregaplimit` from working, since `TopUpKeyPool()` returns false without checking that argument.",https://github.com/bitcoin/bitcoin/pull/10240#discussion_r121544508,121544508,src/wallet/wallet.cpp
jnewbery,2017-06-12T22:43:05Z,"> I think ""pause sync when keypool is smaller than"" is clearer than ""ignore hd gap limit""\n\n:+1:\n\nnit: place this argument in the correct alphabetic order.",https://github.com/bitcoin/bitcoin/pull/10240#discussion_r121544804,121544804,src/wallet/wallet.cpp
jnewbery,2017-06-12T22:46:09Z,I don't understand why you're calling `TopUpKeyPool()` here only if -keypool >= HD_RESTORE_KEYPOOL_SIZE_MIN or hdignoregaplimit is set.,https://github.com/bitcoin/bitcoin/pull/10240#discussion_r121545265,121545265,src/wallet/wallet.cpp
jnewbery,2017-06-12T22:48:25Z,`-hdignoregaplimit` is checked within `CheckKeypoolMinSize()` so I don't think you need it here (CheckKeypoolMinSize() will not return false if `-hdignoregaplimit` is true),https://github.com/bitcoin/bitcoin/pull/10240#discussion_r121545587,121545587,src/wallet/wallet.cpp
jnewbery,2017-06-12T22:50:10Z,Why does this need to be changed for creating the cache directories?,https://github.com/bitcoin/bitcoin/pull/10240#discussion_r121545860,121545860,test/functional/test_framework/test_framework.py
jnewbery,2017-06-12T22:51:14Z,I don't think you should be changing this command line argument for all tests.,https://github.com/bitcoin/bitcoin/pull/10240#discussion_r121546032,121546032,test/functional/test_framework/util.py
jnewbery,2017-06-12T22:51:25Z,remove duplicate,https://github.com/bitcoin/bitcoin/pull/10240#discussion_r121546057,121546057,test/functional/test_runner.py
jnewbery,2017-06-12T22:52:06Z,Please update docstring to describe what this test is doing (I think you copied this directly from wallet-hd.py),https://github.com/bitcoin/bitcoin/pull/10240#discussion_r121546151,121546151,test/functional/wallet-hd-restore.py
jnewbery,2017-06-12T22:52:30Z,"Please order imports in PEP8 ordering (std library, then 3rd party libraries, then local imports)",https://github.com/bitcoin/bitcoin/pull/10240#discussion_r121546215,121546215,test/functional/wallet-hd-restore.py
jnewbery,2017-06-12T22:52:48Z,import not used,https://github.com/bitcoin/bitcoin/pull/10240#discussion_r121546260,121546260,test/functional/wallet-hd-restore.py
jnewbery,2017-06-12T22:53:47Z,"you can set `self.extra_args` here, and then you won't need to override the `setup_network()` method below (the test framework will take care of everything if you set the extra_args here.",https://github.com/bitcoin/bitcoin/pull/10240#discussion_r121546394,121546394,test/functional/wallet-hd-restore.py
jnewbery,2017-06-12T22:54:15Z,Please use self.log.info() instead of print for logging.,https://github.com/bitcoin/bitcoin/pull/10240#discussion_r121546471,121546471,test/functional/wallet-hd-restore.py
jnewbery,2017-06-12T22:58:12Z,"Suggest you set the timeout higher, perhaps to 60 seconds. Tests should be robust to bitcoind hanging for several seconds, especially if running in parallel on Travis.",https://github.com/bitcoin/bitcoin/pull/10240#discussion_r121546980,121546980,test/functional/wallet-hd-restore.py
jnewbery,2017-06-12T23:00:35Z,please don't do this! It erases the debug.log file. Are you able to be more targeted in what you're erasing?,https://github.com/bitcoin/bitcoin/pull/10240#discussion_r121547328,121547328,test/functional/wallet-hd-restore.py
jnewbery,2017-06-12T23:02:31Z,`txid` isn't used. No need to assign it here or below.,https://github.com/bitcoin/bitcoin/pull/10240#discussion_r121547598,121547598,test/functional/wallet-hd-restore.py
jnewbery,2017-06-12T23:05:12Z,I'm also confused about why wallet-hd.py needs to be updated.,https://github.com/bitcoin/bitcoin/pull/10240#discussion_r121548023,121548023,test/functional/wallet-hd.py
sipa,2017-07-12T23:10:44Z,Please address.,https://github.com/bitcoin/bitcoin/pull/10240#discussion_r127095122,127095122,test/functional/wallet-hd-restore.py
sipa,2017-07-12T23:11:07Z,Please address.,https://github.com/bitcoin/bitcoin/pull/10240#discussion_r127095162,127095162,test/functional/wallet-hd-restore.py
sipa,2017-07-12T23:11:48Z,Nit: else on the same line as `}`,https://github.com/bitcoin/bitcoin/pull/10240#discussion_r127095281,127095281,src/wallet/wallet.cpp
sipa,2017-07-12T23:12:57Z,Please address.,https://github.com/bitcoin/bitcoin/pull/10240#discussion_r127095453,127095453,src/net_processing.cpp
