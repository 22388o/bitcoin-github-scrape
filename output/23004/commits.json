[
  {
    "sha": "a032fa30d282fa69c304e0afd1f95f67c55d22e3",
    "node_id": "C_kwDOABII59oAKGEwMzJmYTMwZDI4MmZhNjljMzA0ZTBhZmQxZjk1ZjY3YzU1ZDIyZTM",
    "commit": {
      "author": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2021-06-16T18:49:09Z"
      },
      "committer": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2021-10-05T15:10:47Z"
      },
      "message": "multiprocess: add interfaces::ExternalSigner class\n\nAdd interfaces::ExternalSigner to let signer objects be passed between\nprocesses and signer code to run in the original process, without\nmultiple processes linking and running signer code.",
      "tree": {
        "sha": "c4aea56786decc54ff8474a67c604530097d8b96",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c4aea56786decc54ff8474a67c604530097d8b96"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a032fa30d282fa69c304e0afd1f95f67c55d22e3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a032fa30d282fa69c304e0afd1f95f67c55d22e3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a032fa30d282fa69c304e0afd1f95f67c55d22e3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a032fa30d282fa69c304e0afd1f95f67c55d22e3/comments",
    "author": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "113b863f0773999497f952daa6539a03a66a9de3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/113b863f0773999497f952daa6539a03a66a9de3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/113b863f0773999497f952daa6539a03a66a9de3"
      }
    ],
    "stats": {
      "total": 53,
      "additions": 41,
      "deletions": 12
    },
    "files": [
      {
        "sha": "48d4fd3ee25963ea915341e4e6bec7b29db1438e",
        "filename": "src/interfaces/node.h",
        "status": "modified",
        "additions": 12,
        "deletions": 3,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a032fa30d282fa69c304e0afd1f95f67c55d22e3/src/interfaces/node.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a032fa30d282fa69c304e0afd1f95f67c55d22e3/src/interfaces/node.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/node.h?ref=a032fa30d282fa69c304e0afd1f95f67c55d22e3",
        "patch": "@@ -6,7 +6,6 @@\n #define BITCOIN_INTERFACES_NODE_H\n \n #include <consensus/amount.h>\n-#include <external_signer.h>\n #include <net.h>        // For NodeId\n #include <net_types.h>  // For banmap_t\n #include <netaddress.h> // For Network\n@@ -50,6 +49,16 @@ struct BlockAndHeaderTipInfo\n     double verification_progress;\n };\n \n+//! External signer interface used by the GUI.\n+class ExternalSigner\n+{\n+public:\n+    virtual ~ExternalSigner() {};\n+\n+    //! Get signer display name\n+    virtual std::string getName() = 0;\n+};\n+\n //! Top-level interface for a bitcoin node (bitcoind process).\n class Node\n {\n@@ -111,8 +120,8 @@ class Node\n     //! Disconnect node by id.\n     virtual bool disconnectById(NodeId id) = 0;\n \n-    //! List external signers\n-    virtual std::vector<ExternalSigner> externalSigners() = 0;\n+    //! Return list of external signers (attached devices which can sign transactions).\n+    virtual std::vector<std::unique_ptr<ExternalSigner>> listExternalSigners() = 0;\n \n     //! Get total bytes recv.\n     virtual int64_t getTotalBytesRecv() = 0;"
      },
      {
        "sha": "24959f385e26260e9a80d2535f18678671767e50",
        "filename": "src/node/interfaces.cpp",
        "status": "modified",
        "additions": 18,
        "deletions": 3,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a032fa30d282fa69c304e0afd1f95f67c55d22e3/src/node/interfaces.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a032fa30d282fa69c304e0afd1f95f67c55d22e3/src/node/interfaces.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/node/interfaces.cpp?ref=a032fa30d282fa69c304e0afd1f95f67c55d22e3",
        "patch": "@@ -67,6 +67,17 @@ using interfaces::WalletClient;\n \n namespace node {\n namespace {\n+#ifdef ENABLE_EXTERNAL_SIGNER\n+class ExternalSignerImpl : public interfaces::ExternalSigner\n+{\n+public:\n+    ExternalSignerImpl(::ExternalSigner signer) : m_signer(std::move(signer)) {}\n+    std::string getName() override { return m_signer.m_name; }\n+private:\n+    ::ExternalSigner m_signer;\n+};\n+#endif\n+\n class NodeImpl : public Node\n {\n private:\n@@ -172,14 +183,18 @@ class NodeImpl : public Node\n         }\n         return false;\n     }\n-    std::vector<ExternalSigner> externalSigners() override\n+    std::vector<std::unique_ptr<interfaces::ExternalSigner>> listExternalSigners() override\n     {\n #ifdef ENABLE_EXTERNAL_SIGNER\n         std::vector<ExternalSigner> signers = {};\n         const std::string command = gArgs.GetArg(\"-signer\", \"\");\n-        if (command == \"\") return signers;\n+        if (command == \"\") return {};\n         ExternalSigner::Enumerate(command, signers, Params().NetworkIDString());\n-        return signers;\n+        std::vector<std::unique_ptr<interfaces::ExternalSigner>> result;\n+        for (auto& signer : signers) {\n+            result.emplace_back(std::make_unique<ExternalSignerImpl>(std::move(signer)));\n+        }\n+        return result;\n #else\n         // This result is indistinguishable from a successful call that returns\n         // no signers. For the current GUI this doesn't matter, because the wallet"
      },
      {
        "sha": "eba70331f815910444c2866967143ccf05a01c65",
        "filename": "src/qt/createwalletdialog.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a032fa30d282fa69c304e0afd1f95f67c55d22e3/src/qt/createwalletdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a032fa30d282fa69c304e0afd1f95f67c55d22e3/src/qt/createwalletdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/createwalletdialog.cpp?ref=a032fa30d282fa69c304e0afd1f95f67c55d22e3",
        "patch": "@@ -6,7 +6,7 @@\n #include <config/bitcoin-config.h>\n #endif\n \n-#include <external_signer.h>\n+#include <interfaces/node.h>\n #include <qt/createwalletdialog.h>\n #include <qt/forms/ui_createwalletdialog.h>\n \n@@ -113,7 +113,7 @@ CreateWalletDialog::~CreateWalletDialog()\n     delete ui;\n }\n \n-void CreateWalletDialog::setSigners(const std::vector<ExternalSigner>& signers)\n+void CreateWalletDialog::setSigners(const std::vector<std::unique_ptr<interfaces::ExternalSigner>>& signers)\n {\n     m_has_signers = !signers.empty();\n     if (m_has_signers) {\n@@ -126,7 +126,7 @@ void CreateWalletDialog::setSigners(const std::vector<ExternalSigner>& signers)\n         ui->blank_wallet_checkbox->setChecked(false);\n         ui->disable_privkeys_checkbox->setEnabled(false);\n         ui->disable_privkeys_checkbox->setChecked(true);\n-        const std::string label = signers[0].m_name;\n+        const std::string label = signers[0]->getName();\n         ui->wallet_name_line_edit->setText(QString::fromStdString(label));\n         ui->buttonBox->button(QDialogButtonBox::Ok)->setEnabled(true);\n     } else {"
      },
      {
        "sha": "63a5e012d8ce6eda1a543909c51f17206cb13e94",
        "filename": "src/qt/createwalletdialog.h",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a032fa30d282fa69c304e0afd1f95f67c55d22e3/src/qt/createwalletdialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a032fa30d282fa69c304e0afd1f95f67c55d22e3/src/qt/createwalletdialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/createwalletdialog.h?ref=a032fa30d282fa69c304e0afd1f95f67c55d22e3",
        "patch": "@@ -7,7 +7,12 @@\n \n #include <QDialog>\n \n+#include <memory>\n+\n+namespace interfaces {\n class ExternalSigner;\n+} // namespace interfaces\n+\n class WalletModel;\n \n namespace Ui {\n@@ -24,7 +29,7 @@ class CreateWalletDialog : public QDialog\n     explicit CreateWalletDialog(QWidget* parent);\n     virtual ~CreateWalletDialog();\n \n-    void setSigners(const std::vector<ExternalSigner>& signers);\n+    void setSigners(const std::vector<std::unique_ptr<interfaces::ExternalSigner>>& signers);\n \n     QString walletName() const;\n     bool isEncryptWalletChecked() const;"
      },
      {
        "sha": "9c6349284e1abbe3c149e8fb353833dbe5020d66",
        "filename": "src/qt/walletcontroller.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a032fa30d282fa69c304e0afd1f95f67c55d22e3/src/qt/walletcontroller.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a032fa30d282fa69c304e0afd1f95f67c55d22e3/src/qt/walletcontroller.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletcontroller.cpp?ref=a032fa30d282fa69c304e0afd1f95f67c55d22e3",
        "patch": "@@ -274,9 +274,9 @@ void CreateWalletActivity::create()\n {\n     m_create_wallet_dialog = new CreateWalletDialog(m_parent_widget);\n \n-    std::vector<ExternalSigner> signers;\n+    std::vector<std::unique_ptr<interfaces::ExternalSigner>> signers;\n     try {\n-        signers = node().externalSigners();\n+        signers = node().listExternalSigners();\n     } catch (const std::runtime_error& e) {\n         QMessageBox::critical(nullptr, tr(\"Can't list signers\"), e.what());\n     }"
      }
    ]
  }
]