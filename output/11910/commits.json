[
  {
    "sha": "62b5494393ac3d68acf2c63a01dd4036e9e48767",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2MmI1NDk0MzkzYWMzZDY4YWNmMmM2M2EwMWRkNDAzNmU5ZTQ4NzY3",
    "commit": {
      "author": {
        "name": "snomofomo",
        "email": "snomofomo@gmail.com",
        "date": "2017-10-10T04:24:39Z"
      },
      "committer": {
        "name": "GitHub",
        "email": "noreply@github.com",
        "date": "2017-10-10T04:24:39Z"
      },
      "message": "Merge pull request #1 from bitcoin/master\n\neverything core did plus infinity",
      "tree": {
        "sha": "e66fbf87f45854ef611f4113de73f677b5a26db0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e66fbf87f45854ef611f4113de73f677b5a26db0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/62b5494393ac3d68acf2c63a01dd4036e9e48767",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/62b5494393ac3d68acf2c63a01dd4036e9e48767",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/62b5494393ac3d68acf2c63a01dd4036e9e48767",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/62b5494393ac3d68acf2c63a01dd4036e9e48767/comments",
    "author": {
      "login": "snomofomo",
      "id": 25273067,
      "node_id": "MDQ6VXNlcjI1MjczMDY3",
      "avatar_url": "https://avatars.githubusercontent.com/u/25273067?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/snomofomo",
      "html_url": "https://github.com/snomofomo",
      "followers_url": "https://api.github.com/users/snomofomo/followers",
      "following_url": "https://api.github.com/users/snomofomo/following{/other_user}",
      "gists_url": "https://api.github.com/users/snomofomo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/snomofomo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/snomofomo/subscriptions",
      "organizations_url": "https://api.github.com/users/snomofomo/orgs",
      "repos_url": "https://api.github.com/users/snomofomo/repos",
      "events_url": "https://api.github.com/users/snomofomo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/snomofomo/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "web-flow",
      "id": 19864447,
      "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
      "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/web-flow",
      "html_url": "https://github.com/web-flow",
      "followers_url": "https://api.github.com/users/web-flow/followers",
      "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
      "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
      "organizations_url": "https://api.github.com/users/web-flow/orgs",
      "repos_url": "https://api.github.com/users/web-flow/repos",
      "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/web-flow/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bf0a08be281dc42241e7f264c2a20515eb4781bb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bf0a08be281dc42241e7f264c2a20515eb4781bb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bf0a08be281dc42241e7f264c2a20515eb4781bb"
      },
      {
        "sha": "e022463a4b238750476430d08b45bc9171791e6f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e022463a4b238750476430d08b45bc9171791e6f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e022463a4b238750476430d08b45bc9171791e6f"
      }
    ],
    "stats": {
      "total": 38740,
      "additions": 28501,
      "deletions": 10239
    },
    "files": [
      {
        "sha": "0de7ca6f7565f7d04224bc0b57dc159c7413a7d4",
        "filename": ".travis.yml",
        "status": "modified",
        "additions": 18,
        "deletions": 11,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/.travis.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/.travis.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis.yml?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -24,32 +24,39 @@ env:\n # ARM\n     - HOST=arm-linux-gnueabihf PACKAGES=\"g++-arm-linux-gnueabihf\" DEP_OPTS=\"NO_QT=1\" CHECK_DOC=1 GOAL=\"install\" BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports\"\n # Win32\n-    - HOST=i686-w64-mingw32 DPKG_ADD_ARCH=\"i386\" DEP_OPTS=\"NO_QT=1\" PACKAGES=\"python3 nsis g++-mingw-w64-i686 wine1.6 bc\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-reduce-exports\"\n+    - HOST=i686-w64-mingw32 DPKG_ADD_ARCH=\"i386\" DEP_OPTS=\"NO_QT=1\" PACKAGES=\"python3 nsis g++-mingw-w64-i686 wine1.6\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-reduce-exports\"\n+# Qt4 & system libs\n+    - HOST=x86_64-unknown-linux-gnu PACKAGES=\"python3-zmq qt4-dev-tools libssl-dev libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-program-options-dev libboost-test-dev libboost-thread-dev libdb5.1++-dev libminiupnpc-dev libzmq3-dev libprotobuf-dev protobuf-compiler libqrencode-dev xvfb\" NO_DEPENDS=1 NEED_XVFB=1 RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-zmq --with-incompatible-bdb --enable-glibc-back-compat --enable-reduce-exports --with-gui=qt4 CPPFLAGS=-DDEBUG_LOCKORDER\"\n # 32-bit + dash\n-    - HOST=i686-pc-linux-gnu PACKAGES=\"g++-multilib bc python3-zmq\" DEP_OPTS=\"NO_QT=1\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-zmq --enable-glibc-back-compat --enable-reduce-exports LDFLAGS=-static-libstdc++\" USE_SHELL=\"/bin/dash\"\n+    - HOST=i686-pc-linux-gnu PACKAGES=\"g++-multilib python3-zmq\" DEP_OPTS=\"NO_QT=1\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-zmq --enable-glibc-back-compat --enable-reduce-exports LDFLAGS=-static-libstdc++\" USE_SHELL=\"/bin/dash\"\n # Win64\n-    - HOST=x86_64-w64-mingw32 DPKG_ADD_ARCH=\"i386\" DEP_OPTS=\"NO_QT=1\" PACKAGES=\"python3 nsis g++-mingw-w64-x86-64 wine1.6 bc\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-reduce-exports\"\n-# bitcoind\n-    - HOST=x86_64-unknown-linux-gnu PACKAGES=\"bc python3-zmq\" DEP_OPTS=\"NO_QT=1 NO_UPNP=1 DEBUG=1\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-zmq --enable-glibc-back-compat --enable-reduce-exports CPPFLAGS=-DDEBUG_LOCKORDER\"\n-# No wallet\n+    - HOST=x86_64-w64-mingw32 DPKG_ADD_ARCH=\"i386\" DEP_OPTS=\"NO_QT=1\" PACKAGES=\"python3 nsis g++-mingw-w64-x86-64 wine1.6\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-reduce-exports\"\n+# x86_64 Linux (uses qt5 dev package instead of depends Qt to speed up build and avoid timeout)\n+    - HOST=x86_64-unknown-linux-gnu PACKAGES=\"python3-zmq qtbase5-dev qttools5-dev-tools protobuf-compiler libdbus-1-dev libharfbuzz-dev\" DEP_OPTS=\"NO_QT=1 NO_UPNP=1 DEBUG=1 ALLOW_HOST_PACKAGES=1\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-zmq --with-gui=qt5 --enable-glibc-back-compat --enable-reduce-exports CPPFLAGS=-DDEBUG_LOCKORDER\"\n+# x86_64 Linux, No wallet\n     - HOST=x86_64-unknown-linux-gnu PACKAGES=\"python3\" DEP_OPTS=\"NO_WALLET=1\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports\"\n # Cross-Mac\n-    - HOST=x86_64-apple-darwin11 PACKAGES=\"cmake imagemagick libcap-dev librsvg2-bin libz-dev libbz2-dev libtiff-tools python-dev\" BITCOIN_CONFIG=\"--enable-gui --enable-reduce-exports\" OSX_SDK=10.11 GOAL=\"deploy\"\n+    - HOST=x86_64-apple-darwin11 PACKAGES=\"cmake imagemagick libcap-dev librsvg2-bin libz-dev libbz2-dev libtiff-tools python-dev\" BITCOIN_CONFIG=\"--enable-gui --enable-reduce-exports --enable-werror\" OSX_SDK=10.11 GOAL=\"deploy\"\n \n before_install:\n     - export PATH=$(echo $PATH | tr ':' \"\\n\" | sed '/\\/opt\\/python/d' | tr \"\\n\" \":\" | sed \"s|::|:|g\")\n+    - export PATH=$(echo $PATH | tr ':' \"\\n\" | sed '/\\/opt\\/pyenv/d' | tr \"\\n\" \":\" | sed \"s|::|:|g\")\n install:\n     - if [ -n \"$DPKG_ADD_ARCH\" ]; then sudo dpkg --add-architecture \"$DPKG_ADD_ARCH\" ; fi\n     - if [ -n \"$PACKAGES\" ]; then travis_retry sudo apt-get update; fi\n     - if [ -n \"$PACKAGES\" ]; then travis_retry sudo apt-get install --no-install-recommends --no-upgrade -qq $PACKAGES; fi\n before_script:\n-    - if [ \"$TRAVIS_EVENT_TYPE\" = \"pull_request\" ]; then contrib/devtools/commit-script-check.sh $TRAVIS_COMMIT_RANGE; fi\n-    - unset CC; unset CXX\n+    - if [ \"$CHECK_DOC\" = 1 -a \"$TRAVIS_EVENT_TYPE\" = \"pull_request\" ]; then contrib/devtools/commit-script-check.sh $TRAVIS_COMMIT_RANGE; fi\n     - if [ \"$CHECK_DOC\" = 1 ]; then contrib/devtools/check-doc.py; fi\n+    - if [ \"$CHECK_DOC\" = 1 ]; then contrib/devtools/check-rpc-mappings.py .; fi\n+    - if [ \"$CHECK_DOC\" = 1 ]; then contrib/devtools/lint-all.sh; fi\n+    - unset CC; unset CXX\n     - mkdir -p depends/SDKs depends/sdk-sources\n     - if [ -n \"$OSX_SDK\" -a ! -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then curl --location --fail $SDK_URL/MacOSX${OSX_SDK}.sdk.tar.gz -o depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz; fi\n     - if [ -n \"$OSX_SDK\" -a -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then tar -C depends/SDKs -xf depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz; fi\n-    - make $MAKEJOBS -C depends HOST=$HOST $DEP_OPTS\n+    - if [ -z \"$NO_DEPENDS\" ]; then make $MAKEJOBS -C depends HOST=$HOST $DEP_OPTS; fi\n+    # Start xvfb if needed, as documented at https://docs.travis-ci.com/user/gui-and-headless-browsers/#Using-xvfb-to-Run-Tests-That-Require-a-GUI\n+    - if [ \"$NEED_XVFB\" = 1 ]; then export DISPLAY=:99.0; /sbin/start-stop-daemon --start --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -ac; fi\n script:\n     - if [ \"$CHECK_DOC\" = 1 -a \"$TRAVIS_REPO_SLUG\" = \"bitcoin/bitcoin\" -a \"$TRAVIS_PULL_REQUEST\" = \"false\" ]; then while read LINE; do travis_retry gpg --keyserver hkp://subset.pool.sks-keyservers.net --recv-keys $LINE; done < contrib/verify-commits/trusted-keys; fi\n     - if [ \"$CHECK_DOC\" = 1 -a \"$TRAVIS_REPO_SLUG\" = \"bitcoin/bitcoin\" -a \"$TRAVIS_PULL_REQUEST\" = \"false\" ]; then git fetch --unshallow; fi\n@@ -58,7 +65,7 @@ script:\n     - if [ -n \"$USE_SHELL\" ]; then export CONFIG_SHELL=\"$USE_SHELL\"; fi\n     - OUTDIR=$BASE_OUTDIR/$TRAVIS_PULL_REQUEST/$TRAVIS_JOB_NUMBER-$HOST\n     - BITCOIN_CONFIG_ALL=\"--disable-dependency-tracking --prefix=$TRAVIS_BUILD_DIR/depends/$HOST --bindir=$OUTDIR/bin --libdir=$OUTDIR/lib\"\n-    - depends/$HOST/native/bin/ccache --max-size=$CCACHE_SIZE\n+    - if [ -z \"$NO_DEPENDS\" ]; then depends/$HOST/native/bin/ccache --max-size=$CCACHE_SIZE; fi\n     - test -n \"$USE_SHELL\" && eval '\"$USE_SHELL\" -c \"./autogen.sh\"' || ./autogen.sh\n     - mkdir build && cd build\n     - ../configure --cache-file=config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( cat config.log && false)"
      },
      {
        "sha": "aed6d7954255755529093839251b04813d0631af",
        "filename": "CONTRIBUTING.md",
        "status": "modified",
        "additions": 18,
        "deletions": 6,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/CONTRIBUTING.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/CONTRIBUTING.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/CONTRIBUTING.md?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -81,6 +81,10 @@ Examples:\n     Qt: Add feed bump button\n     Trivial: Fix typo in init.cpp\n \n+Note that translations should not be submitted as pull requests, please see\n+[Translation Process](https://github.com/bitcoin/bitcoin/blob/master/doc/translation_process.md) \n+for more information on helping with translations.\n+\n If a pull request is specifically not to be considered for merging (yet) please\n prefix the title with [WIP] or use [Tasks Lists](https://help.github.com/articles/basic-writing-and-formatting-syntax/#task-lists)\n in the body of the pull request to indicate tasks are pending.\n@@ -153,6 +157,14 @@ behaviour of code within the pull request (bugs must be preserved as is).\n Project maintainers aim for a quick turnaround on refactoring pull requests, so\n where possible keep them short, uncomplex and easy to verify.\n \n+Pull requests that refactor the code should not be made by new contributors. It\n+requires a certain level of experience to know where the code belongs to and to\n+understand the full ramification (including rebase effort of open pull requests).\n+\n+Trivial pull requests or pull requests that refactor the code with no clear\n+benefits may be immediately closed by the maintainers to reduce unnecessary\n+workload on reviewing.\n+\n \n \"Decision Making\" Process\n -------------------------\n@@ -170,13 +182,13 @@ judge the general consensus of contributors.\n \n In general, all pull requests must:\n \n-  - have a clear use case, fix a demonstrable bug or serve the greater good of\n+  - Have a clear use case, fix a demonstrable bug or serve the greater good of\n     the project (for example refactoring for modularisation);\n-  - be well peer reviewed;\n-  - have unit tests and functional tests where appropriate;\n-  - follow code style guidelines;\n-  - not break the existing test suite;\n-  - where bugs are fixed, where possible, there should be unit tests\n+  - Be well peer reviewed;\n+  - Have unit tests and functional tests where appropriate;\n+  - Follow code style guidelines;\n+  - Not break the existing test suite;\n+  - Where bugs are fixed, where possible, there should be unit tests\n     demonstrating the bug and also proving the fix. This helps prevent regression.\n \n Patches that change Bitcoin consensus rules are considerably more involved than"
      },
      {
        "sha": "45d51c3c7851ed2043b6b540f31fcd0d54dc861f",
        "filename": "COPYING",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/COPYING",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/COPYING",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/COPYING?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -1,6 +1,7 @@\n The MIT License (MIT)\n \n Copyright (c) 2009-2017 The Bitcoin Core developers\n+Copyright (c) 2009-2017 Bitcoin Developers\n \n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal"
      },
      {
        "sha": "3b62a106031c86f431981d4bae5f5447ef0efea1",
        "filename": "Makefile.am",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/Makefile.am?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -249,6 +249,7 @@ EXTRA_DIST += \\\n     test/util/data/txcreatemultisig3.json \\\n     test/util/data/txcreatemultisig4.hex \\\n     test/util/data/txcreatemultisig4.json \\\n+    test/util/data/txcreatemultisig5.json \\\n     test/util/data/txcreateoutpubkey1.hex \\\n     test/util/data/txcreateoutpubkey1.json \\\n     test/util/data/txcreateoutpubkey2.hex \\"
      },
      {
        "sha": "b9bf7bf46e54971d3f0f3b9353a707fce3ddb4a3",
        "filename": "build-aux/m4/bitcoin_find_bdb48.m4",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/build-aux/m4/bitcoin_find_bdb48.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/build-aux/m4/bitcoin_find_bdb48.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/bitcoin_find_bdb48.m4?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -12,7 +12,7 @@ AC_DEFUN([BITCOIN_FIND_BDB48],[\n     bdbpath=X\n     bdb48path=X\n     bdbdirlist=\n-    for _vn in 4.8 48 4 5 ''; do\n+    for _vn in 4.8 48 4 5 5.3 ''; do\n       for _pfx in b lib ''; do\n         bdbdirlist=\"$bdbdirlist ${_pfx}db${_vn}\"\n       done"
      },
      {
        "sha": "81c84a8af40cc4bc9b43b0001f37bd38f90cce30",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 31,
        "deletions": 11,
        "changes": 42,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -1,7 +1,7 @@\n dnl require autoconf 2.60 (AS_ECHO/AS_ECHO_N)\n AC_PREREQ([2.60])\n define(_CLIENT_VERSION_MAJOR, 0)\n-define(_CLIENT_VERSION_MINOR, 14)\n+define(_CLIENT_VERSION_MINOR, 15)\n define(_CLIENT_VERSION_REVISION, 99)\n define(_CLIENT_VERSION_BUILD, 0)\n define(_CLIENT_VERSION_IS_RELEASE, false)\n@@ -177,6 +177,16 @@ AC_ARG_ENABLE([glibc-back-compat],\n   [use_glibc_compat=$enableval],\n   [use_glibc_compat=no])\n \n+AC_ARG_ENABLE([asm],\n+  [AS_HELP_STRING([--enable-asm],\n+  [Enable assembly routines (default is yes)])],\n+  [use_asm=$enableval],\n+  [use_asm=yes])\n+\n+if test \"x$use_asm\" = xyes; then\n+  AC_DEFINE(USE_ASM, 1, [Define this symbol to build in assembly routines])\n+fi\n+\n AC_ARG_WITH([system-univalue],\n   [AS_HELP_STRING([--with-system-univalue],\n   [Build with system UniValue (default is no)])],\n@@ -248,14 +258,13 @@ if test \"x$CXXFLAGS_overridden\" = \"xno\"; then\n   AX_CHECK_COMPILE_FLAG([-Wunused-local-typedef],[CXXFLAGS=\"$CXXFLAGS -Wno-unused-local-typedef\"],,[[$CXXFLAG_WERROR]])\n   AX_CHECK_COMPILE_FLAG([-Wdeprecated-register],[CXXFLAGS=\"$CXXFLAGS -Wno-deprecated-register\"],,[[$CXXFLAG_WERROR]])\n   AX_CHECK_COMPILE_FLAG([-Wimplicit-fallthrough],[CXXFLAGS=\"$CXXFLAGS -Wno-implicit-fallthrough\"],,[[$CXXFLAG_WERROR]])\n-\n-  # Check for optional instruction set support. Enabling these does _not_ imply that all code will\n-  # be compiled with them, rather that specific objects/libs may use them after checking for runtime\n-  # compatibility.\n-  AX_CHECK_COMPILE_FLAG([-msse4.2],[[SSE42_CXXFLAGS=\"-msse4.2\"]],,[[$CXXFLAG_WERROR]])\n-\n fi\n \n+# Check for optional instruction set support. Enabling these does _not_ imply that all code will\n+# be compiled with them, rather that specific objects/libs may use them after checking for runtime\n+# compatibility.\n+AX_CHECK_COMPILE_FLAG([-msse4.2],[[SSE42_CXXFLAGS=\"-msse4.2\"]],,[[$CXXFLAG_WERROR]])\n+\n TEMP_CXXFLAGS=\"$CXXFLAGS\"\n CXXFLAGS=\"$CXXFLAGS $SSE42_CXXFLAGS\"\n AC_MSG_CHECKING(for assembler crc32 support)\n@@ -665,6 +674,14 @@ AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <unistd.h>]],\n  [ AC_MSG_RESULT(no)]\n )\n \n+AC_MSG_CHECKING(for getentropy via random.h)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <unistd.h>\n+ #include <sys/random.h>]],\n+ [[ getentropy(nullptr, 32) ]])],\n+ [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_GETENTROPY_RAND, 1,[Define this symbol if the BSD getentropy system call is available with sys/random.h]) ],\n+ [ AC_MSG_RESULT(no)]\n+)\n+\n AC_MSG_CHECKING(for sysctl KERN_ARND)\n AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/types.h>\n   #include <sys/sysctl.h>]],\n@@ -810,14 +827,14 @@ TEMP_CPPFLAGS=\"$CPPFLAGS\"\n CPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n AC_MSG_CHECKING([for mismatched boost c++11 scoped enums])\n AC_LINK_IFELSE([AC_LANG_PROGRAM([[\n-  #include \"boost/config.hpp\"\n-  #include \"boost/version.hpp\"\n+  #include <boost/config.hpp>\n+  #include <boost/version.hpp>\n   #if !defined(BOOST_NO_SCOPED_ENUMS) && !defined(BOOST_NO_CXX11_SCOPED_ENUMS) && BOOST_VERSION < 105700\n   #define BOOST_NO_SCOPED_ENUMS\n   #define BOOST_NO_CXX11_SCOPED_ENUMS\n   #define CHECK\n   #endif\n-  #include \"boost/filesystem.hpp\"\n+  #include <boost/filesystem.hpp>\n   ]],[[\n   #if defined(CHECK)\n     boost::filesystem::copy_file(\"foo\", \"bar\");\n@@ -1162,6 +1179,7 @@ AM_CONDITIONAL([USE_LCOV],[test x$use_lcov = xyes])\n AM_CONDITIONAL([GLIBC_BACK_COMPAT],[test x$use_glibc_compat = xyes])\n AM_CONDITIONAL([HARDEN],[test x$use_hardening = xyes])\n AM_CONDITIONAL([ENABLE_HWCRC32],[test x$enable_hwcrc32 = xyes])\n+AM_CONDITIONAL([USE_ASM],[test x$use_asm = xyes])\n \n AC_DEFINE(CLIENT_VERSION_MAJOR, _CLIENT_VERSION_MAJOR, [Major version])\n AC_DEFINE(CLIENT_VERSION_MINOR, _CLIENT_VERSION_MINOR, [Minor version])\n@@ -1213,6 +1231,7 @@ AC_SUBST(QR_LIBS)\n AC_CONFIG_FILES([Makefile src/Makefile doc/man/Makefile share/setup.nsi share/qt/Info.plist test/config.ini])\n AC_CONFIG_FILES([contrib/devtools/split-debug.sh],[chmod +x contrib/devtools/split-debug.sh])\n AC_CONFIG_FILES([doc/Doxyfile])\n+AC_CONFIG_LINKS([contrib/filter-lcov.py:contrib/filter-lcov.py])\n AC_CONFIG_LINKS([test/functional/test_runner.py:test/functional/test_runner.py])\n AC_CONFIG_LINKS([test/util/bitcoin-util-test.py:test/util/bitcoin-util-test.py])\n \n@@ -1243,7 +1262,7 @@ if test x$need_bundled_univalue = xyes; then\n   AC_CONFIG_SUBDIRS([src/univalue])\n fi\n \n-ac_configure_args=\"${ac_configure_args} --disable-shared --with-pic --with-bignum=no --enable-module-recovery\"\n+ac_configure_args=\"${ac_configure_args} --disable-shared --with-pic --with-bignum=no --enable-module-recovery --disable-jni\"\n AC_CONFIG_SUBDIRS([src/secp256k1])\n \n AC_OUTPUT\n@@ -1279,6 +1298,7 @@ echo \"  with zmq      = $use_zmq\"\n echo \"  with test     = $use_tests\"\n echo \"  with bench    = $use_bench\"\n echo \"  with upnp     = $use_upnp\"\n+echo \"  use asm       = $use_asm\"\n echo \"  debug enabled = $enable_debug\"\n echo \"  werror        = $enable_werror\"\n echo "
      },
      {
        "sha": "a582a724f75ae59e6a1c1f19fbde10d7f0834462",
        "filename": "contrib/README.md",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/contrib/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/contrib/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/README.md?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -26,7 +26,7 @@ Contains files used to package bitcoind/bitcoin-qt\n for Debian-based Linux systems. If you compile bitcoind/bitcoin-qt yourself, there are some useful files here.\n \n ### [Gitian-descriptors](/contrib/gitian-descriptors) ###\n-Notes on getting Gitian builds up and running using KVM.\n+Files used during the gitian build process. For more information about gitian, see the [the Bitcoin Core documentation repository](https://github.com/bitcoin-core/docs).\n \n ### [Gitian-keys](/contrib/gitian-keys)\n PGP keys used for signing Bitcoin Core [Gitian release](/doc/release-process.md) results.\n@@ -35,7 +35,7 @@ PGP keys used for signing Bitcoin Core [Gitian release](/doc/release-process.md)\n Scripts and notes for Mac builds. \n \n ### [RPM](/contrib/rpm) ###\n-RPM spec file for building bitcoin-core on RPM based distributions\n+RPM spec file for building bitcoin-core on RPM based distributions.\n \n ### [Gitian-build](/contrib/gitian-build.sh) ###\n Script for running full Gitian builds."
      },
      {
        "sha": "cccd4bde0d33d9dae39a23b53e2816ae5f1c5464",
        "filename": "contrib/bitcoind.bash-completion",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/contrib/bitcoind.bash-completion",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/contrib/bitcoind.bash-completion",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/bitcoind.bash-completion?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -30,7 +30,7 @@ _bitcoind() {\n             ;;\n         *)\n \n-            # only parse -help if senseful\n+            # only parse -help if sensible\n             if [[ -z \"$cur\" || \"$cur\" =~ ^- ]]; then\n                 local helpopts\n                 helpopts=$($bitcoind -help 2>&1 | awk '$1 ~ /^-/ { sub(/=.*/, \"=\"); print $1 }' )"
      },
      {
        "sha": "14a59fdf6bc8b58e3bc3e6720548a12fa6ea3b88",
        "filename": "contrib/debian/examples/bitcoin.conf",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/contrib/debian/examples/bitcoin.conf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/contrib/debian/examples/bitcoin.conf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/examples/bitcoin.conf?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -76,7 +76,7 @@\n #rpcuser=Ulysseys\n #rpcpassword=YourSuperGreatPasswordNumber_DO_NOT_USE_THIS_OR_YOU_WILL_GET_ROBBED_385593\n #\n-# The second method `rpcauth` can be added to server startup argument. It is set at intialization time\n+# The second method `rpcauth` can be added to server startup argument. It is set at initialization time\n # using the output from the script in share/rpcuser/rpcuser.py after providing a username:\n #\n # ./share/rpcuser/rpcuser.py alice"
      },
      {
        "sha": "10c3bab03b69317d57f0a6b548844ea5d22c6eab",
        "filename": "contrib/devtools/check-doc.py",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/contrib/devtools/check-doc.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/contrib/devtools/check-doc.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/check-doc.py?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -12,6 +12,7 @@\n \n from subprocess import check_output\n import re\n+import sys\n \n FOLDER_GREP = 'src'\n FOLDER_TEST = 'src/test/'\n@@ -21,7 +22,7 @@\n REGEX_ARG = re.compile(r'(?:map(?:Multi)?Args(?:\\.count\\(|\\[)|Get(?:Bool)?Arg\\()\\\"(\\-[^\\\"]+?)\\\"')\n REGEX_DOC = re.compile(r'HelpMessageOpt\\(\\\"(\\-[^\\\"=]+?)(?:=|\\\")')\n # list unsupported, deprecated and duplicate args as they need no documentation\n-SET_DOC_OPTIONAL = set(['-rpcssl', '-benchmark', '-h', '-help', '-socks', '-tor', '-debugnet', '-whitelistalwaysrelay', '-prematurewitness', '-walletprematurewitness', '-promiscuousmempoolflags', '-blockminsize', '-dbcrashratio'])\n+SET_DOC_OPTIONAL = set(['-rpcssl', '-benchmark', '-h', '-help', '-socks', '-tor', '-debugnet', '-whitelistalwaysrelay', '-prematurewitness', '-walletprematurewitness', '-promiscuousmempoolflags', '-blockminsize', '-dbcrashratio', '-forcecompactdb', '-usehd'])\n \n def main():\n   used = check_output(CMD_GREP_ARGS, shell=True)\n@@ -39,7 +40,7 @@ def main():\n   print \"Args unknown     : %s\" % len(args_unknown)\n   print args_unknown\n \n-  exit(len(args_need_doc))\n+  sys.exit(len(args_need_doc))\n \n if __name__ == \"__main__\":\n     main()"
      },
      {
        "sha": "7e96852c5c26c78040ec173c2a14f5869218e35c",
        "filename": "contrib/devtools/check-rpc-mappings.py",
        "status": "added",
        "additions": 158,
        "deletions": 0,
        "changes": 158,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/contrib/devtools/check-rpc-mappings.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/contrib/devtools/check-rpc-mappings.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/check-rpc-mappings.py?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -0,0 +1,158 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Check RPC argument consistency.\"\"\"\n+\n+from collections import defaultdict\n+import os\n+import re\n+import sys\n+\n+# Source files (relative to root) to scan for dispatch tables\n+SOURCES = [\n+    \"src/rpc/server.cpp\",\n+    \"src/rpc/blockchain.cpp\",\n+    \"src/rpc/mining.cpp\",\n+    \"src/rpc/misc.cpp\",\n+    \"src/rpc/net.cpp\",\n+    \"src/rpc/rawtransaction.cpp\",\n+    \"src/wallet/rpcwallet.cpp\",\n+]\n+# Source file (relative to root) containing conversion mapping\n+SOURCE_CLIENT = 'src/rpc/client.cpp'\n+# Argument names that should be ignored in consistency checks\n+IGNORE_DUMMY_ARGS = {'dummy', 'arg0', 'arg1', 'arg2', 'arg3', 'arg4', 'arg5', 'arg6', 'arg7', 'arg8', 'arg9'}\n+\n+class RPCCommand:\n+    def __init__(self, name, args):\n+        self.name = name\n+        self.args = args\n+\n+class RPCArgument:\n+    def __init__(self, names, idx):\n+        self.names = names\n+        self.idx = idx\n+        self.convert = False\n+\n+def parse_string(s):\n+    assert s[0] == '\"'\n+    assert s[-1] == '\"'\n+    return s[1:-1]\n+\n+def process_commands(fname):\n+    \"\"\"Find and parse dispatch table in implementation file `fname`.\"\"\"\n+    cmds = []\n+    in_rpcs = False\n+    with open(fname, \"r\") as f:\n+        for line in f:\n+            line = line.rstrip()\n+            if not in_rpcs:\n+                if re.match(\"static const CRPCCommand .*\\[\\] =\", line):\n+                    in_rpcs = True\n+            else:\n+                if line.startswith('};'):\n+                    in_rpcs = False\n+                elif '{' in line and '\"' in line:\n+                    m = re.search('{ *(\"[^\"]*\"), *(\"[^\"]*\"), *&([^,]*), *{([^}]*)} *},', line)\n+                    assert m, 'No match to table expression: %s' % line\n+                    name = parse_string(m.group(2))\n+                    args_str = m.group(4).strip()\n+                    if args_str:\n+                        args = [RPCArgument(parse_string(x.strip()).split('|'), idx) for idx, x in enumerate(args_str.split(','))]\n+                    else:\n+                        args = []\n+                    cmds.append(RPCCommand(name, args))\n+    assert not in_rpcs and cmds, \"Something went wrong with parsing the C++ file: update the regexps\"\n+    return cmds\n+\n+def process_mapping(fname):\n+    \"\"\"Find and parse conversion table in implementation file `fname`.\"\"\"\n+    cmds = []\n+    in_rpcs = False\n+    with open(fname, \"r\") as f:\n+        for line in f:\n+            line = line.rstrip()\n+            if not in_rpcs:\n+                if line == 'static const CRPCConvertParam vRPCConvertParams[] =':\n+                    in_rpcs = True\n+            else:\n+                if line.startswith('};'):\n+                    in_rpcs = False\n+                elif '{' in line and '\"' in line:\n+                    m = re.search('{ *(\"[^\"]*\"), *([0-9]+) *, *(\"[^\"]*\") *},', line)\n+                    assert m, 'No match to table expression: %s' % line\n+                    name = parse_string(m.group(1))\n+                    idx = int(m.group(2))\n+                    argname = parse_string(m.group(3))\n+                    cmds.append((name, idx, argname))\n+    assert not in_rpcs and cmds\n+    return cmds\n+\n+def main():\n+    root = sys.argv[1]\n+\n+    # Get all commands from dispatch tables\n+    cmds = []\n+    for fname in SOURCES:\n+        cmds += process_commands(os.path.join(root, fname))\n+\n+    cmds_by_name = {}\n+    for cmd in cmds:\n+        cmds_by_name[cmd.name] = cmd\n+\n+    # Get current convert mapping for client\n+    client = SOURCE_CLIENT\n+    mapping = set(process_mapping(os.path.join(root, client)))\n+\n+    print('* Checking consistency between dispatch tables and vRPCConvertParams')\n+\n+    # Check mapping consistency\n+    errors = 0\n+    for (cmdname, argidx, argname) in mapping:\n+        try:\n+            rargnames = cmds_by_name[cmdname].args[argidx].names\n+        except IndexError:\n+            print('ERROR: %s argument %i (named %s in vRPCConvertParams) is not defined in dispatch table' % (cmdname, argidx, argname))\n+            errors += 1\n+            continue\n+        if argname not in rargnames:\n+            print('ERROR: %s argument %i is named %s in vRPCConvertParams but %s in dispatch table' % (cmdname, argidx, argname, rargnames), file=sys.stderr)\n+            errors += 1\n+\n+    # Check for conflicts in vRPCConvertParams conversion\n+    # All aliases for an argument must either be present in the\n+    # conversion table, or not. Anything in between means an oversight\n+    # and some aliases won't work.\n+    for cmd in cmds:\n+        for arg in cmd.args:\n+            convert = [((cmd.name, arg.idx, argname) in mapping) for argname in arg.names]\n+            if any(convert) != all(convert):\n+                print('ERROR: %s argument %s has conflicts in vRPCConvertParams conversion specifier %s' % (cmd.name, arg.names, convert))\n+                errors += 1\n+            arg.convert = all(convert)\n+\n+    # Check for conversion difference by argument name.\n+    # It is preferable for API consistency that arguments with the same name\n+    # have the same conversion, so bin by argument name.\n+    all_methods_by_argname = defaultdict(list)\n+    converts_by_argname = defaultdict(list)\n+    for cmd in cmds:\n+        for arg in cmd.args:\n+            for argname in arg.names:\n+                all_methods_by_argname[argname].append(cmd.name)\n+                converts_by_argname[argname].append(arg.convert)\n+\n+    for argname, convert in converts_by_argname.items():\n+        if all(convert) != any(convert):\n+            if argname in IGNORE_DUMMY_ARGS:\n+                # these are testing or dummy, don't warn for them\n+                continue\n+            print('WARNING: conversion mismatch for argument named %s (%s)' %\n+                  (argname, list(zip(all_methods_by_argname[argname], converts_by_argname[argname]))))\n+\n+    sys.exit(errors > 0)\n+\n+\n+if __name__ == '__main__':\n+    main()"
      },
      {
        "sha": "2941d2cb6d7e783dd480711567238438fa2bc24c",
        "filename": "contrib/devtools/github-merge.py",
        "status": "modified",
        "additions": 23,
        "deletions": 26,
        "changes": 49,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/contrib/devtools/github-merge.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/contrib/devtools/github-merge.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/github-merge.py?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -20,6 +20,7 @@\n import argparse\n import hashlib\n import subprocess\n+import sys\n import json,codecs\n try:\n     from urllib.request import Request,urlopen\n@@ -158,11 +159,11 @@ def main():\n     if repo is None:\n         print(\"ERROR: No repository configured. Use this command to set:\", file=stderr)\n         print(\"git config githubmerge.repository <owner>/<repo>\", file=stderr)\n-        exit(1)\n+        sys.exit(1)\n     if signingkey is None:\n         print(\"ERROR: No GPG signing key set. Set one using:\",file=stderr)\n         print(\"git config --global user.signingkey <key>\",file=stderr)\n-        exit(1)\n+        sys.exit(1)\n \n     host_repo = host+\":\"+repo # shortcut for push/pull target\n \n@@ -173,7 +174,7 @@ def main():\n     # Receive pull information from github\n     info = retrieve_pr_info(repo,pull)\n     if info is None:\n-        exit(1)\n+        sys.exit(1)\n     title = info['title'].strip()\n     body = info['body'].strip()\n     # precedence order for destination branch argument:\n@@ -194,27 +195,23 @@ def main():\n         subprocess.check_call([GIT,'checkout','-q',branch])\n     except subprocess.CalledProcessError as e:\n         print(\"ERROR: Cannot check out branch %s.\" % (branch), file=stderr)\n-        exit(3)\n+        sys.exit(3)\n     try:\n-        subprocess.check_call([GIT,'fetch','-q',host_repo,'+refs/pull/'+pull+'/*:refs/heads/pull/'+pull+'/*'])\n+        subprocess.check_call([GIT,'fetch','-q',host_repo,'+refs/pull/'+pull+'/*:refs/heads/pull/'+pull+'/*',\n+                                                          '+refs/heads/'+branch+':refs/heads/'+base_branch])\n     except subprocess.CalledProcessError as e:\n-        print(\"ERROR: Cannot find pull request #%s on %s.\" % (pull,host_repo), file=stderr)\n-        exit(3)\n+        print(\"ERROR: Cannot find pull request #%s or branch %s on %s.\" % (pull,branch,host_repo), file=stderr)\n+        sys.exit(3)\n     try:\n         subprocess.check_call([GIT,'log','-q','-1','refs/heads/'+head_branch], stdout=devnull, stderr=stdout)\n     except subprocess.CalledProcessError as e:\n         print(\"ERROR: Cannot find head of pull request #%s on %s.\" % (pull,host_repo), file=stderr)\n-        exit(3)\n+        sys.exit(3)\n     try:\n         subprocess.check_call([GIT,'log','-q','-1','refs/heads/'+merge_branch], stdout=devnull, stderr=stdout)\n     except subprocess.CalledProcessError as e:\n         print(\"ERROR: Cannot find merge of pull request #%s on %s.\" % (pull,host_repo), file=stderr)\n-        exit(3)\n-    try:\n-        subprocess.check_call([GIT,'fetch','-q',host_repo,'+refs/heads/'+branch+':refs/heads/'+base_branch])\n-    except subprocess.CalledProcessError as e:\n-        print(\"ERROR: Cannot find branch %s on %s.\" % (branch,host_repo), file=stderr)\n-        exit(3)\n+        sys.exit(3)\n     subprocess.check_call([GIT,'checkout','-q',base_branch])\n     subprocess.call([GIT,'branch','-q','-D',local_merge_branch], stderr=devnull)\n     subprocess.check_call([GIT,'checkout','-q','-b',local_merge_branch])\n@@ -236,30 +233,30 @@ def main():\n         except subprocess.CalledProcessError as e:\n             print(\"ERROR: Cannot be merged cleanly.\",file=stderr)\n             subprocess.check_call([GIT,'merge','--abort'])\n-            exit(4)\n+            sys.exit(4)\n         logmsg = subprocess.check_output([GIT,'log','--pretty=format:%s','-n','1']).decode('utf-8')\n         if logmsg.rstrip() != firstline.rstrip():\n             print(\"ERROR: Creating merge failed (already merged?).\",file=stderr)\n-            exit(4)\n+            sys.exit(4)\n \n         symlink_files = get_symlink_files()\n         for f in symlink_files:\n             print(\"ERROR: File %s was a symlink\" % f)\n         if len(symlink_files) > 0:\n-            exit(4)\n+            sys.exit(4)\n \n         # Put tree SHA512 into the message\n         try:\n             first_sha512 = tree_sha512sum()\n             message += '\\n\\nTree-SHA512: ' + first_sha512\n         except subprocess.CalledProcessError as e:\n-            printf(\"ERROR: Unable to compute tree hash\")\n-            exit(4)\n+            print(\"ERROR: Unable to compute tree hash\")\n+            sys.exit(4)\n         try:\n             subprocess.check_call([GIT,'commit','--amend','-m',message.encode('utf-8')])\n         except subprocess.CalledProcessError as e:\n-            printf(\"ERROR: Cannot update message.\",file=stderr)\n-            exit(4)\n+            print(\"ERROR: Cannot update message.\", file=stderr)\n+            sys.exit(4)\n \n         print_merge_details(pull, title, branch, base_branch, head_branch)\n         print()\n@@ -268,7 +265,7 @@ def main():\n         if testcmd:\n             if subprocess.call(testcmd,shell=True):\n                 print(\"ERROR: Running %s failed.\" % testcmd,file=stderr)\n-                exit(5)\n+                sys.exit(5)\n \n             # Show the created merge.\n             diff = subprocess.check_output([GIT,'diff',merge_branch+'..'+local_merge_branch])\n@@ -279,7 +276,7 @@ def main():\n                 if reply.lower() == 'ignore':\n                     print(\"Difference with github ignored.\",file=stderr)\n                 else:\n-                    exit(6)\n+                    sys.exit(6)\n         else:\n             # Verify the result manually.\n             print(\"Dropping you on a shell so you can try building/testing the merged source.\",file=stderr)\n@@ -292,7 +289,7 @@ def main():\n         second_sha512 = tree_sha512sum()\n         if first_sha512 != second_sha512:\n             print(\"ERROR: Tree hash changed unexpectedly\",file=stderr)\n-            exit(8)\n+            sys.exit(8)\n \n         # Sign the merge commit.\n         print_merge_details(pull, title, branch, base_branch, head_branch)\n@@ -306,7 +303,7 @@ def main():\n                     print(\"Error while signing, asking again.\",file=stderr)\n             elif reply == 'x':\n                 print(\"Not signing off on merge, exiting.\",file=stderr)\n-                exit(1)\n+                sys.exit(1)\n \n         # Put the result in branch.\n         subprocess.check_call([GIT,'checkout','-q',branch])\n@@ -326,7 +323,7 @@ def main():\n             subprocess.check_call([GIT,'push',host_repo,'refs/heads/'+branch])\n             break\n         elif reply == 'x':\n-            exit(1)\n+            sys.exit(1)\n \n if __name__ == '__main__':\n     main()"
      },
      {
        "sha": "b6d86959c669c60919a738cd74674a40c4e89118",
        "filename": "contrib/devtools/lint-all.sh",
        "status": "added",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/contrib/devtools/lint-all.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/contrib/devtools/lint-all.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/lint-all.sh?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -0,0 +1,22 @@\n+#!/bin/bash\n+#\n+# Copyright (c) 2017 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#\n+# This script runs all contrib/devtools/lint-*.sh files, and fails if any exit\n+# with a non-zero status code.\n+\n+set -u\n+\n+SCRIPTDIR=$(dirname \"${BASH_SOURCE[0]}\")\n+LINTALL=$(basename \"${BASH_SOURCE[0]}\")\n+\n+for f in \"${SCRIPTDIR}\"/lint-*.sh; do\n+  if [ \"$(basename \"$f\")\" != \"$LINTALL\" ]; then\n+    if ! \"$f\"; then\n+      echo \"^---- failure generated from $f\"\n+      exit 1\n+    fi\n+  fi\n+done"
      },
      {
        "sha": "989923f31a656bd73ece41f30daeac1b70462821",
        "filename": "contrib/devtools/lint-whitespace.sh",
        "status": "added",
        "additions": 88,
        "deletions": 0,
        "changes": 88,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/contrib/devtools/lint-whitespace.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/contrib/devtools/lint-whitespace.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/lint-whitespace.sh?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -0,0 +1,88 @@\n+#!/bin/bash\n+#\n+# Copyright (c) 2017 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#\n+# Check for new lines in diff that introduce trailing whitespace.\n+\n+# We can't run this check unless we know the commit range for the PR.\n+if [ -z \"${TRAVIS_COMMIT_RANGE}\" ]; then\n+  echo \"Cannot run lint-whitespace.sh without commit range. To run locally, use:\"\n+  echo \"TRAVIS_COMMIT_RANGE='<commit range>' .lint-whitespace.sh\"\n+  echo \"For example:\"\n+  echo \"TRAVIS_COMMIT_RANGE='47ba2c3...ee50c9e' .lint-whitespace.sh\"\n+  exit 1\n+fi\n+\n+showdiff() {\n+  if ! git diff -U0 \"${TRAVIS_COMMIT_RANGE}\" -- \".\" \":(exclude)src/leveldb/\" \":(exclude)src/secp256k1/\" \":(exclude)src/univalue/\" \":(exclude)doc/release-notes/\"; then\n+    echo \"Failed to get a diff\"\n+    exit 1\n+  fi\n+}\n+\n+showcodediff() {\n+  if ! git diff -U0 \"${TRAVIS_COMMIT_RANGE}\" -- *.cpp *.h *.md *.py *.sh \":(exclude)src/leveldb/\" \":(exclude)src/secp256k1/\" \":(exclude)src/univalue/\" \":(exclude)doc/release-notes/\"; then\n+    echo \"Failed to get a diff\"\n+    exit 1\n+  fi\n+}\n+\n+RET=0\n+\n+# Check if trailing whitespace was found in the diff.\n+if showdiff | grep -E -q '^\\+.*\\s+$'; then\n+  echo \"This diff appears to have added new lines with trailing whitespace.\"\n+  echo \"The following changes were suspected:\"\n+  FILENAME=\"\"\n+  SEEN=0\n+  while read -r line; do\n+    if [[ \"$line\" =~ ^diff ]]; then\n+      FILENAME=\"$line\"\n+      SEEN=0\n+    elif [[ \"$line\" =~ ^@@ ]]; then\n+      LINENUMBER=\"$line\"\n+    else\n+      if [ \"$SEEN\" -eq 0 ]; then\n+        # The first time a file is seen with trailing whitespace, we print the\n+        # filename (preceded by a newline).\n+        echo\n+        echo \"$FILENAME\"\n+        echo \"$LINENUMBER\"\n+        SEEN=1\n+      fi\n+      echo \"$line\"\n+    fi\n+  done < <(showdiff | grep -E '^(diff --git |@@|\\+.*\\s+$)')\n+  RET=1\n+fi\n+\n+# Check if tab characters were found in the diff.\n+if showcodediff | grep -P -q '^\\+.*\\t'; then\n+  echo \"This diff appears to have added new lines with tab characters instead of spaces.\"\n+  echo \"The following changes were suspected:\"\n+  FILENAME=\"\"\n+  SEEN=0\n+  while read -r line; do\n+    if [[ \"$line\" =~ ^diff ]]; then\n+      FILENAME=\"$line\"\n+      SEEN=0\n+    elif [[ \"$line\" =~ ^@@ ]]; then\n+      LINENUMBER=\"$line\"\n+    else\n+      if [ \"$SEEN\" -eq 0 ]; then\n+        # The first time a file is seen with a tab character, we print the\n+        # filename (preceded by a newline).\n+        echo\n+        echo \"$FILENAME\"\n+        echo \"$LINENUMBER\"\n+        SEEN=1\n+      fi\n+      echo \"$line\"\n+    fi\n+  done < <(showcodediff | grep -P '^(diff --git |@@|\\+.*\\t)')\n+  RET=1\n+fi\n+\n+exit $RET"
      },
      {
        "sha": "6eb5667453d10e0ecd884e876c2581479f0fb95f",
        "filename": "contrib/devtools/security-check.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/contrib/devtools/security-check.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/contrib/devtools/security-check.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/security-check.py?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -212,5 +212,5 @@ def identify_executable(executable):\n         except IOError:\n             print('%s: cannot open' % filename)\n             retval = 1\n-    exit(retval)\n+    sys.exit(retval)\n "
      },
      {
        "sha": "98daa1bd76f94a76f85df6fc3d2f7d4f0ed37fe8",
        "filename": "contrib/devtools/symbol-check.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/contrib/devtools/symbol-check.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/contrib/devtools/symbol-check.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/symbol-check.py?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -159,6 +159,6 @@ def read_libraries(filename):\n                 print('%s: NEEDED library %s is not allowed' % (filename, library_name.decode('utf-8')))\n                 retval = 1\n \n-    exit(retval)\n+    sys.exit(retval)\n \n "
      },
      {
        "sha": "e1924749d21f192c30af1902e98fafadcf14576f",
        "filename": "contrib/devtools/update-translations.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/contrib/devtools/update-translations.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/contrib/devtools/update-translations.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/update-translations.py?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -36,12 +36,12 @@ def check_at_repository_root():\n     if not os.path.exists('.git'):\n         print('No .git directory found')\n         print('Execute this script at the root of the repository', file=sys.stderr)\n-        exit(1)\n+        sys.exit(1)\n \n def fetch_all_translations():\n     if subprocess.call([TX, 'pull', '-f', '-a']):\n         print('Error while fetching translations', file=sys.stderr)\n-        exit(1)\n+        sys.exit(1)\n \n def find_format_specifiers(s):\n     '''Find all format specifiers in a string.'''"
      },
      {
        "sha": "8fdec21b0e88f19b380480e5341656828c1f998b",
        "filename": "contrib/gitian-build.sh",
        "status": "modified",
        "additions": 3,
        "deletions": 5,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/contrib/gitian-build.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/contrib/gitian-build.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-build.sh?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -40,15 +40,15 @@ version\t\tVersion number, commit, or branch to build. If building a commit or bra\n Options:\n -c|--commit\tIndicate that the version argument is for a commit or branch\n -u|--url\tSpecify the URL of the repository. Default is https://github.com/bitcoin/bitcoin\n--v|--verify \tVerify the gitian build\n--b|--build\tDo a gitian build\n+-v|--verify \tVerify the Gitian build\n+-b|--build\tDo a Gitian build\n -s|--sign\tMake signed binaries for Windows and Mac OSX\n -B|--buildsign\tBuild both signed and unsigned binaries\n -o|--os\t\tSpecify which Operating Systems the build is for. Default is lwx. l for linux, w for windows, x for osx\n -j\t\tNumber of processes to use. Default 2\n -m\t\tMemory to allocate in MiB. Default 2000\n --kvm           Use KVM instead of LXC\n---setup         Setup the gitian building environment. Uses KVM. If you want to use lxc, use the --lxc option. Only works on Debian-based systems (Ubuntu, Debian)\n+--setup         Set up the Gitian building environment. Uses KVM. If you want to use lxc, use the --lxc option. Only works on Debian-based systems (Ubuntu, Debian)\n --detach-sign   Create the assert file for detached signing. Will not commit anything.\n --no-commit     Do not commit anything to git\n -h|--help\tPrint this help message\n@@ -179,8 +179,6 @@ done\n if [[ $lxc = true ]]\n then\n     export USE_LXC=1\n-    export LXC_BRIDGE=lxcbr0\n-    sudo ifconfig lxcbr0 up 10.0.2.2\n fi\n \n # Check for OSX SDK"
      },
      {
        "sha": "614970659660f8fee76b8859467e192795829de4",
        "filename": "contrib/gitian-descriptors/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 65,
        "changes": 65,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bf0a08be281dc42241e7f264c2a20515eb4781bb/contrib/gitian-descriptors/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bf0a08be281dc42241e7f264c2a20515eb4781bb/contrib/gitian-descriptors/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/README.md?ref=bf0a08be281dc42241e7f264c2a20515eb4781bb",
        "patch": "@@ -1,65 +0,0 @@\n-### Gavin's notes on getting gitian builds up and running using KVM\n-\n-These instructions distilled from\n-[https://help.ubuntu.com/community/KVM/Installation](https://help.ubuntu.com/community/KVM/Installation).\n-\n-You need the right hardware: you need a 64-bit-capable CPU with hardware virtualization support (Intel VT-x or AMD-V). Not all modern CPUs support hardware virtualization.\n-\n-You probably need to enable hardware virtualization in your machine's BIOS.\n-\n-You need to be running a recent version of 64-bit-Ubuntu, and you need to install several prerequisites:\n-\n-\tsudo apt-get install ruby apache2 git apt-cacher-ng python-vm-builder qemu-kvm\n-\n-Sanity checks:\n-\n-\tsudo service apt-cacher-ng status  # Should return apt-cacher-ng is running\n-\tls -l /dev/kvm   # Should show a /dev/kvm device\n-\n-\n-Once you've got the right hardware and software:\n-\n-    git clone git://github.com/bitcoin/bitcoin.git\n-    git clone git://github.com/devrandom/gitian-builder.git\n-    mkdir gitian-builder/inputs\n-    cd gitian-builder/inputs\n-\n-    # Create base images\n-    cd gitian-builder\n-    bin/make-base-vm --suite trusty --arch amd64\n-    cd ..\n-\n-    # Get inputs (see doc/release-process.md for exact inputs needed and where to get them)\n-    ...\n-\n-    # For further build instructions see doc/release-process.md\n-    ...\n-\n----------------------\n-\n-`gitian-builder` now also supports building using LXC. See\n-[help.ubuntu.com](https://help.ubuntu.com/14.04/serverguide/lxc.html)\n-for how to get LXC up and running under Ubuntu.\n-\n-If your main machine is a 64-bit Mac or PC with a few gigabytes of memory\n-and at least 10 gigabytes of free disk space, you can `gitian-build` using\n-LXC running inside a virtual machine.\n-\n-Here's a description of Gavin's setup on OSX 10.6:\n-\n-1. Download and install VirtualBox from [https://www.virtualbox.org/](https://www.virtualbox.org/)\n-\n-2. Download the 64-bit Ubuntu Desktop 12.04 LTS .iso CD image from\n-   [http://www.ubuntu.com/](http://www.ubuntu.com/)\n-\n-3. Run VirtualBox and create a new virtual machine, using the Ubuntu .iso (see the [VirtualBox documentation](https://www.virtualbox.org/wiki/Documentation) for details). Create it with at least 2 gigabytes of memory and a disk that is at least 20 gigabytes big.\n-\n-4. Inside the running Ubuntu desktop, install:\n-\n-\tsudo apt-get install debootstrap lxc ruby apache2 git apt-cacher-ng python-vm-builder\n-\n-5. Still inside Ubuntu, tell gitian-builder to use LXC, then follow the \"Once you've got the right hardware and software\" instructions above:\n-\n-\texport USE_LXC=1\n-\tgit clone git://github.com/bitcoin/bitcoin.git\n-\t... etc"
      },
      {
        "sha": "c80e19edbb2212d1e9ed821e75f1baf9261de951",
        "filename": "contrib/gitian-descriptors/gitian-linux.yml",
        "status": "modified",
        "additions": 9,
        "deletions": 2,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/contrib/gitian-descriptors/gitian-linux.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/contrib/gitian-descriptors/gitian-linux.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-linux.yml?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -1,5 +1,5 @@\n ---\n-name: \"bitcoin-linux-0.15\"\n+name: \"bitcoin-linux-0.16\"\n enable_cache: true\n suites:\n - \"trusty\"\n@@ -132,7 +132,6 @@ script: |\n   export PATH=${WRAP_DIR}:${PATH}\n \n   # Create the release tarball using (arbitrarily) the first host\n-  export GIT_DIR=\"$PWD/.git\"\n   ./autogen.sh\n   CONFIG_SITE=${BASEPREFIX}/`echo \"${HOSTS}\" | awk '{print $1;}'`/share/config.site ./configure --prefix=/\n   make dist\n@@ -145,6 +144,9 @@ script: |\n   find bitcoin-* | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ../$SOURCEDIST\n   popd\n \n+  # Workaround for tarball not building with the bare tag version (prep)\n+  make -C src obj/build.h\n+\n   ORIGPATH=\"$PATH\"\n   # Extract the release tarball into a dir for each host and build\n   for i in ${HOSTS}; do\n@@ -155,6 +157,11 @@ script: |\n     mkdir -p ${INSTALLPATH}\n     tar --strip-components=1 -xf ../$SOURCEDIST\n \n+    # Workaround for tarball not building with the bare tag version\n+    echo '#!/bin/true' >share/genbuild.sh\n+    mkdir src/obj\n+    cp ../src/obj/build.h src/obj/\n+\n     CONFIG_SITE=${BASEPREFIX}/${i}/share/config.site ./configure --prefix=/ --disable-ccache --disable-maintainer-mode --disable-dependency-tracking ${CONFIGFLAGS} CFLAGS=\"${HOST_CFLAGS}\" CXXFLAGS=\"${HOST_CXXFLAGS}\" LDFLAGS=\"${HOST_LDFLAGS}\"\n     make ${MAKEOPTS}\n     make ${MAKEOPTS} -C src check-security"
      },
      {
        "sha": "cbf286d2cde28ffaedb545bf7f1e82c339578b1c",
        "filename": "contrib/gitian-descriptors/gitian-osx.yml",
        "status": "modified",
        "additions": 9,
        "deletions": 2,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/contrib/gitian-descriptors/gitian-osx.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/contrib/gitian-descriptors/gitian-osx.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-osx.yml?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -1,5 +1,5 @@\n ---\n-name: \"bitcoin-osx-0.15\"\n+name: \"bitcoin-osx-0.16\"\n enable_cache: true\n suites:\n - \"trusty\"\n@@ -101,7 +101,6 @@ script: |\n   export PATH=${WRAP_DIR}:${PATH}\n \n   # Create the release tarball using (arbitrarily) the first host\n-  export GIT_DIR=\"$PWD/.git\"\n   ./autogen.sh\n   CONFIG_SITE=${BASEPREFIX}/`echo \"${HOSTS}\" | awk '{print $1;}'`/share/config.site ./configure --prefix=/\n   make dist\n@@ -115,6 +114,9 @@ script: |\n   find bitcoin-* | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ../$SOURCEDIST\n   popd\n \n+  # Workaround for tarball not building with the bare tag version (prep)\n+  make -C src obj/build.h\n+\n   ORIGPATH=\"$PATH\"\n   # Extract the release tarball into a dir for each host and build\n   for i in ${HOSTS}; do\n@@ -125,6 +127,11 @@ script: |\n     mkdir -p ${INSTALLPATH}\n     tar --strip-components=1 -xf ../$SOURCEDIST\n \n+    # Workaround for tarball not building with the bare tag version\n+    echo '#!/bin/true' >share/genbuild.sh\n+    mkdir src/obj\n+    cp ../src/obj/build.h src/obj/\n+\n     CONFIG_SITE=${BASEPREFIX}/${i}/share/config.site ./configure --prefix=/ --disable-ccache --disable-maintainer-mode --disable-dependency-tracking ${CONFIGFLAGS}\n     make ${MAKEOPTS}\n     make install-strip DESTDIR=${INSTALLPATH}"
      },
      {
        "sha": "95ff9759c7bfe1fee77c0123b37c53c6417d5dfb",
        "filename": "contrib/gitian-descriptors/gitian-win.yml",
        "status": "modified",
        "additions": 9,
        "deletions": 2,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/contrib/gitian-descriptors/gitian-win.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/contrib/gitian-descriptors/gitian-win.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-win.yml?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -1,5 +1,5 @@\n ---\n-name: \"bitcoin-win-0.15\"\n+name: \"bitcoin-win-0.16\"\n enable_cache: true\n suites:\n - \"trusty\"\n@@ -116,7 +116,6 @@ script: |\n   export PATH=${WRAP_DIR}:${PATH}\n \n   # Create the release tarball using (arbitrarily) the first host\n-  export GIT_DIR=\"$PWD/.git\"\n   ./autogen.sh\n   CONFIG_SITE=${BASEPREFIX}/`echo \"${HOSTS}\" | awk '{print $1;}'`/share/config.site ./configure --prefix=/\n   make dist\n@@ -132,6 +131,9 @@ script: |\n   cp ../$SOURCEDIST $OUTDIR/src\n   popd\n \n+  # Workaround for tarball not building with the bare tag version (prep)\n+  make -C src obj/build.h\n+\n   ORIGPATH=\"$PATH\"\n   # Extract the release tarball into a dir for each host and build\n   for i in ${HOSTS}; do\n@@ -142,6 +144,11 @@ script: |\n     mkdir -p ${INSTALLPATH}\n     tar --strip-components=1 -xf ../$SOURCEDIST\n \n+    # Workaround for tarball not building with the bare tag version\n+    echo '#!/bin/true' >share/genbuild.sh\n+    mkdir src/obj\n+    cp ../src/obj/build.h src/obj/\n+\n     CONFIG_SITE=${BASEPREFIX}/${i}/share/config.site ./configure --prefix=/ --disable-ccache --disable-maintainer-mode --disable-dependency-tracking ${CONFIGFLAGS} CFLAGS=\"${HOST_CFLAGS}\" CXXFLAGS=\"${HOST_CXXFLAGS}\"\n     make ${MAKEOPTS}\n     make ${MAKEOPTS} -C src check-security"
      },
      {
        "sha": "4b0b7a261579c9c0bc8e20af373a1060c5981977",
        "filename": "contrib/gitian-keys/README.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/contrib/gitian-keys/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/contrib/gitian-keys/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/README.md?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -3,7 +3,7 @@ PGP keys\n \n This folder contains the public keys of developers and active contributors.\n \n-The keys are mainly used to sign git commits or the build results of gitian\n+The keys are mainly used to sign git commits or the build results of Gitian\n builds.\n \n You can import the keys into gpg as follows. Also, make sure to fetch the"
      },
      {
        "sha": "20963e7e259d30d399be1f84a7e4246ff12ea61c",
        "filename": "contrib/gitian-keys/meshcollider-key.pgp",
        "status": "added",
        "additions": 51,
        "deletions": 0,
        "changes": 51,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/contrib/gitian-keys/meshcollider-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/contrib/gitian-keys/meshcollider-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/meshcollider-key.pgp?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -0,0 +1,51 @@\n+-----BEGIN PGP PUBLIC KEY BLOCK-----\n+\n+mQINBFlm5UcBEADFhn2Tcfr7gtsLRj9dzHGPoZYjc8Jy7wceqT8918lqaULJKgDW\n+vkEWCVOHRlrr/h1ugldouTRv3k8cdzhCR9YBakVJ3vBmn73CvHQl57jGRSogyqm5\n+hb6IXJkBdualnZVFvCDV37VYeyuSYkJ+DL3c2wEjC2gdQKUsc8ePrJZZEMJVScdD\n+hoXR/sPnu8P5yHOi56XGJi9395GUmmxJKNucD4HXjSq+7yTTs5GXm4niaKfcKyBy\n+kIGN4aEeV8sqzkN8JzNH9fc8i8MPDYLW7SGljpLSnIvIsdBRjXXBHwRnfmGEO7lF\n+sVTyepUUYX3GhLcCNhZjoMkpagVjSpQPj1gylSM4EFkmU2AgK/iEzqB7Ay4WC8EE\n+E2HrcN0ysjyhuyntFwMa1cze99vtfOIQnVJ8E58AvsOs9+xYz8DkbYntCHDD+Zcv\n+y200/knT1jJSZMXkiDciLjGSeFFbh6H+VpaFUKjy3G3yJC4BTXwnACga5/WPsgmK\n++Y9gpTXRsZ8Op2teiwl8wI85mNF+2QmQw3uvymfojI8YPmjx2LOCbzkFYIJt20nw\n+iP1QMH3vtk+iSbcnexQlOPh03ZtDp3NbkBvBOy7cOc57Nc6IX7TllZicQj0FUjWq\n+ctUAU+f5pQuVgS8H3B4XE+Pk1u6/5zX9H0sTi0LzeQ0OdWFcvmZ8mYK5lQARAQAB\n+tCNNZXNoQ29sbGlkZXIgPGRvYnNvbnNhNjhAZ21haWwuY29tPokCOAQTAQgALAUC\n+WWblRwkQ0wARbhyHWj0CGwMFCR4TOAACGQEECwcJAwUVCAoCAwQWAAECAABJ2Q/8\n+D6FMutVLsz55vwy2FjWojcvSpk+BV50YMGYTCdnXZod7V0dP1iQ5+NMcYfpWgJKM\n+YbJ2eaWpW2TgsBd12LTjA6BKX3FquN8Y3nKZiknGCLiimDiys0+VuO9ieEH0flhC\n+olhGysRmPO5clNmZOzn3yiPgUekw6ejLVUEY8vPCbjojSuLZyjctQR3s/9oOMyvm\n+tldJ0waLi3KSOPEDQ8gXfE0QfDf2eMTdlMkbOHS6BlDIre6P5RZ5IJaLwCdzne+W\n+aS96CUqVcR3aqil4mG+T+kHf1wF99TZwY+tSXtweGENjc+QGEaR30to+catSc0nz\n+KQi3dGCH2Y+rc4VHE1S2Id88M38883mHXUeDMqzV9mHwMA50r/jzcLPybrJA1Qhn\n+ZQNWr8zGilmZfWnf2VyiPqZCIAEEFcwg6uNg9Rwy2N3Q/5+vhAVcVNJamMA/dpHa\n+hnq8HmZjraPWHL5Q9oL3Ggtc1Jahb8skaUMV26PHkXOxNFhVynghw3ujC3mocKqQ\n+stmsg+2m5Wf+TZtmbd8geMWcRpuxovYX2ZmeFPWIU+6p9XpwyiPR4mp5hWn/20dQ\n+YAyN/cQhWjDRU2i/HJB1lVnQIsSVsy3eWUJk4htQNHmk8crYocsXb5hgQ2C+JZ0L\n+gY2AxoGjqtzKkydTd5GbiCmqqFdW9ngmVerZ6yCbyRK5Ag0EWWblRwEQALdMSVUR\n+fCXTW2zCiP7g0Aj6yvyi1Wg1zK0CeRRljXKfgFoAI6IGW9QSSpXPmdsnAQOf7L0Q\n+wTTqwWNhKOLV0IWLenbpgIVwfLMkrwn71q9MBJFHiL+PgZLaRxqF5pmW34ZReUj5\n+k55Bg49kB98rfyz9K6qNxKLzY0j/8zsCvCgDMpr7U61xfz8Xo3Ds8bRdaFoH3RWR\n+wm3ePTe/8Rpm/LWWLlzhnfTpyZCUcOPh5+2yt0twHQ5zlzj7Gp8Il8XNlP6hvfx3\n+QGDuFTQ++Utom7T3QLa5E5Yx2iTD7qaNLdpQLZmcHUvdQV0QWSILccEvSJ+vXiE0\n+NvlgQIAE1pUuyTGpm97+mBeDC+4PvXUxQqFoOTJiwJxCpIAA0yvloUaZyeT0Toar\n+mowVOn0JXfbZRFFdxNUXgz9RbzANB+twGJ/ySh3mQz+Mur/1HqnCpHEjy73yOA9e\n+alN2LNvJt92hMdq+QU7I0bNqUS456h6Ft6mOpqG2y57qpl8ZL/MIvMaw3s45hA6p\n+7gzi7/TOnoqAkDUPf7lRbYjGgLkcGlimRxyL1SAYKuFgpNnhxk6BNPKdly7MRWF5\n+I+oUc5W7HkNefbHw5sdLgYZBQk8JoSwF1K/ES5gvJHWZjCiLAcbyum2W843etfU3\n+Qa/3YNt4Gri5zhAoD7U2kAs1ct3hQ6cLmDrxABEBAAGJAjUEGAEIACkFAllm5UcJ\n+ENMAEW4ch1o9AhsMBQkeEzgABAsHCQMFFQgKAgMEFgABAgAAWWcP/1ErBIqJ+SFZ\n+bL3YyLB9iObLEAUxNQP8bEV6lI9V0XUBhReasxQrMUFEXsFoFU6i/qlyfQFsBN8J\n+2QJFJT1pNE+Pleuz4yMuK5Ddcuuyl9ZklfEclmkLpSEwapFMm9IOgaGhucBMpvkC\n+2FE05oc0dEyTCdt1rBppGXvx2aw1khSiuWU13bWXw4hWfJaYKDKdTQyJLsjKGe0u\n+qjaR6yHWHbjlchQWKGUWLHomTKG6wZx9k5YbEy5LN7HnyCHos4SiWyaSpXSjCtNn\n+15i0JdH68fpKAtaGtkUYtoEJIg8qg7u4B6wM70BK2WCZr8T5yWK0c7NrojMIYjEu\n+HwEA9XPkcF9TF7V1VOZMze1ZOWSNzGOfq1yJf6hpUNrw+B3TbYsqJkuJmVSYoamH\n+0QBy0sHxlUtsALMnuKIQt8Sp20bJZLwpudXF+ZSRwrjmYc2RMc5AWaBHTGz2IGte\n+AvH+SOOaRWj+UvhSFZVKVOZHWqErzKG+NfqQzEaEL4h/6QU64h5GLhocYHCiCbFm\n+X1t01eKoDfOhwQlSlPjpDxxr7yi60ntt1R7DpgwqMNIdyXylxsc4SCvM6NDRXVM1\n+DoaPHI7GRuT1w6zEtkCGQoGsy1OBrnjeIy40mzh8L5q8L7n3jNtN/d6YCYDzP/P6\n+gb52/WPhR6CJQ2/7y3Uj7u8sPNpb7BGI\n+=as33\n+-----END PGP PUBLIC KEY BLOCK-----"
      },
      {
        "sha": "de4ea0ed522d1c6d764e5e05a5939e097b420e86",
        "filename": "contrib/init/bitcoind.conf",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/contrib/init/bitcoind.conf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/contrib/init/bitcoind.conf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/bitcoind.conf?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -30,12 +30,12 @@ pre-start script\n         echo\n         echo \"This password is security critical to securing wallets \"\n         echo \"and must not be the same as the rpcuser setting.\"\n-        echo \"You can generate a suitable random password using the following\"\n+        echo \"You can generate a suitable random password using the following \"\n         echo \"command from the shell:\"\n         echo\n         echo \"bash -c 'tr -dc a-zA-Z0-9 < /dev/urandom | head -c32 && echo'\"\n         echo\n-        echo \"It is also recommended that you also set alertnotify so you are \"\n+        echo \"It is recommended that you also set alertnotify so you are \"\n         echo \"notified of problems:\"\n         echo\n         echo \"ie: alertnotify=echo %%s | mail -s \\\"Bitcoin Alert\\\"\" \\"
      },
      {
        "sha": "50377c09957c0d087681365470f9852581296310",
        "filename": "contrib/init/bitcoind.openrc",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/contrib/init/bitcoind.openrc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/contrib/init/bitcoind.openrc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/bitcoind.openrc?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -76,12 +76,12 @@ checkconfig()\n \t\teerror \"\"\n \t\teerror \"This password is security critical to securing wallets \"\n \t\teerror \"and must not be the same as the rpcuser setting.\"\n-\t\teerror \"You can generate a suitable random password using the following\"\n+\t\teerror \"You can generate a suitable random password using the following \"\n \t\teerror \"command from the shell:\"\n \t\teerror \"\"\n \t\teerror \"bash -c 'tr -dc a-zA-Z0-9 < /dev/urandom | head -c32 && echo'\"\n \t\teerror \"\"\n-\t\teerror \"It is also recommended that you also set alertnotify so you are \"\n+\t\teerror \"It is recommended that you also set alertnotify so you are \"\n \t\teerror \"notified of problems:\"\n \t\teerror \"\"\n \t\teerror \"ie: alertnotify=echo %%s | mail -s \\\"Bitcoin Alert\\\"\" \\"
      },
      {
        "sha": "95b5342f1ef9dc9b9bb66538d0cc842d02951d62",
        "filename": "contrib/init/org.bitcoin.bitcoind.plist",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/contrib/init/org.bitcoin.bitcoind.plist",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/contrib/init/org.bitcoin.bitcoind.plist",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/org.bitcoin.bitcoind.plist?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -7,7 +7,6 @@\n \t<key>ProgramArguments</key>\n \t<array>\n \t\t<string>/usr/local/bin/bitcoind</string>\n-\t\t<string>-daemon</string>\n \t</array>\n \t<key>RunAtLoad</key>\n \t<true/>"
      },
      {
        "sha": "2985106982788c8bfa31ee077b05e8e77ba19e72",
        "filename": "contrib/linearize/README.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/contrib/linearize/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/contrib/linearize/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/README.md?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -46,7 +46,7 @@ linearize-hashes.py.\n (Default: `1000*1000*1000 bytes`)\n * `netmagic`: Network magic number.\n * `out_of_order_cache_sz`: If out-of-order blocks are being read, the block can\n-be written to a cache so that the blockchain doesn't have to be seeked again.\n+be written to a cache so that the blockchain doesn't have to be sought again.\n This option specifies the cache size. (Default: `100*1000*1000 bytes`)\n * `rev_hash_bytes`: If true, the block hash list written by linearize-hashes.py\n will be byte-reversed when read by linearize-data.py. See the linearize-hashes"
      },
      {
        "sha": "2315898bf1d7561260fe3a3b5c1dd21c09ca0d9b",
        "filename": "contrib/linearize/example-linearize.cfg",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/contrib/linearize/example-linearize.cfg",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/contrib/linearize/example-linearize.cfg",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/example-linearize.cfg?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -3,9 +3,16 @@ rpcuser=someuser\n rpcpassword=somepassword\n #datadir=~/.bitcoin\n host=127.0.0.1\n+\n+#mainnet default\n port=8332\n+\n+#testnet default\n #port=18332\n \n+#regtest default\n+#port=18443\n+\n # bootstrap.dat hashlist settings (linearize-hashes)\n max_height=313000\n "
      },
      {
        "sha": "58fec6dddc78225cb515114dcd0b7161da5ba855",
        "filename": "contrib/linearize/linearize-hashes.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/contrib/linearize/linearize-hashes.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/contrib/linearize/linearize-hashes.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/linearize-hashes.py?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -87,7 +87,7 @@ def get_block_hashes(settings, max_blocks_per_call=10000):\n \t\tfor x,resp_obj in enumerate(reply):\n \t\t\tif rpc.response_is_error(resp_obj):\n \t\t\t\tprint('JSON-RPC: error at height', height+x, ': ', resp_obj['error'], file=sys.stderr)\n-\t\t\t\texit(1)\n+\t\t\t\tsys.exit(1)\n \t\t\tassert(resp_obj['id'] == x) # assume replies are in-sequence\n \t\t\tif settings['rev_hash_bytes'] == 'true':\n \t\t\t\tresp_obj['result'] = hex_switchEndian(resp_obj['result'])\n@@ -140,7 +140,7 @@ def get_rpc_cookie():\n \tif 'datadir' in settings and not use_userpass:\n \t\tuse_datadir = True\n \tif not use_userpass and not use_datadir:\n-\t\tprint(\"Missing datadir or username and/or password in cfg file\", file=stderr)\n+\t\tprint(\"Missing datadir or username and/or password in cfg file\", file=sys.stderr)\n \t\tsys.exit(1)\n \n \tsettings['port'] = int(settings['port'])"
      },
      {
        "sha": "e1e0745fd636d7240a6eb6a20775c9d043eac826",
        "filename": "contrib/rpm/README.md",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/contrib/rpm/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/contrib/rpm/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/rpm/README.md?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -84,16 +84,16 @@ If you would prefer not to build the GUI at all, you can pass the switch\n \n The desktop and KDE meta files are created in the spec file itself with the\n `cat` command. This is done to allow easy distribution specific changes without\n-needing to use any patches. A specific time stamp is given to the files so that\n+needing to use any patches. A specific timestamp is given to the files so that\n it does not they do not appear to have been updated every time the package is\n-built. If you do make changes to them, you probably should update time stamp\n-assigned to them in the `touch` command that specifies the time stamp.\n+built. If you do make changes to them, you probably should update timestamp\n+assigned to them in the `touch` command that specifies the timestamp.\n \n ## SVG, PNG, and XPM Icons\n \n The `bitcoin.svg` file is from the source listed as `Source100`. It is used as\n the source for the PNG and XPM files. The generated PNG and XPM files are given\n-the same time stamp as the source SVG file as a means of indicating they are\n+the same timestamp as the source SVG file as a means of indicating they are\n derived from it.\n \n ## Systemd\n@@ -105,10 +105,10 @@ distributions that still receive vendor updates do in fact use systemd.\n The files to control the service are created in the RPM spec file itself using\n the `cat` command. This is done to make it easy to modify for other\n distributions that may implement things differently without needing to patch\n-source. A specific time stamp is given to the files so that they do not appear\n+source. A specific timestamp is given to the files so that they do not appear\n to have been updated every time the package is built. If you do make changes to\n-them, you probably should update the time stamp assigned to them in the `touch`\n-command that specifies the time stamp.\n+them, you probably should update the timestamp assigned to them in the `touch`\n+command that specifies the timestamp.\n \n ## SELinux\n "
      },
      {
        "sha": "7c4d933ee05a41ea41d02a358c9b0f4ba3f638e9",
        "filename": "contrib/rpm/bitcoin.spec",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/contrib/rpm/bitcoin.spec",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/contrib/rpm/bitcoin.spec",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/rpm/bitcoin.spec?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -336,6 +336,8 @@ done\n %{_sbindir}/semanage port -a -t bitcoin_port_t -p tcp 8333\n %{_sbindir}/semanage port -a -t bitcoin_port_t -p tcp 18332\n %{_sbindir}/semanage port -a -t bitcoin_port_t -p tcp 18333\n+%{_sbindir}/semanage port -a -t bitcoin_port_t -p tcp 18443\n+%{_sbindir}/semanage port -a -t bitcoin_port_t -p tcp 18444\n %{_sbindir}/fixfiles -R bitcoin-server restore &> /dev/null || :\n %{_sbindir}/restorecon -R %{_localstatedir}/lib/bitcoin || :\n fi\n@@ -355,6 +357,8 @@ if [ $1 -eq 0 ]; then\n \t%{_sbindir}/semanage port -d -p tcp 8333\n \t%{_sbindir}/semanage port -d -p tcp 18332\n \t%{_sbindir}/semanage port -d -p tcp 18333\n+\t%{_sbindir}/semanage port -d -p tcp 18443\n+\t%{_sbindir}/semanage port -d -p tcp 18444\n \tfor selinuxvariant in %{selinux_variants}; do\n \t\t%{_sbindir}/semodule -s ${selinuxvariant} -r bitcoin &> /dev/null || :\n \tdone"
      },
      {
        "sha": "28068a752333f6ebd08b7051ed64d996241b8d83",
        "filename": "contrib/seeds/generate-seeds.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/contrib/seeds/generate-seeds.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/contrib/seeds/generate-seeds.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/generate-seeds.py?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -114,7 +114,7 @@ def process_nodes(g, f, structname, defaultport):\n def main():\n     if len(sys.argv)<2:\n         print(('Usage: %s <path_to_nodes_txt>' % sys.argv[0]), file=sys.stderr)\n-        exit(1)\n+        sys.exit(1)\n     g = sys.stdout\n     indir = sys.argv[1]\n     g.write('#ifndef BITCOIN_CHAINPARAMSSEEDS_H\\n')"
      },
      {
        "sha": "877a7836ef74a8a382cc76d7407179b108329af5",
        "filename": "contrib/seeds/makeseeds.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/contrib/seeds/makeseeds.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/contrib/seeds/makeseeds.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/makeseeds.py?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -30,7 +30,7 @@\n PATTERN_IPV4 = re.compile(r\"^((\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})):(\\d+)$\")\n PATTERN_IPV6 = re.compile(r\"^\\[([0-9a-z:]+)\\]:(\\d+)$\")\n PATTERN_ONION = re.compile(r\"^([abcdefghijklmnopqrstuvwxyz234567]{16}\\.onion):(\\d+)$\")\n-PATTERN_AGENT = re.compile(r\"^(/Satoshi:0.12.(0|1|99)/|/Satoshi:0.13.(0|1|2|99)/)$\")\n+PATTERN_AGENT = re.compile(r\"^(/Satoshi:0.13.(1|2|99)/|/Satoshi:0.14.(0|1|2|99)/)$\")\n \n def parseline(line):\n     sline = line.split()"
      },
      {
        "sha": "60b34216cd634388e2bd697077616c1075aad204",
        "filename": "contrib/seeds/nodes_main.txt",
        "status": "modified",
        "additions": 1168,
        "deletions": 886,
        "changes": 2054,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/contrib/seeds/nodes_main.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/contrib/seeds/nodes_main.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/nodes_main.txt?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -1,1168 +1,1450 @@\n-2.7.8.12:8333\n 2.228.70.198:8333\n-5.39.64.7:8333\n-5.45.80.34:38333\n-5.51.160.38:8333\n-5.61.33.33:8333\n-5.61.37.12:8333\n-5.95.80.47:8333\n-5.102.164.173:8333\n-5.175.71.130:8333\n-5.189.165.22:8333\n-5.199.130.228:8333\n-5.228.100.222:8333\n+4.15.180.29:8333\n+4.15.180.30:8333\n+5.2.67.110:8333\n+5.39.224.103:8333\n+5.43.124.154:8333\n+5.189.165.102:8333\n+5.226.149.145:8333\n+5.228.7.146:8333\n+5.228.64.71:8333\n+5.249.152.101:8333\n+5.254.124.55:8333\n 5.255.64.231:8333\n-13.93.6.133:8333\n-18.85.34.10:8333\n-18.241.0.63:8333\n+5.255.90.234:8333\n+14.192.8.27:21301\n+18.62.3.86:8333\n+18.85.35.80:8333\n 23.28.128.65:8333\n-23.248.113.52:8333\n-23.253.151.73:8333\n-24.4.96.121:8333\n-24.69.65.191:8333\n-24.87.8.43:8333\n-24.150.224.110:8333\n+23.108.83.12:8333\n+23.233.2.238:8333\n+24.27.65.168:8333\n+24.56.241.219:8333\n+24.64.75.132:8333\n+24.73.70.26:8333\n+24.121.154.140:8333\n+24.203.96.72:8333\n+24.225.34.62:8333\n 24.227.69.146:8333\n-27.0.235.33:8333\n-31.170.106.203:8333\n-31.184.197.96:8333\n-31.214.240.56:8333\n-37.1.202.134:8333\n-37.18.74.232:8333\n-37.34.48.17:8333\n+24.232.136.119:8333\n+31.16.123.235:8333\n+31.19.205.53:8333\n+31.132.136.35:8333\n+31.184.234.85:8333\n+31.211.102.161:8333\n 37.48.64.140:8333\n 37.97.141.116:8333\n+37.120.160.12:8333\n 37.120.164.16:8333\n-37.120.169.123:8333\n-37.143.9.128:8333\n-37.153.172.227:8333\n-37.193.227.16:8333\n-37.205.8.78:8333\n-37.220.0.114:8333\n-37.232.218.199:8333\n-38.140.161.53:8333\n-40.87.70.120:8333\n-41.162.163.93:8333\n-42.2.198.48:8333\n-45.20.67.1:8333\n-45.55.197.77:8333\n+37.134.226.181:8333\n+37.147.110.43:8333\n+37.194.10.30:8333\n+37.247.22.53:8333\n+38.27.65.158:8333\n+38.133.141.34:8333\n+43.248.160.151:8333\n+45.32.130.19:8333\n+45.32.193.157:8333\n+45.46.161.121:8333\n 45.56.97.63:8333\n-45.58.38.162:8333\n-45.63.1.33:8333\n-45.79.2.70:8333\n+45.116.178.79:8188\n 46.16.240.98:8333\n-46.19.137.74:8333\n-46.28.206.146:8333\n-46.32.252.197:8333\n+46.20.246.100:8333\n+46.21.97.135:8333\n+46.59.10.237:8333\n 46.59.13.59:8333\n-46.59.39.195:8333\n 46.148.16.210:8333\n-46.160.195.121:8333\n-46.166.142.21:8333\n-46.166.160.29:8330\n+46.166.160.96:8333\n 46.188.44.20:8333\n 46.229.238.187:8333\n 46.231.16.149:8333\n+47.88.35.181:8333\n 47.88.100.130:8333\n-47.89.192.134:8333\n-47.185.194.160:8333\n-47.189.129.218:8333\n-49.65.2.140:8333\n-50.3.72.129:8333\n-50.31.99.225:8333\n-51.175.33.95:8333\n-52.1.165.219:8333\n-52.10.170.186:8333\n-52.51.128.216:8333\n-54.197.130.244:8333\n-58.59.2.22:8333\n-58.84.6.81:8333\n-59.125.8.143:8333\n-59.167.130.139:8333\n+47.184.129.94:8333\n+47.199.68.204:8333\n+50.30.38.203:8333\n+50.63.162.242:8333\n+50.97.133.208:8333\n+50.114.227.224:8333\n+51.15.0.17:8333\n+51.174.69.239:8333\n+52.7.135.69:8333\n+52.14.64.82:8333\n+52.204.105.25:8333\n+54.255.160.87:8333\n 61.47.2.20:8333\n+61.125.131.55:8333\n 62.43.130.178:8333\n-62.76.96.6:8333\n+62.106.16.111:8333\n 62.107.200.30:8333\n-62.133.15.58:8333\n+62.109.20.99:8333\n 62.133.194.2:8333\n 62.133.194.156:8333\n-62.138.1.95:8333\n-62.216.238.3:8333\n-62.238.34.125:8333\n-63.137.40.207:8333\n-63.231.96.109:8333\n-64.78.240.150:8333\n-64.83.225.146:8333\n-64.137.236.68:8833\n-64.156.193.120:8333\n-66.79.160.82:8333\n-66.91.230.231:8333\n-66.135.128.121:8333\n-66.172.10.4:8333\n+62.176.6.94:8333\n+62.182.169.222:8333\n+62.205.132.245:8333\n+62.216.238.133:8333\n+63.231.239.212:8333\n+64.34.231.140:8333\n+64.203.102.86:8333\n+64.233.245.39:8333\n+65.183.76.73:8333\n+66.96.199.166:8333\n 66.194.38.250:8333\n 66.194.38.253:8333\n-66.215.34.26:8333\n-66.240.237.155:8333\n-67.205.96.108:8333\n-67.205.128.5:8333\n-67.219.233.140:8333\n+66.196.12.63:8333\n+67.215.6.34:8333\n 67.221.193.55:8333\n-68.100.196.118:8333\n+68.66.193.192:8333\n+68.69.235.230:8333\n+68.111.10.219:8333\n+68.119.138.175:8333\n 68.132.193.222:8333\n-68.168.118.234:8333\n+68.194.42.76:8333\n+68.235.41.204:8333\n 69.11.97.43:8333\n-69.30.229.10:8333\n-69.50.171.205:8333\n-69.125.193.145:8333\n-69.162.139.125:8333\n-70.35.98.39:8333\n+69.41.3.212:8333\n+69.41.171.35:8333\n+69.41.171.36:8333\n+69.55.64.216:8333\n+69.84.42.56:8333\n+70.48.48.250:8333\n 70.112.32.29:8333\n-71.126.181.146:8333\n-72.180.32.105:8333\n-73.226.64.145:8333\n-74.83.140.242:8333\n-74.84.128.158:9333\n+70.250.74.20:8333\n+71.93.161.162:8333\n+71.198.0.126:8333\n+72.5.167.41:8333\n+72.224.11.103:8333\n+73.72.160.213:8333\n 74.122.237.124:8333\n-74.215.133.145:8333\n-75.76.101.169:8333\n-75.85.13.8:8333\n-75.86.168.13:8333\n-75.170.97.25:8333\n-75.177.137.134:8333\n+75.86.137.34:8333\n+75.165.99.144:8333\n+76.64.74.193:8333\n 76.76.227.136:8333\n-77.53.136.6:8333\n-77.110.11.52:8333\n-78.25.32.206:8333\n-78.34.8.120:8333\n-78.46.32.99:8333\n-78.56.9.214:8333\n-78.56.229.177:8333\n-78.129.237.245:8333\n+76.173.161.44:8333\n+76.178.22.44:8333\n+77.47.137.27:8333\n+77.77.46.250:8333\n+77.91.193.152:8333\n+77.95.226.194:8333\n+77.120.246.254:8333\n+77.163.136.136:8333\n+77.203.13.57:8333\n+77.236.37.214:8333\n+77.239.37.12:8333\n+77.247.179.44:8333\n+78.34.14.52:8333\n+78.109.163.153:8333\n 78.196.172.45:8333\n 79.132.230.144:8333\n-79.169.35.235:8333\n-79.172.194.219:8333\n-80.64.65.87:8333\n-80.89.137.115:8333\n-80.93.36.173:8333\n-80.101.167.100:8333\n-80.114.34.158:8333\n-80.127.136.50:8333\n-80.188.139.82:8333\n-80.222.39.77:8333\n-80.223.105.69:8333\n-80.229.151.187:8333\n-80.240.129.221:8333\n+79.160.2.105:8333\n+80.82.77.138:8333\n+80.100.203.151:8333\n+80.147.68.237:8333\n+80.237.240.102:8333\n+81.2.246.127:8333\n+81.7.7.86:8333\n 81.7.10.238:8333\n-81.7.13.84:8333\n-81.27.96.92:8333\n-81.35.143.98:8333\n-81.82.201.5:8333\n+81.27.96.37:8333\n 81.83.96.5:8333\n-81.169.227.36:8333\n-81.171.2.119:8333\n-81.171.38.130:8333\n-81.175.255.118:8333\n-81.207.8.49:8333\n 81.228.194.187:8333\n-82.9.1.77:8333\n-82.11.33.229:8333\n-82.102.13.117:8333\n-82.116.203.240:8333\n-82.130.103.16:8333\n-82.136.65.227:8333\n-82.158.227.238:8333\n-82.197.212.25:8333\n+82.45.69.216:8333\n+82.69.44.183:8333\n+82.72.198.68:8333\n+82.95.204.10:8333\n+82.118.236.127:8333\n+82.118.242.4:8333\n+82.134.66.146:8333\n+82.193.109.199:8333\n+82.197.210.65:8333\n 82.199.102.10:8333\n-82.200.204.41:8333\n-82.200.204.119:8333\n-82.221.105.223:8333\n+82.200.205.30:8333\n 82.221.108.27:8333\n-82.221.111.136:8333\n+82.221.128.81:8333\n 82.221.139.97:8333\n+82.232.202.246:8333\n+83.60.64.252:8333\n+83.61.8.228:8333\n+83.128.41.48:8333\n+83.128.111.69:8333\n 83.137.41.10:8333\n-83.143.130.19:8333\n-83.150.9.196:8333\n+83.150.43.17:8333\n 83.169.2.43:8333\n-83.217.203.130:8333\n-83.249.88.52:8333\n-84.26.162.92:8333\n+83.174.209.87:8333\n+83.255.43.163:8333\n 84.42.193.6:8333\n-84.134.194.115:8333\n-84.201.32.115:8333\n-84.212.232.71:8333\n-84.238.140.176:8333\n-85.10.104.34:8333\n+84.52.145.231:8333\n+84.52.234.70:8333\n+84.85.102.113:8333\n+84.92.92.247:8333\n+84.146.35.123:8333\n+84.212.198.222:8333\n+84.217.163.135:8333\n+84.245.27.185:8333\n+84.251.203.5:8333\n 85.21.144.226:8333\n 85.25.194.12:8333\n-85.144.79.190:8333\n-85.145.228.192:8333\n-85.194.238.130:8333\n-85.228.201.80:8333\n-85.229.228.174:8333\n-85.236.233.87:8333\n-86.80.204.185:8333\n-86.105.227.190:8333\n-86.135.39.40:8333\n-87.106.139.127:8333\n+85.25.194.28:8333\n+85.144.119.222:8333\n+85.183.140.62:8333\n+85.214.228.203:8333\n+85.214.234.254:8333\n+85.218.150.1:8333\n+85.228.196.10:8333\n+86.15.2.235:8333\n+86.61.6.210:8333\n+87.92.115.194:8333\n 87.120.8.5:8333\n 87.120.37.230:8333\n+87.233.181.146:8333\n 87.239.101.102:8333\n-87.243.197.82:8333\n-88.112.112.173:8333\n+88.87.78.126:8333\n+88.98.198.130:8333\n+88.98.225.214:8333\n+88.99.58.194:8333\n 88.150.192.17:8333\n-88.185.155.134:8333\n-88.202.202.221:8333\n-88.202.230.87:8333\n-88.208.39.182:8333\n+88.196.136.31:17556\n+88.208.58.193:8333\n+88.208.58.194:8333\n+89.22.96.132:8333\n+89.22.104.48:8333\n+89.25.80.98:8333\n 89.34.99.41:8333\n+89.142.195.112:8333\n 89.163.224.187:8333\n-89.169.233.150:8333\n-89.184.65.85:8333\n-89.212.91.219:8333\n-89.249.178.36:8333\n+89.163.224.195:8333\n+89.238.79.235:8333\n+90.46.240.214:8333\n+90.65.232.129:8333\n+90.71.117.90:8333\n 90.149.38.172:8333\n-91.65.97.157:8333\n-91.107.64.143:8333\n-91.114.35.107:8333\n+90.156.97.145:8333\n+90.177.48.104:8333\n+91.106.194.97:8333\n 91.135.0.187:8333\n-91.145.110.95:8333\n-91.157.38.151:8333\n+91.150.189.155:8333\n+91.185.198.216:8333\n+91.196.11.45:8333\n 91.197.44.133:8333\n-91.205.176.54:8333\n-91.206.203.10:8333\n-91.206.203.18:8333\n-91.215.35.130:8333\n-91.219.239.159:8333\n-91.223.133.2:8333\n-91.223.133.40:8333\n+91.224.0.227:8333\n 91.226.10.90:8333\n+91.228.45.130:8333\n+91.229.77.239:8333\n+91.238.100.249:8333\n 91.240.141.169:8333\n 92.27.7.209:8333\n-92.89.67.207:8333\n-92.221.201.138:8333\n-93.95.187.122:8333\n-93.103.73.187:8333\n+92.54.16.135:8333\n+93.89.84.93:8333\n+93.100.51.48:8333\n+93.100.76.151:8333\n+93.104.214.235:8333\n+93.115.86.246:8333\n 93.123.80.47:8333\n+93.174.88.211:8333\n 93.188.224.253:8333\n 93.190.69.242:8333\n-94.19.12.244:8333\n-94.156.128.116:8333\n-94.177.171.73:8333\n+94.74.81.93:8333\n+94.156.35.8:8333\n+94.176.237.241:8333\n 94.181.44.104:8333\n-94.237.26.173:8333\n-94.242.229.158:8333\n-94.255.128.98:8333\n-95.79.35.50:8333\n-95.91.41.39:8333\n-95.110.234.93:8333\n-95.128.48.209:8333\n+94.227.43.171:8333\n+95.79.102.208:8333\n+95.79.102.209:8333\n+95.154.237.24:8333\n+95.183.48.62:8333\n 95.183.48.71:8333\n-96.23.67.85:8333\n-97.64.177.10:8333\n-97.104.201.95:8333\n-98.29.197.149:8333\n-98.169.2.107:8333\n-99.232.48.72:8333\n-101.100.141.55:8333\n-103.7.32.40:8333\n-103.53.225.69:8333\n-103.249.106.74:8333\n-104.128.224.13:8333\n-104.128.228.252:8333\n-104.155.1.158:8333\n-104.168.128.50:8333\n-104.199.160.228:8333\n-104.204.109.11:8333\n-104.219.251.118:8333\n-104.223.3.129:8333\n-104.223.3.219:8333\n-104.238.130.182:8333\n-104.245.99.227:8333\n-106.38.234.89:8333\n-106.104.134.218:8333\n-107.136.6.71:8333\n+95.213.161.2:8333\n+95.213.201.94:8333\n+96.20.227.39:8333\n+96.28.41.91:8333\n+98.127.130.17:8333\n+100.36.48.101:8333\n+101.0.81.42:8333\n+101.0.81.43:8333\n+103.11.64.46:8333\n+103.24.244.69:8333\n+103.47.210.50:8333\n+103.76.41.169:8333\n+103.80.168.57:8333\n+103.203.51.186:8333\n+103.224.118.79:8333\n+103.250.4.74:8333\n+104.192.170.202:8333\n+104.196.0.99:8333\n+104.199.192.85:8333\n+104.219.251.46:8333\n+104.223.108.33:8333\n+104.237.2.189:8333\n+104.247.230.28:8333\n 107.150.45.210:8333\n-107.151.144.103:8333\n-107.170.44.99:8333\n-107.181.137.133:8333\n-107.191.102.13:8333\n-108.58.252.82:8333\n-108.59.9.167:8333\n+107.174.34.77:8333\n+107.174.34.78:8333\n+107.180.71.47:8333\n 108.59.12.163:8333\n-108.162.106.215:8333\n-108.168.133.164:8333\n-108.173.202.101:8333\n-108.180.110.190:8333\n-109.29.75.40:8333\n-109.120.194.136:8333\n-109.230.230.88:8333\n-109.235.67.115:8333\n-109.235.69.120:8333\n-109.236.90.199:8333\n+108.168.37.13:8333\n+108.175.3.18:8333\n+108.234.193.106:8333\n+109.9.173.13:8333\n+109.101.220.151:8333\n+109.172.104.119:8333\n+109.195.193.138:8333\n+109.206.177.21:8333\n+109.226.35.28:8333\n 109.255.0.107:8333\n-110.10.130.12:8333\n-110.10.176.94:8333\n-110.132.172.251:8333\n-111.90.158.17:8333\n+113.29.183.143:8333\n+114.145.97.73:8333\n 115.66.205.171:8333\n-116.31.123.139:8333\n-118.192.48.46:8333\n-118.193.164.98:8333\n-119.29.156.231:8333\n-119.63.44.133:19980\n-119.81.99.27:8333\n-119.106.12.169:8333\n-119.147.137.155:19980\n-119.185.1.182:8333\n-120.55.193.136:8333\n-121.254.173.23:8333\n+118.67.201.40:8333\n+118.194.226.168:8333\n+119.28.70.144:8333\n+120.24.166.73:9998\n+120.76.244.201:10022\n+121.82.4.232:8333\n 121.254.173.40:8333\n-123.56.129.45:8333\n 123.203.163.128:8333\n-123.206.32.198:8333\n-124.189.160.221:8333\n-124.189.192.232:8333\n-128.140.224.162:8333\n-128.199.68.205:8333\n-130.234.207.115:8333\n-131.113.41.123:8333\n-131.114.72.104:8333\n-132.204.108.155:8333\n-134.119.13.230:8333\n-134.213.133.206:8333\n-134.213.133.207:8333\n-135.23.5.3:8333\n-137.74.0.66:8333\n-138.68.1.45:8333\n-138.68.2.194:8333\n+124.171.70.45:8333\n+125.63.57.7:8333\n+125.128.35.41:8333\n+128.208.244.124:8333\n+128.230.208.73:8333\n+131.114.10.233:8333\n+131.114.10.235:8333\n+132.239.36.105:8333\n+134.213.214.233:8333\n+136.61.238.121:8333\n+136.62.86.140:8333\n+136.144.128.49:8333\n+137.48.144.52:8333\n+137.116.160.176:8333\n+137.117.193.113:8333\n+138.19.79.208:8333\n 138.68.64.19:8333\n-138.68.64.28:8333\n-139.59.42.248:8333\n-139.220.240.153:8333\n-140.112.107.118:8333\n-140.186.224.112:8333\n-141.52.64.141:8333\n-142.68.237.107:8333\n-142.217.12.106:8333\n-146.60.204.92:8333\n-146.185.161.209:8333\n+139.59.96.16:8333\n+139.162.160.232:8333\n+141.136.115.230:8333\n+142.59.232.111:8333\n+142.111.2.74:8333\n+142.162.128.23:8333\n+143.107.116.5:8333\n+143.229.22.74:8333\n+143.229.36.71:8333\n+144.2.105.60:8333\n+144.76.224.214:8333\n+146.185.19.30:8333\n+147.32.30.25:8333\n+147.229.13.210:8333\n 148.103.7.119:8333\n-149.210.133.244:8333\n+150.101.114.194:8333\n 150.229.0.143:8333\n-151.231.238.25:8333\n-151.248.160.227:8333\n-153.230.228.15:8333\n-155.133.43.249:8333\n-158.58.238.145:8333\n-158.109.79.13:34821\n-159.203.70.208:8333\n+154.66.207.126:8333\n+158.129.212.236:8333\n+158.129.212.251:8333\n 160.16.206.31:8333\n 162.209.1.233:8333\n 162.209.4.125:8333\n-162.216.192.231:8333\n-162.243.100.111:8333\n-162.246.11.194:8333\n-162.248.102.117:8333\n-162.252.46.83:8333\n-163.172.33.78:8333\n-163.172.194.30:8333\n-169.229.198.106:8333\n+162.220.246.225:8333\n+163.172.218.186:8333\n+166.230.70.145:8333\n+168.235.74.45:8333\n+169.44.34.88:8333\n 170.75.195.168:8333\n-172.103.205.197:8333\n-172.245.225.126:8333\n-173.179.37.8:8333\n-173.208.203.74:8333\n-173.252.46.16:8333\n-174.117.141.124:8333\n-175.126.38.158:8333\n-175.126.38.177:8333\n-175.139.106.119:8333\n-175.140.232.66:8333\n-176.9.117.100:8333\n-176.36.33.121:8333\n+172.112.2.67:8333\n+173.94.164.38:8333\n+173.183.232.109:8333\n+173.208.176.122:8333\n+173.212.194.114:8333\n+173.232.228.146:8333\n+175.126.124.92:8333\n+175.145.109.51:8333\n+176.24.198.205:8333\n+176.36.37.62:8333\n 176.36.99.222:8333\n-176.56.227.36:8333\n-176.100.100.206:8333\n 176.106.144.183:8333\n-176.123.7.148:8333\n-176.126.167.10:8333\n-176.223.201.198:8333\n-178.62.68.62:8333\n-178.62.102.56:8333\n-178.62.203.185:8333\n-178.124.197.101:8333\n+177.33.1.40:8333\n+178.162.214.225:8333\n+178.164.109.83:8333\n 178.170.138.202:8333\n-178.175.129.18:8333\n-178.188.47.62:8333\n-178.199.240.22:8333\n+178.175.136.122:8333\n 178.218.209.162:8333\n-178.237.35.34:8333\n-178.238.224.242:8333\n+178.254.2.64:8333\n 178.254.34.144:8333\n-178.254.34.161:8333\n-179.43.183.2:8333\n+178.255.41.21:8333\n+178.255.144.163:8333\n+180.181.208.42:8333\n 180.200.128.58:8333\n-182.93.34.130:8333\n-185.8.238.197:8333\n-185.11.139.172:8333\n+180.235.50.14:8333\n+181.215.148.154:8333\n+184.64.13.43:8333\n+184.94.164.170:8333\n+184.152.107.251:8333\n+184.182.233.206:8333\n+185.4.24.199:8333\n+185.20.99.49:8333\n 185.24.97.11:8333\n-185.24.233.100:8333\n+185.25.48.27:8333\n 185.25.48.71:8333\n-185.25.48.114:8333\n+185.26.196.249:8333\n 185.28.76.179:8333\n-185.70.105.152:8339\n-185.77.128.69:8333\n-185.77.128.241:8333\n-185.86.79.87:8333\n-185.89.102.2:3333\n-185.89.102.53:3333\n-185.109.144.155:8333\n-185.117.75.50:8333\n+185.35.139.250:8333\n+185.41.113.69:8333\n+185.50.213.123:8333\n+185.50.213.124:8333\n+185.50.232.114:8333\n+185.51.192.40:8333\n+185.53.129.244:8333\n+185.71.177.100:8333\n+185.77.129.176:8333\n+185.82.201.51:8333\n 185.121.173.223:8333\n-185.128.41.157:8333\n-185.130.226.106:8333\n-185.145.130.76:8333\n-188.63.192.104:8333\n+185.140.252.253:8333\n+185.145.129.184:8333\n+185.145.130.163:8333\n+185.154.156.50:8333\n+185.162.124.69:8333\n+185.170.42.2:8333\n+186.149.197.96:8333\n+188.65.212.138:8333\n+188.65.213.48:8333\n+188.93.209.192:8333\n+188.113.79.45:8333\n+188.113.84.116:8333\n 188.113.164.231:8333\n-188.166.229.112:8333\n-188.214.128.77:8333\n-190.10.8.211:8333\n-190.81.160.184:8333\n-190.111.231.19:8333\n-192.131.44.93:8333\n+188.122.16.153:8333\n+188.165.224.28:8333\n+188.175.239.227:8333\n+188.214.128.18:8333\n+188.227.64.19:8333\n+188.253.2.125:8333\n+189.45.203.166:8333\n+190.184.198.34:8333\n+192.151.145.250:8333\n 192.206.202.6:8333\n-192.227.245.133:8333\n-192.241.74.123:8333\n-192.241.74.126:8333\n-192.254.71.222:8333\n-193.10.64.85:8333\n-193.46.80.101:8333\n+192.228.101.157:8333\n+193.2.76.41:8333\n+193.27.209.100:8333\n+193.33.237.187:8333\n+193.46.83.17:8333\n 193.49.43.219:8333\n-193.93.79.215:8333\n-193.183.99.46:8333\n-193.234.224.195:8333\n-193.239.80.155:8333\n-194.63.140.208:8333\n-194.87.1.232:8333\n-194.187.227.18:8333\n-194.247.12.136:8333\n-195.91.176.86:8333\n-196.28.98.20:8333\n-198.44.249.35:8333\n-198.84.172.252:8333\n-198.204.224.106:8333\n-198.211.97.46:8333\n-199.66.64.198:8333\n-199.101.100.58:8333\n-199.101.100.59:8333\n+194.24.182.27:8333\n+194.28.206.201:8333\n+194.63.143.197:8333\n+194.71.109.91:8333\n+194.79.8.36:8333\n+194.135.93.38:8333\n+194.186.160.253:8333\n+195.9.140.134:8333\n+195.39.206.29:8333\n+195.67.36.89:8333\n+195.169.99.82:8333\n+195.214.214.253:8333\n+195.223.71.147:8333\n+198.37.118.11:8333\n+198.54.113.125:8333\n+198.101.12.139:8333\n+198.143.12.105:8333\n+198.251.83.19:8333\n 199.127.224.50:8333\n-200.46.241.71:8333\n+200.12.138.146:8333\n 200.116.98.185:8333\n-203.9.225.13:8333\n-203.177.142.37:8333\n-205.200.247.149:8333\n-205.209.131.150:13838\n-206.53.64.74:8333\n-206.72.192.69:8333\n-206.123.112.180:8333\n-208.66.208.153:8333\n-208.68.174.76:8333\n+200.122.128.130:8333\n+202.29.6.48:8333\n+202.133.115.115:8333\n+203.59.17.160:8333\n+204.15.11.4:8333\n+204.111.241.195:8333\n+205.251.85.151:8333\n+207.244.70.40:8333\n+207.254.50.72:8333\n+208.76.93.83:8333\n 208.107.97.242:8333\n-208.111.48.132:8333\n+208.110.73.107:8333\n 208.118.235.190:8333\n-209.6.205.126:8333\n-209.40.96.121:8333\n-209.58.130.137:8333\n 209.73.142.226:8333\n-209.90.224.4:8333\n-209.126.69.243:8333\n-209.126.108.91:8333\n-209.195.4.18:8333\n+209.81.9.223:8333\n+209.126.107.166:8333\n+209.177.86.19:8333\n 209.250.6.190:8333\n-210.54.37.225:8333\n+210.1.219.155:8333\n+210.211.109.165:8333\n 210.223.3.44:8333\n-211.149.234.109:8333\n+211.21.129.69:8333\n+212.50.98.161:8333\n 212.51.140.183:8333\n+212.56.108.81:8333\n+212.83.35.173:8333\n 212.90.179.206:8333\n 212.93.226.90:8333\n 212.110.171.118:8333\n-212.202.132.17:8333\n+213.5.36.58:8333\n+213.5.181.205:8333\n+213.17.16.251:8333\n 213.91.205.134:8333\n-213.165.68.218:8333\n-213.196.200.213:8333\n+213.91.211.17:8333\n+213.155.3.216:8333\n+213.168.13.151:8333\n+213.186.170.109:8334\n+213.222.208.150:8333\n+216.32.213.112:8333\n 216.59.4.212:8333\n-216.74.32.109:8333\n-216.158.225.70:8333\n-216.164.138.13:8333\n-216.167.236.247:8333\n+216.126.193.163:8333\n 216.197.79.74:8333\n-217.11.225.189:8333\n+216.218.147.140:8333\n+216.227.39.84:8333\n+216.245.206.181:8333\n+216.249.92.230:8333\n 217.12.199.207:8333\n-217.20.130.72:8333\n-217.23.6.148:8333\n-217.23.140.103:8333\n-217.28.96.180:8333\n+217.23.2.177:8333\n+217.23.5.68:8333\n+217.28.194.2:8333\n 217.35.130.42:8333\n-217.111.66.79:8333\n-217.158.9.102:8333\n+217.64.47.138:8333\n+217.101.72.242:8333\n+217.145.81.229:8333\n 217.168.143.169:8333\n-217.209.32.219:8333\n-218.161.33.165:8333\n-221.121.144.138:8333\n-[2001:0:4137:9e76:2048:3a84:bb91:e846]:8333\n-[2001:0:4137:9e76:2066:e9e:b489:f8b8]:8333\n-[2001:0:4137:9e76:3854:1211:b5ac:a96b]:8333\n-[2001:0:4137:9e76:4e3:1f66:cd4c:829f]:8333\n-[2001:0:4137:9e76:ad:1f4:9ea9:fa2e]:8333\n-[2001:0:4137:9e76:e5:baa:b66f:f418]:8333\n-[2001:0:53aa:64c:20a2:59c4:ad22:93ea]:8333\n+217.169.7.111:8333\n+217.182.192.7:8333\n+219.88.232.229:8333\n+219.113.244.52:8333\n+220.130.128.58:8333\n+220.244.225.239:8333\n+221.141.3.12:8333\n+222.166.176.99:8333\n+223.252.173.147:8333\n+[2001:0:4137:9e76:1025:4e5:acb0:22cd]:8333\n+[2001:0:4137:9e76:1078:18a6:5d2c:2461]:8333\n+[2001:0:4137:9e76:10ec:236a:bd3b:f3c0]:8333\n+[2001:0:4137:9e76:186d:3f17:b7ad:95cf]:8333\n+[2001:0:4137:9e76:1870:242:ac03:aaf9]:8333\n+[2001:0:4137:9e76:18a6:1102:2abf:eb70]:8333\n+[2001:0:4137:9e76:1ce5:248c:4ff5:2b1d]:8333\n+[2001:0:4137:9e76:200f:156a:bc77:3acd]:8333\n+[2001:0:4137:9e76:2418:19d1:cddc:b1af]:8333\n+[2001:0:4137:9e76:2857:3d78:aaf8:eb28]:8333\n+[2001:0:4137:9e76:28b2:1b84:64fb:2d6a]:8333\n+[2001:0:4137:9e76:2c70:d51:d046:1209]:8333\n+[2001:0:4137:9e76:2cac:2fcf:46bb:be0d]:8333\n+[2001:0:4137:9e76:305e:20ee:a94f:6f69]:8333\n+[2001:0:4137:9e76:30cd:849:adfe:6e67]:8333\n+[2001:0:4137:9e76:345b:f12:ae1e:2948]:8333\n+[2001:0:4137:9e76:3c40:146e:9741:5a3a]:8333\n+[2001:0:4137:9e76:3c9e:3c3e:9d6e:7340]:8333\n+[2001:0:4137:9e76:499:29a8:d047:7ea1]:8333\n+[2001:0:4137:9e76:51:24:81b2:59e3]:8333\n+[2001:0:4137:9e76:889:2d7c:b61b:bf0d]:8333\n+[2001:0:4137:9e76:c9f:379c:add2:c938]:8333\n+[2001:0:4137:9e76:cd6:2eb4:b82b:addb]:8333\n+[2001:0:4137:9e76:cf0:2e3a:b29d:6207]:8333\n+[2001:0:53aa:64c:1485:fbf9:a798:1ffe]:8333\n [2001:0:53aa:64c:59:617f:a10d:e0]:8333\n-[2001:0:5ef5:79fb:200f:3ae5:3cbc:74c9]:8333\n-[2001:0:5ef5:79fb:38f2:13b4:b208:5604]:8333\n-[2001:0:5ef5:79fd:200b:22a7:cc50:f52d]:8333\n-[2001:0:5ef5:79fd:24ef:1aef:a994:303d]:8333\n-[2001:0:5ef5:79fd:24fc:b5d:ad4f:4db2]:8333\n-[2001:0:5ef5:79fd:28bf:2d23:e02e:c3ef]:8333\n-[2001:0:5ef5:79fd:3cd0:3c2e:da44:a759]:8333\n-[2001:0:5ef5:79fd:87e:fd7:b1c2:1b4]:8333\n-[2001:0:9d38:6ab8:18db:3bda:ab90:e81e]:8333\n-[2001:0:9d38:6ab8:4e7:1660:862f:a6d7]:8333\n-[2001:0:9d38:6ab8:6:2b:5074:9588]:8333\n-[2001:0:9d38:6abd:10f8:a7d7:bb90:f524]:8333\n-[2001:13d8:1c01:1000::11]:8333\n-[2001:15c0:65ff:610::2]:8333\n-[2001:1608:10:156:ae::4adb]:8333\n-[2001:1620:b1b:8888:20d:b9ff:fe41:6710]:8333\n-[2001:1620:b1b:face:20d:b9ff:fe41:6710]:8333\n-[2001:1620:f00:282::2]:8333\n-[2001:1620:f00:8282::1]:8333\n-[2001:1680:101:1ae::1]:8333\n-[2001:16d8:ff00:85de:20c:29ff:fe52:9594]:8333\n-[2001:19f0:4400:434d:5400:ff:fe42:2678]:8333\n+[2001:0:5ef5:79fb:1020:2cd0:4750:eb12]:8333\n+[2001:0:5ef5:79fb:1036:1d50:3881:6930]:8333\n+[2001:0:5ef5:79fb:10a4:27d8:9c0a:cfa9]:8333\n+[2001:0:5ef5:79fb:10ae:5a8:524b:dcc4]:8333\n+[2001:0:5ef5:79fb:1892:3e3a:3f74:affa]:8333\n+[2001:0:5ef5:79fb:1c95:1a60:d1f5:215b]:8333\n+[2001:0:5ef5:79fb:200b:16ef:b9cf:9860]:8333\n+[2001:0:5ef5:79fb:28e4:fbff:3237:992]:8333\n+[2001:0:5ef5:79fb:2ce8:1d9e:b3bf:b53e]:8333\n+[2001:0:5ef5:79fb:300a:2e20:4750:eb12]:8333\n+[2001:0:5ef5:79fb:30a2:1ad9:5324:836a]:8333\n+[2001:0:5ef5:79fb:3409:1996:bcac:241f]:8333\n+[2001:0:5ef5:79fb:344b:2bd4:bb3e:e26]:8333\n+[2001:0:5ef5:79fb:34b3:11db:e7da:d461]:8333\n+[2001:0:5ef5:79fb:3839:2e0c:ba30:288e]:8333\n+[2001:0:5ef5:79fb:3880:ef4:b5f0:ee4d]:8333\n+[2001:0:5ef5:79fb:389f:52:9c0c:1f41]:8333\n+[2001:0:5ef5:79fb:3c73:304a:9d8b:99d5]:8333\n+[2001:0:5ef5:79fb:3cac:33e4:39ca:38c]:8333\n+[2001:0:5ef5:79fb:6f:3667:5398:538f]:8333\n+[2001:0:5ef5:79fb:88c:3e6:9454:3331]:8333\n+[2001:0:5ef5:79fb:89:3b55:9fcc:8e66]:8333\n+[2001:0:5ef5:79fb:c9b:3d65:bdf4:5d58]:8333\n+[2001:0:5ef5:79fb:cb7:8cc:b8ee:6806]:8333\n+[2001:0:5ef5:79fd:24f6:37b5:b9d2:2aa7]:8333\n+[2001:0:5ef5:79fd:3c63:82e:aabc:bd39]:8333\n+[2001:0:5ef5:79fd:3cf5:2eb7:c966:561d]:8333\n+[2001:0:5ef5:79fd:cf4:28e2:aabd:b766]:8333\n+[2001:0:9d38:6ab8:10f6:453:3ca4:1a8e]:8333\n+[2001:0:9d38:6ab8:14dd:298b:431c:bfec]:8333\n+[2001:0:9d38:6ab8:3051:1561:b62d:73a5]:8333\n+[2001:0:9d38:6ab8:3467:ffa:b612:e9c6]:8333\n+[2001:0:9d38:6ab8:8e8:1e26:e8e3:eed7]:8333\n+[2001:0:9d38:6ab8:c82:37b3:47ee:3ae2]:8333\n+[2001:0:9d38:6abd:1052:3cd8:a89b:e67]:8333\n+[2001:0:9d38:6abd:144d:23f3:abcb:8bcb]:8333\n+[2001:0:9d38:6abd:1c2e:31df:adf1:e616]:8333\n+[2001:0:9d38:6abd:1c41:213b:facc:9c6b]:8333\n+[2001:0:9d38:6abd:2093:12b5:8cbf:4f57]:8333\n+[2001:0:9d38:6abd:243a:2394:fd91:712c]:8333\n+[2001:0:9d38:6abd:2833:9f8:c94c:6881]:8333\n+[2001:0:9d38:6abd:2c84:29d3:ae5a:f6f0]:8333\n+[2001:0:9d38:6abd:2ce4:d50:cb22:3672]:8333\n+[2001:0:9d38:6abd:3824:816:c30d:e9d4]:8333\n+[2001:0:9d38:6abd:389a:24e9:cb5c:a1cd]:8333\n+[2001:0:9d38:6abd:38bd:88f:2193:4932]:8333\n+[2001:0:9d38:6abd:3c4f:cb1:d65b:d775]:8333\n+[2001:0:9d38:6abd:3c51:280b:b1e9:ffd]:8333\n+[2001:0:9d38:6abd:3c5a:2e2:2193:4932]:8333\n+[2001:0:9d38:6abd:3c5e:3ebf:3dc0:703a]:8333\n+[2001:0:9d38:6abd:4c9:12fc:d1d9:dc21]:8333\n+[2001:0:9d38:6abd:6e:34e7:d0a7:6772]:8333\n+[2001:0:9d38:6abd:8de:1f29:2aea:f96f]:8333\n+[2001:0:9d38:6abd:c5f:2674:a467:787c]:8333\n+[2001:0:9d38:6abd:cc0:23a4:ad7c:c998]:8333\n+[2001:0:9d38:78cf:20c0:2097:d188:9c3b]:8333\n+[2001:0:9d38:78cf:2420:dda:4ff6:8794]:8333\n+[2001:0:9d38:78cf:2892:fcb:26b2:22ac]:8333\n+[2001:0:9d38:78cf:3020:1ad7:26b2:22ac]:8333\n+[2001:0:9d38:78cf:30ae:211b:e717:7788]:8333\n+[2001:0:9d38:78cf:30d0:6edd:a418:a9e9]:8333\n+[2001:0:9d38:78cf:30d9:3278:b004:65a7]:8333\n+[2001:0:9d38:78cf:387a:17d5:dacb:bdf1]:8333\n+[2001:0:9d38:78cf:3c38:c41:433c:7b87]:8333\n+[2001:0:9d38:78cf:467:193:a8b0:a122]:8333\n+[2001:0:9d38:78cf:c65:fb96:97d2:a9b0]:8333\n+[2001:0:9d38:78cf:c9f:2633:d169:9999]:8333\n+[2001:0:9d38:78cf:ce2:aba:d120:90db]:8333\n+[2001:0:9d38:90d7:105d:26f2:a241:7339]:8333\n+[2001:0:9d38:90d7:1062:3f95:e065:fc21]:8333\n+[2001:0:9d38:90d7:10a6:19f6:ab95:ebcb]:8333\n+[2001:0:9d38:90d7:14e2:22cb:738f:9489]:8333\n+[2001:0:9d38:90d7:18fb:3da9:893d:1d57]:8333\n+[2001:0:9d38:90d7:1cc3:2534:e020:53fa]:8333\n+[2001:0:9d38:90d7:206d:2b34:d0cb:9de8]:8333\n+[2001:0:9d38:90d7:20cb:2cb:b9a7:ca5e]:8333\n+[2001:0:9d38:90d7:245c:2753:4382:704b]:8333\n+[2001:0:9d38:90d7:24d6:225f:793b:bf5]:8333\n+[2001:0:9d38:90d7:24da:8f0:bbf9:9c93]:8333\n+[2001:0:9d38:90d7:28a2:107b:438e:b08d]:8333\n+[2001:0:9d38:90d7:2c16:d58:b381:b61]:8333\n+[2001:0:9d38:90d7:2c68:3068:cb59:3be7]:8333\n+[2001:0:9d38:90d7:2c90:3855:b94f:c926]:8333\n+[2001:0:9d38:90d7:2ca2:3592:c111:dd82]:8333\n+[2001:0:9d38:90d7:2cce:1f6e:b381:8605]:8333\n+[2001:0:9d38:90d7:3435:3915:2bcc:6cc7]:8333\n+[2001:0:9d38:90d7:3438:2b9f:ad57:a721]:8333\n+[2001:0:9d38:90d7:3474:1df1:e732:e5e3]:8333\n+[2001:0:9d38:90d7:38c4:37af:ab0a:f5ef]:8333\n+[2001:0:9d38:90d7:3a:39fd:a43b:5591]:8333\n+[2001:0:9d38:90d7:3c9d:2a45:d537:3bd6]:8333\n+[2001:0:9d38:90d7:3cfb:2cf5:5254:4d1e]:8333\n+[2001:0:9d38:90d7:43f:337:adb4:6310]:8333\n+[2001:0:9d38:90d7:493:995:d2e9:39be]:8333\n+[2001:0:9d38:90d7:5b:ce3:b275:92ab]:8333\n+[2001:0:9d38:90d7:8a8:59d:d0cb:d585]:8333\n+[2001:0:9d38:90d7:c8e:1ba0:c5a9:dace]:8333\n+[2001:0:9d38:90d7:cdb:365f:2302:f729]:8333\n+[2001:0:9d38:90d7:cf5:222e:893e:716c]:8333\n+[2001:0:9d38:90d7:d6:1085:b8dd:41c2]:8333\n+[2001:0:9d38:953c:101a:23b3:6b98:f888]:8333\n+[2001:0:9d38:953c:1805:f38:3eb2:2121]:8333\n+[2001:0:9d38:953c:1858:16f9:3833:da19]:8333\n+[2001:0:9d38:953c:18ea:2735:e73d:adc5]:8333\n+[2001:0:9d38:953c:1c44:2b70:9de7:a7cc]:8333\n+[2001:0:9d38:953c:200a:3f95:bb7c:c09f]:8333\n+[2001:0:9d38:953c:200c:3473:b85d:ddd]:8333\n+[2001:0:9d38:953c:200f:5a0:47c6:5507]:8333\n+[2001:0:9d38:953c:2097:204a:47c5:5881]:8333\n+[2001:0:9d38:953c:248f:24cd:aaf5:dee3]:8333\n+[2001:0:9d38:953c:287d:168e:3caf:47af]:8333\n+[2001:0:9d38:953c:28c1:58d:b721:94c1]:8333\n+[2001:0:9d38:953c:2c31:30a3:39d3:528]:8188\n+[2001:0:9d38:953c:2c3d:309b:d2db:8288]:8333\n+[2001:0:9d38:953c:2c47:1b36:52c1:3c73]:8333\n+[2001:0:9d38:953c:304a:10e1:b739:822a]:8333\n+[2001:0:9d38:953c:30a3:29fd:33f6:eaab]:8333\n+[2001:0:9d38:953c:3427:859b:b525:1069]:8333\n+[2001:0:9d38:953c:3459:2541:3651:d675]:8333\n+[2001:0:9d38:953c:4f5:9c88:af91:d3d3]:8333\n+[2001:0:9d38:953c:cd1:1d54:b80a:42f4]:8333\n+[2001:0:9d38:953c:cfa:37e6:9d8e:7474]:8333\n+[2001:13d8:1c01:2000:2470::1]:8333\n+[2001:1470:fffd:202c:225:90ff:fe8f:5f62]:8333\n+[2001:14ba:200:0:543c:42ce:a48b:b0d0]:8333\n+[2001:14ba:2fc:700:41b2:df51:efd8:f581]:8333\n [2001:19f0:5000:8c8b:5400:ff:fe1f:c023]:8333\n-[2001:19f0:5000:8ce6:5400:ff:fe1b:24a9]:8333\n-[2001:19f0:5:314:5400:ff:fe2c:42e8]:8333\n-[2001:19f0:5:51b:5400:ff:fe49:fe5b]:8333\n+[2001:19f0:5:749:5400:ff:fe71:c3fc]:8333\n [2001:19f0:5:bc:5400:ff:fe3b:9339]:8333\n-[2001:1af8:4020:a020:5::]:8333\n+[2001:19f0:7402:42c:5400:ff:fe6c:b9b8]:8333\n+[2001:1af8:4010:a08f:f811:e5f0:3f63:e753]:8333\n+[2001:1af8:4010:a094:3333::8c38]:8333\n+[2001:1af8:4070:a016:3333::5afb]:8333\n+[2001:1af8:4700:a071:4444::e26e]:8333\n [2001:1bc8:1a0:590e:2e0:f4ff:fe16:3a39]:8333\n-[2001:1c04:1401:8f00:f4fe:4fff:fe0c:df40]:8333\n+[2001:2040:77::89]:8333\n+[2001:288:1001:107:294e:5581:74bd:42f9]:8333\n+[2001:3c8:c103:a001::48]:8333\n [2001:4128:6135:10:20c:29ff:fe69:9e81]:8333\n [2001:4128:6135:2010:21e:bff:fee8:a3c0]:8333\n [2001:4128:6135:e001:5054:ff:fe37:e9eb]:8333\n-[2001:41d0:1000:1024::]:8333\n-[2001:41d0:1000:1433::]:8333\n-[2001:41d0:1004:22ae::]:8333\n-[2001:41d0:1004:2996::]:8333\n-[2001:41d0:1008:11e0::1a5c:6d9d]:8333\n-[2001:41d0:1008:11e0::b74:baf7]:8333\n-[2001:41d0:1008:237a::]:8333\n+[2001:4178:6:1427:62:116:188:85]:8333\n+[2001:41d0:1004:20f0::]:8333\n [2001:41d0:1008:2752::]:8333\n-[2001:41d0:1008:494::]:8333\n-[2001:41d0:1:45d8::1]:8333\n-[2001:41d0:1:5630::1]:8333\n+[2001:41d0:1:4722::1]:8333\n [2001:41d0:1:6f57::1]:8333\n-[2001:41d0:1:801e::1]:8333\n-[2001:41d0:1:8852::1]:8333\n+[2001:41d0:1:7353::1]:8333\n+[2001:41d0:1:7469::1]:8333\n+[2001:41d0:1:7d09::1]:8333\n [2001:41d0:1:8b26::1]:8333\n-[2001:41d0:1:a5b8::1]:8333\n-[2001:41d0:1:b26b::1]:8333\n-[2001:41d0:1:c139::1]:8333\n-[2001:41d0:1:c8d7::1]:8333\n+[2001:41d0:1:c129::1]:8333\n [2001:41d0:1:d227::]:8333\n-[2001:41d0:1:dbc4::1]:8333\n-[2001:41d0:1:dc5d::1]:8333\n [2001:41d0:1:e13b::1]:8333\n-[2001:41d0:1:ef5b::1]:8333\n+[2001:41d0:1:e623::1]:8333\n [2001:41d0:2:16be::1]:8333\n [2001:41d0:2:203c::1]:8333\n-[2001:41d0:2:38c5::1]:8333\n-[2001:41d0:2:519::]:8333\n+[2001:41d0:2:3242::]:8333\n+[2001:41d0:2:8a0f::]:8333\n+[2001:41d0:2:8c65::]:8333\n+[2001:41d0:2:8d13::]:8333\n+[2001:41d0:2:9459::]:8333\n+[2001:41d0:2:950a:ffff:ffff:0:3]:8333\n [2001:41d0:2:9c94::1]:8333\n-[2001:41d0:2:b792::]:8333\n+[2001:41d0:2:a212::]:8333\n+[2001:41d0:2:a232::]:8333\n+[2001:41d0:2:ab1c::]:8333\n [2001:41d0:2:bf2a::]:8333\n [2001:41d0:2:c793::]:8333\n-[2001:41d0:2:c9bf::]:8333\n-[2001:41d0:303:4f0::]:8333\n-[2001:41d0:8:1a8a::1]:8333\n-[2001:41d0:8:3fa9::1]:8333\n-[2001:41d0:8:4670::1]:8333\n-[2001:41d0:8:4f48::1]:8333\n-[2001:41d0:8:6728::]:8333\n-[2001:41d0:8:72c2:d:242:ac11:2]:8333\n-[2001:41d0:8:8007::]:8333\n-[2001:41d0:8:a71c::]:8333\n-[2001:41d0:8:bccc::1]:8333\n+[2001:41d0:302:1000::fa25]:8333\n+[2001:41d0:303:1907::]:8333\n+[2001:41d0:52:d00::6e2]:8333\n+[2001:41d0:52:d00::6e3]:8333\n+[2001:41d0:8:1b29::]:8333\n+[2001:41d0:8:3d4b::1]:8333\n+[2001:41d0:8:4d4d::1]:8333\n+[2001:41d0:8:7a38::1]:8333\n+[2001:41d0:8:8f46::1]:8333\n+[2001:41d0:8:ba87::1]:8333\n [2001:41d0:8:bd45::1]:8333\n+[2001:41d0:8:bed3::]:8333\n [2001:41d0:8:c67c::]:8333\n+[2001:41d0:8:d844:1337::1017]:8333\n+[2001:41d0:8:ddb::1]:8333\n+[2001:41d0:8:ddf::1]:8333\n [2001:41d0:8:de3d::1]:8333\n-[2001:41d0:8:e257::1]:8333\n [2001:41d0:8:e3e4::1]:8333\n-[2001:41d0:a:14cc::1]:8333\n-[2001:41d0:a:15b2::1]:8333\n-[2001:41d0:a:1ac9::1]:8333\n-[2001:41d0:a:2496::1]:8333\n-[2001:41d0:a:308c::]:8333\n-[2001:41d0:a:5879::]:8333\n+[2001:41d0:a:4e3f::1c7d:6b01]:8333\n+[2001:41d0:a:635b::1]:8333\n [2001:41d0:a:6810::1]:8333\n-[2001:41d0:a:682d::1]:8333\n [2001:41d0:a:6c29::1]:8333\n-[2001:41d0:a:f52a::1]:8333\n+[2001:41d0:a:6fd0::]:8333\n+[2001:41d0:a:fac7::1]:8333\n [2001:41d0:d:111c::]:8333\n+[2001:41d0:d:2ac8::]:8333\n [2001:41d0:e:1388::1]:8333\n-[2001:41d0:e:26b::1]:8333\n-[2001:41d0:e:f73::1]:8333\n-[2001:41d0:fc8c:a200:7a24:afff:fe9d:c69b]:8333\n [2001:41f0:61:0:72f3:95ff:fe09:7521]:8333\n [2001:41f0:61::7]:8333\n-[2001:4428:200:8171:db6:2ff4:9c0e:a2da]:8333\n [2001:470:1f07:151c:baac:6fff:feb7:3ba9]:8333\n-[2001:470:1f0b:ad6:a60:6eff:fec6:2323]:8333\n-[2001:470:1f11:617::10f]:8333\n-[2001:470:1f14:73e::2]:8333\n-[2001:470:1f14:7d::2]:8333\n+[2001:470:1f0b:8c4::5]:8333\n+[2001:470:1f0b:967::11]:8333\n [2001:470:1f15:11f8::10]:8333\n [2001:470:1f15:1b95:2c3e:8a9a:24e1:7084]:8333\n-[2001:470:1f15:e9b::3ef]:8333\n+[2001:470:1f15:f28::3]:8333\n+[2001:470:1f1a:172::2]:8333\n+[2001:470:1f1c:b07::2]:8333\n [2001:470:1f1d:3a9::10]:8333\n [2001:470:25:482::2]:8333\n-[2001:470:27:19f::2]:8333\n-[2001:470:27:665::2]:8333\n [2001:470:28:365::4]:8333\n-[2001:470:41:6::2]:8333\n-[2001:470:727b::11:14]:8333\n-[2001:470:7:2f0::2]:8333\n-[2001:470:7:65::2]:8333\n-[2001:470:7f85::2]:8333\n-[2001:470:8:2e1:5825:39df:3e4c:54a8]:8333\n-[2001:470:8:2e1::43]:8333\n-[2001:470:8:2e1:ae2a:e257:4470:6350]:8333\n+[2001:470:754f:42::17a]:8333\n+[2001:470:7:b74::2]:8333\n+[2001:470:7dda:1::1]:8333\n+[2001:470:8:c70:20c:29ff:fe6a:8fdc]:8333\n+[2001:470:8:c70::54]:8333\n [2001:470:a:c13::2]:8333\n+[2001:470:d00d:0:3664:a9ff:fe9a:5150]:8333\n+[2001:470:dbf2:aaaa::b17:c01c]:8333\n+[2001:470:f457:8000::a6]:8333\n [2001:4801:7819:74:b745:b9d5:ff10:a61a]:8333\n [2001:4801:7819:74:b745:b9d5:ff10:aaec]:8333\n [2001:4801:7828:104:be76:4eff:fe10:1325]:8333\n-[2001:4802:7800:2:30d7:1775:ff20:1858]:8333\n-[2001:4ba0:babe:832::]:8333\n-[2001:4ba0:cafe:379::1]:8333\n-[2001:4ba0:ffee:33::10]:8333\n-[2001:4dd0:ff00:9a67::9]:8333\n-[2001:610:1b19::3]:8333\n-[2001:610:600:a41::2]:8333\n-[2001:678:174:4021::2:8333]:8333\n-[2001:67c:16dc:1201:5054:ff:fe17:4dac]:8333\n+[2001:4ba0:cafe:13c0::1]:8333\n+[2001:4ba0:cafe:418::1]:8333\n+[2001:558:6045:23:1830:896c:d901:190d]:8333\n+[2001:67c:1220:80c::93e5:dd2]:8333\n [2001:67c:2128:ffff:6062:36ff:fe30:6532]:8333\n-[2001:67c:2564:331:3547:6e28:85a4:fb27]:8333\n-[2001:6a0:200:368::2]:8333\n-[2001:718:801:311:5054:ff:fe19:c483]:8333\n-[2001:7b8:2ff:8f::2]:8333\n-[2001:8d8:8a6:4400::3f:86c]:8333\n [2001:8d8:923:8400::87:ebd]:8333\n-[2001:960:66d::2]:8333\n+[2001:981:4452:1::100]:8333\n [2001:981:46:1:ba27:ebff:fe5b:edee]:8333\n-[2001:ba8:1f1:f069::2]:8333\n+[2001:981:bdbd:1:c506:7d38:4b47:da15]:8333\n+[2001:985:79af:20::35]:8333\n [2001:bc8:225f:10e:505:6573:7573:d0a]:8333\n-[2001:bc8:2706::1]:8333\n [2001:bc8:323c:100::53]:8333\n [2001:bc8:323c:100::80:4]:8333\n [2001:bc8:323c:100::cafe]:8333\n [2001:bc8:3680:4242::1]:8333\n [2001:bc8:399f:f000::1]:8333\n-[2001:bc8:3cbf::5]:8333\n-[2001:bc8:4700:2300::19:807]:8333\n-[2001:e42:102:1805:160:16:206:31]:8333\n-[2002:12f1:3f::12f1:3f]:8333\n-[2002:1e2:5349::1e2:5349]:8333\n+[2002:1e2:5587::1e2:5587]:8333\n [2002:1e2:5588::1e2:5588]:8333\n-[2002:2501:cf62::2501:cf62]:8333\n-[2002:268c:a135::268c:a135]:8333\n-[2002:2a33:99db::2a33:99db]:8332\n-[2002:2ebc:2c14::7]:8333\n-[2002:2f59:2c9c::2f59:2c9c]:11885\n-[2002:2f5a:3619::2f5a:3619]:8333\n-[2002:2f5a:36a4::2f5a:36a4]:8333\n-[2002:2f5a:429::2f5a:429]:8333\n+[2002:2a33:21c4::2a33:21c4]:8333\n+[2002:2e04:784b::2e04:784b]:8333\n+[2002:2ebc:2c14::16]:8333\n+[2002:2f5a:3c1c::2f5a:3c1c]:10011\n [2002:2f5a:562a::2f5a:562a]:8333\n-[2002:3a3b:216::3a3b:216]:8333\n-[2002:3dfa:5d23::3dfa:5d23]:8333\n-[2002:424f:a052::424f:a052]:8333\n-[2002:451e:e922::451e:e922]:8333\n+[2002:2f5b:a5f9::2f5b:a5f9]:8333\n+[2002:3141:28c::3141:28c]:8333\n+[2002:323f:a2f2::323f:a2f2]:8333\n+[2002:323f:fbd::323f:fbd]:8333\n+[2002:33ff:69a0::1]:8333\n+[2002:3e6a:106f::3e6a:106f]:8333\n+[2002:3e70:bbc::3e70:bbc]:8333\n+[2002:3e7a:6727::3e7a:6727]:8333\n+[2002:3f62:e6bb::3f62:e6bb]:8333\n [2002:4540:4b30::4540:4b30]:8333\n-[2002:51ab:7cc::51ab:7cc]:8333\n-[2002:527:de11::527:de11]:8333\n-[2002:5395:7d01::5395:7d01]:8333\n-[2002:5395:7d2a::5395:7d2a]:8333\n-[2002:5669:e3be::5669:e3be]:8333\n-[2002:566a:5d6d::566a:5d6d]:8333\n-[2002:59b9:f820::59b9:f820]:8333\n-[2002:59f8:ac69::59f8:ac69]:8333\n-[2002:5bd4:b65a::5bd4:b65a]:8333\n-[2002:5c3f:39db::5c3f:39db]:8333\n-[2002:5d33:8d03::5d33:8d03]:8333\n-[2002:5d67:49bb::5d67:49bb]:8333\n-[2002:5dae:5d5f::5dae:5d5f]:8333\n+[2002:4e6b:c745::1]:8333\n+[2002:5052:4d8a::5052:4d8a]:8333\n+[2002:51a9:9cc9::51a9:9cc9]:8333\n+[2002:54fb:cb05::1]:8333\n+[2002:5bc2:5428::5bc2:5428]:8333\n+[2002:5bce:1253::5bce:1253]:8333\n+[2002:5bdb:19e8::5bdb:19e8]:8333\n+[2002:5c3f:3912::5c3f:3912]:8333\n+[2002:5dbd:91a9::5dbd:91a9]:8333\n [2002:5dbe:8cc6::5dbe:8cc6]:8333\n-[2002:5dbe:9503::5dbe:9503]:8333\n [2002:5fd3:8944::5fd3:8944]:8333\n-[2002:5fd3:9467::5fd3:9467]:8333\n-[2002:67f9:6a48::67f9:6a48]:8333\n-[2002:67f9:6a4a::67f9:6a4a]:8333\n-[2002:67f9:6a95::67f9:6a95]:8333\n+[2002:65c8:a018::65c8:a018]:8333\n+[2002:6750:a839::6750:a839]:8333\n+[2002:67fa:44b::67fa:44b]:8333\n [2002:6a0e:3ea8::6a0e:3ea8]:10011\n-[2002:6b96:375a::6b96:375a]:8333\n-[2002:6ca8:cffb::6ca8:cffb]:8333\n-[2002:6caf:234::6caf:234]:8333\n-[2002:6dec:58f5::6dec:58f5]:8333\n+[2002:6a0f:2497::6a0f:2497]:8333\n [2002:6dec:5ac7::6dec:5ac7]:8333\n-[2002:7237:4a02::7237:4a02]:20033\n-[2002:7237:94fd::7237:94fd]:10011\n-[2002:7237:e428::7237:e428]:8333\n+[2002:704a:d6d4::704a:d6d4]:9997\n [2002:7237:fcf6::7237:fcf6]:20188\n-[2002:76c0:96e6::76c0:96e6]:8333\n+[2002:76b2:7f40::76b2:7f40]:8333\n [2002:7819:7e80::7819:7e80]:7743\n-[2002:781a:ea86::781a:ea86]:8333\n-[2002:781a:f3c2::781a:f3c2]:14475\n-[2002:784c:c2c0::784c:c2c0]:8333\n-[2002:784c:ec97::784c:ec97]:8333\n-[2002:792b:261a::792b:261a]:8333\n-[2002:88f3:8cca::88f3:8cca]:8333\n-[2002:88f3:a83c::88f3:a83c]:8333\n-[2002:8ac9:516f::8ac9:516f]:8333\n-[2002:8b81:6d78::8b81:6d78]:50344\n-[2002:8b81:6e5c::8b81:6e5c]:38176\n-[2002:8bc4:90a6::8bc4:90a6]:8333\n+[2002:781b:8db8::781b:8db8]:8333\n+[2002:7b38:cd00::7b38:cd00]:8333\n [2002:ac52:b854::ac52:b854]:8333\n-[2002:add0:c14a::add0:c14a]:8333\n-[2002:b07e:a70a::b07e:a70a]:8333\n-[2002:b27c:c565:1::250]:8333\n-[2002:b27c:c565::1]:8333\n-[2002:b94d:80f1::b94d:80f1]:8333\n-[2002:b982:e26a::b982:e26a]:8333\n-[2002:bcd5:3145::bcd5:3145]:8333\n-[2002:c08a:d22b::c08a:d22b]:8333\n-[2002:c0c7:f8e3::c0c7:f8e3]:32771\n-[2002:c1a9:fc5a::c1a9:fc5a]:8333\n+[2002:b610:1ca3::b610:1ca3]:8333\n+[2002:b946:694a::b946:694a]:8339\n+[2002:b994:9167::b994:9167]:8333\n+[2002:bc28:6b92::bc28:6b92]:8333\n [2002:c23f:8fc5::c23f:8fc5]:8333\n-[2002:d395:ea6d::d395:ea6d]:8333\n-[2002:d917:ca5::d917:ca5]:8333\n-[2002:d917:e91::d917:e91]:8333\n+[2002:c338:3f0a::c338:3f0a]:8333\n+[2002:d1b1:5615::d1b1:5615]:8333\n+[2002:d2d3:6da5::d2d3:6da5]:8333\n+[2002:d917:2b1::d917:2b1]:8333\n [2002:db71:f434::db71:f434]:8333\n-[2400:2651:161:1000:6847:d40f:aaa3:4848]:8333\n-[2400:8901::f03c:91ff:fec8:4280]:8333\n-[2401:1800:7800:102:be76:4eff:fe1c:a7d]:8333\n+[2003:a:36f:4f01::1]:8333\n+[2003:a:37f:ef4f:dead:babe:b00b:beef]:8333\n+[2400:8901::f03c:91ff:fe2c:63d8]:8333\n+[2400:8902::f03c:91ff:fed5:9d8d]:8333\n [2401:2500:203:10:153:120:156:83]:8333\n [2401:a400:3200:5600:14ee:f361:4bdc:1f7c]:8333\n+[2402:1f00:8100:36::]:8333\n [2403:4200:403:2::ff]:8333\n+[2405:9800:b440:947f:59a5:f379:1876:858c]:8333\n [2405:aa00:2::40]:8333\n+[2406:da14:445:5201::4]:8333\n+[2406:da18:f7c:4351:1a58:81fe:6ed0:1103]:8333\n+[2406:da18:f7c:4351:22aa:2585:fe88:7d58]:8333\n+[2406:da18:f7c:4351:2674:33bb:25d6:cbba]:8333\n+[2406:da18:f7c:4351:2e19:a8c7:a36a:bde0]:8333\n+[2406:da18:f7c:4351:3cc8:43d:fbcc:5067]:8333\n+[2406:da18:f7c:4351:5228:2b53:bb9a:edf5]:8333\n+[2406:da18:f7c:4351:5729:102:998c:d41a]:8333\n+[2406:da18:f7c:4351:591b:4881:3986:3703]:8333\n+[2406:da18:f7c:4351:59b9:b50:f47f:b560]:8333\n+[2406:da18:f7c:4351:61f2:cfb0:8c45:5fdd]:8333\n+[2406:da18:f7c:4351:6356:68e0:73fc:ac0b]:8333\n+[2406:da18:f7c:4351:660e:f6bc:3563:ba8e]:8333\n+[2406:da18:f7c:4351:691:9e:f2df:227d]:8333\n+[2406:da18:f7c:4351:721c:83d2:6765:4300]:8333\n+[2406:da18:f7c:4351:7237:9be:4601:bc15]:8333\n+[2406:da18:f7c:4351:7a3b:c203:fd11:6c7d]:8333\n+[2406:da18:f7c:4351:7a74:a80e:889a:ba42]:8333\n+[2406:da18:f7c:4351:7ee3:a181:f25c:fa79]:8333\n+[2406:da18:f7c:4351:8a25:9084:140:4549]:8333\n+[2406:da18:f7c:4351:8bc0:c6fd:ecfb:f074]:8333\n+[2406:da18:f7c:4351:91ce:d0ba:1b9e:c27b]:8333\n+[2406:da18:f7c:4351:9336:44e7:84b4:85b9]:8333\n+[2406:da18:f7c:4351:936c:c3b9:a1d0:848]:8333\n+[2406:da18:f7c:4351:93ef:1eef:65c8:766d]:8333\n+[2406:da18:f7c:4351:94e0:5b27:78c2:5111]:8333\n+[2406:da18:f7c:4351:9815:a202:18a3:2a36]:8333\n+[2406:da18:f7c:4351:9e1b:135c:7472:9d9]:8333\n+[2406:da18:f7c:4351:9f84:278:68f5:b8ea]:8333\n+[2406:da18:f7c:4351:a062:493f:a6f8:ca75]:8333\n+[2406:da18:f7c:4351:a192:b98:3066:8f11]:8333\n+[2406:da18:f7c:4351:a1cb:2f19:4a54:38c9]:8333\n+[2406:da18:f7c:4351:a4a2:4c9:c43a:98ae]:8333\n+[2406:da18:f7c:4351:a7e9:cd48:fa90:46d3]:8333\n+[2406:da18:f7c:4351:a88:99:6671:fce4]:8333\n+[2406:da18:f7c:4351:abe1:2e48:eb97:2ab5]:8333\n+[2406:da18:f7c:4351:acf5:2b21:5d2a:6b31]:8333\n+[2406:da18:f7c:4351:b51f:8966:74a5:6c53]:8333\n+[2406:da18:f7c:4351:b8e3:f3ca:e412:daa5]:8333\n+[2406:da18:f7c:4351:ba7c:6da8:da59:b1b6]:8333\n+[2406:da18:f7c:4351:be04:6f8e:8f93:c555]:8333\n+[2406:da18:f7c:4351:c82d:2a0b:31a5:e28d]:8333\n+[2406:da18:f7c:4351:c993:eb06:bd2c:1e65]:8333\n+[2406:da18:f7c:4351:d4b9:bff8:c4d4:1e05]:8333\n+[2406:da18:f7c:4351:d70d:a73d:1ddd:439e]:8333\n+[2406:da18:f7c:4351:e103:f456:b296:9f29]:8333\n+[2406:da18:f7c:4351:ea3b:27ec:7c2:aebc]:8333\n+[2406:da18:f7c:4351:f62c:5013:379b:363e]:8333\n [240b:10:ca20:f0:224:e8ff:fe1f:60d9]:8333\n [240b:250:1e0:2400:b9ef:8fe3:a69a:7378]:8333\n-[240d:1a:302:8600:8876:a36d:12ee:f285]:8333\n+[2600:1f14:34a:fe00:13f4:ceb6:a9db:4f47]:8333\n+[2600:1f14:34a:fe00:2550:9366:a5d9:78a5]:8333\n+[2600:1f14:34a:fe00:27d:6ed:7c8d:7bee]:8333\n+[2600:1f14:34a:fe00:2ed6:8a19:4eb:36c1]:8333\n+[2600:1f14:34a:fe00:34c7:2e9e:e60e:f823]:8333\n+[2600:1f14:34a:fe00:38de:442:72df:6346]:8333\n+[2600:1f14:34a:fe00:3a1e:878f:991a:9582]:8333\n+[2600:1f14:34a:fe00:3d88:1805:54e3:f4c8]:8333\n+[2600:1f14:34a:fe00:3f3e:58bd:ec82:5dac]:8333\n+[2600:1f14:34a:fe00:449a:9515:8436:f407]:8333\n+[2600:1f14:34a:fe00:4f84:277f:e64d:1f06]:8333\n+[2600:1f14:34a:fe00:5229:de84:8226:7257]:8333\n+[2600:1f14:34a:fe00:5743:42c3:951b:e97a]:8333\n+[2600:1f14:34a:fe00:5a29:85b:86b5:fa0e]:8333\n+[2600:1f14:34a:fe00:5de8:81e:6d79:330b]:8333\n+[2600:1f14:34a:fe00:5fca:ad1e:5b9c:5265]:8333\n+[2600:1f14:34a:fe00:68c4:ca1b:813e:1bce]:8333\n+[2600:1f14:34a:fe00:6:de9e:7b5e:a558]:8333\n+[2600:1f14:34a:fe00:6c72:1fcd:433:dc97]:8333\n+[2600:1f14:34a:fe00:77ee:629f:bc13:fb4f]:8333\n+[2600:1f14:34a:fe00:79d0:85d6:516f:3293]:8333\n+[2600:1f14:34a:fe00:81:422f:9ef3:4579]:8333\n+[2600:1f14:34a:fe00:822b:5f05:ec8d:48c6]:8333\n+[2600:1f14:34a:fe00:82a:76a2:fdc9:845e]:8333\n+[2600:1f14:34a:fe00:83ca:cef6:e04c:50c0]:8333\n+[2600:1f14:34a:fe00:8ba2:a36c:8687:d5aa]:8333\n+[2600:1f14:34a:fe00:8c80:5c67:3b47:90b3]:8333\n+[2600:1f14:34a:fe00:8eb8:f47f:6d53:e3ae]:8333\n+[2600:1f14:34a:fe00:989c:f8f8:a922:1b9a]:8333\n+[2600:1f14:34a:fe00:98c9:1eb3:ea12:a8f0]:8333\n+[2600:1f14:34a:fe00:9ee5:a8f6:6b2a:866e]:8333\n+[2600:1f14:34a:fe00:a46b:7bd5:629f:f75c]:8333\n+[2600:1f14:34a:fe00:a627:8299:8784:d439]:8333\n+[2600:1f14:34a:fe00:ad0b:955e:b4e5:d97d]:8333\n+[2600:1f14:34a:fe00:ae82:7117:9d69:7c86]:8333\n+[2600:1f14:34a:fe00:ccee:365a:43f8:b871]:8333\n+[2600:1f14:34a:fe00:d5ee:a3e2:2f85:e593]:8333\n+[2600:1f14:34a:fe00:d5f0:1fe0:6bd5:18a8]:8333\n+[2600:1f14:34a:fe00:e4a7:5aba:af87:4cdb]:8333\n+[2600:1f14:34a:fe00:e8e5:2d0:fb6f:2f5]:8333\n+[2600:1f14:34a:fe00:e9ef:4690:a5ac:92be]:8333\n+[2600:1f14:34a:fe00:efba:2260:6997:fcf7]:8333\n+[2600:1f14:34a:fe00:f107:2d08:c67:e5dd]:8333\n+[2600:1f14:34a:fe00:f1b9:88fb:f3db:a86e]:8333\n+[2600:1f14:34a:fe00:f79c:17b7:6f75:95b7]:8333\n+[2600:1f14:6ae:d900:6550:3fc5:e074:a72c]:8333\n+[2600:1f16:625:e00:1243:38b3:caa:d62e]:8333\n+[2600:1f16:625:e00:166d:a956:1041:f97d]:8333\n+[2600:1f16:625:e00:35f2:2428:fc57:d638]:8333\n+[2600:1f16:625:e00:3c75:333e:b7f:8cc0]:8333\n+[2600:1f16:625:e00:3fbf:31f:1b57:8b18]:8333\n+[2600:1f16:625:e00:5617:7575:379:a8cc]:8333\n+[2600:1f16:625:e00:58fa:fce6:30:a5dc]:8333\n+[2600:1f16:625:e00:5e74:70dc:af78:6b77]:8333\n+[2600:1f16:625:e00:7036:f651:2ee:39cd]:8333\n+[2600:1f16:625:e00:7fc:9004:e7be:ffe2]:8333\n+[2600:1f16:625:e00:814a:23f6:e996:5e64]:8333\n+[2600:1f16:625:e00:822c:a88b:f9c:57e3]:8333\n+[2600:1f16:625:e00:8314:b91e:a7ba:702]:8333\n+[2600:1f16:625:e00:88bb:ee9a:10de:12]:8333\n+[2600:1f16:625:e00:8c30:56f5:a29a:91de]:8333\n+[2600:1f16:625:e00:8fdf:6517:7718:8c42]:8333\n+[2600:1f16:625:e00:91fd:78b1:62a3:193]:8333\n+[2600:1f16:625:e00:930d:93ed:76a6:3285]:8333\n+[2600:1f16:625:e00:93c2:615f:a79a:c11f]:8333\n+[2600:1f16:625:e00:a780:8bc8:a1f6:d417]:8333\n+[2600:1f16:625:e00:a951:e663:4046:8c3a]:8333\n+[2600:1f16:625:e00:ab19:5fe3:f155:1371]:8333\n+[2600:1f16:625:e00:aefd:9cc7:d3:6e86]:8333\n+[2600:1f16:625:e00:b031:e86e:8604:324a]:8333\n+[2600:1f16:625:e00:b6e:4399:9dc2:6b45]:8333\n+[2600:1f16:625:e00:b7c7:58c6:21a1:fd41]:8333\n+[2600:1f16:625:e00:c169:6282:178c:27d6]:8333\n+[2600:1f16:625:e00:c94e:58b:bd35:d815]:8333\n+[2600:1f16:625:e00:caa5:7369:73a4:5711]:8333\n+[2600:1f16:625:e00:cd15:b9f2:6e3e:6fd1]:8333\n+[2600:1f16:625:e00:d6f3:775:66b7:3e92]:8333\n+[2600:1f16:625:e00:dbec:f7d9:e15:f8e0]:8333\n+[2600:1f16:625:e00:dbf4:4d41:594e:bc20]:8333\n+[2600:1f16:625:e00:e11b:4589:a0c3:9cc7]:8333\n+[2600:1f16:625:e00:ed68:15b0:3a97:be0c]:8333\n+[2600:1f16:625:e00:eef3:bce0:84ee:a98b]:8333\n+[2600:1f16:625:e00:ef3a:f66e:f059:d03f]:8333\n+[2600:1f16:625:e00:f67c:d398:5b6:d34f]:8333\n+[2600:1f16:625:e00:fe35:5099:3a8e:d123]:8333\n+[2600:1f18:64d9:1603:6f6f:eef9:b595:1958]:8333\n+[2600:3c00::f03c:91ff:fe84:d650]:8333\n+[2600:3c00::f03c:91ff:fe89:7438]:8333\n [2600:3c00::f03c:91ff:fe91:3e49]:8333\n [2600:3c00::f03c:91ff:febb:981e]:8333\n-[2600:3c01::f03c:91ff:fe18:6adf]:8333\n [2600:3c01::f03c:91ff:fe69:89e9]:8333\n [2600:3c01::f03c:91ff:fe91:6a29]:8333\n-[2600:3c01::f03c:91ff:fef1:1eaa]:8333\n-[2600:3c03::f03c:91ff:fe18:da80]:8333\n [2600:3c03::f03c:91ff:fe28:1445]:8333\n-[2600:3c03::f03c:91ff:fe67:d2e]:8333\n-[2600:3c03::f03c:91ff:fe89:116f]:8333\n-[2600:3c03::f03c:91ff:feb0:5fc4]:8333\n [2600:3c03::f03c:91ff:fee0:233e]:8333\n-[2600:3c03::f03c:91ff:fee0:51]:8333\n+[2600:6c55:7200:24d:cf4:811c:7cb3:f7a7]:8333\n [2600:8805:2400:14e:226:4aff:fe02:2ba4]:8333\n-[2600:8807:5080:3301:1487:83b7:33d7:eb97]:8333\n-[2601:186:c100:6bcd:16bd:cea1:235d:1c19]:8333\n-[2601:18c:4200:28d0:e4d:e9ff:fec5:76d0]:8333\n-[2601:247:8201:6251:30e6:7b95:69bf:9248]:8333\n+[2601:18d:4600:3cc2:20e7:b3ff:fecf:a99]:8333\n+[2601:1c2:1702:5241:47d:4016:ec42:6705]:8333\n+[2601:441:4101:70cd:4e3:8e81:3250:1f0b]:8333\n [2601:602:9980:f78:211:11ff:fec5:1ae]:8333\n-[2602:ae:1993:de00:2c50:9a44:8f11:77a5]:8333\n-[2602:ff68:0:1:21e:bff:feca:db72]:8333\n-[2602:ff68:0:1:2bd:27ff:feb0:adf8]:8333\n-[2602:ff68:0:1::5]:8333\n-[2602:ff68:0:5:2bd:27ff:feb0:adf8]:8333\n-[2602:ffc5:1f::1f:2d61]:8333\n-[2602:ffc5:1f::1f:9211]:8333\n-[2602:ffc5::9e63:27a2]:8333\n+[2601:646:4103:179f:5809:1bff:fe55:6678]:8333\n+[2602:4c:323:b101:35a3:9de8:6984:ef56]:8333\n+[2602:ff62:104:ac1:8000::]:8333\n+[2602:ffc5:40::1:711e]:8333\n [2602:ffc5::c30:1c75]:8333\n-[2602:ffc5::ffc5:b844]:8333\n-[2602:ffe8:100:2::457:936b]:8333\n-[2604:180:2:eee::ca46]:8333\n-[2604:880:d:85::be37]:8333\n-[2604:9a00:2100:a009:2::]:8333\n-[2604:a880:2:d0::301:8001]:8333\n-[2604:a880:2:d0::4a9:1001]:8333\n-[2604:a880:2:d0::53a:c001]:8333\n+[2604:a880:2:d0::17e9:2001]:8333\n+[2604:a880:2:d0::22f8:f001]:8333\n+[2604:a880:2:d0::22f9:1]:8333\n+[2604:a880:2:d0::22f9:c001]:8333\n+[2604:a880:2:d0::22f9:d001]:8333\n+[2604:a880:2:d0::22f9:e001]:8333\n+[2604:a880:2:d0::22fa:2001]:8333\n+[2604:a880:2:d0::22fa:3001]:8333\n+[2604:a880:400:d0::1684:5001]:8333\n+[2604:a880:400:d0::1ac4:b001]:8333\n+[2604:a880:400:d0::2004:4001]:8333\n+[2604:a880:400:d0::2004:5001]:8333\n+[2604:a880:400:d0::2004:6001]:8333\n+[2604:a880:400:d0::2004:c001]:8333\n+[2604:a880:400:d0::2004:d001]:8333\n+[2604:a880:400:d0::2004:e001]:8333\n+[2604:a880:400:d0::2004:f001]:8333\n+[2604:a880:400:d0::2005:1]:8333\n+[2604:a880:400:d0::2005:3001]:8333\n+[2604:a880:400:d0::261f:6001]:8333\n+[2604:a880:400:d0::28b8:5001]:8333\n [2604:a880:400:d0::ad7:e001]:8333\n-[2604:a880:400:d0::dcf:f001]:8333\n [2605:4d00::50]:8333\n-[2605:6000:edc8:300::ddfe]:8333\n-[2605:6000:ffc0:70:74d5:225c:f553:5bb8]:8333\n-[2606:6000:c148:7003:5054:ff:fe78:66ff]:8333\n-[2606:6000:e6d6:d701:d428:5e44:a2c9:3ff6]:8333\n-[2606:c680:1:4a:2016:d1ff:fe93:52a7]:8333\n+[2605:5d80:2002::245]:8333\n+[2605:9880:0:953:225:90ff:fed2:c0b4]:8333\n+[2606:c380::215:17ff:feb3:3ec]:8333\n+[2607:1c00:a:6:3c1c:1b0d:ba4:8ea9]:8333\n+[2607:1c00:a:6::1000]:8333\n+[2607:4480:2:2000:250:56ff:fe86:6449]:8333\n+[2607:5300:120:671::]:8333\n+[2607:5300:120:962::]:8333\n+[2607:5300:201:2000::1:556]:8333\n [2607:5300:203:118:3733::1414]:8333\n-[2607:5300:60:13bb::1]:8333\n-[2607:5300:60:1966::1]:8333\n-[2607:5300:60:2218::]:8333\n-[2607:5300:60:3775::]:8333\n+[2607:5300:60:10aa::1]:8333\n+[2607:5300:60:1e83::]:8333\n+[2607:5300:60:1e83::1000]:8333\n+[2607:5300:60:1e83::2000]:8333\n+[2607:5300:60:2d0::1]:8333\n [2607:5300:60:3ddf::]:8333\n-[2607:5300:60:a654::]:8333\n-[2607:5300:60:a7a3::]:8333\n+[2607:5300:60:3f3c::]:8333\n+[2607:5300:60:5428::]:8333\n [2607:5300:60:ac0::1]:8333\n-[2607:5300:60:cf97::]:8333\n-[2607:f0d0:1901:19::6]:8333\n-[2607:f128:40:1202:69:162:139:125]:8333\n-[2607:f128:40:1703::2]:8333\n-[2607:f178:0:8::106]:8333\n-[2607:f1c0:84d:8900::7e:cad]:8333\n+[2607:5300:61:f4b::1]:8333\n+[2607:9000:0:1:5054:ff:fe5d:264e]:8333\n+[2607:f1c0:846:9a00::87:d00e]:8333\n+[2607:f2d8:4005:d:a8a2:eeff:fee0:a859]:8333\n [2607:f948:0:1::1:40]:8333\n-[2607:fcd0:100:2302::6094:635a]:8333\n-[2607:fcd0:100:6a00::3a96:1]:8333\n-[2607:fcd0:100:6a02::7ff0:1]:8333\n-[2607:fcd0:100:8203::8c58:dbc]:8333\n-[2607:fea8:1360:9c2:221a:6ff:fe47:776d]:8333\n-[2607:fea8:4da0:9ce:5114:a8ec:20f5:a50b]:8333\n-[2607:fea8:5df:fda0:feaa:14ff:feda:c79a]:8333\n-[2607:fea8:84c0:163:f42c:baff:fecc:6bbf]:8333\n+[2607:fa18:3a01::50]:8333\n+[2607:fea8:3ca0:926::2]:8333\n+[2607:fea8:4da0:3b0::2]:8333\n [2607:ff10:c5:502:225:90ff:fe32:d446]:8333\n-[2607:ff48:aa81:800::96cf:1]:8333\n-[2620:11c:5001:1118:d267:e5ff:fee9:e673]:8333\n+[2607:ff28:9005:1::2567:57e0]:8333\n+[2620:71:4000:0:192:30:120:110]:8333\n [2620:b8:4000:1000::93:1]:8333\n [2800:1a0::9]:8333\n-[2a00:1178:2:43:19fd:d43e:b77:edeb]:8333\n-[2a00:1178:2:43:b4e3:e562:f811:d761]:8333\n-[2a00:14f0:e000:80d2:cd1a::1]:8333\n-[2a00:1630:14::101]:8333\n-[2a00:1630:2:1802:188:122:91:11]:8333\n-[2a00:1630:2:500::4]:8333\n+[2801:84:0:1034:76d4:35ff:fe7f:5033]:8333\n+[2a00:16d8:c::5b6a:c261]:8333\n [2a00:1768:2001:24::148:218]:8333\n-[2a00:1768:2001:27::142:21]:8333\n+[2a00:19e0:1:1:225:90ff:fea5:fc0]:8333\n [2a00:1a48:7810:101:be76:4eff:fe08:c774]:8333\n-[2a00:1ca8:37::a5fc:40d1]:8333\n-[2a00:1ca8:37::ab6d:ce2c]:8333\n-[2a00:1dc0:2255:10::2]:8333\n+[2a00:6340:2004:0:5054:ff:fe54:38c]:8333\n+[2a00:7b80:477:21::1c8c:83a6]:8333\n [2a00:7c80:0:71::8]:8333\n [2a00:7c80:0:97::7]:8333\n-[2a00:bbe0:0:42:222:64ff:fe9a:e206]:8333\n-[2a00:c98:2050:a020:3::110]:8333\n-[2a00:dcc0:eda:98:183:193:1d24:b53a]:8333\n-[2a00:dcc0:eda:98:183:193:c382:6bdb]:8333\n-[2a00:dcc0:eda:98:183:193:f72e:d943]:8333\n-[2a00:f90:ff0:c100:53c4:97a7:8b59:796a]:8333\n-[2a01:238:435c:de00:b110:38cf:192d:b2c]:28333\n-[2a01:348:6:7cf::2]:8333\n-[2a01:368:e012:8888:216:3eff:fe24:1162]:8333\n+[2a01:238:4363:4900:d85e:c1d9:2b32:61d0]:8333\n [2a01:488:66:1000:53a9:22b:0:1]:8333\n-[2a01:488:67:1000:523:ffa7:0:1]:8333\n+[2a01:488:67:1000:5bfa:5526:0:1]:8333\n [2a01:488:67:1000:b01c:3379:0:1]:8333\n-[2a01:4f8:100:34ce::2]:8333\n-[2a01:4f8:100:44e7::2]:8333\n-[2a01:4f8:10a:2e4::2]:8333\n-[2a01:4f8:10a:34e::2]:8333\n-[2a01:4f8:10a:51d::2]:8333\n-[2a01:4f8:10a:622::2]:8333\n-[2a01:4f8:10a:85f::2]:8333\n-[2a01:4f8:10a:864::2]:8333\n-[2a01:4f8:10a:d04::2]:8333\n-[2a01:4f8:110:334c::2]:8333\n+[2a01:4d60:3:1:5::1]:8333\n+[2a01:4f8:10a:1d8f::2]:8333\n+[2a01:4f8:10a:1e81::2]:8333\n+[2a01:4f8:10a:2261::2]:8833\n+[2a01:4f8:10a:239c::2]:9002\n+[2a01:4f8:10a:294a::2]:8333\n+[2a01:4f8:10a:31d3::2]:8333\n+[2a01:4f8:10a:3fe6::2]:8333\n+[2a01:4f8:10a:b2e::2]:8333\n+[2a01:4f8:10b:12d7::2]:8333\n+[2a01:4f8:10b:d50::2]:8333\n+[2a01:4f8:10b:e2d::2]:8333\n+[2a01:4f8:10b:ee1::2]:8333\n+[2a01:4f8:110:5107::2]:8333\n+[2a01:4f8:110:5292::2]:8333\n [2a01:4f8:110:536e::2]:8333\n [2a01:4f8:120:43e4::2]:8333\n-[2a01:4f8:120:702e::2]:8333\n-[2a01:4f8:121:4346::2]:8333\n [2a01:4f8:130:3332::2]:8333\n+[2a01:4f8:130:430b::2]:8333\n+[2a01:4f8:130:618e::2]:8333\n+[2a01:4f8:130:71d2::2]:8333\n+[2a01:4f8:130:7422::2]:8333\n [2a01:4f8:131:33ad::2]:8333\n [2a01:4f8:131:33ad:fea1::666]:8333\n-[2a01:4f8:140:31b0::2]:8333\n-[2a01:4f8:140:4088::2]:8333\n+[2a01:4f8:131:3428::2]:8333\n+[2a01:4f8:140:1326::2]:8333\n+[2a01:4f8:140:524a::2]:8333\n+[2a01:4f8:140:6055::2]:8333\n+[2a01:4f8:140:7410::2]:8333\n [2a01:4f8:140:931a::2]:8333\n-[2a01:4f8:140:93b0::2]:8333\n-[2a01:4f8:141:13ad::c451]:8333\n-[2a01:4f8:141:186::2]:8333\n+[2a01:4f8:141:2254::2]:8333\n [2a01:4f8:141:22ae::2]:8333\n-[2a01:4f8:141:322c::2]:8333\n [2a01:4f8:150:11d4::2]:8333\n-[2a01:4f8:150:440f::2]:8333\n-[2a01:4f8:150:61ee::2]:8333\n+[2a01:4f8:150:70a4::2]:8333\n [2a01:4f8:150:726b::2]:8333\n-[2a01:4f8:151:30c9::2]:15000\n-[2a01:4f8:151:41a2::2]:8333\n-[2a01:4f8:151:41cc::2]:8333\n-[2a01:4f8:151:52c6::154]:8333\n-[2a01:4f8:151:600b::1:1]:8333\n+[2a01:4f8:150:72ee::4202]:8333\n+[2a01:4f8:150:90ca::2]:8333\n+[2a01:4f8:151:30c9::2]:8333\n+[2a01:4f8:151:334d::3]:8333\n [2a01:4f8:151:7175::2]:8333\n [2a01:4f8:160:41f0::1:33]:8333\n-[2a01:4f8:160:5328::27f0:187a]:8333\n-[2a01:4f8:160:814f::2]:8333\n-[2a01:4f8:161:21ad::333:30]:8333\n+[2a01:4f8:160:636e::2]:8333\n [2a01:4f8:161:7026::2]:8333\n-[2a01:4f8:162:4110::2]:8333\n-[2a01:4f8:162:4348::2]:8333\n+[2a01:4f8:162:2108::2]:8333\n+[2a01:4f8:162:3121::50]:8333\n+[2a01:4f8:162:424c::2]:8333\n [2a01:4f8:171:1c1b::2]:8333\n [2a01:4f8:171:1c3::2]:8333\n [2a01:4f8:171:2258::2]:8333\n-[2a01:4f8:171:2a70::2]:8333\n-[2a01:4f8:171:2e1b::2]:8333\n+[2a01:4f8:171:27d6::2]:8333\n [2a01:4f8:171:2f28::2]:8333\n-[2a01:4f8:171:3248::2]:8333\n-[2a01:4f8:171:380c::2]:8333\n-[2a01:4f8:171:b93::2]:8333\n-[2a01:4f8:171:d0a::2]:8333\n-[2a01:4f8:172:116c::2]:8333\n-[2a01:4f8:172:1287::2]:8333\n-[2a01:4f8:172:17a9::2]:8333\n-[2a01:4f8:172:1ca7::2]:8333\n-[2a01:4f8:172:2159::2]:8333\n-[2a01:4f8:172:3a41::2]:8333\n-[2a01:4f8:172:3b42::2]:8333\n-[2a01:4f8:172:3ec1::2]:8333\n-[2a01:4f8:172:3ec2::2]:8333\n-[2a01:4f8:172:aeb::2]:8333\n-[2a01:4f8:172:aec::2]:8333\n-[2a01:4f8:173:10ab::2]:8333\n-[2a01:4f8:173:1551::2]:8333\n-[2a01:4f8:173:1bca::2]:8333\n-[2a01:4f8:173:1e2e::2]:8333\n-[2a01:4f8:173:2162::2]:8333\n-[2a01:4f8:173:21e6::2]:8333\n+[2a01:4f8:171:d23::2]:8333\n+[2a01:4f8:172:10da::2]:8333\n+[2a01:4f8:172:504::2]:8333\n+[2a01:4f8:173:1622::2]:8333\n [2a01:4f8:173:42::2]:8333\n-[2a01:4f8:173:cc1::2]:8333\n-[2a01:4f8:190:1253::2]:8333\n [2a01:4f8:190:24eb::2]:8333\n-[2a01:4f8:190:34f0::2]:8333\n [2a01:4f8:190:528d::2]:8333\n-[2a01:4f8:190:91ce::2]:8333\n-[2a01:4f8:191:2194::83]:8333\n-[2a01:4f8:191:40e8::2]:8333\n-[2a01:4f8:191:8165::2]:22556\n+[2a01:4f8:190:61f3::2]:8333\n+[2a01:4f8:191:418f::2]:3333\n+[2a01:4f8:191:63b4:5000::1]:8333\n [2a01:4f8:191:81b7::2]:8333\n [2a01:4f8:191:8328::3]:8333\n-[2a01:4f8:192:11b2::2]:8343\n-[2a01:4f8:192:216c::2]:8333\n-[2a01:4f8:192:22af::2]:8333\n-[2a01:4f8:192:2422::2]:8333\n-[2a01:4f8:192:34d0::2]:8333\n-[2a01:4f8:192:440b::2]:8333\n+[2a01:4f8:192:4a5::2]:8333\n [2a01:4f8:192:5230::2]:8333\n-[2a01:4f8:192:db::2]:8333\n [2a01:4f8:200:1012::2]:8333\n+[2a01:4f8:200:32a6::2]:8333\n [2a01:4f8:200:414e::2]:8333\n [2a01:4f8:200:416a::2]:8333\n-[2a01:4f8:201:21a7::2]:8333\n-[2a01:4f8:201:4017::11]:8333\n+[2a01:4f8:200:90c3::2]:8333\n+[2a01:4f8:201:148d::2]:8333\n+[2a01:4f8:201:2cc::2]:8333\n+[2a01:4f8:201:3e3::2]:8333\n+[2a01:4f8:201:53cc::2]:8333\n [2a01:4f8:201:6011::4]:8333\n-[2a01:4f8:201:60d5::2]:8333\n-[2a01:4f8:202:12d6::2]:8333\n+[2a01:4f8:202:3030::2]:8333\n [2a01:4f8:202:31e3::2]:8333\n [2a01:4f8:202:32c6::2]:8333\n-[2a01:4f8:202:53c3::2]:8333\n-[2a01:4f8:211:14cf::2]:8333\n+[2a01:4f8:202:6035::2]:8333\n+[2a01:4f8:210:5488::2]:8333\n+[2a01:4f8:211:1e17::2]:8333\n [2a01:4f8:211:1ec5::2]:8333\n-[2a01:4f8:211:483::2]:8333\n-[2a01:4f8:211:d99::8]:8333\n [2a01:4f8:212:1826::2]:8333\n-[2a01:4f8:212:27a8::2]:8333\n-[2a01:4f8:221:801::2]:8333\n-[2a01:4f8:a0:12cc::2]:8333\n-[2a01:4f8:a0:746a:101:1:1:2]:8333\n-[2a01:4f8:a0:828a::2]:8333\n-[2a01:4f8:c17:2eef::2]:8333\n-[2a01:4f8:c17:2f3c::2]:3333\n+[2a01:4f8:221:f59::2]:8333\n+[2a01:4f8:c0c:1026::2]:8333\n+[2a01:4f8:c0c:1028::2]:8333\n+[2a01:4f8:c0c:1029::2]:8333\n+[2a01:4f8:c0c:105f::2]:8333\n+[2a01:4f8:c0c:1064::2]:8333\n+[2a01:4f8:c0c:106b::2]:8333\n+[2a01:4f8:c0c:106d::2]:8333\n+[2a01:4f8:c0c:1070::2]:8333\n+[2a01:4f8:c0c:1105::2]:8333\n+[2a01:4f8:c0c:1106::2]:8333\n+[2a01:4f8:c0c:1134::2]:8333\n+[2a01:4f8:c0c:1135::2]:8333\n+[2a01:4f8:c0c:113c::2]:8333\n+[2a01:4f8:c0c:115c::2]:8333\n+[2a01:4f8:c0c:115e::2]:8333\n+[2a01:4f8:c0c:1170::2]:8333\n+[2a01:4f8:c0c:1172::2]:8333\n+[2a01:4f8:c0c:117b::2]:8333\n+[2a01:4f8:c0c:117c::2]:8333\n+[2a01:4f8:c0c:1180::2]:8333\n+[2a01:4f8:c0c:1181::2]:8333\n+[2a01:4f8:c0c:1185::2]:8333\n+[2a01:4f8:c0c:1186::2]:8333\n+[2a01:4f8:c0c:1187::2]:8333\n+[2a01:4f8:c0c:1188::2]:8333\n+[2a01:4f8:c0c:1189::2]:8333\n+[2a01:4f8:c0c:121::2]:8333\n+[2a01:4f8:c0c:122::2]:8333\n+[2a01:4f8:c0c:15a8::2]:8333\n+[2a01:4f8:c0c:1da4::2]:8333\n+[2a01:4f8:c0c:1ff7::2]:8333\n+[2a01:4f8:c0c:2262::2]:8333\n+[2a01:4f8:c0c:73d::2]:8333\n+[2a01:4f8:c0c:790::2]:8333\n+[2a01:4f8:c0c:7a8::2]:8333\n+[2a01:4f8:c0c:7a9::2]:8333\n+[2a01:4f8:c0c:7e9::2]:8333\n+[2a01:4f8:c0c:816::2]:8333\n+[2a01:4f8:c0c:817::2]:8333\n+[2a01:4f8:c0c:818::2]:8333\n+[2a01:4f8:c0c:820::2]:8333\n+[2a01:4f8:c0c:821::2]:8333\n+[2a01:4f8:c0c:822::2]:8333\n+[2a01:4f8:c0c:896::2]:8333\n+[2a01:4f8:c0c:8c6::2]:8333\n+[2a01:4f8:c0c:8c9::2]:8333\n+[2a01:4f8:c0c:8d1::2]:8333\n+[2a01:4f8:c0c:8d2::2]:8333\n+[2a01:4f8:c0c:8d9::2]:8333\n+[2a01:4f8:c0c:8da::2]:8333\n+[2a01:4f8:c0c:8dc::2]:8333\n+[2a01:4f8:c0c:8f1::2]:8333\n+[2a01:4f8:c0c:91e::2]:8333\n+[2a01:4f8:c0c:927::2]:8333\n+[2a01:4f8:c0c:939::2]:8333\n+[2a01:4f8:c0c:944::2]:8333\n+[2a01:4f8:c0c:951::2]:8333\n+[2a01:4f8:c0c:967::2]:8333\n+[2a01:4f8:c0c:96f::2]:8333\n+[2a01:4f8:c0c:97d::2]:8333\n+[2a01:4f8:c0c:982::2]:8333\n+[2a01:4f8:c0c:9fc::2]:8333\n+[2a01:4f8:c0c:b35::2]:8333\n+[2a01:4f8:c0c:b4c::2]:8333\n+[2a01:4f8:c0c:bfe::2]:8333\n+[2a01:4f8:c0c:c08::2]:8333\n+[2a01:4f8:c0c:c13::2]:8333\n+[2a01:4f8:c0c:c14::2]:8333\n+[2a01:4f8:c0c:c16::2]:8333\n+[2a01:4f8:c0c:c19::2]:8333\n+[2a01:4f8:c0c:c32::2]:8333\n+[2a01:4f8:c0c:c36::2]:8333\n+[2a01:4f8:c0c:c39::2]:8333\n+[2a01:4f8:c0c:c58::2]:8333\n+[2a01:4f8:c0c:c5e::2]:8333\n+[2a01:4f8:c0c:c70::2]:8333\n+[2a01:4f8:c0c:c72::2]:8333\n+[2a01:4f8:c0c:c79::2]:8333\n+[2a01:4f8:c0c:cb1::2]:8333\n+[2a01:4f8:c0c:cf5::2]:8333\n+[2a01:4f8:c0c:cff::2]:8333\n+[2a01:4f8:c0c:d0e::2]:8333\n+[2a01:4f8:c0c:d1b::2]:8333\n+[2a01:4f8:c0c:d67::2]:8333\n+[2a01:4f8:c0c:d68::2]:8333\n+[2a01:4f8:c0c:d81::2]:8333\n+[2a01:4f8:c0c:e2d::2]:8333\n+[2a01:4f8:c0c:e30::2]:8333\n+[2a01:4f8:c0c:e4f::2]:8333\n+[2a01:4f8:c0c:e5b::2]:8333\n+[2a01:4f8:c0c:e88::2]:8333\n+[2a01:4f8:c0c:f69::2]:8333\n+[2a01:4f8:c0c:f76::2]:8333\n+[2a01:4f8:c0c:f77::2]:8333\n+[2a01:4f8:c0c:f78::2]:8333\n+[2a01:4f8:c0c:f89::2]:8333\n+[2a01:4f8:c0c:f8a::2]:8333\n+[2a01:4f8:c0c:fd6::2]:8333\n+[2a01:4f8:c0c:fea::2]:8333\n+[2a01:4f8:c17:24ee::2]:8333\n+[2a01:4f8:c17:2c16::2]:8333\n+[2a01:4f8:c17:330f::2]:8333\n+[2a01:4f8:c17:34f0::2]:8333\n+[2a01:4f8:c17:3986::2]:8333\n [2a01:4f8:c17:3b02::2]:8333\n-[2a01:4f8:c17:4245::2]:8333\n-[2a01:4f8:c17:464f::2]:8333\n-[2a01:4f8:c17:4a1c::2]:8333\n-[2a01:4f8:c17:4c5d::2]:8333\n+[2a01:4f8:c17:3d85::2]:8333\n+[2a01:4f8:c17:4271::2]:8333\n+[2a01:4f8:c17:5dc0::2]:8333\n+[2a01:4f8:c17:63a0::2]:8333\n [2a01:4f8:c17:67f8::2]:8333\n-[2a01:4f8:c17:6dd0::2]:8333\n [2a01:4f8:c17:710b::2]:8333\n-[2a01:4f8:c17:714::2]:8333\n-[2a01:4f8:c17:72c6::2]:8333\n-[2a01:608:ffff:a009:8bf5:879d:e51a:f837]:8333\n+[2a01:4f8:c17:e00::2]:8333\n [2a01:680:10:10::1]:8333\n [2a01:6f0:ffff:120::8dcb]:8333\n-[2a01:79c:cebc:857c:98c1:88ff:fef5:90de]:8333\n-[2a01:79d:7377:2629:7e57:7e57:1:1]:8333\n-[2a01:7c8:aaac:43d:5054:ff:fe4e:3dd4]:8333\n+[2a01:79d:b7dd:ffb4:5d86:70b8:fc7f:f253]:8333\n+[2a01:7a0:2:1374::4]:8333\n+[2a01:7a0:2:1374::5]:8333\n+[2a01:7a0:2:137c::3]:8333\n+[2a01:7c8:aaaa:373:5054:ff:feb3:2947]:8333\n+[2a01:7c8:aaaa:3a0:5054:ff:fe8c:974c]:8333\n+[2a01:7c8:aab0:4b7:910d:625e:a13e:c342]:8333\n [2a01:7c8:aab5:3e6:5054:ff:fed7:4e54]:8333\n+[2a01:7c8:aab5:41e:5054:ff:fe38:f4fb]:8333\n+[2a01:7c8:aaba:343::8333]:8333\n+[2a01:7c8:aabc:18c:5054:ff:fefd:3b49]:8333\n [2a01:7c8:aabd:3d5:5054:ff:fe95:f586]:8333\n-[2a01:7c8:aac1:453:d0d2:af96:fa88:5d0e]:8333\n-[2a01:7c8:aac3:663:5054:ff:fe25:8c69]:8333\n-[2a01:7c8:aac3:97:5054:ff:fea7:3780]:8333\n-[2a01:7c8:aac4:567:5054:ff:fedc:518a]:8333\n-[2a01:7e00::f03c:91ff:fe26:8c87]:8333\n [2a01:7e00::f03c:91ff:fe50:94b8]:8333\n-[2a01:7e00::f03c:91ff:fe55:2c]:8333\n-[2a01:7e00::f03c:91ff:fe89:1143]:8333\n-[2a01:7e00::f03c:91ff:fe89:53fd]:8333\n-[2a01:7e00::f03c:91ff:fedf:b70f]:8333\n-[2a01:b000::4166:515b:ef9e:b3]:8333\n+[2a01:8e01:b943:3a63:d250:99ff:fe1f:4fb2]:8333\n [2a01:b2e0:2::40]:8333\n-[2a01:e34:ec29:24c0:f3:ddaf:9f59:586f]:8333\n+[2a01:d0:0:1c::245]:8333\n+[2a01:d0:8fc3::2]:8333\n+[2a01:e34:ec29:e8d0:25c7:c1ce:b7a3:d238]:8333\n+[2a01:e34:ec4a:c2d0:1cf3:40d2:a79f:3901]:8333\n [2a01:e34:eed7:6670:ec1b:bf7c:b012:6069]:8333\n+[2a01:e35:2433:e320:9c8e:6ff0:990f:f06e]:8333\n [2a01:e35:2ee5:610:21f:d0ff:fe4e:7460]:8333\n-[2a01:e35:8a3f:47c0:c617:feff:fe3c:9fbd]:8333\n-[2a01:e35:8bff:70b0:1e1b:dff:fe0b:236d]:8333\n-[2a02:1205:34c3:a4e0:d63d:7eff:fe98:10c8]:8333\n-[2a02:1205:34da:aa00:5882:249d:ddbf:bc43]:8333\n [2a02:1205:5051:a640:d6ae:52ff:fea3:ac]:8333\n-[2a02:1205:c689:d980:baae:edff:feea:9445]:8333\n [2a02:120b:2c2a:5ec0:10dd:31ff:fe42:5079]:8333\n-[2a02:120b:2c35:69d0:219:99ff:fe6b:4ec3]:8333\n-[2a02:120b:c3c2:ff60:21f:5bff:fec3:a7ad]:24312\n-[2a02:13b8:4000:1000:216:e6ff:fe92:8619]:8333\n-[2a02:13b8:4000:1000::27]:8333\n-[2a02:17d0:2a:4400:40f:3dd4:b053:47ad]:8333\n-[2a02:180:1:1::517:afb]:8333\n+[2a02:168:6273::614]:8333\n [2a02:180:6:1::18]:8333\n-[2a02:1810:1d11:f900:6872:f28e:8126:f635]:8333\n-[2a02:27a8:0:1:52e5:49ff:fee3:3b49]:8333\n-[2a02:348:86:3011::1]:8333\n+[2a02:180:6:1::ed]:8333\n+[2a02:1811:b707:116:8c1f:c5be:bf3a:54df]:8333\n+[2a02:20c8:1422:1::a3]:8333\n+[2a02:2168:d05:2c00:216:3eff:fef7:a099]:8333\n+[2a02:27f8:2012:0:e9f7:268f:c441:6129]:8333\n+[2a02:2808:5401:0:225:90ff:fe4e:ee42]:8333\n [2a02:390:9000:0:218:7dff:fe10:be33]:8333\n-[2a02:582:78c1:7600:2d49:6212:29d3:abb]:8333\n-[2a02:6080::1:190b:69e3]:8333\n-[2a02:750:7:3305::575]:8333\n-[2a02:752:100:3::53]:8333\n-[2a02:7aa0:1201::7501:d950]:8333\n-[2a02:7aa0:1201::deb3:81a2]:8333\n-[2a02:7aa0:1619::a037:69a6]:8333\n-[2a02:810d:14c0:8694:d250:99ff:fe81:23d9]:8333\n-[2a02:a50::dacb:8aff:fe36:8d2d]:8333\n-[2a02:c200:0:10:3:0:2591:1]:8333\n-[2a02:c200:1:10:2:5:9982:1]:8333\n-[2a02:c200:1:10:3:0:9290:1]:8333\n-[2a02:c205:3000:7158::1]:8333\n-[2a02:c205:3001:4522::1]:8333\n-[2a02:c205:3001:6549::1]:8333\n-[2a02:c207:2008:3772::1]:8333\n-[2a02:c207:2008:6519::1]:8333\n+[2a02:7aa0:1201::bd4e:1219]:8333\n+[2a02:7aa0:1619::590:eba2]:8333\n+[2a02:7aa0:1619::a7a2:7e86]:8333\n+[2a02:c200:1:10:2:5:800:1]:8333\n+[2a02:c205:2002:2550::17]:8333\n+[2a02:c205:2008:272::1]:8333\n+[2a02:c205:2010:5484::1]:8333\n+[2a02:c205:3001:6710::1]:8333\n+[2a02:c205:3001:7714::2]:8333\n+[2a02:c205:3002:888::1]:8333\n+[2a02:c207:2002:9013::1]:8333\n+[2a02:c207:2008:3392::1]:8333\n+[2a02:c207:2008:8337::1]:8333\n [2a02:c207:2009:213::1]:8333\n-[2a02:c207:2009:7858::1]:8333\n-[2a02:c207:2010:302::1]:8333\n+[2a02:c207:2010:7751::1]:8333\n+[2a02:c207:2010:7986::1]:8333\n+[2a02:c207:2011:7829::1]:8333\n+[2a02:c207:2011:8299::1]:8333\n+[2a02:c207:2012:2133::1]:8333\n+[2a02:c207:2012:263::1]:8333\n+[2a02:c207:2012:2682::1]:8333\n+[2a02:c207:2012:3635::1]:8333\n+[2a02:c207:2012:4826::1]:8333\n+[2a02:c207:2012:5668::1]:8333\n [2a02:c207:3001:5824::1]:8333\n+[2a02:c207:3001:7776::1]:8333\n+[2a02:c207:3002:621::1]:8333\n [2a02:ce80:0:20::1]:8333\n+[2a03:2260:11e:301::8]:8333\n+[2a03:2260:11e:302::3]:8333\n [2a03:4000:2:496::8]:8333\n+[2a03:4000:6:12e7::1]:8333\n [2a03:4000:6:416c::53]:8333\n-[2a03:4000:6:8009::1]:8333\n-[2a03:4000:9:8e::1]:8333\n-[2a03:7380:2140:17:51fe:3519:b571:4a13]:8333\n-[2a03:b0c0:0:1010::7a3:1001]:8333\n-[2a03:b0c0:0:1010::7aa:4001]:8333\n+[2a03:b0c0:3:d0::1219:6001]:8333\n [2a03:b0c0:3:d0::1b99:c001]:8333\n [2a03:b0c0:3:d0::1b99:e001]:8333\n [2a03:b0c0:3:d0::1b9a:3001]:8333\n-[2a03:b0c0:3:d0::2208:6001]:8333\n [2a03:b0c0:3:d0::23f7:1001]:8333\n+[2a03:b0c0:3:d0::23f7:2001]:8333\n+[2a03:b0c0:3:d0::23f7:4001]:8333\n+[2a03:b0c0:3:d0::23f7:5001]:8333\n+[2a03:b0c0:3:d0::23f7:7001]:8333\n [2a03:b0c0:3:d0::23f7:9001]:8333\n+[2a03:b0c0:3:d0::23fb:1001]:8333\n [2a03:b0c0:3:d0::23fb:2001]:8333\n [2a03:b0c0:3:d0::23fb:3001]:8333\n [2a03:b0c0:3:d0::23fb:5001]:8333\n-[2a03:b0c0:3:d0::23fb:7001]:8333\n+[2a03:b0c0:3:d0::23fb:6001]:8333\n+[2a03:b0c0:3:d0::23fb:8001]:8333\n+[2a03:b0c0:3:d0::23ff:b001]:8333\n [2a03:b0c0:3:d0::2400:1]:8333\n [2a03:b0c0:3:d0::2400:3001]:8333\n+[2a03:b0c0:3:d0::2400:4001]:8333\n [2a03:b0c0:3:d0::2400:e001]:8333\n+[2a03:b0c0:3:d0::2400:f001]:8333\n [2a03:b0c0:3:d0::2401:e001]:8333\n+[2a03:b0c0:3:d0::2402:1]:8333\n [2a03:b0c0:3:d0::2402:2001]:8333\n [2a03:b0c0:3:d0::2402:8001]:8333\n [2a03:b0c0:3:d0::2402:9001]:8333\n [2a03:b0c0:3:d0::2402:b001]:8333\n [2a03:b0c0:3:d0::2402:d001]:8333\n+[2a03:b0c0:3:d0::2402:e001]:8333\n [2a03:b0c0:3:d0::2403:1001]:8333\n [2a03:b0c0:3:d0::2403:2001]:8333\n+[2a03:b0c0:3:d0::2403:3001]:8333\n [2a03:b0c0:3:d0::2403:4001]:8333\n [2a03:b0c0:3:d0::2403:6001]:8333\n [2a03:b0c0:3:d0::2403:a001]:8333\n [2a03:b0c0:3:d0::2403:b001]:8333\n+[2a03:b0c0:3:d0::2403:e001]:8333\n [2a03:b0c0:3:d0::2403:f001]:8333\n+[2a03:b0c0:3:d0::2404:1]:8333\n+[2a03:b0c0:3:d0::2404:3001]:8333\n+[2a03:b0c0:3:d0::2404:4001]:8333\n [2a03:b0c0:3:d0::2404:6001]:8333\n+[2a03:b0c0:3:d0::2404:8001]:8333\n+[2a03:b0c0:3:d0::2404:9001]:8333\n [2a03:b0c0:3:d0::2404:b001]:8333\n-[2a03:f80:ed15:149:154:155:235:1]:8333\n-[2a04:1980:3100:1aac:e61d:2dff:fe29:f241]:8333\n-[2a04:1980:3100:1aac:e61d:2dff:fe29:f251]:8333\n-[2a04:2180:0:1::5a49:3c06]:8333\n-[2a04:2180:1:7::3]:8333\n-[2a04:2e00:5:2e:9a4b:e1ff:fe62:6dc0]:8333\n+[2a03:b0c0:3:d0::2405:2001]:8333\n+[2a03:b0c0:3:d0::2405:3001]:8333\n+[2a03:b0c0:3:d0::2405:8001]:8333\n+[2a03:b0c0:3:d0::2405:9001]:8333\n+[2a03:b0c0:3:d0::2405:a001]:8333\n+[2a03:b0c0:3:d0::44b8:9001]:8333\n+[2a03:b0c0:3:d0::44b8:e001]:8333\n+[2a03:b0c0:3:d0::44b8:f001]:8333\n+[2a03:b0c0:3:d0::44b9:1]:8333\n+[2a03:b0c0:3:d0::44b9:1001]:8333\n+[2a03:b0c0:3:d0::44b9:2001]:8333\n+[2a03:b0c0:3:d0::44b9:4001]:8333\n+[2a04:2180:0:2::94]:8333\n [2a04:3542:1000:910:8492:b8ff:fe91:711d]:8333\n-[2a04:dbc3:fffe:0:e61f:13ff:fe95:8401]:8333\n+[2a04:52c0:101:122::ba8e]:8333\n+[2a05:3580:d400:140d:da6e:826e:e771:4100]:8333\n [2a06:9fc0:2a06:9fc0:2a06:9fc1:67c:e706]:8333\n-[2c0f:f738:2004:82::]:8333\n-2hryb3uh3tzwgnya.onion:8333\n-3nmbbakinewlgdln.onion:8333\n-3qeri3tmhzmpegyv.onion:8333\n-4wdknmecghcmclq5.onion:8333\n-53tsjt6zq3iasv5q.onion:8333\n-5cg7qeywvwo6vxpt.onion:8333\n-5gbcrgqxcbxj253s.onion:8333\n-6cn4ilbwkrkh7gwo.onion:8333\n-6e4jrnn7igeqxmlf.onion:8333\n-6ymgbvnn6d5nfmv4.onion:8333\n-6zsh3bfduhpo7ldl.onion:8333\n-72fq6phv4fg4rhvh.onion:8333\n-7gdqp6npusk4lfwk.onion:8333\n-a7emxol55e623lqc.onion:8333\n-assbiydziq77zaki.onion:8333\n+226eupdnaouu4h2v.onion:8333\n+2frgxpe5mheghyom.onion:8333\n+3ihjnsvwc3x6dp2o.onion:8333\n+3w77hrilg6q64opl.onion:8333\n+4ls4o6iszcd7mkfw.onion:8333\n+4p3abjxqppzxi7qi.onion:8333\n+546esc6botbjfbxb.onion:8333\n+5msftytzlsskr4ut.onion:8333\n+5ty6rxpgrkmdnk4a.onion:8333\n+akmqyuidrf56ip26.onion:8333\n+alhlegtjkdmbqsvt.onion:8333\n bafk5ioatlgt7dgl.onion:8333\n-bk7yp6epnmcllq72.onion:8333\n-brwqezn6le54w2bb.onion:8333\n-bs4bq6s6qkvt5hpi.onion:8333\n bup5n5e3kurvjzf3.onion:8333\n-c2tpqkaz4ihjzwgb.onion:8333\n-cernrmrk5zomzozn.onion:8333\n-cfyegj64ht3jpodr.onion:8333\n-cg5vg54cazzpvoug.onion:8333\n-cgk4u2lxrvml4jvb.onion:8333\n cjygd7pu5lqkky5j.onion:8333\n-d6wubsdtr46dd5ki.onion:8333\n-dfq6yjc3aelplwr4.onion:8333\n+cyvpgt25274i5b7c.onion:8333\n+dekj4wacywpqsad3.onion:8333\n dqpxwlpnv3z3hznl.onion:8333\n-eamfospuveabaimd.onion:8333\n-ep2mjzox3kvb6ax4.onion:8333\n-fpbxb4wjudiw2w5a.onion:8333\n-fu5hfsbbf5jwsvhv.onion:8333\n-g4freoibsczujle3.onion:8333\n+drarzpycbtxwbcld.onion:8333\n+drp4pvejybx2ejdr.onion:8333\n+dxkmtmwiq7ddtgul.onion:8333\n+e6j57zkyibu2smad.onion:8333\n+ejcqevujcqltqn7d.onion:8333\n+eqgbt2ghfvsshbvo.onion:8333\n+fgizgkdnndilo6ka.onion:8333\n+fqxup4oev33eeidg.onion:8333\n gb5ypqt63du3wfhn.onion:8333\n ggdy2pb2avlbtjwq.onion:8333\n-gh2aiddzxmvyrnue.onion:8333\n-gnxgylbgzvaazkq7.onion:8333\n-hnizdxnejel64ubk.onion:8333\n-htvdcmlc3abji2ab.onion:8443\n-hwuboois4gslupgx.onion:8333\n-hxz6gowludlj6d5a.onion:8333\n-j6umo4bnsztpsonc.onion:8333\n-jdunmaocwbbnw565.onion:8333\n-ktv3qlxl7xvmdlf4.onion:8333\n+hahhloezyfqh3hci.onion:8333\n+ihdv6bzz2gx72fs7.onion:8333\n+in7r5ieo7ogkxbne.onion:8333\n kvd44sw7skb5folw.onion:8333\n-kwimnzm6vd4zakvl.onion:8333\n-la5xhk3lprxzxmz2.onion:8333\n-lc7cx67end26uutp.onion:8352\n-mwu5og2agcspmgkx.onion:8333\n-mzxkipiyekaoh7my.onion:8333\n-n6rwlrtwpqc7qwo7.onion:8333\n-nj36424yccqph62z.onion:8333\n-o256w7t3vcgktmxk.onion:8333\n+mn744hbioayn3ojs.onion:8333\n+ms4ntrrisfxzpvmy.onion:8333\n+n5lqwpjabqg62ihx.onion:8333\n o4sl5na6jeqgi3l6.onion:8333\n-okdzjarwekbshnof.onion:8333\n-oyebydl2pacx6v26.onion:8333\n-p5mx2imj75dpmime.onion:8333\n+omjv24nbck4k5ud6.onion:8333\n+po3j2hfkmf7sh36o.onion:8333\n psco6bxjewljrczx.onion:8333\n-pxtgswet6tlgrbwj.onion:8333\n-rb4v3fhgx2zr4rre.onion:8333\n+qi5yr6lvlckzffor.onion:8333\n+qlv6py6hdtzipntn.onion:8333\n+qynmpgdbp23xyfnj.onion:8333\n+rhtawcs7xak4gi3t.onion:8333\n+rjacws757ai66lre.onion:8333\n rjlnp3hwvrsmap6e.onion:8333\n+rkdvqcrtfv6yt4oy.onion:8333\n rlafimkctvz63llg.onion:8333\n-rxjvy5eyttep5tts.onion:8333\n+rlj4ppok4dnsdu5n.onion:8333\n seoskudzk6vn6mqz.onion:8333\n-tpgdufxxsw3jkrdf.onion:8333\n-tuiyvqgi3o675pjb.onion:8333\n+tayqi57tfiy7x3vk.onion:8333\n+tchop676j6yppwwm.onion:8333\n+trrtyp3sirmwttyu.onion:8333\n tx4zd7d5exonnblh.onion:8333\n-uokg6avfgbhofls3.onion:8333\n-v3gjphgqy5hygcml.onion:8333\n-vhdoxqq63xr53ol7.onion:8333\n+u4ecb7txxi6l3gix.onion:8333\n+umcxcmfycvejw264.onion:8333\n+v7xqd42ocemalurd.onion:8333\n+vb267mt3lnwfdmdb.onion:8333\n+vev3n5fxfrtqj6e5.onion:8333\n visevrizz3quyagj.onion:8333\n-vqpye2k5rcqvj5mq.onion:8333\n-wfsx2gi7djhy22hk.onion:8333\n-wg6vwmbrzyyzapun.onion:8333\n-xub4w3w4wwk56xiq.onion:8333\n+vpg6p5e5ln33dqtp.onion:8333\n+vr2ruasinafoy3fl.onion:8333\n+x6pthvd5x6abyfo7.onion:8333\n+xbwbzrspvav7u5ie.onion:8333\n+xfcevnql2chnawko.onion:8333\n ycivnom44dmxx4ob.onion:8333\n-ywskufc62bf2fum4.onion:8333\n-z4fax2vxg23t2ddf.onion:8333\n-zo5dklwelmdrpo5n.onion:8333\n+yzdvlv5daitafekn.onion:8333"
      },
      {
        "sha": "5cc19761d41fe3578e65d1b85cf1085932ac4e1c",
        "filename": "contrib/zmq/zmq_sub.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/contrib/zmq/zmq_sub.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/contrib/zmq/zmq_sub.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/zmq/zmq_sub.py?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -32,7 +32,7 @@\n \n if not (sys.version_info.major >= 3 and sys.version_info.minor >= 5):\n     print(\"This example only works with Python 3.5 and greater\")\n-    exit(1)\n+    sys.exit(1)\n \n port = 28332\n "
      },
      {
        "sha": "bfb7ea9eaefc2cbdb1d163d6f35e8bf0946efb42",
        "filename": "contrib/zmq/zmq_sub3.4.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/contrib/zmq/zmq_sub3.4.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/contrib/zmq/zmq_sub3.4.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/zmq/zmq_sub3.4.py?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -36,7 +36,7 @@\n \n if not (sys.version_info.major >= 3 and sys.version_info.minor >= 4):\n     print(\"This example only works with Python 3.4 and greater\")\n-    exit(1)\n+    sys.exit(1)\n \n port = 28332\n "
      },
      {
        "sha": "0ddd348e53edabc9069317ab52d5f99ac429781a",
        "filename": "depends/Makefile",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/depends/Makefile",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/depends/Makefile",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/Makefile?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -134,6 +134,7 @@ $(host_prefix)/share/config.site : config.site.in $(host_prefix)/.stamp_$(final_\n             -e 's|@CXXFLAGS@|$(strip $(host_CXXFLAGS) $(host_$(release_type)_CXXFLAGS))|' \\\n             -e 's|@CPPFLAGS@|$(strip $(host_CPPFLAGS) $(host_$(release_type)_CPPFLAGS))|' \\\n             -e 's|@LDFLAGS@|$(strip $(host_LDFLAGS) $(host_$(release_type)_LDFLAGS))|' \\\n+            -e 's|@allow_host_packages@|$(ALLOW_HOST_PACKAGES)|' \\\n             -e 's|@no_qt@|$(NO_QT)|' \\\n             -e 's|@no_wallet@|$(NO_WALLET)|' \\\n             -e 's|@no_upnp@|$(NO_UPNP)|' \\"
      },
      {
        "sha": "0a4a9c327e2e73e55d226c4cdc8a543bcf0da1f5",
        "filename": "depends/config.site.in",
        "status": "modified",
        "additions": 6,
        "deletions": 5,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/depends/config.site.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/depends/config.site.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/config.site.in?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -13,10 +13,10 @@ fi\n if test -z $with_qt_translationdir; then\n   with_qt_translationdir=$depends_prefix/translations\n fi\n-if test -z $with_qt_bindir; then\n+if test -z $with_qt_bindir && test -z \"@no_qt@\"; then\n   with_qt_bindir=$depends_prefix/native/bin\n fi\n-if test -z $with_protoc_bindir; then\n+if test -z $with_protoc_bindir && test -z \"@no_qt@\"; then\n   with_protoc_bindir=$depends_prefix/native/bin\n fi\n \n@@ -53,9 +53,10 @@ PKG_CONFIG=\"`which pkg-config` --static\"\n # These two need to remain exported because pkg-config does not see them\n # otherwise. That means they must be unexported at the end of configure.ac to\n # avoid ruining the cache. Sigh.\n-\n-export PKG_CONFIG_LIBDIR=$depends_prefix/lib/pkgconfig\n-export PKG_CONFIG_PATH=$depends_prefix/share/pkgconfig\n+export PKG_CONFIG_PATH=$depends_prefix/share/pkgconfig:$depends_prefix/lib/pkgconfig\n+if test -z \"@allow_host_packages@\"; then\n+  export PKGCONFIG_LIBDIR=\n+fi\n \n CPPFLAGS=\"-I$depends_prefix/include/ $CPPFLAGS\"\n LDFLAGS=\"-L$depends_prefix/lib $LDFLAGS\""
      },
      {
        "sha": "12695db4b9f781c9ce8aa9a62dab0ae36a0a1ce4",
        "filename": "depends/packages/fontconfig.mk",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/depends/packages/fontconfig.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/depends/packages/fontconfig.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/fontconfig.mk?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -13,7 +13,13 @@ define $(package)_config_cmds\n   $($(package)_autoconf)\n endef\n \n+# 2.12.1 uses CHAR_WIDTH which is reserved and clashes with some glibc versions, but newer versions of fontconfig\n+# have broken makefiles which needlessly attempt to re-generate headers with gperf.\n+# Instead, change all uses of CHAR_WIDTH, and disable the rule that forces header re-generation.\n+# This can be removed once the upstream build is fixed.\n define $(package)_build_cmds\n+  sed -i 's/CHAR_WIDTH/CHARWIDTH/g' fontconfig/fontconfig.h src/fcobjshash.gperf src/fcobjs.h src/fcobjshash.h && \\\n+  sed -i 's/fcobjshash.h: fcobjshash.gperf/fcobjshash.h:/' src/Makefile && \\\n   $(MAKE)\n endef\n "
      },
      {
        "sha": "5f622f8e6e80694386fef45917b84b97ee1d2223",
        "filename": "depends/packages/libevent.mk",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/depends/packages/libevent.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/depends/packages/libevent.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libevent.mk?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -9,7 +9,7 @@ define $(package)_preprocess_cmds\n endef\n \n define $(package)_set_vars\n-  $(package)_config_opts=--disable-shared --disable-openssl --disable-libevent-regress\n+  $(package)_config_opts=--disable-shared --disable-openssl --disable-libevent-regress --disable-samples\n   $(package)_config_opts_release=--disable-debug-mode\n   $(package)_config_opts_linux=--with-pic\n endef"
      },
      {
        "sha": "116fa25d38197b8add2c601ab7cd7b91c384f268",
        "filename": "depends/packages/native_ds_store.mk",
        "status": "modified",
        "additions": 4,
        "deletions": 5,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/depends/packages/native_ds_store.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/depends/packages/native_ds_store.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_ds_store.mk?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -1,9 +1,8 @@\n package=native_ds_store\n-$(package)_version=1.1.0\n-$(package)_download_path=https://bitbucket.org/al45tair/ds_store/get\n-$(package)_download_file=v$($(package)_version).tar.bz2\n-$(package)_file_name=$(package)-$($(package)_version).tar.bz2\n-$(package)_sha256_hash=921596764d71d1bbd3297a90ef6d286f718794d667e4f81d91d14053525d64c1\n+$(package)_version=1.1.2\n+$(package)_download_path=https://github.com/al45tair/ds_store/archive/\n+$(package)_file_name=v$($(package)_version).tar.gz\n+$(package)_sha256_hash=3b3ecb7bf0a5157f5b6010bc3af7c141fb0ad3527084e63336220d22744bc20c\n $(package)_install_libdir=$(build_prefix)/lib/python/dist-packages\n $(package)_dependencies=native_biplist\n "
      },
      {
        "sha": "488ec8b59c977346818e8294dc9064fc49e15ec4",
        "filename": "depends/packages/native_mac_alias.mk",
        "status": "modified",
        "additions": 5,
        "deletions": 6,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/depends/packages/native_mac_alias.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/depends/packages/native_mac_alias.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_mac_alias.mk?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -1,14 +1,13 @@\n package=native_mac_alias\n-$(package)_version=1.1.0\n-$(package)_download_path=https://bitbucket.org/al45tair/mac_alias/get\n-$(package)_download_file=v$($(package)_version).tar.bz2\n-$(package)_file_name=$(package)-$($(package)_version).tar.bz2\n-$(package)_sha256_hash=87ad827e66790028361e43fc754f68ed041a9bdb214cca03c853f079b04fb120\n+$(package)_version=2.0.6\n+$(package)_download_path=https://github.com/al45tair/mac_alias/archive/\n+$(package)_file_name=v$($(package)_version).tar.gz\n+$(package)_sha256_hash=78a3332d9a597eebf09ae652d38ad1e263b28db5c2e6dd725fad357b03b77371\n $(package)_install_libdir=$(build_prefix)/lib/python/dist-packages\n $(package)_patches=python3.patch\n \n define $(package)_preprocess_cmds\n-  patch -p1 < $($(package)_patch_dir)/python3.patch\n+    patch -p1 < $($(package)_patch_dir)/python3.patch\n endef\n \n define $(package)_build_cmds"
      },
      {
        "sha": "6f2f5534a275d57d3dcb8287823b85e663152904",
        "filename": "depends/patches/native_mac_alias/python3.patch",
        "status": "modified",
        "additions": 6,
        "deletions": 22,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/depends/patches/native_mac_alias/python3.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/depends/patches/native_mac_alias/python3.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/native_mac_alias/python3.patch?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -1,7 +1,7 @@\n diff -dur a/mac_alias/alias.py b/mac_alias/alias.py\n---- a/mac_alias/alias.py\t2015-10-19 12:12:48.000000000 +0200\n-+++ b/mac_alias/alias.py\t2016-04-03 12:13:12.037159417 +0200\n-@@ -243,10 +243,10 @@\n+--- a/mac_alias/alias.py\n++++ b/mac_alias/alias.py\n+@@ -258,10 +258,10 @@\n          alias = Alias()\n          alias.appinfo = appinfo\n              \n@@ -14,7 +14,7 @@ diff -dur a/mac_alias/alias.py b/mac_alias/alias.py\n                                     folder_cnid, cnid,\n                                     crdate, creator_code, type_code)\n          alias.target.levels_from = levels_from\n-@@ -261,9 +261,9 @@\n+@@ -276,9 +276,9 @@\n                  b.read(1)\n  \n              if tag == TAG_CARBON_FOLDER_NAME:\n@@ -26,7 +26,7 @@ diff -dur a/mac_alias/alias.py b/mac_alias/alias.py\n                                                             value)\n              elif tag == TAG_CARBON_PATH:\n                  alias.target.carbon_path = value\n-@@ -298,9 +298,9 @@\n+@@ -313,9 +313,9 @@\n                  alias.target.creation_date \\\n                      = mac_epoch + datetime.timedelta(seconds=seconds)\n              elif tag == TAG_POSIX_PATH:\n@@ -38,23 +38,7 @@ diff -dur a/mac_alias/alias.py b/mac_alias/alias.py\n              elif tag == TAG_RECURSIVE_ALIAS_OF_DISK_IMAGE:\n                  alias.volume.disk_image_alias = Alias.from_bytes(value)\n              elif tag == TAG_USER_HOME_LENGTH_PREFIX:\n-@@ -422,13 +422,13 @@\n-         #       (so doing so is ridiculous, and nothing could rely on it).\n-         b.write(struct.pack(b'>h28pI2shI64pII4s4shhI2s10s',\n-                             self.target.kind,\n--                            carbon_volname, voldate,\n-+                            carbon_volname, int(voldate),\n-                             self.volume.fs_type,\n-                             self.volume.disk_type,\n-                             self.target.folder_cnid,\n-                             carbon_filename,\n-                             self.target.cnid,\n--                            crdate,\n-+                            int(crdate),\n-                             self.target.creator_code,\n-                             self.target.type_code,\n-                             self.target.levels_from,\n-@@ -449,12 +449,12 @@\n+@@ -467,12 +467,12 @@\n  \n          b.write(struct.pack(b'>hhQhhQ',\n                  TAG_HIGH_RES_VOLUME_CREATION_DATE,"
      },
      {
        "sha": "988019869e4387fe11362e29480761d827dcf85a",
        "filename": "doc/README.md",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/doc/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/doc/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README.md?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -37,6 +37,7 @@ Building\n ---------------------\n The following are developer notes on how to build Bitcoin on your native platform. They are not complete guides, but include notes on the necessary libraries, compile flags, etc.\n \n+- [Dependencies](dependencies.md)\n - [OS X Build Notes](build-osx.md)\n - [Unix Build Notes](build-unix.md)\n - [Windows Build Notes](build-windows.md)"
      },
      {
        "sha": "f3dc124ece94bf82e50005d294098fc058a91509",
        "filename": "doc/REST-interface.md",
        "status": "modified",
        "additions": 8,
        "deletions": 7,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/doc/REST-interface.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/doc/REST-interface.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/REST-interface.md?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -3,19 +3,20 @@ Unauthenticated REST Interface\n \n The REST API can be enabled with the `-rest` option.\n \n-The interface runs on the same port as the JSON-RPC interface, by default port 8332 for mainnet and port 18332 for testnet.\n+The interface runs on the same port as the JSON-RPC interface, by default port 8332 for mainnet, port 18332 for testnet,\n+and port 18443 for regtest.\n \n Supported API\n -------------\n \n-####Transactions\n+#### Transactions\n `GET /rest/tx/<TX-HASH>.<bin|hex|json>`\n \n Given a transaction hash: returns a transaction in binary, hex-encoded binary, or JSON formats.\n \n For full TX query capability, one must enable the transaction index via \"txindex=1\" command line / configuration option.\n \n-####Blocks\n+#### Blocks\n `GET /rest/block/<BLOCK-HASH>.<bin|hex|json>`\n `GET /rest/block/notxdetails/<BLOCK-HASH>.<bin|hex|json>`\n \n@@ -25,12 +26,12 @@ The HTTP request and response are both handled entirely in-memory, thus making m\n \n With the /notxdetails/ option JSON response will only contain the transaction hash instead of the complete transaction details. The option only affects the JSON response.\n \n-####Blockheaders\n+#### Blockheaders\n `GET /rest/headers/<COUNT>/<BLOCK-HASH>.<bin|hex|json>`\n \n Given a block hash: returns <COUNT> amount of blockheaders in upward direction.\n \n-####Chaininfos\n+#### Chaininfos\n `GET /rest/chaininfo.json`\n \n Returns various state info regarding block chain processing.\n@@ -48,7 +49,7 @@ Only supports JSON as output format.\n * softforks : (array) status of softforks in progress\n * bip9_softforks : (object) status of BIP9 softforks in progress\n \n-####Query UTXO set\n+#### Query UTXO set\n `GET /rest/getutxos/<checkmempool>/<txid>-<n>/<txid>-<n>/.../<txid>-<n>.<bin|hex|json>`\n \n The getutxo command allows querying of the UTXO set given a set of outpoints.\n@@ -81,7 +82,7 @@ $ curl localhost:18332/rest/getutxos/checkmempool/b2cdfd7b89def827ff8af7cd9bff76\n }\n ```\n \n-####Memory pool\n+#### Memory pool\n `GET /rest/mempool/info.json`\n \n Returns various information about the TX mempool."
      },
      {
        "sha": "4ea8e30b53d57ba5bd4594d89224f2eff892ded2",
        "filename": "doc/build-openbsd.md",
        "status": "modified",
        "additions": 9,
        "deletions": 9,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/doc/build-openbsd.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/doc/build-openbsd.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-openbsd.md?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -1,6 +1,6 @@\n OpenBSD build guide\n ======================\n-(updated for OpenBSD 6.0)\n+(updated for OpenBSD 6.1)\n \n This guide describes how to build bitcoind and command-line utilities on OpenBSD.\n \n@@ -18,12 +18,12 @@ pkg_add automake # (select highest version, e.g. 1.15)\n pkg_add python # (select highest version, e.g. 3.5)\n ```\n \n-The default C++ compiler that comes with OpenBSD 5.9 is g++ 4.2. This version is old (from 2007), and is not able to compile the current version of Bitcoin Core, primarily as it has no C++11 support, but even before there were issues. So here we will be installing a newer compiler.\n+See [dependencies.md](dependencies.md) for a complete overview.\n \n GCC\n -------\n \n-You can install a newer version of gcc with:\n+The default C++ compiler that comes with OpenBSD 5.9 is g++ 4.2. This version is old (from 2007), and is not able to compile the current version of Bitcoin Core, primarily as it has no C++11 support, but even before there were issues. So here we will be installing a newer compiler:\n \n ```bash\n pkg_add g++ # (select newest 4.x version, e.g. 4.9.3)\n@@ -48,13 +48,13 @@ BOOST_PREFIX=\"${BITCOIN_ROOT}/boost\"\n mkdir -p $BOOST_PREFIX\n \n # Fetch the source and verify that it is not tampered with\n-curl -o boost_1_61_0.tar.bz2 http://heanet.dl.sourceforge.net/project/boost/boost/1.61.0/boost_1_61_0.tar.bz2\n-echo 'a547bd06c2fd9a71ba1d169d9cf0339da7ebf4753849a8f7d6fdb8feee99b640  boost_1_61_0.tar.bz2' | sha256 -c\n-# MUST output: (SHA256) boost_1_61_0.tar.bz2: OK\n-tar -xjf boost_1_61_0.tar.bz2\n+curl -o boost_1_64_0.tar.bz2 https://netcologne.dl.sourceforge.net/project/boost/boost/1.64.0/boost_1_64_0.tar.bz2\n+echo '7bcc5caace97baa948931d712ea5f37038dbb1c5d89b43ad4def4ed7cb683332 boost_1_64_0.tar.bz2' | sha256 -c\n+# MUST output: (SHA256) boost_1_64_0.tar.bz2: OK\n+tar -xjf boost_1_64_0.tar.bz2\n \n-# Boost 1.61 needs one small patch for OpenBSD\n-cd boost_1_61_0\n+# Boost 1.64 needs one small patch for OpenBSD\n+cd boost_1_64_0\n # Also here: https://gist.githubusercontent.com/laanwj/bf359281dc319b8ff2e1/raw/92250de8404b97bb99d72ab898f4a8cb35ae1ea3/patch-boost_test_impl_execution_monitor_ipp.patch\n patch -p0 < /usr/ports/devel/boost/patches/patch-boost_test_impl_execution_monitor_ipp\n "
      },
      {
        "sha": "836c856a64e75ddb23193a26d4510c07a812b52e",
        "filename": "doc/build-osx.md",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/doc/build-osx.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/doc/build-osx.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-osx.md?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -16,7 +16,9 @@ Then install [Homebrew](https://brew.sh).\n Dependencies\n ----------------------\n \n-    brew install automake berkeley-db4 libtool boost --c++11 miniupnpc openssl pkg-config protobuf qt libevent\n+    brew install automake berkeley-db4 libtool boost --c++11 miniupnpc openssl pkg-config protobuf python3 qt libevent\n+\n+See [dependencies.md](dependencies.md) for a complete overview.\n \n If you want to build the disk image with `make deploy` (.dmg / optional), you need RSVG\n "
      },
      {
        "sha": "8a102abaea642668883d0cbf885baa033beee32d",
        "filename": "doc/build-unix.md",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/doc/build-unix.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/doc/build-unix.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-unix.md?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -49,7 +49,7 @@ Optional dependencies:\n  univalue    | Utility          | JSON parsing and encoding (bundled version will be used unless --with-system-univalue passed to configure)\n  libzmq3     | ZMQ notification | Optional, allows generating ZMQ notifications (requires ZMQ version >= 4.x)\n \n-For the versions used in the release, see [release-process.md](release-process.md) under *Fetch and build inputs*.\n+For the versions used, see [dependencies.md](dependencies.md)\n \n Memory Requirements\n --------------------\n@@ -65,7 +65,7 @@ Dependency Build Instructions: Ubuntu & Debian\n ----------------------------------------------\n Build requirements:\n \n-    sudo apt-get install build-essential libtool autotools-dev automake pkg-config libssl-dev libevent-dev bsdmainutils\n+    sudo apt-get install build-essential libtool autotools-dev automake pkg-config libssl-dev libevent-dev bsdmainutils python3\n \n Options when installing required Boost library files:\n \n@@ -131,7 +131,7 @@ Dependency Build Instructions: Fedora\n -------------------------------------\n Build requirements:\n \n-    sudo dnf install gcc-c++ libtool make autoconf automake openssl-devel libevent-devel boost-devel libdb4-devel libdb4-cxx-devel\n+    sudo dnf install gcc-c++ libtool make autoconf automake openssl-devel libevent-devel boost-devel libdb4-devel libdb4-cxx-devel python3\n \n Optional:\n "
      },
      {
        "sha": "0d96af26a29c8121528edfdb03d8271f68288a50",
        "filename": "doc/build-windows.md",
        "status": "modified",
        "additions": 17,
        "deletions": 2,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/doc/build-windows.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/doc/build-windows.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-windows.md?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -4,7 +4,11 @@ WINDOWS BUILD NOTES\n Below are some notes on how to build Bitcoin Core for Windows.\n \n Most developers use cross-compilation from Ubuntu to build executables for\n-Windows. This is also used to build the release binaries.\n+Windows. Cross-compilation is also used to build the release binaries.\n+\n+Currently only building on Ubuntu Trusty 14.04 or Ubuntu Zesty 17.04 or later is supported.\n+Building on Ubuntu Xenial 16.04 is known to be broken, see extensive discussion in issue [8732](https://github.com/bitcoin/bitcoin/issues/8732).\n+While it may be possible to do so with work arounds, it's potentially dangerous and not recommended.\n \n While there are potentially a number of ways to build on Windows (for example using msys / mingw-w64),\n using the Windows Subsystem For Linux is the most straightforward. If you are building with\n@@ -59,6 +63,15 @@ A host toolchain (`build-essential`) is necessary because some dependency\n packages (such as `protobuf`) need to build host utilities that are used in the\n build process.\n \n+See also: [dependencies.md](dependencies.md).\n+\n+If you're building on Ubuntu 17.04 or later, run these two commands, selecting the 'posix' variant for both,\n+to work around issues with mingw-w64. See issue [8732](https://github.com/bitcoin/bitcoin/issues/8732) for more information.\n+```\n+sudo update-alternatives --config x86_64-w64-mingw32-g++\n+sudo update-alternatives --config x86_64-w64-mingw32-gcc\n+```\n+\n ## Building for 64-bit Windows\n \n To build executables for Windows 64-bit, install the following dependencies:\n@@ -67,6 +80,7 @@ To build executables for Windows 64-bit, install the following dependencies:\n \n Then build using:\n \n+    PATH=$(echo \"$PATH\" | sed -e 's/:\\/mnt.*//g') # strip out problematic Windows %PATH% imported var\n     cd depends\n     make HOST=x86_64-w64-mingw32\n     cd ..\n@@ -78,10 +92,11 @@ Then build using:\n \n To build executables for Windows 32-bit, install the following dependencies:\n \n-    sudo apt-get install g++-mingw-w64-i686 mingw-w64-i686-dev \n+    sudo apt-get install g++-mingw-w64-i686 mingw-w64-i686-dev\n \n Then build using:\n \n+    PATH=$(echo \"$PATH\" | sed -e 's/:\\/mnt.*//g') # strip out problematic Windows %PATH% imported var\n     cd depends\n     make HOST=i686-w64-mingw32\n     cd .."
      },
      {
        "sha": "964c03ba8866a988b5a91e75d54645b34342bf11",
        "filename": "doc/dependencies.md",
        "status": "added",
        "additions": 31,
        "deletions": 0,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/doc/dependencies.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/doc/dependencies.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/dependencies.md?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -0,0 +1,31 @@\n+Dependencies\n+============\n+\n+These are the dependencies currently used by Bitcoin Core. You can find instructions for installing them in the `build-*.md` file for your platform.\n+\n+| Dependency | Version used | Minimum required | CVEs | Shared | [Bundled Qt library](https://doc.qt.io/qt-5/configure-options.html) |\n+| --- | --- | --- | --- | --- | --- |\n+| Berkeley DB | [4.8.30](http://www.oracle.com/technetwork/database/database-technologies/berkeleydb/downloads/index.html) | 4.8.x | No |  |  |\n+| Boost | [1.64.0](http://www.boost.org/users/download/) | [1.47.0](https://github.com/bitcoin/bitcoin/pull/8920) | No |  |  |\n+| ccache | [3.3.4](https://ccache.samba.org/download.html) |  | No |  |  |\n+| Clang |  | [3.3+](http://llvm.org/releases/download.html) (C++11 support) |  |  |  |\n+| D-Bus | [1.10.18](https://cgit.freedesktop.org/dbus/dbus/tree/NEWS?h=dbus-1.10) |  | No | Yes |  |\n+| Expat | [2.2.1](https://libexpat.github.io/) |  | No | Yes |  |\n+| fontconfig | [2.12.1](https://www.freedesktop.org/software/fontconfig/release/) |  | No | Yes |  |\n+| FreeType | [2.7.1](http://download.savannah.gnu.org/releases/freetype) |  | No |  |  |\n+| GCC |  | [4.7+](https://gcc.gnu.org/) |  |  |  |\n+| HarfBuzz-NG |  |  |  |  |  |\n+| libevent | [2.1.8-stable](https://github.com/libevent/libevent/releases) | 2.0.22 | No |  |  |\n+| libjpeg |  |  |  |  | [Yes](https://github.com/bitcoin/bitcoin/blob/master/depends/packages/qt.mk#L75) |\n+| libpng |  |  |  |  | [Yes](https://github.com/bitcoin/bitcoin/blob/master/depends/packages/qt.mk#L74) |\n+| MiniUPnPc | [2.0.20170509](http://miniupnp.free.fr/files) |  | No |  |  |\n+| OpenSSL | [1.0.1k](https://www.openssl.org/source) |  | Yes |  |  |\n+| PCRE |  |  |  |  | [Yes](https://github.com/bitcoin/bitcoin/blob/master/depends/packages/qt.mk#L76) |\n+| protobuf | [2.6.3](https://github.com/google/protobuf/releases) |  | No |  |  |\n+| Python (tests) |  | [3.4](https://www.python.org/downloads) |  |  |  |\n+| qrencode | [3.4.4](https://fukuchi.org/works/qrencode) |  | No |  |  |\n+| Qt | [5.7.1](https://download.qt.io/official_releases/qt/) | 4.7+ | No |  |  |\n+| XCB |  |  |  |  | [Yes](https://github.com/bitcoin/bitcoin/blob/master/depends/packages/qt.mk#L94) (Linux only) |\n+| xkbcommon |  |  |  |  | [Yes](https://github.com/bitcoin/bitcoin/blob/master/depends/packages/qt.mk#L93) (Linux only) |\n+| ZeroMQ | [4.1.5](https://github.com/zeromq/libzmq/releases) |  | No |  |  |\n+| zlib | [1.2.11](http://zlib.net/) |  |  |  | No |"
      },
      {
        "sha": "33c6ab9cb3daad7960b65c57d2c4dd744cfd233e",
        "filename": "doc/developer-notes.md",
        "status": "modified",
        "additions": 46,
        "deletions": 15,
        "changes": 61,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/doc/developer-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/doc/developer-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/developer-notes.md?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -4,7 +4,7 @@ Developer Notes\n Various coding styles have been used during the history of the codebase,\n and the result is not very consistent. However, we're now trying to converge to\n a single style, which is specified below. When writing patches, favor the new\n-style over attempting to mimick the surrounding style, except for move-only\n+style over attempting to mimic the surrounding style, except for move-only\n commits.\n \n Do not submit patches solely to modify the style of existing code.\n@@ -28,15 +28,17 @@ tool to clean up patches automatically before submission.\n required when doing so would need changes to significant pieces of existing\n code.\n   - Variable and namespace names are all lowercase, and may use `_` to\n-    separate words.\n+    separate words (snake_case).\n     - Class member variables have a `m_` prefix.\n     - Global variables have a `g_` prefix.\n   - Constant names are all uppercase, and use `_` to separate words.\n-  - Class names, function names and method names are CamelCase. Do not prefix\n-    class names with `C`.\n+  - Class names, function names and method names are UpperCamelCase\n+    (PascalCase). Do not prefix class names with `C`.\n \n - **Miscellaneous**\n   - `++i` is preferred over `i++`.\n+  - `nullptr` is preferred over `NULL` or `(void*)0`.\n+  - `static_assert` is preferred over `assert` where possible. Generally; compile-time checking is preferred over run-time checking.\n \n Block style example:\n ```c++\n@@ -275,7 +277,7 @@ Wallet\n \n   - *Rationale*: In RPC code that conditionally uses the wallet (such as\n     `validateaddress`) it is easy to forget that global pointer `pwalletMain`\n-    can be NULL. See `test/functional/disablewallet.py` for functional tests\n+    can be nullptr. See `test/functional/disablewallet.py` for functional tests\n     exercising the API with `-disablewallet`\n \n - Include `db_cxx.h` (BerkeleyDB header) only when `ENABLE_WALLET` is set\n@@ -330,6 +332,12 @@ C++ data structures\n   - *Rationale*: Ensure determinism by avoiding accidental use of uninitialized\n     values. Also, static analyzers balk about this.\n \n+- By default, declare single-argument constructors `explicit`.\n+\n+  - *Rationale*: This is a precaution to avoid unintended conversions that might\n+    arise when single-argument constructors are used as implicit conversion\n+    functions.\n+\n - Use explicitly signed or unsigned `char`s, or even better `uint8_t` and\n   `int8_t`. Do not use bare `char` unless it is to pass to a third-party API.\n   This type can be signed or unsigned depending on the architecture, which can\n@@ -541,6 +549,26 @@ Git and GitHub tips\n   or `git fetch upstream-pull`. Afterwards, you can use `upstream-pull/NUMBER/head` in arguments to `git show`,\n   `git checkout` and anywhere a commit id would be acceptable to see the changes from pull request NUMBER.\n \n+Scripted diffs\n+--------------\n+\n+For reformatting and refactoring commits where the changes can be easily automated using a bash script, we use\n+scripted-diff commits. The bash script is included in the commit message and our Travis CI job checks that\n+the result of the script is identical to the commit. This aids reviewers since they can verify that the script\n+does exactly what it's supposed to do. It is also helpful for rebasing (since the same script can just be re-run\n+on the new master commit).\n+\n+To create a scripted-diff:\n+\n+- start the commit message with `scripted-diff:` (and then a description of the diff on the same line)\n+- in the commit message include the bash script between lines containing just the following text:\n+    - `-BEGIN VERIFY SCRIPT-`\n+    - `-END VERIFY SCRIPT-`\n+\n+The scripted-diff is verified by the tool `contrib/devtools/commit-script-check.sh`\n+\n+Commit `bb81e173` is an example of a scripted-diff.\n+\n RPC interface guidelines\n --------------------------\n \n@@ -561,25 +589,23 @@ A few guidelines for introducing and reviewing new RPC interfaces:\n     which is error prone, and it is easy to get things such as escaping wrong.\n     JSON already supports nested data structures, no need to re-invent the wheel.\n \n-  - *Exception*: AmountToValue can parse amounts as string. This was introduced because many JSON\n+  - *Exception*: AmountFromValue can parse amounts as string. This was introduced because many JSON\n     parsers and formatters hard-code handling decimal numbers as floating point\n     values, resulting in potential loss of precision. This is unacceptable for\n-    monetary values. **Always** use `AmountToValue` and `ValueToAmount` when\n+    monetary values. **Always** use `AmountFromValue` and `ValueFromAmount` when\n     inputting or outputting monetary values. The only exceptions to this are\n     `prioritisetransaction` and `getblocktemplate` because their interface\n     is specified as-is in BIP22.\n \n - Missing arguments and 'null' should be treated the same: as default values. If there is no\n-  default value, both cases should fail in the same way.\n+  default value, both cases should fail in the same way. The easiest way to follow this\n+  guideline is detect unspecified arguments with `params[x].isNull()` instead of\n+  `params.size() <= x`. The former returns true if the argument is either null or missing,\n+  while the latter returns true if is missing, and false if it is null.\n \n   - *Rationale*: Avoids surprises when switching to name-based arguments. Missing name-based arguments\n   are passed as 'null'.\n \n-  - *Exception*: Many legacy exceptions to this exist, one of the worst ones is\n-    `getbalance` which follows a completely different code path based on the\n-    number of arguments. We are still in the process of cleaning these up. Do not introduce\n-    new ones.\n-\n - Try not to overload methods on argument type. E.g. don't make `getblock(true)` and `getblock(\"hash\")`\n   do different things.\n \n@@ -607,9 +633,14 @@ A few guidelines for introducing and reviewing new RPC interfaces:\n     from there.\n \n - A RPC method must either be a wallet method or a non-wallet method. Do not\n-  introduce new methods such as `getinfo` and `signrawtransaction` that differ\n-  in behavior based on presence of a wallet.\n+  introduce new methods such as `signrawtransaction` that differ in behavior\n+  based on presence of a wallet.\n \n   - *Rationale*: as well as complicating the implementation and interfering\n     with the introduction of multi-wallet, wallet and non-wallet code should be\n     separated to avoid introducing circular dependencies between code units.\n+\n+- Try to make the RPC response a JSON object.\n+\n+  - *Rationale*: If a RPC response is not a JSON object then it is harder to avoid API breakage if\n+    new data in the response is needed."
      },
      {
        "sha": "3d603445fbfcd7d75a8541f0c7f41c6ee289840e",
        "filename": "doc/files.md",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/doc/files.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/doc/files.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/files.md?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -15,6 +15,7 @@\n * wallet.dat: personal wallet (BDB) with keys and transactions\n * .cookie: session RPC authentication cookie (written at start when cookie authentication is used, deleted on shutdown): since 0.12.0\n * onion_private_key: cached Tor hidden service private key for `-listenonion`: since 0.12.0\n+* guisettings.ini.bak: backup of former GUI settings after `-resetguisettings` is used\n \n Only used in pre-0.8.0\n ---------------------"
      },
      {
        "sha": "3a48f4a0b397770e44f51477df854f8298ce1b75",
        "filename": "doc/gitian-building.md",
        "status": "modified",
        "additions": 1,
        "deletions": 477,
        "changes": 478,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/doc/gitian-building.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/doc/gitian-building.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building.md?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -1,480 +1,4 @@\n Gitian building\n ================\n \n-*Setup instructions for a Gitian build of Bitcoin Core using a Debian VM or physical system.*\n-\n-Gitian is the deterministic build process that is used to build the Bitcoin\n-Core executables. It provides a way to be reasonably sure that the\n-executables are really built from the source on GitHub. It also makes sure that\n-the same, tested dependencies are used and statically built into the executable.\n-\n-Multiple developers build the source code by following a specific descriptor\n-(\"recipe\"), cryptographically sign the result, and upload the resulting signature.\n-These results are compared and only if they match, the build is accepted and uploaded\n-to bitcoin.org.\n-\n-More independent Gitian builders are needed, which is why this guide exists.\n-It is preferred you follow these steps yourself instead of using someone else's\n-VM image to avoid 'contaminating' the build.\n-\n-Table of Contents\n-------------------\n-\n-- [Create a new VirtualBox VM](#create-a-new-virtualbox-vm)\n-- [Connecting to the VM](#connecting-to-the-vm)\n-- [Setting up Debian for Gitian building](#setting-up-debian-for-gitian-building)\n-- [Installing Gitian](#installing-gitian)\n-- [Setting up the Gitian image](#setting-up-the-gitian-image)\n-- [Getting and building the inputs](#getting-and-building-the-inputs)\n-- [Building Bitcoin Core](#building-bitcoin-core)\n-- [Building an alternative repository](#building-an-alternative-repository)\n-- [Signing externally](#signing-externally)\n-- [Uploading signatures](#uploading-signatures)\n-\n-Preparing the Gitian builder host\n----------------------------------\n-\n-The first step is to prepare the host environment that will be used to perform the Gitian builds.\n-This guide explains how to set up the environment, and how to start the builds.\n-\n-Debian Linux was chosen as the host distribution because it has a lightweight install (in contrast to Ubuntu) and is readily available.\n-Any kind of virtualization can be used, for example:\n-- [VirtualBox](https://www.virtualbox.org/) (covered by this guide)\n-- [KVM](http://www.linux-kvm.org/page/Main_Page)\n-- [LXC](https://linuxcontainers.org/), see also [Gitian host docker container](https://github.com/gdm85/tenku/tree/master/docker/gitian-bitcoin-host/README.md).\n-\n-You can also install Gitian on actual hardware instead of using virtualization.\n-\n-Create a new VirtualBox VM\n----------------------------\n-In the VirtualBox GUI click \"New\" and choose the following parameters in the wizard:\n-\n-![](gitian-building/create_new_vm.png)\n-\n-- Type: Linux, Debian (64-bit)\n-\n-![](gitian-building/create_vm_memsize.png)\n-\n-- Memory Size: at least 3000MB, anything less and the build might not complete.\n-\n-![](gitian-building/create_vm_hard_disk.png)\n-\n-- Hard Disk: Create a virtual hard disk now\n-\n-![](gitian-building/create_vm_hard_disk_file_type.png)\n-\n-- Hard Disk file type: Use the default, VDI (VirtualBox Disk Image)\n-\n-![](gitian-building/create_vm_storage_physical_hard_disk.png)\n-\n-- Storage on physical hard disk: Dynamically Allocated\n-\n-![](gitian-building/create_vm_file_location_size.png)\n-\n-- File location and size: at least 40GB; as low as 20GB *may* be possible, but better to err on the safe side\n-- Click `Create`\n-\n-After creating the VM, we need to configure it.\n-\n-- Click the `Settings` button, then go to the `Network` tab. Adapter 1 should be attached to `NAT`.\n-\n-![](gitian-building/network_settings.png)\n-\n-- Click `Advanced`, then `Port Forwarding`. We want to set up a port through which we can reach the VM to get files in and out.\n-- Create a new rule by clicking the plus icon.\n-\n-![](gitian-building/port_forwarding_rules.png)\n-\n-- Set up the new rule the following way:\n-  - Name: `SSH`\n-  - Protocol: `TCP`\n-  - Leave Host IP empty\n-  - Host Port: `22222`\n-  - Leave Guest IP empty\n-  - Guest Port: `22`\n-\n-- Click `Ok` twice to save.\n-\n-Get the [Debian 8.x net installer](http://cdimage.debian.org/mirror/cdimage/archive/8.5.0/amd64/iso-cd/debian-8.5.0-amd64-netinst.iso) (a more recent minor version should also work, see also [Debian Network installation](https://www.debian.org/CD/netinst/)).\n-This DVD image can be [validated](https://www.debian.org/CD/verify) using a SHA256 hashing tool, for example on\n-Unixy OSes by entering the following in a terminal:\n-\n-    echo \"ad4e8c27c561ad8248d5ebc1d36eb172f884057bfeb2c22ead823f59fa8c3dff  debian-8.5.0-amd64-netinst.iso\" | sha256sum -c\n-    # (must return OK)\n-\n-Then start the VM. On the first launch you will be asked for a CD or DVD image. Choose the downloaded ISO.\n-\n-![](gitian-building/select_startup_disk.png)\n-\n-Installing Debian\n-------------------\n-\n-This section will explain how to install Debian on the newly created VM.\n-\n-- Choose the non-graphical installer.  We do not need the graphical environment; it will only increase installation time and disk usage.\n-\n-![](gitian-building/debian_install_1_boot_menu.png)\n-\n-**Note**: Navigating in the Debian installer:\n-To keep a setting at the default and proceed, just press `Enter`.\n-To select a different button, press `Tab`.\n-\n-- Choose locale and keyboard settings (doesn't matter, you can just go with the defaults or select your own information)\n-\n-![](gitian-building/debian_install_2_select_a_language.png)\n-![](gitian-building/debian_install_3_select_location.png)\n-![](gitian-building/debian_install_4_configure_keyboard.png)\n-\n-- The VM will detect network settings using DHCP, this should all proceed automatically\n-- Configure the network:\n-  - Hostname `debian`.\n-  - Leave domain name empty.\n-\n-![](gitian-building/debian_install_5_configure_the_network.png)\n-![](gitian-building/debian_install_6_domain_name.png)\n-\n-- Choose a root password and enter it twice (remember it for later)\n-\n-![](gitian-building/debian_install_6a_set_up_root_password.png)\n-\n-- Name the new user `debian` (the full name doesn't matter, you can leave it empty)\n-- Set the account username as `debian`\n-\n-![](gitian-building/debian_install_7_set_up_user_fullname.png)\n-![](gitian-building/debian_install_8_set_up_username.png)\n-\n-- Choose a user password and enter it twice (remember it for later)\n-\n-![](gitian-building/debian_install_9_user_password.png)\n-\n-- The installer will set up the clock using a time server; this process should be automatic\n-- Set up the clock: choose a time zone (depends on the locale settings that you picked earlier; specifics don't matter)  \n-\n-![](gitian-building/debian_install_10_configure_clock.png)\n-\n-- Disk setup\n-  - Partitioning method: Guided - Use the entire disk\n-\n-![](gitian-building/debian_install_11_partition_disks.png)\n-\n-  - Select disk to partition: SCSI1 (0,0,0)\n-\n-![](gitian-building/debian_install_12_choose_disk.png)\n-\n-  - Partition Disks -> *All files in one partition*\n-\n-![](gitian-building/all_files_in_one_partition.png)\n-\n-  - Finish partitioning and write changes to disk -> *Yes* (`Tab`, `Enter` to select the `Yes` button)\n-\n-![](gitian-building/debian_install_14_finish.png)\n-![](gitian-building/debian_install_15_write_changes.png)\n-\n-- The base system will be installed, this will take a minute or so\n-- Choose a mirror (any will do)\n-\n-![](gitian-building/debian_install_16_choose_a_mirror.png)\n-\n-- Enter proxy information (unless you are on an intranet, leave this empty)\n-\n-![](gitian-building/debian_install_18_proxy_settings.png)\n-\n-- Wait a bit while 'Select and install software' runs\n-- Participate in popularity contest -> *No*\n-- Choose software to install. We need just the base system.\n-- Make sure only 'SSH server' and 'Standard System Utilities' are checked\n-- Uncheck 'Debian Desktop Environment' and 'Print Server'\n-\n-![](gitian-building/debian_install_19_software_selection.png)\n-\n-- Install the GRUB boot loader to the master boot record? -> Yes\n-\n-![](gitian-building/debian_install_20_install_grub.png)\n-\n-- Device for boot loader installation -> ata-VBOX_HARDDISK\n-\n-![](gitian-building/debian_install_21_install_grub_bootloader.png)\n-\n-- Installation Complete -> *Continue*\n-- After installation, the VM will reboot and you will have a working Debian VM. Congratulations!\n-\n-![](gitian-building/debian_install_22_finish_installation.png)\n-\n-\n-After Installation\n--------------------\n-The next step in the guide involves logging in as root via SSH.\n-SSH login for root users is disabled by default, so we'll enable that now.\n-\n-Login to the VM using username `root` and the root password you chose earlier.\n-You'll be presented with a screen similar to this.\n-\n-![](gitian-building/debian_root_login.png)\n-\n-Type:\n-\n-```\n-sed -i 's/^PermitRootLogin.*/PermitRootLogin yes/' /etc/ssh/sshd_config\n-```\n-and press enter. Then,\n-```\n-/etc/init.d/ssh restart\n-```\n-and enter to restart SSH. Logout by typing 'logout' and pressing 'enter'.\n-\n-Connecting to the VM\n-----------------------\n-\n-After the VM has booted you can connect to it using SSH, and files can be copied from and to the VM using a SFTP utility.\n-Connect to `localhost`, port `22222` (or the port configured when installing the VM).\n-On Windows you can use [putty](http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html) and [WinSCP](http://winscp.net/eng/index.php).\n-\n-For example, to connect as `root` from a Linux command prompt use\n-\n-    $ ssh root@localhost -p 22222\n-    The authenticity of host '[localhost]:22222 ([127.0.0.1]:22222)' can't be established.\n-    RSA key fingerprint is ae:f5:c8:9f:17:c6:c7:1b:c2:1b:12:31:1d:bb:d0:c7.\n-    Are you sure you want to continue connecting (yes/no)? yes\n-    Warning: Permanently added '[localhost]:22222' (RSA) to the list of known hosts.\n-    root@localhost's password: (enter root password configured during install)\n-\n-    The programs included with the Debian GNU/Linux system are free software;\n-    the exact distribution terms for each program are described in the\n-    individual files in /usr/share/doc/*/copyright.\n-\n-    Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent\n-    permitted by applicable law.\n-    root@debian:~#\n-\n-Replace `root` with `debian` to log in as user.\n-\n-Setting up Debian for Gitian building\n---------------------------------------\n-\n-In this section we will be setting up the Debian installation for Gitian building.\n-\n-First we need to log in as `root` to set up dependencies and make sure that our\n-user can use the sudo command. Type/paste the following in the terminal:\n-\n-```bash\n-apt-get install git ruby sudo apt-cacher-ng qemu-utils debootstrap lxc python-cheetah parted kpartx bridge-utils make ubuntu-archive-keyring curl\n-adduser debian sudo\n-```\n-\n-Then set up LXC and the rest with the following, which is a complex jumble of settings and workarounds:\n-\n-```bash\n-# the version of lxc-start in Debian needs to run as root, so make sure\n-# that the build script can execute it without providing a password\n-echo \"%sudo ALL=NOPASSWD: /usr/bin/lxc-start\" > /etc/sudoers.d/gitian-lxc\n-echo \"%sudo ALL=NOPASSWD: /usr/bin/lxc-execute\" >> /etc/sudoers.d/gitian-lxc\n-# make /etc/rc.local script that sets up bridge between guest and host\n-echo '#!/bin/sh -e' > /etc/rc.local\n-echo 'brctl addbr br0' >> /etc/rc.local\n-echo 'ifconfig br0 10.0.3.2/24 up' >> /etc/rc.local\n-echo 'iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE' >> /etc/rc.local\n-echo 'echo 1 > /proc/sys/net/ipv4/ip_forward' >> /etc/rc.local\n-echo 'exit 0' >> /etc/rc.local\n-# make sure that USE_LXC is always set when logging in as debian,\n-# and configure LXC IP addresses\n-echo 'export USE_LXC=1' >> /home/debian/.profile\n-echo 'export GITIAN_HOST_IP=10.0.3.2' >> /home/debian/.profile\n-echo 'export LXC_GUEST_IP=10.0.3.5' >> /home/debian/.profile\n-reboot\n-```\n-\n-At the end the VM is rebooted to make sure that the changes take effect. The steps in this\n-section only need to be performed once.\n-\n-Installing Gitian\n-------------------\n-\n-Re-login as the user `debian` that was created during installation.\n-The rest of the steps in this guide will be performed as that user.\n-\n-There is no `python-vm-builder` package in Debian, so we need to install it from source ourselves,\n-\n-```bash\n-wget http://archive.ubuntu.com/ubuntu/pool/universe/v/vm-builder/vm-builder_0.12.4+bzr494.orig.tar.gz\n-echo \"76cbf8c52c391160b2641e7120dbade5afded713afaa6032f733a261f13e6a8e  vm-builder_0.12.4+bzr494.orig.tar.gz\" | sha256sum -c\n-# (verification -- must return OK)\n-tar -zxvf vm-builder_0.12.4+bzr494.orig.tar.gz\n-cd vm-builder-0.12.4+bzr494\n-sudo python setup.py install\n-cd ..\n-```\n-\n-**Note**: When sudo asks for a password, enter the password for the user *debian* not for *root*.\n-\n-Clone the git repositories for bitcoin and Gitian.\n-\n-```bash\n-git clone https://github.com/devrandom/gitian-builder.git\n-git clone https://github.com/bitcoin/bitcoin\n-git clone https://github.com/bitcoin-core/gitian.sigs.git\n-```\n-\n-Setting up the Gitian image\n--------------------------\n-\n-Gitian needs a virtual image of the operating system to build in.\n-Currently this is Ubuntu Trusty x86_64.\n-This image will be copied and used every time that a build is started to\n-make sure that the build is deterministic.\n-Creating the image will take a while, but only has to be done once.\n-\n-Execute the following as user `debian`:\n-\n-```bash\n-cd gitian-builder\n-bin/make-base-vm --lxc --arch amd64 --suite trusty\n-```\n-\n-There will be a lot of warnings printed during the build of the image. These can be ignored.\n-\n-**Note**: When sudo asks for a password, enter the password for the user *debian* not for *root*.\n-\n-Getting and building the inputs\n---------------------------------\n-\n-At this point you have two options, you can either use the automated script (found in [contrib/gitian-build.sh](/contrib/gitian-build.sh)) or you could manually do everything by following this guide. If you're using the automated script, then run it with the \"--setup\" command. Afterwards, run it with the \"--build\" command (example: \"contrib/gitian-build.sh -b signer 0.13.0\"). Otherwise ignore this.\n-\n-Follow the instructions in [doc/release-process.md](release-process.md#fetch-and-create-inputs-first-time-or-when-dependency-versions-change)\n-in the bitcoin repository under 'Fetch and create inputs' to install sources which require\n-manual intervention. Also optionally follow the next step: 'Seed the Gitian sources cache\n-and offline git repositories' which will fetch the remaining files required for building\n-offline.\n-\n-Building Bitcoin Core\n-----------------\n-\n-To build Bitcoin Core (for Linux, OS X and Windows) just follow the steps under 'perform\n-Gitian builds' in [doc/release-process.md](release-process.md#perform-gitian-builds) in the bitcoin repository.\n-\n-This may take some time as it will build all the dependencies needed for each descriptor.\n-These dependencies will be cached after a successful build to avoid rebuilding them when possible.\n-\n-At any time you can check the package installation and build progress with\n-\n-```bash\n-tail -f var/install.log\n-tail -f var/build.log\n-```\n-\n-Output from `gbuild` will look something like\n-\n-    Initialized empty Git repository in /home/debian/gitian-builder/inputs/bitcoin/.git/\n-    remote: Counting objects: 57959, done.\n-    remote: Total 57959 (delta 0), reused 0 (delta 0), pack-reused 57958\n-    Receiving objects: 100% (57959/57959), 53.76 MiB | 484.00 KiB/s, done.\n-    Resolving deltas: 100% (41590/41590), done.\n-    From https://github.com/bitcoin/bitcoin\n-    ... (new tags, new branch etc)\n-    --- Building for trusty amd64 ---\n-    Stopping target if it is up\n-    Making a new image copy\n-    stdin: is not a tty\n-    Starting target\n-    Checking if target is up\n-    Preparing build environment\n-    Updating apt-get repository (log in var/install.log)\n-    Installing additional packages (log in var/install.log)\n-    Grabbing package manifest\n-    stdin: is not a tty\n-    Creating build script (var/build-script)\n-    lxc-start: Connection refused - inotify event with no name (mask 32768)\n-    Running build script (log in var/build.log)\n-\n-Building an alternative repository\n------------------------------------\n-\n-If you want to do a test build of a pull on GitHub it can be useful to point\n-the Gitian builder at an alternative repository, using the same descriptors\n-and inputs.\n-\n-For example:\n-```bash\n-URL=https://github.com/laanwj/bitcoin.git\n-COMMIT=2014_03_windows_unicode_path\n-./bin/gbuild --commit bitcoin=${COMMIT} --url bitcoin=${URL} ../bitcoin/contrib/gitian-descriptors/gitian-linux.yml\n-./bin/gbuild --commit bitcoin=${COMMIT} --url bitcoin=${URL} ../bitcoin/contrib/gitian-descriptors/gitian-win.yml\n-./bin/gbuild --commit bitcoin=${COMMIT} --url bitcoin=${URL} ../bitcoin/contrib/gitian-descriptors/gitian-osx.yml\n-```\n-\n-Building fully offline\n------------------------\n-\n-For building fully offline including attaching signatures to unsigned builds, the detached-sigs repository\n-and the bitcoin git repository with the desired tag must both be available locally, and then gbuild must be\n-told where to find them. It also requires an apt-cacher-ng which is fully-populated but set to offline mode, or\n-manually disabling gitian-builder's use of apt-get to update the VM build environment.\n-\n-To configure apt-cacher-ng as an offline cacher, you will need to first populate its cache with the relevant\n-files. You must additionally patch target-bin/bootstrap-fixup to set its apt sources to something other than\n-plain archive.ubuntu.com: us.archive.ubuntu.com works.\n-\n-So, if you use LXC:\n-\n-```bash\n-export PATH=\"$PATH\":/path/to/gitian-builder/libexec\n-export USE_LXC=1\n-cd /path/to/gitian-builder\n-./libexec/make-clean-vm --suite trusty --arch amd64\n-\n-LXC_ARCH=amd64 LXC_SUITE=trusty on-target -u root apt-get update\n-LXC_ARCH=amd64 LXC_SUITE=trusty on-target -u root \\\n-  -e DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends -y install \\\n-  $( sed -ne '/^packages:/,/[^-] .*/ {/^- .*/{s/\"//g;s/- //;p}}' ../bitcoin/contrib/gitian-descriptors/*|sort|uniq )\n-LXC_ARCH=amd64 LXC_SUITE=trusty on-target -u root apt-get -q -y purge grub\n-LXC_ARCH=amd64 LXC_SUITE=trusty on-target -u root -e DEBIAN_FRONTEND=noninteractive apt-get -y dist-upgrade\n-```\n-\n-And then set offline mode for apt-cacher-ng:\n-\n-```\n-/etc/apt-cacher-ng/acng.conf\n-[...]\n-Offlinemode: 1\n-[...]\n-\n-service apt-cacher-ng restart\n-```\n-\n-Then when building, override the remote URLs that gbuild would otherwise pull from the Gitian descriptors::\n-```bash\n-\n-cd /some/root/path/\n-git clone https://github.com/bitcoin-core/bitcoin-detached-sigs.git\n-\n-BTCPATH=/some/root/path/bitcoin\n-SIGPATH=/some/root/path/bitcoin-detached-sigs\n-\n-./bin/gbuild --url bitcoin=${BTCPATH},signature=${SIGPATH} ../bitcoin/contrib/gitian-descriptors/gitian-win-signer.yml\n-```\n-\n-Signing externally\n--------------------\n-\n-If you want to do the PGP signing on another device, that's also possible; just define `SIGNER` as mentioned\n-and follow the steps in the build process as normal.\n-\n-    gpg: skipped \"laanwj\": secret key not available\n-\n-When you execute `gsign` you will get an error from GPG, which can be ignored. Copy the resulting `.assert` files\n-in `gitian.sigs` to your signing machine and do\n-\n-```bash\n-    gpg --detach-sign ${VERSION}-linux/${SIGNER}/bitcoin-linux-build.assert\n-    gpg --detach-sign ${VERSION}-win/${SIGNER}/bitcoin-win-build.assert\n-    gpg --detach-sign ${VERSION}-osx-unsigned/${SIGNER}/bitcoin-osx-build.assert\n-```\n-\n-This will create the `.sig` files that can be committed together with the `.assert` files to assert your\n-Gitian build.\n-\n-Uploading signatures\n----------------------\n-\n-After building and signing you can push your signatures (both the `.assert` and `.assert.sig` files) to the\n-[bitcoin-core/gitian.sigs](https://github.com/bitcoin-core/gitian.sigs/) repository, or if that's not possible create a pull\n-request. You can also mail the files to Wladimir (laanwj@gmail.com) and he will commit them.\n+This file was moved to [the Bitcoin Core documentation repository](https://github.com/bitcoin-core/docs/blob/master/gitian-building.md) at [https://github.com/bitcoin-core/docs](https://github.com/bitcoin-core/docs)."
      },
      {
        "sha": "8cbb0d8adc1deda1c7c4023611b65521e054ff69",
        "filename": "doc/gitian-building/all_files_in_one_partition.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bf0a08be281dc42241e7f264c2a20515eb4781bb/doc/gitian-building/all_files_in_one_partition.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bf0a08be281dc42241e7f264c2a20515eb4781bb/doc/gitian-building/all_files_in_one_partition.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/all_files_in_one_partition.png?ref=bf0a08be281dc42241e7f264c2a20515eb4781bb"
      },
      {
        "sha": "dd22428e176b874afb2f5b9d1b018592fb0175d0",
        "filename": "doc/gitian-building/create_new_vm.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bf0a08be281dc42241e7f264c2a20515eb4781bb/doc/gitian-building/create_new_vm.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bf0a08be281dc42241e7f264c2a20515eb4781bb/doc/gitian-building/create_new_vm.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/create_new_vm.png?ref=bf0a08be281dc42241e7f264c2a20515eb4781bb"
      },
      {
        "sha": "5f77206b6fa8f9f0f1bbd6d02819d67bf18327ad",
        "filename": "doc/gitian-building/create_vm_file_location_size.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bf0a08be281dc42241e7f264c2a20515eb4781bb/doc/gitian-building/create_vm_file_location_size.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bf0a08be281dc42241e7f264c2a20515eb4781bb/doc/gitian-building/create_vm_file_location_size.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/create_vm_file_location_size.png?ref=bf0a08be281dc42241e7f264c2a20515eb4781bb"
      },
      {
        "sha": "8e29816fab9e7c8f97338ed43f0893f655134a5f",
        "filename": "doc/gitian-building/create_vm_hard_disk.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bf0a08be281dc42241e7f264c2a20515eb4781bb/doc/gitian-building/create_vm_hard_disk.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bf0a08be281dc42241e7f264c2a20515eb4781bb/doc/gitian-building/create_vm_hard_disk.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/create_vm_hard_disk.png?ref=bf0a08be281dc42241e7f264c2a20515eb4781bb"
      },
      {
        "sha": "a157211cf5baf909149e73fddfc2556305f4b123",
        "filename": "doc/gitian-building/create_vm_hard_disk_file_type.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bf0a08be281dc42241e7f264c2a20515eb4781bb/doc/gitian-building/create_vm_hard_disk_file_type.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bf0a08be281dc42241e7f264c2a20515eb4781bb/doc/gitian-building/create_vm_hard_disk_file_type.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/create_vm_hard_disk_file_type.png?ref=bf0a08be281dc42241e7f264c2a20515eb4781bb"
      },
      {
        "sha": "6f42cda73f3cabb02e39ae0309ac67f419a168c7",
        "filename": "doc/gitian-building/create_vm_memsize.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bf0a08be281dc42241e7f264c2a20515eb4781bb/doc/gitian-building/create_vm_memsize.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bf0a08be281dc42241e7f264c2a20515eb4781bb/doc/gitian-building/create_vm_memsize.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/create_vm_memsize.png?ref=bf0a08be281dc42241e7f264c2a20515eb4781bb"
      },
      {
        "sha": "cee16a6c63b4f2dcd592ae8c9cdc02f278fbad81",
        "filename": "doc/gitian-building/create_vm_storage_physical_hard_disk.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bf0a08be281dc42241e7f264c2a20515eb4781bb/doc/gitian-building/create_vm_storage_physical_hard_disk.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bf0a08be281dc42241e7f264c2a20515eb4781bb/doc/gitian-building/create_vm_storage_physical_hard_disk.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/create_vm_storage_physical_hard_disk.png?ref=bf0a08be281dc42241e7f264c2a20515eb4781bb"
      },
      {
        "sha": "7cda038ae47f97ddfaa905478599cafc6572dd1f",
        "filename": "doc/gitian-building/debian_install_10_configure_clock.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bf0a08be281dc42241e7f264c2a20515eb4781bb/doc/gitian-building/debian_install_10_configure_clock.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bf0a08be281dc42241e7f264c2a20515eb4781bb/doc/gitian-building/debian_install_10_configure_clock.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_10_configure_clock.png?ref=bf0a08be281dc42241e7f264c2a20515eb4781bb"
      },
      {
        "sha": "2a648c517f429fb937275d5444a58f4830e8eae4",
        "filename": "doc/gitian-building/debian_install_11_partition_disks.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bf0a08be281dc42241e7f264c2a20515eb4781bb/doc/gitian-building/debian_install_11_partition_disks.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bf0a08be281dc42241e7f264c2a20515eb4781bb/doc/gitian-building/debian_install_11_partition_disks.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_11_partition_disks.png?ref=bf0a08be281dc42241e7f264c2a20515eb4781bb"
      },
      {
        "sha": "0f3acc498e3e9cc04692a9c557a8eecb5029dc25",
        "filename": "doc/gitian-building/debian_install_12_choose_disk.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bf0a08be281dc42241e7f264c2a20515eb4781bb/doc/gitian-building/debian_install_12_choose_disk.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bf0a08be281dc42241e7f264c2a20515eb4781bb/doc/gitian-building/debian_install_12_choose_disk.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_12_choose_disk.png?ref=bf0a08be281dc42241e7f264c2a20515eb4781bb"
      },
      {
        "sha": "c8ef0b37ad6232f87593ea448beaba089b568a91",
        "filename": "doc/gitian-building/debian_install_14_finish.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bf0a08be281dc42241e7f264c2a20515eb4781bb/doc/gitian-building/debian_install_14_finish.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bf0a08be281dc42241e7f264c2a20515eb4781bb/doc/gitian-building/debian_install_14_finish.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_14_finish.png?ref=bf0a08be281dc42241e7f264c2a20515eb4781bb"
      },
      {
        "sha": "d8de00dec68c826485034c698079e5808f7dadfd",
        "filename": "doc/gitian-building/debian_install_15_write_changes.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bf0a08be281dc42241e7f264c2a20515eb4781bb/doc/gitian-building/debian_install_15_write_changes.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bf0a08be281dc42241e7f264c2a20515eb4781bb/doc/gitian-building/debian_install_15_write_changes.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_15_write_changes.png?ref=bf0a08be281dc42241e7f264c2a20515eb4781bb"
      },
      {
        "sha": "0bd985b38c113ed9bbbe03808ace284476680edc",
        "filename": "doc/gitian-building/debian_install_16_choose_a_mirror.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bf0a08be281dc42241e7f264c2a20515eb4781bb/doc/gitian-building/debian_install_16_choose_a_mirror.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bf0a08be281dc42241e7f264c2a20515eb4781bb/doc/gitian-building/debian_install_16_choose_a_mirror.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_16_choose_a_mirror.png?ref=bf0a08be281dc42241e7f264c2a20515eb4781bb"
      },
      {
        "sha": "2c19919f64b62d89883dc8e1308f179978b95ca4",
        "filename": "doc/gitian-building/debian_install_18_proxy_settings.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bf0a08be281dc42241e7f264c2a20515eb4781bb/doc/gitian-building/debian_install_18_proxy_settings.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bf0a08be281dc42241e7f264c2a20515eb4781bb/doc/gitian-building/debian_install_18_proxy_settings.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_18_proxy_settings.png?ref=bf0a08be281dc42241e7f264c2a20515eb4781bb"
      },
      {
        "sha": "5430456b14f098d9e3561653352b826d19a2c38a",
        "filename": "doc/gitian-building/debian_install_19_software_selection.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bf0a08be281dc42241e7f264c2a20515eb4781bb/doc/gitian-building/debian_install_19_software_selection.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bf0a08be281dc42241e7f264c2a20515eb4781bb/doc/gitian-building/debian_install_19_software_selection.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_19_software_selection.png?ref=bf0a08be281dc42241e7f264c2a20515eb4781bb"
      },
      {
        "sha": "216502e1c6eb6930ce60c1a36e7476e6fb8781d9",
        "filename": "doc/gitian-building/debian_install_1_boot_menu.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bf0a08be281dc42241e7f264c2a20515eb4781bb/doc/gitian-building/debian_install_1_boot_menu.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bf0a08be281dc42241e7f264c2a20515eb4781bb/doc/gitian-building/debian_install_1_boot_menu.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_1_boot_menu.png?ref=bf0a08be281dc42241e7f264c2a20515eb4781bb"
      },
      {
        "sha": "d853c1587188c5fd4ede94ab00f9d8b6731674ac",
        "filename": "doc/gitian-building/debian_install_20_install_grub.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bf0a08be281dc42241e7f264c2a20515eb4781bb/doc/gitian-building/debian_install_20_install_grub.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bf0a08be281dc42241e7f264c2a20515eb4781bb/doc/gitian-building/debian_install_20_install_grub.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_20_install_grub.png?ref=bf0a08be281dc42241e7f264c2a20515eb4781bb"
      },
      {
        "sha": "493ab806a673f5c8ee47db0bb5de6af0d5042b03",
        "filename": "doc/gitian-building/debian_install_21_install_grub_bootloader.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bf0a08be281dc42241e7f264c2a20515eb4781bb/doc/gitian-building/debian_install_21_install_grub_bootloader.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bf0a08be281dc42241e7f264c2a20515eb4781bb/doc/gitian-building/debian_install_21_install_grub_bootloader.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_21_install_grub_bootloader.png?ref=bf0a08be281dc42241e7f264c2a20515eb4781bb"
      },
      {
        "sha": "7c4445585bc9982a5015959dba70d73b01885e08",
        "filename": "doc/gitian-building/debian_install_22_finish_installation.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bf0a08be281dc42241e7f264c2a20515eb4781bb/doc/gitian-building/debian_install_22_finish_installation.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bf0a08be281dc42241e7f264c2a20515eb4781bb/doc/gitian-building/debian_install_22_finish_installation.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_22_finish_installation.png?ref=bf0a08be281dc42241e7f264c2a20515eb4781bb"
      },
      {
        "sha": "0228ae2c011daeababc75b915a12b28b702456c0",
        "filename": "doc/gitian-building/debian_install_2_select_a_language.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bf0a08be281dc42241e7f264c2a20515eb4781bb/doc/gitian-building/debian_install_2_select_a_language.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bf0a08be281dc42241e7f264c2a20515eb4781bb/doc/gitian-building/debian_install_2_select_a_language.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_2_select_a_language.png?ref=bf0a08be281dc42241e7f264c2a20515eb4781bb"
      },
      {
        "sha": "7b18fba97577b521944f909ed57fd251942a9eab",
        "filename": "doc/gitian-building/debian_install_3_select_location.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bf0a08be281dc42241e7f264c2a20515eb4781bb/doc/gitian-building/debian_install_3_select_location.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bf0a08be281dc42241e7f264c2a20515eb4781bb/doc/gitian-building/debian_install_3_select_location.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_3_select_location.png?ref=bf0a08be281dc42241e7f264c2a20515eb4781bb"
      },
      {
        "sha": "8e46117de4879a6de8b276813bef12c219cb4e8b",
        "filename": "doc/gitian-building/debian_install_4_configure_keyboard.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bf0a08be281dc42241e7f264c2a20515eb4781bb/doc/gitian-building/debian_install_4_configure_keyboard.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bf0a08be281dc42241e7f264c2a20515eb4781bb/doc/gitian-building/debian_install_4_configure_keyboard.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_4_configure_keyboard.png?ref=bf0a08be281dc42241e7f264c2a20515eb4781bb"
      },
      {
        "sha": "8e3720f24322a54ef33893e8eff95383158bf3d9",
        "filename": "doc/gitian-building/debian_install_5_configure_the_network.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bf0a08be281dc42241e7f264c2a20515eb4781bb/doc/gitian-building/debian_install_5_configure_the_network.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bf0a08be281dc42241e7f264c2a20515eb4781bb/doc/gitian-building/debian_install_5_configure_the_network.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_5_configure_the_network.png?ref=bf0a08be281dc42241e7f264c2a20515eb4781bb"
      },
      {
        "sha": "7a986d92f48ca3755e37993d098053321109751d",
        "filename": "doc/gitian-building/debian_install_6_domain_name.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bf0a08be281dc42241e7f264c2a20515eb4781bb/doc/gitian-building/debian_install_6_domain_name.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bf0a08be281dc42241e7f264c2a20515eb4781bb/doc/gitian-building/debian_install_6_domain_name.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_6_domain_name.png?ref=bf0a08be281dc42241e7f264c2a20515eb4781bb"
      },
      {
        "sha": "dcade119676ed7e0c0f92cff6d6a064929a07a07",
        "filename": "doc/gitian-building/debian_install_6a_set_up_root_password.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bf0a08be281dc42241e7f264c2a20515eb4781bb/doc/gitian-building/debian_install_6a_set_up_root_password.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bf0a08be281dc42241e7f264c2a20515eb4781bb/doc/gitian-building/debian_install_6a_set_up_root_password.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_6a_set_up_root_password.png?ref=bf0a08be281dc42241e7f264c2a20515eb4781bb"
      },
      {
        "sha": "6763c6e08ade2b17f050da257a76132f916e38f5",
        "filename": "doc/gitian-building/debian_install_7_set_up_user_fullname.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bf0a08be281dc42241e7f264c2a20515eb4781bb/doc/gitian-building/debian_install_7_set_up_user_fullname.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bf0a08be281dc42241e7f264c2a20515eb4781bb/doc/gitian-building/debian_install_7_set_up_user_fullname.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_7_set_up_user_fullname.png?ref=bf0a08be281dc42241e7f264c2a20515eb4781bb"
      },
      {
        "sha": "bb04de96d23bdaa3e29fbe19891e42b881dd0a99",
        "filename": "doc/gitian-building/debian_install_8_set_up_username.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bf0a08be281dc42241e7f264c2a20515eb4781bb/doc/gitian-building/debian_install_8_set_up_username.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bf0a08be281dc42241e7f264c2a20515eb4781bb/doc/gitian-building/debian_install_8_set_up_username.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_8_set_up_username.png?ref=bf0a08be281dc42241e7f264c2a20515eb4781bb"
      },
      {
        "sha": "981f1181d79d0d7fe2138f036d0f1bb41ec472fa",
        "filename": "doc/gitian-building/debian_install_9_user_password.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bf0a08be281dc42241e7f264c2a20515eb4781bb/doc/gitian-building/debian_install_9_user_password.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bf0a08be281dc42241e7f264c2a20515eb4781bb/doc/gitian-building/debian_install_9_user_password.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_9_user_password.png?ref=bf0a08be281dc42241e7f264c2a20515eb4781bb"
      },
      {
        "sha": "14cdd5ba5b52cc32fbc0da62cf3671c3679b8d79",
        "filename": "doc/gitian-building/debian_root_login.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bf0a08be281dc42241e7f264c2a20515eb4781bb/doc/gitian-building/debian_root_login.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bf0a08be281dc42241e7f264c2a20515eb4781bb/doc/gitian-building/debian_root_login.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_root_login.png?ref=bf0a08be281dc42241e7f264c2a20515eb4781bb"
      },
      {
        "sha": "9e714fd15451837980b9d12a931c294fc962b2a2",
        "filename": "doc/gitian-building/network_settings.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bf0a08be281dc42241e7f264c2a20515eb4781bb/doc/gitian-building/network_settings.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bf0a08be281dc42241e7f264c2a20515eb4781bb/doc/gitian-building/network_settings.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/network_settings.png?ref=bf0a08be281dc42241e7f264c2a20515eb4781bb"
      },
      {
        "sha": "9e1fa2af20f48d482892b722b7288600bece322a",
        "filename": "doc/gitian-building/port_forwarding_rules.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bf0a08be281dc42241e7f264c2a20515eb4781bb/doc/gitian-building/port_forwarding_rules.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bf0a08be281dc42241e7f264c2a20515eb4781bb/doc/gitian-building/port_forwarding_rules.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/port_forwarding_rules.png?ref=bf0a08be281dc42241e7f264c2a20515eb4781bb"
      },
      {
        "sha": "59bc093e2c3d35bee0d1bdc50f11f2cf2a6fdafe",
        "filename": "doc/gitian-building/select_startup_disk.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bf0a08be281dc42241e7f264c2a20515eb4781bb/doc/gitian-building/select_startup_disk.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bf0a08be281dc42241e7f264c2a20515eb4781bb/doc/gitian-building/select_startup_disk.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/select_startup_disk.png?ref=bf0a08be281dc42241e7f264c2a20515eb4781bb"
      },
      {
        "sha": "75f9013f296b9ee0ffc79e19fdf43819eab5007b",
        "filename": "doc/init.md",
        "status": "modified",
        "additions": 14,
        "deletions": 14,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/doc/init.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/doc/init.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/init.md?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -10,14 +10,14 @@ can be found in the contrib/init folder.\n     contrib/init/bitcoind.conf:       Upstart service configuration file\n     contrib/init/bitcoind.init:       CentOS compatible SysV style init script\n \n-1. Service User\n+Service User\n ---------------------------------\n \n All three Linux startup configurations assume the existence of a \"bitcoin\" user\n and group.  They must be created before attempting to use these scripts.\n The OS X configuration assumes bitcoind will be set up for the current user.\n \n-2. Configuration\n+Configuration\n ---------------------------------\n \n At a bare minimum, bitcoind requires that the rpcpassword setting be set\n@@ -46,10 +46,10 @@ relative to the data directory. `wallet` *only* supports relative paths.\n For an example configuration file that describes the configuration settings,\n see `contrib/debian/examples/bitcoin.conf`.\n \n-3. Paths\n+Paths\n ---------------------------------\n \n-3a) Linux\n+### Linux\n \n All three configurations assume several paths that might need to be adjusted.\n \n@@ -65,17 +65,17 @@ reasons to make the configuration file and data directory only readable by the\n bitcoin user and group.  Access to bitcoin-cli and other bitcoind rpc clients\n can then be controlled by group membership.\n \n-3b) Mac OS X\n+### Mac OS X\n \n Binary:              `/usr/local/bin/bitcoind`  \n Configuration file:  `~/Library/Application Support/Bitcoin/bitcoin.conf`  \n-Data directory:      `~/Library/Application Support/Bitcoin`\n-Lock file:           `~/Library/Application Support/Bitcoin/.lock`\n+Data directory:      `~/Library/Application Support/Bitcoin`  \n+Lock file:           `~/Library/Application Support/Bitcoin/.lock`  \n \n-4. Installing Service Configuration\n+Installing Service Configuration\n -----------------------------------\n \n-4a) systemd\n+### systemd\n \n Installing this .service file consists of just copying it to\n /usr/lib/systemd/system directory, followed by the command\n@@ -84,30 +84,30 @@ Installing this .service file consists of just copying it to\n To test, run `systemctl start bitcoind` and to enable for system startup run\n `systemctl enable bitcoind`\n \n-4b) OpenRC\n+### OpenRC\n \n Rename bitcoind.openrc to bitcoind and drop it in /etc/init.d.  Double\n check ownership and permissions and make it executable.  Test it with\n `/etc/init.d/bitcoind start` and configure it to run on startup with\n `rc-update add bitcoind`\n \n-4c) Upstart (for Debian/Ubuntu based distributions)\n+### Upstart (for Debian/Ubuntu based distributions)\n \n Drop bitcoind.conf in /etc/init.  Test by running `service bitcoind start`\n it will automatically start on reboot.\n \n NOTE: This script is incompatible with CentOS 5 and Amazon Linux 2014 as they\n use old versions of Upstart and do not supply the start-stop-daemon utility.\n \n-4d) CentOS\n+### CentOS\n \n Copy bitcoind.init to /etc/init.d/bitcoind. Test by running `service bitcoind start`.\n \n Using this script, you can adjust the path and flags to the bitcoind program by\n setting the BITCOIND and FLAGS environment variables in the file\n /etc/sysconfig/bitcoind. You can also use the DAEMONOPTS environment variable here.\n \n-4e) Mac OS X\n+### Mac OS X\n \n Copy org.bitcoin.bitcoind.plist into ~/Library/LaunchAgents. Load the launch agent by\n running `launchctl load ~/Library/LaunchAgents/org.bitcoin.bitcoind.plist`.\n@@ -118,7 +118,7 @@ NOTE: This approach is intended for those wanting to run bitcoind as the current\n You will need to modify org.bitcoin.bitcoind.plist if you intend to use it as a\n Launch Daemon with a dedicated bitcoin user.\n \n-5. Auto-respawn\n+Auto-respawn\n -----------------------------------\n \n Auto respawning is currently only configured for Upstart and systemd."
      },
      {
        "sha": "67876384439fc4f5a9ca2aebcc8f2dcfb312a8ca",
        "filename": "doc/man/bitcoin-cli.1",
        "status": "modified",
        "additions": 22,
        "deletions": 5,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/doc/man/bitcoin-cli.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/doc/man/bitcoin-cli.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/bitcoin-cli.1?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -1,9 +1,9 @@\n .\\\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.47.4.\n-.TH BITCOIN-CLI \"1\" \"February 2017\" \"bitcoin-cli v0.14.99.0\" \"User Commands\"\n+.TH BITCOIN-CLI \"1\" \"September 2017\" \"bitcoin-cli v0.15.99.0\" \"User Commands\"\n .SH NAME\n-bitcoin-cli \\- manual page for bitcoin-cli v0.14.99.0\n+bitcoin-cli \\- manual page for bitcoin-cli v0.15.99.0\n .SH DESCRIPTION\n-Bitcoin Core RPC client version v0.14.99.0\n+Bitcoin Core RPC client version v0.15.99.0\n .SS \"Usage:\"\n .TP\n bitcoin\\-cli [options] <command> [params]\n@@ -64,12 +64,29 @@ Password for JSON\\-RPC connections\n .HP\n \\fB\\-rpcclienttimeout=\\fR<n>\n .IP\n-Timeout during HTTP requests (default: 900)\n+Timeout in seconds during HTTP requests, or 0 for no timeout. (default:\n+900)\n+.HP\n+\\fB\\-stdinrpcpass\\fR\n+.TP\n+Read RPC password from standard input as a single line.\n+When combined\n+.IP\n+with \\fB\\-stdin\\fR, the first line from standard input is used for the\n+RPC password.\n .HP\n \\fB\\-stdin\\fR\n .IP\n Read extra arguments from standard input, one per line until EOF/Ctrl\\-D\n-(recommended for sensitive information such as passphrases)\n+(recommended for sensitive information such as passphrases).\n+When combined with \\fB\\-stdinrpcpass\\fR, the first line from standard\n+input is used for the RPC password.\n+.HP\n+\\fB\\-rpcwallet=\\fR<walletname>\n+.IP\n+Send RPC for non\\-default wallet on RPC server (argument is wallet\n+filename in bitcoind directory, required if bitcoind/\\-Qt runs\n+with multiple wallets)\n .SH COPYRIGHT\n Copyright (C) 2009-2017 The Bitcoin Core developers\n "
      },
      {
        "sha": "ae35d50ac3475a4caf8a909740f0c9ecfdee3b1f",
        "filename": "doc/man/bitcoin-qt.1",
        "status": "modified",
        "additions": 63,
        "deletions": 52,
        "changes": 115,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/doc/man/bitcoin-qt.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/doc/man/bitcoin-qt.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/bitcoin-qt.1?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -1,9 +1,9 @@\n .\\\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.47.4.\n-.TH BITCOIN-QT \"1\" \"February 2017\" \"bitcoin-qt v0.14.99.0\" \"User Commands\"\n+.TH BITCOIN-QT \"1\" \"September 2017\" \"bitcoin-qt v0.15.99.0\" \"User Commands\"\n .SH NAME\n-bitcoin-qt \\- manual page for bitcoin-qt v0.14.99.0\n+bitcoin-qt \\- manual page for bitcoin-qt v0.15.99.0\n .SH DESCRIPTION\n-Bitcoin Core version v0.14.99.0 (64\\-bit)\n+Bitcoin Core version v0.15.99.0 (64\\-bit)\n Usage:\n .IP\n bitcoin\\-qt [command\\-line options]\n@@ -32,9 +32,9 @@ block hash)\n If this block is in the chain assume that it and its ancestors are valid\n and potentially skip their script verification (0 to verify all,\n default:\n-00000000000000000013176bf8d7dfeab4e1db31dc93bc311b436e82ab226b90,\n+0000000000000000003b9ce759c2a087d52abc4266f8f4ebd6d768b89defa50a,\n testnet:\n-00000000000128796ee387cf110ccb9d2f36cffaf7f73079c995377c65ac0dcc)\n+0000000002e9e7b00e1f6dc5123a04aad68dd0f0968d8c7aa45f6640795c37b1)\n .HP\n \\fB\\-conf=\\fR<file>\n .IP\n@@ -46,7 +46,7 @@ Specify data directory\n .HP\n \\fB\\-dbcache=\\fR<n>\n .IP\n-Set database cache size in megabytes (4 to 16384, default: 300)\n+Set database cache size in megabytes (4 to 16384, default: 450)\n .HP\n \\fB\\-loadblock=\\fR<file>\n .IP\n@@ -65,6 +65,10 @@ Keep the transaction memory pool below <n> megabytes (default: 300)\n Do not keep transactions in the mempool longer than <n> hours (default:\n 336)\n .HP\n+\\fB\\-persistmempool\\fR\n+.IP\n+Whether to save the mempool on shutdown and load on restart (default: 1)\n+.HP\n \\fB\\-blockreconstructionextratxn=\\fR<n>\n .IP\n Extra transactions to keep in memory for compact block reconstructions\n@@ -131,8 +135,8 @@ for IPv6\n .HP\n \\fB\\-connect=\\fR<ip>\n .IP\n-Connect only to the specified node(s); \\fB\\-noconnect\\fR or \\fB\\-connect\\fR=\\fI\\,0\\/\\fR alone to\n-disable automatic connections\n+Connect only to the specified node(s); \\fB\\-connect\\fR=\\fI\\,0\\/\\fR disables automatic\n+connections\n .HP\n \\fB\\-discover\\fR\n .IP\n@@ -146,7 +150,7 @@ Allow DNS lookups for \\fB\\-addnode\\fR, \\fB\\-seednode\\fR and \\fB\\-connect\\fR (def\n \\fB\\-dnsseed\\fR\n .IP\n Query for peer addresses via DNS lookup, if low on addresses (default: 1\n-unless \\fB\\-connect\\fR/\\-noconnect)\n+unless \\fB\\-connect\\fR used)\n .HP\n \\fB\\-externalip=\\fR<ip>\n .IP\n@@ -158,8 +162,7 @@ Always query for peer addresses via DNS lookup (default: 0)\n .HP\n \\fB\\-listen\\fR\n .IP\n-Accept connections from outside (default: 1 if no \\fB\\-proxy\\fR or\n-\\fB\\-connect\\fR/\\-noconnect)\n+Accept connections from outside (default: 1 if no \\fB\\-proxy\\fR or \\fB\\-connect\\fR)\n .HP\n \\fB\\-listenonion\\fR\n .IP\n@@ -214,11 +217,6 @@ Connect through SOCKS5 proxy\n Randomize credentials for every proxy connection. This enables Tor\n stream isolation (default: 1)\n .HP\n-\\fB\\-rpcserialversion\\fR\n-.IP\n-Sets the serialization of raw transaction or block hex returned in\n-non\\-verbose mode, non\\-segwit(0) or segwit(1) (default: 1)\n-.HP\n \\fB\\-seednode=\\fR<ip>\n .IP\n Connect to a node to retrieve peer addresses, and disconnect\n@@ -253,16 +251,6 @@ times. Whitelisted peers cannot be DoS banned and their\n transactions are always relayed, even if they are already in the\n mempool, useful e.g. for a gateway\n .HP\n-\\fB\\-whitelistrelay\\fR\n-.IP\n-Accept relayed transactions received from whitelisted peers even when\n-not relaying transactions (default: 1)\n-.HP\n-\\fB\\-whitelistforcerelay\\fR\n-.IP\n-Force relay of transactions from whitelisted peers even if they violate\n-local relay policy (default: 1)\n-.HP\n \\fB\\-maxuploadtarget=\\fR<n>\n .IP\n Tries to keep outbound traffic under the given target (in MiB per 24h),\n@@ -276,13 +264,21 @@ Do not load the wallet and disable wallet RPC calls\n .HP\n \\fB\\-keypool=\\fR<n>\n .IP\n-Set key pool size to <n> (default: 100)\n+Set key pool size to <n> (default: 1000)\n .HP\n \\fB\\-fallbackfee=\\fR<amt>\n .IP\n A fee rate (in BTC/kB) that will be used when fee estimation has\n insufficient data (default: 0.0002)\n .HP\n+\\fB\\-discardfee=\\fR<amt>\n+.IP\n+The fee rate (in BTC/kB) that indicates your tolerance for discarding\n+change by adding it to the fee (default: 0.0001). Note: An output\n+is discarded if it is dust at this rate, but we will always\n+discard up to the dust relay fee and a discard fee above that is\n+limited by the fee estimate for the longest target\n+.HP\n \\fB\\-mintxfee=\\fR<amt>\n .IP\n Fees (in BTC/kB) smaller than this are considered zero fee for\n@@ -309,11 +305,6 @@ Spend unconfirmed change when sending transactions (default: 1)\n If paytxfee is not set, include enough fee so transactions begin\n confirmation on average within n blocks (default: 6)\n .HP\n-\\fB\\-usehd\\fR\n-.IP\n-Use hierarchical deterministic key generation (HD) after BIP32. Only has\n-effect during wallet creation/first start (default: 1)\n-.HP\n \\fB\\-walletrbf\\fR\n .IP\n Send transactions with full\\-RBF opt\\-in enabled (default: 0)\n@@ -370,10 +361,16 @@ Append comment to the user agent string\n .IP\n Output debugging information (default: 0, supplying <category> is\n optional). If <category> is not supplied or if <category> = 1,\n-output all debugging information.<category> can be: addrman,\n-alert, bench, cmpctblock, coindb, db, http, libevent, lock,\n-mempool, mempoolrej, net, proxy, prune, rand, reindex, rpc,\n-selectcoins, tor, zmq, qt.\n+output all debugging information. <category> can be: net, tor,\n+mempool, http, bench, zmq, db, rpc, estimatefee, addrman,\n+selectcoins, reindex, cmpctblock, rand, prune, proxy, mempoolrej,\n+libevent, coindb, qt, leveldb.\n+.HP\n+\\fB\\-debugexclude=\\fR<category>\n+.IP\n+Exclude debugging information for a category. Can be used in conjunction\n+with \\fB\\-debug\\fR=\\fI\\,1\\/\\fR to output debug logs for all categories except one\n+or more specified categories.\n .HP\n \\fB\\-help\\-debug\\fR\n .IP\n@@ -387,11 +384,6 @@ Include IP addresses in debug output (default: 0)\n .IP\n Prepend debug output with timestamp (default: 1)\n .HP\n-\\fB\\-minrelaytxfee=\\fR<amt>\n-.IP\n-Fees (in BTC/kB) smaller than this are considered zero fee for relaying,\n-mining and transaction creation (default: 0.00001)\n-.HP\n \\fB\\-maxtxfee=\\fR<amt>\n .IP\n Maximum total fees (in BTC) to use in a single wallet transaction or raw\n@@ -431,21 +423,32 @@ Maximum size of data in data carrier transactions we relay and mine\n \\fB\\-mempoolreplacement\\fR\n .IP\n Enable transaction replacement in the memory pool (default: 1)\n+.HP\n+\\fB\\-minrelaytxfee=\\fR<amt>\n+.IP\n+Fees (in BTC/kB) smaller than this are considered zero fee for relaying,\n+mining and transaction creation (default: 0.00001)\n+.HP\n+\\fB\\-whitelistrelay\\fR\n+.IP\n+Accept relayed transactions received from whitelisted peers even when\n+not relaying transactions (default: 1)\n+.HP\n+\\fB\\-whitelistforcerelay\\fR\n+.IP\n+Force relay of transactions from whitelisted peers even if they violate\n+local relay policy (default: 1)\n .PP\n Block creation options:\n .HP\n \\fB\\-blockmaxweight=\\fR<n>\n .IP\n-Set maximum BIP141 block weight (default: 3000000)\n+Set maximum BIP141 block weight (default: 3996000)\n .HP\n \\fB\\-blockmaxsize=\\fR<n>\n .IP\n-Set maximum block size in bytes (default: 750000)\n-.HP\n-\\fB\\-blockprioritysize=\\fR<n>\n-.IP\n-Set maximum size of high\\-priority/low\\-fee transactions in bytes\n-(default: 0)\n+Set maximum BIP141 block weight to this * 4. Deprecated, use\n+blockmaxweight\n .HP\n \\fB\\-blockmintxfee=\\fR<amt>\n .IP\n@@ -462,11 +465,14 @@ Accept command line and JSON\\-RPC commands\n .IP\n Accept public REST requests (default: 0)\n .HP\n-\\fB\\-rpcbind=\\fR<addr>\n+\\fB\\-rpcbind=\\fR<addr>[:port]\n .IP\n-Bind to given address to listen for JSON\\-RPC connections. Use\n-[host]:port notation for IPv6. This option can be specified\n-multiple times (default: bind to all interfaces)\n+Bind to given address to listen for JSON\\-RPC connections. This option is\n+ignored unless \\fB\\-rpcallowip\\fR is also passed. Port is optional and\n+overrides \\fB\\-rpcport\\fR. Use [host]:port notation for IPv6. This\n+option can be specified multiple times (default: 127.0.0.1 and\n+::1 i.e., localhost, or if \\fB\\-rpcallowip\\fR has been specified,\n+0.0.0.0 and :: i.e., all addresses)\n .HP\n \\fB\\-rpccookiefile=\\fR<loc>\n .IP\n@@ -501,6 +507,11 @@ single IP (e.g. 1.2.3.4), a network/netmask (e.g.\n 1.2.3.4/255.255.255.0) or a network/CIDR (e.g. 1.2.3.4/24). This\n option can be specified multiple times\n .HP\n+\\fB\\-rpcserialversion\\fR\n+.IP\n+Sets the serialization of raw transaction or block hex returned in\n+non\\-verbose mode, non\\-segwit(0) or segwit(1) (default: 1)\n+.HP\n \\fB\\-rpcthreads=\\fR<n>\n .IP\n Set the number of threads to service RPC calls (default: 4)"
      },
      {
        "sha": "8b72fbde0505d54f3403ca14484e0d180a6319ec",
        "filename": "doc/man/bitcoin-tx.1",
        "status": "modified",
        "additions": 8,
        "deletions": 3,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/doc/man/bitcoin-tx.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/doc/man/bitcoin-tx.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/bitcoin-tx.1?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -1,9 +1,9 @@\n .\\\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.47.4.\n-.TH BITCOIN-TX \"1\" \"February 2017\" \"bitcoin-tx v0.14.99.0\" \"User Commands\"\n+.TH BITCOIN-TX \"1\" \"September 2017\" \"bitcoin-tx v0.15.99.0\" \"User Commands\"\n .SH NAME\n-bitcoin-tx \\- manual page for bitcoin-tx v0.14.99.0\n+bitcoin-tx \\- manual page for bitcoin-tx v0.15.99.0\n .SH DESCRIPTION\n-Bitcoin Core bitcoin\\-tx utility version v0.14.99.0\n+Bitcoin Core bitcoin\\-tx utility version v0.15.99.0\n .SS \"Usage:\"\n .TP\n bitcoin\\-tx [options] <hex\\-tx> [commands]\n@@ -63,6 +63,11 @@ nversion=N\n .IP\n Set TX version to N\n .IP\n+replaceable(=N)\n+.IP\n+Set RBF opt\\-in sequence number for input N (if not provided, opt\\-in all\n+available inputs)\n+.IP\n outaddr=VALUE:ADDRESS\n .IP\n Add address\\-based output to TX"
      },
      {
        "sha": "baf747436f82a3ca8d2e10f922a62a4c2b0e1b95",
        "filename": "doc/man/bitcoind.1",
        "status": "modified",
        "additions": 63,
        "deletions": 52,
        "changes": 115,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/doc/man/bitcoind.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/doc/man/bitcoind.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/bitcoind.1?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -1,9 +1,9 @@\n .\\\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.47.4.\n-.TH BITCOIND \"1\" \"February 2017\" \"bitcoind v0.14.99.0\" \"User Commands\"\n+.TH BITCOIND \"1\" \"September 2017\" \"bitcoind v0.15.99.0\" \"User Commands\"\n .SH NAME\n-bitcoind \\- manual page for bitcoind v0.14.99.0\n+bitcoind \\- manual page for bitcoind v0.15.99.0\n .SH DESCRIPTION\n-Bitcoin Core Daemon version v0.14.99.0\n+Bitcoin Core Daemon version v0.15.99.0\n .SS \"Usage:\"\n .TP\n bitcoind [options]\n@@ -33,9 +33,9 @@ block hash)\n If this block is in the chain assume that it and its ancestors are valid\n and potentially skip their script verification (0 to verify all,\n default:\n-00000000000000000013176bf8d7dfeab4e1db31dc93bc311b436e82ab226b90,\n+0000000000000000003b9ce759c2a087d52abc4266f8f4ebd6d768b89defa50a,\n testnet:\n-00000000000128796ee387cf110ccb9d2f36cffaf7f73079c995377c65ac0dcc)\n+0000000002e9e7b00e1f6dc5123a04aad68dd0f0968d8c7aa45f6640795c37b1)\n .HP\n \\fB\\-conf=\\fR<file>\n .IP\n@@ -51,7 +51,7 @@ Specify data directory\n .HP\n \\fB\\-dbcache=\\fR<n>\n .IP\n-Set database cache size in megabytes (4 to 16384, default: 300)\n+Set database cache size in megabytes (4 to 16384, default: 450)\n .HP\n \\fB\\-loadblock=\\fR<file>\n .IP\n@@ -70,6 +70,10 @@ Keep the transaction memory pool below <n> megabytes (default: 300)\n Do not keep transactions in the mempool longer than <n> hours (default:\n 336)\n .HP\n+\\fB\\-persistmempool\\fR\n+.IP\n+Whether to save the mempool on shutdown and load on restart (default: 1)\n+.HP\n \\fB\\-blockreconstructionextratxn=\\fR<n>\n .IP\n Extra transactions to keep in memory for compact block reconstructions\n@@ -136,8 +140,8 @@ for IPv6\n .HP\n \\fB\\-connect=\\fR<ip>\n .IP\n-Connect only to the specified node(s); \\fB\\-noconnect\\fR or \\fB\\-connect\\fR=\\fI\\,0\\/\\fR alone to\n-disable automatic connections\n+Connect only to the specified node(s); \\fB\\-connect\\fR=\\fI\\,0\\/\\fR disables automatic\n+connections\n .HP\n \\fB\\-discover\\fR\n .IP\n@@ -151,7 +155,7 @@ Allow DNS lookups for \\fB\\-addnode\\fR, \\fB\\-seednode\\fR and \\fB\\-connect\\fR (def\n \\fB\\-dnsseed\\fR\n .IP\n Query for peer addresses via DNS lookup, if low on addresses (default: 1\n-unless \\fB\\-connect\\fR/\\-noconnect)\n+unless \\fB\\-connect\\fR used)\n .HP\n \\fB\\-externalip=\\fR<ip>\n .IP\n@@ -163,8 +167,7 @@ Always query for peer addresses via DNS lookup (default: 0)\n .HP\n \\fB\\-listen\\fR\n .IP\n-Accept connections from outside (default: 1 if no \\fB\\-proxy\\fR or\n-\\fB\\-connect\\fR/\\-noconnect)\n+Accept connections from outside (default: 1 if no \\fB\\-proxy\\fR or \\fB\\-connect\\fR)\n .HP\n \\fB\\-listenonion\\fR\n .IP\n@@ -219,11 +222,6 @@ Connect through SOCKS5 proxy\n Randomize credentials for every proxy connection. This enables Tor\n stream isolation (default: 1)\n .HP\n-\\fB\\-rpcserialversion\\fR\n-.IP\n-Sets the serialization of raw transaction or block hex returned in\n-non\\-verbose mode, non\\-segwit(0) or segwit(1) (default: 1)\n-.HP\n \\fB\\-seednode=\\fR<ip>\n .IP\n Connect to a node to retrieve peer addresses, and disconnect\n@@ -258,16 +256,6 @@ times. Whitelisted peers cannot be DoS banned and their\n transactions are always relayed, even if they are already in the\n mempool, useful e.g. for a gateway\n .HP\n-\\fB\\-whitelistrelay\\fR\n-.IP\n-Accept relayed transactions received from whitelisted peers even when\n-not relaying transactions (default: 1)\n-.HP\n-\\fB\\-whitelistforcerelay\\fR\n-.IP\n-Force relay of transactions from whitelisted peers even if they violate\n-local relay policy (default: 1)\n-.HP\n \\fB\\-maxuploadtarget=\\fR<n>\n .IP\n Tries to keep outbound traffic under the given target (in MiB per 24h),\n@@ -281,13 +269,21 @@ Do not load the wallet and disable wallet RPC calls\n .HP\n \\fB\\-keypool=\\fR<n>\n .IP\n-Set key pool size to <n> (default: 100)\n+Set key pool size to <n> (default: 1000)\n .HP\n \\fB\\-fallbackfee=\\fR<amt>\n .IP\n A fee rate (in BTC/kB) that will be used when fee estimation has\n insufficient data (default: 0.0002)\n .HP\n+\\fB\\-discardfee=\\fR<amt>\n+.IP\n+The fee rate (in BTC/kB) that indicates your tolerance for discarding\n+change by adding it to the fee (default: 0.0001). Note: An output\n+is discarded if it is dust at this rate, but we will always\n+discard up to the dust relay fee and a discard fee above that is\n+limited by the fee estimate for the longest target\n+.HP\n \\fB\\-mintxfee=\\fR<amt>\n .IP\n Fees (in BTC/kB) smaller than this are considered zero fee for\n@@ -314,11 +310,6 @@ Spend unconfirmed change when sending transactions (default: 1)\n If paytxfee is not set, include enough fee so transactions begin\n confirmation on average within n blocks (default: 6)\n .HP\n-\\fB\\-usehd\\fR\n-.IP\n-Use hierarchical deterministic key generation (HD) after BIP32. Only has\n-effect during wallet creation/first start (default: 1)\n-.HP\n \\fB\\-walletrbf\\fR\n .IP\n Send transactions with full\\-RBF opt\\-in enabled (default: 0)\n@@ -375,10 +366,16 @@ Append comment to the user agent string\n .IP\n Output debugging information (default: 0, supplying <category> is\n optional). If <category> is not supplied or if <category> = 1,\n-output all debugging information.<category> can be: addrman,\n-alert, bench, cmpctblock, coindb, db, http, libevent, lock,\n-mempool, mempoolrej, net, proxy, prune, rand, reindex, rpc,\n-selectcoins, tor, zmq.\n+output all debugging information. <category> can be: net, tor,\n+mempool, http, bench, zmq, db, rpc, estimatefee, addrman,\n+selectcoins, reindex, cmpctblock, rand, prune, proxy, mempoolrej,\n+libevent, coindb, qt, leveldb.\n+.HP\n+\\fB\\-debugexclude=\\fR<category>\n+.IP\n+Exclude debugging information for a category. Can be used in conjunction\n+with \\fB\\-debug\\fR=\\fI\\,1\\/\\fR to output debug logs for all categories except one\n+or more specified categories.\n .HP\n \\fB\\-help\\-debug\\fR\n .IP\n@@ -392,11 +389,6 @@ Include IP addresses in debug output (default: 0)\n .IP\n Prepend debug output with timestamp (default: 1)\n .HP\n-\\fB\\-minrelaytxfee=\\fR<amt>\n-.IP\n-Fees (in BTC/kB) smaller than this are considered zero fee for relaying,\n-mining and transaction creation (default: 0.00001)\n-.HP\n \\fB\\-maxtxfee=\\fR<amt>\n .IP\n Maximum total fees (in BTC) to use in a single wallet transaction or raw\n@@ -436,21 +428,32 @@ Maximum size of data in data carrier transactions we relay and mine\n \\fB\\-mempoolreplacement\\fR\n .IP\n Enable transaction replacement in the memory pool (default: 1)\n+.HP\n+\\fB\\-minrelaytxfee=\\fR<amt>\n+.IP\n+Fees (in BTC/kB) smaller than this are considered zero fee for relaying,\n+mining and transaction creation (default: 0.00001)\n+.HP\n+\\fB\\-whitelistrelay\\fR\n+.IP\n+Accept relayed transactions received from whitelisted peers even when\n+not relaying transactions (default: 1)\n+.HP\n+\\fB\\-whitelistforcerelay\\fR\n+.IP\n+Force relay of transactions from whitelisted peers even if they violate\n+local relay policy (default: 1)\n .PP\n Block creation options:\n .HP\n \\fB\\-blockmaxweight=\\fR<n>\n .IP\n-Set maximum BIP141 block weight (default: 3000000)\n+Set maximum BIP141 block weight (default: 3996000)\n .HP\n \\fB\\-blockmaxsize=\\fR<n>\n .IP\n-Set maximum block size in bytes (default: 750000)\n-.HP\n-\\fB\\-blockprioritysize=\\fR<n>\n-.IP\n-Set maximum size of high\\-priority/low\\-fee transactions in bytes\n-(default: 0)\n+Set maximum BIP141 block weight to this * 4. Deprecated, use\n+blockmaxweight\n .HP\n \\fB\\-blockmintxfee=\\fR<amt>\n .IP\n@@ -467,11 +470,14 @@ Accept command line and JSON\\-RPC commands\n .IP\n Accept public REST requests (default: 0)\n .HP\n-\\fB\\-rpcbind=\\fR<addr>\n+\\fB\\-rpcbind=\\fR<addr>[:port]\n .IP\n-Bind to given address to listen for JSON\\-RPC connections. Use\n-[host]:port notation for IPv6. This option can be specified\n-multiple times (default: bind to all interfaces)\n+Bind to given address to listen for JSON\\-RPC connections. This option is\n+ignored unless \\fB\\-rpcallowip\\fR is also passed. Port is optional and\n+overrides \\fB\\-rpcport\\fR. Use [host]:port notation for IPv6. This\n+option can be specified multiple times (default: 127.0.0.1 and\n+::1 i.e., localhost, or if \\fB\\-rpcallowip\\fR has been specified,\n+0.0.0.0 and :: i.e., all addresses)\n .HP\n \\fB\\-rpccookiefile=\\fR<loc>\n .IP\n@@ -506,6 +512,11 @@ single IP (e.g. 1.2.3.4), a network/netmask (e.g.\n 1.2.3.4/255.255.255.0) or a network/CIDR (e.g. 1.2.3.4/24). This\n option can be specified multiple times\n .HP\n+\\fB\\-rpcserialversion\\fR\n+.IP\n+Sets the serialization of raw transaction or block hex returned in\n+non\\-verbose mode, non\\-segwit(0) or segwit(1) (default: 1)\n+.HP\n \\fB\\-rpcthreads=\\fR<n>\n .IP\n Set the number of threads to service RPC calls (default: 4)"
      },
      {
        "sha": "4ecca7897cb7db793ee082b3d732e85ec9040649",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 57,
        "deletions": 68,
        "changes": 125,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -8,94 +8,83 @@ Bitcoin Core version *version* is now available from:\n This is a new major version release, including new features, various bugfixes\n and performance improvements, as well as updated translations.\n \n-Please report bugs using the issue tracker at github:\n+Please report bugs using the issue tracker at GitHub:\n \n   <https://github.com/bitcoin/bitcoin/issues>\n \n To receive security and update notifications, please subscribe to:\n \n   <https://bitcoincore.org/en/list/announcements/join/>\n \n+How to Upgrade\n+==============\n+\n+If you are running an older version, shut it down. Wait until it has completely\n+shut down (which might take a few minutes for older versions), then run the \n+installer (on Windows) or just copy over `/Applications/Bitcoin-Qt` (on Mac)\n+or `bitcoind`/`bitcoin-qt` (on Linux).\n+\n+The first time you run version 0.15.0, your chainstate database will be converted to a\n+new format, which will take anywhere from a few minutes to half an hour,\n+depending on the speed of your machine.\n+\n+Note that the block database format also changed in version 0.8.0 and there is no\n+automatic upgrade code from before version 0.8 to version 0.15.0. Upgrading\n+directly from 0.7.x and earlier without redownloading the blockchain is not supported.\n+However, as usual, old wallet versions are still supported.\n+\n+Downgrading warning\n+-------------------\n+\n+The chainstate database for this release is not compatible with previous\n+releases, so if you run 0.15 and then decide to switch back to any\n+older version, you will need to run the old release with the `-reindex-chainstate`\n+option to rebuild the chainstate data structures in the old format.\n+\n+If your node has pruning enabled, this will entail re-downloading and\n+processing the entire blockchain.\n+\n Compatibility\n ==============\n \n Bitcoin Core is extensively tested on multiple operating systems using\n-the Linux kernel, macOS 10.8+, and Windows Vista and later.\n-\n-Microsoft ended support for Windows XP on [April 8th, 2014](https://www.microsoft.com/en-us/WindowsForBusiness/end-of-xp-support).\n-No attempt is made to prevent installing or running the software on Windows XP, you\n-can still do so at your own risk but be aware that there are known instabilities.\n-Please do not report issues about Windows XP to the issue tracker.\n+the Linux kernel, macOS 10.8+, and Windows Vista and later. Windows XP is not supported.\n \n Bitcoin Core should also work on most other Unix-like systems but is not\n frequently tested on them.\n \n Notable changes\n ===============\n \n-Low-level RPC changes\n+Miner block size limiting deprecated\n+------------------------------------\n+\n+Though blockmaxweight has been preferred for limiting the size of blocks returned by\n+getblocktemplate since 0.13.0, blockmaxsize remained as an option for those who wished\n+to limit their block size directly. Using this option resulted in a few UI issues as\n+well as non-optimal fee selection and ever-so-slightly worse performance, and has thus\n+now been deprecated. Further, the blockmaxsize option is now used only to calculate an\n+implied blockmaxweight, instead of limiting block size directly. Any miners who wish\n+to limit their blocks by size, instead of by weight, will have to do so manually by\n+removing transactions from their block template directly.\n+\n+HD-wallets by default\n ---------------------\n+Due to a backward-incompatible change in the wallet database, wallets created\n+with version 0.16.0 will be rejected by previous versions. Also, version 0.16.0\n+will only create hierarchical deterministic (HD) wallets.\n \n-- The new database model no longer stores information about transaction\n-  versions of unspent outputs. This means that:\n-  - The `gettxout` RPC no longer has a `version` field in the response.\n-  - The `gettxoutsetinfo` RPC reports `hash_serialized_2` instead of `hash_serialized`,\n-    which does not commit to the transaction versions of unspent outputs, but does\n-    commit to the height and coinbase information.\n-  - The `gettxoutsetinfo` response now contains `disk_size` and `bogosize` instead of\n-    `bytes_serialized`. The first is a more accurate estimate of actual disk usage, but\n-    is not deterministic. The second is unrelated to disk usage, but is a\n-    database-independent metric of UTXO set size: it counts every UTXO entry as 50 + the\n-    length of its scriptPubKey.\n-  - The `getutxos` REST path no longer reports the `txvers` field in JSON format,\n-    and always reports 0 for transaction versions in the binary format\n-\n-\n-- Error codes have been updated to be more accurate for the following error cases:\n-  - `getblock` now returns RPC_MISC_ERROR if the block can't be found on disk (for\n-  example if the block has been pruned). Previously returned RPC_INTERNAL_ERROR.\n-  - `pruneblockchain` now returns RPC_MISC_ERROR if the blocks cannot be pruned\n-  because the node is not in pruned mode. Previously returned RPC_METHOD_NOT_FOUND.\n-  - `pruneblockchain` now returns RPC_INVALID_PARAMETER if the blocks cannot be pruned\n-  because the supplied timestamp is too late. Previously returned RPC_INTERNAL_ERROR.\n-  - `pruneblockchain` now returns RPC_MISC_ERROR if the blocks cannot be pruned\n-  because the blockchain is too short. Previously returned RPC_INTERNAL_ERROR.\n-  - `setban` now returns RPC_CLIENT_INVALID_IP_OR_SUBNET if the supplied IP address\n-  or subnet is invalid. Previously returned RPC_CLIENT_NODE_ALREADY_ADDED.\n-  - `setban` now returns RPC_CLIENT_INVALID_IP_OR_SUBNET if the user tries to unban\n-  a node that has not previously been banned. Previously returned RPC_MISC_ERROR.\n-  - `removeprunedfunds` now returns RPC_WALLET_ERROR if bitcoind is unable to remove\n-  the transaction. Previously returned RPC_INTERNAL_ERROR.\n-  - `removeprunedfunds` now returns RPC_INVALID_PARAMETER if the transaction does not\n-  exist in the wallet. Previously returned RPC_INTERNAL_ERROR.\n-  - `fundrawtransaction` now returns RPC_INVALID_ADDRESS_OR_KEY if an invalid change\n-  address is provided. Previously returned RPC_INVALID_PARAMETER.\n-  - `fundrawtransaction` now returns RPC_WALLET_ERROR if bitcoind is unable to create\n-  the transaction. The error message provides further details. Previously returned\n-  RPC_INTERNAL_ERROR.\n-  - `bumpfee` now returns RPC_INVALID_PARAMETER if the provided transaction has\n-  descendants in the wallet. Previously returned RPC_MISC_ERROR.\n-  - `bumpfee` now returns RPC_INVALID_PARAMETER if the provided transaction has\n-  descendants in the mempool. Previously returned RPC_MISC_ERROR.\n-  - `bumpfee` now returns RPC_WALLET_ERROR if the provided transaction has\n-  has been mined or conflicts with a mined transaction. Previously returned\n-  RPC_INVALID_ADDRESS_OR_KEY.\n-  - `bumpfee` now returns RPC_WALLET_ERROR if the provided transaction is not\n-  BIP 125 replaceable. Previously returned RPC_INVALID_ADDRESS_OR_KEY.\n-  - `bumpfee` now returns RPC_WALLET_ERROR if the provided transaction has already\n-  been bumped by a different transaction. Previously returned RPC_INVALID_REQUEST.\n-  - `bumpfee` now returns RPC_WALLET_ERROR if the provided transaction contains\n-  inputs which don't belong to this wallet. Previously returned RPC_INVALID_ADDRESS_OR_KEY.\n-  - `bumpfee` now returns RPC_WALLET_ERROR if the provided transaction has multiple change\n-  outputs. Previously returned RPC_MISC_ERROR.\n-  - `bumpfee` now returns RPC_WALLET_ERROR if the provided transaction has no change\n-  output. Previously returned RPC_MISC_ERROR.\n-  - `bumpfee` now returns RPC_WALLET_ERROR if the fee is too high. Previously returned\n-  RPC_MISC_ERROR.\n-  - `bumpfee` now returns RPC_WALLET_ERROR if the fee is too low. Previously returned\n-  RPC_MISC_ERROR.\n-  - `bumpfee` now returns RPC_WALLET_ERROR if the change output is too small to bump the\n-  fee. Previously returned RPC_MISC_ERROR.\n+Low-level RPC changes\n+----------------------\n+- The \"currentblocksize\" value in getmininginfo has been removed.\n+- The deprecated RPC `getinfo` was removed. It is recommended that the more specific RPCs are used:\n+  * `getblockchaininfo`\n+  * `getnetworkinfo`\n+  * `getwalletinfo`\n+  * `getmininginfo`\n+\n+- `dumpwallet` no longer allows overwriting files. This is a security measure\n+  as well as prevents dangerous user mistakes.\n \n Credits\n ======="
      },
      {
        "sha": "53ab02cbb0242957ba3697655d848a9461ab7455",
        "filename": "doc/release-notes/release-notes-0.15.0.1.md",
        "status": "added",
        "additions": 87,
        "deletions": 0,
        "changes": 87,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/doc/release-notes/release-notes-0.15.0.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/doc/release-notes/release-notes-0.15.0.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.15.0.1.md?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -0,0 +1,87 @@\n+Bitcoin Core version *0.15.0.1* is now available from:\n+\n+  <https://bitcoin.org/bin/bitcoin-core-0.15.0.1/>\n+\n+and\n+\n+  <https://bitcoincore.org/bin/bitcoin-core-0.15.0.1/>\n+\n+This is a minor bug fix for 0.15.0.\n+\n+Please report bugs using the issue tracker at GitHub:\n+\n+  <https://github.com/bitcoin/bitcoin/issues>\n+\n+To receive security and update notifications, please subscribe to:\n+\n+  <https://bitcoincore.org/en/list/announcements/join/>\n+\n+How to Upgrade\n+==============\n+\n+If you are running an older version, shut it down. Wait until it has completely\n+shut down (which might take a few minutes for older versions), then run the \n+installer (on Windows) or just copy over `/Applications/Bitcoin-Qt` (on Mac)\n+or `bitcoind`/`bitcoin-qt` (on Linux).\n+\n+The first time you run version 0.15.0 or higher, your chainstate database will\n+be converted to a new format, which will take anywhere from a few minutes to\n+half an hour, depending on the speed of your machine.\n+\n+The file format of `fee_estimates.dat` changed in version 0.15.0. Hence, a\n+downgrade from version 0.15.0 or upgrade to version 0.15.0 will cause all fee\n+estimates to be discarded.\n+\n+Note that the block database format also changed in version 0.8.0 and there is no\n+automatic upgrade code from before version 0.8 to version 0.15.0. Upgrading\n+directly from 0.7.x and earlier without redownloading the blockchain is not supported.\n+However, as usual, old wallet versions are still supported.\n+\n+Downgrading warning\n+-------------------\n+\n+The chainstate database for this release is not compatible with previous\n+releases, so if you run 0.15 and then decide to switch back to any\n+older version, you will need to run the old release with the `-reindex-chainstate`\n+option to rebuild the chainstate data structures in the old format.\n+\n+If your node has pruning enabled, this will entail re-downloading and\n+processing the entire blockchain.\n+\n+Compatibility\n+==============\n+\n+Bitcoin Core is extensively tested on multiple operating systems using\n+the Linux kernel, macOS 10.8+, and Windows Vista and later. Windows XP is not supported.\n+\n+Bitcoin Core should also work on most other Unix-like systems but is not\n+frequently tested on them.\n+\n+Notable changes\n+===============\n+\n+GUI startup crash issue\n+-------------------------\n+\n+After upgrade to 0.15.0, some clients would crash at startup because a custom\n+fee setting was configured that no longer exists in the GUI. This is a minimal\n+patch to avoid this issue from occuring.\n+\n+0.15.0.1 Change log\n+====================\n+\n+-  #11332 `46c8d23` Fix possible crash with invalid nCustomFeeRadio in QSettings (achow101, TheBlueMatt)\n+\n+Also the manpages were updated, as this was forgotten for 0.15.0.\n+\n+Credits\n+=======\n+\n+Thanks to everyone who directly contributed to this release:\n+\n+- Andrew Chow\n+- Matt Corallo\n+- Jonas Schnelli\n+- Wladimir J. van der Laan\n+\n+As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/)."
      },
      {
        "sha": "29816cacf73024538d20e24a261fa9565b05801f",
        "filename": "doc/release-notes/release-notes-0.15.0.md",
        "status": "added",
        "additions": 878,
        "deletions": 0,
        "changes": 878,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/doc/release-notes/release-notes-0.15.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/doc/release-notes/release-notes-0.15.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.15.0.md?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -0,0 +1,878 @@\n+Bitcoin Core version *0.15.0* is now available from:\n+\n+  <https://bitcoin.org/bin/bitcoin-core-0.15.0/>\n+\n+This is a new major version release, including new features, various bugfixes\n+and performance improvements, as well as updated translations.\n+\n+Please report bugs using the issue tracker at GitHub:\n+\n+  <https://github.com/bitcoin/bitcoin/issues>\n+\n+To receive security and update notifications, please subscribe to:\n+\n+  <https://bitcoincore.org/en/list/announcements/join/>\n+\n+How to Upgrade\n+==============\n+\n+If you are running an older version, shut it down. Wait until it has completely\n+shut down (which might take a few minutes for older versions), then run the \n+installer (on Windows) or just copy over `/Applications/Bitcoin-Qt` (on Mac)\n+or `bitcoind`/`bitcoin-qt` (on Linux).\n+\n+The first time you run version 0.15.0, your chainstate database will be converted to a\n+new format, which will take anywhere from a few minutes to half an hour,\n+depending on the speed of your machine.\n+\n+The file format of `fee_estimates.dat` changed in version 0.15.0. Hence, a\n+downgrade from version 0.15.0 or upgrade to version 0.15.0 will cause all fee\n+estimates to be discarded.\n+\n+Note that the block database format also changed in version 0.8.0 and there is no\n+automatic upgrade code from before version 0.8 to version 0.15.0. Upgrading\n+directly from 0.7.x and earlier without redownloading the blockchain is not supported.\n+However, as usual, old wallet versions are still supported.\n+\n+Downgrading warning\n+-------------------\n+\n+The chainstate database for this release is not compatible with previous\n+releases, so if you run 0.15 and then decide to switch back to any\n+older version, you will need to run the old release with the `-reindex-chainstate`\n+option to rebuild the chainstate data structures in the old format.\n+\n+If your node has pruning enabled, this will entail re-downloading and\n+processing the entire blockchain.\n+\n+Compatibility\n+==============\n+\n+Bitcoin Core is extensively tested on multiple operating systems using\n+the Linux kernel, macOS 10.8+, and Windows Vista and later. Windows XP is not supported.\n+\n+Bitcoin Core should also work on most other Unix-like systems but is not\n+frequently tested on them.\n+\n+Notes for 0.15.0\n+================\n+\n+Current SegWit support\n+----------------------\n+\n+Version 0.15.0 supports adding a segregated witness address via the `addwitnessaddress` RPC, but\n+please note that this is a testing/expert RPC, which does not guarantee recovery from backup. Only use\n+this RPC if you know what you are doing. More complete wallet support for segregated witness is coming\n+in a next version.\n+\n+Rescanning with encrypted wallets\n+---------------------------------\n+\n+As in previous versions, when using an encrypted HD wallet, the keypool cannot be topped up without unlocking\n+the wallet. This means that currently, in order to recover from a backup of an encrypted HD wallet, the user\n+must unlock the wallet with a really long timeout and manually trigger a rescan, otherwise they risk missing\n+some keys when auto-topup cannot run. Unfortunately there is no `rescan` RPC in this version, that will be\n+included in a future version, so for now a rescan can be triggered using one of the `import*` commands, using\n+a dummy address generated by another (trusted) wallet.\n+\n+Notable changes\n+===============\n+\n+Performance Improvements\n+------------------------\n+\n+Version 0.15 contains a number of significant performance improvements, which make\n+Initial Block Download, startup, transaction and block validation much faster:\n+\n+- The chainstate database (which is used for tracking UTXOs) has been changed\n+  from a per-transaction model to a per-output model (See [PR 10195](https://github.com/bitcoin/bitcoin/pull/10195)). Advantages of this model\n+  are that it:\n+    - avoids the CPU overhead of deserializing and serializing the unused outputs;\n+    - has more predictable memory usage;\n+    - uses simpler code;\n+    - is adaptable to various future cache flushing strategies.\n+\n+  As a result, validating the blockchain during Initial Block Download (IBD) and reindex\n+  is ~30-40% faster, uses 10-20% less memory, and flushes to disk far less frequently.\n+  The only downside is that the on-disk database is 15% larger. During the conversion from the previous format\n+  a few extra gigabytes may be used.\n+- Earlier versions experienced a spike in memory usage while flushing UTXO updates to disk.\n+  As a result, only half of the available memory was actually used as cache, and the other half was\n+  reserved to accommodate flushing. This is no longer the case (See [PR 10148](https://github.com/bitcoin/bitcoin/pull/10148)), and the entirety of\n+  the available cache (see `-dbcache`) is now actually used as cache. This reduces the flushing\n+  frequency by a factor 2 or more.\n+- In previous versions, signature validation for transactions has been cached when the\n+  transaction is accepted to the mempool. Version 0.15 extends this to cache the entire script\n+  validity (See [PR 10192](https://github.com/bitcoin/bitcoin/pull/10192)). This means that if a transaction in a block has already been accepted to the\n+  mempool, the scriptSig does not need to be re-evaluated. Empirical tests show that\n+  this results in new block validation being 40-50% faster.\n+- LevelDB has been upgraded to version 1.20 (See [PR 10544](https://github.com/bitcoin/bitcoin/pull/10544)). This version contains hardware acceleration for CRC\n+  on architectures supporting SSE 4.2. As a result, synchronization and block validation are now faster.\n+- SHA256 hashing has been optimized for architectures supporting SSE 4 (See [PR 10821](https://github.com/bitcoin/bitcoin/pull/10821)). SHA256 is around\n+  50% faster on supported hardware, which results in around 5% faster IBD and block\n+  validation. In version 0.15, SHA256 hardware optimization is disabled in release builds by\n+  default, but can be enabled by using `--enable-experimental-asm` when building.\n+- Refill of the keypool no longer flushes the wallet between each key which resulted in a ~20x speedup in creating a new wallet. Part of this speedup was used to increase the default keypool to 1000 keys to make recovery more robust. (See [PR 10831](https://github.com/bitcoin/bitcoin/pull/10831)).\n+\n+Fee Estimation Improvements\n+---------------------------\n+\n+Fee estimation has been significantly improved in version 0.15, with more accurate fee estimates used by the wallet and a wider range of options for advanced users of the `estimatesmartfee` and `estimaterawfee` RPCs (See [PR 10199](https://github.com/bitcoin/bitcoin/pull/10199)).\n+\n+### Changes to internal logic and wallet behavior\n+\n+- Internally, estimates are now tracked on 3 different time horizons. This allows for longer targets and means estimates adjust more quickly to changes in conditions.\n+- Estimates can now be *conservative* or *economical*. *Conservative* estimates use longer time horizons to produce an estimate which is less susceptible to rapid changes in fee conditions. *Economical* estimates use shorter time horizons and will be more affected by short-term changes in fee conditions. Economical estimates may be considerably lower during periods of low transaction activity (for example over weekends), but may result in transactions being unconfirmed if prevailing fees increase rapidly.\n+- By default, the wallet will use conservative fee estimates to increase the reliability of transactions being confirmed within the desired target. For transactions that are marked as replaceable, the wallet will use an economical estimate by default, since the fee can be 'bumped' if the fee conditions change rapidly (See [PR 10589](https://github.com/bitcoin/bitcoin/pull/10589)).\n+- Estimates can now be made for confirmation targets up to 1008 blocks (one week).\n+- More data on historical fee rates is stored, leading to more precise fee estimates.\n+- Transactions which leave the mempool due to eviction or other non-confirmed reasons are now taken into account by the fee estimation logic, leading to more accurate fee estimates.\n+- The fee estimation logic will make sure enough data has been gathered to return a meaningful estimate. If there is insufficient data, a fallback default fee is used.\n+\n+### Changes to fee estimate RPCs\n+\n+- The `estimatefee` RPC is now deprecated in favor of using only `estimatesmartfee` (which is the implementation used by the GUI)\n+- The `estimatesmartfee` RPC interface has been changed (See [PR 10707](https://github.com/bitcoin/bitcoin/pull/10707)):\n+    - The `nblocks` argument has been renamed to `conf_target` (to be consistent with other RPC methods).\n+    - An `estimate_mode` argument has been added. This argument takes one of the following strings: `CONSERVATIVE`, `ECONOMICAL` or `UNSET` (which defaults to `CONSERVATIVE`).\n+    - The RPC return object now contains an `errors` member, which returns errors encountered during processing.\n+    - If Bitcoin Core has not been running for long enough and has not seen enough blocks or transactions to produce an accurate fee estimation, an error will be returned (previously a value of -1 was used to indicate an error, which could be confused for a feerate).\n+- A new `estimaterawfee` RPC is added to provide raw fee data. External clients can query and use this data in their own fee estimation logic.\n+\n+Multi-wallet support\n+--------------------\n+\n+Bitcoin Core now supports loading multiple, separate wallets (See [PR 8694](https://github.com/bitcoin/bitcoin/pull/8694), [PR 10849](https://github.com/bitcoin/bitcoin/pull/10849)). The wallets are completely separated, with individual balances, keys and received transactions.\n+\n+Multi-wallet is enabled by using more than one `-wallet` argument when starting Bitcoin, either on the command line or in the Bitcoin config file.\n+\n+**In Bitcoin-Qt, only the first wallet will be displayed and accessible for creating and signing transactions.** GUI selectable multiple wallets will be supported in a future version. However, even in 0.15 other loaded wallets will remain synchronized to the node's current tip in the background. This can be useful if running a pruned node, since loading a wallet where the most recent sync is beyond the pruned height results in having to download and revalidate the whole blockchain. Continuing to synchronize all wallets in the background avoids this problem.\n+\n+Bitcoin Core 0.15.0 contains the following changes to the RPC interface and `bitcoin-cli` for multi-wallet:\n+\n+* When running Bitcoin Core with a single wallet, there are **no** changes to the RPC interface or `bitcoin-cli`. All RPC calls and `bitcoin-cli` commands continue to work as before.\n+* When running Bitcoin Core with multi-wallet, all *node-level* RPC methods continue to work as before. HTTP RPC requests should be send to the normal `<RPC IP address>:<RPC port>/` endpoint, and `bitcoin-cli` commands should be run as before. A *node-level* RPC method is any method which does not require access to the wallet.\n+* When running Bitcoin Core with multi-wallet, *wallet-level* RPC methods must specify the wallet for which they're intended in every request. HTTP RPC requests should be send to the `<RPC IP address>:<RPC port>/wallet/<wallet name>/` endpoint, for example `127.0.0.1:8332/wallet/wallet1.dat/`. `bitcoin-cli` commands should be run with a `-rpcwallet` option, for example `bitcoin-cli -rpcwallet=wallet1.dat getbalance`.\n+* A new *node-level* `listwallets` RPC method is added to display which wallets are currently loaded. The names returned by this method are the same as those used in the HTTP endpoint and for the `rpcwallet` argument.\n+\n+Note that while multi-wallet is now fully supported, the RPC multi-wallet interface should be considered unstable for version 0.15.0, and there may backwards-incompatible changes in future versions.\n+\n+Replace-by-fee control in the GUI\n+---------------------------------\n+\n+Bitcoin Core has supported creating opt-in replace-by-fee (RBF) transactions\n+since version 0.12.0, and since version 0.14.0 has included a `bumpfee` RPC method to\n+replace unconfirmed opt-in RBF transactions with a new transaction that pays\n+a higher fee.\n+\n+In version 0.15, creating an opt-in RBF transaction and replacing the unconfirmed\n+transaction with a higher-fee transaction are both supported in the GUI (See [PR 9592](https://github.com/bitcoin/bitcoin/pull/9592)).\n+\n+Removal of Coin Age Priority\n+----------------------------\n+\n+In previous versions of Bitcoin Core, a portion of each block could be reserved for transactions based on the age and value of UTXOs they spent. This concept (Coin Age Priority) is a policy choice by miners, and there are no consensus rules around the inclusion of Coin Age Priority transactions in blocks. In practice, only a few miners continue to use Coin Age Priority for transaction selection in blocks. Bitcoin Core 0.15 removes all remaining support for Coin Age Priority (See [PR 9602](https://github.com/bitcoin/bitcoin/pull/9602)). This has the following implications:\n+\n+- The concept of *free transactions* has been removed. High Coin Age Priority transactions would previously be allowed to be relayed even if they didn't attach a miner fee. This is no longer possible since there is no concept of Coin Age Priority. The `-limitfreerelay` and `-relaypriority` options which controlled relay of free transactions have therefore been removed.\n+- The `-sendfreetransactions` option has been removed, since almost all miners do not include transactions which do not attach a transaction fee.\n+- The `-blockprioritysize` option has been removed.\n+- The `estimatepriority` and `estimatesmartpriority` RPCs have been removed.\n+- The `getmempoolancestors`, `getmempooldescendants`, `getmempoolentry` and `getrawmempool` RPCs no longer return `startingpriority` and `currentpriority`.\n+- The `prioritisetransaction` RPC no longer takes a `priority_delta` argument, which is replaced by a `dummy` argument for backwards compatibility with clients using positional arguments. The RPC is still used to change the apparent fee-rate of the transaction by using the `fee_delta` argument.\n+- `-minrelaytxfee` can now be set to 0. If `minrelaytxfee` is set, then fees smaller than `minrelaytxfee` (per kB) are rejected from relaying, mining and transaction creation. This defaults to 1000 satoshi/kB.\n+- The `-printpriority` option has been updated to only output the fee rate and hash of transactions included in a block by the mining code.\n+\n+Mempool Persistence Across Restarts\n+-----------------------------------\n+\n+Version 0.14 introduced mempool persistence across restarts (the mempool is saved to a `mempool.dat` file in the data directory prior to shutdown and restores the mempool when the node is restarted). Version 0.15 allows this feature to be switched on or off using the `-persistmempool` command-line option (See [PR 9966](https://github.com/bitcoin/bitcoin/pull/9966)). By default, the option is set to true, and the mempool is saved on shutdown and reloaded on startup. If set to false, the `mempool.dat` file will not be loaded on startup or saved on shutdown.\n+\n+New RPC methods\n+---------------\n+\n+Version 0.15 introduces several new RPC methods:\n+\n+- `abortrescan` stops current wallet rescan, e.g. when triggered by an `importprivkey` call (See [PR 10208](https://github.com/bitcoin/bitcoin/pull/10208)).\n+- `combinerawtransaction` accepts a JSON array of raw transactions and combines them into a single raw transaction (See [PR 10571](https://github.com/bitcoin/bitcoin/pull/10571)).\n+- `estimaterawfee` returns raw fee data so that customized logic can be implemented to analyze the data and calculate estimates. See [Fee Estimation Improvements](#fee-estimation-improvements) for full details on changes to the fee estimation logic and interface.\n+- `getchaintxstats` returns statistics about the total number and rate of transactions\n+  in the chain (See [PR 9733](https://github.com/bitcoin/bitcoin/pull/9733)).\n+- `listwallets` lists wallets which are currently loaded. See the *Multi-wallet* section\n+  of these release notes for full details (See [Multi-wallet support](#multi-wallet-support)).\n+- `uptime` returns the total runtime of the `bitcoind` server since its last start (See [PR 10400](https://github.com/bitcoin/bitcoin/pull/10400)).\n+\n+Low-level RPC changes\n+---------------------\n+\n+- When using Bitcoin Core in multi-wallet mode, RPC requests for wallet methods must specify\n+  the wallet that they're intended for. See [Multi-wallet support](#multi-wallet-support) for full details.\n+\n+- The new database model no longer stores information about transaction\n+  versions of unspent outputs (See [Performance improvements](#performance-improvements)). This means that:\n+  - The `gettxout` RPC no longer has a `version` field in the response.\n+  - The `gettxoutsetinfo` RPC reports `hash_serialized_2` instead of `hash_serialized`,\n+    which does not commit to the transaction versions of unspent outputs, but does\n+    commit to the height and coinbase information.\n+  - The `getutxos` REST path no longer reports the `txvers` field in JSON format,\n+    and always reports 0 for transaction versions in the binary format\n+\n+- The `estimatefee` RPC is deprecated. Clients should switch to using the `estimatesmartfee` RPC, which returns better fee estimates. See [Fee Estimation Improvements](#fee-estimation-improvements) for full details on changes to the fee estimation logic and interface.\n+\n+- The `gettxoutsetinfo` response now contains `disk_size` and `bogosize` instead of\n+  `bytes_serialized`. The first is a more accurate estimate of actual disk usage, but\n+  is not deterministic. The second is unrelated to disk usage, but is a\n+  database-independent metric of UTXO set size: it counts every UTXO entry as 50 + the\n+  length of its scriptPubKey (See [PR 10426](https://github.com/bitcoin/bitcoin/pull/10426)).\n+\n+- `signrawtransaction` can no longer be used to combine multiple transactions into a single transaction. Instead, use the new `combinerawtransaction` RPC (See [PR 10571](https://github.com/bitcoin/bitcoin/pull/10571)).\n+\n+- `fundrawtransaction` no longer accepts a `reserveChangeKey` option. This option used to allow RPC users to fund a raw transaction using an key from the keypool for the change address without removing it from the available keys in the keypool. The key could then be re-used for a `getnewaddress` call, which could potentially result in confusing or dangerous behaviour (See [PR 10784](https://github.com/bitcoin/bitcoin/pull/10784)).\n+\n+- `estimatepriority` and `estimatesmartpriority` have been removed. See [Removal of Coin Age Priority](#removal-of-coin-age-priority).\n+\n+- The `listunspent` RPC now takes a `query_options` argument (see [PR 8952](https://github.com/bitcoin/bitcoin/pull/8952)), which is a JSON object\n+  containing one or more of the following members:\n+  - `minimumAmount` - a number specifying the minimum value of each UTXO\n+  - `maximumAmount` - a number specifying the maximum value of each UTXO\n+  - `maximumCount` - a number specifying the minimum number of UTXOs\n+  - `minimumSumAmount` - a number specifying the minimum sum value of all UTXOs\n+\n+- The `getmempoolancestors`, `getmempooldescendants`, `getmempoolentry` and `getrawmempool` RPCs no longer return `startingpriority` and `currentpriority`. See [Removal of Coin Age Priority](#removal-of-coin-age-priority).\n+\n+- The `dumpwallet` RPC now returns the full absolute path to the dumped wallet. It\n+  used to return no value, even if successful (See [PR 9740](https://github.com/bitcoin/bitcoin/pull/9740)).\n+\n+- In the `getpeerinfo` RPC, the return object for each peer now returns an `addrbind` member, which contains the ip address and port of the connection to the peer. This is in addition to the `addrlocal` member which contains the ip address and port of the local node as reported by the peer (See [PR 10478](https://github.com/bitcoin/bitcoin/pull/10478)).\n+\n+- The `disconnectnode` RPC can now disconnect a node specified by node ID (as well as by IP address/port). To disconnect a node based on node ID, call the RPC with the new `nodeid` argument (See [PR 10143](https://github.com/bitcoin/bitcoin/pull/10143)).\n+\n+- The second argument in `prioritisetransaction` has been renamed from `priority_delta` to `dummy` since Bitcoin Core no longer has a concept of coin age priority. The `dummy` argument has no functional effect, but is retained for positional argument compatibility. See [Removal of Coin Age Priority](#removal-of-coin-age-priority).\n+\n+- The `resendwallettransactions` RPC throws an error if the `-walletbroadcast` option is set to false (See [PR 10995](https://github.com/bitcoin/bitcoin/pull/10995)).\n+\n+- The second argument in the `submitblock` RPC argument has been renamed from `parameters` to `dummy`. This argument never had any effect, and the renaming is simply to communicate this fact to the user (See [PR 10191](https://github.com/bitcoin/bitcoin/pull/10191))\n+  (Clients should, however, use positional arguments for `submitblock` in order to be compatible with BIP 22.)\n+\n+- The `verbose` argument of `getblock` has been renamed to `verbosity` and now takes an integer from 0 to 2. Verbose level 0 is equivalent to `verbose=false`. Verbose level 1 is equivalent to `verbose=true`. Verbose level 2 will give the full transaction details of each transaction in the output as given by `getrawtransaction`. The old behavior of using the `verbose` named argument and a boolean value is still maintained for compatibility.\n+\n+- Error codes have been updated to be more accurate for the following error cases (See [PR 9853](https://github.com/bitcoin/bitcoin/pull/9853)):\n+  - `getblock` now returns RPC_MISC_ERROR if the block can't be found on disk (for\n+  example if the block has been pruned). Previously returned RPC_INTERNAL_ERROR.\n+  - `pruneblockchain` now returns RPC_MISC_ERROR if the blocks cannot be pruned\n+  because the node is not in pruned mode. Previously returned RPC_METHOD_NOT_FOUND.\n+  - `pruneblockchain` now returns RPC_INVALID_PARAMETER if the blocks cannot be pruned\n+  because the supplied timestamp is too late. Previously returned RPC_INTERNAL_ERROR.\n+  - `pruneblockchain` now returns RPC_MISC_ERROR if the blocks cannot be pruned\n+  because the blockchain is too short. Previously returned RPC_INTERNAL_ERROR.\n+  - `setban` now returns RPC_CLIENT_INVALID_IP_OR_SUBNET if the supplied IP address\n+  or subnet is invalid. Previously returned RPC_CLIENT_NODE_ALREADY_ADDED.\n+  - `setban` now returns RPC_CLIENT_INVALID_IP_OR_SUBNET if the user tries to unban\n+  a node that has not previously been banned. Previously returned RPC_MISC_ERROR.\n+  - `removeprunedfunds` now returns RPC_WALLET_ERROR if `bitcoind` is unable to remove\n+  the transaction. Previously returned RPC_INTERNAL_ERROR.\n+  - `removeprunedfunds` now returns RPC_INVALID_PARAMETER if the transaction does not\n+  exist in the wallet. Previously returned RPC_INTERNAL_ERROR.\n+  - `fundrawtransaction` now returns RPC_INVALID_ADDRESS_OR_KEY if an invalid change\n+  address is provided. Previously returned RPC_INVALID_PARAMETER.\n+  - `fundrawtransaction` now returns RPC_WALLET_ERROR if `bitcoind` is unable to create\n+  the transaction. The error message provides further details. Previously returned\n+  RPC_INTERNAL_ERROR.\n+  - `bumpfee` now returns RPC_INVALID_PARAMETER if the provided transaction has\n+  descendants in the wallet. Previously returned RPC_MISC_ERROR.\n+  - `bumpfee` now returns RPC_INVALID_PARAMETER if the provided transaction has\n+  descendants in the mempool. Previously returned RPC_MISC_ERROR.\n+  - `bumpfee` now returns RPC_WALLET_ERROR if the provided transaction has\n+  has been mined or conflicts with a mined transaction. Previously returned\n+  RPC_INVALID_ADDRESS_OR_KEY.\n+  - `bumpfee` now returns RPC_WALLET_ERROR if the provided transaction is not\n+  BIP 125 replaceable. Previously returned RPC_INVALID_ADDRESS_OR_KEY.\n+  - `bumpfee` now returns RPC_WALLET_ERROR if the provided transaction has already\n+  been bumped by a different transaction. Previously returned RPC_INVALID_REQUEST.\n+  - `bumpfee` now returns RPC_WALLET_ERROR if the provided transaction contains\n+  inputs which don't belong to this wallet. Previously returned RPC_INVALID_ADDRESS_OR_KEY.\n+  - `bumpfee` now returns RPC_WALLET_ERROR if the provided transaction has multiple change\n+  outputs. Previously returned RPC_MISC_ERROR.\n+  - `bumpfee` now returns RPC_WALLET_ERROR if the provided transaction has no change\n+  output. Previously returned RPC_MISC_ERROR.\n+  - `bumpfee` now returns RPC_WALLET_ERROR if the fee is too high. Previously returned\n+  RPC_MISC_ERROR.\n+  - `bumpfee` now returns RPC_WALLET_ERROR if the fee is too low. Previously returned\n+  RPC_MISC_ERROR.\n+  - `bumpfee` now returns RPC_WALLET_ERROR if the change output is too small to bump the\n+  fee. Previously returned RPC_MISC_ERROR.\n+\n+0.15.0 Change log\n+=================\n+\n+### RPC and other APIs\n+- #9485 `61a640e` ZMQ example using python3 and asyncio (mcelrath)\n+- #9894 `0496e15` remove 'label' filter for rpc command help (instagibbs)\n+- #9853 `02bd6e9` Fix error codes from various RPCs (jnewbery)\n+- #9842 `598ef9c` Fix RPC failure testing (continuation of #9707) (jnewbery)\n+- #10038 `d34995a` Add mallocinfo mode to `getmemoryinfo` RPC (laanwj)\n+- #9500 `3568b30` [Qt][RPC] Autocomplete commands for 'help' command in debug console (achow101)\n+- #10056 `e6156a0` [zmq] Call va_end() on va_start()ed args (kallewoof)\n+- #10086 `7438cea` Trivial: move rpcserialversion into RPC option group (jlopp)\n+- #10150 `350b224` [rpc] Add logging rpc (jnewbery)\n+- #10208 `393160c` [wallet] Rescan abortability (kallewoof)\n+- #10143 `a987def` [net] Allow disconnectnode RPC to be called with node id (jnewbery)\n+- #10281 `0e8499c` doc: Add RPC interface guidelines (laanwj)\n+- #9733 `d4732f3` Add getchaintxstats RPC (sipa)\n+- #10310 `f4b15e2` [doc] Add hint about getmempoolentry to getrawmempool help (kallewoof)\n+- #8704 `96c850c` [RPC] Transaction details in getblock (achow101)\n+- #8952 `9390845` Add query options to listunspent RPC call (pedrobranco)\n+- #10413 `08ac35a` Fix docs (there's no rpc command setpaytxfee) (RHavar)\n+- #8384 `e317c0d` Add witness data output to TxInError messages (instagibbs)\n+- #9571 `4677151` RPC: getblockchaininfo returns BIP signaling statistics  (pinheadmz)\n+- #10450 `ef2d062` Fix bumpfee rpc \"errors\" return value (ryanofsky)\n+- #10475 `39039b1` [RPC] getmempoolinfo mempoolminfee is a BTC/KB feerate (instagibbs)\n+- #10478 `296928e` rpc: Add listen address to incoming connections in `getpeerinfo` (laanwj)\n+- #10403 `08d0390` Fix importmulti failure to return rescan errors (ryanofsky)\n+- #9740 `9fec4da` Add friendly output to dumpwallet (aideca)\n+- #10426 `16f6c98` Replace bytes_serialized with bogosize (sipa)\n+- #10252 `980deaf` RPC/Mining: Restore API compatibility for prioritisetransaction (luke-jr)\n+- #9672 `46311e7` Opt-into-RBF for RPC & bitcoin-tx (luke-jr)\n+- #10481 `9c248e3` Decodehextx scripts sanity check  (achow101)\n+- #10488 `fa1f106` Note that the prioritizetransaction dummy value is deprecated, and has no meaning (TheBlueMatt)\n+- #9738 `c94b89e` gettxoutproof() should return consistent result (jnewbery)\n+- #10191 `00350bd` [trivial] Rename unused RPC arguments 'dummy' (jnewbery)\n+- #10627 `b62b4c8` fixed listunspent rpc convert parameter (tnakagawa)\n+- #10412 `bef02fb` Improve wallet rescan API (ryanofsky)\n+- #10400 `1680ee0` [RPC] Add an uptime command that displays the amount of time (in seconds) bitcoind has been running (rvelhote)\n+- #10683 `d81bec7` rpc: Move the `generate` RPC call to rpcwallet (laanwj)\n+- #10710 `30bc0f6` REST/RPC example update (Mirobit)\n+- #10747 `9edda0c` [rpc] fix verbose argument for getblock in bitcoin-cli (jnewbery)\n+- #10589 `104f5f2` More economical fee estimates for RBF and RPC options to control (morcos)\n+- #10543 `b27b004` Change API to estimaterawfee (morcos)\n+- #10807 `afd2fca` getbalance example covers at least 6 confirms (instagibbs)\n+- #10707 `75b5643` Better API for estimatesmartfee RPC  (morcos)\n+- #10784 `9e8d6a3` Do not allow users to get keys from keypool without reserving them (TheBlueMatt)\n+- #10857 `d445a2c` [RPC] Add a deprecation warning to getinfo's output (achow101)\n+- #10571 `adf170d` [RPC]Move transaction combining from signrawtransaction to new RPC (achow101)\n+- #10783 `041dad9` [RPC] Various rpc argument fixes (instagibbs)\n+- #9622 `6ef3c7e` [rpc] listsinceblock should include lost transactions when parameter is a reorg'd block (kallewoof)\n+- #10799 `8537187` Prevent user from specifying conflicting parameters to fundrawtx (TheBlueMatt)\n+- #10931 `0b11a07` Fix misleading \"Method not found\" multiwallet errors (ryanofsky)\n+- #10788 `f66c596` [RPC] Fix addwitnessaddress by replacing ismine with producesignature (achow101)\n+- #10999 `627c3c0` Fix amounts formatting in `decoderawtransaction` (laanwj)\n+- #11002 `4268426` [wallet] return correct error code from resendwallettransaction (jnewbery)\n+- #11029 `96a63a3` [RPC] trivial: gettxout no longer shows version of tx (FelixWeis)\n+- #11083 `6c2b008` Fix combinerawtransaction RPC help result section (jonasnick)\n+- #11027 `07164bb` [RPC] Only return hex field once in getrawtransaction (achow101)\n+- #10698 `5af6572` Be consistent in calling transactions \"replaceable\" for Opt-In RBF (TheBlueMatt)\n+\n+### Block and transaction handling\n+- #9801 `a8c5751` Removed redundant parameter from mempool.PrioritiseTransaction (gubatron)\n+- #9819 `1efc99c` Remove harmless read of unusued priority estimates (morcos)\n+- #9822 `b7547fa` Remove block file location upgrade code (benma)\n+- #9602 `30ff3a2` Remove coin age priority and free transactions - implementation (morcos)\n+- #9548 `47510ad` Remove min reasonable fee (morcos)\n+- #10249 `c73af54` Switch CCoinsMap from boost to std unordered_map (sipa)\n+- #9966 `2a183de` Control mempool persistence using a command line parameter (jnewbery)\n+- #10199 `318ea50` Better fee estimates (morcos)\n+- #10196 `bee3529` Bugfix: PrioritiseTransaction updates the mempool tx counter (sdaftuar)\n+- #10195 `1088b02` Switch chainstate db and cache to per-txout model (sipa)\n+- #10284 `c2ab38b` Always log debug information for fee calculation in CreateTransaction (morcos)\n+- #10503 `efbcf2b` Use REJECT_DUPLICATE for already known and conflicted txn (sipa)\n+- #10537 `b3eb0d6` Few Minor per-utxo assert-semantics re-adds and tweak (TheBlueMatt)\n+- #10626 `8c841a3` doc: Remove outdated minrelaytxfee comment (MarcoFalke)\n+- #10559 `234ffc6` Change semantics of HaveCoinInCache to match HaveCoin (morcos)\n+- #10581 `7878353` Simplify return values of GetCoin/HaveCoin(InCache) (sipa)\n+- #10684 `a381f6a` Remove no longer used mempool.exists(outpoint) (morcos)\n+- #10148 `d4e551a` Use non-atomic flushing with block replay (sipa)\n+- #10685 `30c2130` Clarify CCoinsViewMemPool documentation (TheBlueMatt)\n+- #10558 `90a002e` Address nits from per-utxo change (morcos)\n+- #10706 `6859ad2` Improve wallet fee logic and fix GUI bugs (morcos)\n+- #10526 `754aa02` Force on-the-fly compaction during pertxout upgrade (sipa)\n+- #10985 `d896d5c` Add undocumented -forcecompactdb to force LevelDB compactions (sipa)\n+- #10292 `e4bbd3d` Improved efficiency in COutPoint constructors (mm-s)\n+- #10290 `8d6d43e` Add -stopatheight for benchmarking (sipa)\n+\n+### P2P protocol and network code\n+- #9726 `7639d38` netbase: Do not print an error on connection timeouts through proxy (laanwj)\n+- #9805 `5b583ef` Add seed.btc.petertodd.org to mainnet DNS seeds (petertodd)\n+- #9861 `22f609f` Trivial: Debug log ambiguity fix for peer addrs (keystrike)\n+- #9774 `90cb2a2` Enable host lookups for -proxy and -onion parameters (jmcorgan)\n+- #9558 `7b585cf` Clarify assumptions made about when BlockCheck is called (TheBlueMatt)\n+- #10135 `e19586a` [p2p] Send the correct error code in reject messages (jnewbery)\n+- #9665 `eab00d9` Use cached [compact] blocks to respond to getdata messages (TheBlueMatt)\n+- #10215 `a077a90` Check interruptNet during dnsseed lookups (TheBlueMatt)\n+- #10234 `faf2dea` [net] listbanned RPC and QT should show correct banned subnets (jnewbery)\n+- #10134 `314ebdf` [qa] Fixes segwit block relay test after inv-direct-fetch was disabled (sdaftuar)\n+- #10351 `3f57c55` removed unused code in INV message (Greg-Griffith)\n+- #10061 `ae78609` [net] Added SetSocketNoDelay() utility function (tjps)\n+- #10408 `28c6e8d` Net: Improvements to Tor control port parser (str4d)\n+- #10460 `5c63d66` Broadcast address every day, not 9 hours (sipa)\n+- #10471 `400fdd0` Denote functions CNode::GetRecvVersion() and CNode::GetRefCount()  as const (pavlosantoniou)\n+- #10345 `67700b3` [P2P] Timeout for headers sync (sdaftuar)\n+- #10564 `8d9f45e` Return early in IsBanned (gmaxwell)\n+- #10587 `de8db47` Net: Fix resource leak in ReadBinaryFile(...) (practicalswift)\n+- #9549 `b33ca14` [net] Avoid possibility of NULL pointer dereference in MarkBlockAsInFlight(...) (practicalswift)\n+- #10446 `2772dc9` net: avoid extra dns query per seed (theuni)\n+- #10824 `9dd6a2b` Avoid unnecessary work in SetNetworkActive (promag)\n+- #10948 `df3a6f4` p2p: Hardcoded seeds update pre-0.15 branch (laanwj)\n+- #10977 `02f4c4a` [net] Fix use of uninitialized value in getnetworkinfo(const JSONRPCRequest&) (practicalswift)\n+- #10982 `c8b62c7` Disconnect network service bits 6 and 8 until Aug 1, 2018 (TheBlueMatt)\n+- #11012 `0e5cff6` Make sure to clean up mapBlockSource if we've already seen the block (theuni)\n+\n+### Validation\n+- #9725 `67023e9` CValidationInterface Cleanups (TheBlueMatt)\n+- #10178 `2584925` Remove CValidationInterface::UpdatedTransaction (TheBlueMatt)\n+- #10201 `a6548a4` pass Consensus::Params& to functions in validation.cpp and make them static (mariodian)\n+- #10297 `431a548` Simplify DisconnectBlock arguments/return value (sipa)\n+- #10464 `f94b7d5` Introduce static DoWarning (simplify UpdateTip) (jtimon)\n+- #10569 `2e7d8f8` Fix stopatheight (achow101)\n+- #10192 `2935b46` Cache full script execution results in addition to signatures (TheBlueMatt)\n+- #10179 `21ed30a` Give CValidationInterface Support for calling notifications on the CScheduler Thread (TheBlueMatt)\n+- #10557 `66270a4` Make check to distinguish between orphan txs and old txs more efficient (morcos)\n+- #10775 `7c2400c` nCheckDepth chain height fix (romanornr)\n+- #10821 `16240f4` Add SSE4 optimized SHA256 (sipa)\n+- #10854 `04d395e` Avoid using sizes on non-fixed-width types to derive protocol constants (gmaxwell)\n+- #10945 `2a50b11` Update defaultAssumeValid according to release-process.md (gmaxwell)\n+- #10986 `2361208` Update chain transaction statistics (sipa)\n+- #11028 `6bdf4b3` Avoid masking of difficulty adjustment errors by checkpoints (sipa)\n+- #9533 `cb598cf` Allow non-power-of-2 signature cache sizes (sipa)\n+- #9208 `acd9957` Improve DisconnectTip performance (sdaftuar)\n+- #10618 `f90603a` Remove confusing MAX_BLOCK_BASE_SIZE (gmaxwell)\n+- #10758 `bd92424` Fix some chainstate-init-order bugs (TheBlueMatt)\n+- #10550 `b7296bc` Don't return stale data from CCoinsViewCache::Cursor() (ryanofsky)\n+- #10998 `2507fd5` Fix upgrade cancel warnings (TheBlueMatt)\n+- #9868 `cbdb473` Abstract out the command line options for block assembly (sipa)\n+\n+### Build system\n+- #9727 `5f0556d` Remove fallbacks for boost_filesystem < v3 (laanwj)\n+- #9788 `50a2265` gitian: bump descriptors for master (theuni)\n+- #9794 `7ca2f54` Minor update to qrencode package builder (mitchellcash)\n+- #9514 `2cc0df1` release: Windows signing script (theuni)\n+- #9921 `8b789d8` build: Probe MSG_DONTWAIT in the same way as MSG_NOSIGNAL (laanwj)\n+- #10011 `32d1b34` build: Fix typo s/HAVE_DONTWAIT/HAVE_MSG_DONTWAIT (laanwj)\n+- #9946 `90dd9e6` Fix build errors if spaces in path or parent directory (pinheadmz)\n+- #10136 `81da4c7` build: Disable Wshadow warning (laanwj)\n+- #10166 `64962ae` Ignore Doxyfile generated from Doxyfile.in template (paveljanik)\n+- #10239 `0416ea9` Make Boost use std::atomic internally (sipa)\n+- #10228 `27faa6c` build: regenerate bitcoin-config.h as necessary (theuni)\n+- #10273 `8979f45` [scripts] Minor improvements to `macdeployqtplus` script (chrisgavin)\n+- #10325 `a26280b` 0.15.0 Depends Updates (fanquake)\n+- #10328 `79aeff6` Update contrib/debian to latest Ubuntu PPA upload (TheBlueMatt)\n+- #7522 `d25449f` Bugfix: Only use git for build info if the repository is actually the right one (luke-jr)\n+- #10489 `e654d61` build: silence gcc7's implicit fallthrough warning (theuni)\n+- #10549 `ad1a13e` Avoid printing generic and duplicated \"checking for QT\" during ./configure (drizzt)\n+- #10628 `8465b68` [depends] expat 2.2.1 (fanquake)\n+- #10806 `db825d2` build: verify that the assembler can handle crc32 functions (theuni)\n+- #10766 `b4d03be` Building Environment: Set ARFLAGS to cr (ReneNyffenegger)\n+- #10803 `91edda8` Explicitly search for bdb5.3 (pstratem)\n+- #10855 `81560b0` random: only use getentropy on openbsd (theuni)\n+- #10508 `1caafa6` Run Qt wallet tests on travis (ryanofsky)\n+- #10851 `e222618` depends: fix fontconfig with newer glibc (theuni)\n+- #10971 `88b1e4b` build: fix missing sse42 in depends builds (theuni)\n+- #11097 `129b03f` gitian: quick hack to fix version string in releases (theuni)\n+- #10039 `919aaf6` Fix compile errors with Qt 5.3.2 and Boost 1.55.0 (ryanofsky)\n+- #10168 `7032021` Fix build warning from #error text (jnewbery)\n+- #10301 `318392c` Check if sys/random.h is required for getentropy (jameshilliard)\n+\n+### GUI\n+- #9724 `1a9fd5c` Qt/Intro: Add explanation of IBD process (luke-jr)\n+- #9834 `b00ba62` qt: clean up initialize/shutdown signals (benma)\n+- #9481 `ce01e62` [Qt] Show more significant warning if we fall back to the default fee (jonasschnelli)\n+- #9974 `b9f930b` Add basic Qt wallet test (ryanofsky)\n+- #9690 `a387d3a` Change 'Clear' button string to 'Reset' (da2x)\n+- #9592 `9c7b7cf` [Qt] Add checkbox in the GUI to opt-in to RBF when creating a transaction (ryanofsky)\n+- #10098 `2b477e6` Make qt wallet test compatible with qt4 (ryanofsky)\n+- #9890 `1fa4ae6` Add a button to open the config file in a text editor (ericshawlinux)\n+- #10156 `51833a1` Fix for issues with startup and multiple monitors on windows (AllanDoensen)\n+- #10177 `de01da7` Changed \"Send\" button default status from true to false (KibbledJiveElkZoo)\n+- #10221 `e96486c` Stop treating coinbase outputs differently in GUI: show them at 1conf (TheBlueMatt)\n+- #10231 `987a6c0` [Qt] Reduce a significant cs_main lock freeze (jonasschnelli)\n+- #10242 `f6f3b58` [qt] Don't call method on null WalletModel object (ryanofsky)\n+- #10093 `a3e756b` [Qt] Don't add arguments of sensitive command to console window (jonasschnelli)\n+- #10362 `95546c8` [GUI] Add OSX keystroke to RPCConsole info (spencerlievens)\n+- #9697 `962cd3f` [Qt] simple fee bumper with user verification (jonasschnelli)\n+- #10390 `e477516` [wallet] remove minimum total fee option (instagibbs)\n+- #10420 `4314544` Add Qt tests for wallet spends & bumpfee (ryanofsky)\n+- #10454 `c1c9a95` Fix broken q4 test build (ryanofsky)\n+- #10449 `64beb13` Overhaul Qt fee bumper (jonasschnelli)\n+- #10582 `7c72fb9` Pass in smart fee slider value to coin control dialog (morcos)\n+- #10673 `4c72cc3` [qt] Avoid potential null pointer dereference in TransactionView::exportClicked() (practicalswift)\n+- #10769 `8fdd23a` [Qt] replace fee slider with a Dropdown, extend conf. targets (jonasschnelli)\n+- #10870 `412b466` [Qt] Use wallet 0 in rpc console if running with multiple wallets (jonasschnelli)\n+- #10988 `a9dd111` qt: Increase BLOCK_CHAIN_SIZE constants (laanwj)\n+- #10644 `e292140` Slightly overhaul NSI pixmaps (jonasschnelli)\n+- #10660 `0c3542e` Allow to cancel the txdb upgrade via splashscreen keypress 'q' (jonasschnelli)\n+\n+### Wallet\n+- #9359 `f7ec7cf` Add test for CWalletTx::GetImmatureCredit() returning stale values (ryanofsky)\n+- #9576 `56ab672` [wallet] Remove redundant initialization (practicalswift)\n+- #9333 `fa625b0` Document CWalletTx::mapValue entries and remove erase of nonexistent \"version\" entry (ryanofsky)\n+- #9906 `72fb515` Disallow copy constructor CReserveKeys (instagibbs)\n+- #9369 `3178b2c` Factor out CWallet::nTimeSmart computation into a method (ryanofsky)\n+- #9830 `afcd7c0` Add safe flag to listunspent result (NicolasDorier)\n+- #9993 `c49355c` Initialize nRelockTime (pstratem)\n+- #9818 `3d857f3` Save watch only key timestamps when reimporting keys (ryanofsky)\n+- #9294 `f34cdcb` Use internal HD chain for change outputs (hd split) (jonasschnelli)\n+- #10164 `e183ea2` Wallet: reduce excess logic InMempool() (kewde)\n+- #10186 `c9ff4f8` Remove SYNC_TRANSACTION_NOT_IN_BLOCK magic number (jnewbery)\n+- #10226 `64c45aa` wallet: Use boost to more portably ensure -wallet specifies only a filename (luke-jr)\n+- #9827 `c91ca0a` Improve ScanForWalletTransactions return value (ryanofsky)\n+- #9951 `fa1ac28` Wallet database handling abstractions/simplifications (laanwj)\n+- #10265 `c29a0d4` [wallet] [moveonly] Check non-null pindex before potentially referencing (kallewoof)\n+- #10283 `a550f6e` Cleanup: reduce to one GetMinimumFee call signature (morcos)\n+- #10294 `e2b99b1` [Wallet] unset change position when there is no change (instagibbs)\n+- #10115 `d3dce0e` Avoid reading the old hd master key during wallet encryption (TheBlueMatt)\n+- #10341 `18c9deb` rpc/wallet: Workaround older UniValue which returns a std::string temporary for get_str (luke-jr)\n+- #10308 `94e5227` [wallet] Securely erase potentially sensitive keys/values (tjps)\n+- #10257 `ea1fd43` [test] Add test for getmemoryinfo (jimmysong)\n+- #10295 `ce8176d` [qt] Move some WalletModel functions into CWallet (ryanofsky)\n+- #10506 `7cc2c67` Fix bumpfee test after #10449 (ryanofsky)\n+- #10500 `098b01d` Avoid CWalletTx copies in GetAddressBalances and GetAddressGroupings (ryanofsky)\n+- #10455 `0747d33` Simplify feebumper minimum fee code slightly (ryanofsky)\n+- #10522 `2805d60` [wallet] Remove unused variables (practicalswift)\n+- #8694 `177433a` Basic multiwallet support (luke-jr)\n+- #10598 `7a74f88` Supress struct/class mismatch warnings introduced in #10284 (paveljanik)\n+- #9343 `209eef6` Don't create change at dust limit (morcos)\n+- #10744 `ed88e31` Use method name via __func__ macro (darksh1ne)\n+- #10712 `e8b9523` Add change output if necessary to reduce excess fee (morcos)\n+- #10816 `1c011ff` Properly forbid -salvagewallet and -zapwallettxes for multi wallet (morcos)\n+- #10235 `5cfdda2` Track keypool entries as internal vs external in memory (TheBlueMatt)\n+- #10330 `bf0a08b` [wallet] fix zapwallettxes interaction with persistent mempool (jnewbery)\n+- #10831 `0b01935` Batch flushing operations to the walletdb during top up and increase keypool size (gmaxwell)\n+- #10795 `7b6e8bc` No longer ever reuse keypool indexes (TheBlueMatt)\n+- #10849 `bde4f93` Multiwallet: simplest endpoint support (jonasschnelli)\n+- #10817 `9022aa3` Redefine Dust and add a discard_rate (morcos)\n+- #10883 `bf3b742` Rename -usewallet to -rpcwallet (morcos)\n+- #10604 `420238d` [wallet] [tests] Add listwallets RPC, include wallet name in `getwalletinfo` and add multiwallet test (jnewbery)\n+- #10885 `70888a3` Reject invalid wallets (promag)\n+- #10949 `af56397` Clarify help message for -discardfee (morcos)\n+- #10942 `2e857bb` Eliminate fee overpaying edge case when subtracting fee from recipients (morcos)\n+- #10995 `fa64636` Fix resendwallettransactions assert failure if -walletbroadcast=0 (TheBlueMatt)\n+- #11022 `653a46d` Basic keypool topup (jnewbery)\n+- #11081 `9fe1f6b` Add length check for CExtKey deserialization (jonasschnelli, guidovranken)\n+- #11044 `4ef8374` [wallet] Keypool topup cleanups (jnewbery)\n+- #11145 `e51bb71` Fix rounding bug in calculation of minimum change (morcos)\n+- #9605 `779f2f9` Use CScheduler for wallet flushing, remove ThreadFlushWalletDB (TheBlueMatt)\n+- #10108 `4e3efd4` ApproximateBestSubset should take inputs by reference, not value (RHavar)\n+\n+### Tests and QA\n+- #9744 `8efd1c8` Remove unused module from rpc-tests (34ro)\n+- #9657 `7ff4a53` Improve rpc-tests.py (jnewbery)\n+- #9766 `7146d96` Add --exclude option to rpc-tests.py (jnewbery)\n+- #9577 `d6064a8` Fix docstrings in qa tests (jnewbery)\n+- #9823 `a13a417` qa: Set correct path for binaries in rpc tests (MarcoFalke)\n+- #9847 `6206252` Extra test vector for BIP32 (sipa)\n+- #9350 `88c2ae3` [Trivial] Adding label for amount inside of tx_valid/tx_invalid.json (Christewart)\n+- #9888 `36afd4d` travis: Verify commits only for one target (MarcoFalke)\n+- #9904 `58861ad` test: Fail if InitBlockIndex fails (laanwj)\n+- #9828 `67c5cc1` Avoid -Wshadow warnings in wallet_tests (ryanofsky)\n+- #9832 `48c3429` [qa] assert_start_raises_init_error (NicolasDorier)\n+- #9739 `9d5fcbf` Fix BIP68 activation test (jnewbery)\n+- #9547 `d32581c` bench: Assert that division by zero is unreachable (practicalswift)\n+- #9843 `c78adbf` Fix segwit getblocktemplate test (jnewbery)\n+- #9929 `d5ce14e` tests: Delete unused function _rpchost_to_args (laanwj)\n+- #9555 `19be26a` [test] Avoid reading a potentially uninitialized variable in tx_invalid-test (transaction_tests.cpp) (practicalswift)\n+- #9945 `ac23a7c` Improve logging in bctest.py if there is a formatting mismatch (jnewbery)\n+- #9768 `8910b47` [qa] Add logging to test_framework.py (jnewbery)\n+- #9972 `21833f9` Fix extended rpc tests broken by #9768 (jnewbery)\n+- #9977 `857d1e1` QA: getblocktemplate_longpoll.py should always use >0 fee tx (sdaftuar)\n+- #9970 `3cc13ea` Improve readability of segwit.py, smartfees.py (sdaftuar)\n+- #9497 `2c781fb` CCheckQueue Unit Tests (JeremyRubin)\n+- #10024 `9225de2` [trivial] Use log.info() instead of print() in remaining functional test cases (jnewbery)\n+- #9956 `3192e52` Reorganise qa directory (jnewbery)\n+- #10017 `02d64bd` combine_logs.py - aggregates log files from multiple bitcoinds during functional tests (jnewbery)\n+- #10047 `dfef6b6` [tests] Remove unused variables and imports (practicalswift)\n+- #9701 `a230b05` Make bumpfee tests less fragile (ryanofsky)\n+- #10053 `ca20923` [test] Allow functional test cases to be skipped (jnewbery)\n+- #10052 `a0b1e57` [test] Run extended tests once daily in Travis (jnewbery)\n+- #10069 `1118493` [QA] Fix typo in fundrawtransaction test (NicolasDorier)\n+- #10083 `c044f03` [QA] Renaming rawTx into rawtx (NicolasDorier)\n+- #10073 `b1a4f27` Actually run assumevalid.py (jnewbery)\n+- #9780 `c412fd8` Suppress noisy output from qa tests in Travis (jnewbery)\n+- #10096 `79af9fb` Check that all test scripts in test/functional are being run (jnewbery)\n+- #10076 `5b029aa` [qa] combine_logs: Use ordered list for logfiles (MarcoFalke)\n+- #10107 `f2734c2` Remove unused variable. Remove accidental trailing semicolons in Python code (practicalswift)\n+- #10109 `8ac8041` Remove SingleNodeConnCB (jnewbery)\n+- #10114 `edc62c9` [tests] sync_with_ping should assert that ping hasn't timed out (jnewbery)\n+- #10128 `427d2fd` Speed Up CuckooCache tests (JeremyRubin)\n+- #10072 `12af74b` Remove sources of unreliablility in extended functional tests (jnewbery)\n+- #10077 `ebfd653` [qa] Add setnetworkactive smoke test (MarcoFalke)\n+- #10152 `080d7c7` [trivial] remove unused line in Travis config (jnewbery)\n+- #10159 `df1ca9e` [tests] color test results and sort alphabetically (jnewbery)\n+- #10124 `88799ea` [test] Suppress test logging spam (jnewbery)\n+- #10142 `ed09dd3` Run bitcoin_test-qt under minimal QPA platform (ryanofsky)\n+- #9949 `a27dbc5` [bench] Avoid function call arguments which are pointers to uninitialized values (practicalswift)\n+- #10187 `b44adf9` tests: Fix test_runner return value in case of skipped test (laanwj)\n+- #10197 `d86bb07` [tests] Functional test warnings (jnewbery)\n+- #10219 `9111df9` Tests: Order Python Tests Differently (jimmysong)\n+- #10229 `f3db4c6` Tests: Add test for getdifficulty (jimmysong)\n+- #10224 `2723bcd` [test] Add test for getaddednodeinfo (jimmysong)\n+- #10023 `c530c15` [tests] remove maxblocksinflight.py (functionality covered by other test) (jnewbery)\n+- #10097 `1b25b6d` Move zmq test skipping logic into individual test case (jnewbery)\n+- #10272 `54e2d87` [Tests] Prevent warning: variable 'x' is uninitialized (paveljanik)\n+- #10225 `e0a7e19` [test] Add aborttrescan tests (kallewoof)\n+- #10278 `8254a8a` [test] Add Unit Test for GetListenPort (jimmysong)\n+- #10280 `47535d7` [test] Unit test amount.h/amount.cpp (jimmysong)\n+- #10256 `80c3a73` [test] Add test for gettxout to wallet.py (jimmysong)\n+- #10264 `492d22f` [test] Add tests for getconnectioncount, getnettotals and ping (jimmysong)\n+- #10169 `8f3e384` [tests] Remove func test code duplication (jnewbery)\n+- #10198 `dc8fc0c` [tests] Remove is_network_split from functional test framework (jnewbery)\n+- #10255 `3c5e6c9` [test] Add test for listaddressgroupings (jimmysong)\n+- #10137 `75171f0` Remove unused import. Remove accidental trailing semicolons (practicalswift)\n+- #10307 `83073de` [tests] allow zmq test to be run in out-of-tree builds (jnewbery)\n+- #10344 `e927483` [tests] Fix abandonconflict.py intermittency (jnewbery)\n+- #10318 `170bc2c` [tests] fix wait_for_inv() (jnewbery)\n+- #10171 `fff72de` [tests] Add node methods to test framework (jnewbery)\n+- #10352 `23d78c4` test: Add elapsed time to RPC tracing (laanwj)\n+- #10342 `6a796b2` [tests] Improve mempool_persist test (jnewbery)\n+- #10287 `776ba23` [tests] Update Unit Test for addrman.h/addrman.cpp (jimmysong)\n+- #10365 `7ee5236` [tests] increase timeouts in sendheaders test (jnewbery)\n+- #10361 `f6241b3` qa: disablewallet: Check that wallet is really disabled (MarcoFalke)\n+- #10371 `4b766fc` [tests] Clean up addrman_tests.cpp (jimmysong)\n+- #10253 `87abe20` [test] Add test for getnetworkhashps (jimmysong)\n+- #10376 `8bd16ee` [tests] fix disconnect_ban intermittency (jnewbery)\n+- #10374 `5411997` qa: Warn when specified test is not found (MarcoFalke)\n+- #10405 `0542978` tests: Correct testcase in script_tests.json for large number OP_EQUAL (laanwj)\n+- #10429 `6b99daf` tests: fix spurious addrman test failure (theuni)\n+- #10433 `8e57256` [tests] improve tmpdir structure (jnewbery)\n+- #10415 `217b416` [tests] Speed up fuzzing by ~200x when using afl-fuzz (practicalswift)\n+- #10445 `b4b057a` Add test for empty chain and reorg consistency for gettxoutsetinfo (gmaxwell)\n+- #10423 `1aefc94` [tests] skipped tests should clean up after themselves (jnewbery)\n+- #10359 `329fc1d` [tests] functional tests should call BitcoinTestFramework start/stop node methods (jnewbery)\n+- #10514 `e103b3f` Bugfix: missing == 0 after randrange (sipa)\n+- #10515 `c871f32` [test] Add test for getchaintxstats (jimmysong)\n+- #10509 `bea5b00` Remove xvfb configuration from travis (ryanofsky)\n+- #10535 `30853e1` [qa] fundrawtx: Fix shutdown race (MarcoFalke)\n+- #9909 `300f8e7` tests: Add FindEarliestAtLeast test for edge cases (ryanofsky)\n+- #10331 `75e898c` Share config between util and functional tests (jnewbery)\n+- #10321 `e801084` Use FastRandomContext for all tests (sipa)\n+- #10524 `6c2d81f` [tests] Remove printf(...) (practicalswift)\n+- #10547 `71ab6e5` [tests] Use FastRandomContext instead of boost::random::{mt19937,uniform_int_distribution} (practicalswift)\n+- #10551 `6702617` [Tests] Wallet encryption functional tests (achow101)\n+- #10555 `643fa0b` [tests] various improvements to zmq_test.py (jnewbery)\n+- #10533 `d083bd9` [tests] Use cookie auth instead of rpcuser and rpcpassword (achow101)\n+- #10632 `c68a9a6` qa: Add stopatheight test (MarcoFalke)\n+- #10636 `4bc853b` [qa] util: Check return code after closing bitcoind proc (MarcoFalke)\n+- #10662 `e0a7801` Initialize randomness in benchmarks (achow101)\n+- #10612 `7c87a9c` The young person's guide to the test_framework (jnewbery)\n+- #10659 `acb1153` [qa] blockchain: Pass on closed connection during generate call (MarcoFalke)\n+- #10690 `416af3e` [qa] Bugfix: allow overriding extra_args in ComparisonTestFramework (sdaftuar)\n+- #10556 `65cc7aa` Move stop/start functions from utils.py into BitcoinTestFramework (jnewbery)\n+- #10704 `dd07f47` [tests] nits in dbcrash.py (jnewbery)\n+- #10743 `be82498` [test] don't run dbcrash.py on Travis (jnewbery)\n+- #10761 `d3b5870` [tests] fix replace_by_fee.py (jnewbery)\n+- #10759 `1d4805c` Fix multi_rpc test for hosts that dont default to utf8 (TheBlueMatt)\n+- #10190 `e4f226a` [tests] mining functional tests (including regression test for submitblock) (jnewbery)\n+- #10739 `1fc783f` test: Move variable `state` down where it is used (paveljanik)\n+- #9980 `fee0d80` Fix mem access violation merkleblock (Christewart)\n+- #10893 `0c173a1` [QA] Avoid running multiwallet.py twice (jonasschnelli)\n+- #10927 `9d5e8f9` test: Make sure wallet.backup is created in temp path (laanwj)\n+- #10899 `f29d5db` [test] Qt: Use _putenv_s instead of setenv on Windows builds (brianmcmichael)\n+- #10912 `5c8eb79` [tests] Fix incorrect memory_cleanse(\u2026) call in crypto_tests.cpp (practicalswift)\n+- #11001 `fa8a063` [tests] Test disconnecting unsupported service bits logic (jnewbery)\n+- #10695 `929fd72` [qa] Rewrite BIP65/BIP66 functional tests (sdaftuar)\n+- #10963 `ecd2135` [bench] Restore format state of cout after printing with std::fixed/setprecision (practicalswift)\n+- #11025 `e5d26e4` qa: Fix inv race in example_test (MarcoFalke)\n+- #10765 `2c811e0` Tests: address placement should be deterministic by default (ReneNyffenegger)\n+- #11000 `ac016e1` test: Add resendwallettransactions functional tests (promag)\n+- #11032 `aeb3175` [qa] Fix block message processing error in sendheaders.py (sdaftuar)\n+- #10105 `0b9fb68` [tests] fixup - make all Travis test runs quiet, non just cron job runs (jnewbery)\n+- #10222 `6ce7337` [tests] test_runner - check unicode (jnewbery)\n+- #10327 `35da2ae` [tests] remove import-abort-rescan.py (jnewbery)\n+- #11023 `bf74d37` [tests] Add option to attach a python debugger if functional test fails (jnewbery)\n+- #10565 `8c2098a` [coverage] Remove subtrees and benchmarks from coverage report (achow101)\n+\n+### Miscellaneous\n+- #9871 `be8ba2c` Add a tree sha512 hash to merge commits (sipa)\n+- #9821 `d19d45a` util: Specific GetOSRandom for Linux/FreeBSD/OpenBSD (laanwj)\n+- #9903 `ba80a68` Docs: add details to -rpcclienttimeout doc (ian-kelling)\n+- #9910 `53c300f` Docs: correct and elaborate -rpcbind doc (ian-kelling)\n+- #9905 `01b7cda` [contrib] gh-merge: Move second sha512 check to the end (MarcoFalke)\n+- #9880 `4df8213` Verify Tree-SHA512s in merge commits, enforce sigs are not SHA1 (TheBlueMatt)\n+- #9932 `00c13ea` Fix verify-commits on travis and always check top commit's tree (TheBlueMatt)\n+- #9952 `6996e06` Add historical release notes for 0.14.0 (laanwj)\n+- #9940 `fa99663` Fix verify-commits on OSX, update for new bad Tree-SHA512, point travis to different keyservers (TheBlueMatt)\n+- #9963 `8040ae6` util: Properly handle errors during log message formatting (laanwj)\n+- #9984 `cce056d` devtools: Make github-merge compute SHA512 from git, instead of worktree (laanwj)\n+- #9995 `8bcf934` [doc] clarify blockchain size and pruning (askmike)\n+- #9734 `0c17afc` Add updating of chainTxData to release process (sipa)\n+- #10063 `530fcbd` add missing spaces so that markdown recognizes headline (flack)\n+- #10085 `db1ae54` Docs: remove 'noconnect' option (jlopp)\n+- #10090 `8e4f7e7` Update bitcoin.conf with example for pruning (coinables)\n+- #9424 `1a5aaab` Change LogAcceptCategory to use uint32_t rather than sets of strings (gmaxwell)\n+- #10036 `fbf36ca` Fix init README format to render correctly on github (jlopp)\n+- #10058 `a2cd0b0` No need to use OpenSSL malloc/free (tjps)\n+- #10123 `471ed00` Allow debug logs to be excluded from specified component (jnewbery)\n+- #10104 `fadf078` linearize script: Option to use RPC cookie (achow101)\n+- #10162 `a3a2160` [trivial] Log calls to getblocktemplate (jnewbery)\n+- #10155 `928695b` build: Deduplicate version numbers (laanwj)\n+- #10211 `a86255b` [doc] Contributor fixes & new \"finding reviewers\" section (kallewoof)\n+- #10250 `1428f30` Fix some empty vector references (sipa)\n+- #10270 `95f5e44` Remove Clang workaround for Boost 1.46 (fanquake)\n+- #10263 `cb007e4` Trivial: fix fee estimate write error log message (CryptAxe)\n+- #9670 `bd9ec0e` contrib: github-merge improvements (laanwj)\n+- #10260 `1d75597` [doc] Minor corrections to osx dependencies (fanquake)\n+- #10189 `750c5a5` devtools/net: add a verifier for scriptable changes. Use it to make CNode::id private (theuni)\n+- #10322 `bc64b5a` Use hardware timestamps in RNG seeding (sipa)\n+- #10381 `7f2b9e0` Shadowing warnings are not enabled by default, update doc accordingly (paveljanik)\n+- #10380 `b6ee855` [doc] Removing comments about dirty entries on txmempool (madeo)\n+- #10383 `d0c37ee` [logging] log system time and mock time (jnewbery)\n+- #10404 `b45a52a` doc: Add logging to FinalizeNode() (sdaftuar)\n+- #10388 `526e839` Output line to debug.log when IsInitialBlockDownload latches to false (morcos)\n+- #10372 `15254e9` Add perf counter data to GetStrongRandBytes state in scheduler (TheBlueMatt)\n+- #10461 `55b72f3` Update style guide (sipa)\n+- #10486 `10e8c0a` devtools: Retry after signing fails in github-merge (laanwj)\n+- #10447 `f259263` Make bitcoind invalid argument error message specific (laanwj)\n+- #10495 `6a38b79` contrib: Update location of seeds.txt (laanwj)\n+- #10469 `b6b150b` Fixing typo in rpcdump.cpp help message (keystrike)\n+- #10451 `27b9931` contrib/init/bitcoind.openrcconf: Don't disable wallet by default (luke-jr)\n+- #10323 `00d3692` Update to latest libsecp256k1 master (sipa)\n+- #10422 `cec9e1e` Fix timestamp in fee estimate debug message (morcos)\n+- #10566 `5d034ee` [docs] Use the \"domain name setup\" image (previously unused) in the gitian docs (practicalswift)\n+- #10534 `a514ac3` Clarify prevector::erase and avoid swap-to-clear (sipa)\n+- #10575 `22ec768` Header include guideline (sipa)\n+- #10480 `fbf5d3b` Improve commit-check-script.sh (sipa)\n+- #10502 `1ad3d4e` scripted-diff: Remove BOOST_FOREACH, Q_FOREACH and PAIRTYPE (jtimon)\n+- #10377 `b63be2c` Use rdrand as entropy source on supported platforms (sipa)\n+- #9895 `228c319` Turn TryCreateDirectory() into TryCreateDirectories() (benma)\n+- #10602 `d76e84a` Make clang-format use C++11 features (e.g. A<A<int>> instead of A<A<int> >) (practicalswift)\n+- #10623 `c38f540` doc: Add 0.14.2 release notes (MarcoFalke)\n+- #10276 `b750b33` contrib/verifybinaries: allow filtering by platform (knocte)\n+- #10248 `01c4b14` Rewrite addrdb with less duplication using CHashVerifier (sipa)\n+- #10577 `232508f` Add an explanation of quickly hashing onto a non-power of two range (gmaxwell)\n+- #10608 `eee398f` Add a comment explaining the use of MAX_BLOCK_BASE_SIZE (gmaxwell)\n+- #10728 `7397af9` fix typo in help text for removeprunedfunds (AkioNak)\n+- #10193 `6dbcc74` scripted-diff: Remove #include <boost/foreach.hpp> (jtimon)\n+- #10676 `379aed0` document script-based return fields for validateaddress (instagibbs)\n+- #10651 `cef4b5c` Verify binaries from bitcoincore.org and bitcoin.org (TheBlueMatt)\n+- #10786 `ca4c545` Add PR description to merge commit in github-merge.py (sipa)\n+- #10812 `c5904e8` [utils] Allow bitcoin-cli's -rpcconnect option to be used with square brackets (jnewbery)\n+- #10842 `3895e25` Fix incorrect Doxygen tag (@ince \u2192 @since). Doxygen parameter name matching (practicalswift)\n+- #10681 `df0793f` add gdb attach process to test README (instagibbs)\n+- #10789 `1124328` Punctuation/grammer fixes in rpcwallet.cpp (stevendlander)\n+- #10655 `78f307b` Properly document target_confirmations in listsinceblock (RHavar)\n+- #10917 `5c003cb` developer-notes: add reference to snake_case and PascalCase (benma)\n+- #11003 `4b5a7ce` Docs: Capitalize bullet points in CONTRIBUTING guide (eklitzke)\n+- #10968 `98aa3f6` Add instructions for parallel gitian builds (coblee)\n+- #11076 `1c4b9b3` 0.15 release-notes nits: fix redundancy, remove accidental parenthesis & fix range style (practicalswift)\n+- #11090 `8f0121c` Update contributor names in release-notes.md (Derek701)\n+- #11056 `cbdd338` disable jni in builds (instagibbs)\n+- #11080 `2b59cfb` doc: Update build-openbsd for 6.1 (laanwj)\n+- #11119 `0a6af47` [doc] build-windows: Mention that only trusty works (MarcoFalke)\n+- #11108 `e8ad101` Changing -txindex requires -reindex, not -reindex-chainstate (TheBlueMatt)\n+- #9792 `342b9bc` FastRandomContext improvements and switch to ChaCha20 (sipa)\n+- #9505 `67ed40e` Prevector Quick Destruct (JeremyRubin)\n+- #10820 `ef37f20` Use cpuid intrinsics instead of asm code (sipa)\n+- #9999 `a328904` [LevelDB] Plug leveldb logs to bitcoin logs (NicolasDorier)\n+- #9693 `c5e9e42` Prevent integer overflow in ReadVarInt (gmaxwell)\n+- #10129 `351d0ad` scheduler: fix sub-second precision with boost < 1.50 (theuni)\n+- #10153 `fade788` logging: Fix off-by-one for shrinkdebugfile default (MarcoFalke)\n+- #10305 `c45da32` Fix potential NPD introduced in b297426c (TheBlueMatt)\n+- #10338 `daf3e7d` Maintain state across GetStrongRandBytes calls (sipa)\n+- #10544 `a4fe077` Update to LevelDB 1.20 (sipa)\n+- #10614 `cafe24f` random: fix crash on some 64bit platforms (theuni)\n+- #10714 `2a09a38` Avoid printing incorrect block indexing time due to uninitialized variable (practicalswift)\n+- #10837 `8bc6d1f` Fix resource leak on error in GetDevURandom (corebob)\n+- #10832 `89bb036` init: Factor out AppInitLockDataDirectory and fix startup core dump issue (laanwj)\n+- #10914 `b995a37` Add missing lock in CScheduler::AreThreadsServicingQueue() (TheBlueMatt)\n+- #10958 `659c096` Update to latest Bitcoin patches for LevelDB (sipa)\n+- #10919 `c1c671f` Fix more init bugs (TheBlueMatt)\n+\n+Credits\n+=======\n+\n+Thanks to everyone who directly contributed to this release:\n+\n+- \u30ed\u30cf\u30f3 \u30c0\u30eb\n+- Ahmad Kazi\n+- aideca\n+- Akio Nakamura\n+- Alex Morcos\n+- Allan Doensen\n+- Andres G. Aragoneses\n+- Andrew Chow\n+- Angel Leon\n+- Awemany\n+- Bob McElrath\n+- Brian McMichael\n+- BtcDrak\n+- Charlie Lee\n+- Chris Gavin\n+- Chris Stewart\n+- Cory Fields\n+- CryptAxe\n+- Dag Robole\n+- Daniel Aleksandersen\n+- Daniel Cousens\n+- darksh1ne\n+- Dimitris Tsapakidis\n+- Eric Shaw\n+- Evan Klitzke\n+- fanquake\n+- Felix Weis\n+- flack\n+- Guido Vranken\n+- Greg Griffith\n+- Gregory Maxwell\n+- Gregory Sanders\n+- Ian Kelling\n+- Jack Grigg\n+- James Evans\n+- James Hilliard\n+- Jameson Lopp\n+- Jeremy Rubin\n+- Jimmy Song\n+- Jo\u00e3o Barbosa\n+- Johnathan Corgan\n+- John Newbery\n+- Jonas Schnelli\n+- Jorge Tim\u00f3n\n+- Karl-Johan Alm\n+- kewde\n+- KibbledJiveElkZoo\n+- Kirit Thadaka\n+- kobake\n+- Kyle Honeycutt\n+- Lawrence Nahum\n+- Luke Dashjr\n+- Marco Falke\n+- Marcos Mayorga\n+- Marijn Stollenga\n+- Mario Dian\n+- Mark Friedenbach\n+- Marko Bencun\n+- Masahiko Hyuga\n+- Matt Corallo\n+- Matthew Zipkin\n+- Matthias Grundmann\n+- Michael Goldstein\n+- Michael Rotarius\n+- Mikerah\n+- Mike van Rossum\n+- Mitchell Cash\n+- Nicolas Dorier\n+- Patrick Strateman\n+- Pavel Jan\u00edk\n+- Pavlos Antoniou\n+- Pavol Rusnak\n+- Pedro Branco\n+- Peter Todd\n+- Pieter Wuille\n+- practicalswift\n+- Ren\u00e9 Nyffenegger\n+- Ricardo Velhote\n+- romanornr\n+- Russell Yanofsky\n+- Rusty Russell\n+- Ryan Havar\n+- shaolinfry\n+- Shigeya Suzuki\n+- Simone Madeo\n+- Spencer Lievens\n+- Steven D. Lander\n+- Suhas Daftuar\n+- Takashi Mitsuta\n+- Thomas Snider\n+- Timothy Redaelli\n+- tintinweb\n+- tnaka\n+- Warren Togami\n+- Wladimir J. van der Laan\n+\n+As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/)."
      },
      {
        "sha": "f429b4bbdb9acebbc0739b7203f0b7085bfd2c1a",
        "filename": "doc/release-process.md",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/doc/release-process.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/doc/release-process.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-process.md?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -111,16 +111,16 @@ The gbuild invocations below <b>DO NOT DO THIS</b> by default.\n ### Build and sign Bitcoin Core for Linux, Windows, and OS X:\n \n     pushd ./gitian-builder\n-    ./bin/gbuild --memory 3000 --commit bitcoin=v${VERSION} ../bitcoin/contrib/gitian-descriptors/gitian-linux.yml\n+    ./bin/gbuild --num-make 2 --memory 3000 --commit bitcoin=v${VERSION} ../bitcoin/contrib/gitian-descriptors/gitian-linux.yml\n     ./bin/gsign --signer $SIGNER --release ${VERSION}-linux --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-linux.yml\n     mv build/out/bitcoin-*.tar.gz build/out/src/bitcoin-*.tar.gz ../\n \n-    ./bin/gbuild --memory 3000 --commit bitcoin=v${VERSION} ../bitcoin/contrib/gitian-descriptors/gitian-win.yml\n+    ./bin/gbuild --num-make 2 --memory 3000 --commit bitcoin=v${VERSION} ../bitcoin/contrib/gitian-descriptors/gitian-win.yml\n     ./bin/gsign --signer $SIGNER --release ${VERSION}-win-unsigned --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-win.yml\n     mv build/out/bitcoin-*-win-unsigned.tar.gz inputs/bitcoin-win-unsigned.tar.gz\n     mv build/out/bitcoin-*.zip build/out/bitcoin-*.exe ../\n \n-    ./bin/gbuild --memory 3000 --commit bitcoin=v${VERSION} ../bitcoin/contrib/gitian-descriptors/gitian-osx.yml\n+    ./bin/gbuild --num-make 2 --memory 3000 --commit bitcoin=v${VERSION} ../bitcoin/contrib/gitian-descriptors/gitian-osx.yml\n     ./bin/gsign --signer $SIGNER --release ${VERSION}-osx-unsigned --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-osx.yml\n     mv build/out/bitcoin-*-osx-unsigned.tar.gz inputs/bitcoin-osx-unsigned.tar.gz\n     mv build/out/bitcoin-*.tar.gz build/out/bitcoin-*.dmg ../"
      },
      {
        "sha": "38c58fb7fdf96768f0de3a12b2c340e8c56561b7",
        "filename": "doc/zmq.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/doc/zmq.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/doc/zmq.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/zmq.md?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -72,7 +72,7 @@ For instance:\n Each PUB notification has a topic and body, where the header\n corresponds to the notification type. For instance, for the\n notification `-zmqpubhashtx` the topic is `hashtx` (no null\n-terminator) and the body is the hexadecimal transaction hash (32\n+terminator) and the body is the transaction hash (32\n bytes).\n \n These options can also be provided in bitcoin.conf."
      },
      {
        "sha": "beb0d7073c0d27596dce49fe58aa2b05307bea7f",
        "filename": "share/certs/BitcoinFoundation_Apple_Cert.pem",
        "status": "removed",
        "additions": 0,
        "deletions": 37,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bf0a08be281dc42241e7f264c2a20515eb4781bb/share/certs/BitcoinFoundation_Apple_Cert.pem",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bf0a08be281dc42241e7f264c2a20515eb4781bb/share/certs/BitcoinFoundation_Apple_Cert.pem",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/certs/BitcoinFoundation_Apple_Cert.pem?ref=bf0a08be281dc42241e7f264c2a20515eb4781bb",
        "patch": "@@ -1,37 +0,0 @@\n-Bag Attributes\n-    friendlyName: Developer ID Application: BITCOIN FOUNDATION, INC., THE\n-    localKeyID: 6B 9C 6C A8 A5 73 70 70 E2 57 A3 49 D8 62 FB 97 C7 A5 5D 5E \n-subject=/UID=PBV4GLS9J4/CN=Developer ID Application: BITCOIN FOUNDATION, INC., THE/OU=PBV4GLS9J4/O=BITCOIN FOUNDATION, INC., THE/C=US\n-issuer=/CN=Developer ID Certification Authority/OU=Apple Certification Authority/O=Apple Inc./C=US\n------BEGIN CERTIFICATE-----\n-MIIFhzCCBG+gAwIBAgIIJ0r1rumyfZAwDQYJKoZIhvcNAQELBQAweTEtMCsGA1UE\n-AwwkRGV2ZWxvcGVyIElEIENlcnRpZmljYXRpb24gQXV0aG9yaXR5MSYwJAYDVQQL\n-DB1BcHBsZSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTETMBEGA1UECgwKQXBwbGUg\n-SW5jLjELMAkGA1UEBhMCVVMwHhcNMTMwMTEwMjIzOTAxWhcNMTgwMTExMjIzOTAx\n-WjCBqDEaMBgGCgmSJomT8ixkAQEMClBCVjRHTFM5SjQxQDA+BgNVBAMMN0RldmVs\n-b3BlciBJRCBBcHBsaWNhdGlvbjogQklUQ09JTiBGT1VOREFUSU9OLCBJTkMuLCBU\n-SEUxEzARBgNVBAsMClBCVjRHTFM5SjQxJjAkBgNVBAoMHUJJVENPSU4gRk9VTkRB\n-VElPTiwgSU5DLiwgVEhFMQswCQYDVQQGEwJVUzCCASIwDQYJKoZIhvcNAQEBBQAD\n-ggEPADCCAQoCggEBALTd5zURuZVoJviusr119aktXksenb9IN9vq6kBbq38vxEk7\n-9wkKMES2XfBRh0HxcEizGzhMNy5OCXuTLMaNMihYdfwYSoBoR2foEU+6kjPUnyJ4\n-dQBFLJZJr5/QeQmALmYHEgZ6lwXFD2lU8t92340zeJ4y5LZw5pcEHtH9IummYDut\n-OGCkCGXDcjL+5nHhNScJiXHhswM+62o6XXsQiP6EWbM1CsgrGTNLtaa0U/UvVDwE\n-79YKklSC5Bog2LD0jBcTuveI66mFzqu++L9X9u+ZArtebwCl7BPNQ+uboYy5uV2d\n-zf8lpNNZLfXCFjoLe9bLICKfZ7ub9V5aC8+GhckCAwEAAaOCAeEwggHdMD4GCCsG\n-AQUFBwEBBDIwMDAuBggrBgEFBQcwAYYiaHR0cDovL29jc3AuYXBwbGUuY29tL29j\n-c3AtZGV2aWQwMTAdBgNVHQ4EFgQUa5xsqKVzcHDiV6NJ2GL7l8elXV4wDAYDVR0T\n-AQH/BAIwADAfBgNVHSMEGDAWgBRXF+2iz9x8mKEQ4Py+hy0s8uMXVDCCAQ4GA1Ud\n-IASCAQUwggEBMIH+BgkqhkiG92NkBQEwgfAwKAYIKwYBBQUHAgEWHGh0dHA6Ly93\n-d3cuYXBwbGUuY29tL2FwcGxlY2EwgcMGCCsGAQUFBwICMIG2DIGzUmVsaWFuY2Ug\n-b24gdGhpcyBjZXJ0aWZpY2F0ZSBieSBhbnkgcGFydHkgYXNzdW1lcyBhY2NlcHRh\n-bmNlIG9mIHRoZSB0aGVuIGFwcGxpY2FibGUgc3RhbmRhcmQgdGVybXMgYW5kIGNv\n-bmRpdGlvbnMgb2YgdXNlLCBjZXJ0aWZpY2F0ZSBwb2xpY3kgYW5kIGNlcnRpZmlj\n-YXRpb24gcHJhY3RpY2Ugc3RhdGVtZW50cy4wDgYDVR0PAQH/BAQDAgeAMBYGA1Ud\n-JQEB/wQMMAoGCCsGAQUFBwMDMBMGCiqGSIb3Y2QGAQ0BAf8EAgUAMA0GCSqGSIb3\n-DQEBCwUAA4IBAQAfJ0BjID/1dS2aEeVyhAzPzCBjG8vm0gDf+/qfwRn3+yWeL9vS\n-nMdbilwM48IyQWTagjGGcojbsAd/vE4N7NhQyHInoCllNoeor1I5xx+blTaGRBK+\n-dDhJbbdlGCjsLnH/BczGZi5fyEJds9lUIrp1hJidRcUKO76qb/9gc6qNZpl1vH5k\n-lDUuJYt7YhAs+L6rTXDyqcK9maeQr0gaOPsRRAQLLwiQCorPeMTUNsbVMdMwZYJs\n-R+PxiAnk+nyi7rfiFvPoASAYUuI6OzYL/Fa6QU4/gYyPgic944QYVkaQBnc0vEP1\n-nXq6LGKwgVGcqJnkr/E2kui5gJoV5C3qll3e\n------END CERTIFICATE-----"
      },
      {
        "sha": "dc752d455c911113eac90c4a601925ce6dd59f5f",
        "filename": "share/certs/BitcoinFoundation_Comodo_Cert.pem",
        "status": "removed",
        "additions": 0,
        "deletions": 37,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bf0a08be281dc42241e7f264c2a20515eb4781bb/share/certs/BitcoinFoundation_Comodo_Cert.pem",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bf0a08be281dc42241e7f264c2a20515eb4781bb/share/certs/BitcoinFoundation_Comodo_Cert.pem",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/certs/BitcoinFoundation_Comodo_Cert.pem?ref=bf0a08be281dc42241e7f264c2a20515eb4781bb",
        "patch": "@@ -1,37 +0,0 @@\n-Bag Attributes\n-    friendlyName: The Bitcoin Foundation, Inc.'s COMODO CA Limited ID\n-    localKeyID: 8C 94 64 E3 B5 B0 41 89 5B 89 B0 57 CC 74 B9 44 E5 B2 92 66 \n-subject=/C=US/postalCode=98104-1444/ST=WA/L=Seattle/street=Suite 300/street=71 Columbia St/O=The Bitcoin Foundation, Inc./CN=The Bitcoin Foundation, Inc.\n-issuer=/C=GB/ST=Greater Manchester/L=Salford/O=COMODO CA Limited/CN=COMODO Code Signing CA 2\n------BEGIN CERTIFICATE-----\n-MIIFeDCCBGCgAwIBAgIRAJVYMd+waOER7lUqtiz3M2IwDQYJKoZIhvcNAQEFBQAw\n-ezELMAkGA1UEBhMCR0IxGzAZBgNVBAgTEkdyZWF0ZXIgTWFuY2hlc3RlcjEQMA4G\n-A1UEBxMHU2FsZm9yZDEaMBgGA1UEChMRQ09NT0RPIENBIExpbWl0ZWQxITAfBgNV\n-BAMTGENPTU9ETyBDb2RlIFNpZ25pbmcgQ0EgMjAeFw0xMzAxMTYwMDAwMDBaFw0x\n-NDAxMTYyMzU5NTlaMIG8MQswCQYDVQQGEwJVUzETMBEGA1UEEQwKOTgxMDQtMTQ0\n-NDELMAkGA1UECAwCV0ExEDAOBgNVBAcMB1NlYXR0bGUxEjAQBgNVBAkMCVN1aXRl\n-IDMwMDEXMBUGA1UECQwONzEgQ29sdW1iaWEgU3QxJTAjBgNVBAoMHFRoZSBCaXRj\n-b2luIEZvdW5kYXRpb24sIEluYy4xJTAjBgNVBAMMHFRoZSBCaXRjb2luIEZvdW5k\n-YXRpb24sIEluYy4wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQChUwLD\n-u/hu5aFZ/n11B27awONaaDrmHm0pamiWHb01yL4JmTBtaLCrSftF8RhCscQ8jpI0\n-UG1Cchmay0e3zH5o5XRs0H9C3x+SM5ozms0TWDmAYiB8aQEghsGovDk0D2nyTQeK\n-Q0xqyCh0m8ZPOnMnYrakHEmF6WvhLdJvI6Od4KIwbKxgN17cPFIfLVsZ7GrzmmbU\n-Gdi4wSQCHy5rxzvBxho8Qq/SfBl93uOMUrqOHjOUAPhNuTJG3t/MdhU8Zp24s29M\n-abHtYkT9W86hMjIiI8RTAR+WHKVglx9SB0cjDabXN8SZ3gME0+H++LyzlySHT8sI\n-ykepojZ7UBRgp9w3AgMBAAGjggGzMIIBrzAfBgNVHSMEGDAWgBQexbEsfYfaAmh8\n-JbwMB4Q/ts/e8TAdBgNVHQ4EFgQUfPf+ZyDWl/4LH0Y5BuJTelkRd/EwDgYDVR0P\n-AQH/BAQDAgeAMAwGA1UdEwEB/wQCMAAwEwYDVR0lBAwwCgYIKwYBBQUHAwMwEQYJ\n-YIZIAYb4QgEBBAQDAgQQMEYGA1UdIAQ/MD0wOwYMKwYBBAGyMQECAQMCMCswKQYI\n-KwYBBQUHAgEWHWh0dHBzOi8vc2VjdXJlLmNvbW9kby5uZXQvQ1BTMEEGA1UdHwQ6\n-MDgwNqA0oDKGMGh0dHA6Ly9jcmwuY29tb2RvY2EuY29tL0NPTU9ET0NvZGVTaWdu\n-aW5nQ0EyLmNybDByBggrBgEFBQcBAQRmMGQwPAYIKwYBBQUHMAKGMGh0dHA6Ly9j\n-cnQuY29tb2RvY2EuY29tL0NPTU9ET0NvZGVTaWduaW5nQ0EyLmNydDAkBggrBgEF\n-BQcwAYYYaHR0cDovL29jc3AuY29tb2RvY2EuY29tMCgGA1UdEQQhMB+BHWxpbmRz\n-YXlAYml0Y29pbmZvdW5kYXRpb24ub3JnMA0GCSqGSIb3DQEBBQUAA4IBAQAqibjo\n-D4HG5XSIIMCmYE5RgQBSEAJfI+EZERk1G9F83ZUWr0yNRZCw4O+RaM7xQhvJhEoD\n-G2kpk/q2bNOc71/VyZ6SrE1JRVUON41/Flhz4M6cP0BclTicXvh+efVwqZhIz+ws\n-UxF2hvC/1Xx6rqI7NYAlOYXk2MSUq3HREo+gWUPKM8em4MZZV/7XCH4QbsfxOl1J\n-xS6EOQmV8hfUN4KRXI5WfGUmedBxq7dM0RSJOSQl8fq2f+JjRLfjQwQucy7LDY+y\n-pRTsL2TdQV/DuDuI3s0NHRGznQNddoX5jqpXhSQFAAdgrhN1gGkWaaTPzr9IF2TG\n-qgr6PEp9tIYC+MbM\n------END CERTIFICATE-----"
      },
      {
        "sha": "8d50144c21f9bd3726b9b12e09e8c3ff44d6e595",
        "filename": "share/certs/PrivateKeyNotes.md",
        "status": "removed",
        "additions": 0,
        "deletions": 46,
        "changes": 46,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bf0a08be281dc42241e7f264c2a20515eb4781bb/share/certs/PrivateKeyNotes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bf0a08be281dc42241e7f264c2a20515eb4781bb/share/certs/PrivateKeyNotes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/certs/PrivateKeyNotes.md?ref=bf0a08be281dc42241e7f264c2a20515eb4781bb",
        "patch": "@@ -1,46 +0,0 @@\n-Code-signing private key notes\n-==\n-\n-The private keys for these certificates were generated on Gavin's main work machine,\n-following the certificate authority's recommendations for generating certificate\n-signing requests.\n-\n-For OSX, the private key was generated by Keychain.app on Gavin's main work machine.\n-The key and certificate is in a separate, passphrase-protected keychain file that is\n-unlocked to sign the Bitcoin-Qt.app bundle.\n-\n-For Windows, the private key was generated by Firefox running on Gavin's main work machine.\n-The key and certificate were exported into a separate, passphrase-protected PKCS#12 file, and\n-then deleted from Firefox's keystore. The exported file is used to sign the Windows setup.exe.\n-\n-Threat analysis\n---\n-\n-Gavin is a single point of failure. He could be coerced to divulge the secret signing keys,\n-allowing somebody to distribute a Bitcoin-Qt.app or bitcoin-qt-setup.exe with a valid\n-signature but containing a malicious binary.\n-\n-Or the machine Gavin uses to sign the binaries could be compromised, either remotely or\n-by breaking in to his office, allowing the attacker to get the private key files and then\n-install a keylogger to get the passphrase that protects them.\n-\n-Threat Mitigation\n---\n-\n-\"Air gapping\" the machine used to do the signing will not work, because the signing\n-process needs to access a timestamp server over the network. And it would not\n-prevent the \"rubber hose cryptography\" threat (coercing Gavin to sign a bad binary\n-or divulge the private keys).\n-\n-Windows binaries are reproducibly 'gitian-built', and the setup.exe file created\n-by the NSIS installer system is a 7zip archive, so you could check to make sure\n-that the bitcoin-qt.exe file inside the installer had not been tampered with.\n-However, an attacker could modify the installer's code, so when the setup.exe\n-was run it compromised users' systems. A volunteer to write an auditing tool\n-that checks the setup.exe for tampering, and checks the files in it against\n-the list of gitian signatures, is needed.\n-\n-The long-term solution is something like the 'gitian downloader' system, which\n-uses signatures from multiple developers to determine whether or not a binary\n-should be trusted. However, that just pushes the problem to \"how will\n-non-technical users securely get the gitian downloader code to start?\""
      },
      {
        "sha": "e3be18205d7d4ea11501ea303bda9e98c53f5f95",
        "filename": "share/qt/extract_strings_qt.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/share/qt/extract_strings_qt.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/share/qt/extract_strings_qt.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/qt/extract_strings_qt.py?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -58,7 +58,7 @@ def parse_po(text):\n if not XGETTEXT:\n     print('Cannot extract strings: xgettext utility is not installed or not configured.',file=sys.stderr)\n     print('Please install package \"gettext\" and re-run \\'./configure\\'.',file=sys.stderr)\n-    exit(1)\n+    sys.exit(1)\n child = Popen([XGETTEXT,'--output=-','-n','--keyword=_'] + files, stdout=PIPE)\n (out, err) = child.communicate()\n "
      },
      {
        "sha": "90deff48b00ca3b568394456d8afe78360051a03",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 14,
        "deletions": 4,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -18,7 +18,6 @@ else\n LIBUNIVALUE = $(UNIVALUE_LIBS)\n endif\n \n-BITCOIN_CONFIG_INCLUDES=-I$(builddir)/config\n BITCOIN_INCLUDES=-I$(builddir) -I$(builddir)/obj $(BDB_CPPFLAGS) $(BOOST_CPPFLAGS) $(LEVELDB_CPPFLAGS) $(CRYPTO_CFLAGS) $(SSL_CFLAGS)\n \n BITCOIN_INCLUDES += -I$(srcdir)/secp256k1/include\n@@ -79,6 +78,7 @@ BITCOIN_CORE_H = \\\n   addrdb.h \\\n   addrman.h \\\n   base58.h \\\n+  bech32.h \\\n   bloom.h \\\n   blockencodings.h \\\n   chain.h \\\n@@ -130,6 +130,7 @@ BITCOIN_CORE_H = \\\n   rpc/client.h \\\n   rpc/mining.h \\\n   rpc/protocol.h \\\n+  rpc/safemode.h \\\n   rpc/server.h \\\n   rpc/register.h \\\n   scheduler.h \\\n@@ -162,6 +163,8 @@ BITCOIN_CORE_H = \\\n   wallet/crypter.h \\\n   wallet/db.h \\\n   wallet/feebumper.h \\\n+  wallet/fees.h \\\n+  wallet/init.h \\\n   wallet/rpcwallet.h \\\n   wallet/wallet.h \\\n   wallet/walletdb.h \\\n@@ -208,6 +211,7 @@ libbitcoin_server_a_SOURCES = \\\n   rpc/misc.cpp \\\n   rpc/net.cpp \\\n   rpc/rawtransaction.cpp \\\n+  rpc/safemode.cpp \\\n   rpc/server.cpp \\\n   script/sigcache.cpp \\\n   script/ismine.cpp \\\n@@ -239,14 +243,16 @@ libbitcoin_wallet_a_SOURCES = \\\n   wallet/crypter.cpp \\\n   wallet/db.cpp \\\n   wallet/feebumper.cpp \\\n+  wallet/fees.cpp \\\n+  wallet/init.cpp \\\n   wallet/rpcdump.cpp \\\n   wallet/rpcwallet.cpp \\\n   wallet/wallet.cpp \\\n   wallet/walletdb.cpp \\\n   $(BITCOIN_CORE_H)\n \n # crypto primitives library\n-crypto_libbitcoin_crypto_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_CONFIG_INCLUDES)\n+crypto_libbitcoin_crypto_a_CPPFLAGS = $(AM_CPPFLAGS)\n crypto_libbitcoin_crypto_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n crypto_libbitcoin_crypto_a_SOURCES = \\\n   crypto/aes.cpp \\\n@@ -267,6 +273,10 @@ crypto_libbitcoin_crypto_a_SOURCES = \\\n   crypto/sha512.cpp \\\n   crypto/sha512.h\n \n+if USE_ASM\n+crypto_libbitcoin_crypto_a_SOURCES += crypto/sha256_sse4.cpp\n+endif\n+\n # consensus: shared between all executables that validate any consensus rules.\n libbitcoin_consensus_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n libbitcoin_consensus_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n@@ -307,6 +317,7 @@ libbitcoin_common_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n libbitcoin_common_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n libbitcoin_common_a_SOURCES = \\\n   base58.cpp \\\n+  bech32.cpp \\\n   chainparams.cpp \\\n   coins.cpp \\\n   compressor.cpp \\\n@@ -465,8 +476,7 @@ CLEANFILES += univalue/*.gcda univalue/*.gcno\n CLEANFILES += wallet/*.gcda wallet/*.gcno\n CLEANFILES += wallet/test/*.gcda wallet/test/*.gcno\n CLEANFILES += zmq/*.gcda zmq/*.gcno\n-\n-DISTCLEANFILES = obj/build.h\n+CLEANFILES += obj/build.h\n \n EXTRA_DIST = $(CTAES_DIST)\n "
      },
      {
        "sha": "8e2e587d3207c99d801da6acda66f3a17e52d703",
        "filename": "src/Makefile.bench.include",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/Makefile.bench.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/Makefile.bench.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.bench.include?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -6,11 +6,12 @@ bin_PROGRAMS += bench/bench_bitcoin\n BENCH_SRCDIR = bench\n BENCH_BINARY = bench/bench_bitcoin$(EXEEXT)\n \n-RAW_TEST_FILES = \\\n+RAW_BENCH_FILES = \\\n   bench/data/block413567.raw\n-GENERATED_TEST_FILES = $(RAW_TEST_FILES:.raw=.raw.h)\n+GENERATED_BENCH_FILES = $(RAW_BENCH_FILES:.raw=.raw.h)\n \n bench_bench_bitcoin_SOURCES = \\\n+  $(RAW_BENCH_FILES) \\\n   bench/bench_bitcoin.cpp \\\n   bench/bench.cpp \\\n   bench/bench.h \\\n@@ -28,7 +29,7 @@ bench_bench_bitcoin_SOURCES = \\\n   bench/perf.h \\\n   bench/prevector_destructor.cpp\n \n-nodist_bench_bench_bitcoin_SOURCES = $(GENERATED_TEST_FILES)\n+nodist_bench_bench_bitcoin_SOURCES = $(GENERATED_BENCH_FILES)\n \n bench_bench_bitcoin_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(EVENT_CLFAGS) $(EVENT_PTHREADS_CFLAGS) -I$(builddir)/bench/\n bench_bench_bitcoin_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n@@ -56,7 +57,7 @@ endif\n bench_bench_bitcoin_LDADD += $(BOOST_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS)\n bench_bench_bitcoin_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n \n-CLEAN_BITCOIN_BENCH = bench/*.gcda bench/*.gcno $(GENERATED_TEST_FILES)\n+CLEAN_BITCOIN_BENCH = bench/*.gcda bench/*.gcno $(GENERATED_BENCH_FILES)\n \n CLEANFILES += $(CLEAN_BITCOIN_BENCH)\n "
      },
      {
        "sha": "ea2ed17472ee59c47f12e8a0f0c602ce1e048de4",
        "filename": "src/Makefile.qttest.include",
        "status": "modified",
        "additions": 2,
        "deletions": 4,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/Makefile.qttest.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/Makefile.qttest.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qttest.include?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -25,12 +25,10 @@ TEST_QT_H = \\\n   qt/test/wallettests.h\n \n TEST_BITCOIN_CPP = \\\n-  test/test_bitcoin.cpp \\\n-  test/testutil.cpp\n+  test/test_bitcoin.cpp\n \n TEST_BITCOIN_H = \\\n-  test/test_bitcoin.h \\\n-  test/testutil.h\n+  test/test_bitcoin.h\n \n qt_test_test_bitcoin_qt_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(BITCOIN_QT_INCLUDES) \\\n   $(QT_INCLUDES) $(QT_TEST_INCLUDES) $(PROTOBUF_CFLAGS)"
      },
      {
        "sha": "d3e7b5da125979c1ff5a035e0419380a2a231c6a",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 8,
        "deletions": 6,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -31,6 +31,7 @@ BITCOIN_TESTS =\\\n   test/base32_tests.cpp \\\n   test/base58_tests.cpp \\\n   test/base64_tests.cpp \\\n+  test/bech32_tests.cpp \\\n   test/bip32_tests.cpp \\\n   test/blockencodings_tests.cpp \\\n   test/bloom_tests.cpp \\\n@@ -49,6 +50,7 @@ BITCOIN_TESTS =\\\n   test/main_tests.cpp \\\n   test/mempool_tests.cpp \\\n   test/merkle_tests.cpp \\\n+  test/merkleblock_tests.cpp \\\n   test/miner_tests.cpp \\\n   test/multisig_tests.cpp \\\n   test/net_tests.cpp \\\n@@ -65,6 +67,7 @@ BITCOIN_TESTS =\\\n   test/scheduler_tests.cpp \\\n   test/script_P2SH_tests.cpp \\\n   test/script_tests.cpp \\\n+  test/script_standard_tests.cpp \\\n   test/scriptnum_tests.cpp \\\n   test/serialize_tests.cpp \\\n   test/sighash_tests.cpp \\\n@@ -74,8 +77,6 @@ BITCOIN_TESTS =\\\n   test/test_bitcoin.cpp \\\n   test/test_bitcoin.h \\\n   test/test_bitcoin_main.cpp \\\n-  test/testutil.cpp \\\n-  test/testutil.h \\\n   test/timedata_tests.cpp \\\n   test/torcontrol_tests.cpp \\\n   test/transaction_tests.cpp \\\n@@ -96,12 +97,13 @@ endif\n \n test_test_bitcoin_SOURCES = $(BITCOIN_TESTS) $(JSON_TEST_FILES) $(RAW_TEST_FILES)\n test_test_bitcoin_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -I$(builddir)/test/ $(TESTDEFS) $(EVENT_CFLAGS)\n-test_test_bitcoin_LDADD = $(LIBBITCOIN_SERVER) $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CONSENSUS) $(LIBBITCOIN_CRYPTO) $(LIBUNIVALUE) \\\n-  $(LIBLEVELDB) $(LIBLEVELDB_SSE42) $(LIBMEMENV) $(BOOST_LIBS) $(BOOST_UNIT_TEST_FRAMEWORK_LIB) $(LIBSECP256K1) $(EVENT_LIBS) $(EVENT_PTHREADS_LIBS)\n-test_test_bitcoin_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_test_bitcoin_LDADD =\n if ENABLE_WALLET\n test_test_bitcoin_LDADD += $(LIBBITCOIN_WALLET)\n endif\n+test_test_bitcoin_LDADD += $(LIBBITCOIN_SERVER) $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CONSENSUS) $(LIBBITCOIN_CRYPTO) $(LIBUNIVALUE) \\\n+  $(LIBLEVELDB) $(LIBLEVELDB_SSE42) $(LIBMEMENV) $(BOOST_LIBS) $(BOOST_UNIT_TEST_FRAMEWORK_LIB) $(LIBSECP256K1) $(EVENT_LIBS) $(EVENT_PTHREADS_LIBS)\n+test_test_bitcoin_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n \n test_test_bitcoin_LDADD += $(LIBBITCOIN_CONSENSUS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS)\n test_test_bitcoin_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS) -static\n@@ -147,7 +149,7 @@ bitcoin_test_clean : FORCE\n \n check-local:\n \t@echo \"Running test/util/bitcoin-util-test.py...\"\n-\t$(top_builddir)/test/util/bitcoin-util-test.py\n+\t$(PYTHON) $(top_builddir)/test/util/bitcoin-util-test.py\n \t$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) -C secp256k1 check\n if EMBEDDED_UNIVALUE\n \t$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) -C univalue check"
      },
      {
        "sha": "d930de204d799d7859da97d47b146d0fb2ee675d",
        "filename": "src/addrdb.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/addrdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/addrdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrdb.h?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -37,7 +37,7 @@ class CBanEntry\n         SetNull();\n     }\n \n-    CBanEntry(int64_t nCreateTimeIn)\n+    explicit CBanEntry(int64_t nCreateTimeIn)\n     {\n         SetNull();\n         nCreateTime = nCreateTimeIn;\n@@ -61,7 +61,7 @@ class CBanEntry\n         banReason = BanReasonUnknown;\n     }\n \n-    std::string banReasonToString()\n+    std::string banReasonToString() const\n     {\n         switch (banReason) {\n         case BanReasonNodeMisbehaving:"
      },
      {
        "sha": "a56bb4f9c1c75136f25f7e0f5b064a81f7ead431",
        "filename": "src/addrman.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/addrman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/addrman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrman.cpp?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -69,13 +69,13 @@ CAddrInfo* CAddrMan::Find(const CNetAddr& addr, int* pnId)\n {\n     std::map<CNetAddr, int>::iterator it = mapAddr.find(addr);\n     if (it == mapAddr.end())\n-        return NULL;\n+        return nullptr;\n     if (pnId)\n         *pnId = (*it).second;\n     std::map<int, CAddrInfo>::iterator it2 = mapInfo.find((*it).second);\n     if (it2 != mapInfo.end())\n         return &(*it2).second;\n-    return NULL;\n+    return nullptr;\n }\n \n CAddrInfo* CAddrMan::Create(const CAddress& addr, const CNetAddr& addrSource, int* pnId)"
      },
      {
        "sha": "18f3062287306d15c06b00e72a91855148872c08",
        "filename": "src/addrman.h",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/addrman.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/addrman.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrman.h?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -220,11 +220,11 @@ class CAddrMan\n     FastRandomContext insecure_rand;\n \n     //! Find an entry.\n-    CAddrInfo* Find(const CNetAddr& addr, int *pnId = NULL);\n+    CAddrInfo* Find(const CNetAddr& addr, int *pnId = nullptr);\n \n     //! find an entry, creating it if necessary.\n     //! nTime and nServices of the found node are updated, if necessary.\n-    CAddrInfo* Create(const CAddress &addr, const CNetAddr &addrSource, int *pnId = NULL);\n+    CAddrInfo* Create(const CAddress &addr, const CNetAddr &addrSource, int *pnId = nullptr);\n \n     //! Swap two elements in vRandom.\n     void SwapRandom(unsigned int nRandomPos1, unsigned int nRandomPos2);\n@@ -472,6 +472,8 @@ class CAddrMan\n         nTried = 0;\n         nNew = 0;\n         nLastGood = 1; //Initially at 1 so that \"never\" is strictly worse.\n+        mapInfo.clear();\n+        mapAddr.clear();\n     }\n \n     CAddrMan()"
      },
      {
        "sha": "5fd4fe96cf573f16175ffda1b2c8527133dc12ae",
        "filename": "src/arith_uint256.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/arith_uint256.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/arith_uint256.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/arith_uint256.h?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -250,7 +250,7 @@ class base_uint\n \n     uint64_t GetLow64() const\n     {\n-        assert(WIDTH >= 2);\n+        static_assert(WIDTH >= 2, \"Assertion WIDTH >= 2 failed (WIDTH = BITS / 32). BITS is a template parameter.\");\n         return pn[0] | (uint64_t)pn[1] << 32;\n     }\n };\n@@ -283,7 +283,7 @@ class arith_uint256 : public base_uint<256> {\n      * complexities of the sign bit and using base 256 are probably an\n      * implementation accident.\n      */\n-    arith_uint256& SetCompact(uint32_t nCompact, bool *pfNegative = NULL, bool *pfOverflow = NULL);\n+    arith_uint256& SetCompact(uint32_t nCompact, bool *pfNegative = nullptr, bool *pfOverflow = nullptr);\n     uint32_t GetCompact(bool fNegative = false) const;\n \n     friend uint256 ArithToUint256(const arith_uint256 &);"
      },
      {
        "sha": "9d5a2f49645018ac2d38e73b66aa30868e76fc4d",
        "filename": "src/base58.cpp",
        "status": "modified",
        "additions": 124,
        "deletions": 67,
        "changes": 191,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/base58.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/base58.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/base58.cpp?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -4,17 +4,20 @@\n \n #include \"base58.h\"\n \n+#include \"bech32.h\"\n #include \"hash.h\"\n+#include \"script/script.h\"\n #include \"uint256.h\"\n+#include \"utilstrencodings.h\"\n \n-#include <assert.h>\n-#include <stdint.h>\n-#include <string.h>\n-#include <vector>\n-#include <string>\n #include <boost/variant/apply_visitor.hpp>\n #include <boost/variant/static_visitor.hpp>\n \n+#include <algorithm>\n+#include <assert.h>\n+#include <string.h>\n+\n+\n /** All alphanumeric characters except for \"0\", \"I\", \"O\", and \"l\" */\n static const char* pszBase58 = \"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\";\n \n@@ -37,7 +40,7 @@ bool DecodeBase58(const char* psz, std::vector<unsigned char>& vch)\n     while (*psz && !isspace(*psz)) {\n         // Decode base58 character\n         const char* ch = strchr(pszBase58, *psz);\n-        if (ch == NULL)\n+        if (ch == nullptr)\n             return false;\n         // Apply \"b256 = b256 * 58 + ch\".\n         int carry = ch - pszBase58;\n@@ -136,7 +139,7 @@ bool DecodeBase58Check(const char* psz, std::vector<unsigned char>& vchRet)\n     }\n     // re-calculate the checksum, ensure it matches the included 4-byte checksum\n     uint256 hash = Hash(vchRet.begin(), vchRet.end() - 4);\n-    if (memcmp(&hash, &vchRet.end()[-4], 4) != 0) {\n+    if (memcmp(&hash, &vchRet[vchRet.size() - 4], 4) != 0) {\n         vchRet.clear();\n         return false;\n     }\n@@ -212,79 +215,113 @@ int CBase58Data::CompareTo(const CBase58Data& b58) const\n \n namespace\n {\n-class CBitcoinAddressVisitor : public boost::static_visitor<bool>\n+class DestinationEncoder : public boost::static_visitor<std::string>\n {\n private:\n-    CBitcoinAddress* addr;\n+    const CChainParams& m_params;\n \n public:\n-    CBitcoinAddressVisitor(CBitcoinAddress* addrIn) : addr(addrIn) {}\n-\n-    bool operator()(const CKeyID& id) const { return addr->Set(id); }\n-    bool operator()(const CScriptID& id) const { return addr->Set(id); }\n-    bool operator()(const CNoDestination& no) const { return false; }\n-};\n-\n-} // namespace\n-\n-bool CBitcoinAddress::Set(const CKeyID& id)\n-{\n-    SetData(Params().Base58Prefix(CChainParams::PUBKEY_ADDRESS), &id, 20);\n-    return true;\n-}\n+    DestinationEncoder(const CChainParams& params) : m_params(params) {}\n \n-bool CBitcoinAddress::Set(const CScriptID& id)\n-{\n-    SetData(Params().Base58Prefix(CChainParams::SCRIPT_ADDRESS), &id, 20);\n-    return true;\n-}\n+    std::string operator()(const CKeyID& id) const\n+    {\n+        std::vector<unsigned char> data = m_params.Base58Prefix(CChainParams::PUBKEY_ADDRESS);\n+        data.insert(data.end(), id.begin(), id.end());\n+        return EncodeBase58Check(data);\n+    }\n \n-bool CBitcoinAddress::Set(const CTxDestination& dest)\n-{\n-    return boost::apply_visitor(CBitcoinAddressVisitor(this), dest);\n-}\n+    std::string operator()(const CScriptID& id) const\n+    {\n+        std::vector<unsigned char> data = m_params.Base58Prefix(CChainParams::SCRIPT_ADDRESS);\n+        data.insert(data.end(), id.begin(), id.end());\n+        return EncodeBase58Check(data);\n+    }\n \n-bool CBitcoinAddress::IsValid() const\n-{\n-    return IsValid(Params());\n-}\n+    std::string operator()(const WitnessV0KeyHash& id) const\n+    {\n+        std::vector<unsigned char> data = {0};\n+        ConvertBits<8, 5, true>(data, id.begin(), id.end());\n+        return bech32::Encode(m_params.Bech32HRP(), data);\n+    }\n \n-bool CBitcoinAddress::IsValid(const CChainParams& params) const\n-{\n-    bool fCorrectSize = vchData.size() == 20;\n-    bool fKnownVersion = vchVersion == params.Base58Prefix(CChainParams::PUBKEY_ADDRESS) ||\n-                         vchVersion == params.Base58Prefix(CChainParams::SCRIPT_ADDRESS);\n-    return fCorrectSize && fKnownVersion;\n-}\n+    std::string operator()(const WitnessV0ScriptHash& id) const\n+    {\n+        std::vector<unsigned char> data = {0};\n+        ConvertBits<8, 5, true>(data, id.begin(), id.end());\n+        return bech32::Encode(m_params.Bech32HRP(), data);\n+    }\n \n-CTxDestination CBitcoinAddress::Get() const\n-{\n-    if (!IsValid())\n-        return CNoDestination();\n-    uint160 id;\n-    memcpy(&id, vchData.data(), 20);\n-    if (vchVersion == Params().Base58Prefix(CChainParams::PUBKEY_ADDRESS))\n-        return CKeyID(id);\n-    else if (vchVersion == Params().Base58Prefix(CChainParams::SCRIPT_ADDRESS))\n-        return CScriptID(id);\n-    else\n-        return CNoDestination();\n-}\n+    std::string operator()(const WitnessUnknown& id) const\n+    {\n+        if (id.version < 1 || id.version > 16 || id.length < 2 || id.length > 40) {\n+            return {};\n+        }\n+        std::vector<unsigned char> data = {(unsigned char)id.version};\n+        ConvertBits<8, 5, true>(data, id.program, id.program + id.length);\n+        return bech32::Encode(m_params.Bech32HRP(), data);\n+    }\n \n-bool CBitcoinAddress::GetKeyID(CKeyID& keyID) const\n-{\n-    if (!IsValid() || vchVersion != Params().Base58Prefix(CChainParams::PUBKEY_ADDRESS))\n-        return false;\n-    uint160 id;\n-    memcpy(&id, vchData.data(), 20);\n-    keyID = CKeyID(id);\n-    return true;\n-}\n+    std::string operator()(const CNoDestination& no) const { return {}; }\n+};\n \n-bool CBitcoinAddress::IsScript() const\n+CTxDestination DecodeDestination(const std::string& str, const CChainParams& params)\n {\n-    return IsValid() && vchVersion == Params().Base58Prefix(CChainParams::SCRIPT_ADDRESS);\n+    std::vector<unsigned char> data;\n+    uint160 hash;\n+    if (DecodeBase58Check(str, data)) {\n+        // base58-encoded Bitcoin addresses.\n+        // Public-key-hash-addresses have version 0 (or 111 testnet).\n+        // The data vector contains RIPEMD160(SHA256(pubkey)), where pubkey is the serialized public key.\n+        const std::vector<unsigned char>& pubkey_prefix = params.Base58Prefix(CChainParams::PUBKEY_ADDRESS);\n+        if (data.size() == hash.size() + pubkey_prefix.size() && std::equal(pubkey_prefix.begin(), pubkey_prefix.end(), data.begin())) {\n+            std::copy(data.begin() + pubkey_prefix.size(), data.end(), hash.begin());\n+            return CKeyID(hash);\n+        }\n+        // Script-hash-addresses have version 5 (or 196 testnet).\n+        // The data vector contains RIPEMD160(SHA256(cscript)), where cscript is the serialized redemption script.\n+        const std::vector<unsigned char>& script_prefix = params.Base58Prefix(CChainParams::SCRIPT_ADDRESS);\n+        if (data.size() == hash.size() + script_prefix.size() && std::equal(script_prefix.begin(), script_prefix.end(), data.begin())) {\n+            std::copy(data.begin() + script_prefix.size(), data.end(), hash.begin());\n+            return CScriptID(hash);\n+        }\n+    }\n+    data.clear();\n+    auto bech = bech32::Decode(str);\n+    if (bech.second.size() > 0 && bech.first == params.Bech32HRP()) {\n+        // Bech32 decoding\n+        int version = bech.second[0]; // The first 5 bit symbol is the witness version (0-16)\n+        // The rest of the symbols are converted witness program bytes.\n+        if (ConvertBits<5, 8, false>(data, bech.second.begin() + 1, bech.second.end())) {\n+            if (version == 0) {\n+                {\n+                    WitnessV0KeyHash keyid;\n+                    if (data.size() == keyid.size()) {\n+                        std::copy(data.begin(), data.end(), keyid.begin());\n+                        return keyid;\n+                    }\n+                }\n+                {\n+                    WitnessV0ScriptHash scriptid;\n+                    if (data.size() == scriptid.size()) {\n+                        std::copy(data.begin(), data.end(), scriptid.begin());\n+                        return scriptid;\n+                    }\n+                }\n+                return CNoDestination();\n+            }\n+            if (version > 16 || data.size() < 2 || data.size() > 40) {\n+                return CNoDestination();\n+            }\n+            WitnessUnknown unk;\n+            unk.version = version;\n+            std::copy(data.begin(), data.end(), unk.program);\n+            unk.length = data.size();\n+            return unk;\n+        }\n+    }\n+    return CNoDestination();\n }\n+} // namespace\n \n void CBitcoinSecret::SetKey(const CKey& vchSecret)\n {\n@@ -318,3 +355,23 @@ bool CBitcoinSecret::SetString(const std::string& strSecret)\n {\n     return SetString(strSecret.c_str());\n }\n+\n+std::string EncodeDestination(const CTxDestination& dest)\n+{\n+    return boost::apply_visitor(DestinationEncoder(Params()), dest);\n+}\n+\n+CTxDestination DecodeDestination(const std::string& str)\n+{\n+    return DecodeDestination(str, Params());\n+}\n+\n+bool IsValidDestinationString(const std::string& str, const CChainParams& params)\n+{\n+    return IsValidDestination(DecodeDestination(str, params));\n+}\n+\n+bool IsValidDestinationString(const std::string& str)\n+{\n+    return IsValidDestinationString(str, Params());\n+}"
      },
      {
        "sha": "9dc4234248b0b411280776e8ae0c4a2443907bf4",
        "filename": "src/base58.h",
        "status": "modified",
        "additions": 7,
        "deletions": 27,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/base58.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/base58.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/base58.h?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -17,7 +17,6 @@\n #include \"chainparams.h\"\n #include \"key.h\"\n #include \"pubkey.h\"\n-#include \"script/script.h\"\n #include \"script/standard.h\"\n #include \"support/allocators/zeroafterfree.h\"\n \n@@ -26,7 +25,7 @@\n \n /**\n  * Encode a byte sequence as a base58-encoded string.\n- * pbegin and pend cannot be NULL, unless both are.\n+ * pbegin and pend cannot be nullptr, unless both are.\n  */\n std::string EncodeBase58(const unsigned char* pbegin, const unsigned char* pend);\n \n@@ -38,7 +37,7 @@ std::string EncodeBase58(const std::vector<unsigned char>& vch);\n /**\n  * Decode a base58-encoded string (psz) into a byte vector (vchRet).\n  * return true if decoding is successful.\n- * psz cannot be NULL.\n+ * psz cannot be nullptr.\n  */\n bool DecodeBase58(const char* psz, std::vector<unsigned char>& vchRet);\n \n@@ -95,30 +94,6 @@ class CBase58Data\n     bool operator> (const CBase58Data& b58) const { return CompareTo(b58) >  0; }\n };\n \n-/** base58-encoded Bitcoin addresses.\n- * Public-key-hash-addresses have version 0 (or 111 testnet).\n- * The data vector contains RIPEMD160(SHA256(pubkey)), where pubkey is the serialized public key.\n- * Script-hash-addresses have version 5 (or 196 testnet).\n- * The data vector contains RIPEMD160(SHA256(cscript)), where cscript is the serialized redemption script.\n- */\n-class CBitcoinAddress : public CBase58Data {\n-public:\n-    bool Set(const CKeyID &id);\n-    bool Set(const CScriptID &id);\n-    bool Set(const CTxDestination &dest);\n-    bool IsValid() const;\n-    bool IsValid(const CChainParams &params) const;\n-\n-    CBitcoinAddress() {}\n-    CBitcoinAddress(const CTxDestination &dest) { Set(dest); }\n-    CBitcoinAddress(const std::string& strAddress) { SetString(strAddress); }\n-    CBitcoinAddress(const char* pszAddress) { SetString(pszAddress); }\n-\n-    CTxDestination Get() const;\n-    bool GetKeyID(CKeyID &keyID) const;\n-    bool IsScript() const;\n-};\n-\n /**\n  * A base58-encoded secret key\n  */\n@@ -167,4 +142,9 @@ template<typename K, int Size, CChainParams::Base58Type Type> class CBitcoinExtK\n typedef CBitcoinExtKeyBase<CExtKey, BIP32_EXTKEY_SIZE, CChainParams::EXT_SECRET_KEY> CBitcoinExtKey;\n typedef CBitcoinExtKeyBase<CExtPubKey, BIP32_EXTKEY_SIZE, CChainParams::EXT_PUBLIC_KEY> CBitcoinExtPubKey;\n \n+std::string EncodeDestination(const CTxDestination& dest);\n+CTxDestination DecodeDestination(const std::string& str);\n+bool IsValidDestinationString(const std::string& str);\n+bool IsValidDestinationString(const std::string& str, const CChainParams& params);\n+\n #endif // BITCOIN_BASE58_H"
      },
      {
        "sha": "573eac58bb8eec775a28ce76ea088dbaac8e705a",
        "filename": "src/bech32.cpp",
        "status": "added",
        "additions": 191,
        "deletions": 0,
        "changes": 191,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/bech32.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/bech32.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bech32.cpp?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -0,0 +1,191 @@\n+// Copyright (c) 2017 Pieter Wuille\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"bech32.h\"\n+\n+namespace\n+{\n+\n+typedef std::vector<uint8_t> data;\n+\n+/** The Bech32 character set for encoding. */\n+const char* CHARSET = \"qpzry9x8gf2tvdw0s3jn54khce6mua7l\";\n+\n+/** The Bech32 character set for decoding. */\n+const int8_t CHARSET_REV[128] = {\n+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n+    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n+    15, -1, 10, 17, 21, 20, 26, 30,  7,  5, -1, -1, -1, -1, -1, -1,\n+    -1, 29, -1, 24, 13, 25,  9,  8, 23, -1, 18, 22, 31, 27, 19, -1,\n+     1,  0,  3, 16, 11, 28, 12, 14,  6,  4,  2, -1, -1, -1, -1, -1,\n+    -1, 29, -1, 24, 13, 25,  9,  8, 23, -1, 18, 22, 31, 27, 19, -1,\n+     1,  0,  3, 16, 11, 28, 12, 14,  6,  4,  2, -1, -1, -1, -1, -1\n+};\n+\n+/** Concatenate two byte arrays. */\n+data Cat(data x, const data& y)\n+{\n+    x.insert(x.end(), y.begin(), y.end());\n+    return x;\n+}\n+\n+/** This function will compute what 6 5-bit values to XOR into the last 6 input values, in order to\n+ *  make the checksum 0. These 6 values are packed together in a single 30-bit integer. The higher\n+ *  bits correspond to earlier values. */\n+uint32_t PolyMod(const data& v)\n+{\n+    // The input is interpreted as a list of coefficients of a polynomial over F = GF(32), with an\n+    // implicit 1 in front. If the input is [v0,v1,v2,v3,v4], that polynomial is v(x) =\n+    // 1*x^5 + v0*x^4 + v1*x^3 + v2*x^2 + v3*x + v4. The implicit 1 guarantees that\n+    // [v0,v1,v2,...] has a distinct checksum from [0,v0,v1,v2,...].\n+\n+    // The output is a 30-bit integer whose 5-bit groups are the coefficients of the remainder of\n+    // v(x) mod g(x), where g(x) is the Bech32 generator,\n+    // x^6 + {29}x^5 + {22}x^4 + {20}x^3 + {21}x^2 + {29}x + {18}. g(x) is chosen in such a way\n+    // that the resulting code is a BCH code, guaranteeing detection of up to 3 errors within a\n+    // window of 1023 characters. Among the various possible BCH codes, one was selected to in\n+    // fact guarantee detection of up to 4 errors within a window of 89 characters.\n+\n+    // Note that the coefficients are elements of GF(32), here represented as decimal numbers\n+    // between {}. In this finite field, addition is just XOR of the corresponding numbers. For\n+    // example, {27} + {13} = {27 ^ 13} = {22}. Multiplication is more complicated, and requires\n+    // treating the bits of values themselves as coefficients of a polynomial over a smaller field,\n+    // GF(2), and multiplying those polynomials mod a^5 + a^3 + 1. For example, {5} * {26} =\n+    // (a^2 + 1) * (a^4 + a^3 + a) = (a^4 + a^3 + a) * a^2 + (a^4 + a^3 + a) = a^6 + a^5 + a^4 + a\n+    // = a^3 + 1 (mod a^5 + a^3 + 1) = {9}.\n+\n+    // During the course of the loop below, `c` contains the bitpacked coefficients of the\n+    // polynomial constructed from just the values of v that were processed so far, mod g(x). In\n+    // the above example, `c` initially corresponds to 1 mod (x), and after processing 2 inputs of\n+    // v, it corresponds to x^2 + v0*x + v1 mod g(x). As 1 mod g(x) = 1, that is the starting value\n+    // for `c`.\n+    uint32_t c = 1;\n+    for (auto v_i : v) {\n+        // We want to update `c` to correspond to a polynomial with one extra term. If the initial\n+        // value of `c` consists of the coefficients of c(x) = f(x) mod g(x), we modify it to\n+        // correspond to c'(x) = (f(x) * x + v_i) mod g(x), where v_i is the next input to\n+        // process. Simplifying:\n+        // c'(x) = (f(x) * x + v_i) mod g(x)\n+        //         ((f(x) mod g(x)) * x + v_i) mod g(x)\n+        //         (c(x) * x + v_i) mod g(x)\n+        // If c(x) = c0*x^5 + c1*x^4 + c2*x^3 + c3*x^2 + c4*x + c5, we want to compute\n+        // c'(x) = (c0*x^5 + c1*x^4 + c2*x^3 + c3*x^2 + c4*x + c5) * x + v_i mod g(x)\n+        //       = c0*x^6 + c1*x^5 + c2*x^4 + c3*x^3 + c4*x^2 + c5*x + v_i mod g(x)\n+        //       = c0*(x^6 mod g(x)) + c1*x^5 + c2*x^4 + c3*x^3 + c4*x^2 + c5*x + v_i\n+        // If we call (x^6 mod g(x)) = k(x), this can be written as\n+        // c'(x) = (c1*x^5 + c2*x^4 + c3*x^3 + c4*x^2 + c5*x + v_i) + c0*k(x)\n+\n+        // First, determine the value of c0:\n+        uint8_t c0 = c >> 25;\n+\n+        // Then compute c1*x^5 + c2*x^4 + c3*x^3 + c4*x^2 + c5*x + v_i:\n+        c = ((c & 0x1ffffff) << 5) ^ v_i;\n+\n+        // Finally, for each set bit n in c0, conditionally add {2^n}k(x):\n+        if (c0 & 1)  c ^= 0x3b6a57b2; //     k(x) = {29}x^5 + {22}x^4 + {20}x^3 + {21}x^2 + {29}x + {18}\n+        if (c0 & 2)  c ^= 0x26508e6d; //  {2}k(x) = {19}x^5 +  {5}x^4 +     x^3 +  {3}x^2 + {19}x + {13}\n+        if (c0 & 4)  c ^= 0x1ea119fa; //  {4}k(x) = {15}x^5 + {10}x^4 +  {2}x^3 +  {6}x^2 + {15}x + {26}\n+        if (c0 & 8)  c ^= 0x3d4233dd; //  {8}k(x) = {30}x^5 + {20}x^4 +  {4}x^3 + {12}x^2 + {30}x + {29}\n+        if (c0 & 16) c ^= 0x2a1462b3; // {16}k(x) = {21}x^5 +     x^4 +  {8}x^3 + {24}x^2 + {21}x + {19}\n+    }\n+    return c;\n+}\n+\n+/** Convert to lower case. */\n+inline unsigned char LowerCase(unsigned char c)\n+{\n+    return (c >= 'A' && c <= 'Z') ? (c - 'A') + 'a' : c;\n+}\n+\n+/** Expand a HRP for use in checksum computation. */\n+data ExpandHRP(const std::string& hrp)\n+{\n+    data ret;\n+    ret.reserve(hrp.size() + 90);\n+    ret.resize(hrp.size() * 2 + 1);\n+    for (size_t i = 0; i < hrp.size(); ++i) {\n+        unsigned char c = hrp[i];\n+        ret[i] = c >> 5;\n+        ret[i + hrp.size() + 1] = c & 0x1f;\n+    }\n+    ret[hrp.size()] = 0;\n+    return ret;\n+}\n+\n+/** Verify a checksum. */\n+bool VerifyChecksum(const std::string& hrp, const data& values)\n+{\n+    // PolyMod computes what value to xor into the final values to make the checksum 0. However,\n+    // if we required that the checksum was 0, it would be the case that appending a 0 to a valid\n+    // list of values would result in a new valid list. For that reason, Bech32 requires the\n+    // resulting checksum to be 1 instead.\n+    return PolyMod(Cat(ExpandHRP(hrp), values)) == 1;\n+}\n+\n+/** Create a checksum. */\n+data CreateChecksum(const std::string& hrp, const data& values)\n+{\n+    data enc = Cat(ExpandHRP(hrp), values);\n+    enc.resize(enc.size() + 6); // Append 6 zeroes\n+    uint32_t mod = PolyMod(enc) ^ 1; // Determine what to XOR into those 6 zeroes.\n+    data ret(6);\n+    for (size_t i = 0; i < 6; ++i) {\n+        // Convert the 5-bit groups in mod to checksum values.\n+        ret[i] = (mod >> (5 * (5 - i))) & 31;\n+    }\n+    return ret;\n+}\n+\n+} // namespace\n+\n+namespace bech32\n+{\n+\n+/** Encode a Bech32 string. */\n+std::string Encode(const std::string& hrp, const data& values) {\n+    data checksum = CreateChecksum(hrp, values);\n+    data combined = Cat(values, checksum);\n+    std::string ret = hrp + '1';\n+    ret.reserve(ret.size() + combined.size());\n+    for (auto c : combined) {\n+        ret += CHARSET[c];\n+    }\n+    return ret;\n+}\n+\n+/** Decode a Bech32 string. */\n+std::pair<std::string, data> Decode(const std::string& str) {\n+    bool lower = false, upper = false;\n+    for (size_t i = 0; i < str.size(); ++i) {\n+        unsigned char c = str[i];\n+        if (c < 33 || c > 126) return {};\n+        if (c >= 'a' && c <= 'z') lower = true;\n+        if (c >= 'A' && c <= 'Z') upper = true;\n+    }\n+    if (lower && upper) return {};\n+    size_t pos = str.rfind('1');\n+    if (str.size() > 90 || pos == str.npos || pos == 0 || pos + 7 > str.size()) {\n+        return {};\n+    }\n+    data values(str.size() - 1 - pos);\n+    for (size_t i = 0; i < str.size() - 1 - pos; ++i) {\n+        unsigned char c = str[i + pos + 1];\n+        int8_t rev = (c < 33 || c > 126) ? -1 : CHARSET_REV[c];\n+        if (rev == -1) {\n+            return {};\n+        }\n+        values[i] = rev;\n+    }\n+    std::string hrp;\n+    for (size_t i = 0; i < pos; ++i) {\n+        hrp += LowerCase(str[i]);\n+    }\n+    if (!VerifyChecksum(hrp, values)) {\n+        return {};\n+    }\n+    return {hrp, data(values.begin(), values.end() - 6)};\n+}\n+\n+} // namespace bech32"
      },
      {
        "sha": "7ef7b22213fe6f5a95e6b4c01bc6222c0c7885ca",
        "filename": "src/bech32.h",
        "status": "added",
        "additions": 25,
        "deletions": 0,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/bech32.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/bech32.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bech32.h?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -0,0 +1,25 @@\n+// Copyright (c) 2017 Pieter Wuille\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+// Bech32 is a string encoding format used in newer address types.\n+// The output consists of a human-readable part (alphanumeric), a\n+// separator character (1), and a base32 data section, the last\n+// 6 characters of which are a checksum.\n+//\n+// For more information, see BIP 173.\n+\n+#include <stdint.h>\n+#include <string>\n+#include <vector>\n+\n+namespace bech32\n+{\n+\n+/** Encode a Bech32 string. Returns the empty string in case of failure. */\n+std::string Encode(const std::string& hrp, const std::vector<uint8_t>& values);\n+\n+/** Decode a Bech32 string. Returns (hrp, data). Empty hrp means failure. */\n+std::pair<std::string, std::vector<uint8_t>> Decode(const std::string& str);\n+\n+} // namespace bech32"
      },
      {
        "sha": "7b307d6f42381e7b27cbfb21c882b88688acf63d",
        "filename": "src/bench/bench.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 5,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/bench/bench.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/bench/bench.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/bench.cpp?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -17,7 +17,7 @@ benchmark::BenchRunner::BenchmarkMap &benchmark::BenchRunner::benchmarks() {\n \n static double gettimedouble(void) {\n     struct timeval tv;\n-    gettimeofday(&tv, NULL);\n+    gettimeofday(&tv, nullptr);\n     return tv.tv_usec * 0.000001 + tv.tv_sec;\n }\n \n@@ -55,21 +55,20 @@ bool benchmark::State::KeepRunning()\n     else {\n         now = gettimedouble();\n         double elapsed = now - lastTime;\n-        double elapsedOne = elapsed * countMaskInv;\n+        double elapsedOne = elapsed / (countMask + 1);\n         if (elapsedOne < minTime) minTime = elapsedOne;\n         if (elapsedOne > maxTime) maxTime = elapsedOne;\n \n         // We only use relative values, so don't have to handle 64-bit wrap-around specially\n         nowCycles = perf_cpucycles();\n-        uint64_t elapsedOneCycles = (nowCycles - lastCycles) * countMaskInv;\n+        uint64_t elapsedOneCycles = (nowCycles - lastCycles) / (countMask + 1);\n         if (elapsedOneCycles < minCycles) minCycles = elapsedOneCycles;\n         if (elapsedOneCycles > maxCycles) maxCycles = elapsedOneCycles;\n \n         if (elapsed*128 < maxElapsed) {\n           // If the execution was much too fast (1/128th of maxElapsed), increase the count mask by 8x and restart timing.\n           // The restart avoids including the overhead of this code in the measurement.\n           countMask = ((countMask<<3)|7) & ((1LL<<60)-1);\n-          countMaskInv = 1./(countMask+1);\n           count = 0;\n           minTime = std::numeric_limits<double>::max();\n           maxTime = std::numeric_limits<double>::min();\n@@ -81,7 +80,6 @@ bool benchmark::State::KeepRunning()\n           uint64_t newCountMask = ((countMask<<1)|1) & ((1LL<<60)-1);\n           if ((count & newCountMask)==0) {\n               countMask = newCountMask;\n-              countMaskInv = 1./(countMask+1);\n           }\n         }\n     }\n@@ -100,6 +98,7 @@ bool benchmark::State::KeepRunning()\n     int64_t averageCycles = (nowCycles-beginCycles)/count;\n     std::cout << std::fixed << std::setprecision(15) << name << \",\" << count << \",\" << minTime << \",\" << maxTime << \",\" << average << \",\"\n               << minCycles << \",\" << maxCycles << \",\" << averageCycles << \"\\n\";\n+    std::cout.copyfmt(std::ios(nullptr));\n \n     return false;\n }"
      },
      {
        "sha": "79109eaa5615123e7b196ff94bc1e96b4f00bfcb",
        "filename": "src/bench/bench.h",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/bench/bench.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/bench/bench.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/bench.h?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -41,7 +41,7 @@ namespace benchmark {\n         std::string name;\n         double maxElapsed;\n         double beginTime;\n-        double lastTime, minTime, maxTime, countMaskInv;\n+        double lastTime, minTime, maxTime;\n         uint64_t count;\n         uint64_t countMask;\n         uint64_t beginCycles;\n@@ -55,7 +55,6 @@ namespace benchmark {\n             minCycles = std::numeric_limits<uint64_t>::max();\n             maxCycles = std::numeric_limits<uint64_t>::min();\n             countMask = 1;\n-            countMaskInv = 1./(countMask + 1);\n         }\n         bool KeepRunning();\n     };"
      },
      {
        "sha": "37fd772435ed70ce760fc1ad8f3b36f1f37776e1",
        "filename": "src/bench/bench_bitcoin.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/bench/bench_bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/bench/bench_bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/bench_bitcoin.cpp?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -4,6 +4,7 @@\n \n #include \"bench.h\"\n \n+#include \"crypto/sha256.h\"\n #include \"key.h\"\n #include \"validation.h\"\n #include \"util.h\"\n@@ -12,6 +13,7 @@\n int\n main(int argc, char** argv)\n {\n+    SHA256AutoDetect();\n     RandomInit();\n     ECC_Start();\n     SetupEnvironment();"
      },
      {
        "sha": "b7ae5c2d572d45bc865a322b0d8d938deb57e499",
        "filename": "src/bench/checkqueue.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/bench/checkqueue.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/bench/checkqueue.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/checkqueue.cpp?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -67,7 +67,7 @@ static void CCheckQueueSpeedPrevectorJob(benchmark::State& state)\n         prevector<PREVECTOR_SIZE, uint8_t> p;\n         PrevectorJob(){\n         }\n-        PrevectorJob(FastRandomContext& insecure_rand){\n+        explicit PrevectorJob(FastRandomContext& insecure_rand){\n             p.resize(insecure_rand.randrange(PREVECTOR_SIZE*2));\n         }\n         bool operator()()"
      },
      {
        "sha": "410a08e512cbfbab49e9fabd04dc560e37f1dce3",
        "filename": "src/bench/crypto_hash.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/bench/crypto_hash.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/bench/crypto_hash.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/crypto_hash.cpp?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -47,7 +47,7 @@ static void SHA256_32b(benchmark::State& state)\n     std::vector<uint8_t> in(32,0);\n     while (state.KeepRunning()) {\n         for (int i = 0; i < 1000000; i++) {\n-            CSHA256().Write(in.data(), in.size()).Finalize(&in[0]);\n+            CSHA256().Write(in.data(), in.size()).Finalize(in.data());\n         }\n     }\n }"
      },
      {
        "sha": "c6a05567be9c8fe0743434815a76a6c8e7d00c9d",
        "filename": "src/bench/lockedpool.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/bench/lockedpool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/bench/lockedpool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/lockedpool.cpp?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -21,14 +21,14 @@ static void BenchLockedPool(benchmark::State& state)\n \n     std::vector<void*> addr;\n     for (int x=0; x<ASIZE; ++x)\n-        addr.push_back(0);\n+        addr.push_back(nullptr);\n     uint32_t s = 0x12345678;\n     while (state.KeepRunning()) {\n         for (int x=0; x<BITER; ++x) {\n             int idx = s & (addr.size()-1);\n             if (s & 0x80000000) {\n                 b.free(addr[idx]);\n-                addr[idx] = 0;\n+                addr[idx] = nullptr;\n             } else if(!addr[idx]) {\n                 addr[idx] = b.alloc((s >> 16) & (MSIZE-1));\n             }"
      },
      {
        "sha": "e21a2692212a4a7660581f9c6413d4cd1f233664",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 156,
        "deletions": 37,
        "changes": 193,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -37,6 +37,7 @@ std::string HelpMessageCli()\n     strUsage += HelpMessageOpt(\"-?\", _(\"This help message\"));\n     strUsage += HelpMessageOpt(\"-conf=<file>\", strprintf(_(\"Specify configuration file (default: %s)\"), BITCOIN_CONF_FILENAME));\n     strUsage += HelpMessageOpt(\"-datadir=<dir>\", _(\"Specify data directory\"));\n+    strUsage += HelpMessageOpt(\"-getinfo\", _(\"Get general information from the remote server. Note that unlike server-side RPC calls, the results of -getinfo is the result of multiple non-atomic requests. Some entries in the result may represent results from different states (e.g. wallet balance may be as of a different block from the chain state reported)\"));\n     AppendParamsHelpMessages(strUsage);\n     strUsage += HelpMessageOpt(\"-named\", strprintf(_(\"Pass named instead of positional arguments (default: %s)\"), DEFAULT_NAMED));\n     strUsage += HelpMessageOpt(\"-rpcconnect=<ip>\", strprintf(_(\"Send commands to node running on <ip> (default: %s)\"), DEFAULT_RPCCONNECT));\n@@ -45,7 +46,9 @@ std::string HelpMessageCli()\n     strUsage += HelpMessageOpt(\"-rpcuser=<user>\", _(\"Username for JSON-RPC connections\"));\n     strUsage += HelpMessageOpt(\"-rpcpassword=<pw>\", _(\"Password for JSON-RPC connections\"));\n     strUsage += HelpMessageOpt(\"-rpcclienttimeout=<n>\", strprintf(_(\"Timeout in seconds during HTTP requests, or 0 for no timeout. (default: %d)\"), DEFAULT_HTTP_CLIENT_TIMEOUT));\n-    strUsage += HelpMessageOpt(\"-stdin\", _(\"Read extra arguments from standard input, one per line until EOF/Ctrl-D (recommended for sensitive information such as passphrases)\"));\n+    strUsage += HelpMessageOpt(\"-stdinrpcpass\", strprintf(_(\"Read RPC password from standard input as a single line.  When combined with -stdin, the first line from standard input is used for the RPC password.\")));\n+    strUsage += HelpMessageOpt(\"-stdin\", _(\"Read extra arguments from standard input, one per line until EOF/Ctrl-D (recommended for sensitive information such as passphrases).  When combined with -stdinrpcpass, the first line from standard input is used for the RPC password.\"));\n+    strUsage += HelpMessageOpt(\"-rpcwallet=<walletname>\", _(\"Send RPC for non-default wallet on RPC server (argument is wallet filename in bitcoind directory, required if bitcoind/-Qt runs with multiple wallets)\"));\n \n     return strUsage;\n }\n@@ -78,10 +81,10 @@ static int AppInitRPC(int argc, char* argv[])\n     //\n     // Parameters\n     //\n-    ParseParameters(argc, argv);\n-    if (argc<2 || IsArgSet(\"-?\") || IsArgSet(\"-h\") || IsArgSet(\"-help\") || IsArgSet(\"-version\")) {\n+    gArgs.ParseParameters(argc, argv);\n+    if (argc<2 || gArgs.IsArgSet(\"-?\") || gArgs.IsArgSet(\"-h\") || gArgs.IsArgSet(\"-help\") || gArgs.IsArgSet(\"-version\")) {\n         std::string strUsage = strprintf(_(\"%s RPC client version\"), _(PACKAGE_NAME)) + \" \" + FormatFullVersion() + \"\\n\";\n-        if (!IsArgSet(\"-version\")) {\n+        if (!gArgs.IsArgSet(\"-version\")) {\n             strUsage += \"\\n\" + _(\"Usage:\") + \"\\n\" +\n                   \"  bitcoin-cli [options] <command> [params]  \" + strprintf(_(\"Send command to %s\"), _(PACKAGE_NAME)) + \"\\n\" +\n                   \"  bitcoin-cli [options] -named <command> [name=value] ... \" + strprintf(_(\"Send command to %s (with named arguments)\"), _(PACKAGE_NAME)) + \"\\n\" +\n@@ -99,11 +102,11 @@ static int AppInitRPC(int argc, char* argv[])\n         return EXIT_SUCCESS;\n     }\n     if (!fs::is_directory(GetDataDir(false))) {\n-        fprintf(stderr, \"Error: Specified data directory \\\"%s\\\" does not exist.\\n\", GetArg(\"-datadir\", \"\").c_str());\n+        fprintf(stderr, \"Error: Specified data directory \\\"%s\\\" does not exist.\\n\", gArgs.GetArg(\"-datadir\", \"\").c_str());\n         return EXIT_FAILURE;\n     }\n     try {\n-        ReadConfigFile(GetArg(\"-conf\", BITCOIN_CONF_FILENAME));\n+        gArgs.ReadConfigFile(gArgs.GetArg(\"-conf\", BITCOIN_CONF_FILENAME));\n     } catch (const std::exception& e) {\n         fprintf(stderr,\"Error reading configuration file: %s\\n\", e.what());\n         return EXIT_FAILURE;\n@@ -115,7 +118,7 @@ static int AppInitRPC(int argc, char* argv[])\n         fprintf(stderr, \"Error: %s\\n\", e.what());\n         return EXIT_FAILURE;\n     }\n-    if (GetBoolArg(\"-rpcssl\", false))\n+    if (gArgs.GetBoolArg(\"-rpcssl\", false))\n     {\n         fprintf(stderr, \"Error: SSL mode for RPC (-rpcssl) is no longer supported.\\n\");\n         return EXIT_FAILURE;\n@@ -160,8 +163,8 @@ static void http_request_done(struct evhttp_request *req, void *ctx)\n {\n     HTTPReply *reply = static_cast<HTTPReply*>(ctx);\n \n-    if (req == NULL) {\n-        /* If req is NULL, it means an error occurred while connecting: the\n+    if (req == nullptr) {\n+        /* If req is nullptr, it means an error occurred while connecting: the\n          * error code will have been passed to http_error_cb.\n          */\n         reply->status = 0;\n@@ -189,44 +192,133 @@ static void http_error_cb(enum evhttp_request_error err, void *ctx)\n }\n #endif\n \n-UniValue CallRPC(const std::string& strMethod, const UniValue& params)\n+/** Class that handles the conversion from a command-line to a JSON-RPC request,\n+ * as well as converting back to a JSON object that can be shown as result.\n+ */\n+class BaseRequestHandler\n+{\n+public:\n+    virtual UniValue PrepareRequest(const std::string& method, const std::vector<std::string>& args) = 0;\n+    virtual UniValue ProcessReply(const UniValue &batch_in) = 0;\n+};\n+\n+/** Process getinfo requests */\n+class GetinfoRequestHandler: public BaseRequestHandler\n+{\n+public:\n+    const int ID_NETWORKINFO = 0;\n+    const int ID_BLOCKCHAININFO = 1;\n+    const int ID_WALLETINFO = 2;\n+\n+    /** Create a simulated `getinfo` request. */\n+    UniValue PrepareRequest(const std::string& method, const std::vector<std::string>& args) override\n+    {\n+        UniValue result(UniValue::VARR);\n+        result.push_back(JSONRPCRequestObj(\"getnetworkinfo\", NullUniValue, ID_NETWORKINFO));\n+        result.push_back(JSONRPCRequestObj(\"getblockchaininfo\", NullUniValue, ID_BLOCKCHAININFO));\n+        result.push_back(JSONRPCRequestObj(\"getwalletinfo\", NullUniValue, ID_WALLETINFO));\n+        return result;\n+    }\n+\n+    /** Collect values from the batch and form a simulated `getinfo` reply. */\n+    UniValue ProcessReply(const UniValue &batch_in) override\n+    {\n+        UniValue result(UniValue::VOBJ);\n+        std::vector<UniValue> batch = JSONRPCProcessBatchReply(batch_in, 3);\n+        // Errors in getnetworkinfo() and getblockchaininfo() are fatal, pass them on\n+        // getwalletinfo() is allowed to fail in case there is no wallet.\n+        if (!batch[ID_NETWORKINFO][\"error\"].isNull()) {\n+            return batch[ID_NETWORKINFO];\n+        }\n+        if (!batch[ID_BLOCKCHAININFO][\"error\"].isNull()) {\n+            return batch[ID_BLOCKCHAININFO];\n+        }\n+        result.pushKV(\"version\", batch[ID_NETWORKINFO][\"result\"][\"version\"]);\n+        result.pushKV(\"protocolversion\", batch[ID_NETWORKINFO][\"result\"][\"protocolversion\"]);\n+        if (!batch[ID_WALLETINFO].isNull()) {\n+            result.pushKV(\"walletversion\", batch[ID_WALLETINFO][\"result\"][\"walletversion\"]);\n+            result.pushKV(\"balance\", batch[ID_WALLETINFO][\"result\"][\"balance\"]);\n+        }\n+        result.pushKV(\"blocks\", batch[ID_BLOCKCHAININFO][\"result\"][\"blocks\"]);\n+        result.pushKV(\"timeoffset\", batch[ID_NETWORKINFO][\"result\"][\"timeoffset\"]);\n+        result.pushKV(\"connections\", batch[ID_NETWORKINFO][\"result\"][\"connections\"]);\n+        result.pushKV(\"proxy\", batch[ID_NETWORKINFO][\"result\"][\"networks\"][0][\"proxy\"]);\n+        result.pushKV(\"difficulty\", batch[ID_BLOCKCHAININFO][\"result\"][\"difficulty\"]);\n+        result.pushKV(\"testnet\", UniValue(batch[ID_BLOCKCHAININFO][\"result\"][\"chain\"].get_str() == \"test\"));\n+        if (!batch[ID_WALLETINFO].isNull()) {\n+            result.pushKV(\"walletversion\", batch[ID_WALLETINFO][\"result\"][\"walletversion\"]);\n+            result.pushKV(\"balance\", batch[ID_WALLETINFO][\"result\"][\"balance\"]);\n+            result.pushKV(\"keypoololdest\", batch[ID_WALLETINFO][\"result\"][\"keypoololdest\"]);\n+            result.pushKV(\"keypoolsize\", batch[ID_WALLETINFO][\"result\"][\"keypoolsize\"]);\n+            if (!batch[ID_WALLETINFO][\"result\"][\"unlocked_until\"].isNull()) {\n+                result.pushKV(\"unlocked_until\", batch[ID_WALLETINFO][\"result\"][\"unlocked_until\"]);\n+            }\n+            result.pushKV(\"paytxfee\", batch[ID_WALLETINFO][\"result\"][\"paytxfee\"]);\n+        }\n+        result.pushKV(\"relayfee\", batch[ID_NETWORKINFO][\"result\"][\"relayfee\"]);\n+        result.pushKV(\"warnings\", batch[ID_NETWORKINFO][\"result\"][\"warnings\"]);\n+        return JSONRPCReplyObj(result, NullUniValue, 1);\n+    }\n+};\n+\n+/** Process default single requests */\n+class DefaultRequestHandler: public BaseRequestHandler {\n+public:\n+    UniValue PrepareRequest(const std::string& method, const std::vector<std::string>& args) override\n+    {\n+        UniValue params;\n+        if(gArgs.GetBoolArg(\"-named\", DEFAULT_NAMED)) {\n+            params = RPCConvertNamedValues(method, args);\n+        } else {\n+            params = RPCConvertValues(method, args);\n+        }\n+        return JSONRPCRequestObj(method, params, 1);\n+    }\n+\n+    UniValue ProcessReply(const UniValue &reply) override\n+    {\n+        return reply.get_obj();\n+    }\n+};\n+\n+static UniValue CallRPC(BaseRequestHandler *rh, const std::string& strMethod, const std::vector<std::string>& args)\n {\n     std::string host;\n     // In preference order, we choose the following for the port:\n     //     1. -rpcport\n     //     2. port in -rpcconnect (ie following : in ipv4 or ]: in ipv6)\n     //     3. default port for chain\n     int port = BaseParams().RPCPort();\n-    SplitHostPort(GetArg(\"-rpcconnect\", DEFAULT_RPCCONNECT), port, host);\n-    port = GetArg(\"-rpcport\", port);\n+    SplitHostPort(gArgs.GetArg(\"-rpcconnect\", DEFAULT_RPCCONNECT), port, host);\n+    port = gArgs.GetArg(\"-rpcport\", port);\n \n     // Obtain event base\n     raii_event_base base = obtain_event_base();\n \n     // Synchronously look up hostname\n     raii_evhttp_connection evcon = obtain_evhttp_connection_base(base.get(), host, port);\n-    evhttp_connection_set_timeout(evcon.get(), GetArg(\"-rpcclienttimeout\", DEFAULT_HTTP_CLIENT_TIMEOUT));\n+    evhttp_connection_set_timeout(evcon.get(), gArgs.GetArg(\"-rpcclienttimeout\", DEFAULT_HTTP_CLIENT_TIMEOUT));\n \n     HTTPReply response;\n     raii_evhttp_request req = obtain_evhttp_request(http_request_done, (void*)&response);\n-    if (req == NULL)\n+    if (req == nullptr)\n         throw std::runtime_error(\"create http request failed\");\n #if LIBEVENT_VERSION_NUMBER >= 0x02010300\n     evhttp_request_set_error_cb(req.get(), http_error_cb);\n #endif\n \n     // Get credentials\n     std::string strRPCUserColonPass;\n-    if (GetArg(\"-rpcpassword\", \"\") == \"\") {\n+    if (gArgs.GetArg(\"-rpcpassword\", \"\") == \"\") {\n         // Try fall back to cookie-based authentication if no password is provided\n         if (!GetAuthCookie(&strRPCUserColonPass)) {\n             throw std::runtime_error(strprintf(\n-                _(\"Could not locate RPC credentials. No authentication cookie could be found, and no rpcpassword is set in the configuration file (%s)\"),\n-                    GetConfigFile(GetArg(\"-conf\", BITCOIN_CONF_FILENAME)).string().c_str()));\n+                _(\"Could not locate RPC credentials. No authentication cookie could be found, and RPC password is not set.  See -rpcpassword and -stdinrpcpass.  Configuration file: (%s)\"),\n+                    GetConfigFile(gArgs.GetArg(\"-conf\", BITCOIN_CONF_FILENAME)).string().c_str()));\n \n         }\n     } else {\n-        strRPCUserColonPass = GetArg(\"-rpcuser\", \"\") + \":\" + GetArg(\"-rpcpassword\", \"\");\n+        strRPCUserColonPass = gArgs.GetArg(\"-rpcuser\", \"\") + \":\" + gArgs.GetArg(\"-rpcpassword\", \"\");\n     }\n \n     struct evkeyvalq* output_headers = evhttp_request_get_output_headers(req.get());\n@@ -236,12 +328,25 @@ UniValue CallRPC(const std::string& strMethod, const UniValue& params)\n     evhttp_add_header(output_headers, \"Authorization\", (std::string(\"Basic \") + EncodeBase64(strRPCUserColonPass)).c_str());\n \n     // Attach request data\n-    std::string strRequest = JSONRPCRequestObj(strMethod, params, 1).write() + \"\\n\";\n+    std::string strRequest = rh->PrepareRequest(strMethod, args).write() + \"\\n\";\n     struct evbuffer* output_buffer = evhttp_request_get_output_buffer(req.get());\n     assert(output_buffer);\n     evbuffer_add(output_buffer, strRequest.data(), strRequest.size());\n \n-    int r = evhttp_make_request(evcon.get(), req.get(), EVHTTP_REQ_POST, \"/\");\n+    // check if we should use a special wallet endpoint\n+    std::string endpoint = \"/\";\n+    std::string walletName = gArgs.GetArg(\"-rpcwallet\", \"\");\n+    if (!walletName.empty()) {\n+        char *encodedURI = evhttp_uriencode(walletName.c_str(), walletName.size(), false);\n+        if (encodedURI) {\n+            endpoint = \"/wallet/\"+ std::string(encodedURI);\n+            free(encodedURI);\n+        }\n+        else {\n+            throw CConnectionFailed(\"uri-encode failed\");\n+        }\n+    }\n+    int r = evhttp_make_request(evcon.get(), req.get(), EVHTTP_REQ_POST, endpoint.c_str());\n     req.release(); // ownership moved to evcon in above call\n     if (r != 0) {\n         throw CConnectionFailed(\"send http request failed\");\n@@ -262,7 +367,7 @@ UniValue CallRPC(const std::string& strMethod, const UniValue& params)\n     UniValue valReply(UniValue::VSTR);\n     if (!valReply.read(response.body))\n         throw std::runtime_error(\"couldn't parse reply from server\");\n-    const UniValue& reply = valReply.get_obj();\n+    const UniValue reply = rh->ProcessReply(valReply);\n     if (reply.empty())\n         throw std::runtime_error(\"expected reply to have result, error and id properties\");\n \n@@ -279,30 +384,40 @@ int CommandLineRPC(int argc, char *argv[])\n             argc--;\n             argv++;\n         }\n+        std::string rpcPass;\n+        if (gArgs.GetBoolArg(\"-stdinrpcpass\", false)) {\n+            if (!std::getline(std::cin, rpcPass)) {\n+                throw std::runtime_error(\"-stdinrpcpass specified but failed to read from standard input\");\n+            }\n+            gArgs.ForceSetArg(\"-rpcpassword\", rpcPass);\n+        }\n         std::vector<std::string> args = std::vector<std::string>(&argv[1], &argv[argc]);\n-        if (GetBoolArg(\"-stdin\", false)) {\n+        if (gArgs.GetBoolArg(\"-stdin\", false)) {\n             // Read one arg per line from stdin and append\n             std::string line;\n-            while (std::getline(std::cin,line))\n+            while (std::getline(std::cin, line)) {\n                 args.push_back(line);\n+            }\n         }\n-        if (args.size() < 1)\n-            throw std::runtime_error(\"too few parameters (need at least command)\");\n-        std::string strMethod = args[0];\n-        args.erase(args.begin()); // Remove trailing method name from arguments vector\n-\n-        UniValue params;\n-        if(GetBoolArg(\"-named\", DEFAULT_NAMED)) {\n-            params = RPCConvertNamedValues(strMethod, args);\n+        std::unique_ptr<BaseRequestHandler> rh;\n+        std::string method;\n+        if (gArgs.GetBoolArg(\"-getinfo\", false)) {\n+            rh.reset(new GetinfoRequestHandler());\n+            method = \"\";\n         } else {\n-            params = RPCConvertValues(strMethod, args);\n+            rh.reset(new DefaultRequestHandler());\n+            if (args.size() < 1) {\n+                throw std::runtime_error(\"too few parameters (need at least command)\");\n+            }\n+            method = args[0];\n+            args.erase(args.begin()); // Remove trailing method name from arguments vector\n         }\n \n         // Execute and handle connection failures with -rpcwait\n-        const bool fWait = GetBoolArg(\"-rpcwait\", false);\n+        const bool fWait = gArgs.GetBoolArg(\"-rpcwait\", false);\n         do {\n             try {\n-                const UniValue reply = CallRPC(strMethod, params);\n+                const UniValue reply = CallRPC(rh.get(), method, args);\n \n                 // Parse reply\n                 const UniValue& result = find_value(reply, \"result\");\n@@ -323,6 +438,10 @@ int CommandLineRPC(int argc, char *argv[])\n \n                         if (errMsg.isStr())\n                             strPrint += \"error message:\\n\"+errMsg.get_str();\n+\n+                        if (errCode.isNum() && errCode.get_int() == RPC_WALLET_NOT_SPECIFIED) {\n+                            strPrint += \"\\nTry adding \\\"-rpcwallet=<filename>\\\" option to bitcoin-cli command line.\";\n+                        }\n                     }\n                 } else {\n                     // Result\n@@ -352,7 +471,7 @@ int CommandLineRPC(int argc, char *argv[])\n         nRet = EXIT_FAILURE;\n     }\n     catch (...) {\n-        PrintExceptionContinue(NULL, \"CommandLineRPC()\");\n+        PrintExceptionContinue(nullptr, \"CommandLineRPC()\");\n         throw;\n     }\n \n@@ -379,7 +498,7 @@ int main(int argc, char* argv[])\n         PrintExceptionContinue(&e, \"AppInitRPC()\");\n         return EXIT_FAILURE;\n     } catch (...) {\n-        PrintExceptionContinue(NULL, \"AppInitRPC()\");\n+        PrintExceptionContinue(nullptr, \"AppInitRPC()\");\n         return EXIT_FAILURE;\n     }\n \n@@ -390,7 +509,7 @@ int main(int argc, char* argv[])\n     catch (const std::exception& e) {\n         PrintExceptionContinue(&e, \"CommandLineRPC()\");\n     } catch (...) {\n-        PrintExceptionContinue(NULL, \"CommandLineRPC()\");\n+        PrintExceptionContinue(nullptr, \"CommandLineRPC()\");\n     }\n     return ret;\n }"
      },
      {
        "sha": "e4f44435ba292312e9d755d1a468bf09c6bf835b",
        "filename": "src/bitcoin-tx.cpp",
        "status": "modified",
        "additions": 26,
        "deletions": 23,
        "changes": 49,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/bitcoin-tx.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/bitcoin-tx.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-tx.cpp?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -39,7 +39,7 @@ static int AppInitRawTx(int argc, char* argv[])\n     //\n     // Parameters\n     //\n-    ParseParameters(argc, argv);\n+    gArgs.ParseParameters(argc, argv);\n \n     // Check for -testnet or -regtest parameter (Params() calls are only valid after this clause)\n     try {\n@@ -49,9 +49,9 @@ static int AppInitRawTx(int argc, char* argv[])\n         return EXIT_FAILURE;\n     }\n \n-    fCreateBlank = GetBoolArg(\"-create\", false);\n+    fCreateBlank = gArgs.GetBoolArg(\"-create\", false);\n \n-    if (argc<2 || IsArgSet(\"-?\") || IsArgSet(\"-h\") || IsArgSet(\"-help\"))\n+    if (argc<2 || gArgs.IsArgSet(\"-?\") || gArgs.IsArgSet(\"-h\") || gArgs.IsArgSet(\"-help\"))\n     {\n         // First part of help message is specific to this utility\n         std::string strUsage = strprintf(_(\"%s bitcoin-tx utility version\"), _(PACKAGE_NAME)) + \" \" + FormatFullVersion() + \"\\n\\n\" +\n@@ -271,11 +271,11 @@ static void MutateTxAddOutAddr(CMutableTransaction& tx, const std::string& strIn\n \n     // extract and validate ADDRESS\n     std::string strAddr = vStrInputParts[1];\n-    CBitcoinAddress addr(strAddr);\n-    if (!addr.IsValid())\n+    CTxDestination destination = DecodeDestination(strAddr);\n+    if (!IsValidDestination(destination)) {\n         throw std::runtime_error(\"invalid TX output address\");\n-    // build standard output script via GetScriptForDestination()\n-    CScript scriptPubKey = GetScriptForDestination(addr.Get());\n+    }\n+    CScript scriptPubKey = GetScriptForDestination(destination);\n \n     // construct TxOut, append to transaction output list\n     CTxOut txout(value, scriptPubKey);\n@@ -310,14 +310,15 @@ static void MutateTxAddOutPubKey(CMutableTransaction& tx, const std::string& str\n     }\n \n     if (bSegWit) {\n+        if (!pubkey.IsCompressed()) {\n+            throw std::runtime_error(\"Uncompressed pubkeys are not useable for SegWit outputs\");\n+        }\n         // Call GetScriptForWitness() to build a P2WSH scriptPubKey\n         scriptPubKey = GetScriptForWitness(scriptPubKey);\n     }\n     if (bScriptHash) {\n-        // Get the address for the redeem script, then call\n-        // GetScriptForDestination() to construct a P2SH scriptPubKey.\n-        CBitcoinAddress redeemScriptAddr(scriptPubKey);\n-        scriptPubKey = GetScriptForDestination(redeemScriptAddr.Get());\n+        // Get the ID for the script, and then construct a P2SH destination for it.\n+        scriptPubKey = GetScriptForDestination(CScriptID(scriptPubKey));\n     }\n \n     // construct TxOut, append to transaction output list\n@@ -377,14 +378,17 @@ static void MutateTxAddOutMultiSig(CMutableTransaction& tx, const std::string& s\n     CScript scriptPubKey = GetScriptForMultisig(required, pubkeys);\n \n     if (bSegWit) {\n+        for (CPubKey& pubkey : pubkeys) {\n+            if (!pubkey.IsCompressed()) {\n+                throw std::runtime_error(\"Uncompressed pubkeys are not useable for SegWit outputs\");\n+            }\n+        }\n         // Call GetScriptForWitness() to build a P2WSH scriptPubKey\n         scriptPubKey = GetScriptForWitness(scriptPubKey);\n     }\n     if (bScriptHash) {\n-        // Get the address for the redeem script, then call\n-        // GetScriptForDestination() to construct a P2SH scriptPubKey.\n-        CBitcoinAddress addr(scriptPubKey);\n-        scriptPubKey = GetScriptForDestination(addr.Get());\n+        // Get the ID for the script, and then construct a P2SH destination for it.\n+        scriptPubKey = GetScriptForDestination(CScriptID(scriptPubKey));\n     }\n \n     // construct TxOut, append to transaction output list\n@@ -444,11 +448,10 @@ static void MutateTxAddOutScript(CMutableTransaction& tx, const std::string& str\n     }\n \n     if (bSegWit) {\n-      scriptPubKey = GetScriptForWitness(scriptPubKey);\n+        scriptPubKey = GetScriptForWitness(scriptPubKey);\n     }\n     if (bScriptHash) {\n-      CBitcoinAddress addr(scriptPubKey);\n-      scriptPubKey = GetScriptForDestination(addr.Get());\n+        scriptPubKey = GetScriptForDestination(CScriptID(scriptPubKey));\n     }\n \n     // construct TxOut, append to transaction output list\n@@ -737,9 +740,9 @@ static void OutputTxHex(const CTransaction& tx)\n \n static void OutputTx(const CTransaction& tx)\n {\n-    if (GetBoolArg(\"-json\", false))\n+    if (gArgs.GetBoolArg(\"-json\", false))\n         OutputTxJSON(tx);\n-    else if (GetBoolArg(\"-txid\", false))\n+    else if (gArgs.GetBoolArg(\"-txid\", false))\n         OutputTxHash(tx);\n     else\n         OutputTxHex(tx);\n@@ -822,7 +825,7 @@ static int CommandLineRawTx(int argc, char* argv[])\n         nRet = EXIT_FAILURE;\n     }\n     catch (...) {\n-        PrintExceptionContinue(NULL, \"CommandLineRawTx()\");\n+        PrintExceptionContinue(nullptr, \"CommandLineRawTx()\");\n         throw;\n     }\n \n@@ -845,7 +848,7 @@ int main(int argc, char* argv[])\n         PrintExceptionContinue(&e, \"AppInitRawTx()\");\n         return EXIT_FAILURE;\n     } catch (...) {\n-        PrintExceptionContinue(NULL, \"AppInitRawTx()\");\n+        PrintExceptionContinue(nullptr, \"AppInitRawTx()\");\n         return EXIT_FAILURE;\n     }\n \n@@ -856,7 +859,7 @@ int main(int argc, char* argv[])\n     catch (const std::exception& e) {\n         PrintExceptionContinue(&e, \"CommandLineRawTx()\");\n     } catch (...) {\n-        PrintExceptionContinue(NULL, \"CommandLineRawTx()\");\n+        PrintExceptionContinue(nullptr, \"CommandLineRawTx()\");\n     }\n     return ret;\n }"
      },
      {
        "sha": "543eba0e69d1f42dbfb264ef934c43afd9138e1a",
        "filename": "src/bitcoind.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 12,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/bitcoind.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/bitcoind.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoind.cpp?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -71,14 +71,14 @@ bool AppInit(int argc, char* argv[])\n     // Parameters\n     //\n     // If Qt is used, parameters/bitcoin.conf are parsed in qt/bitcoin.cpp's main()\n-    ParseParameters(argc, argv);\n+    gArgs.ParseParameters(argc, argv);\n \n     // Process help and version before taking care about datadir\n-    if (IsArgSet(\"-?\") || IsArgSet(\"-h\") ||  IsArgSet(\"-help\") || IsArgSet(\"-version\"))\n+    if (gArgs.IsArgSet(\"-?\") || gArgs.IsArgSet(\"-h\") ||  gArgs.IsArgSet(\"-help\") || gArgs.IsArgSet(\"-version\"))\n     {\n         std::string strUsage = strprintf(_(\"%s Daemon\"), _(PACKAGE_NAME)) + \" \" + _(\"version\") + \" \" + FormatFullVersion() + \"\\n\";\n \n-        if (IsArgSet(\"-version\"))\n+        if (gArgs.IsArgSet(\"-version\"))\n         {\n             strUsage += FormatParagraph(LicenseInfo());\n         }\n@@ -98,12 +98,12 @@ bool AppInit(int argc, char* argv[])\n     {\n         if (!fs::is_directory(GetDataDir(false)))\n         {\n-            fprintf(stderr, \"Error: Specified data directory \\\"%s\\\" does not exist.\\n\", GetArg(\"-datadir\", \"\").c_str());\n+            fprintf(stderr, \"Error: Specified data directory \\\"%s\\\" does not exist.\\n\", gArgs.GetArg(\"-datadir\", \"\").c_str());\n             return false;\n         }\n         try\n         {\n-            ReadConfigFile(GetArg(\"-conf\", BITCOIN_CONF_FILENAME));\n+            gArgs.ReadConfigFile(gArgs.GetArg(\"-conf\", BITCOIN_CONF_FILENAME));\n         } catch (const std::exception& e) {\n             fprintf(stderr,\"Error reading configuration file: %s\\n\", e.what());\n             return false;\n@@ -125,7 +125,7 @@ bool AppInit(int argc, char* argv[])\n         }\n \n         // -server defaults to true for bitcoind but not for the GUI so do this here\n-        SoftSetBoolArg(\"-server\", true);\n+        gArgs.SoftSetBoolArg(\"-server\", true);\n         // Set this early so that parameter interactions go to console\n         InitLogging();\n         InitParameterInteraction();\n@@ -144,7 +144,7 @@ bool AppInit(int argc, char* argv[])\n             // InitError will have been called with detailed error, which ends up on console\n             exit(EXIT_FAILURE);\n         }\n-        if (GetBoolArg(\"-daemon\", false))\n+        if (gArgs.GetBoolArg(\"-daemon\", false))\n         {\n #if HAVE_DECL_DAEMON\n             fprintf(stdout, \"Bitcoin server starting\\n\");\n@@ -159,21 +159,24 @@ bool AppInit(int argc, char* argv[])\n             return false;\n #endif // HAVE_DECL_DAEMON\n         }\n-\n+        // Lock data directory after daemonization\n+        if (!AppInitLockDataDirectory())\n+        {\n+            // If locking the data directory failed, exit immediately\n+            exit(EXIT_FAILURE);\n+        }\n         fRet = AppInitMain(threadGroup, scheduler);\n     }\n     catch (const std::exception& e) {\n         PrintExceptionContinue(&e, \"AppInit()\");\n     } catch (...) {\n-        PrintExceptionContinue(NULL, \"AppInit()\");\n+        PrintExceptionContinue(nullptr, \"AppInit()\");\n     }\n \n     if (!fRet)\n     {\n         Interrupt(threadGroup);\n-        // threadGroup.join_all(); was left out intentionally here, because we didn't re-test all of\n-        // the startup-failure cases to make sure they don't result in a hang due to some\n-        // thread-blocking-waiting-for-another-thread-during-startup case\n+        threadGroup.join_all();\n     } else {\n         WaitForShutdown(&threadGroup);\n     }"
      },
      {
        "sha": "50478f9f321e4bc3e02a193c6fc47581fad8d202",
        "filename": "src/blockencodings.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/blockencodings.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/blockencodings.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/blockencodings.h?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -16,7 +16,7 @@ struct TransactionCompressor {\n private:\n     CTransactionRef& tx;\n public:\n-    TransactionCompressor(CTransactionRef& txIn) : tx(txIn) {}\n+    explicit TransactionCompressor(CTransactionRef& txIn) : tx(txIn) {}\n \n     ADD_SERIALIZE_METHODS;\n \n@@ -75,7 +75,7 @@ class BlockTransactions {\n     std::vector<CTransactionRef> txn;\n \n     BlockTransactions() {}\n-    BlockTransactions(const BlockTransactionsRequest& req) :\n+    explicit BlockTransactions(const BlockTransactionsRequest& req) :\n         blockhash(req.blockhash), txn(req.indexes.size()) {}\n \n     ADD_SERIALIZE_METHODS;\n@@ -198,7 +198,7 @@ class PartiallyDownloadedBlock {\n     CTxMemPool* pool;\n public:\n     CBlockHeader header;\n-    PartiallyDownloadedBlock(CTxMemPool* poolIn) : pool(poolIn) {}\n+    explicit PartiallyDownloadedBlock(CTxMemPool* poolIn) : pool(poolIn) {}\n \n     // extra_txn is a list of extra transactions to look at, in <witness hash, reference> form\n     ReadStatus InitData(const CBlockHeaderAndShortTxIDs& cmpctblock, const std::vector<std::pair<uint256, CTransactionRef>>& extra_txn);"
      },
      {
        "sha": "47acde882e875f76078270bd3b4b5d97f3c6035c",
        "filename": "src/chain.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/chain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/chain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chain.cpp?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -9,7 +9,7 @@\n  * CChain implementation\n  */\n void CChain::SetTip(CBlockIndex *pindex) {\n-    if (pindex == NULL) {\n+    if (pindex == nullptr) {\n         vChain.clear();\n         return;\n     }\n@@ -49,8 +49,8 @@ CBlockLocator CChain::GetLocator(const CBlockIndex *pindex) const {\n }\n \n const CBlockIndex *CChain::FindFork(const CBlockIndex *pindex) const {\n-    if (pindex == NULL) {\n-        return NULL;\n+    if (pindex == nullptr) {\n+        return nullptr;\n     }\n     if (pindex->nHeight > Height())\n         pindex = pindex->GetAncestor(Height());\n@@ -63,7 +63,7 @@ CBlockIndex* CChain::FindEarliestAtLeast(int64_t nTime) const\n {\n     std::vector<CBlockIndex*>::const_iterator lower = std::lower_bound(vChain.begin(), vChain.end(), nTime,\n         [](CBlockIndex* pBlock, const int64_t& time) -> bool { return pBlock->GetBlockTimeMax() < time; });\n-    return (lower == vChain.end() ? NULL : *lower);\n+    return (lower == vChain.end() ? nullptr : *lower);\n }\n \n /** Turn the lowest '1' bit in the binary representation of a number into a '0'. */\n@@ -83,14 +83,14 @@ int static inline GetSkipHeight(int height) {\n CBlockIndex* CBlockIndex::GetAncestor(int height)\n {\n     if (height > nHeight || height < 0)\n-        return NULL;\n+        return nullptr;\n \n     CBlockIndex* pindexWalk = this;\n     int heightWalk = nHeight;\n     while (heightWalk > height) {\n         int heightSkip = GetSkipHeight(heightWalk);\n         int heightSkipPrev = GetSkipHeight(heightWalk - 1);\n-        if (pindexWalk->pskip != NULL &&\n+        if (pindexWalk->pskip != nullptr &&\n             (heightSkip == height ||\n              (heightSkip > height && !(heightSkipPrev < heightSkip - 2 &&\n                                        heightSkipPrev >= height)))) {\n@@ -150,7 +150,7 @@ int64_t GetBlockProofEquivalentTime(const CBlockIndex& to, const CBlockIndex& fr\n }\n \n /** Find the last common ancestor two blocks have.\n- *  Both pa and pb must be non-NULL. */\n+ *  Both pa and pb must be non-nullptr. */\n const CBlockIndex* LastCommonAncestor(const CBlockIndex* pa, const CBlockIndex* pb) {\n     if (pa->nHeight > pb->nHeight) {\n         pa = pa->GetAncestor(pb->nHeight);"
      },
      {
        "sha": "f1036e5d9276939799313d88a893a59d7117d071",
        "filename": "src/chain.h",
        "status": "modified",
        "additions": 19,
        "deletions": 19,
        "changes": 38,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/chain.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/chain.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chain.h?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -204,26 +204,26 @@ class CBlockIndex\n     unsigned int nChainTx;\n \n     //! Verification status of this block. See enum BlockStatus\n-    unsigned int nStatus;\n+    uint32_t nStatus;\n \n     //! block header\n-    int nVersion;\n+    int32_t nVersion;\n     uint256 hashMerkleRoot;\n-    unsigned int nTime;\n-    unsigned int nBits;\n-    unsigned int nNonce;\n+    uint32_t nTime;\n+    uint32_t nBits;\n+    uint32_t nNonce;\n \n     //! (memory only) Sequential id assigned to distinguish order in which blocks are received.\n     int32_t nSequenceId;\n \n-    //! (memory only) Maximum nTime in the chain upto and including this block.\n+    //! (memory only) Maximum nTime in the chain up to and including this block.\n     unsigned int nTimeMax;\n \n     void SetNull()\n     {\n-        phashBlock = NULL;\n-        pprev = NULL;\n-        pskip = NULL;\n+        phashBlock = nullptr;\n+        pprev = nullptr;\n+        pskip = nullptr;\n         nHeight = 0;\n         nFile = 0;\n         nDataPos = 0;\n@@ -247,7 +247,7 @@ class CBlockIndex\n         SetNull();\n     }\n \n-    CBlockIndex(const CBlockHeader& block)\n+    explicit CBlockIndex(const CBlockHeader& block)\n     {\n         SetNull();\n \n@@ -437,20 +437,20 @@ class CChain {\n     std::vector<CBlockIndex*> vChain;\n \n public:\n-    /** Returns the index entry for the genesis block of this chain, or NULL if none. */\n+    /** Returns the index entry for the genesis block of this chain, or nullptr if none. */\n     CBlockIndex *Genesis() const {\n-        return vChain.size() > 0 ? vChain[0] : NULL;\n+        return vChain.size() > 0 ? vChain[0] : nullptr;\n     }\n \n-    /** Returns the index entry for the tip of this chain, or NULL if none. */\n+    /** Returns the index entry for the tip of this chain, or nullptr if none. */\n     CBlockIndex *Tip() const {\n-        return vChain.size() > 0 ? vChain[vChain.size() - 1] : NULL;\n+        return vChain.size() > 0 ? vChain[vChain.size() - 1] : nullptr;\n     }\n \n-    /** Returns the index entry at a particular height in this chain, or NULL if no such height exists. */\n+    /** Returns the index entry at a particular height in this chain, or nullptr if no such height exists. */\n     CBlockIndex *operator[](int nHeight) const {\n         if (nHeight < 0 || nHeight >= (int)vChain.size())\n-            return NULL;\n+            return nullptr;\n         return vChain[nHeight];\n     }\n \n@@ -465,12 +465,12 @@ class CChain {\n         return (*this)[pindex->nHeight] == pindex;\n     }\n \n-    /** Find the successor of a block in this chain, or NULL if the given index is not found or is the tip. */\n+    /** Find the successor of a block in this chain, or nullptr if the given index is not found or is the tip. */\n     CBlockIndex *Next(const CBlockIndex *pindex) const {\n         if (Contains(pindex))\n             return (*this)[pindex->nHeight + 1];\n         else\n-            return NULL;\n+            return nullptr;\n     }\n \n     /** Return the maximal height in the chain. Is equal to chain.Tip() ? chain.Tip()->nHeight : -1. */\n@@ -482,7 +482,7 @@ class CChain {\n     void SetTip(CBlockIndex *pindex);\n \n     /** Return a CBlockLocator that refers to a block in this chain (by default the tip). */\n-    CBlockLocator GetLocator(const CBlockIndex *pindex = NULL) const;\n+    CBlockLocator GetLocator(const CBlockIndex *pindex = nullptr) const;\n \n     /** Find the last common block between this chain and a block index entry. */\n     const CBlockIndex *FindFork(const CBlockIndex *pindex) const;"
      },
      {
        "sha": "85c9cd6934210a4967c5c106ea104474e06a4faa",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 17,
        "deletions": 11,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -101,10 +101,10 @@ class CMainParams : public CChainParams {\n         consensus.vDeployments[Consensus::DEPLOYMENT_SEGWIT].nTimeout = 1510704000; // November 15th, 2017.\n \n         // The best chain should have at least this much work.\n-        consensus.nMinimumChainWork = uint256S(\"0x0000000000000000000000000000000000000000003f94d1ad391682fe038bf5\");\n+        consensus.nMinimumChainWork = uint256S(\"0x000000000000000000000000000000000000000000723d3581fe1bd55373540a\");\n \n         // By default assume that the signatures in ancestors of this block are valid.\n-        consensus.defaultAssumeValid = uint256S(\"0x00000000000000000013176bf8d7dfeab4e1db31dc93bc311b436e82ab226b90\"); //453354\n+        consensus.defaultAssumeValid = uint256S(\"0x0000000000000000003b9ce759c2a087d52abc4266f8f4ebd6d768b89defa50a\"); //477890\n \n         /**\n          * The message start string is designed to be unlikely to occur in normal data.\n@@ -137,6 +137,8 @@ class CMainParams : public CChainParams {\n         base58Prefixes[EXT_PUBLIC_KEY] = {0x04, 0x88, 0xB2, 0x1E};\n         base58Prefixes[EXT_SECRET_KEY] = {0x04, 0x88, 0xAD, 0xE4};\n \n+        bech32_hrp = \"bc\";\n+\n         vFixedSeeds = std::vector<SeedSpec6>(pnSeed6_main, pnSeed6_main + ARRAYLEN(pnSeed6_main));\n \n         fDefaultConsistencyChecks = false;\n@@ -162,11 +164,11 @@ class CMainParams : public CChainParams {\n         };\n \n         chainTxData = ChainTxData{\n-            // Data as of block 00000000000000000166d612d5595e2b1cd88d71d695fc580af64d8da8658c23 (height 446482).\n-            1483472411, // * UNIX timestamp of last known number of transactions\n-            184495391,  // * total number of transactions between genesis and that timestamp\n+            // Data as of block 000000000000000000d97e53664d17967bd4ee50b23abb92e54a34eb222d15ae (height 478913).\n+            1501801925, // * UNIX timestamp of last known number of transactions\n+            243756039,  // * total number of transactions between genesis and that timestamp\n                         //   (the tx=... number in the SetBestChain debug.log lines)\n-            3.2         // * estimated number of transactions per second after that timestamp\n+            3.1         // * estimated number of transactions per second after that timestamp\n         };\n     }\n };\n@@ -205,10 +207,10 @@ class CTestNetParams : public CChainParams {\n         consensus.vDeployments[Consensus::DEPLOYMENT_SEGWIT].nTimeout = 1493596800; // May 1st 2017\n \n         // The best chain should have at least this much work.\n-        consensus.nMinimumChainWork = uint256S(\"0x00000000000000000000000000000000000000000000001f057509eba81aed91\");\n+        consensus.nMinimumChainWork = uint256S(\"0x00000000000000000000000000000000000000000000002830dab7f76dbb7d63\");\n \n         // By default assume that the signatures in ancestors of this block are valid.\n-        consensus.defaultAssumeValid = uint256S(\"0x00000000000128796ee387cf110ccb9d2f36cffaf7f73079c995377c65ac0dcc\"); //1079274\n+        consensus.defaultAssumeValid = uint256S(\"0x0000000002e9e7b00e1f6dc5123a04aad68dd0f0968d8c7aa45f6640795c37b1\"); //1135275\n \n         pchMessageStart[0] = 0x0b;\n         pchMessageStart[1] = 0x11;\n@@ -236,6 +238,8 @@ class CTestNetParams : public CChainParams {\n         base58Prefixes[EXT_PUBLIC_KEY] = {0x04, 0x35, 0x87, 0xCF};\n         base58Prefixes[EXT_SECRET_KEY] = {0x04, 0x35, 0x83, 0x94};\n \n+        bech32_hrp = \"tb\";\n+\n         vFixedSeeds = std::vector<SeedSpec6>(pnSeed6_test, pnSeed6_test + ARRAYLEN(pnSeed6_test));\n \n         fDefaultConsistencyChecks = false;\n@@ -250,9 +254,9 @@ class CTestNetParams : public CChainParams {\n         };\n \n         chainTxData = ChainTxData{\n-            // Data as of block 00000000c2872f8f8a8935c8e3c5862be9038c97d4de2cf37ed496991166928a (height 1063660)\n-            1483546230,\n-            12834668,\n+            // Data as of block 00000000000001c200b9790dc637d3bb141fe77d155b966ed775b17e109f7c6c (height 1156179)\n+            1501802953,\n+            14706531,\n             0.15\n         };\n \n@@ -330,6 +334,8 @@ class CRegTestParams : public CChainParams {\n         base58Prefixes[SECRET_KEY] =     std::vector<unsigned char>(1,239);\n         base58Prefixes[EXT_PUBLIC_KEY] = {0x04, 0x35, 0x87, 0xCF};\n         base58Prefixes[EXT_SECRET_KEY] = {0x04, 0x35, 0x83, 0x94};\n+\n+        bech32_hrp = \"bcrt\";\n     }\n };\n "
      },
      {
        "sha": "3948c9163feb89ba11a1583b97a2b21b00359915",
        "filename": "src/chainparams.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/chainparams.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/chainparams.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.h?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -73,6 +73,7 @@ class CChainParams\n     std::string NetworkIDString() const { return strNetworkID; }\n     const std::vector<CDNSSeedData>& DNSSeeds() const { return vSeeds; }\n     const std::vector<unsigned char>& Base58Prefix(Base58Type type) const { return base58Prefixes[type]; }\n+    const std::string& Bech32HRP() const { return bech32_hrp; }\n     const std::vector<SeedSpec6>& FixedSeeds() const { return vFixedSeeds; }\n     const CCheckpointData& Checkpoints() const { return checkpointData; }\n     const ChainTxData& TxData() const { return chainTxData; }\n@@ -86,6 +87,7 @@ class CChainParams\n     uint64_t nPruneAfterHeight;\n     std::vector<CDNSSeedData> vSeeds;\n     std::vector<unsigned char> base58Prefixes[MAX_BASE58_TYPES];\n+    std::string bech32_hrp;\n     std::string strNetworkID;\n     CBlock genesis;\n     std::vector<SeedSpec6> vFixedSeeds;"
      },
      {
        "sha": "c966683b72cbcaf8b5521db0d80e15f7d6af8380",
        "filename": "src/chainparamsbase.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/chainparamsbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/chainparamsbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparamsbase.cpp?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -57,7 +57,7 @@ class CBaseRegTestParams : public CBaseChainParams\n public:\n     CBaseRegTestParams()\n     {\n-        nRPCPort = 18332;\n+        nRPCPort = 18443;\n         strDataDir = \"regtest\";\n     }\n };\n@@ -89,8 +89,8 @@ void SelectBaseParams(const std::string& chain)\n \n std::string ChainNameFromCommandLine()\n {\n-    bool fRegTest = GetBoolArg(\"-regtest\", false);\n-    bool fTestNet = GetBoolArg(\"-testnet\", false);\n+    bool fRegTest = gArgs.GetBoolArg(\"-regtest\", false);\n+    bool fTestNet = gArgs.GetBoolArg(\"-testnet\", false);\n \n     if (fTestNet && fRegTest)\n         throw std::runtime_error(\"Invalid combination of -regtest and -testnet.\");"
      },
      {
        "sha": "2c99ca8ab09cbf81a388eabbcddb9ebc8735a52e",
        "filename": "src/chainparamsseeds.h",
        "status": "modified",
        "additions": 1168,
        "deletions": 886,
        "changes": 2054,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/chainparamsseeds.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/chainparamsseeds.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparamsseeds.h?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767"
      },
      {
        "sha": "5afe3e66b625a0e4a9888ad1a8d6eb3f84bb011a",
        "filename": "src/checkpoints.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/checkpoints.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/checkpoints.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/checkpoints.cpp?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -26,7 +26,7 @@ namespace Checkpoints {\n             if (t != mapBlockIndex.end())\n                 return t->second;\n         }\n-        return NULL;\n+        return nullptr;\n     }\n \n } // namespace Checkpoints"
      },
      {
        "sha": "6377fbe942ecb34bf471ded61edcca1ccced622b",
        "filename": "src/checkqueue.h",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/checkqueue.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/checkqueue.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/checkqueue.h?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -131,7 +131,7 @@ class CCheckQueue\n     boost::mutex ControlMutex;\n \n     //! Create a new check queue\n-    CCheckQueue(unsigned int nBatchSizeIn) : nIdle(0), nTotal(0), fAllOk(true), nTodo(0), fQuit(false), nBatchSize(nBatchSizeIn) {}\n+    explicit CCheckQueue(unsigned int nBatchSizeIn) : nIdle(0), nTotal(0), fAllOk(true), nTodo(0), fQuit(false), nBatchSize(nBatchSizeIn) {}\n \n     //! Worker thread\n     void Thread()\n@@ -183,15 +183,15 @@ class CCheckQueueControl\n     CCheckQueueControl& operator=(const CCheckQueueControl&) = delete;\n     explicit CCheckQueueControl(CCheckQueue<T> * const pqueueIn) : pqueue(pqueueIn), fDone(false)\n     {\n-        // passed queue is supposed to be unused, or NULL\n-        if (pqueue != NULL) {\n+        // passed queue is supposed to be unused, or nullptr\n+        if (pqueue != nullptr) {\n             ENTER_CRITICAL_SECTION(pqueue->ControlMutex);\n         }\n     }\n \n     bool Wait()\n     {\n-        if (pqueue == NULL)\n+        if (pqueue == nullptr)\n             return true;\n         bool fRet = pqueue->Wait();\n         fDone = true;\n@@ -200,15 +200,15 @@ class CCheckQueueControl\n \n     void Add(std::vector<T>& vChecks)\n     {\n-        if (pqueue != NULL)\n+        if (pqueue != nullptr)\n             pqueue->Add(vChecks);\n     }\n \n     ~CCheckQueueControl()\n     {\n         if (!fDone)\n             Wait();\n-        if (pqueue != NULL) {\n+        if (pqueue != nullptr) {\n             LEAVE_CRITICAL_SECTION(pqueue->ControlMutex);\n         }\n     }"
      },
      {
        "sha": "8a4b408831f66540d5c87b027fd22dfbd27d8527",
        "filename": "src/clientversion.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/clientversion.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/clientversion.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/clientversion.cpp?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -10,7 +10,7 @@\n \n /**\n  * Name of client reported in the 'version' message. Report the same name\n- * for both bitcoind and bitcoin-core, to make it harder for attackers to\n+ * for both bitcoind and bitcoin-qt, to make it harder for attackers to\n  * target servers or GUI users specifically.\n  */\n const std::string CLIENT_NAME(\"Satoshi\");"
      },
      {
        "sha": "b45dfc33427a132aaf0eaa700e6a34ae9068fa53",
        "filename": "src/coins.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/coins.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/coins.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/coins.cpp?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -14,7 +14,7 @@ bool CCoinsView::GetCoin(const COutPoint &outpoint, Coin &coin) const { return f\n uint256 CCoinsView::GetBestBlock() const { return uint256(); }\n std::vector<uint256> CCoinsView::GetHeadBlocks() const { return std::vector<uint256>(); }\n bool CCoinsView::BatchWrite(CCoinsMap &mapCoins, const uint256 &hashBlock) { return false; }\n-CCoinsViewCursor *CCoinsView::Cursor() const { return 0; }\n+CCoinsViewCursor *CCoinsView::Cursor() const { return nullptr; }\n \n bool CCoinsView::HaveCoin(const COutPoint &outpoint) const\n {"
      },
      {
        "sha": "181b2fd4b9798614a486ef24e3e8f89520f7b2f6",
        "filename": "src/coins.h",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/coins.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/coins.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/coins.h?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -214,6 +214,11 @@ class CCoinsViewCache : public CCoinsViewBacked\n public:\n     CCoinsViewCache(CCoinsView *baseIn);\n \n+    /**\n+     * By deleting the copy constructor, we prevent accidentally using it when one intends to create a cache on top of a base cache.\n+     */\n+    CCoinsViewCache(const CCoinsViewCache &) = delete;\n+\n     // Standard CCoinsView methods\n     bool GetCoin(const COutPoint &outpoint, Coin &coin) const override;\n     bool HaveCoin(const COutPoint &outpoint) const override;\n@@ -290,11 +295,6 @@ class CCoinsViewCache : public CCoinsViewBacked\n \n private:\n     CCoinsMap::iterator FetchCoin(const COutPoint &outpoint) const;\n-\n-    /**\n-     * By making the copy constructor private, we prevent accidentally using it when one intends to create a cache on top of a base cache.\n-     */\n-    CCoinsViewCache(const CCoinsViewCache &);\n };\n \n //! Utility function to add all of a transaction's outputs to a cache."
      },
      {
        "sha": "e022659c018ac32c65d18dc605be8826a6dbde6e",
        "filename": "src/compat.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/compat.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/compat.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/compat.h?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -76,7 +76,7 @@ typedef unsigned int SOCKET;\n size_t strnlen( const char *start, size_t max_len);\n #endif // HAVE_DECL_STRNLEN\n \n-bool static inline IsSelectableSocket(SOCKET s) {\n+bool static inline IsSelectableSocket(const SOCKET& s) {\n #ifdef WIN32\n     return true;\n #else"
      },
      {
        "sha": "d93ff7413a8ae0b50e3bf48a779d4a06915008af",
        "filename": "src/compat/byteswap.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/compat/byteswap.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/compat/byteswap.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/compat/byteswap.h?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -35,7 +35,7 @@\n #if HAVE_DECL_BSWAP_16 == 0\n inline uint16_t bswap_16(uint16_t x)\n {\n-    return (x >> 8) | ((x & 0x00ff) << 8);\n+    return (x >> 8) | (x << 8);\n }\n #endif // HAVE_DECL_BSWAP16\n "
      },
      {
        "sha": "dbf178f53cea863e4dbdac6305245ce69fbab979",
        "filename": "src/compat/endian.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/compat/endian.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/compat/endian.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/compat/endian.h?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -9,10 +9,10 @@\n #include \"config/bitcoin-config.h\"\n #endif\n \n-#include <stdint.h>\n-\n #include \"compat/byteswap.h\"\n \n+#include <stdint.h>\n+\n #if defined(HAVE_ENDIAN_H)\n #include <endian.h>\n #elif defined(HAVE_SYS_ENDIAN_H)"
      },
      {
        "sha": "094c1bcfe17ce6149aa78b93bd55bc0d76f06426",
        "filename": "src/compressor.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/compressor.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/compressor.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/compressor.h?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -53,7 +53,7 @@ class CScriptCompressor\n     unsigned int GetSpecialSize(unsigned int nSize) const;\n     bool Decompress(unsigned int nSize, const std::vector<unsigned char> &out);\n public:\n-    CScriptCompressor(CScript &scriptIn) : script(scriptIn) { }\n+    explicit CScriptCompressor(CScript &scriptIn) : script(scriptIn) { }\n \n     template<typename Stream>\n     void Serialize(Stream &s) const {\n@@ -99,7 +99,7 @@ class CTxOutCompressor\n     static uint64_t CompressAmount(uint64_t nAmount);\n     static uint64_t DecompressAmount(uint64_t nAmount);\n \n-    CTxOutCompressor(CTxOut &txoutIn) : txout(txoutIn) { }\n+    explicit CTxOutCompressor(CTxOut &txoutIn) : txout(txoutIn) { }\n \n     ADD_SERIALIZE_METHODS;\n "
      },
      {
        "sha": "798ce4b5fd8a74a4341a482f8581086b5c3c16a1",
        "filename": "src/consensus/merkle.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/consensus/merkle.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/consensus/merkle.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/merkle.cpp?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -132,13 +132,13 @@ static void MerkleComputation(const std::vector<uint256>& leaves, uint256* proot\n \n uint256 ComputeMerkleRoot(const std::vector<uint256>& leaves, bool* mutated) {\n     uint256 hash;\n-    MerkleComputation(leaves, &hash, mutated, -1, NULL);\n+    MerkleComputation(leaves, &hash, mutated, -1, nullptr);\n     return hash;\n }\n \n std::vector<uint256> ComputeMerkleBranch(const std::vector<uint256>& leaves, uint32_t position) {\n     std::vector<uint256> ret;\n-    MerkleComputation(leaves, NULL, NULL, position, &ret);\n+    MerkleComputation(leaves, nullptr, nullptr, position, &ret);\n     return ret;\n }\n "
      },
      {
        "sha": "33764c74606946d02ade4a439879f7da742cd3c5",
        "filename": "src/consensus/merkle.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/consensus/merkle.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/consensus/merkle.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/merkle.h?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -12,21 +12,21 @@\n #include \"primitives/block.h\"\n #include \"uint256.h\"\n \n-uint256 ComputeMerkleRoot(const std::vector<uint256>& leaves, bool* mutated = NULL);\n+uint256 ComputeMerkleRoot(const std::vector<uint256>& leaves, bool* mutated = nullptr);\n std::vector<uint256> ComputeMerkleBranch(const std::vector<uint256>& leaves, uint32_t position);\n uint256 ComputeMerkleRootFromBranch(const uint256& leaf, const std::vector<uint256>& branch, uint32_t position);\n \n /*\n  * Compute the Merkle root of the transactions in a block.\n  * *mutated is set to true if a duplicated subtree was found.\n  */\n-uint256 BlockMerkleRoot(const CBlock& block, bool* mutated = NULL);\n+uint256 BlockMerkleRoot(const CBlock& block, bool* mutated = nullptr);\n \n /*\n  * Compute the Merkle root of the witness transactions in a block.\n  * *mutated is set to true if a duplicated subtree was found.\n  */\n-uint256 BlockWitnessMerkleRoot(const CBlock& block, bool* mutated = NULL);\n+uint256 BlockWitnessMerkleRoot(const CBlock& block, bool* mutated = nullptr);\n \n /*\n  * Compute the Merkle branch for the tree of transactions in a block, for a"
      },
      {
        "sha": "b6740c9d9fdd1bc266832d933eec8428fb7bff30",
        "filename": "src/consensus/validation.h",
        "status": "modified",
        "additions": 5,
        "deletions": 6,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/consensus/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/consensus/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/validation.h?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -89,17 +89,16 @@ class CValidationState {\n     std::string GetDebugMessage() const { return strDebugMessage; }\n };\n \n+// These implement the weight = (stripped_size * 4) + witness_size formula,\n+// using only serialization with and without witness data. As witness_size\n+// is equal to total_size - stripped_size, this formula is identical to:\n+// weight = (stripped_size * 3) + total_size.\n static inline int64_t GetTransactionWeight(const CTransaction& tx)\n {\n-    return ::GetSerializeSize(tx, SER_NETWORK, PROTOCOL_VERSION | SERIALIZE_TRANSACTION_NO_WITNESS) * (WITNESS_SCALE_FACTOR -1) + ::GetSerializeSize(tx, SER_NETWORK, PROTOCOL_VERSION);\n+    return ::GetSerializeSize(tx, SER_NETWORK, PROTOCOL_VERSION | SERIALIZE_TRANSACTION_NO_WITNESS) * (WITNESS_SCALE_FACTOR - 1) + ::GetSerializeSize(tx, SER_NETWORK, PROTOCOL_VERSION);\n }\n-\n static inline int64_t GetBlockWeight(const CBlock& block)\n {\n-    // This implements the weight = (stripped_size * 4) + witness_size formula,\n-    // using only serialization with and without witness data. As witness_size\n-    // is equal to total_size - stripped_size, this formula is identical to:\n-    // weight = (stripped_size * 3) + total_size.\n     return ::GetSerializeSize(block, SER_NETWORK, PROTOCOL_VERSION | SERIALIZE_TRANSACTION_NO_WITNESS) * (WITNESS_SCALE_FACTOR - 1) + ::GetSerializeSize(block, SER_NETWORK, PROTOCOL_VERSION);\n }\n "
      },
      {
        "sha": "ccc72ebb3219280396ce0d65d6ae844ae3771110",
        "filename": "src/core_io.h",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/core_io.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/core_io.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core_io.h?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -5,6 +5,8 @@\n #ifndef BITCOIN_CORE_IO_H\n #define BITCOIN_CORE_IO_H\n \n+#include \"amount.h\"\n+\n #include <string>\n #include <vector>\n \n@@ -25,9 +27,10 @@ uint256 ParseHashStr(const std::string&, const std::string& strName);\n std::vector<unsigned char> ParseHexUV(const UniValue& v, const std::string& strName);\n \n // core_write.cpp\n+UniValue ValueFromAmount(const CAmount& amount);\n std::string FormatScript(const CScript& script);\n std::string EncodeHexTx(const CTransaction& tx, const int serializeFlags = 0);\n void ScriptPubKeyToUniv(const CScript& scriptPubKey, UniValue& out, bool fIncludeHex);\n-void TxToUniv(const CTransaction& tx, const uint256& hashBlock, UniValue& entry);\n+void TxToUniv(const CTransaction& tx, const uint256& hashBlock, UniValue& entry, bool include_hex = true, int serialize_flags = 0);\n \n #endif // BITCOIN_CORE_IO_H"
      },
      {
        "sha": "e16db1365047b539db03ab6f8bb7a092a0201880",
        "filename": "src/core_write.cpp",
        "status": "modified",
        "additions": 19,
        "deletions": 7,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/core_write.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/core_write.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core_write.cpp?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -16,6 +16,16 @@\n #include \"utilmoneystr.h\"\n #include \"utilstrencodings.h\"\n \n+UniValue ValueFromAmount(const CAmount& amount)\n+{\n+    bool sign = amount < 0;\n+    int64_t n_abs = (sign ? -amount : amount);\n+    int64_t quotient = n_abs / COIN;\n+    int64_t remainder = n_abs % COIN;\n+    return UniValue(UniValue::VNUM,\n+            strprintf(\"%s%d.%08d\", sign ? \"-\" : \"\", quotient, remainder));\n+}\n+\n std::string FormatScript(const CScript& script)\n {\n     std::string ret;\n@@ -92,7 +102,7 @@ std::string ScriptToAsmStr(const CScript& script, const bool fAttemptSighashDeco\n                     // this won't decode correctly formatted public keys in Pubkey or Multisig scripts due to\n                     // the restrictions on the pubkey formats (see IsCompressedOrUncompressedPubKey) being incongruous with the\n                     // checks in CheckSignatureEncoding.\n-                    if (CheckSignatureEncoding(vch, SCRIPT_VERIFY_STRICTENC, NULL)) {\n+                    if (CheckSignatureEncoding(vch, SCRIPT_VERIFY_STRICTENC, nullptr)) {\n                         const unsigned char chSigHashType = vch.back();\n                         if (mapSigHashTypes.count(chSigHashType)) {\n                             strSigHashDecode = \"[\" + mapSigHashTypes.find(chSigHashType)->second + \"]\";\n@@ -138,12 +148,13 @@ void ScriptPubKeyToUniv(const CScript& scriptPubKey,\n     out.pushKV(\"type\", GetTxnOutputType(type));\n \n     UniValue a(UniValue::VARR);\n-    for (const CTxDestination& addr : addresses)\n-        a.push_back(CBitcoinAddress(addr).ToString());\n+    for (const CTxDestination& addr : addresses) {\n+        a.push_back(EncodeDestination(addr));\n+    }\n     out.pushKV(\"addresses\", a);\n }\n \n-void TxToUniv(const CTransaction& tx, const uint256& hashBlock, UniValue& entry)\n+void TxToUniv(const CTransaction& tx, const uint256& hashBlock, UniValue& entry, bool include_hex, int serialize_flags)\n {\n     entry.pushKV(\"txid\", tx.GetHash().GetHex());\n     entry.pushKV(\"hash\", tx.GetWitnessHash().GetHex());\n@@ -184,8 +195,7 @@ void TxToUniv(const CTransaction& tx, const uint256& hashBlock, UniValue& entry)\n \n         UniValue out(UniValue::VOBJ);\n \n-        UniValue outValue(UniValue::VNUM, FormatMoney(txout.nValue));\n-        out.pushKV(\"value\", outValue);\n+        out.pushKV(\"value\", ValueFromAmount(txout.nValue));\n         out.pushKV(\"n\", (int64_t)i);\n \n         UniValue o(UniValue::VOBJ);\n@@ -198,5 +208,7 @@ void TxToUniv(const CTransaction& tx, const uint256& hashBlock, UniValue& entry)\n     if (!hashBlock.IsNull())\n         entry.pushKV(\"blockhash\", hashBlock.GetHex());\n \n-    entry.pushKV(\"hex\", EncodeHexTx(tx)); // the hex-encoded transaction. used the name \"hex\" to be consistent with the verbose output of \"getrawtransaction\".\n+    if (include_hex) {\n+        entry.pushKV(\"hex\", EncodeHexTx(tx, serialize_flags)); // the hex-encoded transaction. used the name \"hex\" to be consistent with the verbose output of \"getrawtransaction\".\n+    }\n }"
      },
      {
        "sha": "a7b63b19dfbc6318684d85d2aa514bfe99d1961c",
        "filename": "src/crypto/aes.h",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/crypto/aes.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/crypto/aes.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/crypto/aes.h?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -22,7 +22,7 @@ class AES128Encrypt\n     AES128_ctx ctx;\n \n public:\n-    AES128Encrypt(const unsigned char key[16]);\n+    explicit AES128Encrypt(const unsigned char key[16]);\n     ~AES128Encrypt();\n     void Encrypt(unsigned char ciphertext[16], const unsigned char plaintext[16]) const;\n };\n@@ -34,7 +34,7 @@ class AES128Decrypt\n     AES128_ctx ctx;\n \n public:\n-    AES128Decrypt(const unsigned char key[16]);\n+    explicit AES128Decrypt(const unsigned char key[16]);\n     ~AES128Decrypt();\n     void Decrypt(unsigned char plaintext[16], const unsigned char ciphertext[16]) const;\n };\n@@ -46,7 +46,7 @@ class AES256Encrypt\n     AES256_ctx ctx;\n \n public:\n-    AES256Encrypt(const unsigned char key[32]);\n+    explicit AES256Encrypt(const unsigned char key[32]);\n     ~AES256Encrypt();\n     void Encrypt(unsigned char ciphertext[16], const unsigned char plaintext[16]) const;\n };\n@@ -58,7 +58,7 @@ class AES256Decrypt\n     AES256_ctx ctx;\n \n public:\n-    AES256Decrypt(const unsigned char key[32]);\n+    explicit AES256Decrypt(const unsigned char key[32]);\n     ~AES256Decrypt();\n     void Decrypt(unsigned char plaintext[16], const unsigned char ciphertext[16]) const;\n };"
      },
      {
        "sha": "4038ae9f868e054ee6baa64bafd997c85e260226",
        "filename": "src/crypto/chacha20.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/crypto/chacha20.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/crypto/chacha20.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/crypto/chacha20.cpp?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -75,7 +75,7 @@ void ChaCha20::Output(unsigned char* c, size_t bytes)\n {\n     uint32_t x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15;\n     uint32_t j0, j1, j2, j3, j4, j5, j6, j7, j8, j9, j10, j11, j12, j13, j14, j15;\n-    unsigned char *ctarget = NULL;\n+    unsigned char *ctarget = nullptr;\n     unsigned char tmp[64];\n     unsigned int i;\n "
      },
      {
        "sha": "bd9bc9420b5115ee4ebb2d6694830512c03bb5f5",
        "filename": "src/crypto/common.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/crypto/common.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/crypto/common.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/crypto/common.h?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -6,7 +6,7 @@\n #define BITCOIN_CRYPTO_COMMON_H\n \n #if defined(HAVE_CONFIG_H)\n-#include \"bitcoin-config.h\"\n+#include \"config/bitcoin-config.h\"\n #endif\n \n #include <stdint.h>"
      },
      {
        "sha": "8c42fcfe1442438e1696c47dbc689d777227f780",
        "filename": "src/crypto/hmac_sha256.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/crypto/hmac_sha256.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/crypto/hmac_sha256.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/crypto/hmac_sha256.h?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -10,7 +10,7 @@\n #include <stdint.h>\n #include <stdlib.h>\n \n-/** A hasher class for HMAC-SHA-512. */\n+/** A hasher class for HMAC-SHA-256. */\n class CHMAC_SHA256\n {\n private:"
      },
      {
        "sha": "29afe86ec79780ecbcf5269fb1032e7c7a50ab83",
        "filename": "src/crypto/sha256.cpp",
        "status": "modified",
        "additions": 148,
        "deletions": 88,
        "changes": 236,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/crypto/sha256.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/crypto/sha256.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/crypto/sha256.cpp?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -3,10 +3,21 @@\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #include \"crypto/sha256.h\"\n-\n #include \"crypto/common.h\"\n \n+#include <assert.h>\n #include <string.h>\n+#include <atomic>\n+\n+#if defined(__x86_64__) || defined(__amd64__)\n+#if defined(USE_ASM)\n+#include <cpuid.h>\n+namespace sha256_sse4\n+{\n+void Transform(uint32_t* s, const unsigned char* chunk, size_t blocks);\n+}\n+#endif\n+#endif\n \n // Internal implementation code.\n namespace\n@@ -43,93 +54,142 @@ void inline Initialize(uint32_t* s)\n     s[7] = 0x5be0cd19ul;\n }\n \n-/** Perform one SHA-256 transformation, processing a 64-byte chunk. */\n-void Transform(uint32_t* s, const unsigned char* chunk)\n+/** Perform a number of SHA-256 transformations, processing 64-byte chunks. */\n+void Transform(uint32_t* s, const unsigned char* chunk, size_t blocks)\n {\n-    uint32_t a = s[0], b = s[1], c = s[2], d = s[3], e = s[4], f = s[5], g = s[6], h = s[7];\n-    uint32_t w0, w1, w2, w3, w4, w5, w6, w7, w8, w9, w10, w11, w12, w13, w14, w15;\n-\n-    Round(a, b, c, d, e, f, g, h, 0x428a2f98, w0 = ReadBE32(chunk + 0));\n-    Round(h, a, b, c, d, e, f, g, 0x71374491, w1 = ReadBE32(chunk + 4));\n-    Round(g, h, a, b, c, d, e, f, 0xb5c0fbcf, w2 = ReadBE32(chunk + 8));\n-    Round(f, g, h, a, b, c, d, e, 0xe9b5dba5, w3 = ReadBE32(chunk + 12));\n-    Round(e, f, g, h, a, b, c, d, 0x3956c25b, w4 = ReadBE32(chunk + 16));\n-    Round(d, e, f, g, h, a, b, c, 0x59f111f1, w5 = ReadBE32(chunk + 20));\n-    Round(c, d, e, f, g, h, a, b, 0x923f82a4, w6 = ReadBE32(chunk + 24));\n-    Round(b, c, d, e, f, g, h, a, 0xab1c5ed5, w7 = ReadBE32(chunk + 28));\n-    Round(a, b, c, d, e, f, g, h, 0xd807aa98, w8 = ReadBE32(chunk + 32));\n-    Round(h, a, b, c, d, e, f, g, 0x12835b01, w9 = ReadBE32(chunk + 36));\n-    Round(g, h, a, b, c, d, e, f, 0x243185be, w10 = ReadBE32(chunk + 40));\n-    Round(f, g, h, a, b, c, d, e, 0x550c7dc3, w11 = ReadBE32(chunk + 44));\n-    Round(e, f, g, h, a, b, c, d, 0x72be5d74, w12 = ReadBE32(chunk + 48));\n-    Round(d, e, f, g, h, a, b, c, 0x80deb1fe, w13 = ReadBE32(chunk + 52));\n-    Round(c, d, e, f, g, h, a, b, 0x9bdc06a7, w14 = ReadBE32(chunk + 56));\n-    Round(b, c, d, e, f, g, h, a, 0xc19bf174, w15 = ReadBE32(chunk + 60));\n-\n-    Round(a, b, c, d, e, f, g, h, 0xe49b69c1, w0 += sigma1(w14) + w9 + sigma0(w1));\n-    Round(h, a, b, c, d, e, f, g, 0xefbe4786, w1 += sigma1(w15) + w10 + sigma0(w2));\n-    Round(g, h, a, b, c, d, e, f, 0x0fc19dc6, w2 += sigma1(w0) + w11 + sigma0(w3));\n-    Round(f, g, h, a, b, c, d, e, 0x240ca1cc, w3 += sigma1(w1) + w12 + sigma0(w4));\n-    Round(e, f, g, h, a, b, c, d, 0x2de92c6f, w4 += sigma1(w2) + w13 + sigma0(w5));\n-    Round(d, e, f, g, h, a, b, c, 0x4a7484aa, w5 += sigma1(w3) + w14 + sigma0(w6));\n-    Round(c, d, e, f, g, h, a, b, 0x5cb0a9dc, w6 += sigma1(w4) + w15 + sigma0(w7));\n-    Round(b, c, d, e, f, g, h, a, 0x76f988da, w7 += sigma1(w5) + w0 + sigma0(w8));\n-    Round(a, b, c, d, e, f, g, h, 0x983e5152, w8 += sigma1(w6) + w1 + sigma0(w9));\n-    Round(h, a, b, c, d, e, f, g, 0xa831c66d, w9 += sigma1(w7) + w2 + sigma0(w10));\n-    Round(g, h, a, b, c, d, e, f, 0xb00327c8, w10 += sigma1(w8) + w3 + sigma0(w11));\n-    Round(f, g, h, a, b, c, d, e, 0xbf597fc7, w11 += sigma1(w9) + w4 + sigma0(w12));\n-    Round(e, f, g, h, a, b, c, d, 0xc6e00bf3, w12 += sigma1(w10) + w5 + sigma0(w13));\n-    Round(d, e, f, g, h, a, b, c, 0xd5a79147, w13 += sigma1(w11) + w6 + sigma0(w14));\n-    Round(c, d, e, f, g, h, a, b, 0x06ca6351, w14 += sigma1(w12) + w7 + sigma0(w15));\n-    Round(b, c, d, e, f, g, h, a, 0x14292967, w15 += sigma1(w13) + w8 + sigma0(w0));\n-\n-    Round(a, b, c, d, e, f, g, h, 0x27b70a85, w0 += sigma1(w14) + w9 + sigma0(w1));\n-    Round(h, a, b, c, d, e, f, g, 0x2e1b2138, w1 += sigma1(w15) + w10 + sigma0(w2));\n-    Round(g, h, a, b, c, d, e, f, 0x4d2c6dfc, w2 += sigma1(w0) + w11 + sigma0(w3));\n-    Round(f, g, h, a, b, c, d, e, 0x53380d13, w3 += sigma1(w1) + w12 + sigma0(w4));\n-    Round(e, f, g, h, a, b, c, d, 0x650a7354, w4 += sigma1(w2) + w13 + sigma0(w5));\n-    Round(d, e, f, g, h, a, b, c, 0x766a0abb, w5 += sigma1(w3) + w14 + sigma0(w6));\n-    Round(c, d, e, f, g, h, a, b, 0x81c2c92e, w6 += sigma1(w4) + w15 + sigma0(w7));\n-    Round(b, c, d, e, f, g, h, a, 0x92722c85, w7 += sigma1(w5) + w0 + sigma0(w8));\n-    Round(a, b, c, d, e, f, g, h, 0xa2bfe8a1, w8 += sigma1(w6) + w1 + sigma0(w9));\n-    Round(h, a, b, c, d, e, f, g, 0xa81a664b, w9 += sigma1(w7) + w2 + sigma0(w10));\n-    Round(g, h, a, b, c, d, e, f, 0xc24b8b70, w10 += sigma1(w8) + w3 + sigma0(w11));\n-    Round(f, g, h, a, b, c, d, e, 0xc76c51a3, w11 += sigma1(w9) + w4 + sigma0(w12));\n-    Round(e, f, g, h, a, b, c, d, 0xd192e819, w12 += sigma1(w10) + w5 + sigma0(w13));\n-    Round(d, e, f, g, h, a, b, c, 0xd6990624, w13 += sigma1(w11) + w6 + sigma0(w14));\n-    Round(c, d, e, f, g, h, a, b, 0xf40e3585, w14 += sigma1(w12) + w7 + sigma0(w15));\n-    Round(b, c, d, e, f, g, h, a, 0x106aa070, w15 += sigma1(w13) + w8 + sigma0(w0));\n-\n-    Round(a, b, c, d, e, f, g, h, 0x19a4c116, w0 += sigma1(w14) + w9 + sigma0(w1));\n-    Round(h, a, b, c, d, e, f, g, 0x1e376c08, w1 += sigma1(w15) + w10 + sigma0(w2));\n-    Round(g, h, a, b, c, d, e, f, 0x2748774c, w2 += sigma1(w0) + w11 + sigma0(w3));\n-    Round(f, g, h, a, b, c, d, e, 0x34b0bcb5, w3 += sigma1(w1) + w12 + sigma0(w4));\n-    Round(e, f, g, h, a, b, c, d, 0x391c0cb3, w4 += sigma1(w2) + w13 + sigma0(w5));\n-    Round(d, e, f, g, h, a, b, c, 0x4ed8aa4a, w5 += sigma1(w3) + w14 + sigma0(w6));\n-    Round(c, d, e, f, g, h, a, b, 0x5b9cca4f, w6 += sigma1(w4) + w15 + sigma0(w7));\n-    Round(b, c, d, e, f, g, h, a, 0x682e6ff3, w7 += sigma1(w5) + w0 + sigma0(w8));\n-    Round(a, b, c, d, e, f, g, h, 0x748f82ee, w8 += sigma1(w6) + w1 + sigma0(w9));\n-    Round(h, a, b, c, d, e, f, g, 0x78a5636f, w9 += sigma1(w7) + w2 + sigma0(w10));\n-    Round(g, h, a, b, c, d, e, f, 0x84c87814, w10 += sigma1(w8) + w3 + sigma0(w11));\n-    Round(f, g, h, a, b, c, d, e, 0x8cc70208, w11 += sigma1(w9) + w4 + sigma0(w12));\n-    Round(e, f, g, h, a, b, c, d, 0x90befffa, w12 += sigma1(w10) + w5 + sigma0(w13));\n-    Round(d, e, f, g, h, a, b, c, 0xa4506ceb, w13 += sigma1(w11) + w6 + sigma0(w14));\n-    Round(c, d, e, f, g, h, a, b, 0xbef9a3f7, w14 + sigma1(w12) + w7 + sigma0(w15));\n-    Round(b, c, d, e, f, g, h, a, 0xc67178f2, w15 + sigma1(w13) + w8 + sigma0(w0));\n-\n-    s[0] += a;\n-    s[1] += b;\n-    s[2] += c;\n-    s[3] += d;\n-    s[4] += e;\n-    s[5] += f;\n-    s[6] += g;\n-    s[7] += h;\n+    while (blocks--) {\n+        uint32_t a = s[0], b = s[1], c = s[2], d = s[3], e = s[4], f = s[5], g = s[6], h = s[7];\n+        uint32_t w0, w1, w2, w3, w4, w5, w6, w7, w8, w9, w10, w11, w12, w13, w14, w15;\n+\n+        Round(a, b, c, d, e, f, g, h, 0x428a2f98, w0 = ReadBE32(chunk + 0));\n+        Round(h, a, b, c, d, e, f, g, 0x71374491, w1 = ReadBE32(chunk + 4));\n+        Round(g, h, a, b, c, d, e, f, 0xb5c0fbcf, w2 = ReadBE32(chunk + 8));\n+        Round(f, g, h, a, b, c, d, e, 0xe9b5dba5, w3 = ReadBE32(chunk + 12));\n+        Round(e, f, g, h, a, b, c, d, 0x3956c25b, w4 = ReadBE32(chunk + 16));\n+        Round(d, e, f, g, h, a, b, c, 0x59f111f1, w5 = ReadBE32(chunk + 20));\n+        Round(c, d, e, f, g, h, a, b, 0x923f82a4, w6 = ReadBE32(chunk + 24));\n+        Round(b, c, d, e, f, g, h, a, 0xab1c5ed5, w7 = ReadBE32(chunk + 28));\n+        Round(a, b, c, d, e, f, g, h, 0xd807aa98, w8 = ReadBE32(chunk + 32));\n+        Round(h, a, b, c, d, e, f, g, 0x12835b01, w9 = ReadBE32(chunk + 36));\n+        Round(g, h, a, b, c, d, e, f, 0x243185be, w10 = ReadBE32(chunk + 40));\n+        Round(f, g, h, a, b, c, d, e, 0x550c7dc3, w11 = ReadBE32(chunk + 44));\n+        Round(e, f, g, h, a, b, c, d, 0x72be5d74, w12 = ReadBE32(chunk + 48));\n+        Round(d, e, f, g, h, a, b, c, 0x80deb1fe, w13 = ReadBE32(chunk + 52));\n+        Round(c, d, e, f, g, h, a, b, 0x9bdc06a7, w14 = ReadBE32(chunk + 56));\n+        Round(b, c, d, e, f, g, h, a, 0xc19bf174, w15 = ReadBE32(chunk + 60));\n+\n+        Round(a, b, c, d, e, f, g, h, 0xe49b69c1, w0 += sigma1(w14) + w9 + sigma0(w1));\n+        Round(h, a, b, c, d, e, f, g, 0xefbe4786, w1 += sigma1(w15) + w10 + sigma0(w2));\n+        Round(g, h, a, b, c, d, e, f, 0x0fc19dc6, w2 += sigma1(w0) + w11 + sigma0(w3));\n+        Round(f, g, h, a, b, c, d, e, 0x240ca1cc, w3 += sigma1(w1) + w12 + sigma0(w4));\n+        Round(e, f, g, h, a, b, c, d, 0x2de92c6f, w4 += sigma1(w2) + w13 + sigma0(w5));\n+        Round(d, e, f, g, h, a, b, c, 0x4a7484aa, w5 += sigma1(w3) + w14 + sigma0(w6));\n+        Round(c, d, e, f, g, h, a, b, 0x5cb0a9dc, w6 += sigma1(w4) + w15 + sigma0(w7));\n+        Round(b, c, d, e, f, g, h, a, 0x76f988da, w7 += sigma1(w5) + w0 + sigma0(w8));\n+        Round(a, b, c, d, e, f, g, h, 0x983e5152, w8 += sigma1(w6) + w1 + sigma0(w9));\n+        Round(h, a, b, c, d, e, f, g, 0xa831c66d, w9 += sigma1(w7) + w2 + sigma0(w10));\n+        Round(g, h, a, b, c, d, e, f, 0xb00327c8, w10 += sigma1(w8) + w3 + sigma0(w11));\n+        Round(f, g, h, a, b, c, d, e, 0xbf597fc7, w11 += sigma1(w9) + w4 + sigma0(w12));\n+        Round(e, f, g, h, a, b, c, d, 0xc6e00bf3, w12 += sigma1(w10) + w5 + sigma0(w13));\n+        Round(d, e, f, g, h, a, b, c, 0xd5a79147, w13 += sigma1(w11) + w6 + sigma0(w14));\n+        Round(c, d, e, f, g, h, a, b, 0x06ca6351, w14 += sigma1(w12) + w7 + sigma0(w15));\n+        Round(b, c, d, e, f, g, h, a, 0x14292967, w15 += sigma1(w13) + w8 + sigma0(w0));\n+\n+        Round(a, b, c, d, e, f, g, h, 0x27b70a85, w0 += sigma1(w14) + w9 + sigma0(w1));\n+        Round(h, a, b, c, d, e, f, g, 0x2e1b2138, w1 += sigma1(w15) + w10 + sigma0(w2));\n+        Round(g, h, a, b, c, d, e, f, 0x4d2c6dfc, w2 += sigma1(w0) + w11 + sigma0(w3));\n+        Round(f, g, h, a, b, c, d, e, 0x53380d13, w3 += sigma1(w1) + w12 + sigma0(w4));\n+        Round(e, f, g, h, a, b, c, d, 0x650a7354, w4 += sigma1(w2) + w13 + sigma0(w5));\n+        Round(d, e, f, g, h, a, b, c, 0x766a0abb, w5 += sigma1(w3) + w14 + sigma0(w6));\n+        Round(c, d, e, f, g, h, a, b, 0x81c2c92e, w6 += sigma1(w4) + w15 + sigma0(w7));\n+        Round(b, c, d, e, f, g, h, a, 0x92722c85, w7 += sigma1(w5) + w0 + sigma0(w8));\n+        Round(a, b, c, d, e, f, g, h, 0xa2bfe8a1, w8 += sigma1(w6) + w1 + sigma0(w9));\n+        Round(h, a, b, c, d, e, f, g, 0xa81a664b, w9 += sigma1(w7) + w2 + sigma0(w10));\n+        Round(g, h, a, b, c, d, e, f, 0xc24b8b70, w10 += sigma1(w8) + w3 + sigma0(w11));\n+        Round(f, g, h, a, b, c, d, e, 0xc76c51a3, w11 += sigma1(w9) + w4 + sigma0(w12));\n+        Round(e, f, g, h, a, b, c, d, 0xd192e819, w12 += sigma1(w10) + w5 + sigma0(w13));\n+        Round(d, e, f, g, h, a, b, c, 0xd6990624, w13 += sigma1(w11) + w6 + sigma0(w14));\n+        Round(c, d, e, f, g, h, a, b, 0xf40e3585, w14 += sigma1(w12) + w7 + sigma0(w15));\n+        Round(b, c, d, e, f, g, h, a, 0x106aa070, w15 += sigma1(w13) + w8 + sigma0(w0));\n+\n+        Round(a, b, c, d, e, f, g, h, 0x19a4c116, w0 += sigma1(w14) + w9 + sigma0(w1));\n+        Round(h, a, b, c, d, e, f, g, 0x1e376c08, w1 += sigma1(w15) + w10 + sigma0(w2));\n+        Round(g, h, a, b, c, d, e, f, 0x2748774c, w2 += sigma1(w0) + w11 + sigma0(w3));\n+        Round(f, g, h, a, b, c, d, e, 0x34b0bcb5, w3 += sigma1(w1) + w12 + sigma0(w4));\n+        Round(e, f, g, h, a, b, c, d, 0x391c0cb3, w4 += sigma1(w2) + w13 + sigma0(w5));\n+        Round(d, e, f, g, h, a, b, c, 0x4ed8aa4a, w5 += sigma1(w3) + w14 + sigma0(w6));\n+        Round(c, d, e, f, g, h, a, b, 0x5b9cca4f, w6 += sigma1(w4) + w15 + sigma0(w7));\n+        Round(b, c, d, e, f, g, h, a, 0x682e6ff3, w7 += sigma1(w5) + w0 + sigma0(w8));\n+        Round(a, b, c, d, e, f, g, h, 0x748f82ee, w8 += sigma1(w6) + w1 + sigma0(w9));\n+        Round(h, a, b, c, d, e, f, g, 0x78a5636f, w9 += sigma1(w7) + w2 + sigma0(w10));\n+        Round(g, h, a, b, c, d, e, f, 0x84c87814, w10 += sigma1(w8) + w3 + sigma0(w11));\n+        Round(f, g, h, a, b, c, d, e, 0x8cc70208, w11 += sigma1(w9) + w4 + sigma0(w12));\n+        Round(e, f, g, h, a, b, c, d, 0x90befffa, w12 += sigma1(w10) + w5 + sigma0(w13));\n+        Round(d, e, f, g, h, a, b, c, 0xa4506ceb, w13 += sigma1(w11) + w6 + sigma0(w14));\n+        Round(c, d, e, f, g, h, a, b, 0xbef9a3f7, w14 + sigma1(w12) + w7 + sigma0(w15));\n+        Round(b, c, d, e, f, g, h, a, 0xc67178f2, w15 + sigma1(w13) + w8 + sigma0(w0));\n+\n+        s[0] += a;\n+        s[1] += b;\n+        s[2] += c;\n+        s[3] += d;\n+        s[4] += e;\n+        s[5] += f;\n+        s[6] += g;\n+        s[7] += h;\n+        chunk += 64;\n+    }\n }\n \n } // namespace sha256\n+\n+typedef void (*TransformType)(uint32_t*, const unsigned char*, size_t);\n+\n+bool SelfTest(TransformType tr) {\n+    static const unsigned char in1[65] = {0, 0x80};\n+    static const unsigned char in2[129] = {\n+        0,\n+        32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, \n+        32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, \n+        0x80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0\n+    };\n+    static const uint32_t init[8] = {0x6a09e667ul, 0xbb67ae85ul, 0x3c6ef372ul, 0xa54ff53aul, 0x510e527ful, 0x9b05688cul, 0x1f83d9abul, 0x5be0cd19ul};\n+    static const uint32_t out1[8] = {0xe3b0c442ul, 0x98fc1c14ul, 0x9afbf4c8ul, 0x996fb924ul, 0x27ae41e4ul, 0x649b934cul, 0xa495991bul, 0x7852b855ul};\n+    static const uint32_t out2[8] = {0xce4153b0ul, 0x147c2a86ul, 0x3ed4298eul, 0xe0676bc8ul, 0x79fc77a1ul, 0x2abe1f49ul, 0xb2b055dful, 0x1069523eul};\n+    uint32_t buf[8];\n+    memcpy(buf, init, sizeof(buf));\n+    // Process nothing, and check we remain in the initial state.\n+    tr(buf, nullptr, 0);\n+    if (memcmp(buf, init, sizeof(buf))) return false;\n+    // Process the padded empty string (unaligned)\n+    tr(buf, in1 + 1, 1);\n+    if (memcmp(buf, out1, sizeof(buf))) return false;\n+    // Process 64 spaces (unaligned)\n+    memcpy(buf, init, sizeof(buf));\n+    tr(buf, in2 + 1, 2);\n+    if (memcmp(buf, out2, sizeof(buf))) return false;\n+    return true;\n+}\n+\n+TransformType Transform = sha256::Transform;\n+\n } // namespace\n \n+std::string SHA256AutoDetect()\n+{\n+#if defined(USE_ASM) && (defined(__x86_64__) || defined(__amd64__))\n+    uint32_t eax, ebx, ecx, edx;\n+    if (__get_cpuid(1, &eax, &ebx, &ecx, &edx) && (ecx >> 19) & 1) {\n+        Transform = sha256_sse4::Transform;\n+        assert(SelfTest(Transform));\n+        return \"sse4\";\n+    }\n+#endif\n+\n+    assert(SelfTest(Transform));\n+    return \"standard\";\n+}\n \n ////// SHA-256\n \n@@ -147,14 +207,14 @@ CSHA256& CSHA256::Write(const unsigned char* data, size_t len)\n         memcpy(buf + bufsize, data, 64 - bufsize);\n         bytes += 64 - bufsize;\n         data += 64 - bufsize;\n-        sha256::Transform(s, buf);\n+        Transform(s, buf, 1);\n         bufsize = 0;\n     }\n-    while (end >= data + 64) {\n-        // Process full chunks directly from the source.\n-        sha256::Transform(s, data);\n-        bytes += 64;\n-        data += 64;\n+    if (end - data >= 64) {\n+        size_t blocks = (end - data) / 64;\n+        Transform(s, data, blocks);\n+        data += 64 * blocks;\n+        bytes += 64 * blocks;\n     }\n     if (end > data) {\n         // Fill the buffer with what remains."
      },
      {
        "sha": "aa4f3972cc71c358fffabe31423b9f7c787c3488",
        "filename": "src/crypto/sha256.h",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/crypto/sha256.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/crypto/sha256.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/crypto/sha256.h?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -7,6 +7,7 @@\n \n #include <stdint.h>\n #include <stdlib.h>\n+#include <string>\n \n /** A hasher class for SHA-256. */\n class CSHA256\n@@ -25,4 +26,9 @@ class CSHA256\n     CSHA256& Reset();\n };\n \n+/** Autodetect the best available SHA256 implementation.\n+ *  Returns the name of the implementation.\n+ */\n+std::string SHA256AutoDetect();\n+\n #endif // BITCOIN_CRYPTO_SHA256_H"
      },
      {
        "sha": "89f529a3abcff52044b0db662aa857518c523e80",
        "filename": "src/crypto/sha256_sse4.cpp",
        "status": "added",
        "additions": 1506,
        "deletions": 0,
        "changes": 1506,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/crypto/sha256_sse4.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/crypto/sha256_sse4.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/crypto/sha256_sse4.cpp?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -0,0 +1,1506 @@\n+// Copyright (c) 2017 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+//\n+// This is a translation to GCC extended asm syntax from YASM code by Intel\n+// (available at the bottom of this file).\n+\n+#include <stdint.h>\n+#include <stdlib.h>\n+\n+#if defined(__x86_64__) || defined(__amd64__)\n+\n+namespace sha256_sse4\n+{\n+void Transform(uint32_t* s, const unsigned char* chunk, size_t blocks)\n+{\n+    static const uint32_t K256 alignas(16) [] = {\n+        0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n+        0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n+        0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n+        0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n+        0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n+        0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n+        0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n+        0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n+        0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n+        0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n+        0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n+        0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n+        0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n+        0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n+        0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n+        0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2,\n+    };\n+    static const uint32_t FLIP_MASK alignas(16) [] = {0x00010203, 0x04050607, 0x08090a0b, 0x0c0d0e0f};\n+    static const uint32_t SHUF_00BA alignas(16) [] = {0x03020100, 0x0b0a0908, 0xffffffff, 0xffffffff};\n+    static const uint32_t SHUF_DC00 alignas(16) [] = {0xffffffff, 0xffffffff, 0x03020100, 0x0b0a0908};\n+    uint32_t a, b, c, d, f, g, h, y0, y1, y2;\n+    uint64_t tbl;\n+    uint64_t inp_end, inp;\n+    uint32_t xfer alignas(16) [4];\n+\n+    __asm__ __volatile__(\n+        \"shl    $0x6,%2;\"\n+        \"je     Ldone_hash_%=;\"\n+        \"add    %1,%2;\"\n+        \"mov    %2,%14;\"\n+        \"mov    (%0),%3;\"\n+        \"mov    0x4(%0),%4;\"\n+        \"mov    0x8(%0),%5;\"\n+        \"mov    0xc(%0),%6;\"\n+        \"mov    0x10(%0),%k2;\"\n+        \"mov    0x14(%0),%7;\"\n+        \"mov    0x18(%0),%8;\"\n+        \"mov    0x1c(%0),%9;\"\n+        \"movdqa %18,%%xmm12;\"\n+        \"movdqa %19,%%xmm10;\"\n+        \"movdqa %20,%%xmm11;\"\n+\n+        \"Lloop0_%=:\"\n+        \"lea    %17,%13;\"\n+        \"movdqu (%1),%%xmm4;\"\n+        \"pshufb %%xmm12,%%xmm4;\"\n+        \"movdqu 0x10(%1),%%xmm5;\"\n+        \"pshufb %%xmm12,%%xmm5;\"\n+        \"movdqu 0x20(%1),%%xmm6;\"\n+        \"pshufb %%xmm12,%%xmm6;\"\n+        \"movdqu 0x30(%1),%%xmm7;\"\n+        \"pshufb %%xmm12,%%xmm7;\"\n+        \"mov    %1,%15;\"\n+        \"mov    $3,%1;\"\n+\n+        \"Lloop1_%=:\"\n+        \"movdqa 0x0(%13),%%xmm9;\"\n+        \"paddd  %%xmm4,%%xmm9;\"\n+        \"movdqa %%xmm9,%16;\"\n+        \"movdqa %%xmm7,%%xmm0;\"\n+        \"mov    %k2,%10;\"\n+        \"ror    $0xe,%10;\"\n+        \"mov    %3,%11;\"\n+        \"palignr $0x4,%%xmm6,%%xmm0;\"\n+        \"ror    $0x9,%11;\"\n+        \"xor    %k2,%10;\"\n+        \"mov    %7,%12;\"\n+        \"ror    $0x5,%10;\"\n+        \"movdqa %%xmm5,%%xmm1;\"\n+        \"xor    %3,%11;\"\n+        \"xor    %8,%12;\"\n+        \"paddd  %%xmm4,%%xmm0;\"\n+        \"xor    %k2,%10;\"\n+        \"and    %k2,%12;\"\n+        \"ror    $0xb,%11;\"\n+        \"palignr $0x4,%%xmm4,%%xmm1;\"\n+        \"xor    %3,%11;\"\n+        \"ror    $0x6,%10;\"\n+        \"xor    %8,%12;\"\n+        \"movdqa %%xmm1,%%xmm2;\"\n+        \"ror    $0x2,%11;\"\n+        \"add    %10,%12;\"\n+        \"add    %16,%12;\"\n+        \"movdqa %%xmm1,%%xmm3;\"\n+        \"mov    %3,%10;\"\n+        \"add    %12,%9;\"\n+        \"mov    %3,%12;\"\n+        \"pslld  $0x19,%%xmm1;\"\n+        \"or     %5,%10;\"\n+        \"add    %9,%6;\"\n+        \"and    %5,%12;\"\n+        \"psrld  $0x7,%%xmm2;\"\n+        \"and    %4,%10;\"\n+        \"add    %11,%9;\"\n+        \"por    %%xmm2,%%xmm1;\"\n+        \"or     %12,%10;\"\n+        \"add    %10,%9;\"\n+        \"movdqa %%xmm3,%%xmm2;\"\n+        \"mov    %6,%10;\"\n+        \"mov    %9,%11;\"\n+        \"movdqa %%xmm3,%%xmm8;\"\n+        \"ror    $0xe,%10;\"\n+        \"xor    %6,%10;\"\n+        \"mov    %k2,%12;\"\n+        \"ror    $0x9,%11;\"\n+        \"pslld  $0xe,%%xmm3;\"\n+        \"xor    %9,%11;\"\n+        \"ror    $0x5,%10;\"\n+        \"xor    %7,%12;\"\n+        \"psrld  $0x12,%%xmm2;\"\n+        \"ror    $0xb,%11;\"\n+        \"xor    %6,%10;\"\n+        \"and    %6,%12;\"\n+        \"ror    $0x6,%10;\"\n+        \"pxor   %%xmm3,%%xmm1;\"\n+        \"xor    %9,%11;\"\n+        \"xor    %7,%12;\"\n+        \"psrld  $0x3,%%xmm8;\"\n+        \"add    %10,%12;\"\n+        \"add    4+%16,%12;\"\n+        \"ror    $0x2,%11;\"\n+        \"pxor   %%xmm2,%%xmm1;\"\n+        \"mov    %9,%10;\"\n+        \"add    %12,%8;\"\n+        \"mov    %9,%12;\"\n+        \"pxor   %%xmm8,%%xmm1;\"\n+        \"or     %4,%10;\"\n+        \"add    %8,%5;\"\n+        \"and    %4,%12;\"\n+        \"pshufd $0xfa,%%xmm7,%%xmm2;\"\n+        \"and    %3,%10;\"\n+        \"add    %11,%8;\"\n+        \"paddd  %%xmm1,%%xmm0;\"\n+        \"or     %12,%10;\"\n+        \"add    %10,%8;\"\n+        \"movdqa %%xmm2,%%xmm3;\"\n+        \"mov    %5,%10;\"\n+        \"mov    %8,%11;\"\n+        \"ror    $0xe,%10;\"\n+        \"movdqa %%xmm2,%%xmm8;\"\n+        \"xor    %5,%10;\"\n+        \"ror    $0x9,%11;\"\n+        \"mov    %6,%12;\"\n+        \"xor    %8,%11;\"\n+        \"ror    $0x5,%10;\"\n+        \"psrlq  $0x11,%%xmm2;\"\n+        \"xor    %k2,%12;\"\n+        \"psrlq  $0x13,%%xmm3;\"\n+        \"xor    %5,%10;\"\n+        \"and    %5,%12;\"\n+        \"psrld  $0xa,%%xmm8;\"\n+        \"ror    $0xb,%11;\"\n+        \"xor    %8,%11;\"\n+        \"xor    %k2,%12;\"\n+        \"ror    $0x6,%10;\"\n+        \"pxor   %%xmm3,%%xmm2;\"\n+        \"add    %10,%12;\"\n+        \"ror    $0x2,%11;\"\n+        \"add    8+%16,%12;\"\n+        \"pxor   %%xmm2,%%xmm8;\"\n+        \"mov    %8,%10;\"\n+        \"add    %12,%7;\"\n+        \"mov    %8,%12;\"\n+        \"pshufb %%xmm10,%%xmm8;\"\n+        \"or     %3,%10;\"\n+        \"add    %7,%4;\"\n+        \"and    %3,%12;\"\n+        \"paddd  %%xmm8,%%xmm0;\"\n+        \"and    %9,%10;\"\n+        \"add    %11,%7;\"\n+        \"pshufd $0x50,%%xmm0,%%xmm2;\"\n+        \"or     %12,%10;\"\n+        \"add    %10,%7;\"\n+        \"movdqa %%xmm2,%%xmm3;\"\n+        \"mov    %4,%10;\"\n+        \"ror    $0xe,%10;\"\n+        \"mov    %7,%11;\"\n+        \"movdqa %%xmm2,%%xmm4;\"\n+        \"ror    $0x9,%11;\"\n+        \"xor    %4,%10;\"\n+        \"mov    %5,%12;\"\n+        \"ror    $0x5,%10;\"\n+        \"psrlq  $0x11,%%xmm2;\"\n+        \"xor    %7,%11;\"\n+        \"xor    %6,%12;\"\n+        \"psrlq  $0x13,%%xmm3;\"\n+        \"xor    %4,%10;\"\n+        \"and    %4,%12;\"\n+        \"ror    $0xb,%11;\"\n+        \"psrld  $0xa,%%xmm4;\"\n+        \"xor    %7,%11;\"\n+        \"ror    $0x6,%10;\"\n+        \"xor    %6,%12;\"\n+        \"pxor   %%xmm3,%%xmm2;\"\n+        \"ror    $0x2,%11;\"\n+        \"add    %10,%12;\"\n+        \"add    12+%16,%12;\"\n+        \"pxor   %%xmm2,%%xmm4;\"\n+        \"mov    %7,%10;\"\n+        \"add    %12,%k2;\"\n+        \"mov    %7,%12;\"\n+        \"pshufb %%xmm11,%%xmm4;\"\n+        \"or     %9,%10;\"\n+        \"add    %k2,%3;\"\n+        \"and    %9,%12;\"\n+        \"paddd  %%xmm0,%%xmm4;\"\n+        \"and    %8,%10;\"\n+        \"add    %11,%k2;\"\n+        \"or     %12,%10;\"\n+        \"add    %10,%k2;\"\n+        \"movdqa 0x10(%13),%%xmm9;\"\n+        \"paddd  %%xmm5,%%xmm9;\"\n+        \"movdqa %%xmm9,%16;\"\n+        \"movdqa %%xmm4,%%xmm0;\"\n+        \"mov    %3,%10;\"\n+        \"ror    $0xe,%10;\"\n+        \"mov    %k2,%11;\"\n+        \"palignr $0x4,%%xmm7,%%xmm0;\"\n+        \"ror    $0x9,%11;\"\n+        \"xor    %3,%10;\"\n+        \"mov    %4,%12;\"\n+        \"ror    $0x5,%10;\"\n+        \"movdqa %%xmm6,%%xmm1;\"\n+        \"xor    %k2,%11;\"\n+        \"xor    %5,%12;\"\n+        \"paddd  %%xmm5,%%xmm0;\"\n+        \"xor    %3,%10;\"\n+        \"and    %3,%12;\"\n+        \"ror    $0xb,%11;\"\n+        \"palignr $0x4,%%xmm5,%%xmm1;\"\n+        \"xor    %k2,%11;\"\n+        \"ror    $0x6,%10;\"\n+        \"xor    %5,%12;\"\n+        \"movdqa %%xmm1,%%xmm2;\"\n+        \"ror    $0x2,%11;\"\n+        \"add    %10,%12;\"\n+        \"add    %16,%12;\"\n+        \"movdqa %%xmm1,%%xmm3;\"\n+        \"mov    %k2,%10;\"\n+        \"add    %12,%6;\"\n+        \"mov    %k2,%12;\"\n+        \"pslld  $0x19,%%xmm1;\"\n+        \"or     %8,%10;\"\n+        \"add    %6,%9;\"\n+        \"and    %8,%12;\"\n+        \"psrld  $0x7,%%xmm2;\"\n+        \"and    %7,%10;\"\n+        \"add    %11,%6;\"\n+        \"por    %%xmm2,%%xmm1;\"\n+        \"or     %12,%10;\"\n+        \"add    %10,%6;\"\n+        \"movdqa %%xmm3,%%xmm2;\"\n+        \"mov    %9,%10;\"\n+        \"mov    %6,%11;\"\n+        \"movdqa %%xmm3,%%xmm8;\"\n+        \"ror    $0xe,%10;\"\n+        \"xor    %9,%10;\"\n+        \"mov    %3,%12;\"\n+        \"ror    $0x9,%11;\"\n+        \"pslld  $0xe,%%xmm3;\"\n+        \"xor    %6,%11;\"\n+        \"ror    $0x5,%10;\"\n+        \"xor    %4,%12;\"\n+        \"psrld  $0x12,%%xmm2;\"\n+        \"ror    $0xb,%11;\"\n+        \"xor    %9,%10;\"\n+        \"and    %9,%12;\"\n+        \"ror    $0x6,%10;\"\n+        \"pxor   %%xmm3,%%xmm1;\"\n+        \"xor    %6,%11;\"\n+        \"xor    %4,%12;\"\n+        \"psrld  $0x3,%%xmm8;\"\n+        \"add    %10,%12;\"\n+        \"add    4+%16,%12;\"\n+        \"ror    $0x2,%11;\"\n+        \"pxor   %%xmm2,%%xmm1;\"\n+        \"mov    %6,%10;\"\n+        \"add    %12,%5;\"\n+        \"mov    %6,%12;\"\n+        \"pxor   %%xmm8,%%xmm1;\"\n+        \"or     %7,%10;\"\n+        \"add    %5,%8;\"\n+        \"and    %7,%12;\"\n+        \"pshufd $0xfa,%%xmm4,%%xmm2;\"\n+        \"and    %k2,%10;\"\n+        \"add    %11,%5;\"\n+        \"paddd  %%xmm1,%%xmm0;\"\n+        \"or     %12,%10;\"\n+        \"add    %10,%5;\"\n+        \"movdqa %%xmm2,%%xmm3;\"\n+        \"mov    %8,%10;\"\n+        \"mov    %5,%11;\"\n+        \"ror    $0xe,%10;\"\n+        \"movdqa %%xmm2,%%xmm8;\"\n+        \"xor    %8,%10;\"\n+        \"ror    $0x9,%11;\"\n+        \"mov    %9,%12;\"\n+        \"xor    %5,%11;\"\n+        \"ror    $0x5,%10;\"\n+        \"psrlq  $0x11,%%xmm2;\"\n+        \"xor    %3,%12;\"\n+        \"psrlq  $0x13,%%xmm3;\"\n+        \"xor    %8,%10;\"\n+        \"and    %8,%12;\"\n+        \"psrld  $0xa,%%xmm8;\"\n+        \"ror    $0xb,%11;\"\n+        \"xor    %5,%11;\"\n+        \"xor    %3,%12;\"\n+        \"ror    $0x6,%10;\"\n+        \"pxor   %%xmm3,%%xmm2;\"\n+        \"add    %10,%12;\"\n+        \"ror    $0x2,%11;\"\n+        \"add    8+%16,%12;\"\n+        \"pxor   %%xmm2,%%xmm8;\"\n+        \"mov    %5,%10;\"\n+        \"add    %12,%4;\"\n+        \"mov    %5,%12;\"\n+        \"pshufb %%xmm10,%%xmm8;\"\n+        \"or     %k2,%10;\"\n+        \"add    %4,%7;\"\n+        \"and    %k2,%12;\"\n+        \"paddd  %%xmm8,%%xmm0;\"\n+        \"and    %6,%10;\"\n+        \"add    %11,%4;\"\n+        \"pshufd $0x50,%%xmm0,%%xmm2;\"\n+        \"or     %12,%10;\"\n+        \"add    %10,%4;\"\n+        \"movdqa %%xmm2,%%xmm3;\"\n+        \"mov    %7,%10;\"\n+        \"ror    $0xe,%10;\"\n+        \"mov    %4,%11;\"\n+        \"movdqa %%xmm2,%%xmm5;\"\n+        \"ror    $0x9,%11;\"\n+        \"xor    %7,%10;\"\n+        \"mov    %8,%12;\"\n+        \"ror    $0x5,%10;\"\n+        \"psrlq  $0x11,%%xmm2;\"\n+        \"xor    %4,%11;\"\n+        \"xor    %9,%12;\"\n+        \"psrlq  $0x13,%%xmm3;\"\n+        \"xor    %7,%10;\"\n+        \"and    %7,%12;\"\n+        \"ror    $0xb,%11;\"\n+        \"psrld  $0xa,%%xmm5;\"\n+        \"xor    %4,%11;\"\n+        \"ror    $0x6,%10;\"\n+        \"xor    %9,%12;\"\n+        \"pxor   %%xmm3,%%xmm2;\"\n+        \"ror    $0x2,%11;\"\n+        \"add    %10,%12;\"\n+        \"add    12+%16,%12;\"\n+        \"pxor   %%xmm2,%%xmm5;\"\n+        \"mov    %4,%10;\"\n+        \"add    %12,%3;\"\n+        \"mov    %4,%12;\"\n+        \"pshufb %%xmm11,%%xmm5;\"\n+        \"or     %6,%10;\"\n+        \"add    %3,%k2;\"\n+        \"and    %6,%12;\"\n+        \"paddd  %%xmm0,%%xmm5;\"\n+        \"and    %5,%10;\"\n+        \"add    %11,%3;\"\n+        \"or     %12,%10;\"\n+        \"add    %10,%3;\"\n+        \"movdqa 0x20(%13),%%xmm9;\"\n+        \"paddd  %%xmm6,%%xmm9;\"\n+        \"movdqa %%xmm9,%16;\"\n+        \"movdqa %%xmm5,%%xmm0;\"\n+        \"mov    %k2,%10;\"\n+        \"ror    $0xe,%10;\"\n+        \"mov    %3,%11;\"\n+        \"palignr $0x4,%%xmm4,%%xmm0;\"\n+        \"ror    $0x9,%11;\"\n+        \"xor    %k2,%10;\"\n+        \"mov    %7,%12;\"\n+        \"ror    $0x5,%10;\"\n+        \"movdqa %%xmm7,%%xmm1;\"\n+        \"xor    %3,%11;\"\n+        \"xor    %8,%12;\"\n+        \"paddd  %%xmm6,%%xmm0;\"\n+        \"xor    %k2,%10;\"\n+        \"and    %k2,%12;\"\n+        \"ror    $0xb,%11;\"\n+        \"palignr $0x4,%%xmm6,%%xmm1;\"\n+        \"xor    %3,%11;\"\n+        \"ror    $0x6,%10;\"\n+        \"xor    %8,%12;\"\n+        \"movdqa %%xmm1,%%xmm2;\"\n+        \"ror    $0x2,%11;\"\n+        \"add    %10,%12;\"\n+        \"add    %16,%12;\"\n+        \"movdqa %%xmm1,%%xmm3;\"\n+        \"mov    %3,%10;\"\n+        \"add    %12,%9;\"\n+        \"mov    %3,%12;\"\n+        \"pslld  $0x19,%%xmm1;\"\n+        \"or     %5,%10;\"\n+        \"add    %9,%6;\"\n+        \"and    %5,%12;\"\n+        \"psrld  $0x7,%%xmm2;\"\n+        \"and    %4,%10;\"\n+        \"add    %11,%9;\"\n+        \"por    %%xmm2,%%xmm1;\"\n+        \"or     %12,%10;\"\n+        \"add    %10,%9;\"\n+        \"movdqa %%xmm3,%%xmm2;\"\n+        \"mov    %6,%10;\"\n+        \"mov    %9,%11;\"\n+        \"movdqa %%xmm3,%%xmm8;\"\n+        \"ror    $0xe,%10;\"\n+        \"xor    %6,%10;\"\n+        \"mov    %k2,%12;\"\n+        \"ror    $0x9,%11;\"\n+        \"pslld  $0xe,%%xmm3;\"\n+        \"xor    %9,%11;\"\n+        \"ror    $0x5,%10;\"\n+        \"xor    %7,%12;\"\n+        \"psrld  $0x12,%%xmm2;\"\n+        \"ror    $0xb,%11;\"\n+        \"xor    %6,%10;\"\n+        \"and    %6,%12;\"\n+        \"ror    $0x6,%10;\"\n+        \"pxor   %%xmm3,%%xmm1;\"\n+        \"xor    %9,%11;\"\n+        \"xor    %7,%12;\"\n+        \"psrld  $0x3,%%xmm8;\"\n+        \"add    %10,%12;\"\n+        \"add    4+%16,%12;\"\n+        \"ror    $0x2,%11;\"\n+        \"pxor   %%xmm2,%%xmm1;\"\n+        \"mov    %9,%10;\"\n+        \"add    %12,%8;\"\n+        \"mov    %9,%12;\"\n+        \"pxor   %%xmm8,%%xmm1;\"\n+        \"or     %4,%10;\"\n+        \"add    %8,%5;\"\n+        \"and    %4,%12;\"\n+        \"pshufd $0xfa,%%xmm5,%%xmm2;\"\n+        \"and    %3,%10;\"\n+        \"add    %11,%8;\"\n+        \"paddd  %%xmm1,%%xmm0;\"\n+        \"or     %12,%10;\"\n+        \"add    %10,%8;\"\n+        \"movdqa %%xmm2,%%xmm3;\"\n+        \"mov    %5,%10;\"\n+        \"mov    %8,%11;\"\n+        \"ror    $0xe,%10;\"\n+        \"movdqa %%xmm2,%%xmm8;\"\n+        \"xor    %5,%10;\"\n+        \"ror    $0x9,%11;\"\n+        \"mov    %6,%12;\"\n+        \"xor    %8,%11;\"\n+        \"ror    $0x5,%10;\"\n+        \"psrlq  $0x11,%%xmm2;\"\n+        \"xor    %k2,%12;\"\n+        \"psrlq  $0x13,%%xmm3;\"\n+        \"xor    %5,%10;\"\n+        \"and    %5,%12;\"\n+        \"psrld  $0xa,%%xmm8;\"\n+        \"ror    $0xb,%11;\"\n+        \"xor    %8,%11;\"\n+        \"xor    %k2,%12;\"\n+        \"ror    $0x6,%10;\"\n+        \"pxor   %%xmm3,%%xmm2;\"\n+        \"add    %10,%12;\"\n+        \"ror    $0x2,%11;\"\n+        \"add    8+%16,%12;\"\n+        \"pxor   %%xmm2,%%xmm8;\"\n+        \"mov    %8,%10;\"\n+        \"add    %12,%7;\"\n+        \"mov    %8,%12;\"\n+        \"pshufb %%xmm10,%%xmm8;\"\n+        \"or     %3,%10;\"\n+        \"add    %7,%4;\"\n+        \"and    %3,%12;\"\n+        \"paddd  %%xmm8,%%xmm0;\"\n+        \"and    %9,%10;\"\n+        \"add    %11,%7;\"\n+        \"pshufd $0x50,%%xmm0,%%xmm2;\"\n+        \"or     %12,%10;\"\n+        \"add    %10,%7;\"\n+        \"movdqa %%xmm2,%%xmm3;\"\n+        \"mov    %4,%10;\"\n+        \"ror    $0xe,%10;\"\n+        \"mov    %7,%11;\"\n+        \"movdqa %%xmm2,%%xmm6;\"\n+        \"ror    $0x9,%11;\"\n+        \"xor    %4,%10;\"\n+        \"mov    %5,%12;\"\n+        \"ror    $0x5,%10;\"\n+        \"psrlq  $0x11,%%xmm2;\"\n+        \"xor    %7,%11;\"\n+        \"xor    %6,%12;\"\n+        \"psrlq  $0x13,%%xmm3;\"\n+        \"xor    %4,%10;\"\n+        \"and    %4,%12;\"\n+        \"ror    $0xb,%11;\"\n+        \"psrld  $0xa,%%xmm6;\"\n+        \"xor    %7,%11;\"\n+        \"ror    $0x6,%10;\"\n+        \"xor    %6,%12;\"\n+        \"pxor   %%xmm3,%%xmm2;\"\n+        \"ror    $0x2,%11;\"\n+        \"add    %10,%12;\"\n+        \"add    12+%16,%12;\"\n+        \"pxor   %%xmm2,%%xmm6;\"\n+        \"mov    %7,%10;\"\n+        \"add    %12,%k2;\"\n+        \"mov    %7,%12;\"\n+        \"pshufb %%xmm11,%%xmm6;\"\n+        \"or     %9,%10;\"\n+        \"add    %k2,%3;\"\n+        \"and    %9,%12;\"\n+        \"paddd  %%xmm0,%%xmm6;\"\n+        \"and    %8,%10;\"\n+        \"add    %11,%k2;\"\n+        \"or     %12,%10;\"\n+        \"add    %10,%k2;\"\n+        \"movdqa 0x30(%13),%%xmm9;\"\n+        \"paddd  %%xmm7,%%xmm9;\"\n+        \"movdqa %%xmm9,%16;\"\n+        \"add    $0x40,%13;\"\n+        \"movdqa %%xmm6,%%xmm0;\"\n+        \"mov    %3,%10;\"\n+        \"ror    $0xe,%10;\"\n+        \"mov    %k2,%11;\"\n+        \"palignr $0x4,%%xmm5,%%xmm0;\"\n+        \"ror    $0x9,%11;\"\n+        \"xor    %3,%10;\"\n+        \"mov    %4,%12;\"\n+        \"ror    $0x5,%10;\"\n+        \"movdqa %%xmm4,%%xmm1;\"\n+        \"xor    %k2,%11;\"\n+        \"xor    %5,%12;\"\n+        \"paddd  %%xmm7,%%xmm0;\"\n+        \"xor    %3,%10;\"\n+        \"and    %3,%12;\"\n+        \"ror    $0xb,%11;\"\n+        \"palignr $0x4,%%xmm7,%%xmm1;\"\n+        \"xor    %k2,%11;\"\n+        \"ror    $0x6,%10;\"\n+        \"xor    %5,%12;\"\n+        \"movdqa %%xmm1,%%xmm2;\"\n+        \"ror    $0x2,%11;\"\n+        \"add    %10,%12;\"\n+        \"add    %16,%12;\"\n+        \"movdqa %%xmm1,%%xmm3;\"\n+        \"mov    %k2,%10;\"\n+        \"add    %12,%6;\"\n+        \"mov    %k2,%12;\"\n+        \"pslld  $0x19,%%xmm1;\"\n+        \"or     %8,%10;\"\n+        \"add    %6,%9;\"\n+        \"and    %8,%12;\"\n+        \"psrld  $0x7,%%xmm2;\"\n+        \"and    %7,%10;\"\n+        \"add    %11,%6;\"\n+        \"por    %%xmm2,%%xmm1;\"\n+        \"or     %12,%10;\"\n+        \"add    %10,%6;\"\n+        \"movdqa %%xmm3,%%xmm2;\"\n+        \"mov    %9,%10;\"\n+        \"mov    %6,%11;\"\n+        \"movdqa %%xmm3,%%xmm8;\"\n+        \"ror    $0xe,%10;\"\n+        \"xor    %9,%10;\"\n+        \"mov    %3,%12;\"\n+        \"ror    $0x9,%11;\"\n+        \"pslld  $0xe,%%xmm3;\"\n+        \"xor    %6,%11;\"\n+        \"ror    $0x5,%10;\"\n+        \"xor    %4,%12;\"\n+        \"psrld  $0x12,%%xmm2;\"\n+        \"ror    $0xb,%11;\"\n+        \"xor    %9,%10;\"\n+        \"and    %9,%12;\"\n+        \"ror    $0x6,%10;\"\n+        \"pxor   %%xmm3,%%xmm1;\"\n+        \"xor    %6,%11;\"\n+        \"xor    %4,%12;\"\n+        \"psrld  $0x3,%%xmm8;\"\n+        \"add    %10,%12;\"\n+        \"add    4+%16,%12;\"\n+        \"ror    $0x2,%11;\"\n+        \"pxor   %%xmm2,%%xmm1;\"\n+        \"mov    %6,%10;\"\n+        \"add    %12,%5;\"\n+        \"mov    %6,%12;\"\n+        \"pxor   %%xmm8,%%xmm1;\"\n+        \"or     %7,%10;\"\n+        \"add    %5,%8;\"\n+        \"and    %7,%12;\"\n+        \"pshufd $0xfa,%%xmm6,%%xmm2;\"\n+        \"and    %k2,%10;\"\n+        \"add    %11,%5;\"\n+        \"paddd  %%xmm1,%%xmm0;\"\n+        \"or     %12,%10;\"\n+        \"add    %10,%5;\"\n+        \"movdqa %%xmm2,%%xmm3;\"\n+        \"mov    %8,%10;\"\n+        \"mov    %5,%11;\"\n+        \"ror    $0xe,%10;\"\n+        \"movdqa %%xmm2,%%xmm8;\"\n+        \"xor    %8,%10;\"\n+        \"ror    $0x9,%11;\"\n+        \"mov    %9,%12;\"\n+        \"xor    %5,%11;\"\n+        \"ror    $0x5,%10;\"\n+        \"psrlq  $0x11,%%xmm2;\"\n+        \"xor    %3,%12;\"\n+        \"psrlq  $0x13,%%xmm3;\"\n+        \"xor    %8,%10;\"\n+        \"and    %8,%12;\"\n+        \"psrld  $0xa,%%xmm8;\"\n+        \"ror    $0xb,%11;\"\n+        \"xor    %5,%11;\"\n+        \"xor    %3,%12;\"\n+        \"ror    $0x6,%10;\"\n+        \"pxor   %%xmm3,%%xmm2;\"\n+        \"add    %10,%12;\"\n+        \"ror    $0x2,%11;\"\n+        \"add    8+%16,%12;\"\n+        \"pxor   %%xmm2,%%xmm8;\"\n+        \"mov    %5,%10;\"\n+        \"add    %12,%4;\"\n+        \"mov    %5,%12;\"\n+        \"pshufb %%xmm10,%%xmm8;\"\n+        \"or     %k2,%10;\"\n+        \"add    %4,%7;\"\n+        \"and    %k2,%12;\"\n+        \"paddd  %%xmm8,%%xmm0;\"\n+        \"and    %6,%10;\"\n+        \"add    %11,%4;\"\n+        \"pshufd $0x50,%%xmm0,%%xmm2;\"\n+        \"or     %12,%10;\"\n+        \"add    %10,%4;\"\n+        \"movdqa %%xmm2,%%xmm3;\"\n+        \"mov    %7,%10;\"\n+        \"ror    $0xe,%10;\"\n+        \"mov    %4,%11;\"\n+        \"movdqa %%xmm2,%%xmm7;\"\n+        \"ror    $0x9,%11;\"\n+        \"xor    %7,%10;\"\n+        \"mov    %8,%12;\"\n+        \"ror    $0x5,%10;\"\n+        \"psrlq  $0x11,%%xmm2;\"\n+        \"xor    %4,%11;\"\n+        \"xor    %9,%12;\"\n+        \"psrlq  $0x13,%%xmm3;\"\n+        \"xor    %7,%10;\"\n+        \"and    %7,%12;\"\n+        \"ror    $0xb,%11;\"\n+        \"psrld  $0xa,%%xmm7;\"\n+        \"xor    %4,%11;\"\n+        \"ror    $0x6,%10;\"\n+        \"xor    %9,%12;\"\n+        \"pxor   %%xmm3,%%xmm2;\"\n+        \"ror    $0x2,%11;\"\n+        \"add    %10,%12;\"\n+        \"add    12+%16,%12;\"\n+        \"pxor   %%xmm2,%%xmm7;\"\n+        \"mov    %4,%10;\"\n+        \"add    %12,%3;\"\n+        \"mov    %4,%12;\"\n+        \"pshufb %%xmm11,%%xmm7;\"\n+        \"or     %6,%10;\"\n+        \"add    %3,%k2;\"\n+        \"and    %6,%12;\"\n+        \"paddd  %%xmm0,%%xmm7;\"\n+        \"and    %5,%10;\"\n+        \"add    %11,%3;\"\n+        \"or     %12,%10;\"\n+        \"add    %10,%3;\"\n+        \"sub    $0x1,%1;\"\n+        \"jne    Lloop1_%=;\"\n+        \"mov    $0x2,%1;\"\n+\n+        \"Lloop2_%=:\"\n+        \"paddd  0x0(%13),%%xmm4;\"\n+        \"movdqa %%xmm4,%16;\"\n+        \"mov    %k2,%10;\"\n+        \"ror    $0xe,%10;\"\n+        \"mov    %3,%11;\"\n+        \"xor    %k2,%10;\"\n+        \"ror    $0x9,%11;\"\n+        \"mov    %7,%12;\"\n+        \"xor    %3,%11;\"\n+        \"ror    $0x5,%10;\"\n+        \"xor    %8,%12;\"\n+        \"xor    %k2,%10;\"\n+        \"ror    $0xb,%11;\"\n+        \"and    %k2,%12;\"\n+        \"xor    %3,%11;\"\n+        \"ror    $0x6,%10;\"\n+        \"xor    %8,%12;\"\n+        \"add    %10,%12;\"\n+        \"ror    $0x2,%11;\"\n+        \"add    %16,%12;\"\n+        \"mov    %3,%10;\"\n+        \"add    %12,%9;\"\n+        \"mov    %3,%12;\"\n+        \"or     %5,%10;\"\n+        \"add    %9,%6;\"\n+        \"and    %5,%12;\"\n+        \"and    %4,%10;\"\n+        \"add    %11,%9;\"\n+        \"or     %12,%10;\"\n+        \"add    %10,%9;\"\n+        \"mov    %6,%10;\"\n+        \"ror    $0xe,%10;\"\n+        \"mov    %9,%11;\"\n+        \"xor    %6,%10;\"\n+        \"ror    $0x9,%11;\"\n+        \"mov    %k2,%12;\"\n+        \"xor    %9,%11;\"\n+        \"ror    $0x5,%10;\"\n+        \"xor    %7,%12;\"\n+        \"xor    %6,%10;\"\n+        \"ror    $0xb,%11;\"\n+        \"and    %6,%12;\"\n+        \"xor    %9,%11;\"\n+        \"ror    $0x6,%10;\"\n+        \"xor    %7,%12;\"\n+        \"add    %10,%12;\"\n+        \"ror    $0x2,%11;\"\n+        \"add    4+%16,%12;\"\n+        \"mov    %9,%10;\"\n+        \"add    %12,%8;\"\n+        \"mov    %9,%12;\"\n+        \"or     %4,%10;\"\n+        \"add    %8,%5;\"\n+        \"and    %4,%12;\"\n+        \"and    %3,%10;\"\n+        \"add    %11,%8;\"\n+        \"or     %12,%10;\"\n+        \"add    %10,%8;\"\n+        \"mov    %5,%10;\"\n+        \"ror    $0xe,%10;\"\n+        \"mov    %8,%11;\"\n+        \"xor    %5,%10;\"\n+        \"ror    $0x9,%11;\"\n+        \"mov    %6,%12;\"\n+        \"xor    %8,%11;\"\n+        \"ror    $0x5,%10;\"\n+        \"xor    %k2,%12;\"\n+        \"xor    %5,%10;\"\n+        \"ror    $0xb,%11;\"\n+        \"and    %5,%12;\"\n+        \"xor    %8,%11;\"\n+        \"ror    $0x6,%10;\"\n+        \"xor    %k2,%12;\"\n+        \"add    %10,%12;\"\n+        \"ror    $0x2,%11;\"\n+        \"add    8+%16,%12;\"\n+        \"mov    %8,%10;\"\n+        \"add    %12,%7;\"\n+        \"mov    %8,%12;\"\n+        \"or     %3,%10;\"\n+        \"add    %7,%4;\"\n+        \"and    %3,%12;\"\n+        \"and    %9,%10;\"\n+        \"add    %11,%7;\"\n+        \"or     %12,%10;\"\n+        \"add    %10,%7;\"\n+        \"mov    %4,%10;\"\n+        \"ror    $0xe,%10;\"\n+        \"mov    %7,%11;\"\n+        \"xor    %4,%10;\"\n+        \"ror    $0x9,%11;\"\n+        \"mov    %5,%12;\"\n+        \"xor    %7,%11;\"\n+        \"ror    $0x5,%10;\"\n+        \"xor    %6,%12;\"\n+        \"xor    %4,%10;\"\n+        \"ror    $0xb,%11;\"\n+        \"and    %4,%12;\"\n+        \"xor    %7,%11;\"\n+        \"ror    $0x6,%10;\"\n+        \"xor    %6,%12;\"\n+        \"add    %10,%12;\"\n+        \"ror    $0x2,%11;\"\n+        \"add    12+%16,%12;\"\n+        \"mov    %7,%10;\"\n+        \"add    %12,%k2;\"\n+        \"mov    %7,%12;\"\n+        \"or     %9,%10;\"\n+        \"add    %k2,%3;\"\n+        \"and    %9,%12;\"\n+        \"and    %8,%10;\"\n+        \"add    %11,%k2;\"\n+        \"or     %12,%10;\"\n+        \"add    %10,%k2;\"\n+        \"paddd  0x10(%13),%%xmm5;\"\n+        \"movdqa %%xmm5,%16;\"\n+        \"add    $0x20,%13;\"\n+        \"mov    %3,%10;\"\n+        \"ror    $0xe,%10;\"\n+        \"mov    %k2,%11;\"\n+        \"xor    %3,%10;\"\n+        \"ror    $0x9,%11;\"\n+        \"mov    %4,%12;\"\n+        \"xor    %k2,%11;\"\n+        \"ror    $0x5,%10;\"\n+        \"xor    %5,%12;\"\n+        \"xor    %3,%10;\"\n+        \"ror    $0xb,%11;\"\n+        \"and    %3,%12;\"\n+        \"xor    %k2,%11;\"\n+        \"ror    $0x6,%10;\"\n+        \"xor    %5,%12;\"\n+        \"add    %10,%12;\"\n+        \"ror    $0x2,%11;\"\n+        \"add    %16,%12;\"\n+        \"mov    %k2,%10;\"\n+        \"add    %12,%6;\"\n+        \"mov    %k2,%12;\"\n+        \"or     %8,%10;\"\n+        \"add    %6,%9;\"\n+        \"and    %8,%12;\"\n+        \"and    %7,%10;\"\n+        \"add    %11,%6;\"\n+        \"or     %12,%10;\"\n+        \"add    %10,%6;\"\n+        \"mov    %9,%10;\"\n+        \"ror    $0xe,%10;\"\n+        \"mov    %6,%11;\"\n+        \"xor    %9,%10;\"\n+        \"ror    $0x9,%11;\"\n+        \"mov    %3,%12;\"\n+        \"xor    %6,%11;\"\n+        \"ror    $0x5,%10;\"\n+        \"xor    %4,%12;\"\n+        \"xor    %9,%10;\"\n+        \"ror    $0xb,%11;\"\n+        \"and    %9,%12;\"\n+        \"xor    %6,%11;\"\n+        \"ror    $0x6,%10;\"\n+        \"xor    %4,%12;\"\n+        \"add    %10,%12;\"\n+        \"ror    $0x2,%11;\"\n+        \"add    4+%16,%12;\"\n+        \"mov    %6,%10;\"\n+        \"add    %12,%5;\"\n+        \"mov    %6,%12;\"\n+        \"or     %7,%10;\"\n+        \"add    %5,%8;\"\n+        \"and    %7,%12;\"\n+        \"and    %k2,%10;\"\n+        \"add    %11,%5;\"\n+        \"or     %12,%10;\"\n+        \"add    %10,%5;\"\n+        \"mov    %8,%10;\"\n+        \"ror    $0xe,%10;\"\n+        \"mov    %5,%11;\"\n+        \"xor    %8,%10;\"\n+        \"ror    $0x9,%11;\"\n+        \"mov    %9,%12;\"\n+        \"xor    %5,%11;\"\n+        \"ror    $0x5,%10;\"\n+        \"xor    %3,%12;\"\n+        \"xor    %8,%10;\"\n+        \"ror    $0xb,%11;\"\n+        \"and    %8,%12;\"\n+        \"xor    %5,%11;\"\n+        \"ror    $0x6,%10;\"\n+        \"xor    %3,%12;\"\n+        \"add    %10,%12;\"\n+        \"ror    $0x2,%11;\"\n+        \"add    8+%16,%12;\"\n+        \"mov    %5,%10;\"\n+        \"add    %12,%4;\"\n+        \"mov    %5,%12;\"\n+        \"or     %k2,%10;\"\n+        \"add    %4,%7;\"\n+        \"and    %k2,%12;\"\n+        \"and    %6,%10;\"\n+        \"add    %11,%4;\"\n+        \"or     %12,%10;\"\n+        \"add    %10,%4;\"\n+        \"mov    %7,%10;\"\n+        \"ror    $0xe,%10;\"\n+        \"mov    %4,%11;\"\n+        \"xor    %7,%10;\"\n+        \"ror    $0x9,%11;\"\n+        \"mov    %8,%12;\"\n+        \"xor    %4,%11;\"\n+        \"ror    $0x5,%10;\"\n+        \"xor    %9,%12;\"\n+        \"xor    %7,%10;\"\n+        \"ror    $0xb,%11;\"\n+        \"and    %7,%12;\"\n+        \"xor    %4,%11;\"\n+        \"ror    $0x6,%10;\"\n+        \"xor    %9,%12;\"\n+        \"add    %10,%12;\"\n+        \"ror    $0x2,%11;\"\n+        \"add    12+%16,%12;\"\n+        \"mov    %4,%10;\"\n+        \"add    %12,%3;\"\n+        \"mov    %4,%12;\"\n+        \"or     %6,%10;\"\n+        \"add    %3,%k2;\"\n+        \"and    %6,%12;\"\n+        \"and    %5,%10;\"\n+        \"add    %11,%3;\"\n+        \"or     %12,%10;\"\n+        \"add    %10,%3;\"\n+        \"movdqa %%xmm6,%%xmm4;\"\n+        \"movdqa %%xmm7,%%xmm5;\"\n+        \"sub    $0x1,%1;\"\n+        \"jne    Lloop2_%=;\"\n+        \"add    (%0),%3;\"\n+        \"mov    %3,(%0);\"\n+        \"add    0x4(%0),%4;\"\n+        \"mov    %4,0x4(%0);\"\n+        \"add    0x8(%0),%5;\"\n+        \"mov    %5,0x8(%0);\"\n+        \"add    0xc(%0),%6;\"\n+        \"mov    %6,0xc(%0);\"\n+        \"add    0x10(%0),%k2;\"\n+        \"mov    %k2,0x10(%0);\"\n+        \"add    0x14(%0),%7;\"\n+        \"mov    %7,0x14(%0);\"\n+        \"add    0x18(%0),%8;\"\n+        \"mov    %8,0x18(%0);\"\n+        \"add    0x1c(%0),%9;\"\n+        \"mov    %9,0x1c(%0);\"\n+        \"mov    %15,%1;\"\n+        \"add    $0x40,%1;\"\n+        \"cmp    %14,%1;\"\n+        \"jne    Lloop0_%=;\"\n+\n+        \"Ldone_hash_%=:\"\n+\n+        : \"+r\"(s), \"+r\"(chunk), \"+r\"(blocks), \"=r\"(a), \"=r\"(b), \"=r\"(c), \"=r\"(d), /* e = chunk */ \"=r\"(f), \"=r\"(g), \"=r\"(h), \"=r\"(y0), \"=r\"(y1), \"=r\"(y2), \"=r\"(tbl), \"+m\"(inp_end), \"+m\"(inp), \"+m\"(xfer)\n+        : \"m\"(K256), \"m\"(FLIP_MASK), \"m\"(SHUF_00BA), \"m\"(SHUF_DC00)\n+        : \"cc\", \"memory\", \"xmm0\", \"xmm1\", \"xmm2\", \"xmm3\", \"xmm4\", \"xmm5\", \"xmm6\", \"xmm7\", \"xmm8\", \"xmm9\", \"xmm10\", \"xmm11\", \"xmm12\"\n+   );\n+}\n+}\n+\n+/*\n+;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n+; Copyright (c) 2012, Intel Corporation \n+; \n+; All rights reserved. \n+; \n+; Redistribution and use in source and binary forms, with or without\n+; modification, are permitted provided that the following conditions are\n+; met: \n+; \n+; * Redistributions of source code must retain the above copyright\n+;   notice, this list of conditions and the following disclaimer.  \n+; \n+; * Redistributions in binary form must reproduce the above copyright\n+;   notice, this list of conditions and the following disclaimer in the\n+;   documentation and/or other materials provided with the\n+;   distribution. \n+; \n+; * Neither the name of the Intel Corporation nor the names of its\n+;   contributors may be used to endorse or promote products derived from\n+;   this software without specific prior written permission. \n+; \n+; \n+; THIS SOFTWARE IS PROVIDED BY INTEL CORPORATION \"AS IS\" AND ANY\n+; EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+; IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n+; PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL INTEL CORPORATION OR\n+; CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n+; EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n+; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n+; PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n+; LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n+; NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+; SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n+;\n+; Example YASM command lines:\n+; Windows:  yasm -Xvc -f x64 -rnasm -pnasm -o sha256_sse4.obj -g cv8 sha256_sse4.asm\n+; Linux:    yasm -f x64 -f elf64 -X gnu -g dwarf2 -D LINUX -o sha256_sse4.o sha256_sse4.asm\n+;\n+;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n+;\n+; This code is described in an Intel White-Paper:\n+; \"Fast SHA-256 Implementations on Intel Architecture Processors\"\n+;\n+; To find it, surf to http://www.intel.com/p/en_US/embedded \n+; and search for that title.\n+; The paper is expected to be released roughly at the end of April, 2012\n+;\n+;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n+; This code schedules 1 blocks at a time, with 4 lanes per block\n+;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n+\n+%define\tMOVDQ movdqu ;; assume buffers not aligned \n+\n+;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; Define Macros\n+\n+; addm [mem], reg\n+; Add reg to mem using reg-mem add and store\n+%macro addm 2\n+    add\t%2, %1\n+    mov\t%1, %2\n+%endm\n+\n+;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n+\n+; COPY_XMM_AND_BSWAP xmm, [mem], byte_flip_mask\n+; Load xmm with mem and byte swap each dword\n+%macro COPY_XMM_AND_BSWAP 3\n+    MOVDQ %1, %2\n+    pshufb %1, %3\n+%endmacro\n+\n+;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n+\n+%define X0 xmm4\n+%define X1 xmm5\n+%define X2 xmm6\n+%define X3 xmm7\n+\n+%define XTMP0 xmm0\n+%define XTMP1 xmm1\n+%define XTMP2 xmm2\n+%define XTMP3 xmm3\n+%define XTMP4 xmm8\n+%define XFER  xmm9\n+\n+%define SHUF_00BA\txmm10 ; shuffle xBxA -> 00BA\n+%define SHUF_DC00\txmm11 ; shuffle xDxC -> DC00\n+%define BYTE_FLIP_MASK\txmm12\n+    \n+%ifdef LINUX\n+%define NUM_BLKS rdx\t; 3rd arg\n+%define CTX\trsi\t; 2nd arg\n+%define INP\trdi\t; 1st arg\n+\n+%define SRND\trdi\t; clobbers INP\n+%define c\tecx\n+%define d \tr8d\n+%define e \tedx\n+%else\n+%define NUM_BLKS r8\t; 3rd arg\n+%define CTX\trdx \t; 2nd arg\n+%define INP\trcx \t; 1st arg\n+\n+%define SRND\trcx\t; clobbers INP\n+%define c \tedi \n+%define d\tesi \n+%define e \tr8d\n+    \n+%endif\n+%define TBL\trbp\n+%define a eax\n+%define b ebx\n+\n+%define f r9d\n+%define g r10d\n+%define h r11d\n+\n+%define y0 r13d\n+%define y1 r14d\n+%define y2 r15d\n+\n+\n+\n+_INP_END_SIZE\tequ 8\n+_INP_SIZE\tequ 8\n+_XFER_SIZE\tequ 8\n+%ifdef LINUX\n+_XMM_SAVE_SIZE\tequ 0\n+%else\n+_XMM_SAVE_SIZE\tequ 7*16\n+%endif\n+; STACK_SIZE plus pushes must be an odd multiple of 8\n+_ALIGN_SIZE\tequ 8\n+\n+_INP_END\tequ 0\n+_INP\t\tequ _INP_END  + _INP_END_SIZE\n+_XFER\t\tequ _INP      + _INP_SIZE\n+_XMM_SAVE\tequ _XFER     + _XFER_SIZE + _ALIGN_SIZE\n+STACK_SIZE\tequ _XMM_SAVE + _XMM_SAVE_SIZE\n+\n+; rotate_Xs\n+; Rotate values of symbols X0...X3\n+%macro rotate_Xs 0\n+%xdefine X_ X0\n+%xdefine X0 X1\n+%xdefine X1 X2\n+%xdefine X2 X3\n+%xdefine X3 X_\n+%endm\n+\n+; ROTATE_ARGS\n+; Rotate values of symbols a...h\n+%macro ROTATE_ARGS 0\n+%xdefine TMP_ h\n+%xdefine h g\n+%xdefine g f\n+%xdefine f e\n+%xdefine e d\n+%xdefine d c\n+%xdefine c b\n+%xdefine b a\n+%xdefine a TMP_\n+%endm\n+\n+%macro FOUR_ROUNDS_AND_SCHED 0\n+\t;; compute s0 four at a time and s1 two at a time\n+\t;; compute W[-16] + W[-7] 4 at a time\n+\tmovdqa\tXTMP0, X3\n+    mov\ty0, e\t\t; y0 = e\n+    ror\ty0, (25-11)\t; y0 = e >> (25-11)\n+    mov\ty1, a\t\t; y1 = a\n+\tpalignr\tXTMP0, X2, 4\t; XTMP0 = W[-7]\n+    ror\ty1, (22-13)\t; y1 = a >> (22-13)\n+    xor\ty0, e\t\t; y0 = e ^ (e >> (25-11))\n+    mov\ty2, f\t\t; y2 = f\n+    ror\ty0, (11-6)\t; y0 = (e >> (11-6)) ^ (e >> (25-6))\n+\tmovdqa\tXTMP1, X1\n+    xor\ty1, a\t\t; y1 = a ^ (a >> (22-13)\n+    xor\ty2, g\t\t; y2 = f^g\n+\tpaddd\tXTMP0, X0\t; XTMP0 = W[-7] + W[-16]\n+    xor\ty0, e\t\t; y0 = e ^ (e >> (11-6)) ^ (e >> (25-6))\n+    and\ty2, e\t\t; y2 = (f^g)&e\n+    ror\ty1, (13-2)\t; y1 = (a >> (13-2)) ^ (a >> (22-2))\n+\t;; compute s0\n+\tpalignr\tXTMP1, X0, 4\t; XTMP1 = W[-15]\n+    xor\ty1, a\t\t; y1 = a ^ (a >> (13-2)) ^ (a >> (22-2))\n+    ror\ty0, 6\t\t; y0 = S1 = (e>>6) & (e>>11) ^ (e>>25)\n+    xor\ty2, g\t\t; y2 = CH = ((f^g)&e)^g\n+\tmovdqa\tXTMP2, XTMP1\t; XTMP2 = W[-15]\n+    ror\ty1, 2\t\t; y1 = S0 = (a>>2) ^ (a>>13) ^ (a>>22)\n+    add\ty2, y0\t\t; y2 = S1 + CH\n+    add\ty2, [rsp + _XFER + 0*4]\t; y2 = k + w + S1 + CH\n+\tmovdqa\tXTMP3, XTMP1\t; XTMP3 = W[-15]\n+    mov\ty0, a\t\t; y0 = a\n+    add\th, y2\t\t; h = h + S1 + CH + k + w\n+    mov\ty2, a\t\t; y2 = a\n+\tpslld\tXTMP1, (32-7)\n+    or\ty0, c\t\t; y0 = a|c\n+    add\td, h\t\t; d = d + h + S1 + CH + k + w\n+    and\ty2, c\t\t; y2 = a&c\n+\tpsrld\tXTMP2, 7\n+    and\ty0, b\t\t; y0 = (a|c)&b\n+    add\th, y1\t\t; h = h + S1 + CH + k + w + S0\n+\tpor\tXTMP1, XTMP2\t; XTMP1 = W[-15] ror 7\n+    or\ty0, y2\t\t; y0 = MAJ = (a|c)&b)|(a&c)\n+    add\th, y0\t\t; h = h + S1 + CH + k + w + S0 + MAJ\n+\n+ROTATE_ARGS\n+\tmovdqa\tXTMP2, XTMP3\t; XTMP2 = W[-15]\n+    mov\ty0, e\t\t; y0 = e\n+    mov\ty1, a\t\t; y1 = a\n+\tmovdqa\tXTMP4, XTMP3\t; XTMP4 = W[-15]\n+    ror\ty0, (25-11)\t; y0 = e >> (25-11)\n+    xor\ty0, e\t\t; y0 = e ^ (e >> (25-11))\n+    mov\ty2, f\t\t; y2 = f\n+    ror\ty1, (22-13)\t; y1 = a >> (22-13)\n+\tpslld\tXTMP3, (32-18)\n+    xor\ty1, a\t\t; y1 = a ^ (a >> (22-13)\n+    ror\ty0, (11-6)\t; y0 = (e >> (11-6)) ^ (e >> (25-6))\n+    xor\ty2, g\t\t; y2 = f^g\n+\tpsrld\tXTMP2, 18\n+    ror\ty1, (13-2)\t; y1 = (a >> (13-2)) ^ (a >> (22-2))\n+    xor\ty0, e\t\t; y0 = e ^ (e >> (11-6)) ^ (e >> (25-6))\n+    and\ty2, e\t\t; y2 = (f^g)&e\n+    ror\ty0, 6\t\t; y0 = S1 = (e>>6) & (e>>11) ^ (e>>25)\n+\tpxor\tXTMP1, XTMP3\n+    xor\ty1, a\t\t; y1 = a ^ (a >> (13-2)) ^ (a >> (22-2))\n+    xor\ty2, g\t\t; y2 = CH = ((f^g)&e)^g\n+\tpsrld\tXTMP4, 3\t; XTMP4 = W[-15] >> 3\n+    add\ty2, y0\t\t; y2 = S1 + CH\n+    add\ty2, [rsp + _XFER + 1*4]\t; y2 = k + w + S1 + CH\n+    ror\ty1, 2\t\t; y1 = S0 = (a>>2) ^ (a>>13) ^ (a>>22)\n+\tpxor\tXTMP1, XTMP2\t; XTMP1 = W[-15] ror 7 ^ W[-15] ror 18\n+    mov\ty0, a\t\t; y0 = a\n+    add\th, y2\t\t; h = h + S1 + CH + k + w\n+    mov\ty2, a\t\t; y2 = a\n+\tpxor\tXTMP1, XTMP4\t; XTMP1 = s0\n+    or\ty0, c\t\t; y0 = a|c\n+    add\td, h\t\t; d = d + h + S1 + CH + k + w\n+    and\ty2, c\t\t; y2 = a&c\n+\t;; compute low s1\n+\tpshufd\tXTMP2, X3, 11111010b\t; XTMP2 = W[-2] {BBAA}\n+    and\ty0, b\t\t; y0 = (a|c)&b\n+    add\th, y1\t\t; h = h + S1 + CH + k + w + S0\n+\tpaddd\tXTMP0, XTMP1\t; XTMP0 = W[-16] + W[-7] + s0\n+    or\ty0, y2\t\t; y0 = MAJ = (a|c)&b)|(a&c)\n+    add\th, y0\t\t; h = h + S1 + CH + k + w + S0 + MAJ\n+\n+ROTATE_ARGS\n+\tmovdqa\tXTMP3, XTMP2\t; XTMP3 = W[-2] {BBAA}\n+    mov\ty0, e\t\t; y0 = e\n+    mov\ty1, a\t\t; y1 = a\n+    ror\ty0, (25-11)\t; y0 = e >> (25-11)\n+\tmovdqa\tXTMP4, XTMP2\t; XTMP4 = W[-2] {BBAA}\n+    xor\ty0, e\t\t; y0 = e ^ (e >> (25-11))\n+    ror\ty1, (22-13)\t; y1 = a >> (22-13)\n+    mov\ty2, f\t\t; y2 = f\n+    xor\ty1, a\t\t; y1 = a ^ (a >> (22-13)\n+    ror\ty0, (11-6)\t; y0 = (e >> (11-6)) ^ (e >> (25-6))\n+\tpsrlq\tXTMP2, 17\t; XTMP2 = W[-2] ror 17 {xBxA}\n+    xor\ty2, g\t\t; y2 = f^g\n+\tpsrlq\tXTMP3, 19\t; XTMP3 = W[-2] ror 19 {xBxA}\n+    xor\ty0, e\t\t; y0 = e ^ (e >> (11-6)) ^ (e >> (25-6))\n+    and\ty2, e\t\t; y2 = (f^g)&e\n+\tpsrld\tXTMP4, 10\t; XTMP4 = W[-2] >> 10 {BBAA}\n+    ror\ty1, (13-2)\t; y1 = (a >> (13-2)) ^ (a >> (22-2))\n+    xor\ty1, a\t\t; y1 = a ^ (a >> (13-2)) ^ (a >> (22-2))\n+    xor\ty2, g\t\t; y2 = CH = ((f^g)&e)^g\n+    ror\ty0, 6\t\t; y0 = S1 = (e>>6) & (e>>11) ^ (e>>25)\n+\tpxor\tXTMP2, XTMP3\n+    add\ty2, y0\t\t; y2 = S1 + CH\n+    ror\ty1, 2\t\t; y1 = S0 = (a>>2) ^ (a>>13) ^ (a>>22)\n+    add\ty2, [rsp + _XFER + 2*4]\t; y2 = k + w + S1 + CH\n+\tpxor\tXTMP4, XTMP2\t; XTMP4 = s1 {xBxA}\n+    mov\ty0, a\t\t; y0 = a\n+    add\th, y2\t\t; h = h + S1 + CH + k + w\n+    mov\ty2, a\t\t; y2 = a\n+\tpshufb\tXTMP4, SHUF_00BA\t; XTMP4 = s1 {00BA}\n+    or\ty0, c\t\t; y0 = a|c\n+    add\td, h\t\t; d = d + h + S1 + CH + k + w\n+    and\ty2, c\t\t; y2 = a&c\n+\tpaddd\tXTMP0, XTMP4\t; XTMP0 = {..., ..., W[1], W[0]}\n+    and\ty0, b\t\t; y0 = (a|c)&b\n+    add\th, y1\t\t; h = h + S1 + CH + k + w + S0\n+\t;; compute high s1\n+\tpshufd\tXTMP2, XTMP0, 01010000b\t; XTMP2 = W[-2] {DDCC}\n+    or\ty0, y2\t\t; y0 = MAJ = (a|c)&b)|(a&c)\n+    add\th, y0\t\t; h = h + S1 + CH + k + w + S0 + MAJ\n+\n+ROTATE_ARGS\n+\tmovdqa\tXTMP3, XTMP2\t; XTMP3 = W[-2] {DDCC}\n+    mov\ty0, e\t\t; y0 = e\n+    ror\ty0, (25-11)\t; y0 = e >> (25-11)\n+    mov\ty1, a\t\t; y1 = a\n+\tmovdqa\tX0,    XTMP2\t; X0    = W[-2] {DDCC}\n+    ror\ty1, (22-13)\t; y1 = a >> (22-13)\n+    xor\ty0, e\t\t; y0 = e ^ (e >> (25-11))\n+    mov\ty2, f\t\t; y2 = f\n+    ror\ty0, (11-6)\t; y0 = (e >> (11-6)) ^ (e >> (25-6))\n+\tpsrlq\tXTMP2, 17\t; XTMP2 = W[-2] ror 17 {xDxC}\n+    xor\ty1, a\t\t; y1 = a ^ (a >> (22-13)\n+    xor\ty2, g\t\t; y2 = f^g\n+\tpsrlq\tXTMP3, 19\t; XTMP3 = W[-2] ror 19 {xDxC}\n+    xor\ty0, e\t\t; y0 = e ^ (e >> (11-6)) ^ (e >> (25-6))\n+    and\ty2, e\t\t; y2 = (f^g)&e\n+    ror\ty1, (13-2)\t; y1 = (a >> (13-2)) ^ (a >> (22-2))\n+\tpsrld\tX0,    10\t; X0 = W[-2] >> 10 {DDCC}\n+    xor\ty1, a\t\t; y1 = a ^ (a >> (13-2)) ^ (a >> (22-2))\n+    ror\ty0, 6\t\t; y0 = S1 = (e>>6) & (e>>11) ^ (e>>25)\n+    xor\ty2, g\t\t; y2 = CH = ((f^g)&e)^g\n+\tpxor\tXTMP2, XTMP3\n+    ror\ty1, 2\t\t; y1 = S0 = (a>>2) ^ (a>>13) ^ (a>>22)\n+    add\ty2, y0\t\t; y2 = S1 + CH\n+    add\ty2, [rsp + _XFER + 3*4]\t; y2 = k + w + S1 + CH\n+\tpxor\tX0, XTMP2\t; X0 = s1 {xDxC}\n+    mov\ty0, a\t\t; y0 = a\n+    add\th, y2\t\t; h = h + S1 + CH + k + w\n+    mov\ty2, a\t\t; y2 = a\n+\tpshufb\tX0, SHUF_DC00\t; X0 = s1 {DC00}\n+    or\ty0, c\t\t; y0 = a|c\n+    add\td, h\t\t; d = d + h + S1 + CH + k + w\n+    and\ty2, c\t\t; y2 = a&c\n+\tpaddd\tX0, XTMP0\t; X0 = {W[3], W[2], W[1], W[0]}\n+    and\ty0, b\t\t; y0 = (a|c)&b\n+    add\th, y1\t\t; h = h + S1 + CH + k + w + S0\n+    or\ty0, y2\t\t; y0 = MAJ = (a|c)&b)|(a&c)\n+    add\th, y0\t\t; h = h + S1 + CH + k + w + S0 + MAJ\n+\n+ROTATE_ARGS\n+rotate_Xs\n+%endm\n+\n+;; input is [rsp + _XFER + %1 * 4]\n+%macro DO_ROUND 1\n+    mov\ty0, e\t\t; y0 = e\n+    ror\ty0, (25-11)\t; y0 = e >> (25-11)\n+    mov\ty1, a\t\t; y1 = a\n+    xor\ty0, e\t\t; y0 = e ^ (e >> (25-11))\n+    ror\ty1, (22-13)\t; y1 = a >> (22-13)\n+    mov\ty2, f\t\t; y2 = f\n+    xor\ty1, a\t\t; y1 = a ^ (a >> (22-13)\n+    ror\ty0, (11-6)\t; y0 = (e >> (11-6)) ^ (e >> (25-6))\n+    xor\ty2, g\t\t; y2 = f^g\n+    xor\ty0, e\t\t; y0 = e ^ (e >> (11-6)) ^ (e >> (25-6))\n+    ror\ty1, (13-2)\t; y1 = (a >> (13-2)) ^ (a >> (22-2))\n+    and\ty2, e\t\t; y2 = (f^g)&e\n+    xor\ty1, a\t\t; y1 = a ^ (a >> (13-2)) ^ (a >> (22-2))\n+    ror\ty0, 6\t\t; y0 = S1 = (e>>6) & (e>>11) ^ (e>>25)\n+    xor\ty2, g\t\t; y2 = CH = ((f^g)&e)^g\n+    add\ty2, y0\t\t; y2 = S1 + CH\n+    ror\ty1, 2\t\t; y1 = S0 = (a>>2) ^ (a>>13) ^ (a>>22)\n+    add\ty2, [rsp + _XFER + %1 * 4]\t; y2 = k + w + S1 + CH\n+    mov\ty0, a\t\t; y0 = a\n+    add\th, y2\t\t; h = h + S1 + CH + k + w\n+    mov\ty2, a\t\t; y2 = a\n+    or\ty0, c\t\t; y0 = a|c\n+    add\td, h\t\t; d = d + h + S1 + CH + k + w\n+    and\ty2, c\t\t; y2 = a&c\n+    and\ty0, b\t\t; y0 = (a|c)&b\n+    add\th, y1\t\t; h = h + S1 + CH + k + w + S0\n+    or\ty0, y2\t\t; y0 = MAJ = (a|c)&b)|(a&c)\n+    add\th, y0\t\t; h = h + S1 + CH + k + w + S0 + MAJ\n+    ROTATE_ARGS\n+%endm\n+\n+;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n+;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n+;; void sha256_sse4(void *input_data, UINT32 digest[8], UINT64 num_blks)\n+;; arg 1 : pointer to input data\n+;; arg 2 : pointer to digest\n+;; arg 3 : Num blocks\n+section .text\n+global sha256_sse4\n+align 32\n+sha256_sse4:\n+    push\trbx\n+%ifndef LINUX\n+    push\trsi\n+    push\trdi\n+%endif\n+    push\trbp\n+    push\tr13\n+    push\tr14\n+    push\tr15\n+\n+    sub\trsp,STACK_SIZE\n+%ifndef LINUX\n+    movdqa\t[rsp + _XMM_SAVE + 0*16],xmm6\t\n+    movdqa\t[rsp + _XMM_SAVE + 1*16],xmm7\n+    movdqa\t[rsp + _XMM_SAVE + 2*16],xmm8\t\n+    movdqa\t[rsp + _XMM_SAVE + 3*16],xmm9\t\n+    movdqa\t[rsp + _XMM_SAVE + 4*16],xmm10\n+    movdqa\t[rsp + _XMM_SAVE + 5*16],xmm11\n+    movdqa\t[rsp + _XMM_SAVE + 6*16],xmm12\n+%endif\n+\n+    shl\tNUM_BLKS, 6\t; convert to bytes\n+    jz\tdone_hash\n+    add\tNUM_BLKS, INP\t; pointer to end of data\n+    mov\t[rsp + _INP_END], NUM_BLKS\n+\n+    ;; load initial digest\n+    mov\ta,[4*0 + CTX]\n+    mov\tb,[4*1 + CTX]\n+    mov\tc,[4*2 + CTX]\n+    mov\td,[4*3 + CTX]\n+    mov\te,[4*4 + CTX]\n+    mov\tf,[4*5 + CTX]\n+    mov\tg,[4*6 + CTX]\n+    mov\th,[4*7 + CTX]\n+\n+    movdqa\tBYTE_FLIP_MASK, [PSHUFFLE_BYTE_FLIP_MASK wrt rip]\n+    movdqa\tSHUF_00BA, [_SHUF_00BA wrt rip]\n+    movdqa\tSHUF_DC00, [_SHUF_DC00 wrt rip]\n+\n+loop0:\n+    lea\tTBL,[K256 wrt rip]\n+\n+    ;; byte swap first 16 dwords\n+    COPY_XMM_AND_BSWAP\tX0, [INP + 0*16], BYTE_FLIP_MASK\n+    COPY_XMM_AND_BSWAP\tX1, [INP + 1*16], BYTE_FLIP_MASK\n+    COPY_XMM_AND_BSWAP\tX2, [INP + 2*16], BYTE_FLIP_MASK\n+    COPY_XMM_AND_BSWAP\tX3, [INP + 3*16], BYTE_FLIP_MASK\n+    \n+    mov\t[rsp + _INP], INP\n+\n+    ;; schedule 48 input dwords, by doing 3 rounds of 16 each\n+    mov\tSRND, 3\n+align 16\n+loop1:\n+    movdqa\tXFER, [TBL + 0*16]\n+    paddd\tXFER, X0\n+    movdqa\t[rsp + _XFER], XFER\n+    FOUR_ROUNDS_AND_SCHED\n+\n+    movdqa\tXFER, [TBL + 1*16]\n+    paddd\tXFER, X0\n+    movdqa\t[rsp + _XFER], XFER\n+    FOUR_ROUNDS_AND_SCHED\n+\n+    movdqa\tXFER, [TBL + 2*16]\n+    paddd\tXFER, X0\n+    movdqa\t[rsp + _XFER], XFER\n+    FOUR_ROUNDS_AND_SCHED\n+\n+    movdqa\tXFER, [TBL + 3*16]\n+    paddd\tXFER, X0\n+    movdqa\t[rsp + _XFER], XFER\n+    add\tTBL, 4*16\n+    FOUR_ROUNDS_AND_SCHED\n+\n+    sub\tSRND, 1\n+    jne\tloop1\n+\n+    mov\tSRND, 2\n+loop2:\n+    paddd\tX0, [TBL + 0*16]\n+    movdqa\t[rsp + _XFER], X0\n+    DO_ROUND\t0\n+    DO_ROUND\t1\n+    DO_ROUND\t2\n+    DO_ROUND\t3\n+    paddd\tX1, [TBL + 1*16]\n+    movdqa\t[rsp + _XFER], X1\n+    add\tTBL, 2*16\n+    DO_ROUND\t0\n+    DO_ROUND\t1\n+    DO_ROUND\t2\n+    DO_ROUND\t3\n+\n+    movdqa\tX0, X2\n+    movdqa\tX1, X3\n+\n+    sub\tSRND, 1\n+    jne\tloop2\n+\n+    addm\t[4*0 + CTX],a\n+    addm\t[4*1 + CTX],b\n+    addm\t[4*2 + CTX],c\n+    addm\t[4*3 + CTX],d\n+    addm\t[4*4 + CTX],e\n+    addm\t[4*5 + CTX],f\n+    addm\t[4*6 + CTX],g\n+    addm\t[4*7 + CTX],h\n+\n+    mov\tINP, [rsp + _INP]\n+    add\tINP, 64\n+    cmp\tINP, [rsp + _INP_END]\n+    jne\tloop0\n+\n+done_hash:\n+%ifndef LINUX\n+    movdqa\txmm6,[rsp + _XMM_SAVE + 0*16]\n+    movdqa\txmm7,[rsp + _XMM_SAVE + 1*16]\n+    movdqa\txmm8,[rsp + _XMM_SAVE + 2*16]\n+    movdqa\txmm9,[rsp + _XMM_SAVE + 3*16]\n+    movdqa\txmm10,[rsp + _XMM_SAVE + 4*16]\n+    movdqa\txmm11,[rsp + _XMM_SAVE + 5*16]\n+    movdqa\txmm12,[rsp + _XMM_SAVE + 6*16]\n+%endif\n+\n+    add\trsp, STACK_SIZE\n+\n+    pop\tr15\n+    pop\tr14\n+    pop\tr13\n+    pop\trbp\n+%ifndef LINUX\n+    pop\trdi\n+    pop\trsi\n+%endif\n+    pop\trbx\n+\n+    ret\t\n+    \n+\n+section .data\n+align 64\n+K256:\n+    dd\t0x428a2f98,0x71374491,0xb5c0fbcf,0xe9b5dba5\n+    dd\t0x3956c25b,0x59f111f1,0x923f82a4,0xab1c5ed5\n+    dd\t0xd807aa98,0x12835b01,0x243185be,0x550c7dc3\n+    dd\t0x72be5d74,0x80deb1fe,0x9bdc06a7,0xc19bf174\n+    dd\t0xe49b69c1,0xefbe4786,0x0fc19dc6,0x240ca1cc\n+    dd\t0x2de92c6f,0x4a7484aa,0x5cb0a9dc,0x76f988da\n+    dd\t0x983e5152,0xa831c66d,0xb00327c8,0xbf597fc7\n+    dd\t0xc6e00bf3,0xd5a79147,0x06ca6351,0x14292967\n+    dd\t0x27b70a85,0x2e1b2138,0x4d2c6dfc,0x53380d13\n+    dd\t0x650a7354,0x766a0abb,0x81c2c92e,0x92722c85\n+    dd\t0xa2bfe8a1,0xa81a664b,0xc24b8b70,0xc76c51a3\n+    dd\t0xd192e819,0xd6990624,0xf40e3585,0x106aa070\n+    dd\t0x19a4c116,0x1e376c08,0x2748774c,0x34b0bcb5\n+    dd\t0x391c0cb3,0x4ed8aa4a,0x5b9cca4f,0x682e6ff3\n+    dd\t0x748f82ee,0x78a5636f,0x84c87814,0x8cc70208\n+    dd\t0x90befffa,0xa4506ceb,0xbef9a3f7,0xc67178f2\n+\n+PSHUFFLE_BYTE_FLIP_MASK: ddq 0x0c0d0e0f08090a0b0405060700010203\n+\n+; shuffle xBxA -> 00BA\n+_SHUF_00BA:              ddq 0xFFFFFFFFFFFFFFFF0b0a090803020100\n+\n+; shuffle xDxC -> DC00\n+_SHUF_DC00:              ddq 0x0b0a090803020100FFFFFFFFFFFFFFFF\n+*/\n+\n+#endif"
      },
      {
        "sha": "947e1a7185fb0ad992bb492c4eb2ffd0d60657d3",
        "filename": "src/cuckoocache.h",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/cuckoocache.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/cuckoocache.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/cuckoocache.h?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -2,8 +2,8 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#ifndef _BITCOIN_CUCKOOCACHE_H_\n-#define _BITCOIN_CUCKOOCACHE_H_\n+#ifndef BITCOIN_CUCKOOCACHE_H\n+#define BITCOIN_CUCKOOCACHE_H\n \n #include <array>\n #include <algorithm>\n@@ -58,7 +58,7 @@ class bit_packed_atomic_flags\n      * @post All calls to bit_is_set (without subsequent bit_unset) will return\n      * true.\n      */\n-    bit_packed_atomic_flags(uint32_t size)\n+    explicit bit_packed_atomic_flags(uint32_t size)\n     {\n         // pad out the size if needed\n         size = (size + 7) / 8;\n@@ -478,4 +478,4 @@ class cache\n };\n } // namespace CuckooCache\n \n-#endif\n+#endif // BITCOIN_CUCKOOCACHE_H"
      },
      {
        "sha": "dfc90f3ab9d863e925cba9d7e7b1df5daa76b886",
        "filename": "src/dbwrapper.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 8,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/dbwrapper.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/dbwrapper.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/dbwrapper.cpp?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -19,7 +19,7 @@ class CBitcoinLevelDBLogger : public leveldb::Logger {\n public:\n     // This code is adapted from posix_logger.h, which is why it is using vsprintf.\n     // Please do not do this in normal code\n-    virtual void Logv(const char * format, va_list ap) override {\n+    void Logv(const char * format, va_list ap) override {\n             if (!LogAcceptCategory(BCLog::LEVELDB)) {\n                 return;\n             }\n@@ -92,7 +92,7 @@ static leveldb::Options GetOptions(size_t nCacheSize)\n \n CDBWrapper::CDBWrapper(const fs::path& path, size_t nCacheSize, bool fMemory, bool fWipe, bool obfuscate)\n {\n-    penv = NULL;\n+    penv = nullptr;\n     readoptions.verify_checksums = true;\n     iteroptions.verify_checksums = true;\n     iteroptions.fill_cache = false;\n@@ -115,6 +115,12 @@ CDBWrapper::CDBWrapper(const fs::path& path, size_t nCacheSize, bool fMemory, bo\n     dbwrapper_private::HandleError(status);\n     LogPrintf(\"Opened LevelDB successfully\\n\");\n \n+    if (gArgs.GetBoolArg(\"-forcecompactdb\", false)) {\n+        LogPrintf(\"Starting database compaction of %s\\n\", path.string());\n+        pdb->CompactRange(nullptr, nullptr);\n+        LogPrintf(\"Finished database compaction of %s\\n\", path.string());\n+    }\n+\n     // The base-case obfuscation key, which is a noop.\n     obfuscate_key = std::vector<unsigned char>(OBFUSCATE_KEY_NUM_BYTES, '\\000');\n \n@@ -138,15 +144,15 @@ CDBWrapper::CDBWrapper(const fs::path& path, size_t nCacheSize, bool fMemory, bo\n CDBWrapper::~CDBWrapper()\n {\n     delete pdb;\n-    pdb = NULL;\n+    pdb = nullptr;\n     delete options.filter_policy;\n-    options.filter_policy = NULL;\n+    options.filter_policy = nullptr;\n     delete options.info_log;\n-    options.info_log = NULL;\n+    options.info_log = nullptr;\n     delete options.block_cache;\n-    options.block_cache = NULL;\n+    options.block_cache = nullptr;\n     delete penv;\n-    options.env = NULL;\n+    options.env = nullptr;\n }\n \n bool CDBWrapper::WriteBatch(CDBBatch& batch, bool fSync)\n@@ -184,7 +190,7 @@ bool CDBWrapper::IsEmpty()\n }\n \n CDBIterator::~CDBIterator() { delete piter; }\n-bool CDBIterator::Valid() { return piter->Valid(); }\n+bool CDBIterator::Valid() const { return piter->Valid(); }\n void CDBIterator::SeekToFirst() { piter->SeekToFirst(); }\n void CDBIterator::Next() { piter->Next(); }\n "
      },
      {
        "sha": "e19fde51c1dc5dabbebd2a1727026f9e08f830d2",
        "filename": "src/dbwrapper.h",
        "status": "modified",
        "additions": 21,
        "deletions": 4,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/dbwrapper.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/dbwrapper.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/dbwrapper.h?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -22,7 +22,7 @@ static const size_t DBWRAPPER_PREALLOC_VALUE_SIZE = 1024;\n class dbwrapper_error : public std::runtime_error\n {\n public:\n-    dbwrapper_error(const std::string& msg) : std::runtime_error(msg) {}\n+    explicit dbwrapper_error(const std::string& msg) : std::runtime_error(msg) {}\n };\n \n class CDBWrapper;\n@@ -61,7 +61,7 @@ class CDBBatch\n     /**\n      * @param[in] _parent   CDBWrapper that this batch is to be submitted to\n      */\n-    CDBBatch(const CDBWrapper &_parent) : parent(_parent), ssKey(SER_DISK, CLIENT_VERSION), ssValue(SER_DISK, CLIENT_VERSION), size_estimate(0) { };\n+    explicit CDBBatch(const CDBWrapper &_parent) : parent(_parent), ssKey(SER_DISK, CLIENT_VERSION), ssValue(SER_DISK, CLIENT_VERSION), size_estimate(0) { };\n \n     void Clear()\n     {\n@@ -130,7 +130,7 @@ class CDBIterator\n         parent(_parent), piter(_piter) { };\n     ~CDBIterator();\n \n-    bool Valid();\n+    bool Valid() const;\n \n     void SeekToFirst();\n \n@@ -177,7 +177,7 @@ class CDBWrapper\n {\n     friend const std::vector<unsigned char>& dbwrapper_private::GetObfuscateKey(const CDBWrapper &w);\n private:\n-    //! custom environment this database is using (may be NULL in case of default environment)\n+    //! custom environment this database is using (may be nullptr in case of default environment)\n     leveldb::Env* penv;\n \n     //! database options used\n@@ -321,6 +321,23 @@ class CDBWrapper\n         pdb->GetApproximateSizes(&range, 1, &size);\n         return size;\n     }\n+\n+    /**\n+     * Compact a certain range of keys in the database.\n+     */\n+    template<typename K>\n+    void CompactRange(const K& key_begin, const K& key_end) const\n+    {\n+        CDataStream ssKey1(SER_DISK, CLIENT_VERSION), ssKey2(SER_DISK, CLIENT_VERSION);\n+        ssKey1.reserve(DBWRAPPER_PREALLOC_KEY_SIZE);\n+        ssKey2.reserve(DBWRAPPER_PREALLOC_KEY_SIZE);\n+        ssKey1 << key_begin;\n+        ssKey2 << key_end;\n+        leveldb::Slice slKey1(ssKey1.data(), ssKey1.size());\n+        leveldb::Slice slKey2(ssKey2.data(), ssKey2.size());\n+        pdb->CompactRange(&slKey1, &slKey2);\n+    }\n+\n };\n \n #endif // BITCOIN_DBWRAPPER_H"
      },
      {
        "sha": "474b13d65b50b444d89a5b9beafb71f39870ac6d",
        "filename": "src/hash.h",
        "status": "modified",
        "additions": 1,
        "deletions": 15,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/hash.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/hash.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/hash.h?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -88,20 +88,6 @@ inline uint256 Hash(const T1 p1begin, const T1 p1end,\n     return result;\n }\n \n-/** Compute the 256-bit hash of the concatenation of three objects. */\n-template<typename T1, typename T2, typename T3>\n-inline uint256 Hash(const T1 p1begin, const T1 p1end,\n-                    const T2 p2begin, const T2 p2end,\n-                    const T3 p3begin, const T3 p3end) {\n-    static const unsigned char pblank[1] = {};\n-    uint256 result;\n-    CHash256().Write(p1begin == p1end ? pblank : (const unsigned char*)&p1begin[0], (p1end - p1begin) * sizeof(p1begin[0]))\n-              .Write(p2begin == p2end ? pblank : (const unsigned char*)&p2begin[0], (p2end - p2begin) * sizeof(p2begin[0]))\n-              .Write(p3begin == p3end ? pblank : (const unsigned char*)&p3begin[0], (p3end - p3begin) * sizeof(p3begin[0]))\n-              .Finalize((unsigned char*)&result);\n-    return result;\n-}\n-\n /** Compute the 160-bit hash an object. */\n template<typename T1>\n inline uint160 Hash160(const T1 pbegin, const T1 pend)\n@@ -168,7 +154,7 @@ class CHashVerifier : public CHashWriter\n     Source* source;\n \n public:\n-    CHashVerifier(Source* source_) : CHashWriter(source_->GetType(), source_->GetVersion()), source(source_) {}\n+    explicit CHashVerifier(Source* source_) : CHashWriter(source_->GetType(), source_->GetVersion()), source(source_) {}\n \n     void read(char* pch, size_t nSize)\n     {"
      },
      {
        "sha": "91f96ef207234b7d854534853e02219c0c97749f",
        "filename": "src/httprpc.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 6,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/httprpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/httprpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httprpc.cpp?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -43,7 +43,7 @@ class HTTPRPCTimer : public RPCTimerBase\n class HTTPRPCTimerInterface : public RPCTimerInterface\n {\n public:\n-    HTTPRPCTimerInterface(struct event_base* _base) : base(_base)\n+    explicit HTTPRPCTimerInterface(struct event_base* _base) : base(_base)\n     {\n     }\n     const char* Name() override\n@@ -62,7 +62,7 @@ class HTTPRPCTimerInterface : public RPCTimerInterface\n /* Pre-base64-encoded authentication token */\n static std::string strRPCUserColonPass;\n /* Stored RPC timer interface (for unregistration) */\n-static HTTPRPCTimerInterface* httpRPCTimerInterface = 0;\n+static HTTPRPCTimerInterface* httpRPCTimerInterface = nullptr;\n \n static void JSONErrorReply(HTTPRequest* req, const UniValue& objError, const UniValue& id)\n {\n@@ -210,7 +210,7 @@ static bool HTTPReq_JSONRPC(HTTPRequest* req, const std::string &)\n \n static bool InitRPCAuthentication()\n {\n-    if (GetArg(\"-rpcpassword\", \"\") == \"\")\n+    if (gArgs.GetArg(\"-rpcpassword\", \"\") == \"\")\n     {\n         LogPrintf(\"No rpcpassword set - using random cookie authentication\\n\");\n         if (!GenerateAuthCookie(&strRPCUserColonPass)) {\n@@ -221,7 +221,7 @@ static bool InitRPCAuthentication()\n         }\n     } else {\n         LogPrintf(\"Config options rpcuser and rpcpassword will soon be deprecated. Locally-run instances may remove rpcuser to use cookie-based auth, or may be replaced with rpcauth. Please see share/rpcuser for rpcauth auth generation.\\n\");\n-        strRPCUserColonPass = GetArg(\"-rpcuser\", \"\") + \":\" + GetArg(\"-rpcpassword\", \"\");\n+        strRPCUserColonPass = gArgs.GetArg(\"-rpcuser\", \"\") + \":\" + gArgs.GetArg(\"-rpcpassword\", \"\");\n     }\n     return true;\n }\n@@ -233,7 +233,10 @@ bool StartHTTPRPC()\n         return false;\n \n     RegisterHTTPHandler(\"/\", true, HTTPReq_JSONRPC);\n-\n+#ifdef ENABLE_WALLET\n+    // ifdef can be removed once we switch to better endpoint support and API versioning\n+    RegisterHTTPHandler(\"/wallet/\", false, HTTPReq_JSONRPC);\n+#endif\n     assert(EventBase());\n     httpRPCTimerInterface = new HTTPRPCTimerInterface(EventBase());\n     RPCSetTimerInterface(httpRPCTimerInterface);\n@@ -252,6 +255,6 @@ void StopHTTPRPC()\n     if (httpRPCTimerInterface) {\n         RPCUnsetTimerInterface(httpRPCTimerInterface);\n         delete httpRPCTimerInterface;\n-        httpRPCTimerInterface = 0;\n+        httpRPCTimerInterface = nullptr;\n     }\n }"
      },
      {
        "sha": "5923871691e972fe22730ab773d3ed641e12e1af",
        "filename": "src/httpserver.cpp",
        "status": "modified",
        "additions": 36,
        "deletions": 25,
        "changes": 61,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/httpserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/httpserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httpserver.cpp?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -40,7 +40,7 @@\n static const size_t MAX_HEADERS_SIZE = 8192;\n \n /** HTTP request work item */\n-class HTTPWorkItem : public HTTPClosure\n+class HTTPWorkItem final : public HTTPClosure\n {\n public:\n     HTTPWorkItem(std::unique_ptr<HTTPRequest> _req, const std::string &_path, const HTTPRequestHandler& _func):\n@@ -79,7 +79,7 @@ class WorkQueue\n     {\n     public:\n         WorkQueue &wq;\n-        ThreadCounter(WorkQueue &w): wq(w)\n+        explicit ThreadCounter(WorkQueue &w): wq(w)\n         {\n             std::lock_guard<std::mutex> lock(wq.cs);\n             wq.numThreads += 1;\n@@ -93,7 +93,7 @@ class WorkQueue\n     };\n \n public:\n-    WorkQueue(size_t _maxDepth) : running(true),\n+    explicit WorkQueue(size_t _maxDepth) : running(true),\n                                  maxDepth(_maxDepth),\n                                  numThreads(0)\n     {\n@@ -164,13 +164,13 @@ struct HTTPPathHandler\n /** HTTP module state */\n \n //! libevent event loop\n-static struct event_base* eventBase = 0;\n+static struct event_base* eventBase = nullptr;\n //! HTTP server\n-struct evhttp* eventHTTP = 0;\n+struct evhttp* eventHTTP = nullptr;\n //! List of subnets to allow RPC connections from\n static std::vector<CSubNet> rpc_allow_subnets;\n //! Work queue for handling longer requests off the event loop thread\n-static WorkQueue<HTTPClosure>* workQueue = 0;\n+static WorkQueue<HTTPClosure>* workQueue = nullptr;\n //! Handlers for (sub)paths\n std::vector<HTTPPathHandler> pathHandlers;\n //! Bound listening sockets\n@@ -292,7 +292,7 @@ static void http_request_cb(struct evhttp_request* req, void* arg)\n static void http_reject_request_cb(struct evhttp_request* req, void*)\n {\n     LogPrint(BCLog::HTTP, \"Rejecting request while shutting down\\n\");\n-    evhttp_send_error(req, HTTP_SERVUNAVAIL, NULL);\n+    evhttp_send_error(req, HTTP_SERVUNAVAIL, nullptr);\n }\n \n /** Event dispatcher thread */\n@@ -309,14 +309,14 @@ static bool ThreadHTTP(struct event_base* base, struct evhttp* http)\n /** Bind HTTP server to specified addresses */\n static bool HTTPBindAddresses(struct evhttp* http)\n {\n-    int defaultPort = GetArg(\"-rpcport\", BaseParams().RPCPort());\n+    int defaultPort = gArgs.GetArg(\"-rpcport\", BaseParams().RPCPort());\n     std::vector<std::pair<std::string, uint16_t> > endpoints;\n \n     // Determine what addresses to bind to\n-    if (!IsArgSet(\"-rpcallowip\")) { // Default to loopback if not allowing external IPs\n+    if (!gArgs.IsArgSet(\"-rpcallowip\")) { // Default to loopback if not allowing external IPs\n         endpoints.push_back(std::make_pair(\"::1\", defaultPort));\n         endpoints.push_back(std::make_pair(\"127.0.0.1\", defaultPort));\n-        if (IsArgSet(\"-rpcbind\")) {\n+        if (gArgs.IsArgSet(\"-rpcbind\")) {\n             LogPrintf(\"WARNING: option -rpcbind was ignored because -rpcallowip was not specified, refusing to allow everyone to connect\\n\");\n         }\n     } else if (gArgs.IsArgSet(\"-rpcbind\")) { // Specific bind address\n@@ -334,7 +334,7 @@ static bool HTTPBindAddresses(struct evhttp* http)\n     // Bind addresses\n     for (std::vector<std::pair<std::string, uint16_t> >::iterator i = endpoints.begin(); i != endpoints.end(); ++i) {\n         LogPrint(BCLog::HTTP, \"Binding RPC on address %s port %i\\n\", i->first, i->second);\n-        evhttp_bound_socket *bind_handle = evhttp_bind_socket_with_handle(http, i->first.empty() ? NULL : i->first.c_str(), i->second);\n+        evhttp_bound_socket *bind_handle = evhttp_bind_socket_with_handle(http, i->first.empty() ? nullptr : i->first.c_str(), i->second);\n         if (bind_handle) {\n             boundSockets.push_back(bind_handle);\n         } else {\n@@ -369,7 +369,7 @@ bool InitHTTPServer()\n     if (!InitHTTPAllowList())\n         return false;\n \n-    if (GetBoolArg(\"-rpcssl\", false)) {\n+    if (gArgs.GetBoolArg(\"-rpcssl\", false)) {\n         uiInterface.ThreadSafeMessageBox(\n             \"SSL mode for RPC (-rpcssl) is no longer supported.\",\n             \"\", CClientUIInterface::MSG_ERROR);\n@@ -401,22 +401,22 @@ bool InitHTTPServer()\n         return false;\n     }\n \n-    evhttp_set_timeout(http, GetArg(\"-rpcservertimeout\", DEFAULT_HTTP_SERVER_TIMEOUT));\n+    evhttp_set_timeout(http, gArgs.GetArg(\"-rpcservertimeout\", DEFAULT_HTTP_SERVER_TIMEOUT));\n     evhttp_set_max_headers_size(http, MAX_HEADERS_SIZE);\n     evhttp_set_max_body_size(http, MAX_SIZE);\n-    evhttp_set_gencb(http, http_request_cb, NULL);\n+    evhttp_set_gencb(http, http_request_cb, nullptr);\n \n     if (!HTTPBindAddresses(http)) {\n         LogPrintf(\"Unable to bind any endpoint for RPC server\\n\");\n         return false;\n     }\n \n     LogPrint(BCLog::HTTP, \"Initialized HTTP server\\n\");\n-    int workQueueDepth = std::max((long)GetArg(\"-rpcworkqueue\", DEFAULT_HTTP_WORKQUEUE), 1L);\n+    int workQueueDepth = std::max((long)gArgs.GetArg(\"-rpcworkqueue\", DEFAULT_HTTP_WORKQUEUE), 1L);\n     LogPrintf(\"HTTP: creating work queue of depth %d\\n\", workQueueDepth);\n \n     workQueue = new WorkQueue<HTTPClosure>(workQueueDepth);\n-    // tranfer ownership to eventBase/HTTP via .release()\n+    // transfer ownership to eventBase/HTTP via .release()\n     eventBase = base_ctr.release();\n     eventHTTP = http_ctr.release();\n     return true;\n@@ -442,7 +442,7 @@ std::future<bool> threadResult;\n bool StartHTTPServer()\n {\n     LogPrint(BCLog::HTTP, \"Starting HTTP server\\n\");\n-    int rpcThreads = std::max((long)GetArg(\"-rpcthreads\", DEFAULT_HTTP_THREADS), 1L);\n+    int rpcThreads = std::max((long)gArgs.GetArg(\"-rpcthreads\", DEFAULT_HTTP_THREADS), 1L);\n     LogPrintf(\"HTTP: starting %d worker threads\\n\", rpcThreads);\n     std::packaged_task<bool(event_base*, evhttp*)> task(ThreadHTTP);\n     threadResult = task.get_future();\n@@ -464,7 +464,7 @@ void InterruptHTTPServer()\n             evhttp_del_accept_socket(eventHTTP, socket);\n         }\n         // Reject requests on current connections\n-        evhttp_set_gencb(eventHTTP, http_reject_request_cb, NULL);\n+        evhttp_set_gencb(eventHTTP, http_reject_request_cb, nullptr);\n     }\n     if (workQueue)\n         workQueue->Interrupt();\n@@ -495,11 +495,11 @@ void StopHTTPServer()\n     }\n     if (eventHTTP) {\n         evhttp_free(eventHTTP);\n-        eventHTTP = 0;\n+        eventHTTP = nullptr;\n     }\n     if (eventBase) {\n         event_base_free(eventBase);\n-        eventBase = 0;\n+        eventBase = nullptr;\n     }\n     LogPrint(BCLog::HTTP, \"Stopped HTTP server\\n\");\n }\n@@ -530,7 +530,7 @@ HTTPEvent::~HTTPEvent()\n }\n void HTTPEvent::trigger(struct timeval* tv)\n {\n-    if (tv == NULL)\n+    if (tv == nullptr)\n         event_active(ev, 0, 0); // immediately trigger event in main thread\n     else\n         evtimer_add(ev, tv); // trigger after timeval passed\n@@ -573,7 +573,7 @@ std::string HTTPRequest::ReadBody()\n      * abstraction to consume the evbuffer on the fly in the parsing algorithm.\n      */\n     const char* data = (const char*)evbuffer_pullup(buf, size);\n-    if (!data) // returns NULL in case of empty buffer\n+    if (!data) // returns nullptr in case of empty buffer\n         return \"\";\n     std::string rv(data, size);\n     evbuffer_drain(buf, size);\n@@ -600,10 +600,10 @@ void HTTPRequest::WriteReply(int nStatus, const std::string& strReply)\n     assert(evb);\n     evbuffer_add(evb, strReply.data(), strReply.size());\n     HTTPEvent* ev = new HTTPEvent(eventBase, true,\n-        std::bind(evhttp_send_reply, req, nStatus, (const char*)NULL, (struct evbuffer *)NULL));\n-    ev->trigger(0);\n+        std::bind(evhttp_send_reply, req, nStatus, (const char*)nullptr, (struct evbuffer *)nullptr));\n+    ev->trigger(nullptr);\n     replySent = true;\n-    req = 0; // transferred back to main thread\n+    req = nullptr; // transferred back to main thread\n }\n \n CService HTTPRequest::GetPeer()\n@@ -666,3 +666,14 @@ void UnregisterHTTPHandler(const std::string &prefix, bool exactMatch)\n     }\n }\n \n+std::string urlDecode(const std::string &urlEncoded) {\n+    std::string res;\n+    if (!urlEncoded.empty()) {\n+        char *decoded = evhttp_uridecode(urlEncoded.c_str(), false, nullptr);\n+        if (decoded) {\n+            res = std::string(decoded);\n+            free(decoded);\n+        }\n+    }\n+    return res;\n+}"
      },
      {
        "sha": "91ce5b4e00c7c3ba899913cabe4c9188d345576a",
        "filename": "src/httpserver.h",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/httpserver.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/httpserver.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httpserver.h?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -61,7 +61,7 @@ class HTTPRequest\n     bool replySent;\n \n public:\n-    HTTPRequest(struct evhttp_request* req);\n+    explicit HTTPRequest(struct evhttp_request* req);\n     ~HTTPRequest();\n \n     enum RequestMethod {\n@@ -148,4 +148,6 @@ class HTTPEvent\n     struct event* ev;\n };\n \n+std::string urlDecode(const std::string &urlEncoded);\n+\n #endif // BITCOIN_HTTPSERVER_H"
      },
      {
        "sha": "539adc23d5a88a0f165fb83db3595aa71d898b21",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 272,
        "deletions": 206,
        "changes": 478,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -30,6 +30,7 @@\n #include \"policy/policy.h\"\n #include \"rpc/server.h\"\n #include \"rpc/register.h\"\n+#include \"rpc/safemode.h\"\n #include \"rpc/blockchain.h\"\n #include \"script/standard.h\"\n #include \"script/sigcache.h\"\n@@ -43,7 +44,7 @@\n #include \"utilmoneystr.h\"\n #include \"validationinterface.h\"\n #ifdef ENABLE_WALLET\n-#include \"wallet/wallet.h\"\n+#include \"wallet/init.h\"\n #endif\n #include \"warnings.h\"\n #include <stdint.h>\n@@ -69,14 +70,13 @@\n bool fFeeEstimatesInitialized = false;\n static const bool DEFAULT_PROXYRANDOMIZE = true;\n static const bool DEFAULT_REST_ENABLE = false;\n-static const bool DEFAULT_DISABLE_SAFEMODE = false;\n static const bool DEFAULT_STOPAFTERBLOCKIMPORT = false;\n \n std::unique_ptr<CConnman> g_connman;\n std::unique_ptr<PeerLogicValidation> peerLogic;\n \n #if ENABLE_ZMQ\n-static CZMQNotificationInterface* pzmqNotificationInterface = NULL;\n+static CZMQNotificationInterface* pzmqNotificationInterface = nullptr;\n #endif\n \n #ifdef WIN32\n@@ -102,12 +102,11 @@ static const char* FEE_ESTIMATES_FILENAME=\"fee_estimates.dat\";\n // created by AppInit() or the Qt main() function.\n //\n // A clean exit happens when StartShutdown() or the SIGTERM\n-// signal handler sets fRequestShutdown, which triggers\n-// the DetectShutdownThread(), which interrupts the main thread group.\n-// DetectShutdownThread() then exits, which causes AppInit() to\n-// continue (it .joins the shutdown thread).\n-// Shutdown() is then\n-// called to clean up database connections, and stop other\n+// signal handler sets fRequestShutdown, which makes main thread's\n+// WaitForShutdown() interrupts the thread group.\n+// And then, WaitForShutdown() makes all other on-going threads\n+// in the thread group join the main thread.\n+// Shutdown() is then called to clean up database connections, and stop other\n // threads that should only be stopped after the main network-processing\n // threads have exited.\n //\n@@ -133,10 +132,10 @@ bool ShutdownRequested()\n  * chainstate, while keeping user interface out of the common library, which is shared\n  * between bitcoind, and bitcoin-qt and non-server tools.\n */\n-class CCoinsViewErrorCatcher : public CCoinsViewBacked\n+class CCoinsViewErrorCatcher final : public CCoinsViewBacked\n {\n public:\n-    CCoinsViewErrorCatcher(CCoinsView* view) : CCoinsViewBacked(view) {}\n+    explicit CCoinsViewErrorCatcher(CCoinsView* view) : CCoinsViewBacked(view) {}\n     bool GetCoin(const COutPoint &outpoint, Coin &coin) const override {\n         try {\n             return CCoinsViewBacked::GetCoin(outpoint, coin);\n@@ -153,7 +152,7 @@ class CCoinsViewErrorCatcher : public CCoinsViewBacked\n     // Writes do not need similar protection, as failure to write is handled by the caller.\n };\n \n-static CCoinsViewErrorCatcher *pcoinscatcher = NULL;\n+static CCoinsViewErrorCatcher *pcoinscatcher = nullptr;\n static std::unique_ptr<ECCVerifyHandle> globalVerifyHandle;\n \n void Interrupt(boost::thread_group& threadGroup)\n@@ -188,18 +187,19 @@ void Shutdown()\n     StopRPC();\n     StopHTTPServer();\n #ifdef ENABLE_WALLET\n-    for (CWalletRef pwallet : vpwallets) {\n-        pwallet->Flush(false);\n-    }\n+    FlushWallets();\n #endif\n     MapPort(false);\n+\n+    // Because these depend on each-other, we make sure that neither can be\n+    // using the other before destroying them.\n     UnregisterValidationInterface(peerLogic.get());\n+    if(g_connman) g_connman->Stop();\n     peerLogic.reset();\n     g_connman.reset();\n \n     StopTorControl();\n-    UnregisterNodeSignals(GetNodeSignals());\n-    if (fDumpMempoolLater && GetArg(\"-persistmempool\", DEFAULT_PERSIST_MEMPOOL)) {\n+    if (fDumpMempoolLater && gArgs.GetArg(\"-persistmempool\", DEFAULT_PERSIST_MEMPOOL)) {\n         DumpMempool();\n     }\n \n@@ -216,7 +216,9 @@ void Shutdown()\n     }\n \n     // FlushStateToDisk generates a SetBestChain callback, which we should avoid missing\n-    FlushStateToDisk();\n+    if (pcoinsTip != nullptr) {\n+        FlushStateToDisk();\n+    }\n \n     // After there are no more peers/RPC left to give us new data which may generate\n     // CValidationInterface callbacks, flush them...\n@@ -230,29 +232,27 @@ void Shutdown()\n \n     {\n         LOCK(cs_main);\n-        if (pcoinsTip != NULL) {\n+        if (pcoinsTip != nullptr) {\n             FlushStateToDisk();\n         }\n         delete pcoinsTip;\n-        pcoinsTip = NULL;\n+        pcoinsTip = nullptr;\n         delete pcoinscatcher;\n-        pcoinscatcher = NULL;\n+        pcoinscatcher = nullptr;\n         delete pcoinsdbview;\n-        pcoinsdbview = NULL;\n+        pcoinsdbview = nullptr;\n         delete pblocktree;\n-        pblocktree = NULL;\n+        pblocktree = nullptr;\n     }\n #ifdef ENABLE_WALLET\n-    for (CWalletRef pwallet : vpwallets) {\n-        pwallet->Flush(true);\n-    }\n+    StopWallets();\n #endif\n \n #if ENABLE_ZMQ\n     if (pzmqNotificationInterface) {\n         UnregisterValidationInterface(pzmqNotificationInterface);\n         delete pzmqNotificationInterface;\n-        pzmqNotificationInterface = NULL;\n+        pzmqNotificationInterface = nullptr;\n     }\n #endif\n \n@@ -266,10 +266,7 @@ void Shutdown()\n     UnregisterAllValidationInterfaces();\n     GetMainSignals().UnregisterBackgroundSignalScheduler();\n #ifdef ENABLE_WALLET\n-    for (CWalletRef pwallet : vpwallets) {\n-        delete pwallet;\n-    }\n-    vpwallets.clear();\n+    CloseWallets();\n #endif\n     globalVerifyHandle.reset();\n     ECC_Stop();\n@@ -298,7 +295,7 @@ static void registerSignalHandler(int signal, void(*handler)(int))\n     sa.sa_handler = handler;\n     sigemptyset(&sa.sa_mask);\n     sa.sa_flags = 0;\n-    sigaction(signal, &sa, NULL);\n+    sigaction(signal, &sa, nullptr);\n }\n #endif\n \n@@ -315,22 +312,13 @@ void OnRPCStopped()\n     LogPrint(BCLog::RPC, \"RPC stopped.\\n\");\n }\n \n-void OnRPCPreCommand(const CRPCCommand& cmd)\n-{\n-    // Observe safe mode\n-    std::string strWarning = GetWarnings(\"rpc\");\n-    if (strWarning != \"\" && !GetBoolArg(\"-disablesafemode\", DEFAULT_DISABLE_SAFEMODE) &&\n-        !cmd.okSafeMode)\n-        throw JSONRPCError(RPC_FORBIDDEN_BY_SAFE_MODE, std::string(\"Safe mode: \") + strWarning);\n-}\n-\n std::string HelpMessage(HelpMessageMode mode)\n {\n     const auto defaultBaseParams = CreateBaseChainParams(CBaseChainParams::MAIN);\n     const auto testnetBaseParams = CreateBaseChainParams(CBaseChainParams::TESTNET);\n     const auto defaultChainParams = CreateChainParams(CBaseChainParams::MAIN);\n     const auto testnetChainParams = CreateChainParams(CBaseChainParams::TESTNET);\n-    const bool showDebug = GetBoolArg(\"-help-debug\", false);\n+    const bool showDebug = gArgs.GetBoolArg(\"-help-debug\", false);\n \n     // When adding new options to the categories, please keep and ensure alphabetical ordering.\n     // Do not translate _(...) -help-debug options, Many technical terms, and only a very small audience, so is unnecessary stress to translators.\n@@ -360,6 +348,9 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += HelpMessageOpt(\"-maxorphantx=<n>\", strprintf(_(\"Keep at most <n> unconnectable transactions in memory (default: %u)\"), DEFAULT_MAX_ORPHAN_TRANSACTIONS));\n     strUsage += HelpMessageOpt(\"-maxmempool=<n>\", strprintf(_(\"Keep the transaction memory pool below <n> megabytes (default: %u)\"), DEFAULT_MAX_MEMPOOL_SIZE));\n     strUsage += HelpMessageOpt(\"-mempoolexpiry=<n>\", strprintf(_(\"Do not keep transactions in the mempool longer than <n> hours (default: %u)\"), DEFAULT_MEMPOOL_EXPIRY));\n+    if (showDebug) {\n+        strUsage += HelpMessageOpt(\"-minimumchainwork=<hex>\", strprintf(\"Minimum work assumed to exist on a valid chain in hex (default: %s, testnet: %s)\", defaultChainParams->GetConsensus().nMinimumChainWork.GetHex(), testnetChainParams->GetConsensus().nMinimumChainWork.GetHex()));\n+    }\n     strUsage += HelpMessageOpt(\"-persistmempool\", strprintf(_(\"Whether to save the mempool on shutdown and load on restart (default: %u)\"), DEFAULT_PERSIST_MEMPOOL));\n     strUsage += HelpMessageOpt(\"-blockreconstructionextratxn=<n>\", strprintf(_(\"Extra transactions to keep in memory for compact block reconstructions (default: %u)\"), DEFAULT_BLOCK_RECONSTRUCTION_EXTRA_TXN));\n     strUsage += HelpMessageOpt(\"-par=<n>\", strprintf(_(\"Set the number of script verification threads (%u to %d, 0 = auto, <0 = leave that many cores free, default: %d)\"),\n@@ -418,7 +409,7 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += HelpMessageOpt(\"-maxuploadtarget=<n>\", strprintf(_(\"Tries to keep outbound traffic under the given target (in MiB per 24h), 0 = no limit (default: %d)\"), DEFAULT_MAX_UPLOAD_TARGET));\n \n #ifdef ENABLE_WALLET\n-    strUsage += CWallet::GetWalletHelpString(showDebug);\n+    strUsage += GetWalletHelpString(showDebug);\n #endif\n \n #if ENABLE_ZMQ\n@@ -439,6 +430,7 @@ std::string HelpMessage(HelpMessageMode mode)\n         strUsage += HelpMessageOpt(\"-checkmempool=<n>\", strprintf(\"Run checks every <n> transactions (default: %u)\", defaultChainParams->DefaultConsistencyChecks()));\n         strUsage += HelpMessageOpt(\"-checkpoints\", strprintf(\"Disable expensive verification for known chain history (default: %u)\", DEFAULT_CHECKPOINTS_ENABLED));\n         strUsage += HelpMessageOpt(\"-disablesafemode\", strprintf(\"Disable safemode, override a real safe mode event (default: %u)\", DEFAULT_DISABLE_SAFEMODE));\n+        strUsage += HelpMessageOpt(\"-deprecatedrpc=<method>\", \"Allows deprecated RPC method(s) to be used\");\n         strUsage += HelpMessageOpt(\"-testsafemode\", strprintf(\"Force safe mode (default: %u)\", DEFAULT_TESTSAFEMODE));\n         strUsage += HelpMessageOpt(\"-dropmessagestest=<n>\", \"Randomly drop 1 of every <n> network messages\");\n         strUsage += HelpMessageOpt(\"-fuzzmessagestest=<n>\", \"Randomly fuzz 1 of every <n> network messages\");\n@@ -477,9 +469,9 @@ std::string HelpMessage(HelpMessageMode mode)\n \n     strUsage += HelpMessageGroup(_(\"Node relay options:\"));\n     if (showDebug) {\n-        strUsage += HelpMessageOpt(\"-acceptnonstdtxn\", strprintf(\"Relay and mine \\\"non-standard\\\" transactions (%sdefault: %u)\", \"testnet/regtest only; \", defaultChainParams->RequireStandard()));\n+        strUsage += HelpMessageOpt(\"-acceptnonstdtxn\", strprintf(\"Relay and mine \\\"non-standard\\\" transactions (%sdefault: %u)\", \"testnet/regtest only; \", !testnetChainParams->RequireStandard()));\n         strUsage += HelpMessageOpt(\"-incrementalrelayfee=<amt>\", strprintf(\"Fee rate (in %s/kB) used to define cost of relay, used for mempool limiting and BIP 125 replacement. (default: %s)\", CURRENCY_UNIT, FormatMoney(DEFAULT_INCREMENTAL_RELAY_FEE)));\n-        strUsage += HelpMessageOpt(\"-dustrelayfee=<amt>\", strprintf(\"Fee rate (in %s/kB) used to defined dust, the value of an output such that it will cost about 1/3 of its value in fees at this fee rate to spend it. (default: %s)\", CURRENCY_UNIT, FormatMoney(DUST_RELAY_TX_FEE)));\n+        strUsage += HelpMessageOpt(\"-dustrelayfee=<amt>\", strprintf(\"Fee rate (in %s/kB) used to defined dust, the value of an output such that it will cost more than its value in fees at this fee rate to spend it. (default: %s)\", CURRENCY_UNIT, FormatMoney(DUST_RELAY_TX_FEE)));\n     }\n     strUsage += HelpMessageOpt(\"-bytespersigop\", strprintf(_(\"Equivalent bytes per sigop in transactions for relay and mining (default: %u)\"), DEFAULT_BYTES_PER_SIGOP));\n     strUsage += HelpMessageOpt(\"-datacarrier\", strprintf(_(\"Relay and mine data carrier transactions (default: %u)\"), DEFAULT_ACCEPT_DATACARRIER));\n@@ -492,7 +484,7 @@ std::string HelpMessage(HelpMessageMode mode)\n \n     strUsage += HelpMessageGroup(_(\"Block creation options:\"));\n     strUsage += HelpMessageOpt(\"-blockmaxweight=<n>\", strprintf(_(\"Set maximum BIP141 block weight (default: %d)\"), DEFAULT_BLOCK_MAX_WEIGHT));\n-    strUsage += HelpMessageOpt(\"-blockmaxsize=<n>\", strprintf(_(\"Set maximum block size in bytes (default: %d)\"), DEFAULT_BLOCK_MAX_SIZE));\n+    strUsage += HelpMessageOpt(\"-blockmaxsize=<n>\", _(\"Set maximum BIP141 block weight to this * 4. Deprecated, use blockmaxweight\"));\n     strUsage += HelpMessageOpt(\"-blockmintxfee=<amt>\", strprintf(_(\"Set lowest fee rate (in %s/kB) for transactions to be included in block creation. (default: %s)\"), CURRENCY_UNIT, FormatMoney(DEFAULT_BLOCK_MIN_TX_FEE)));\n     if (showDebug)\n         strUsage += HelpMessageOpt(\"-blockversion=<n>\", \"Override block version to test forking scenarios\");\n@@ -544,10 +536,11 @@ static void BlockNotifyCallback(bool initialSync, const CBlockIndex *pBlockIndex\n     if (initialSync || !pBlockIndex)\n         return;\n \n-    std::string strCmd = GetArg(\"-blocknotify\", \"\");\n-\n-    boost::replace_all(strCmd, \"%s\", pBlockIndex->GetBlockHash().GetHex());\n-    boost::thread t(runCommand, strCmd); // thread runs free\n+    std::string strCmd = gArgs.GetArg(\"-blocknotify\", \"\");\n+    if (!strCmd.empty()) {\n+        boost::replace_all(strCmd, \"%s\", pBlockIndex->GetBlockHash().GetHex());\n+        boost::thread t(runCommand, strCmd); // thread runs free\n+    }\n }\n \n static bool fHaveGenesis = false;\n@@ -556,7 +549,7 @@ static CConditionVariable condvar_GenesisWait;\n \n static void BlockNotifyGenesisWait(bool, const CBlockIndex *pBlockIndex)\n {\n-    if (pBlockIndex != NULL) {\n+    if (pBlockIndex != nullptr) {\n         {\n             boost::unique_lock<boost::mutex> lock_GenesisWait(cs_GenesisWait);\n             fHaveGenesis = true;\n@@ -646,7 +639,7 @@ void ThreadImport(std::vector<fs::path> vImportFiles)\n         fReindex = false;\n         LogPrintf(\"Reindexing finished\\n\");\n         // To avoid ending up in a situation without genesis block, re-try initializing (no-op if reindexing worked):\n-        InitBlockIndex(chainparams);\n+        LoadGenesisBlock(chainparams);\n     }\n \n     // hardcoded $DATADIR/bootstrap.dat\n@@ -681,12 +674,12 @@ void ThreadImport(std::vector<fs::path> vImportFiles)\n         StartShutdown();\n     }\n \n-    if (GetBoolArg(\"-stopafterblockimport\", DEFAULT_STOPAFTERBLOCKIMPORT)) {\n+    if (gArgs.GetBoolArg(\"-stopafterblockimport\", DEFAULT_STOPAFTERBLOCKIMPORT)) {\n         LogPrintf(\"Stopping after block import\\n\");\n         StartShutdown();\n     }\n     } // End scope of CImportingNow\n-    if (GetArg(\"-persistmempool\", DEFAULT_PERSIST_MEMPOOL)) {\n+    if (gArgs.GetArg(\"-persistmempool\", DEFAULT_PERSIST_MEMPOOL)) {\n         LoadMempool();\n         fDumpMempoolLater = !fRequestShutdown;\n     }\n@@ -718,14 +711,13 @@ bool AppInitServers(boost::thread_group& threadGroup)\n {\n     RPCServer::OnStarted(&OnRPCStarted);\n     RPCServer::OnStopped(&OnRPCStopped);\n-    RPCServer::OnPreCommand(&OnRPCPreCommand);\n     if (!InitHTTPServer())\n         return false;\n     if (!StartRPC())\n         return false;\n     if (!StartHTTPRPC())\n         return false;\n-    if (GetBoolArg(\"-rest\", DEFAULT_REST_ENABLE) && !StartREST())\n+    if (gArgs.GetBoolArg(\"-rest\", DEFAULT_REST_ENABLE) && !StartREST())\n         return false;\n     if (!StartHTTPServer())\n         return false;\n@@ -737,63 +729,72 @@ void InitParameterInteraction()\n {\n     // when specifying an explicit binding address, you want to listen on it\n     // even when -connect or -proxy is specified\n-    if (IsArgSet(\"-bind\")) {\n-        if (SoftSetBoolArg(\"-listen\", true))\n+    if (gArgs.IsArgSet(\"-bind\")) {\n+        if (gArgs.SoftSetBoolArg(\"-listen\", true))\n             LogPrintf(\"%s: parameter interaction: -bind set -> setting -listen=1\\n\", __func__);\n     }\n-    if (IsArgSet(\"-whitebind\")) {\n-        if (SoftSetBoolArg(\"-listen\", true))\n+    if (gArgs.IsArgSet(\"-whitebind\")) {\n+        if (gArgs.SoftSetBoolArg(\"-listen\", true))\n             LogPrintf(\"%s: parameter interaction: -whitebind set -> setting -listen=1\\n\", __func__);\n     }\n \n     if (gArgs.IsArgSet(\"-connect\")) {\n         // when only connecting to trusted nodes, do not seed via DNS, or listen by default\n-        if (SoftSetBoolArg(\"-dnsseed\", false))\n+        if (gArgs.SoftSetBoolArg(\"-dnsseed\", false))\n             LogPrintf(\"%s: parameter interaction: -connect set -> setting -dnsseed=0\\n\", __func__);\n-        if (SoftSetBoolArg(\"-listen\", false))\n+        if (gArgs.SoftSetBoolArg(\"-listen\", false))\n             LogPrintf(\"%s: parameter interaction: -connect set -> setting -listen=0\\n\", __func__);\n     }\n \n-    if (IsArgSet(\"-proxy\")) {\n+    if (gArgs.IsArgSet(\"-proxy\")) {\n         // to protect privacy, do not listen by default if a default proxy server is specified\n-        if (SoftSetBoolArg(\"-listen\", false))\n+        if (gArgs.SoftSetBoolArg(\"-listen\", false))\n             LogPrintf(\"%s: parameter interaction: -proxy set -> setting -listen=0\\n\", __func__);\n         // to protect privacy, do not use UPNP when a proxy is set. The user may still specify -listen=1\n         // to listen locally, so don't rely on this happening through -listen below.\n-        if (SoftSetBoolArg(\"-upnp\", false))\n+        if (gArgs.SoftSetBoolArg(\"-upnp\", false))\n             LogPrintf(\"%s: parameter interaction: -proxy set -> setting -upnp=0\\n\", __func__);\n         // to protect privacy, do not discover addresses by default\n-        if (SoftSetBoolArg(\"-discover\", false))\n+        if (gArgs.SoftSetBoolArg(\"-discover\", false))\n             LogPrintf(\"%s: parameter interaction: -proxy set -> setting -discover=0\\n\", __func__);\n     }\n \n-    if (!GetBoolArg(\"-listen\", DEFAULT_LISTEN)) {\n+    if (!gArgs.GetBoolArg(\"-listen\", DEFAULT_LISTEN)) {\n         // do not map ports or try to retrieve public IP when not listening (pointless)\n-        if (SoftSetBoolArg(\"-upnp\", false))\n+        if (gArgs.SoftSetBoolArg(\"-upnp\", false))\n             LogPrintf(\"%s: parameter interaction: -listen=0 -> setting -upnp=0\\n\", __func__);\n-        if (SoftSetBoolArg(\"-discover\", false))\n+        if (gArgs.SoftSetBoolArg(\"-discover\", false))\n             LogPrintf(\"%s: parameter interaction: -listen=0 -> setting -discover=0\\n\", __func__);\n-        if (SoftSetBoolArg(\"-listenonion\", false))\n+        if (gArgs.SoftSetBoolArg(\"-listenonion\", false))\n             LogPrintf(\"%s: parameter interaction: -listen=0 -> setting -listenonion=0\\n\", __func__);\n     }\n \n-    if (IsArgSet(\"-externalip\")) {\n+    if (gArgs.IsArgSet(\"-externalip\")) {\n         // if an explicit public IP is specified, do not try to find others\n-        if (SoftSetBoolArg(\"-discover\", false))\n+        if (gArgs.SoftSetBoolArg(\"-discover\", false))\n             LogPrintf(\"%s: parameter interaction: -externalip set -> setting -discover=0\\n\", __func__);\n     }\n \n     // disable whitelistrelay in blocksonly mode\n-    if (GetBoolArg(\"-blocksonly\", DEFAULT_BLOCKSONLY)) {\n-        if (SoftSetBoolArg(\"-whitelistrelay\", false))\n+    if (gArgs.GetBoolArg(\"-blocksonly\", DEFAULT_BLOCKSONLY)) {\n+        if (gArgs.SoftSetBoolArg(\"-whitelistrelay\", false))\n             LogPrintf(\"%s: parameter interaction: -blocksonly=1 -> setting -whitelistrelay=0\\n\", __func__);\n     }\n \n     // Forcing relay from whitelisted hosts implies we will accept relays from them in the first place.\n-    if (GetBoolArg(\"-whitelistforcerelay\", DEFAULT_WHITELISTFORCERELAY)) {\n-        if (SoftSetBoolArg(\"-whitelistrelay\", true))\n+    if (gArgs.GetBoolArg(\"-whitelistforcerelay\", DEFAULT_WHITELISTFORCERELAY)) {\n+        if (gArgs.SoftSetBoolArg(\"-whitelistrelay\", true))\n             LogPrintf(\"%s: parameter interaction: -whitelistforcerelay=1 -> setting -whitelistrelay=1\\n\", __func__);\n     }\n+\n+    if (gArgs.IsArgSet(\"-blockmaxsize\")) {\n+        unsigned int max_size = gArgs.GetArg(\"-blockmaxsize\", 0);\n+        if (gArgs.SoftSetArg(\"blockmaxweight\", strprintf(\"%d\", max_size * WITNESS_SCALE_FACTOR))) {\n+            LogPrintf(\"%s: parameter interaction: -blockmaxsize=%d -> setting -blockmaxweight=%d (-blockmaxsize is deprecated!)\\n\", __func__, max_size, max_size * WITNESS_SCALE_FACTOR);\n+        } else {\n+            LogPrintf(\"%s: Ignoring blockmaxsize setting which is overridden by blockmaxweight\", __func__);\n+        }\n+    }\n }\n \n static std::string ResolveErrMsg(const char * const optname, const std::string& strBind)\n@@ -803,10 +804,10 @@ static std::string ResolveErrMsg(const char * const optname, const std::string&\n \n void InitLogging()\n {\n-    fPrintToConsole = GetBoolArg(\"-printtoconsole\", false);\n-    fLogTimestamps = GetBoolArg(\"-logtimestamps\", DEFAULT_LOGTIMESTAMPS);\n-    fLogTimeMicros = GetBoolArg(\"-logtimemicros\", DEFAULT_LOGTIMEMICROS);\n-    fLogIPs = GetBoolArg(\"-logips\", DEFAULT_LOGIPS);\n+    fPrintToConsole = gArgs.GetBoolArg(\"-printtoconsole\", false);\n+    fLogTimestamps = gArgs.GetBoolArg(\"-logtimestamps\", DEFAULT_LOGTIMESTAMPS);\n+    fLogTimeMicros = gArgs.GetBoolArg(\"-logtimemicros\", DEFAULT_LOGTIMEMICROS);\n+    fLogIPs = gArgs.GetBoolArg(\"-logips\", DEFAULT_LOGIPS);\n \n     LogPrintf(\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\");\n     LogPrintf(\"Bitcoin version %s\\n\", FormatFullVersion());\n@@ -841,7 +842,7 @@ bool AppInitBasicSetup()\n #ifdef _MSC_VER\n     // Turn off Microsoft heap dump noise\n     _CrtSetReportMode(_CRT_WARN, _CRTDBG_MODE_FILE);\n-    _CrtSetReportFile(_CRT_WARN, CreateFileA(\"NUL\", GENERIC_WRITE, 0, NULL, OPEN_EXISTING, 0, 0));\n+    _CrtSetReportFile(_CRT_WARN, CreateFileA(\"NUL\", GENERIC_WRITE, 0, nullptr, OPEN_EXISTING, 0, 0));\n     // Disable confusing \"helpful\" text message on abort, Ctrl-C\n     _set_abort_behavior(0, _WRITE_ABORT_MSG | _CALL_REPORTFAULT);\n #endif\n@@ -856,14 +857,14 @@ bool AppInitBasicSetup()\n #endif\n     typedef BOOL (WINAPI *PSETPROCDEPPOL)(DWORD);\n     PSETPROCDEPPOL setProcDEPPol = (PSETPROCDEPPOL)GetProcAddress(GetModuleHandleA(\"Kernel32.dll\"), \"SetProcessDEPPolicy\");\n-    if (setProcDEPPol != NULL) setProcDEPPol(PROCESS_DEP_ENABLE);\n+    if (setProcDEPPol != nullptr) setProcDEPPol(PROCESS_DEP_ENABLE);\n #endif\n \n     if (!SetupNetworking())\n         return InitError(\"Initializing networking failed\");\n \n #ifndef WIN32\n-    if (!GetBoolArg(\"-sysperms\", false)) {\n+    if (!gArgs.GetBoolArg(\"-sysperms\", false)) {\n         umask(077);\n     }\n \n@@ -891,8 +892,8 @@ bool AppInitParameterInteraction()\n     // also see: InitParameterInteraction()\n \n     // if using block pruning, then disallow txindex\n-    if (GetArg(\"-prune\", 0)) {\n-        if (GetBoolArg(\"-txindex\", DEFAULT_TXINDEX))\n+    if (gArgs.GetArg(\"-prune\", 0)) {\n+        if (gArgs.GetBoolArg(\"-txindex\", DEFAULT_TXINDEX))\n             return InitError(_(\"Prune mode is incompatible with -txindex.\"));\n     }\n \n@@ -904,7 +905,7 @@ bool AppInitParameterInteraction()\n \n     // Make sure enough file descriptors are available\n     int nBind = std::max(nUserBind, size_t(1));\n-    nUserMaxConnections = GetArg(\"-maxconnections\", DEFAULT_MAX_PEER_CONNECTIONS);\n+    nUserMaxConnections = gArgs.GetArg(\"-maxconnections\", DEFAULT_MAX_PEER_CONNECTIONS);\n     nMaxConnections = std::max(nUserMaxConnections, 0);\n \n     // Trim requested connection counts, to fit into system limitations\n@@ -945,55 +946,69 @@ bool AppInitParameterInteraction()\n     }\n \n     // Check for -debugnet\n-    if (GetBoolArg(\"-debugnet\", false))\n+    if (gArgs.GetBoolArg(\"-debugnet\", false))\n         InitWarning(_(\"Unsupported argument -debugnet ignored, use -debug=net.\"));\n     // Check for -socks - as this is a privacy risk to continue, exit here\n-    if (IsArgSet(\"-socks\"))\n+    if (gArgs.IsArgSet(\"-socks\"))\n         return InitError(_(\"Unsupported argument -socks found. Setting SOCKS version isn't possible anymore, only SOCKS5 proxies are supported.\"));\n     // Check for -tor - as this is a privacy risk to continue, exit here\n-    if (GetBoolArg(\"-tor\", false))\n+    if (gArgs.GetBoolArg(\"-tor\", false))\n         return InitError(_(\"Unsupported argument -tor found, use -onion.\"));\n \n-    if (GetBoolArg(\"-benchmark\", false))\n+    if (gArgs.GetBoolArg(\"-benchmark\", false))\n         InitWarning(_(\"Unsupported argument -benchmark ignored, use -debug=bench.\"));\n \n-    if (GetBoolArg(\"-whitelistalwaysrelay\", false))\n+    if (gArgs.GetBoolArg(\"-whitelistalwaysrelay\", false))\n         InitWarning(_(\"Unsupported argument -whitelistalwaysrelay ignored, use -whitelistrelay and/or -whitelistforcerelay.\"));\n \n-    if (IsArgSet(\"-blockminsize\"))\n+    if (gArgs.IsArgSet(\"-blockminsize\"))\n         InitWarning(\"Unsupported argument -blockminsize ignored.\");\n \n     // Checkmempool and checkblockindex default to true in regtest mode\n-    int ratio = std::min<int>(std::max<int>(GetArg(\"-checkmempool\", chainparams.DefaultConsistencyChecks() ? 1 : 0), 0), 1000000);\n+    int ratio = std::min<int>(std::max<int>(gArgs.GetArg(\"-checkmempool\", chainparams.DefaultConsistencyChecks() ? 1 : 0), 0), 1000000);\n     if (ratio != 0) {\n         mempool.setSanityCheck(1.0 / ratio);\n     }\n-    fCheckBlockIndex = GetBoolArg(\"-checkblockindex\", chainparams.DefaultConsistencyChecks());\n-    fCheckpointsEnabled = GetBoolArg(\"-checkpoints\", DEFAULT_CHECKPOINTS_ENABLED);\n+    fCheckBlockIndex = gArgs.GetBoolArg(\"-checkblockindex\", chainparams.DefaultConsistencyChecks());\n+    fCheckpointsEnabled = gArgs.GetBoolArg(\"-checkpoints\", DEFAULT_CHECKPOINTS_ENABLED);\n \n-    hashAssumeValid = uint256S(GetArg(\"-assumevalid\", chainparams.GetConsensus().defaultAssumeValid.GetHex()));\n+    hashAssumeValid = uint256S(gArgs.GetArg(\"-assumevalid\", chainparams.GetConsensus().defaultAssumeValid.GetHex()));\n     if (!hashAssumeValid.IsNull())\n         LogPrintf(\"Assuming ancestors of block %s have valid signatures.\\n\", hashAssumeValid.GetHex());\n     else\n         LogPrintf(\"Validating signatures for all blocks.\\n\");\n \n+    if (gArgs.IsArgSet(\"-minimumchainwork\")) {\n+        const std::string minChainWorkStr = gArgs.GetArg(\"-minimumchainwork\", \"\");\n+        if (!IsHexNumber(minChainWorkStr)) {\n+            return InitError(strprintf(\"Invalid non-hex (%s) minimum chain work value specified\", minChainWorkStr));\n+        }\n+        nMinimumChainWork = UintToArith256(uint256S(minChainWorkStr));\n+    } else {\n+        nMinimumChainWork = UintToArith256(chainparams.GetConsensus().nMinimumChainWork);\n+    }\n+    LogPrintf(\"Setting nMinimumChainWork=%s\\n\", nMinimumChainWork.GetHex());\n+    if (nMinimumChainWork < UintToArith256(chainparams.GetConsensus().nMinimumChainWork)) {\n+        LogPrintf(\"Warning: nMinimumChainWork set below default value of %s\\n\", chainparams.GetConsensus().nMinimumChainWork.GetHex());\n+    }\n+\n     // mempool limits\n-    int64_t nMempoolSizeMax = GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000;\n-    int64_t nMempoolSizeMin = GetArg(\"-limitdescendantsize\", DEFAULT_DESCENDANT_SIZE_LIMIT) * 1000 * 40;\n+    int64_t nMempoolSizeMax = gArgs.GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000;\n+    int64_t nMempoolSizeMin = gArgs.GetArg(\"-limitdescendantsize\", DEFAULT_DESCENDANT_SIZE_LIMIT) * 1000 * 40;\n     if (nMempoolSizeMax < 0 || nMempoolSizeMax < nMempoolSizeMin)\n         return InitError(strprintf(_(\"-maxmempool must be at least %d MB\"), std::ceil(nMempoolSizeMin / 1000000.0)));\n     // incremental relay fee sets the minimum feerate increase necessary for BIP 125 replacement in the mempool\n     // and the amount the mempool min fee increases above the feerate of txs evicted due to mempool limiting.\n-    if (IsArgSet(\"-incrementalrelayfee\"))\n+    if (gArgs.IsArgSet(\"-incrementalrelayfee\"))\n     {\n         CAmount n = 0;\n-        if (!ParseMoney(GetArg(\"-incrementalrelayfee\", \"\"), n))\n-            return InitError(AmountErrMsg(\"incrementalrelayfee\", GetArg(\"-incrementalrelayfee\", \"\")));\n+        if (!ParseMoney(gArgs.GetArg(\"-incrementalrelayfee\", \"\"), n))\n+            return InitError(AmountErrMsg(\"incrementalrelayfee\", gArgs.GetArg(\"-incrementalrelayfee\", \"\")));\n         incrementalRelayFee = CFeeRate(n);\n     }\n \n     // -par=0 means autodetect, but nScriptCheckThreads==0 means no concurrency\n-    nScriptCheckThreads = GetArg(\"-par\", DEFAULT_SCRIPTCHECK_THREADS);\n+    nScriptCheckThreads = gArgs.GetArg(\"-par\", DEFAULT_SCRIPTCHECK_THREADS);\n     if (nScriptCheckThreads <= 0)\n         nScriptCheckThreads += GetNumCores();\n     if (nScriptCheckThreads <= 1)\n@@ -1002,7 +1017,7 @@ bool AppInitParameterInteraction()\n         nScriptCheckThreads = MAX_SCRIPTCHECK_THREADS;\n \n     // block pruning; get the amount of disk space (in MiB) to allot for block & undo files\n-    int64_t nPruneArg = GetArg(\"-prune\", 0);\n+    int64_t nPruneArg = gArgs.GetArg(\"-prune\", 0);\n     if (nPruneArg < 0) {\n         return InitError(_(\"Prune cannot be configured with a negative value.\"));\n     }\n@@ -1021,19 +1036,19 @@ bool AppInitParameterInteraction()\n \n     RegisterAllCoreRPCCommands(tableRPC);\n #ifdef ENABLE_WALLET\n-    RegisterWalletRPCCommands(tableRPC);\n+    RegisterWalletRPC(tableRPC);\n #endif\n \n-    nConnectTimeout = GetArg(\"-timeout\", DEFAULT_CONNECT_TIMEOUT);\n+    nConnectTimeout = gArgs.GetArg(\"-timeout\", DEFAULT_CONNECT_TIMEOUT);\n     if (nConnectTimeout <= 0)\n         nConnectTimeout = DEFAULT_CONNECT_TIMEOUT;\n \n-    if (IsArgSet(\"-minrelaytxfee\")) {\n+    if (gArgs.IsArgSet(\"-minrelaytxfee\")) {\n         CAmount n = 0;\n-        if (!ParseMoney(GetArg(\"-minrelaytxfee\", \"\"), n)) {\n-            return InitError(AmountErrMsg(\"minrelaytxfee\", GetArg(\"-minrelaytxfee\", \"\")));\n+        if (!ParseMoney(gArgs.GetArg(\"-minrelaytxfee\", \"\"), n)) {\n+            return InitError(AmountErrMsg(\"minrelaytxfee\", gArgs.GetArg(\"-minrelaytxfee\", \"\")));\n         }\n-        // High fee check is done afterward in CWallet::ParameterInteraction()\n+        // High fee check is done afterward in WalletParameterInteraction()\n         ::minRelayTxFee = CFeeRate(n);\n     } else if (incrementalRelayFee > ::minRelayTxFee) {\n         // Allow only setting incrementalRelayFee to control both\n@@ -1043,55 +1058,55 @@ bool AppInitParameterInteraction()\n \n     // Sanity check argument for min fee for including tx in block\n     // TODO: Harmonize which arguments need sanity checking and where that happens\n-    if (IsArgSet(\"-blockmintxfee\"))\n+    if (gArgs.IsArgSet(\"-blockmintxfee\"))\n     {\n         CAmount n = 0;\n-        if (!ParseMoney(GetArg(\"-blockmintxfee\", \"\"), n))\n-            return InitError(AmountErrMsg(\"blockmintxfee\", GetArg(\"-blockmintxfee\", \"\")));\n+        if (!ParseMoney(gArgs.GetArg(\"-blockmintxfee\", \"\"), n))\n+            return InitError(AmountErrMsg(\"blockmintxfee\", gArgs.GetArg(\"-blockmintxfee\", \"\")));\n     }\n \n     // Feerate used to define dust.  Shouldn't be changed lightly as old\n     // implementations may inadvertently create non-standard transactions\n-    if (IsArgSet(\"-dustrelayfee\"))\n+    if (gArgs.IsArgSet(\"-dustrelayfee\"))\n     {\n         CAmount n = 0;\n-        if (!ParseMoney(GetArg(\"-dustrelayfee\", \"\"), n) || 0 == n)\n-            return InitError(AmountErrMsg(\"dustrelayfee\", GetArg(\"-dustrelayfee\", \"\")));\n+        if (!ParseMoney(gArgs.GetArg(\"-dustrelayfee\", \"\"), n) || 0 == n)\n+            return InitError(AmountErrMsg(\"dustrelayfee\", gArgs.GetArg(\"-dustrelayfee\", \"\")));\n         dustRelayFee = CFeeRate(n);\n     }\n \n-    fRequireStandard = !GetBoolArg(\"-acceptnonstdtxn\", !chainparams.RequireStandard());\n+    fRequireStandard = !gArgs.GetBoolArg(\"-acceptnonstdtxn\", !chainparams.RequireStandard());\n     if (chainparams.RequireStandard() && !fRequireStandard)\n         return InitError(strprintf(\"acceptnonstdtxn is not currently supported for %s chain\", chainparams.NetworkIDString()));\n-    nBytesPerSigOp = GetArg(\"-bytespersigop\", nBytesPerSigOp);\n+    nBytesPerSigOp = gArgs.GetArg(\"-bytespersigop\", nBytesPerSigOp);\n \n #ifdef ENABLE_WALLET\n-    if (!CWallet::ParameterInteraction())\n+    if (!WalletParameterInteraction())\n         return false;\n #endif\n \n-    fIsBareMultisigStd = GetBoolArg(\"-permitbaremultisig\", DEFAULT_PERMIT_BAREMULTISIG);\n-    fAcceptDatacarrier = GetBoolArg(\"-datacarrier\", DEFAULT_ACCEPT_DATACARRIER);\n-    nMaxDatacarrierBytes = GetArg(\"-datacarriersize\", nMaxDatacarrierBytes);\n+    fIsBareMultisigStd = gArgs.GetBoolArg(\"-permitbaremultisig\", DEFAULT_PERMIT_BAREMULTISIG);\n+    fAcceptDatacarrier = gArgs.GetBoolArg(\"-datacarrier\", DEFAULT_ACCEPT_DATACARRIER);\n+    nMaxDatacarrierBytes = gArgs.GetArg(\"-datacarriersize\", nMaxDatacarrierBytes);\n \n     // Option to startup with mocktime set (used for regression testing):\n-    SetMockTime(GetArg(\"-mocktime\", 0)); // SetMockTime(0) is a no-op\n+    SetMockTime(gArgs.GetArg(\"-mocktime\", 0)); // SetMockTime(0) is a no-op\n \n-    if (GetBoolArg(\"-peerbloomfilters\", DEFAULT_PEERBLOOMFILTERS))\n+    if (gArgs.GetBoolArg(\"-peerbloomfilters\", DEFAULT_PEERBLOOMFILTERS))\n         nLocalServices = ServiceFlags(nLocalServices | NODE_BLOOM);\n \n-    if (GetArg(\"-rpcserialversion\", DEFAULT_RPC_SERIALIZE_VERSION) < 0)\n+    if (gArgs.GetArg(\"-rpcserialversion\", DEFAULT_RPC_SERIALIZE_VERSION) < 0)\n         return InitError(\"rpcserialversion must be non-negative.\");\n \n-    if (GetArg(\"-rpcserialversion\", DEFAULT_RPC_SERIALIZE_VERSION) > 1)\n+    if (gArgs.GetArg(\"-rpcserialversion\", DEFAULT_RPC_SERIALIZE_VERSION) > 1)\n         return InitError(\"unknown rpcserialversion requested.\");\n \n-    nMaxTipAge = GetArg(\"-maxtipage\", DEFAULT_MAX_TIP_AGE);\n+    nMaxTipAge = gArgs.GetArg(\"-maxtipage\", DEFAULT_MAX_TIP_AGE);\n \n-    fEnableReplacement = GetBoolArg(\"-mempoolreplacement\", DEFAULT_ENABLE_REPLACEMENT);\n-    if ((!fEnableReplacement) && IsArgSet(\"-mempoolreplacement\")) {\n+    fEnableReplacement = gArgs.GetBoolArg(\"-mempoolreplacement\", DEFAULT_ENABLE_REPLACEMENT);\n+    if ((!fEnableReplacement) && gArgs.IsArgSet(\"-mempoolreplacement\")) {\n         // Minimal effort at forwards compatibility\n-        std::string strReplacementModeList = GetArg(\"-mempoolreplacement\", \"\");  // default is impossible\n+        std::string strReplacementModeList = gArgs.GetArg(\"-mempoolreplacement\", \"\");  // default is impossible\n         std::vector<std::string> vstrReplacementModes;\n         boost::split(vstrReplacementModes, strReplacementModeList, boost::is_any_of(\",\"));\n         fEnableReplacement = (std::find(vstrReplacementModes.begin(), vstrReplacementModes.end(), \"fee\") != vstrReplacementModes.end());\n@@ -1161,6 +1176,8 @@ bool AppInitSanityChecks()\n     // ********************************************************* Step 4: sanity checks\n \n     // Initialize elliptic curve code\n+    std::string sha256_algo = SHA256AutoDetect();\n+    LogPrintf(\"Using the '%s' SHA256 implementation\\n\", sha256_algo);\n     RandomInit();\n     ECC_Start();\n     globalVerifyHandle.reset(new ECCVerifyHandle());\n@@ -1170,25 +1187,31 @@ bool AppInitSanityChecks()\n         return InitError(strprintf(_(\"Initialization sanity check failed. %s is shutting down.\"), _(PACKAGE_NAME)));\n \n     // Probe the data directory lock to give an early error message, if possible\n+    // We cannot hold the data directory lock here, as the forking for daemon() hasn't yet happened,\n+    // and a fork will cause weird behavior to it.\n     return LockDataDirectory(true);\n }\n \n-bool AppInitMain(boost::thread_group& threadGroup, CScheduler& scheduler)\n+bool AppInitLockDataDirectory()\n {\n-    const CChainParams& chainparams = Params();\n-    // ********************************************************* Step 4a: application initialization\n     // After daemonization get the data directory lock again and hold on to it until exit\n     // This creates a slight window for a race condition to happen, however this condition is harmless: it\n     // will at most make us exit without printing a message to console.\n     if (!LockDataDirectory(false)) {\n         // Detailed error printed inside LockDataDirectory\n         return false;\n     }\n+    return true;\n+}\n \n+bool AppInitMain(boost::thread_group& threadGroup, CScheduler& scheduler)\n+{\n+    const CChainParams& chainparams = Params();\n+    // ********************************************************* Step 4a: application initialization\n #ifndef WIN32\n     CreatePidFile(GetPidFile(), getpid());\n #endif\n-    if (GetBoolArg(\"-shrinkdebugfile\", logCategories == BCLog::NONE)) {\n+    if (gArgs.GetBoolArg(\"-shrinkdebugfile\", logCategories == BCLog::NONE)) {\n         // Do this first since it both loads a bunch of debug.log into memory,\n         // and because this needs to happen before any other debug.log printing\n         ShrinkDebugFile();\n@@ -1201,7 +1224,7 @@ bool AppInitMain(boost::thread_group& threadGroup, CScheduler& scheduler)\n         LogPrintf(\"Startup time: %s\\n\", DateTimeStrFormat(\"%Y-%m-%d %H:%M:%S\", GetTime()));\n     LogPrintf(\"Default data directory %s\\n\", GetDefaultDataDir().string());\n     LogPrintf(\"Using data directory %s\\n\", GetDataDir().string());\n-    LogPrintf(\"Using config file %s\\n\", GetConfigFile(GetArg(\"-conf\", BITCOIN_CONF_FILENAME)).string());\n+    LogPrintf(\"Using config file %s\\n\", GetConfigFile(gArgs.GetArg(\"-conf\", BITCOIN_CONF_FILENAME)).string());\n     LogPrintf(\"Using at most %i automatic connections (%i file descriptors available)\\n\", nMaxConnections, nFD);\n \n     InitSignatureCache();\n@@ -1224,7 +1247,7 @@ bool AppInitMain(boost::thread_group& threadGroup, CScheduler& scheduler)\n      * that the server is there and will be ready later).  Warmup mode will\n      * be disabled when initialisation is finished.\n      */\n-    if (GetBoolArg(\"-server\", false))\n+    if (gArgs.GetBoolArg(\"-server\", false))\n     {\n         uiInterface.InitMessage.connect(SetRPCWarmupStatus);\n         if (!AppInitServers(threadGroup))\n@@ -1235,7 +1258,7 @@ bool AppInitMain(boost::thread_group& threadGroup, CScheduler& scheduler)\n \n     // ********************************************************* Step 5: verify wallet database integrity\n #ifdef ENABLE_WALLET\n-    if (!CWallet::Verify())\n+    if (!VerifyWallets())\n         return false;\n #endif\n     // ********************************************************* Step 6: network initialization\n@@ -1250,7 +1273,6 @@ bool AppInitMain(boost::thread_group& threadGroup, CScheduler& scheduler)\n \n     peerLogic.reset(new PeerLogicValidation(&connman));\n     RegisterValidationInterface(peerLogic.get());\n-    RegisterNodeSignals(GetNodeSignals());\n \n     // sanitize comments per BIP-0014, format user agent and check total size\n     std::vector<std::string> uacomments;\n@@ -1281,12 +1303,12 @@ bool AppInitMain(boost::thread_group& threadGroup, CScheduler& scheduler)\n     }\n \n     // Check for host lookup allowed before parsing any network related parameters\n-    fNameLookup = GetBoolArg(\"-dns\", DEFAULT_NAME_LOOKUP);\n+    fNameLookup = gArgs.GetBoolArg(\"-dns\", DEFAULT_NAME_LOOKUP);\n \n-    bool proxyRandomize = GetBoolArg(\"-proxyrandomize\", DEFAULT_PROXYRANDOMIZE);\n+    bool proxyRandomize = gArgs.GetBoolArg(\"-proxyrandomize\", DEFAULT_PROXYRANDOMIZE);\n     // -proxy sets a proxy for all outgoing network traffic\n     // -noproxy (or -proxy=0) as well as the empty string can be used to not set a proxy, this is the default\n-    std::string proxyArg = GetArg(\"-proxy\", \"\");\n+    std::string proxyArg = gArgs.GetArg(\"-proxy\", \"\");\n     SetLimited(NET_TOR);\n     if (proxyArg != \"\" && proxyArg != \"0\") {\n         CService proxyAddr;\n@@ -1308,7 +1330,7 @@ bool AppInitMain(boost::thread_group& threadGroup, CScheduler& scheduler)\n     // -onion can be used to set only a proxy for .onion, or override normal proxy for .onion addresses\n     // -noonion (or -onion=0) disables connecting to .onion entirely\n     // An empty string is used to not override the onion proxy (in which case it defaults to -proxy set above, or none)\n-    std::string onionArg = GetArg(\"-onion\", \"\");\n+    std::string onionArg = gArgs.GetArg(\"-onion\", \"\");\n     if (onionArg != \"\") {\n         if (onionArg == \"0\") { // Handle -noonion/-onion=0\n             SetLimited(NET_TOR); // set onions as unreachable\n@@ -1326,9 +1348,9 @@ bool AppInitMain(boost::thread_group& threadGroup, CScheduler& scheduler)\n     }\n \n     // see Step 2: parameter interactions for more information about these\n-    fListen = GetBoolArg(\"-listen\", DEFAULT_LISTEN);\n-    fDiscover = GetBoolArg(\"-discover\", true);\n-    fRelayTxes = !GetBoolArg(\"-blocksonly\", DEFAULT_BLOCKSONLY);\n+    fListen = gArgs.GetBoolArg(\"-listen\", DEFAULT_LISTEN);\n+    fDiscover = gArgs.GetBoolArg(\"-discover\", true);\n+    fRelayTxes = !gArgs.GetBoolArg(\"-blocksonly\", DEFAULT_BLOCKSONLY);\n \n     for (const std::string& strAddr : gArgs.GetArgs(\"-externalip\")) {\n         CService addrLocal;\n@@ -1348,27 +1370,27 @@ bool AppInitMain(boost::thread_group& threadGroup, CScheduler& scheduler)\n     uint64_t nMaxOutboundLimit = 0; //unlimited unless -maxuploadtarget is set\n     uint64_t nMaxOutboundTimeframe = MAX_UPLOAD_TIMEFRAME;\n \n-    if (IsArgSet(\"-maxuploadtarget\")) {\n-        nMaxOutboundLimit = GetArg(\"-maxuploadtarget\", DEFAULT_MAX_UPLOAD_TARGET)*1024*1024;\n+    if (gArgs.IsArgSet(\"-maxuploadtarget\")) {\n+        nMaxOutboundLimit = gArgs.GetArg(\"-maxuploadtarget\", DEFAULT_MAX_UPLOAD_TARGET)*1024*1024;\n     }\n \n     // ********************************************************* Step 7: load block chain\n \n-    fReindex = GetBoolArg(\"-reindex\", false);\n-    bool fReindexChainState = GetBoolArg(\"-reindex-chainstate\", false);\n+    fReindex = gArgs.GetBoolArg(\"-reindex\", false);\n+    bool fReindexChainState = gArgs.GetBoolArg(\"-reindex-chainstate\", false);\n \n     // cache size calculations\n-    int64_t nTotalCache = (GetArg(\"-dbcache\", nDefaultDbCache) << 20);\n+    int64_t nTotalCache = (gArgs.GetArg(\"-dbcache\", nDefaultDbCache) << 20);\n     nTotalCache = std::max(nTotalCache, nMinDbCache << 20); // total cache cannot be less than nMinDbCache\n     nTotalCache = std::min(nTotalCache, nMaxDbCache << 20); // total cache cannot be greater than nMaxDbcache\n     int64_t nBlockTreeDBCache = nTotalCache / 8;\n-    nBlockTreeDBCache = std::min(nBlockTreeDBCache, (GetBoolArg(\"-txindex\", DEFAULT_TXINDEX) ? nMaxBlockDBAndTxIndexCache : nMaxBlockDBCache) << 20);\n+    nBlockTreeDBCache = std::min(nBlockTreeDBCache, (gArgs.GetBoolArg(\"-txindex\", DEFAULT_TXINDEX) ? nMaxBlockDBAndTxIndexCache : nMaxBlockDBCache) << 20);\n     nTotalCache -= nBlockTreeDBCache;\n     int64_t nCoinDBCache = std::min(nTotalCache / 2, (nTotalCache / 4) + (1 << 23)); // use 25%-50% of the remainder for disk cache\n     nCoinDBCache = std::min(nCoinDBCache, nMaxCoinsDBCache << 20); // cap total coins db cache\n     nTotalCache -= nCoinDBCache;\n     nCoinCacheUsage = nTotalCache; // the rest goes to in-memory cache\n-    int64_t nMempoolSizeMax = GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000;\n+    int64_t nMempoolSizeMax = gArgs.GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000;\n     LogPrintf(\"Cache configuration:\\n\");\n     LogPrintf(\"* Using %.1fMiB for block index database\\n\", nBlockTreeDBCache * (1.0 / 1024 / 1024));\n     LogPrintf(\"* Using %.1fMiB for chain state database\\n\", nCoinDBCache * (1.0 / 1024 / 1024));\n@@ -1390,24 +1412,22 @@ bool AppInitMain(boost::thread_group& threadGroup, CScheduler& scheduler)\n                 delete pcoinscatcher;\n                 delete pblocktree;\n \n-                pblocktree = new CBlockTreeDB(nBlockTreeDBCache, false, fReindex);\n-                pcoinsdbview = new CCoinsViewDB(nCoinDBCache, false, fReindex || fReindexChainState);\n-                pcoinscatcher = new CCoinsViewErrorCatcher(pcoinsdbview);\n+                pblocktree = new CBlockTreeDB(nBlockTreeDBCache, false, fReset);\n \n-                if (fReindex) {\n+                if (fReset) {\n                     pblocktree->WriteReindexing(true);\n                     //If we're reindexing in prune mode, wipe away unusable block files and all undo data files\n                     if (fPruneMode)\n                         CleanupBlockRevFiles();\n-                } else {\n-                    // If necessary, upgrade from older database format.\n-                    if (!pcoinsdbview->Upgrade()) {\n-                        strLoadError = _(\"Error upgrading chainstate database\");\n-                        break;\n-                    }\n                 }\n+\n                 if (fRequestShutdown) break;\n \n+                // LoadBlockIndex will load fTxIndex from the db, or set it if\n+                // we're reindexing. It will also load fHavePruned if we've\n+                // ever removed a block file from disk.\n+                // Note that it also sets fReindex based on the disk flag!\n+                // From here on out fReindex and fReset mean something different!\n                 if (!LoadBlockIndex(chainparams)) {\n                     strLoadError = _(\"Error loading block database\");\n                     break;\n@@ -1418,15 +1438,9 @@ bool AppInitMain(boost::thread_group& threadGroup, CScheduler& scheduler)\n                 if (!mapBlockIndex.empty() && mapBlockIndex.count(chainparams.GetConsensus().hashGenesisBlock) == 0)\n                     return InitError(_(\"Incorrect or no genesis block found. Wrong datadir for network?\"));\n \n-                // Initialize the block index (no-op if non-empty database was already loaded)\n-                if (!InitBlockIndex(chainparams)) {\n-                    strLoadError = _(\"Error initializing block database\");\n-                    break;\n-                }\n-\n                 // Check for changed -txindex state\n-                if (fTxIndex != GetBoolArg(\"-txindex\", DEFAULT_TXINDEX)) {\n-                    strLoadError = _(\"You need to rebuild the database using -reindex-chainstate to change -txindex\");\n+                if (fTxIndex != gArgs.GetBoolArg(\"-txindex\", DEFAULT_TXINDEX)) {\n+                    strLoadError = _(\"You need to rebuild the database using -reindex to change -txindex\");\n                     break;\n                 }\n \n@@ -1437,43 +1451,82 @@ bool AppInitMain(boost::thread_group& threadGroup, CScheduler& scheduler)\n                     break;\n                 }\n \n+                // At this point blocktree args are consistent with what's on disk.\n+                // If we're not mid-reindex (based on disk + args), add a genesis block on disk\n+                // (otherwise we use the one already on disk).\n+                // This is called again in ThreadImport after the reindex completes.\n+                if (!fReindex && !LoadGenesisBlock(chainparams)) {\n+                    strLoadError = _(\"Error initializing block database\");\n+                    break;\n+                }\n+\n+                // At this point we're either in reindex or we've loaded a useful\n+                // block tree into mapBlockIndex!\n+\n+                pcoinsdbview = new CCoinsViewDB(nCoinDBCache, false, fReset || fReindexChainState);\n+                pcoinscatcher = new CCoinsViewErrorCatcher(pcoinsdbview);\n+\n+                // If necessary, upgrade from older database format.\n+                // This is a no-op if we cleared the coinsviewdb with -reindex or -reindex-chainstate\n+                if (!pcoinsdbview->Upgrade()) {\n+                    strLoadError = _(\"Error upgrading chainstate database\");\n+                    break;\n+                }\n+\n+                // ReplayBlocks is a no-op if we cleared the coinsviewdb with -reindex or -reindex-chainstate\n                 if (!ReplayBlocks(chainparams, pcoinsdbview)) {\n                     strLoadError = _(\"Unable to replay blocks. You will need to rebuild the database using -reindex-chainstate.\");\n                     break;\n                 }\n+\n+                // The on-disk coinsdb is now in a good state, create the cache\n                 pcoinsTip = new CCoinsViewCache(pcoinscatcher);\n-                LoadChainTip(chainparams);\n \n-                if (!fReindex && chainActive.Tip() != NULL) {\n+                bool is_coinsview_empty = fReset || fReindexChainState || pcoinsTip->GetBestBlock().IsNull();\n+                if (!is_coinsview_empty) {\n+                    // LoadChainTip sets chainActive based on pcoinsTip's best block\n+                    if (!LoadChainTip(chainparams)) {\n+                        strLoadError = _(\"Error initializing block database\");\n+                        break;\n+                    }\n+                    assert(chainActive.Tip() != nullptr);\n+                }\n+\n+                if (!fReset) {\n+                    // Note that RewindBlockIndex MUST run even if we're about to -reindex-chainstate.\n+                    // It both disconnects blocks based on chainActive, and drops block data in\n+                    // mapBlockIndex based on lack of available witness data.\n                     uiInterface.InitMessage(_(\"Rewinding blocks...\"));\n                     if (!RewindBlockIndex(chainparams)) {\n                         strLoadError = _(\"Unable to rewind the database to a pre-fork state. You will need to redownload the blockchain\");\n                         break;\n                     }\n                 }\n \n-                uiInterface.InitMessage(_(\"Verifying blocks...\"));\n-                if (fHavePruned && GetArg(\"-checkblocks\", DEFAULT_CHECKBLOCKS) > MIN_BLOCKS_TO_KEEP) {\n-                    LogPrintf(\"Prune: pruned datadir may not have more than %d blocks; only checking available blocks\",\n-                        MIN_BLOCKS_TO_KEEP);\n-                }\n+                if (!is_coinsview_empty) {\n+                    uiInterface.InitMessage(_(\"Verifying blocks...\"));\n+                    if (fHavePruned && gArgs.GetArg(\"-checkblocks\", DEFAULT_CHECKBLOCKS) > MIN_BLOCKS_TO_KEEP) {\n+                        LogPrintf(\"Prune: pruned datadir may not have more than %d blocks; only checking available blocks\",\n+                            MIN_BLOCKS_TO_KEEP);\n+                    }\n \n-                {\n-                    LOCK(cs_main);\n-                    CBlockIndex* tip = chainActive.Tip();\n-                    RPCNotifyBlockChange(true, tip);\n-                    if (tip && tip->nTime > GetAdjustedTime() + 2 * 60 * 60) {\n-                        strLoadError = _(\"The block database contains a block which appears to be from the future. \"\n-                                \"This may be due to your computer's date and time being set incorrectly. \"\n-                                \"Only rebuild the block database if you are sure that your computer's date and time are correct\");\n-                        break;\n+                    {\n+                        LOCK(cs_main);\n+                        CBlockIndex* tip = chainActive.Tip();\n+                        RPCNotifyBlockChange(true, tip);\n+                        if (tip && tip->nTime > GetAdjustedTime() + 2 * 60 * 60) {\n+                            strLoadError = _(\"The block database contains a block which appears to be from the future. \"\n+                                    \"This may be due to your computer's date and time being set incorrectly. \"\n+                                    \"Only rebuild the block database if you are sure that your computer's date and time are correct\");\n+                            break;\n+                        }\n                     }\n-                }\n \n-                if (!CVerifyDB().VerifyDB(chainparams, pcoinsdbview, GetArg(\"-checklevel\", DEFAULT_CHECKLEVEL),\n-                              GetArg(\"-checkblocks\", DEFAULT_CHECKBLOCKS))) {\n-                    strLoadError = _(\"Corrupted block database detected\");\n-                    break;\n+                    if (!CVerifyDB().VerifyDB(chainparams, pcoinsdbview, gArgs.GetArg(\"-checklevel\", DEFAULT_CHECKLEVEL),\n+                                  gArgs.GetArg(\"-checkblocks\", DEFAULT_CHECKBLOCKS))) {\n+                        strLoadError = _(\"Corrupted block database detected\");\n+                        break;\n+                    }\n                 }\n             } catch (const std::exception& e) {\n                 LogPrintf(\"%s\\n\", e.what());\n@@ -1525,7 +1578,7 @@ bool AppInitMain(boost::thread_group& threadGroup, CScheduler& scheduler)\n \n     // ********************************************************* Step 8: load wallet\n #ifdef ENABLE_WALLET\n-    if (!CWallet::InitLoadWallet())\n+    if (!OpenWallets())\n         return false;\n #else\n     LogPrintf(\"No wallet support compiled in!\\n\");\n@@ -1563,13 +1616,13 @@ bool AppInitMain(boost::thread_group& threadGroup, CScheduler& scheduler)\n \n     // Either install a handler to notify us when genesis activates, or set fHaveGenesis directly.\n     // No locking, as this happens before any background thread is started.\n-    if (chainActive.Tip() == NULL) {\n+    if (chainActive.Tip() == nullptr) {\n         uiInterface.NotifyBlockTip.connect(BlockNotifyGenesisWait);\n     } else {\n         fHaveGenesis = true;\n     }\n \n-    if (IsArgSet(\"-blocknotify\"))\n+    if (gArgs.IsArgSet(\"-blocknotify\"))\n         uiInterface.NotifyBlockTip.connect(BlockNotifyCallback);\n \n     std::vector<fs::path> vImportFiles;\n@@ -1590,16 +1643,23 @@ bool AppInitMain(boost::thread_group& threadGroup, CScheduler& scheduler)\n \n     // ********************************************************* Step 11: start node\n \n+    int chain_active_height;\n+\n     //// debug print\n-    LogPrintf(\"mapBlockIndex.size() = %u\\n\",   mapBlockIndex.size());\n-    LogPrintf(\"nBestHeight = %d\\n\",                   chainActive.Height());\n-    if (GetBoolArg(\"-listenonion\", DEFAULT_LISTEN_ONION))\n+    {\n+        LOCK(cs_main);\n+        LogPrintf(\"mapBlockIndex.size() = %u\\n\", mapBlockIndex.size());\n+        chain_active_height = chainActive.Height();\n+    }\n+    LogPrintf(\"nBestHeight = %d\\n\", chain_active_height);\n+\n+    if (gArgs.GetBoolArg(\"-listenonion\", DEFAULT_LISTEN_ONION))\n         StartTorControl(threadGroup, scheduler);\n \n     Discover(threadGroup);\n \n     // Map ports with UPnP\n-    MapPort(GetBoolArg(\"-upnp\", DEFAULT_UPNP));\n+    MapPort(gArgs.GetBoolArg(\"-upnp\", DEFAULT_UPNP));\n \n     CConnman::Options connOptions;\n     connOptions.nLocalServices = nLocalServices;\n@@ -1608,10 +1668,12 @@ bool AppInitMain(boost::thread_group& threadGroup, CScheduler& scheduler)\n     connOptions.nMaxOutbound = std::min(MAX_OUTBOUND_CONNECTIONS, connOptions.nMaxConnections);\n     connOptions.nMaxAddnode = MAX_ADDNODE_CONNECTIONS;\n     connOptions.nMaxFeeler = 1;\n-    connOptions.nBestHeight = chainActive.Height();\n+    connOptions.nBestHeight = chain_active_height;\n     connOptions.uiInterface = &uiInterface;\n-    connOptions.nSendBufferMaxSize = 1000*GetArg(\"-maxsendbuffer\", DEFAULT_MAXSENDBUFFER);\n-    connOptions.nReceiveFloodSize = 1000*GetArg(\"-maxreceivebuffer\", DEFAULT_MAXRECEIVEBUFFER);\n+    connOptions.m_msgproc = peerLogic.get();\n+    connOptions.nSendBufferMaxSize = 1000*gArgs.GetArg(\"-maxsendbuffer\", DEFAULT_MAXSENDBUFFER);\n+    connOptions.nReceiveFloodSize = 1000*gArgs.GetArg(\"-maxreceivebuffer\", DEFAULT_MAXRECEIVEBUFFER);\n+    connOptions.m_added_nodes = gArgs.GetArgs(\"-addnode\");\n \n     connOptions.nMaxOutboundTimeframe = nMaxOutboundTimeframe;\n     connOptions.nMaxOutboundLimit = nMaxOutboundLimit;\n@@ -1642,10 +1704,16 @@ bool AppInitMain(boost::thread_group& threadGroup, CScheduler& scheduler)\n         connOptions.vWhitelistedRange.push_back(subnet);\n     }\n \n-    if (gArgs.IsArgSet(\"-seednode\")) {\n-        connOptions.vSeedNodes = gArgs.GetArgs(\"-seednode\");\n-    }\n+    connOptions.vSeedNodes = gArgs.GetArgs(\"-seednode\");\n \n+    // Initiate outbound connections unless connect=0\n+    connOptions.m_use_addrman_outgoing = !gArgs.IsArgSet(\"-connect\");\n+    if (!connOptions.m_use_addrman_outgoing) {\n+        const auto connect = gArgs.GetArgs(\"-connect\");\n+        if (connect.size() != 1 || connect[0] != \"0\") {\n+            connOptions.m_specified_outgoing = connect;\n+        }\n+    }\n     if (!connman.Start(scheduler, connOptions)) {\n         return false;\n     }\n@@ -1656,9 +1724,7 @@ bool AppInitMain(boost::thread_group& threadGroup, CScheduler& scheduler)\n     uiInterface.InitMessage(_(\"Done loading\"));\n \n #ifdef ENABLE_WALLET\n-    for (CWalletRef pwallet : vpwallets) {\n-        pwallet->postInitProcess(scheduler);\n-    }\n+    StartWallets(scheduler);\n #endif\n \n     return !fRequestShutdown;"
      },
      {
        "sha": "a0a824738cfe723ce68bbf0d1f01e3f508e1f85c",
        "filename": "src/init.h",
        "status": "modified",
        "additions": 11,
        "deletions": 5,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/init.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/init.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.h?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -27,27 +27,33 @@ void InitLogging();\n void InitParameterInteraction();\n \n /** Initialize bitcoin core: Basic context setup.\n- *  @note This can be done before daemonization.\n+ *  @note This can be done before daemonization. Do not call Shutdown() if this function fails.\n  *  @pre Parameters should be parsed and config file should be read.\n  */\n bool AppInitBasicSetup();\n /**\n  * Initialization: parameter interaction.\n- * @note This can be done before daemonization.\n+ * @note This can be done before daemonization. Do not call Shutdown() if this function fails.\n  * @pre Parameters should be parsed and config file should be read, AppInitBasicSetup should have been called.\n  */\n bool AppInitParameterInteraction();\n /**\n  * Initialization sanity checks: ecc init, sanity checks, dir lock.\n- * @note This can be done before daemonization.\n+ * @note This can be done before daemonization. Do not call Shutdown() if this function fails.\n  * @pre Parameters should be parsed and config file should be read, AppInitParameterInteraction should have been called.\n  */\n bool AppInitSanityChecks();\n /**\n- * Bitcoin core main initialization.\n- * @note This should only be done after daemonization.\n+ * Lock bitcoin core data directory.\n+ * @note This should only be done after daemonization. Do not call Shutdown() if this function fails.\n  * @pre Parameters should be parsed and config file should be read, AppInitSanityChecks should have been called.\n  */\n+bool AppInitLockDataDirectory();\n+/**\n+ * Bitcoin core main initialization.\n+ * @note This should only be done after daemonization. Call Shutdown() if this function fails.\n+ * @pre Parameters should be parsed and config file should be read, AppInitLockDataDirectory should have been called.\n+ */\n bool AppInitMain(boost::thread_group& threadGroup, CScheduler& scheduler);\n \n /** The help message mode determines what help message to show */"
      },
      {
        "sha": "315a3978c8243ba2b21807d1b990ceeb2c48e863",
        "filename": "src/key.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/key.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/key.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key.cpp?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -13,7 +13,7 @@\n #include <secp256k1.h>\n #include <secp256k1_recovery.h>\n \n-static secp256k1_context* secp256k1_context_sign = NULL;\n+static secp256k1_context* secp256k1_context_sign = nullptr;\n \n /** These functions are taken from the libsecp256k1 distribution and are very ugly. */\n static int ec_privkey_import_der(const secp256k1_context* ctx, unsigned char *out32, const unsigned char *privkey, size_t privkeylen) {\n@@ -165,7 +165,7 @@ bool CKey::Sign(const uint256 &hash, std::vector<unsigned char>& vchSig, uint32_\n     unsigned char extra_entropy[32] = {0};\n     WriteLE32(extra_entropy, test_case);\n     secp256k1_ecdsa_signature sig;\n-    int ret = secp256k1_ecdsa_sign(secp256k1_context_sign, &sig, hash.begin(), begin(), secp256k1_nonce_function_rfc6979, test_case ? extra_entropy : NULL);\n+    int ret = secp256k1_ecdsa_sign(secp256k1_context_sign, &sig, hash.begin(), begin(), secp256k1_nonce_function_rfc6979, test_case ? extra_entropy : nullptr);\n     assert(ret);\n     secp256k1_ecdsa_signature_serialize_der(secp256k1_context_sign, (unsigned char*)vchSig.data(), &nSigLen, &sig);\n     vchSig.resize(nSigLen);\n@@ -192,7 +192,7 @@ bool CKey::SignCompact(const uint256 &hash, std::vector<unsigned char>& vchSig)\n     vchSig.resize(65);\n     int rec = -1;\n     secp256k1_ecdsa_recoverable_signature sig;\n-    int ret = secp256k1_ecdsa_sign_recoverable(secp256k1_context_sign, &sig, hash.begin(), begin(), secp256k1_nonce_function_rfc6979, NULL);\n+    int ret = secp256k1_ecdsa_sign_recoverable(secp256k1_context_sign, &sig, hash.begin(), begin(), secp256k1_nonce_function_rfc6979, nullptr);\n     assert(ret);\n     secp256k1_ecdsa_recoverable_signature_serialize_compact(secp256k1_context_sign, (unsigned char*)&vchSig[1], &rec, &sig);\n     assert(ret);\n@@ -289,10 +289,10 @@ bool ECC_InitSanityCheck() {\n }\n \n void ECC_Start() {\n-    assert(secp256k1_context_sign == NULL);\n+    assert(secp256k1_context_sign == nullptr);\n \n     secp256k1_context *ctx = secp256k1_context_create(SECP256K1_CONTEXT_SIGN);\n-    assert(ctx != NULL);\n+    assert(ctx != nullptr);\n \n     {\n         // Pass in a random blinding seed to the secp256k1 context.\n@@ -307,7 +307,7 @@ void ECC_Start() {\n \n void ECC_Stop() {\n     secp256k1_context *ctx = secp256k1_context_sign;\n-    secp256k1_context_sign = NULL;\n+    secp256k1_context_sign = nullptr;\n \n     if (ctx) {\n         secp256k1_context_destroy(ctx);"
      },
      {
        "sha": "54b5be2270f62eeac1077f0ecc7a82d6556c72cb",
        "filename": "src/key.h",
        "status": "modified",
        "additions": 2,
        "deletions": 5,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/key.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/key.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key.h?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -56,11 +56,6 @@ class CKey\n         keydata.resize(32);\n     }\n \n-    //! Destructor (again necessary because of memlocking).\n-    ~CKey()\n-    {\n-    }\n-\n     friend bool operator==(const CKey& a, const CKey& b)\n     {\n         return a.fCompressed == b.fCompressed &&\n@@ -172,6 +167,8 @@ struct CExtKey {\n     {\n         unsigned int len = ::ReadCompactSize(s);\n         unsigned char code[BIP32_EXTKEY_SIZE];\n+        if (len != BIP32_EXTKEY_SIZE)\n+            throw std::runtime_error(\"Invalid extended key size\\n\");\n         s.read((char *)&code[0], len);\n         Decode(code);\n     }"
      },
      {
        "sha": "9b85ddb0ecb113b97a8a373281abcb678a31caa2",
        "filename": "src/keystore.h",
        "status": "modified",
        "additions": 14,
        "deletions": 18,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/keystore.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/keystore.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/keystore.h?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -30,7 +30,7 @@ class CKeyStore\n     //! Check whether a key corresponding to a given address is present in the store.\n     virtual bool HaveKey(const CKeyID &address) const =0;\n     virtual bool GetKey(const CKeyID &address, CKey& keyOut) const =0;\n-    virtual void GetKeys(std::set<CKeyID> &setAddress) const =0;\n+    virtual std::set<CKeyID> GetKeys() const =0;\n     virtual bool GetPubKey(const CKeyID &address, CPubKey& vchPubKeyOut) const =0;\n \n     //! Support for BIP 0013 : see https://github.com/bitcoin/bips/blob/master/bip-0013.mediawiki\n@@ -71,18 +71,14 @@ class CBasicKeyStore : public CKeyStore\n         }\n         return result;\n     }\n-    void GetKeys(std::set<CKeyID> &setAddress) const override\n+    std::set<CKeyID> GetKeys() const override\n     {\n-        setAddress.clear();\n-        {\n-            LOCK(cs_KeyStore);\n-            KeyMap::const_iterator mi = mapKeys.begin();\n-            while (mi != mapKeys.end())\n-            {\n-                setAddress.insert((*mi).first);\n-                mi++;\n-            }\n+        LOCK(cs_KeyStore);\n+        std::set<CKeyID> set_address;\n+        for (const auto& mi : mapKeys) {\n+            set_address.insert(mi.first);\n         }\n+        return set_address;\n     }\n     bool GetKey(const CKeyID &address, CKey &keyOut) const override\n     {\n@@ -97,14 +93,14 @@ class CBasicKeyStore : public CKeyStore\n         }\n         return false;\n     }\n-    virtual bool AddCScript(const CScript& redeemScript) override;\n-    virtual bool HaveCScript(const CScriptID &hash) const override;\n-    virtual bool GetCScript(const CScriptID &hash, CScript& redeemScriptOut) const override;\n+    bool AddCScript(const CScript& redeemScript) override;\n+    bool HaveCScript(const CScriptID &hash) const override;\n+    bool GetCScript(const CScriptID &hash, CScript& redeemScriptOut) const override;\n \n-    virtual bool AddWatchOnly(const CScript &dest) override;\n-    virtual bool RemoveWatchOnly(const CScript &dest) override;\n-    virtual bool HaveWatchOnly(const CScript &dest) const override;\n-    virtual bool HaveWatchOnly() const override;\n+    bool AddWatchOnly(const CScript &dest) override;\n+    bool RemoveWatchOnly(const CScript &dest) override;\n+    bool HaveWatchOnly(const CScript &dest) const override;\n+    bool HaveWatchOnly() const override;\n };\n \n typedef std::vector<unsigned char, secure_allocator<unsigned char> > CKeyingMaterial;"
      },
      {
        "sha": "287afdbdcb90c7f8ba1dacd3a842660b22bdab0b",
        "filename": "src/leveldb/db/memtable.cc",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/leveldb/db/memtable.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/leveldb/db/memtable.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/db/memtable.cc?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -101,7 +101,7 @@ void MemTable::Add(SequenceNumber s, ValueType type,\n   p += 8;\n   p = EncodeVarint32(p, val_size);\n   memcpy(p, value.data(), val_size);\n-  assert((p + val_size) - buf == encoded_len);\n+  assert(p + val_size == buf + encoded_len);\n   table_.Insert(buf);\n }\n "
      },
      {
        "sha": "2cb6d80ed3cf9a14f48dcbd80fc430efaaca3cc0",
        "filename": "src/leveldb/db/version_set.cc",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/leveldb/db/version_set.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/leveldb/db/version_set.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/db/version_set.cc?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -20,7 +20,7 @@\n \n namespace leveldb {\n \n-static int TargetFileSize(const Options* options) {\n+static size_t TargetFileSize(const Options* options) {\n   return options->max_file_size;\n }\n "
      },
      {
        "sha": "d79a02230d57fe085949936b26b9a7af413e07b8",
        "filename": "src/leveldb/port/atomic_pointer.h",
        "status": "modified",
        "additions": 25,
        "deletions": 22,
        "changes": 47,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/leveldb/port/atomic_pointer.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/leveldb/port/atomic_pointer.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/port/atomic_pointer.h?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -46,6 +46,30 @@\n namespace leveldb {\n namespace port {\n \n+// AtomicPointer based on <cstdatomic> if available\n+#if defined(LEVELDB_ATOMIC_PRESENT)\n+class AtomicPointer {\n+ private:\n+  std::atomic<void*> rep_;\n+ public:\n+  AtomicPointer() { }\n+  explicit AtomicPointer(void* v) : rep_(v) { }\n+  inline void* Acquire_Load() const {\n+    return rep_.load(std::memory_order_acquire);\n+  }\n+  inline void Release_Store(void* v) {\n+    rep_.store(v, std::memory_order_release);\n+  }\n+  inline void* NoBarrier_Load() const {\n+    return rep_.load(std::memory_order_relaxed);\n+  }\n+  inline void NoBarrier_Store(void* v) {\n+    rep_.store(v, std::memory_order_relaxed);\n+  }\n+};\n+\n+#else\n+\n // Define MemoryBarrier() if available\n // Windows on x86\n #if defined(OS_WIN) && defined(COMPILER_MSVC) && defined(ARCH_CPU_X86_FAMILY)\n@@ -142,28 +166,6 @@ class AtomicPointer {\n   }\n };\n \n-// AtomicPointer based on <cstdatomic>\n-#elif defined(LEVELDB_ATOMIC_PRESENT)\n-class AtomicPointer {\n- private:\n-  std::atomic<void*> rep_;\n- public:\n-  AtomicPointer() { }\n-  explicit AtomicPointer(void* v) : rep_(v) { }\n-  inline void* Acquire_Load() const {\n-    return rep_.load(std::memory_order_acquire);\n-  }\n-  inline void Release_Store(void* v) {\n-    rep_.store(v, std::memory_order_release);\n-  }\n-  inline void* NoBarrier_Load() const {\n-    return rep_.load(std::memory_order_relaxed);\n-  }\n-  inline void NoBarrier_Store(void* v) {\n-    rep_.store(v, std::memory_order_relaxed);\n-  }\n-};\n-\n // Atomic pointer based on sparc memory barriers\n #elif defined(__sparcv9) && defined(__GNUC__)\n class AtomicPointer {\n@@ -228,6 +230,7 @@ class AtomicPointer {\n #else\n #error Please implement AtomicPointer for this platform.\n \n+#endif\n #endif\n \n #undef LEVELDB_HAVE_MEMORY_BARRIER"
      },
      {
        "sha": "5b1d027de556eb6b308dee1ccea88995bcb038d3",
        "filename": "src/leveldb/port/port_example.h",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/leveldb/port/port_example.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/leveldb/port/port_example.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/port/port_example.h?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -129,6 +129,10 @@ extern bool Snappy_Uncompress(const char* input_data, size_t input_length,\n // The concatenation of all \"data[0,n-1]\" fragments is the heap profile.\n extern bool GetHeapProfile(void (*func)(void*, const char*, int), void* arg);\n \n+// Determine whether a working accelerated crc32 implementation exists\n+// Returns true if AcceleratedCRC32C is safe to call\n+bool HasAcceleratedCRC32C();\n+\n // Extend the CRC to include the first n bytes of buf.\n //\n // Returns zero if the CRC cannot be extended using acceleration, else returns"
      },
      {
        "sha": "ec39e921957f6507e3eb5f5ed5b6e15fea69e527",
        "filename": "src/leveldb/port/port_posix.cc",
        "status": "modified",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/leveldb/port/port_posix.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/leveldb/port/port_posix.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/port/port_posix.cc?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -8,6 +8,10 @@\n #include <stdio.h>\n #include <string.h>\n \n+#if (defined(__x86_64__) || defined(__i386__)) && defined(__GNUC__)\n+#include <cpuid.h>\n+#endif\n+\n namespace leveldb {\n namespace port {\n \n@@ -49,5 +53,15 @@ void InitOnce(OnceType* once, void (*initializer)()) {\n   PthreadCall(\"once\", pthread_once(once, initializer));\n }\n \n+bool HasAcceleratedCRC32C() {\n+#if (defined(__x86_64__) || defined(__i386__)) && defined(__GNUC__)\n+  unsigned int eax, ebx, ecx, edx;\n+  __get_cpuid(1, &eax, &ebx, &ecx, &edx);\n+  return (ecx & (1 << 20)) != 0;\n+#else\n+  return false;\n+#endif\n+}\n+\n }  // namespace port\n }  // namespace leveldb"
      },
      {
        "sha": "d85fa5d63fe0fc593cb2c9c12471d884622189b6",
        "filename": "src/leveldb/port/port_posix.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/leveldb/port/port_posix.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/leveldb/port/port_posix.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/port/port_posix.h?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -152,6 +152,7 @@ inline bool GetHeapProfile(void (*func)(void*, const char*, int), void* arg) {\n   return false;\n }\n \n+bool HasAcceleratedCRC32C();\n uint32_t AcceleratedCRC32C(uint32_t crc, const char* buf, size_t size);\n \n } // namespace port"
      },
      {
        "sha": "2d49c21dd8b0eb08fa0fd33411c50f2d277c94d6",
        "filename": "src/leveldb/port/port_posix_sse.cc",
        "status": "modified",
        "additions": 0,
        "deletions": 19,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/leveldb/port/port_posix_sse.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/leveldb/port/port_posix_sse.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/port/port_posix_sse.cc?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -19,7 +19,6 @@\n #include <intrin.h>\n #elif defined(__GNUC__) && defined(__SSE4_2__)\n #include <nmmintrin.h>\n-#include <cpuid.h>\n #endif\n \n #endif  // defined(LEVELDB_PLATFORM_POSIX_SSE)\n@@ -48,20 +47,6 @@ static inline uint64_t LE_LOAD64(const uint8_t *p) {\n \n #endif  // defined(_M_X64) || defined(__x86_64__)\n \n-static inline bool HaveSSE42() {\n-#if defined(_MSC_VER)\n-  int cpu_info[4];\n-  __cpuid(cpu_info, 1);\n-  return (cpu_info[2] & (1 << 20)) != 0;\n-#elif defined(__GNUC__)\n-  unsigned int eax, ebx, ecx, edx;\n-  __get_cpuid(1, &eax, &ebx, &ecx, &edx);\n-  return (ecx & (1 << 20)) != 0;\n-#else\n-  return false;\n-#endif\n-}\n-\n #endif  // defined(LEVELDB_PLATFORM_POSIX_SSE)\n \n // For further improvements see Intel publication at:\n@@ -70,10 +55,6 @@ uint32_t AcceleratedCRC32C(uint32_t crc, const char* buf, size_t size) {\n #if !defined(LEVELDB_PLATFORM_POSIX_SSE)\n   return 0;\n #else\n-  static bool have = HaveSSE42();\n-  if (!have) {\n-    return 0;\n-  }\n \n   const uint8_t *p = reinterpret_cast<const uint8_t *>(buf);\n   const uint8_t *e = p + size;"
      },
      {
        "sha": "1be9e8d5b0b41ea458b42bb17f2e3a18eefac315",
        "filename": "src/leveldb/port/port_win.cc",
        "status": "modified",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/leveldb/port/port_win.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/leveldb/port/port_win.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/port/port_win.cc?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -32,6 +32,7 @@\n \n #include <windows.h>\n #include <cassert>\n+#include <intrin.h>\n \n namespace leveldb {\n namespace port {\n@@ -143,5 +144,15 @@ void AtomicPointer::NoBarrier_Store(void* v) {\n   rep_ = v;\n }\n \n+bool HasAcceleratedCRC32C() {\n+#if defined(__x86_64__) || defined(__i386__)\n+  int cpu_info[4];\n+  __cpuid(cpu_info, 1);\n+  return (cpu_info[2] & (1 << 20)) != 0;\n+#else\n+  return false;\n+#endif\n+}\n+\n }\n }"
      },
      {
        "sha": "e8bf46ef27cd689912cb910e32385bfc55edf3b5",
        "filename": "src/leveldb/port/port_win.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/leveldb/port/port_win.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/leveldb/port/port_win.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/port/port_win.h?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -168,6 +168,7 @@ inline bool GetHeapProfile(void (*func)(void*, const char*, int), void* arg) {\n   return false;\n }\n \n+bool HasAcceleratedCRC32C();\n uint32_t AcceleratedCRC32C(uint32_t crc, const char* buf, size_t size);\n \n }"
      },
      {
        "sha": "b3f40eeeed45f5b2f1b6fafdceb0bddb5691e2e1",
        "filename": "src/leveldb/util/crc32c.cc",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/leveldb/util/crc32c.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/leveldb/util/crc32c.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/util/crc32c.cc?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -288,6 +288,10 @@ static inline uint32_t LE_LOAD32(const uint8_t *p) {\n // Determine if the CPU running this program can accelerate the CRC32C\n // calculation.\n static bool CanAccelerateCRC32C() {\n+  if (!port::HasAcceleratedCRC32C())\n+    return false;\n+\n+  // Double-check that the accelerated implementation functions correctly.\n   // port::AcceleretedCRC32C returns zero when unable to accelerate.\n   static const char kTestCRCBuffer[] = \"TestCRCBuffer\";\n   static const char kBufSize = sizeof(kTestCRCBuffer) - 1;"
      },
      {
        "sha": "db6160c8f19929e9517e371ba2295e0d0e38e421",
        "filename": "src/leveldb/util/logging.cc",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/leveldb/util/logging.cc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/leveldb/util/logging.cc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb/util/logging.cc?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -49,7 +49,7 @@ bool ConsumeDecimalNumber(Slice* in, uint64_t* val) {\n   uint64_t v = 0;\n   int digits = 0;\n   while (!in->empty()) {\n-    char c = (*in)[0];\n+    unsigned char c = (*in)[0];\n     if (c >= '0' && c <= '9') {\n       ++digits;\n       const int delta = (c - '0');"
      },
      {
        "sha": "7afc8b458d329f3987483668ecc3e73fad64c56b",
        "filename": "src/limitedmap.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/limitedmap.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/limitedmap.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/limitedmap.h?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -27,7 +27,7 @@ class limitedmap\n     size_type nMaxSize;\n \n public:\n-    limitedmap(size_type nMaxSizeIn)\n+    explicit limitedmap(size_type nMaxSizeIn)\n     {\n         assert(nMaxSizeIn > 0);\n         nMaxSize = nMaxSizeIn;"
      },
      {
        "sha": "3f07b4dac43b3a9c642fc88659be01300d48dd1c",
        "filename": "src/merkleblock.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 28,
        "changes": 38,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/merkleblock.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/merkleblock.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/merkleblock.cpp?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -9,33 +9,8 @@\n #include \"consensus/consensus.h\"\n #include \"utilstrencodings.h\"\n \n-CMerkleBlock::CMerkleBlock(const CBlock& block, CBloomFilter& filter)\n-{\n-    header = block.GetBlockHeader();\n \n-    std::vector<bool> vMatch;\n-    std::vector<uint256> vHashes;\n-\n-    vMatch.reserve(block.vtx.size());\n-    vHashes.reserve(block.vtx.size());\n-\n-    for (unsigned int i = 0; i < block.vtx.size(); i++)\n-    {\n-        const uint256& hash = block.vtx[i]->GetHash();\n-        if (filter.IsRelevantAndUpdate(*block.vtx[i]))\n-        {\n-            vMatch.push_back(true);\n-            vMatchedTxn.push_back(std::make_pair(i, hash));\n-        }\n-        else\n-            vMatch.push_back(false);\n-        vHashes.push_back(hash);\n-    }\n-\n-    txn = CPartialMerkleTree(vHashes, vMatch);\n-}\n-\n-CMerkleBlock::CMerkleBlock(const CBlock& block, const std::set<uint256>& txids)\n+CMerkleBlock::CMerkleBlock(const CBlock& block, CBloomFilter* filter, const std::set<uint256>* txids)\n {\n     header = block.GetBlockHeader();\n \n@@ -48,17 +23,24 @@ CMerkleBlock::CMerkleBlock(const CBlock& block, const std::set<uint256>& txids)\n     for (unsigned int i = 0; i < block.vtx.size(); i++)\n     {\n         const uint256& hash = block.vtx[i]->GetHash();\n-        if (txids.count(hash))\n+        if (txids && txids->count(hash)) {\n             vMatch.push_back(true);\n-        else\n+        } else if (filter && filter->IsRelevantAndUpdate(*block.vtx[i])) {\n+            vMatch.push_back(true);\n+            vMatchedTxn.emplace_back(i, hash);\n+        } else {\n             vMatch.push_back(false);\n+        }\n         vHashes.push_back(hash);\n     }\n \n     txn = CPartialMerkleTree(vHashes, vMatch);\n }\n \n uint256 CPartialMerkleTree::CalcHash(int height, unsigned int pos, const std::vector<uint256> &vTxid) {\n+    //we can never have zero txs in a merkle block, we always need the coinbase tx\n+    //if we do not have this assert, we can hit a memory access violation when indexing into vTxid\n+    assert(vTxid.size() != 0);\n     if (height == 0) {\n         // hash at height 0 is the txids themself\n         return vTxid[pos];"
      },
      {
        "sha": "6c05f2c1f81fc8b878cf54971d8cb1d7db532c3e",
        "filename": "src/merkleblock.h",
        "status": "modified",
        "additions": 15,
        "deletions": 5,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/merkleblock.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/merkleblock.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/merkleblock.h?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -63,7 +63,7 @@ class CPartialMerkleTree\n     bool fBad;\n \n     /** helper function to efficiently calculate the number of nodes at given height in the merkle tree */\n-    unsigned int CalcTreeWidth(int height) {\n+    unsigned int CalcTreeWidth(int height) const {\n         return (nTransactions+(1 << height)-1) >> height;\n     }\n \n@@ -121,6 +121,8 @@ class CPartialMerkleTree\n /**\n  * Used to relay blocks as header + vector<merkle branch>\n  * to filtered nodes.\n+ *\n+ * NOTE: The class assumes that the given CBlock has *at least* 1 transaction. If the CBlock has 0 txs, it will hit an assertion.\n  */\n class CMerkleBlock\n {\n@@ -129,19 +131,23 @@ class CMerkleBlock\n     CBlockHeader header;\n     CPartialMerkleTree txn;\n \n-public:\n-    /** Public only for unit testing and relay testing (not relayed) */\n+    /**\n+     * Public only for unit testing and relay testing (not relayed).\n+     *\n+     * Used only when a bloom filter is specified to allow\n+     * testing the transactions which matched the bloom filter.\n+     */\n     std::vector<std::pair<unsigned int, uint256> > vMatchedTxn;\n \n     /**\n      * Create from a CBlock, filtering transactions according to filter\n      * Note that this will call IsRelevantAndUpdate on the filter for each transaction,\n      * thus the filter will likely be modified.\n      */\n-    CMerkleBlock(const CBlock& block, CBloomFilter& filter);\n+    CMerkleBlock(const CBlock& block, CBloomFilter& filter) : CMerkleBlock(block, &filter, nullptr) { }\n \n     // Create from a CBlock, matching the txids in the set\n-    CMerkleBlock(const CBlock& block, const std::set<uint256>& txids);\n+    CMerkleBlock(const CBlock& block, const std::set<uint256>& txids) : CMerkleBlock(block, nullptr, &txids) { }\n \n     CMerkleBlock() {}\n \n@@ -152,6 +158,10 @@ class CMerkleBlock\n         READWRITE(header);\n         READWRITE(txn);\n     }\n+\n+private:\n+    // Combined constructor to consolidate code\n+    CMerkleBlock(const CBlock& block, CBloomFilter* filter, const std::set<uint256>* txids);\n };\n \n #endif // BITCOIN_MERKLEBLOCK_H"
      },
      {
        "sha": "a9989f4b1723614836e4cb8fd970dd019fe88ed8",
        "filename": "src/miner.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 41,
        "changes": 49,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/miner.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/miner.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.cpp?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -43,7 +43,6 @@\n // its ancestors.\n \n uint64_t nLastBlockTx = 0;\n-uint64_t nLastBlockSize = 0;\n uint64_t nLastBlockWeight = 0;\n \n int64_t UpdateTime(CBlockHeader* pblock, const Consensus::Params& consensusParams, const CBlockIndex* pindexPrev)\n@@ -64,18 +63,13 @@ int64_t UpdateTime(CBlockHeader* pblock, const Consensus::Params& consensusParam\n BlockAssembler::Options::Options() {\n     blockMinFeeRate = CFeeRate(DEFAULT_BLOCK_MIN_TX_FEE);\n     nBlockMaxWeight = DEFAULT_BLOCK_MAX_WEIGHT;\n-    nBlockMaxSize = DEFAULT_BLOCK_MAX_SIZE;\n }\n \n BlockAssembler::BlockAssembler(const CChainParams& params, const Options& options) : chainparams(params)\n {\n     blockMinFeeRate = options.blockMinFeeRate;\n     // Limit weight to between 4K and MAX_BLOCK_WEIGHT-4K for sanity:\n     nBlockMaxWeight = std::max<size_t>(4000, std::min<size_t>(MAX_BLOCK_WEIGHT - 4000, options.nBlockMaxWeight));\n-    // Limit size to between 1K and MAX_BLOCK_SERIALIZED_SIZE-1K for sanity:\n-    nBlockMaxSize = std::max<size_t>(1000, std::min<size_t>(MAX_BLOCK_SERIALIZED_SIZE - 1000, options.nBlockMaxSize));\n-    // Whether we need to account for byte usage (in addition to weight usage)\n-    fNeedSizeAccounting = (nBlockMaxSize < MAX_BLOCK_SERIALIZED_SIZE - 1000);\n }\n \n static BlockAssembler::Options DefaultOptions(const CChainParams& params)\n@@ -85,23 +79,10 @@ static BlockAssembler::Options DefaultOptions(const CChainParams& params)\n     // If only one is given, only restrict the specified resource.\n     // If both are given, restrict both.\n     BlockAssembler::Options options;\n-    options.nBlockMaxWeight = DEFAULT_BLOCK_MAX_WEIGHT;\n-    options.nBlockMaxSize = DEFAULT_BLOCK_MAX_SIZE;\n-    bool fWeightSet = false;\n-    if (IsArgSet(\"-blockmaxweight\")) {\n-        options.nBlockMaxWeight = GetArg(\"-blockmaxweight\", DEFAULT_BLOCK_MAX_WEIGHT);\n-        options.nBlockMaxSize = MAX_BLOCK_SERIALIZED_SIZE;\n-        fWeightSet = true;\n-    }\n-    if (IsArgSet(\"-blockmaxsize\")) {\n-        options.nBlockMaxSize = GetArg(\"-blockmaxsize\", DEFAULT_BLOCK_MAX_SIZE);\n-        if (!fWeightSet) {\n-            options.nBlockMaxWeight = options.nBlockMaxSize * WITNESS_SCALE_FACTOR;\n-        }\n-    }\n-    if (IsArgSet(\"-blockmintxfee\")) {\n+    options.nBlockMaxWeight = gArgs.GetArg(\"-blockmaxweight\", DEFAULT_BLOCK_MAX_WEIGHT);\n+    if (gArgs.IsArgSet(\"-blockmintxfee\")) {\n         CAmount n = 0;\n-        ParseMoney(GetArg(\"-blockmintxfee\", \"\"), n);\n+        ParseMoney(gArgs.GetArg(\"-blockmintxfee\", \"\"), n);\n         options.blockMinFeeRate = CFeeRate(n);\n     } else {\n         options.blockMinFeeRate = CFeeRate(DEFAULT_BLOCK_MIN_TX_FEE);\n@@ -116,7 +97,6 @@ void BlockAssembler::resetBlock()\n     inBlock.clear();\n \n     // Reserve space for coinbase tx\n-    nBlockSize = 1000;\n     nBlockWeight = 4000;\n     nBlockSigOpsCost = 400;\n     fIncludeWitness = false;\n@@ -145,13 +125,14 @@ std::unique_ptr<CBlockTemplate> BlockAssembler::CreateNewBlock(const CScript& sc\n \n     LOCK2(cs_main, mempool.cs);\n     CBlockIndex* pindexPrev = chainActive.Tip();\n+    assert(pindexPrev != nullptr);\n     nHeight = pindexPrev->nHeight + 1;\n \n     pblock->nVersion = ComputeBlockVersion(pindexPrev, chainparams.GetConsensus());\n     // -regtest only: allow overriding block.nVersion with\n     // -blockversion=N to test forking scenarios\n     if (chainparams.MineBlocksOnDemand())\n-        pblock->nVersion = GetArg(\"-blockversion\", pblock->nVersion);\n+        pblock->nVersion = gArgs.GetArg(\"-blockversion\", pblock->nVersion);\n \n     pblock->nTime = GetAdjustedTime();\n     const int64_t nMedianTimePast = pindexPrev->GetMedianTimePast();\n@@ -175,7 +156,6 @@ std::unique_ptr<CBlockTemplate> BlockAssembler::CreateNewBlock(const CScript& sc\n     int64_t nTime1 = GetTimeMicros();\n \n     nLastBlockTx = nBlockTx;\n-    nLastBlockSize = nBlockSize;\n     nLastBlockWeight = nBlockWeight;\n \n     // Create coinbase transaction.\n@@ -190,8 +170,7 @@ std::unique_ptr<CBlockTemplate> BlockAssembler::CreateNewBlock(const CScript& sc\n     pblocktemplate->vchCoinbaseCommitment = GenerateCoinbaseCommitment(*pblock, pindexPrev, chainparams.GetConsensus());\n     pblocktemplate->vTxFees[0] = -nFees;\n \n-    uint64_t nSerializeSize = GetSerializeSize(*pblock, SER_NETWORK, PROTOCOL_VERSION);\n-    LogPrintf(\"CreateNewBlock(): total size: %u block weight: %u txs: %u fees: %ld sigops %d\\n\", nSerializeSize, GetBlockWeight(*pblock), nBlockTx, nFees, nBlockSigOpsCost);\n+    LogPrintf(\"CreateNewBlock(): block weight: %u txs: %u fees: %ld sigops %d\\n\", GetBlockWeight(*pblock), nBlockTx, nFees, nBlockSigOpsCost);\n \n     // Fill in header\n     pblock->hashPrevBlock  = pindexPrev->GetBlockHash();\n@@ -224,7 +203,7 @@ void BlockAssembler::onlyUnconfirmed(CTxMemPool::setEntries& testSet)\n     }\n }\n \n-bool BlockAssembler::TestPackage(uint64_t packageSize, int64_t packageSigOpsCost)\n+bool BlockAssembler::TestPackage(uint64_t packageSize, int64_t packageSigOpsCost) const\n {\n     // TODO: switch to weight-based accounting for packages instead of vsize-based accounting.\n     if (nBlockWeight + WITNESS_SCALE_FACTOR * packageSize >= nBlockMaxWeight)\n@@ -238,22 +217,13 @@ bool BlockAssembler::TestPackage(uint64_t packageSize, int64_t packageSigOpsCost\n // - transaction finality (locktime)\n // - premature witness (in case segwit transactions are added to mempool before\n //   segwit activation)\n-// - serialized size (in case -blockmaxsize is in use)\n bool BlockAssembler::TestPackageTransactions(const CTxMemPool::setEntries& package)\n {\n-    uint64_t nPotentialBlockSize = nBlockSize; // only used with fNeedSizeAccounting\n     for (const CTxMemPool::txiter it : package) {\n         if (!IsFinalTx(it->GetTx(), nHeight, nLockTimeCutoff))\n             return false;\n         if (!fIncludeWitness && it->GetTx().HasWitness())\n             return false;\n-        if (fNeedSizeAccounting) {\n-            uint64_t nTxSize = ::GetSerializeSize(it->GetTx(), SER_NETWORK, PROTOCOL_VERSION);\n-            if (nPotentialBlockSize + nTxSize >= nBlockMaxSize) {\n-                return false;\n-            }\n-            nPotentialBlockSize += nTxSize;\n-        }\n     }\n     return true;\n }\n@@ -263,16 +233,13 @@ void BlockAssembler::AddToBlock(CTxMemPool::txiter iter)\n     pblock->vtx.emplace_back(iter->GetSharedTx());\n     pblocktemplate->vTxFees.push_back(iter->GetFee());\n     pblocktemplate->vTxSigOpsCost.push_back(iter->GetSigOpCost());\n-    if (fNeedSizeAccounting) {\n-        nBlockSize += ::GetSerializeSize(iter->GetTx(), SER_NETWORK, PROTOCOL_VERSION);\n-    }\n     nBlockWeight += iter->GetTxWeight();\n     ++nBlockTx;\n     nBlockSigOpsCost += iter->GetSigOpCost();\n     nFees += iter->GetFee();\n     inBlock.insert(iter);\n \n-    bool fPrintPriority = GetBoolArg(\"-printpriority\", DEFAULT_PRINTPRIORITY);\n+    bool fPrintPriority = gArgs.GetBoolArg(\"-printpriority\", DEFAULT_PRINTPRIORITY);\n     if (fPrintPriority) {\n         LogPrintf(\"fee %s txid %s\\n\",\n                   CFeeRate(iter->GetModifiedFee(), iter->GetTxSize()).ToString(),"
      },
      {
        "sha": "db165e71c6bb467730564208792ed635727557c7",
        "filename": "src/miner.h",
        "status": "modified",
        "additions": 7,
        "deletions": 10,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/miner.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/miner.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.h?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -11,8 +11,8 @@\n \n #include <stdint.h>\n #include <memory>\n-#include \"boost/multi_index_container.hpp\"\n-#include \"boost/multi_index/ordered_index.hpp\"\n+#include <boost/multi_index_container.hpp>\n+#include <boost/multi_index/ordered_index.hpp>\n \n class CBlockIndex;\n class CChainParams;\n@@ -33,7 +33,7 @@ struct CBlockTemplate\n // Container for tracking updates to ancestor feerate as we include (parent)\n // transactions in a block\n struct CTxMemPoolModifiedEntry {\n-    CTxMemPoolModifiedEntry(CTxMemPool::txiter entry)\n+    explicit CTxMemPoolModifiedEntry(CTxMemPool::txiter entry)\n     {\n         iter = entry;\n         nSizeWithAncestors = entry->GetSizeWithAncestors();\n@@ -116,7 +116,7 @@ typedef indexed_modified_transaction_set::index<ancestor_score>::type::iterator\n \n struct update_for_parent_inclusion\n {\n-    update_for_parent_inclusion(CTxMemPool::txiter it) : iter(it) {}\n+    explicit update_for_parent_inclusion(CTxMemPool::txiter it) : iter(it) {}\n \n     void operator() (CTxMemPoolModifiedEntry &e)\n     {\n@@ -139,13 +139,11 @@ class BlockAssembler\n \n     // Configuration parameters for the block size\n     bool fIncludeWitness;\n-    unsigned int nBlockMaxWeight, nBlockMaxSize;\n-    bool fNeedSizeAccounting;\n+    unsigned int nBlockMaxWeight;\n     CFeeRate blockMinFeeRate;\n \n     // Information on the current status of the block\n     uint64_t nBlockWeight;\n-    uint64_t nBlockSize;\n     uint64_t nBlockTx;\n     uint64_t nBlockSigOpsCost;\n     CAmount nFees;\n@@ -160,11 +158,10 @@ class BlockAssembler\n     struct Options {\n         Options();\n         size_t nBlockMaxWeight;\n-        size_t nBlockMaxSize;\n         CFeeRate blockMinFeeRate;\n     };\n \n-    BlockAssembler(const CChainParams& params);\n+    explicit BlockAssembler(const CChainParams& params);\n     BlockAssembler(const CChainParams& params, const Options& options);\n \n     /** Construct a new block template with coinbase to scriptPubKeyIn */\n@@ -187,7 +184,7 @@ class BlockAssembler\n     /** Remove confirmed (inBlock) entries from given set */\n     void onlyUnconfirmed(CTxMemPool::setEntries& testSet);\n     /** Test if a new package would \"fit\" in the block */\n-    bool TestPackage(uint64_t packageSize, int64_t packageSigOpsCost);\n+    bool TestPackage(uint64_t packageSize, int64_t packageSigOpsCost) const;\n     /** Perform checks on each transaction in a package:\n       * locktime, premature-witness, serialized size (if necessary)\n       * These checks should always succeed, and they're here"
      },
      {
        "sha": "ea3840a708614b3a915c1b11c6fd0e49ac7bfc46",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 144,
        "deletions": 140,
        "changes": 284,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -89,10 +89,6 @@ std::string strSubVersion;\n \n limitedmap<uint256, int64_t> mapAlreadyAskedFor(MAX_INV_SZ);\n \n-// Signals for message handling\n-static CNodeSignals g_signals;\n-CNodeSignals& GetNodeSignals() { return g_signals; }\n-\n void CConnman::AddOneShot(const std::string& strDest)\n {\n     LOCK(cs_vOneShots);\n@@ -101,7 +97,7 @@ void CConnman::AddOneShot(const std::string& strDest)\n \n unsigned short GetListenPort()\n {\n-    return (unsigned short)(GetArg(\"-port\", Params().GetDefaultPort()));\n+    return (unsigned short)(gArgs.GetArg(\"-port\", Params().GetDefaultPort()));\n }\n \n // find 'best' local address for a particular peer\n@@ -139,11 +135,10 @@ static std::vector<CAddress> convertSeed6(const std::vector<SeedSpec6> &vSeedsIn\n     const int64_t nOneWeek = 7*24*60*60;\n     std::vector<CAddress> vSeedsOut;\n     vSeedsOut.reserve(vSeedsIn.size());\n-    for (std::vector<SeedSpec6>::const_iterator i(vSeedsIn.begin()); i != vSeedsIn.end(); ++i)\n-    {\n+    for (const auto& seed_in : vSeedsIn) {\n         struct in6_addr ip;\n-        memcpy(&ip, i->addr, sizeof(ip));\n-        CAddress addr(CService(ip, i->port), NODE_NETWORK);\n+        memcpy(&ip, seed_in.addr, sizeof(ip));\n+        CAddress addr(CService(ip, seed_in.port), NODE_NETWORK);\n         addr.nTime = GetTime() - GetRand(nOneWeek) - nOneWeek;\n         vSeedsOut.push_back(addr);\n     }\n@@ -303,39 +298,45 @@ bool IsReachable(const CNetAddr& addr)\n CNode* CConnman::FindNode(const CNetAddr& ip)\n {\n     LOCK(cs_vNodes);\n-    for (CNode* pnode : vNodes)\n-        if ((CNetAddr)pnode->addr == ip)\n-            return (pnode);\n-    return NULL;\n+    for (CNode* pnode : vNodes) {\n+        if ((CNetAddr)pnode->addr == ip) {\n+            return pnode;\n+        }\n+    }\n+    return nullptr;\n }\n \n CNode* CConnman::FindNode(const CSubNet& subNet)\n {\n     LOCK(cs_vNodes);\n-    for (CNode* pnode : vNodes)\n-    if (subNet.Match((CNetAddr)pnode->addr))\n-        return (pnode);\n-    return NULL;\n+    for (CNode* pnode : vNodes) {\n+        if (subNet.Match((CNetAddr)pnode->addr)) {\n+            return pnode;\n+        }\n+    }\n+    return nullptr;\n }\n \n CNode* CConnman::FindNode(const std::string& addrName)\n {\n     LOCK(cs_vNodes);\n     for (CNode* pnode : vNodes) {\n         if (pnode->GetAddrName() == addrName) {\n-            return (pnode);\n+            return pnode;\n         }\n     }\n-    return NULL;\n+    return nullptr;\n }\n \n CNode* CConnman::FindNode(const CService& addr)\n {\n     LOCK(cs_vNodes);\n-    for (CNode* pnode : vNodes)\n-        if ((CService)pnode->addr == addr)\n-            return (pnode);\n-    return NULL;\n+    for (CNode* pnode : vNodes) {\n+        if ((CService)pnode->addr == addr) {\n+            return pnode;\n+        }\n+    }\n+    return nullptr;\n }\n \n bool CConnman::CheckIncomingNonce(uint64_t nonce)\n@@ -366,16 +367,16 @@ static CAddress GetBindAddress(SOCKET sock)\n \n CNode* CConnman::ConnectNode(CAddress addrConnect, const char *pszDest, bool fCountFailure)\n {\n-    if (pszDest == NULL) {\n+    if (pszDest == nullptr) {\n         if (IsLocal(addrConnect))\n-            return NULL;\n+            return nullptr;\n \n         // Look for an existing connection\n         CNode* pnode = FindNode((CService)addrConnect);\n         if (pnode)\n         {\n             LogPrintf(\"Failed to open new connection, already connected\\n\");\n-            return NULL;\n+            return nullptr;\n         }\n     }\n \n@@ -384,19 +385,16 @@ CNode* CConnman::ConnectNode(CAddress addrConnect, const char *pszDest, bool fCo\n         pszDest ? pszDest : addrConnect.ToString(),\n         pszDest ? 0.0 : (double)(GetAdjustedTime() - addrConnect.nTime)/3600.0);\n \n-    // Connect\n-    SOCKET hSocket;\n-    bool proxyConnectionFailed = false;\n-    if (pszDest ? ConnectSocketByName(addrConnect, hSocket, pszDest, Params().GetDefaultPort(), nConnectTimeout, &proxyConnectionFailed) :\n-                  ConnectSocket(addrConnect, hSocket, nConnectTimeout, &proxyConnectionFailed))\n-    {\n-        if (!IsSelectableSocket(hSocket)) {\n-            LogPrintf(\"Cannot create connection: non-selectable socket created (fd >= FD_SETSIZE ?)\\n\");\n-            CloseSocket(hSocket);\n-            return NULL;\n-        }\n-\n-        if (pszDest && addrConnect.IsValid()) {\n+    // Resolve\n+    const int default_port = Params().GetDefaultPort();\n+    if (pszDest) {\n+        std::vector<CService> resolved;\n+        if (Lookup(pszDest, resolved,  default_port, fNameLookup && !HaveNameProxy(), 256) && !resolved.empty()) {\n+            addrConnect = CAddress(resolved[GetRand(resolved.size())], NODE_NONE);\n+            if (!addrConnect.IsValid()) {\n+                LogPrint(BCLog::NET, \"Resolver returned invalid address %s for %s\", addrConnect.ToString(), pszDest);\n+                return nullptr;\n+            }\n             // It is possible that we already have a connection to the IP/port pszDest resolved to.\n             // In that case, drop the connection that was just created, and return the existing CNode instead.\n             // Also store the name we used to connect in that CNode, so that future FindNode() calls to that\n@@ -406,13 +404,40 @@ CNode* CConnman::ConnectNode(CAddress addrConnect, const char *pszDest, bool fCo\n             if (pnode)\n             {\n                 pnode->MaybeSetAddrName(std::string(pszDest));\n-                CloseSocket(hSocket);\n                 LogPrintf(\"Failed to open new connection, already connected\\n\");\n-                return NULL;\n+                return nullptr;\n             }\n         }\n+    }\n \n-        addrman.Attempt(addrConnect, fCountFailure);\n+    // Connect\n+    bool connected = false;\n+    SOCKET hSocket;\n+    proxyType proxy;\n+    if (addrConnect.IsValid()) {\n+        bool proxyConnectionFailed = false;\n+\n+        if (GetProxy(addrConnect.GetNetwork(), proxy))\n+            connected = ConnectThroughProxy(proxy, addrConnect.ToStringIP(), addrConnect.GetPort(), hSocket, nConnectTimeout, &proxyConnectionFailed);\n+        else // no proxy needed (none set for target network)\n+            connected = ConnectSocketDirectly(addrConnect, hSocket, nConnectTimeout);\n+        if (!proxyConnectionFailed) {\n+            // If a connection to the node was attempted, and failure (if any) is not caused by a problem connecting to\n+            // the proxy, mark this as an attempt.\n+            addrman.Attempt(addrConnect, fCountFailure);\n+        }\n+    } else if (pszDest && GetNameProxy(proxy)) {\n+        std::string host;\n+        int port = default_port;\n+        SplitHostPort(std::string(pszDest), port, host);\n+        connected = ConnectThroughProxy(proxy, host, port, hSocket, nConnectTimeout, nullptr);\n+    }\n+    if (connected) {\n+        if (!IsSelectableSocket(hSocket)) {\n+            LogPrintf(\"Cannot create connection: non-selectable socket created (fd >= FD_SETSIZE ?)\\n\");\n+            CloseSocket(hSocket);\n+            return nullptr;\n+        }\n \n         // Add node\n         NodeId id = GetNewNodeId();\n@@ -423,13 +448,9 @@ CNode* CConnman::ConnectNode(CAddress addrConnect, const char *pszDest, bool fCo\n         pnode->AddRef();\n \n         return pnode;\n-    } else if (!proxyConnectionFailed) {\n-        // If connecting to the node failed, and failure is not caused by a problem connecting to\n-        // the proxy, mark this as an attempt.\n-        addrman.Attempt(addrConnect, fCountFailure);\n     }\n \n-    return NULL;\n+    return nullptr;\n }\n \n void CConnman::DumpBanlist()\n@@ -478,10 +499,9 @@ void CConnman::ClearBanned()\n bool CConnman::IsBanned(CNetAddr ip)\n {\n     LOCK(cs_setBanned);\n-    for (banmap_t::iterator it = setBanned.begin(); it != setBanned.end(); it++)\n-    {\n-        CSubNet subNet = (*it).first;\n-        CBanEntry banEntry = (*it).second;\n+    for (const auto& it : setBanned) {\n+        CSubNet subNet = it.first;\n+        CBanEntry banEntry = it.second;\n \n         if (subNet.Match(ip) && GetTime() < banEntry.nBanUntil) {\n             return true;\n@@ -514,7 +534,7 @@ void CConnman::Ban(const CSubNet& subNet, const BanReason &banReason, int64_t ba\n     banEntry.banReason = banReason;\n     if (bantimeoffset <= 0)\n     {\n-        bantimeoffset = GetArg(\"-bantime\", DEFAULT_MISBEHAVING_BANTIME);\n+        bantimeoffset = gArgs.GetArg(\"-bantime\", DEFAULT_MISBEHAVING_BANTIME);\n         sinceUnixEpoch = false;\n     }\n     banEntry.nBanUntil = (sinceUnixEpoch ? 0 : GetTime() )+bantimeoffset;\n@@ -956,7 +976,7 @@ bool CConnman::AttemptToEvictConnection()\n     {\n         LOCK(cs_vNodes);\n \n-        for (CNode *node : vNodes) {\n+        for (const CNode* node : vNodes) {\n             if (node->fWhitelisted)\n                 continue;\n             if (!node->fInbound)\n@@ -966,7 +986,7 @@ bool CConnman::AttemptToEvictConnection()\n             NodeEvictionCandidate candidate = {node->GetId(), node->nTimeConnected, node->nMinPingUsecTime,\n                                                node->nLastBlockTime, node->nLastTXTime,\n                                                (node->nServices & nRelevantServices) == nRelevantServices,\n-                                               node->fRelayTxes, node->pfilter != NULL, node->addr, node->nKeyedNetGroup};\n+                                               node->fRelayTxes, node->pfilter != nullptr, node->addr, node->nKeyedNetGroup};\n             vEvictionCandidates.push_back(candidate);\n         }\n     }\n@@ -1034,9 +1054,9 @@ bool CConnman::AttemptToEvictConnection()\n     // Disconnect from the network group with the most connections\n     NodeId evicted = vEvictionCandidates.front().id;\n     LOCK(cs_vNodes);\n-    for(std::vector<CNode*>::const_iterator it(vNodes.begin()); it != vNodes.end(); ++it) {\n-        if ((*it)->GetId() == evicted) {\n-            (*it)->fDisconnect = true;\n+    for (CNode* pnode : vNodes) {\n+        if (pnode->GetId() == evicted) {\n+            pnode->fDisconnect = true;\n             return true;\n         }\n     }\n@@ -1060,9 +1080,9 @@ void CConnman::AcceptConnection(const ListenSocket& hListenSocket) {\n     bool whitelisted = hListenSocket.whitelisted || IsWhitelistedRange(addr);\n     {\n         LOCK(cs_vNodes);\n-        for (CNode* pnode : vNodes)\n-            if (pnode->fInbound)\n-                nInbound++;\n+        for (const CNode* pnode : vNodes) {\n+            if (pnode->fInbound) nInbound++;\n+        }\n     }\n \n     if (hSocket == INVALID_SOCKET)\n@@ -1114,7 +1134,7 @@ void CConnman::AcceptConnection(const ListenSocket& hListenSocket) {\n     CNode* pnode = new CNode(id, nLocalServices, GetBestHeight(), hSocket, addr, CalculateKeyedNetGroup(addr), nonce, addr_bind, \"\", true);\n     pnode->AddRef();\n     pnode->fWhitelisted = whitelisted;\n-    GetNodeSignals().InitializeNode(pnode, *this);\n+    m_msgproc->InitializeNode(pnode);\n \n     LogPrint(BCLog::NET, \"connection from %s accepted\\n\", addr.ToString());\n \n@@ -1438,9 +1458,9 @@ void CConnman::WakeMessageHandler()\n void ThreadMapPort()\n {\n     std::string port = strprintf(\"%u\", GetListenPort());\n-    const char * multicastif = 0;\n-    const char * minissdpdpath = 0;\n-    struct UPNPDev * devlist = 0;\n+    const char * multicastif = nullptr;\n+    const char * minissdpdpath = nullptr;\n+    struct UPNPDev * devlist = nullptr;\n     char lanaddr[64];\n \n #ifndef UPNPDISCOVER_SUCCESS\n@@ -1510,21 +1530,21 @@ void ThreadMapPort()\n         {\n             r = UPNP_DeletePortMapping(urls.controlURL, data.first.servicetype, port.c_str(), \"TCP\", 0);\n             LogPrintf(\"UPNP_DeletePortMapping() returned: %d\\n\", r);\n-            freeUPNPDevlist(devlist); devlist = 0;\n+            freeUPNPDevlist(devlist); devlist = nullptr;\n             FreeUPNPUrls(&urls);\n             throw;\n         }\n     } else {\n         LogPrintf(\"No valid UPnP IGDs found\\n\");\n-        freeUPNPDevlist(devlist); devlist = 0;\n+        freeUPNPDevlist(devlist); devlist = nullptr;\n         if (r != 0)\n             FreeUPNPUrls(&urls);\n     }\n }\n \n void MapPort(bool fUseUPnP)\n {\n-    static boost::thread* upnp_thread = NULL;\n+    static boost::thread* upnp_thread = nullptr;\n \n     if (fUseUPnP)\n     {\n@@ -1539,7 +1559,7 @@ void MapPort(bool fUseUPnP)\n         upnp_thread->interrupt();\n         upnp_thread->join();\n         delete upnp_thread;\n-        upnp_thread = NULL;\n+        upnp_thread = nullptr;\n     }\n }\n \n@@ -1575,7 +1595,7 @@ void CConnman::ThreadDNSAddressSeed()\n     //  creating fewer identifying DNS requests, reduces trust by giving seeds\n     //  less influence on the network topology, and reduces traffic to the seeds.\n     if ((addrman.size() > 0) &&\n-        (!GetBoolArg(\"-forcednsseed\", DEFAULT_FORCEDNSSEED))) {\n+        (!gArgs.GetBoolArg(\"-forcednsseed\", DEFAULT_FORCEDNSSEED))) {\n         if (!interruptNet.sleep_for(std::chrono::seconds(11)))\n             return;\n \n@@ -1674,18 +1694,18 @@ void CConnman::ProcessOneShot()\n     }\n }\n \n-void CConnman::ThreadOpenConnections()\n+void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n {\n     // Connect to specific addresses\n-    if (gArgs.IsArgSet(\"-connect\"))\n+    if (!connect.empty())\n     {\n         for (int64_t nLoop = 0;; nLoop++)\n         {\n             ProcessOneShot();\n-            for (const std::string& strAddr : gArgs.GetArgs(\"-connect\"))\n+            for (const std::string& strAddr : connect)\n             {\n                 CAddress addr(CService(), NODE_NONE);\n-                OpenNetworkConnection(addr, false, NULL, strAddr.c_str());\n+                OpenNetworkConnection(addr, false, nullptr, strAddr.c_str());\n                 for (int i = 0; i < 10 && i < nLoop; i++)\n                 {\n                     if (!interruptNet.sleep_for(std::chrono::milliseconds(500)))\n@@ -1841,7 +1861,7 @@ void CConnman::ThreadOpenConnections()\n                 LogPrint(BCLog::NET, \"Making feeler connection to %s\\n\", addrConnect.ToString());\n             }\n \n-            OpenNetworkConnection(addrConnect, (int)setConnected.size() >= std::min(nMaxConnections - 1, 2), &grant, NULL, false, fFeeler);\n+            OpenNetworkConnection(addrConnect, (int)setConnected.size() >= std::min(nMaxConnections - 1, 2), &grant, nullptr, false, fFeeler);\n         }\n     }\n }\n@@ -1854,8 +1874,7 @@ std::vector<AddedNodeInfo> CConnman::GetAddedNodeInfo()\n     {\n         LOCK(cs_vAddedNodes);\n         ret.reserve(vAddedNodes.size());\n-        for (const std::string& strAddNode : vAddedNodes)\n-            lAddresses.push_back(strAddNode);\n+        std::copy(vAddedNodes.cbegin(), vAddedNodes.cend(), std::back_inserter(lAddresses));\n     }\n \n \n@@ -1901,11 +1920,6 @@ std::vector<AddedNodeInfo> CConnman::GetAddedNodeInfo()\n \n void CConnman::ThreadOpenAddedConnections()\n {\n-    {\n-        LOCK(cs_vAddedNodes);\n-        vAddedNodes = gArgs.GetArgs(\"-addnode\");\n-    }\n-\n     while (true)\n     {\n         CSemaphoreGrant grant(*semAddnode);\n@@ -1918,11 +1932,9 @@ void CConnman::ThreadOpenAddedConnections()\n                     // the addednodeinfo state might change.\n                     break;\n                 }\n-                // If strAddedNode is an IP/port, decode it immediately, so\n-                // OpenNetworkConnection can detect existing connections to that IP/port.\n                 tried = true;\n-                CService service(LookupNumeric(info.strAddedNode.c_str(), Params().GetDefaultPort()));\n-                OpenNetworkConnection(CAddress(service, NODE_NONE), false, &grant, info.strAddedNode.c_str(), false, false, true);\n+                CAddress addr(CService(), NODE_NONE);\n+                OpenNetworkConnection(addr, false, &grant, info.strAddedNode.c_str(), false, false, true);\n                 if (!interruptNet.sleep_for(std::chrono::milliseconds(500)))\n                     return;\n             }\n@@ -1966,7 +1978,7 @@ bool CConnman::OpenNetworkConnection(const CAddress& addrConnect, bool fCountFai\n     if (fAddnode)\n         pnode->fAddnode = true;\n \n-    GetNodeSignals().InitializeNode(pnode, *this);\n+    m_msgproc->InitializeNode(pnode);\n     {\n         LOCK(cs_vNodes);\n         vNodes.push_back(pnode);\n@@ -1996,16 +2008,16 @@ void CConnman::ThreadMessageHandler()\n                 continue;\n \n             // Receive messages\n-            bool fMoreNodeWork = GetNodeSignals().ProcessMessages(pnode, *this, flagInterruptMsgProc);\n+            bool fMoreNodeWork = m_msgproc->ProcessMessages(pnode, flagInterruptMsgProc);\n             fMoreWork |= (fMoreNodeWork && !pnode->fPauseSend);\n             if (flagInterruptMsgProc)\n                 return;\n-\n             // Send messages\n             {\n                 LOCK(pnode->cs_sendProcessing);\n-                GetNodeSignals().SendMessages(pnode, *this, flagInterruptMsgProc);\n+                m_msgproc->SendMessages(pnode, flagInterruptMsgProc);\n             }\n+\n             if (flagInterruptMsgProc)\n                 return;\n         }\n@@ -2076,6 +2088,7 @@ bool CConnman::BindListenPort(const CService &addrBind, std::string& strError, b\n \n     // Set to non-blocking, incoming connections will also inherit this\n     if (!SetSocketNonBlocking(hListenSocket, true)) {\n+        CloseSocket(hListenSocket);\n         strError = strprintf(\"BindListenPort: Setting listening socket to non-blocking failed, error %s\\n\", NetworkErrorString(WSAGetLastError()));\n         LogPrintf(\"%s\\n\", strError);\n         return false;\n@@ -2152,9 +2165,9 @@ void Discover(boost::thread_group& threadGroup)\n     struct ifaddrs* myaddrs;\n     if (getifaddrs(&myaddrs) == 0)\n     {\n-        for (struct ifaddrs* ifa = myaddrs; ifa != NULL; ifa = ifa->ifa_next)\n+        for (struct ifaddrs* ifa = myaddrs; ifa != nullptr; ifa = ifa->ifa_next)\n         {\n-            if (ifa->ifa_addr == NULL) continue;\n+            if (ifa->ifa_addr == nullptr) continue;\n             if ((ifa->ifa_flags & IFF_UP) == 0) continue;\n             if (strcmp(ifa->ifa_name, \"lo\") == 0) continue;\n             if (strcmp(ifa->ifa_name, \"lo0\") == 0) continue;\n@@ -2182,16 +2195,18 @@ void CConnman::SetNetworkActive(bool active)\n {\n     LogPrint(BCLog::NET, \"SetNetworkActive: %s\\n\", active);\n \n-    if (!active) {\n-        fNetworkActive = false;\n+    if (fNetworkActive == active) {\n+        return;\n+    }\n+\n+    fNetworkActive = active;\n \n+    if (!fNetworkActive) {\n         LOCK(cs_vNodes);\n         // Close sockets to all nodes\n         for (CNode* pnode : vNodes) {\n             pnode->CloseSocketDisconnect();\n         }\n-    } else {\n-        fNetworkActive = true;\n     }\n \n     uiInterface.NotifyNetworkActiveChanged(fNetworkActive);\n@@ -2205,14 +2220,12 @@ CConnman::CConnman(uint64_t nSeed0In, uint64_t nSeed1In) : nSeed0(nSeed0In), nSe\n     nLastNodeId = 0;\n     nSendBufferMaxSize = 0;\n     nReceiveFloodSize = 0;\n-    semOutbound = NULL;\n-    semAddnode = NULL;\n-    nMaxConnections = 0;\n-    nMaxOutbound = 0;\n-    nMaxAddnode = 0;\n-    nBestHeight = 0;\n-    clientInterface = NULL;\n+    semOutbound = nullptr;\n+    semAddnode = nullptr;\n     flagInterruptMsgProc = false;\n+\n+    Options connOptions;\n+    Init(connOptions);\n }\n \n NodeId CConnman::GetNewNodeId()\n@@ -2251,30 +2264,15 @@ bool CConnman::InitBinds(const std::vector<CService>& binds, const std::vector<C\n     return fBound;\n }\n \n-bool CConnman::Start(CScheduler& scheduler, Options connOptions)\n+bool CConnman::Start(CScheduler& scheduler, const Options& connOptions)\n {\n+    Init(connOptions);\n+\n     nTotalBytesRecv = 0;\n     nTotalBytesSent = 0;\n     nMaxOutboundTotalBytesSentInCycle = 0;\n     nMaxOutboundCycleStartTime = 0;\n \n-    nRelevantServices = connOptions.nRelevantServices;\n-    nLocalServices = connOptions.nLocalServices;\n-    nMaxConnections = connOptions.nMaxConnections;\n-    nMaxOutbound = std::min((connOptions.nMaxOutbound), nMaxConnections);\n-    nMaxAddnode = connOptions.nMaxAddnode;\n-    nMaxFeeler = connOptions.nMaxFeeler;\n-\n-    nSendBufferMaxSize = connOptions.nSendBufferMaxSize;\n-    nReceiveFloodSize = connOptions.nReceiveFloodSize;\n-\n-    nMaxOutboundLimit = connOptions.nMaxOutboundLimit;\n-    nMaxOutboundTimeframe = connOptions.nMaxOutboundTimeframe;\n-\n-    SetBestHeight(connOptions.nBestHeight);\n-\n-    clientInterface = connOptions.uiInterface;\n-\n     if (fListen && !InitBinds(connOptions.vBinds, connOptions.vWhiteBinds)) {\n         if (clientInterface) {\n             clientInterface->ThreadSafeMessageBox(\n@@ -2284,8 +2282,6 @@ bool CConnman::Start(CScheduler& scheduler, Options connOptions)\n         return false;\n     }\n \n-    vWhitelistedRange = connOptions.vWhitelistedRange;\n-\n     for (const auto& strDest : connOptions.vSeedNodes) {\n         AddOneShot(strDest);\n     }\n@@ -2328,18 +2324,19 @@ bool CConnman::Start(CScheduler& scheduler, Options connOptions)\n \n     fAddressesInitialized = true;\n \n-    if (semOutbound == NULL) {\n+    if (semOutbound == nullptr) {\n         // initialize semaphore\n         semOutbound = new CSemaphore(std::min((nMaxOutbound + nMaxFeeler), nMaxConnections));\n     }\n-    if (semAddnode == NULL) {\n+    if (semAddnode == nullptr) {\n         // initialize semaphore\n         semAddnode = new CSemaphore(nMaxAddnode);\n     }\n \n     //\n     // Start threads\n     //\n+    assert(m_msgproc);\n     InterruptSocks5(false);\n     interruptNet.reset();\n     flagInterruptMsgProc = false;\n@@ -2352,17 +2349,24 @@ bool CConnman::Start(CScheduler& scheduler, Options connOptions)\n     // Send and receive from sockets, accept connections\n     threadSocketHandler = std::thread(&TraceThread<std::function<void()> >, \"net\", std::function<void()>(std::bind(&CConnman::ThreadSocketHandler, this)));\n \n-    if (!GetBoolArg(\"-dnsseed\", true))\n+    if (!gArgs.GetBoolArg(\"-dnsseed\", true))\n         LogPrintf(\"DNS seeding disabled\\n\");\n     else\n         threadDNSAddressSeed = std::thread(&TraceThread<std::function<void()> >, \"dnsseed\", std::function<void()>(std::bind(&CConnman::ThreadDNSAddressSeed, this)));\n \n     // Initiate outbound connections from -addnode\n     threadOpenAddedConnections = std::thread(&TraceThread<std::function<void()> >, \"addcon\", std::function<void()>(std::bind(&CConnman::ThreadOpenAddedConnections, this)));\n \n-    // Initiate outbound connections unless connect=0\n-    if (!gArgs.IsArgSet(\"-connect\") || gArgs.GetArgs(\"-connect\").size() != 1 || gArgs.GetArgs(\"-connect\")[0] != \"0\")\n-        threadOpenConnections = std::thread(&TraceThread<std::function<void()> >, \"opencon\", std::function<void()>(std::bind(&CConnman::ThreadOpenConnections, this)));\n+    if (connOptions.m_use_addrman_outgoing && !connOptions.m_specified_outgoing.empty()) {\n+        if (clientInterface) {\n+            clientInterface->ThreadSafeMessageBox(\n+                _(\"Cannot provide specific connections and have addrman find outgoing connections at the same.\"),\n+                \"\", CClientUIInterface::MSG_ERROR);\n+        }\n+        return false;\n+    }\n+    if (connOptions.m_use_addrman_outgoing || !connOptions.m_specified_outgoing.empty())\n+        threadOpenConnections = std::thread(&TraceThread<std::function<void()> >, \"opencon\", std::function<void()>(std::bind(&CConnman::ThreadOpenConnections, this, connOptions.m_specified_outgoing)));\n \n     // Process messages\n     threadMessageHandler = std::thread(&TraceThread<std::function<void()> >, \"msghand\", std::function<void()>(std::bind(&CConnman::ThreadMessageHandler, this)));\n@@ -2450,18 +2454,19 @@ void CConnman::Stop()\n     vNodesDisconnected.clear();\n     vhListenSocket.clear();\n     delete semOutbound;\n-    semOutbound = NULL;\n+    semOutbound = nullptr;\n     delete semAddnode;\n-    semAddnode = NULL;\n+    semAddnode = nullptr;\n }\n \n void CConnman::DeleteNode(CNode* pnode)\n {\n     assert(pnode);\n     bool fUpdateConnectionTime = false;\n-    GetNodeSignals().FinalizeNode(pnode->GetId(), fUpdateConnectionTime);\n-    if(fUpdateConnectionTime)\n+    m_msgproc->FinalizeNode(pnode->GetId(), fUpdateConnectionTime);\n+    if(fUpdateConnectionTime) {\n         addrman.Connected(pnode->addr);\n+    }\n     delete pnode;\n }\n \n@@ -2499,9 +2504,8 @@ std::vector<CAddress> CConnman::GetAddresses()\n bool CConnman::AddNode(const std::string& strNode)\n {\n     LOCK(cs_vAddedNodes);\n-    for(std::vector<std::string>::const_iterator it = vAddedNodes.begin(); it != vAddedNodes.end(); ++it) {\n-        if (strNode == *it)\n-            return false;\n+    for (const std::string& it : vAddedNodes) {\n+        if (strNode == it) return false;\n     }\n \n     vAddedNodes.push_back(strNode);\n@@ -2527,9 +2531,11 @@ size_t CConnman::GetNodeCount(NumConnections flags)\n         return vNodes.size();\n \n     int nNum = 0;\n-    for(std::vector<CNode*>::const_iterator it = vNodes.begin(); it != vNodes.end(); ++it)\n-        if (flags & ((*it)->fInbound ? CONNECTIONS_IN : CONNECTIONS_OUT))\n+    for (const auto& pnode : vNodes) {\n+        if (flags & (pnode->fInbound ? CONNECTIONS_IN : CONNECTIONS_OUT)) {\n             nNum++;\n+        }\n+    }\n \n     return nNum;\n }\n@@ -2539,8 +2545,7 @@ void CConnman::GetNodeStats(std::vector<CNodeStats>& vstats)\n     vstats.clear();\n     LOCK(cs_vNodes);\n     vstats.reserve(vNodes.size());\n-    for(std::vector<CNode*>::iterator it = vNodes.begin(); it != vNodes.end(); ++it) {\n-        CNode* pnode = *it;\n+    for (CNode* pnode : vNodes) {\n         vstats.emplace_back();\n         pnode->copyStats(vstats.back());\n     }\n@@ -2691,7 +2696,6 @@ int CConnman::GetBestHeight() const\n }\n \n unsigned int CConnman::GetReceiveFloodSize() const { return nReceiveFloodSize; }\n-unsigned int CConnman::GetSendBufferSize() const{ return nSendBufferMaxSize; }\n \n CNode::CNode(NodeId idIn, ServiceFlags nLocalServicesIn, int nMyStartingHeightIn, SOCKET hSocketIn, const CAddress& addrIn, uint64_t nKeyedNetGroupIn, uint64_t nLocalHostNonceIn, const CAddress &addrBindIn, const std::string& addrNameIn, bool fInboundIn) :\n     nTimeConnected(GetSystemTimeInSeconds()),"
      },
      {
        "sha": "905d6eb95640dbd8b97f15afd736f329b79f56b1",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 40,
        "deletions": 22,
        "changes": 62,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -33,7 +33,6 @@\n #include <arpa/inet.h>\n #endif\n \n-#include <boost/signals2/signal.hpp>\n \n class CScheduler;\n class CNode;\n@@ -116,7 +115,7 @@ struct CSerializedNetMsg\n     std::string command;\n };\n \n-\n+class NetEventsInterface;\n class CConnman\n {\n public:\n@@ -138,22 +137,45 @@ class CConnman\n         int nMaxFeeler = 0;\n         int nBestHeight = 0;\n         CClientUIInterface* uiInterface = nullptr;\n+        NetEventsInterface* m_msgproc = nullptr;\n         unsigned int nSendBufferMaxSize = 0;\n         unsigned int nReceiveFloodSize = 0;\n         uint64_t nMaxOutboundTimeframe = 0;\n         uint64_t nMaxOutboundLimit = 0;\n         std::vector<std::string> vSeedNodes;\n         std::vector<CSubNet> vWhitelistedRange;\n         std::vector<CService> vBinds, vWhiteBinds;\n+        bool m_use_addrman_outgoing = true;\n+        std::vector<std::string> m_specified_outgoing;\n+        std::vector<std::string> m_added_nodes;\n     };\n+\n+    void Init(const Options& connOptions) {\n+        nLocalServices = connOptions.nLocalServices;\n+        nRelevantServices = connOptions.nRelevantServices;\n+        nMaxConnections = connOptions.nMaxConnections;\n+        nMaxOutbound = std::min(connOptions.nMaxOutbound, connOptions.nMaxConnections);\n+        nMaxAddnode = connOptions.nMaxAddnode;\n+        nMaxFeeler = connOptions.nMaxFeeler;\n+        nBestHeight = connOptions.nBestHeight;\n+        clientInterface = connOptions.uiInterface;\n+        m_msgproc = connOptions.m_msgproc;\n+        nSendBufferMaxSize = connOptions.nSendBufferMaxSize;\n+        nReceiveFloodSize = connOptions.nReceiveFloodSize;\n+        nMaxOutboundTimeframe = connOptions.nMaxOutboundTimeframe;\n+        nMaxOutboundLimit = connOptions.nMaxOutboundLimit;\n+        vWhitelistedRange = connOptions.vWhitelistedRange;\n+        vAddedNodes = connOptions.m_added_nodes;\n+    }\n+\n     CConnman(uint64_t seed0, uint64_t seed1);\n     ~CConnman();\n-    bool Start(CScheduler& scheduler, Options options);\n+    bool Start(CScheduler& scheduler, const Options& options);\n     void Stop();\n     void Interrupt();\n     bool GetNetworkActive() const { return fNetworkActive; };\n     void SetNetworkActive(bool active);\n-    bool OpenNetworkConnection(const CAddress& addrConnect, bool fCountFailure, CSemaphoreGrant *grantOutbound = NULL, const char *strDest = NULL, bool fOneShot = false, bool fFeeler = false, bool fAddnode = false);\n+    bool OpenNetworkConnection(const CAddress& addrConnect, bool fCountFailure, CSemaphoreGrant *grantOutbound = nullptr, const char *strDest = nullptr, bool fOneShot = false, bool fFeeler = false, bool fAddnode = false);\n     bool CheckIncomingNonce(uint64_t nonce);\n \n     bool ForNode(NodeId id, std::function<bool(CNode* pnode)> func);\n@@ -242,8 +264,6 @@ class CConnman\n     bool DisconnectNode(const std::string& node);\n     bool DisconnectNode(NodeId id);\n \n-    unsigned int GetSendBufferSize() const;\n-\n     ServiceFlags GetLocalServices() const;\n \n     //!set the max outbound target in bytes\n@@ -293,7 +313,7 @@ class CConnman\n     void ThreadOpenAddedConnections();\n     void AddOneShot(const std::string& strDest);\n     void ProcessOneShot();\n-    void ThreadOpenConnections();\n+    void ThreadOpenConnections(std::vector<std::string> connect);\n     void ThreadMessageHandler();\n     void AcceptConnection(const ListenSocket& hListenSocket);\n     void ThreadSocketHandler();\n@@ -381,6 +401,7 @@ class CConnman\n     int nMaxFeeler;\n     std::atomic<int> nBestHeight;\n     CClientUIInterface* clientInterface;\n+    NetEventsInterface* m_msgproc;\n \n     /** SipHasher seeds for deterministic randomness */\n     const uint64_t nSeed0, nSeed1;\n@@ -421,19 +442,18 @@ struct CombinerAll\n     }\n };\n \n-// Signals for message handling\n-struct CNodeSignals\n+/**\n+ * Interface for message handling\n+ */\n+class NetEventsInterface\n {\n-    boost::signals2::signal<bool (CNode*, CConnman&, std::atomic<bool>&), CombinerAll> ProcessMessages;\n-    boost::signals2::signal<bool (CNode*, CConnman&, std::atomic<bool>&), CombinerAll> SendMessages;\n-    boost::signals2::signal<void (CNode*, CConnman&)> InitializeNode;\n-    boost::signals2::signal<void (NodeId, bool&)> FinalizeNode;\n+public:\n+    virtual bool ProcessMessages(CNode* pnode, std::atomic<bool>& interrupt) = 0;\n+    virtual bool SendMessages(CNode* pnode, std::atomic<bool>& interrupt) = 0;\n+    virtual void InitializeNode(CNode* pnode) = 0;\n+    virtual void FinalizeNode(NodeId id, bool& update_connection_time) = 0;\n };\n \n-\n-CNodeSignals& GetNodeSignals();\n-\n-\n enum\n {\n     LOCAL_NONE,   // unknown\n@@ -455,7 +475,7 @@ bool AddLocal(const CNetAddr& addr, int nScore = LOCAL_NONE);\n bool RemoveLocal(const CService& addr);\n bool SeenLocal(const CService& addr);\n bool IsLocal(const CService& addr);\n-bool GetLocal(CService &addr, const CNetAddr *paddrPeer = NULL);\n+bool GetLocal(CService &addr, const CNetAddr *paddrPeer = nullptr);\n bool IsReachable(enum Network net);\n bool IsReachable(const CNetAddr &addr);\n CAddress GetLocalAddress(const CNetAddr *paddrPeer, ServiceFlags nLocalServices);\n@@ -684,13 +704,11 @@ class CNode\n \n     CNode(NodeId id, ServiceFlags nLocalServicesIn, int nMyStartingHeightIn, SOCKET hSocketIn, const CAddress &addrIn, uint64_t nKeyedNetGroupIn, uint64_t nLocalHostNonceIn, const CAddress &addrBindIn, const std::string &addrNameIn = \"\", bool fInboundIn = false);\n     ~CNode();\n+    CNode(const CNode&) = delete;\n+    CNode& operator=(const CNode&) = delete;\n \n private:\n-    CNode(const CNode&);\n-    void operator=(const CNode&);\n     const NodeId id;\n-\n-\n     const uint64_t nLocalHostNonce;\n     // Services offered to this peer\n     const ServiceFlags nLocalServices;"
      },
      {
        "sha": "7fced41d4fa70b4ccd86f2f142d6ee10024658bd",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 196,
        "deletions": 192,
        "changes": 388,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -123,11 +123,6 @@ namespace {\n     std::deque<std::pair<int64_t, MapRelay::iterator>> vRelayExpiration;\n } // namespace\n \n-//////////////////////////////////////////////////////////////////////////////\n-//\n-// Registration of network node signals.\n-//\n-\n namespace {\n \n struct CBlockReject {\n@@ -202,10 +197,10 @@ struct CNodeState {\n         fCurrentlyConnected = false;\n         nMisbehavior = 0;\n         fShouldBan = false;\n-        pindexBestKnownBlock = NULL;\n+        pindexBestKnownBlock = nullptr;\n         hashLastUnknownBlock.SetNull();\n-        pindexLastCommonBlock = NULL;\n-        pindexBestHeaderSent = NULL;\n+        pindexLastCommonBlock = nullptr;\n+        pindexBestHeaderSent = nullptr;\n         nUnconnectingHeaders = 0;\n         fSyncStarted = false;\n         nHeadersSyncTimeout = 0;\n@@ -230,7 +225,7 @@ std::map<NodeId, CNodeState> mapNodeState;\n CNodeState *State(NodeId pnode) {\n     std::map<NodeId, CNodeState>::iterator it = mapNodeState.find(pnode);\n     if (it == mapNodeState.end())\n-        return NULL;\n+        return nullptr;\n     return &it->second;\n }\n \n@@ -244,7 +239,7 @@ void UpdatePreferredDownload(CNode* node, CNodeState* state)\n     nPreferredDownload += state->fPreferredDownload;\n }\n \n-void PushNodeVersion(CNode *pnode, CConnman& connman, int64_t nTime)\n+void PushNodeVersion(CNode *pnode, CConnman* connman, int64_t nTime)\n {\n     ServiceFlags nLocalNodeServices = pnode->GetLocalServices();\n     uint64_t nonce = pnode->GetLocalNonce();\n@@ -255,7 +250,7 @@ void PushNodeVersion(CNode *pnode, CConnman& connman, int64_t nTime)\n     CAddress addrYou = (addr.IsRoutable() && !IsProxy(addr) ? addr : CAddress(CService(), addr.nServices));\n     CAddress addrMe = CAddress(CService(), nLocalNodeServices);\n \n-    connman.PushMessage(pnode, CNetMsgMaker(INIT_PROTO_VERSION).Make(NetMsgType::VERSION, PROTOCOL_VERSION, (uint64_t)nLocalNodeServices, nTime, addrYou, addrMe,\n+    connman->PushMessage(pnode, CNetMsgMaker(INIT_PROTO_VERSION).Make(NetMsgType::VERSION, PROTOCOL_VERSION, (uint64_t)nLocalNodeServices, nTime, addrYou, addrMe,\n             nonce, strSubVersion, nNodeStartingHeight, ::fRelayTxes));\n \n     if (fLogIPs) {\n@@ -265,56 +260,14 @@ void PushNodeVersion(CNode *pnode, CConnman& connman, int64_t nTime)\n     }\n }\n \n-void InitializeNode(CNode *pnode, CConnman& connman) {\n-    CAddress addr = pnode->addr;\n-    std::string addrName = pnode->GetAddrName();\n-    NodeId nodeid = pnode->GetId();\n-    {\n-        LOCK(cs_main);\n-        mapNodeState.emplace_hint(mapNodeState.end(), std::piecewise_construct, std::forward_as_tuple(nodeid), std::forward_as_tuple(addr, std::move(addrName)));\n-    }\n-    if(!pnode->fInbound)\n-        PushNodeVersion(pnode, connman, GetTime());\n-}\n-\n-void FinalizeNode(NodeId nodeid, bool& fUpdateConnectionTime) {\n-    fUpdateConnectionTime = false;\n-    LOCK(cs_main);\n-    CNodeState *state = State(nodeid);\n-\n-    if (state->fSyncStarted)\n-        nSyncStarted--;\n-\n-    if (state->nMisbehavior == 0 && state->fCurrentlyConnected) {\n-        fUpdateConnectionTime = true;\n-    }\n-\n-    for (const QueuedBlock& entry : state->vBlocksInFlight) {\n-        mapBlocksInFlight.erase(entry.hash);\n-    }\n-    EraseOrphansFor(nodeid);\n-    nPreferredDownload -= state->fPreferredDownload;\n-    nPeersWithValidatedDownloads -= (state->nBlocksInFlightValidHeaders != 0);\n-    assert(nPeersWithValidatedDownloads >= 0);\n-\n-    mapNodeState.erase(nodeid);\n-\n-    if (mapNodeState.empty()) {\n-        // Do a consistency check after the last peer is removed.\n-        assert(mapBlocksInFlight.empty());\n-        assert(nPreferredDownload == 0);\n-        assert(nPeersWithValidatedDownloads == 0);\n-    }\n-    LogPrint(BCLog::NET, \"Cleared nodestate for peer=%d\\n\", nodeid);\n-}\n-\n // Requires cs_main.\n // Returns a bool indicating whether we requested this block.\n // Also used if a block was /not/ received and timed out or started with another peer\n bool MarkBlockAsReceived(const uint256& hash) {\n     std::map<uint256, std::pair<NodeId, std::list<QueuedBlock>::iterator> >::iterator itInFlight = mapBlocksInFlight.find(hash);\n     if (itInFlight != mapBlocksInFlight.end()) {\n         CNodeState *state = State(itInFlight->second.first);\n+        assert(state != nullptr);\n         state->nBlocksInFlightValidHeaders -= itInFlight->second.second->fValidatedHeaders;\n         if (state->nBlocksInFlightValidHeaders == 0 && itInFlight->second.second->fValidatedHeaders) {\n             // Last validated block on the queue was received.\n@@ -336,9 +289,9 @@ bool MarkBlockAsReceived(const uint256& hash) {\n // Requires cs_main.\n // returns false, still setting pit, if the block was already in flight from the same peer\n // pit will only be valid as long as the same cs_main lock is being held\n-bool MarkBlockAsInFlight(NodeId nodeid, const uint256& hash, const CBlockIndex* pindex = NULL, std::list<QueuedBlock>::iterator** pit = NULL) {\n+bool MarkBlockAsInFlight(NodeId nodeid, const uint256& hash, const CBlockIndex* pindex = nullptr, std::list<QueuedBlock>::iterator** pit = nullptr) {\n     CNodeState *state = State(nodeid);\n-    assert(state != NULL);\n+    assert(state != nullptr);\n \n     // Short-circuit most stuff in case its from the same node\n     std::map<uint256, std::pair<NodeId, std::list<QueuedBlock>::iterator> >::iterator itInFlight = mapBlocksInFlight.find(hash);\n@@ -353,14 +306,14 @@ bool MarkBlockAsInFlight(NodeId nodeid, const uint256& hash, const CBlockIndex*\n     MarkBlockAsReceived(hash);\n \n     std::list<QueuedBlock>::iterator it = state->vBlocksInFlight.insert(state->vBlocksInFlight.end(),\n-            {hash, pindex, pindex != NULL, std::unique_ptr<PartiallyDownloadedBlock>(pit ? new PartiallyDownloadedBlock(&mempool) : NULL)});\n+            {hash, pindex, pindex != nullptr, std::unique_ptr<PartiallyDownloadedBlock>(pit ? new PartiallyDownloadedBlock(&mempool) : nullptr)});\n     state->nBlocksInFlight++;\n     state->nBlocksInFlightValidHeaders += it->fValidatedHeaders;\n     if (state->nBlocksInFlight == 1) {\n         // We're starting a block download (batch) from this peer.\n         state->nDownloadingSince = GetTimeMicros();\n     }\n-    if (state->nBlocksInFlightValidHeaders == 1 && pindex != NULL) {\n+    if (state->nBlocksInFlightValidHeaders == 1 && pindex != nullptr) {\n         nPeersWithValidatedDownloads++;\n     }\n     itInFlight = mapBlocksInFlight.insert(std::make_pair(hash, std::make_pair(nodeid, it))).first;\n@@ -372,12 +325,12 @@ bool MarkBlockAsInFlight(NodeId nodeid, const uint256& hash, const CBlockIndex*\n /** Check whether the last unknown block a peer advertised is not yet known. */\n void ProcessBlockAvailability(NodeId nodeid) {\n     CNodeState *state = State(nodeid);\n-    assert(state != NULL);\n+    assert(state != nullptr);\n \n     if (!state->hashLastUnknownBlock.IsNull()) {\n         BlockMap::iterator itOld = mapBlockIndex.find(state->hashLastUnknownBlock);\n         if (itOld != mapBlockIndex.end() && itOld->second->nChainWork > 0) {\n-            if (state->pindexBestKnownBlock == NULL || itOld->second->nChainWork >= state->pindexBestKnownBlock->nChainWork)\n+            if (state->pindexBestKnownBlock == nullptr || itOld->second->nChainWork >= state->pindexBestKnownBlock->nChainWork)\n                 state->pindexBestKnownBlock = itOld->second;\n             state->hashLastUnknownBlock.SetNull();\n         }\n@@ -387,22 +340,22 @@ void ProcessBlockAvailability(NodeId nodeid) {\n /** Update tracking information about which blocks a peer is assumed to have. */\n void UpdateBlockAvailability(NodeId nodeid, const uint256 &hash) {\n     CNodeState *state = State(nodeid);\n-    assert(state != NULL);\n+    assert(state != nullptr);\n \n     ProcessBlockAvailability(nodeid);\n \n     BlockMap::iterator it = mapBlockIndex.find(hash);\n     if (it != mapBlockIndex.end() && it->second->nChainWork > 0) {\n         // An actually better block was announced.\n-        if (state->pindexBestKnownBlock == NULL || it->second->nChainWork >= state->pindexBestKnownBlock->nChainWork)\n+        if (state->pindexBestKnownBlock == nullptr || it->second->nChainWork >= state->pindexBestKnownBlock->nChainWork)\n             state->pindexBestKnownBlock = it->second;\n     } else {\n         // An unknown block was announced; just assume that the latest one is the best one.\n         state->hashLastUnknownBlock = hash;\n     }\n }\n \n-void MaybeSetPeerAsAnnouncingHeaderAndIDs(NodeId nodeid, CConnman& connman) {\n+void MaybeSetPeerAsAnnouncingHeaderAndIDs(NodeId nodeid, CConnman* connman) {\n     AssertLockHeld(cs_main);\n     CNodeState* nodestate = State(nodeid);\n     if (!nodestate || !nodestate->fSupportsDesiredCmpctVersion) {\n@@ -417,20 +370,20 @@ void MaybeSetPeerAsAnnouncingHeaderAndIDs(NodeId nodeid, CConnman& connman) {\n                 return;\n             }\n         }\n-        connman.ForNode(nodeid, [&connman](CNode* pfrom){\n+        connman->ForNode(nodeid, [connman](CNode* pfrom){\n             bool fAnnounceUsingCMPCTBLOCK = false;\n             uint64_t nCMPCTBLOCKVersion = (pfrom->GetLocalServices() & NODE_WITNESS) ? 2 : 1;\n             if (lNodesAnnouncingHeaderAndIDs.size() >= 3) {\n                 // As per BIP152, we only get 3 of our peers to announce\n                 // blocks using compact encodings.\n-                connman.ForNode(lNodesAnnouncingHeaderAndIDs.front(), [&connman, fAnnounceUsingCMPCTBLOCK, nCMPCTBLOCKVersion](CNode* pnodeStop){\n-                    connman.PushMessage(pnodeStop, CNetMsgMaker(pnodeStop->GetSendVersion()).Make(NetMsgType::SENDCMPCT, fAnnounceUsingCMPCTBLOCK, nCMPCTBLOCKVersion));\n+                connman->ForNode(lNodesAnnouncingHeaderAndIDs.front(), [connman, fAnnounceUsingCMPCTBLOCK, nCMPCTBLOCKVersion](CNode* pnodeStop){\n+                    connman->PushMessage(pnodeStop, CNetMsgMaker(pnodeStop->GetSendVersion()).Make(NetMsgType::SENDCMPCT, fAnnounceUsingCMPCTBLOCK, nCMPCTBLOCKVersion));\n                     return true;\n                 });\n                 lNodesAnnouncingHeaderAndIDs.pop_front();\n             }\n             fAnnounceUsingCMPCTBLOCK = true;\n-            connman.PushMessage(pfrom, CNetMsgMaker(pfrom->GetSendVersion()).Make(NetMsgType::SENDCMPCT, fAnnounceUsingCMPCTBLOCK, nCMPCTBLOCKVersion));\n+            connman->PushMessage(pfrom, CNetMsgMaker(pfrom->GetSendVersion()).Make(NetMsgType::SENDCMPCT, fAnnounceUsingCMPCTBLOCK, nCMPCTBLOCKVersion));\n             lNodesAnnouncingHeaderAndIDs.push_back(pfrom->GetId());\n             return true;\n         });\n@@ -461,17 +414,17 @@ void FindNextBlocksToDownload(NodeId nodeid, unsigned int count, std::vector<con\n \n     vBlocks.reserve(vBlocks.size() + count);\n     CNodeState *state = State(nodeid);\n-    assert(state != NULL);\n+    assert(state != nullptr);\n \n     // Make sure pindexBestKnownBlock is up to date, we'll need it.\n     ProcessBlockAvailability(nodeid);\n \n-    if (state->pindexBestKnownBlock == NULL || state->pindexBestKnownBlock->nChainWork < chainActive.Tip()->nChainWork || state->pindexBestKnownBlock->nChainWork < UintToArith256(consensusParams.nMinimumChainWork)) {\n+    if (state->pindexBestKnownBlock == nullptr || state->pindexBestKnownBlock->nChainWork < chainActive.Tip()->nChainWork || state->pindexBestKnownBlock->nChainWork < nMinimumChainWork) {\n         // This peer has nothing interesting.\n         return;\n     }\n \n-    if (state->pindexLastCommonBlock == NULL) {\n+    if (state->pindexLastCommonBlock == nullptr) {\n         // Bootstrap quickly by guessing a parent of our best tip is the forking point.\n         // Guessing wrong in either direction is not a problem.\n         state->pindexLastCommonBlock = chainActive[std::min(state->pindexBestKnownBlock->nHeight, chainActive.Height())];\n@@ -543,10 +496,54 @@ void FindNextBlocksToDownload(NodeId nodeid, unsigned int count, std::vector<con\n \n } // namespace\n \n+void PeerLogicValidation::InitializeNode(CNode *pnode) {\n+    CAddress addr = pnode->addr;\n+    std::string addrName = pnode->GetAddrName();\n+    NodeId nodeid = pnode->GetId();\n+    {\n+        LOCK(cs_main);\n+        mapNodeState.emplace_hint(mapNodeState.end(), std::piecewise_construct, std::forward_as_tuple(nodeid), std::forward_as_tuple(addr, std::move(addrName)));\n+    }\n+    if(!pnode->fInbound)\n+        PushNodeVersion(pnode, connman, GetTime());\n+}\n+\n+void PeerLogicValidation::FinalizeNode(NodeId nodeid, bool& fUpdateConnectionTime) {\n+    fUpdateConnectionTime = false;\n+    LOCK(cs_main);\n+    CNodeState *state = State(nodeid);\n+    assert(state != nullptr);\n+\n+    if (state->fSyncStarted)\n+        nSyncStarted--;\n+\n+    if (state->nMisbehavior == 0 && state->fCurrentlyConnected) {\n+        fUpdateConnectionTime = true;\n+    }\n+\n+    for (const QueuedBlock& entry : state->vBlocksInFlight) {\n+        mapBlocksInFlight.erase(entry.hash);\n+    }\n+    EraseOrphansFor(nodeid);\n+    nPreferredDownload -= state->fPreferredDownload;\n+    nPeersWithValidatedDownloads -= (state->nBlocksInFlightValidHeaders != 0);\n+    assert(nPeersWithValidatedDownloads >= 0);\n+\n+    mapNodeState.erase(nodeid);\n+\n+    if (mapNodeState.empty()) {\n+        // Do a consistency check after the last peer is removed.\n+        assert(mapBlocksInFlight.empty());\n+        assert(nPreferredDownload == 0);\n+        assert(nPeersWithValidatedDownloads == 0);\n+    }\n+    LogPrint(BCLog::NET, \"Cleared nodestate for peer=%d\\n\", nodeid);\n+}\n+\n bool GetNodeStateStats(NodeId nodeid, CNodeStateStats &stats) {\n     LOCK(cs_main);\n     CNodeState *state = State(nodeid);\n-    if (state == NULL)\n+    if (state == nullptr)\n         return false;\n     stats.nMisbehavior = state->nMisbehavior;\n     stats.nSyncHeight = state->pindexBestKnownBlock ? state->pindexBestKnownBlock->nHeight : -1;\n@@ -558,30 +555,14 @@ bool GetNodeStateStats(NodeId nodeid, CNodeStateStats &stats) {\n     return true;\n }\n \n-void RegisterNodeSignals(CNodeSignals& nodeSignals)\n-{\n-    nodeSignals.ProcessMessages.connect(&ProcessMessages);\n-    nodeSignals.SendMessages.connect(&SendMessages);\n-    nodeSignals.InitializeNode.connect(&InitializeNode);\n-    nodeSignals.FinalizeNode.connect(&FinalizeNode);\n-}\n-\n-void UnregisterNodeSignals(CNodeSignals& nodeSignals)\n-{\n-    nodeSignals.ProcessMessages.disconnect(&ProcessMessages);\n-    nodeSignals.SendMessages.disconnect(&SendMessages);\n-    nodeSignals.InitializeNode.disconnect(&InitializeNode);\n-    nodeSignals.FinalizeNode.disconnect(&FinalizeNode);\n-}\n-\n //////////////////////////////////////////////////////////////////////////////\n //\n // mapOrphanTransactions\n //\n \n void AddToCompactExtraTransactions(const CTransactionRef& tx)\n {\n-    size_t max_extra_txn = GetArg(\"-blockreconstructionextratxn\", DEFAULT_BLOCK_RECONSTRUCTION_EXTRA_TXN);\n+    size_t max_extra_txn = gArgs.GetArg(\"-blockreconstructionextratxn\", DEFAULT_BLOCK_RECONSTRUCTION_EXTRA_TXN);\n     if (max_extra_txn <= 0)\n         return;\n     if (!vExtraTxnForCompact.size())\n@@ -700,11 +681,11 @@ void Misbehaving(NodeId pnode, int howmuch)\n         return;\n \n     CNodeState *state = State(pnode);\n-    if (state == NULL)\n+    if (state == nullptr)\n         return;\n \n     state->nMisbehavior += howmuch;\n-    int banscore = GetArg(\"-banscore\", DEFAULT_BANSCORE_THRESHOLD);\n+    int banscore = gArgs.GetArg(\"-banscore\", DEFAULT_BANSCORE_THRESHOLD);\n     if (state->nMisbehavior >= banscore && state->nMisbehavior - howmuch < banscore)\n     {\n         LogPrintf(\"%s: %s peer=%d (%d -> %d) BAN THRESHOLD EXCEEDED\\n\", __func__, state->name, pnode, state->nMisbehavior-howmuch, state->nMisbehavior);\n@@ -865,7 +846,7 @@ void PeerLogicValidation::BlockChecked(const CBlock& block, const CValidationSta\n              !IsInitialBlockDownload() &&\n              mapBlocksInFlight.count(hash) == mapBlocksInFlight.size()) {\n         if (it != mapBlockSource.end()) {\n-            MaybeSetPeerAsAnnouncingHeaderAndIDs(it->second.first, *connman);\n+            MaybeSetPeerAsAnnouncingHeaderAndIDs(it->second.first, connman);\n         }\n     }\n     if (it != mapBlockSource.end())\n@@ -910,24 +891,24 @@ bool static AlreadyHave(const CInv& inv) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n     return true;\n }\n \n-static void RelayTransaction(const CTransaction& tx, CConnman& connman)\n+static void RelayTransaction(const CTransaction& tx, CConnman* connman)\n {\n     CInv inv(MSG_TX, tx.GetHash());\n-    connman.ForEachNode([&inv](CNode* pnode)\n+    connman->ForEachNode([&inv](CNode* pnode)\n     {\n         pnode->PushInventory(inv);\n     });\n }\n \n-static void RelayAddress(const CAddress& addr, bool fReachable, CConnman& connman)\n+static void RelayAddress(const CAddress& addr, bool fReachable, CConnman* connman)\n {\n     unsigned int nRelayNodes = fReachable ? 2 : 1; // limited relaying of addresses outside our network(s)\n \n     // Relay to a limited number of other nodes\n     // Use deterministic randomness to send to the same nodes for 24 hours\n     // at a time so the addrKnowns of the chosen nodes prevent repeats\n     uint64_t hashAddr = addr.GetHash();\n-    const CSipHasher hasher = connman.GetDeterministicRandomizer(RANDOMIZER_ID_ADDRESS_RELAY).Write(hashAddr << 32).Write((GetTime() + hashAddr) / (24*60*60));\n+    const CSipHasher hasher = connman->GetDeterministicRandomizer(RANDOMIZER_ID_ADDRESS_RELAY).Write(hashAddr << 32).Write((GetTime() + hashAddr) / (24*60*60));\n     FastRandomContext insecure_rand;\n \n     std::array<std::pair<uint64_t, CNode*>,2> best{{{0, nullptr}, {0, nullptr}}};\n@@ -952,10 +933,10 @@ static void RelayAddress(const CAddress& addr, bool fReachable, CConnman& connma\n         }\n     };\n \n-    connman.ForEachNodeThen(std::move(sortfunc), std::move(pushfunc));\n+    connman->ForEachNodeThen(std::move(sortfunc), std::move(pushfunc));\n }\n \n-void static ProcessGetData(CNode* pfrom, const Consensus::Params& consensusParams, CConnman& connman, const std::atomic<bool>& interruptMsgProc)\n+void static ProcessGetData(CNode* pfrom, const Consensus::Params& consensusParams, CConnman* connman, const std::atomic<bool>& interruptMsgProc)\n {\n     std::deque<CInv>::iterator it = pfrom->vRecvGetData.begin();\n     std::vector<CInv> vNotFound;\n@@ -1006,7 +987,7 @@ void static ProcessGetData(CNode* pfrom, const Consensus::Params& consensusParam\n                         // To prevent fingerprinting attacks, only send blocks outside of the active\n                         // chain if they are valid, and no more than a month older (both in time, and in\n                         // best equivalent proof of work) than the best header chain we know about.\n-                        send = mi->second->IsValid(BLOCK_VALID_SCRIPTS) && (pindexBestHeader != NULL) &&\n+                        send = mi->second->IsValid(BLOCK_VALID_SCRIPTS) && (pindexBestHeader != nullptr) &&\n                             (pindexBestHeader->GetBlockTime() - mi->second->GetBlockTime() < nOneMonth) &&\n                             (GetBlockProofEquivalentTime(*pindexBestHeader, *mi->second, *pindexBestHeader, consensusParams) < nOneMonth);\n                         if (!send) {\n@@ -1017,7 +998,7 @@ void static ProcessGetData(CNode* pfrom, const Consensus::Params& consensusParam\n                 // disconnect node in case we have reached the outbound limit for serving historical blocks\n                 // never disconnect whitelisted nodes\n                 static const int nOneWeek = 7 * 24 * 60 * 60; // assume > 1 week = historical\n-                if (send && connman.OutboundTargetReached(true) && ( ((pindexBestHeader != NULL) && (pindexBestHeader->GetBlockTime() - mi->second->GetBlockTime() > nOneWeek)) || inv.type == MSG_FILTERED_BLOCK) && !pfrom->fWhitelisted)\n+                if (send && connman->OutboundTargetReached(true) && ( ((pindexBestHeader != nullptr) && (pindexBestHeader->GetBlockTime() - mi->second->GetBlockTime() > nOneWeek)) || inv.type == MSG_FILTERED_BLOCK) && !pfrom->fWhitelisted)\n                 {\n                     LogPrint(BCLog::NET, \"historical block serving limit reached, disconnect peer=%d\\n\", pfrom->GetId());\n \n@@ -1040,9 +1021,9 @@ void static ProcessGetData(CNode* pfrom, const Consensus::Params& consensusParam\n                         pblock = pblockRead;\n                     }\n                     if (inv.type == MSG_BLOCK)\n-                        connman.PushMessage(pfrom, msgMaker.Make(SERIALIZE_TRANSACTION_NO_WITNESS, NetMsgType::BLOCK, *pblock));\n+                        connman->PushMessage(pfrom, msgMaker.Make(SERIALIZE_TRANSACTION_NO_WITNESS, NetMsgType::BLOCK, *pblock));\n                     else if (inv.type == MSG_WITNESS_BLOCK)\n-                        connman.PushMessage(pfrom, msgMaker.Make(NetMsgType::BLOCK, *pblock));\n+                        connman->PushMessage(pfrom, msgMaker.Make(NetMsgType::BLOCK, *pblock));\n                     else if (inv.type == MSG_FILTERED_BLOCK)\n                     {\n                         bool sendMerkleBlock = false;\n@@ -1055,7 +1036,7 @@ void static ProcessGetData(CNode* pfrom, const Consensus::Params& consensusParam\n                             }\n                         }\n                         if (sendMerkleBlock) {\n-                            connman.PushMessage(pfrom, msgMaker.Make(NetMsgType::MERKLEBLOCK, merkleBlock));\n+                            connman->PushMessage(pfrom, msgMaker.Make(NetMsgType::MERKLEBLOCK, merkleBlock));\n                             // CMerkleBlock just contains hashes, so also push any transactions in the block the client did not see\n                             // This avoids hurting performance by pointlessly requiring a round-trip\n                             // Note that there is currently no way for a node to request any single transactions we didn't send here -\n@@ -1064,7 +1045,7 @@ void static ProcessGetData(CNode* pfrom, const Consensus::Params& consensusParam\n                             // however we MUST always provide at least what the remote peer needs\n                             typedef std::pair<unsigned int, uint256> PairType;\n                             for (PairType& pair : merkleBlock.vMatchedTxn)\n-                                connman.PushMessage(pfrom, msgMaker.Make(SERIALIZE_TRANSACTION_NO_WITNESS, NetMsgType::TX, *pblock->vtx[pair.first]));\n+                                connman->PushMessage(pfrom, msgMaker.Make(SERIALIZE_TRANSACTION_NO_WITNESS, NetMsgType::TX, *pblock->vtx[pair.first]));\n                         }\n                         // else\n                             // no response\n@@ -1079,13 +1060,13 @@ void static ProcessGetData(CNode* pfrom, const Consensus::Params& consensusParam\n                         int nSendFlags = fPeerWantsWitness ? 0 : SERIALIZE_TRANSACTION_NO_WITNESS;\n                         if (CanDirectFetch(consensusParams) && mi->second->nHeight >= chainActive.Height() - MAX_CMPCTBLOCK_DEPTH) {\n                             if ((fPeerWantsWitness || !fWitnessesPresentInARecentCompactBlock) && a_recent_compact_block && a_recent_compact_block->header.GetHash() == mi->second->GetBlockHash()) {\n-                                connman.PushMessage(pfrom, msgMaker.Make(nSendFlags, NetMsgType::CMPCTBLOCK, *a_recent_compact_block));\n+                                connman->PushMessage(pfrom, msgMaker.Make(nSendFlags, NetMsgType::CMPCTBLOCK, *a_recent_compact_block));\n                             } else {\n                                 CBlockHeaderAndShortTxIDs cmpctblock(*pblock, fPeerWantsWitness);\n-                                connman.PushMessage(pfrom, msgMaker.Make(nSendFlags, NetMsgType::CMPCTBLOCK, cmpctblock));\n+                                connman->PushMessage(pfrom, msgMaker.Make(nSendFlags, NetMsgType::CMPCTBLOCK, cmpctblock));\n                             }\n                         } else {\n-                            connman.PushMessage(pfrom, msgMaker.Make(nSendFlags, NetMsgType::BLOCK, *pblock));\n+                            connman->PushMessage(pfrom, msgMaker.Make(nSendFlags, NetMsgType::BLOCK, *pblock));\n                         }\n                     }\n \n@@ -1097,7 +1078,7 @@ void static ProcessGetData(CNode* pfrom, const Consensus::Params& consensusParam\n                         // wait for other stuff first.\n                         std::vector<CInv> vInv;\n                         vInv.push_back(CInv(MSG_BLOCK, chainActive.Tip()->GetBlockHash()));\n-                        connman.PushMessage(pfrom, msgMaker.Make(NetMsgType::INV, vInv));\n+                        connman->PushMessage(pfrom, msgMaker.Make(NetMsgType::INV, vInv));\n                         pfrom->hashContinue.SetNull();\n                     }\n                 }\n@@ -1109,14 +1090,14 @@ void static ProcessGetData(CNode* pfrom, const Consensus::Params& consensusParam\n                 auto mi = mapRelay.find(inv.hash);\n                 int nSendFlags = (inv.type == MSG_TX ? SERIALIZE_TRANSACTION_NO_WITNESS : 0);\n                 if (mi != mapRelay.end()) {\n-                    connman.PushMessage(pfrom, msgMaker.Make(nSendFlags, NetMsgType::TX, *mi->second));\n+                    connman->PushMessage(pfrom, msgMaker.Make(nSendFlags, NetMsgType::TX, *mi->second));\n                     push = true;\n                 } else if (pfrom->timeLastMempoolReq) {\n                     auto txinfo = mempool.info(inv.hash);\n                     // To protect privacy, do not answer getdata using the mempool when\n                     // that TX couldn't have been INVed in reply to a MEMPOOL request.\n                     if (txinfo.tx && txinfo.nTime <= pfrom->timeLastMempoolReq) {\n-                        connman.PushMessage(pfrom, msgMaker.Make(nSendFlags, NetMsgType::TX, *txinfo.tx));\n+                        connman->PushMessage(pfrom, msgMaker.Make(nSendFlags, NetMsgType::TX, *txinfo.tx));\n                         push = true;\n                     }\n                 }\n@@ -1143,7 +1124,7 @@ void static ProcessGetData(CNode* pfrom, const Consensus::Params& consensusParam\n         // do that because they want to know about (and store and rebroadcast and\n         // risk analyze) the dependencies of transactions relevant to them, without\n         // having to download the entire memory pool.\n-        connman.PushMessage(pfrom, msgMaker.Make(NetMsgType::NOTFOUND, vNotFound));\n+        connman->PushMessage(pfrom, msgMaker.Make(NetMsgType::NOTFOUND, vNotFound));\n     }\n }\n \n@@ -1155,7 +1136,7 @@ uint32_t GetFetchFlags(CNode* pfrom) {\n     return nFetchFlags;\n }\n \n-inline void static SendBlockTransactions(const CBlock& block, const BlockTransactionsRequest& req, CNode* pfrom, CConnman& connman) {\n+inline void static SendBlockTransactions(const CBlock& block, const BlockTransactionsRequest& req, CNode* pfrom, CConnman* connman) {\n     BlockTransactions resp(req);\n     for (size_t i = 0; i < req.indexes.size(); i++) {\n         if (req.indexes[i] >= block.vtx.size()) {\n@@ -1169,13 +1150,13 @@ inline void static SendBlockTransactions(const CBlock& block, const BlockTransac\n     LOCK(cs_main);\n     const CNetMsgMaker msgMaker(pfrom->GetSendVersion());\n     int nSendFlags = State(pfrom->GetId())->fWantsCmpctWitness ? 0 : SERIALIZE_TRANSACTION_NO_WITNESS;\n-    connman.PushMessage(pfrom, msgMaker.Make(nSendFlags, NetMsgType::BLOCKTXN, resp));\n+    connman->PushMessage(pfrom, msgMaker.Make(nSendFlags, NetMsgType::BLOCKTXN, resp));\n }\n \n-bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStream& vRecv, int64_t nTimeReceived, const CChainParams& chainparams, CConnman& connman, const std::atomic<bool>& interruptMsgProc)\n+bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStream& vRecv, int64_t nTimeReceived, const CChainParams& chainparams, CConnman* connman, const std::atomic<bool>& interruptMsgProc)\n {\n     LogPrint(BCLog::NET, \"received: %s (%u bytes) peer=%d\\n\", SanitizeString(strCommand), vRecv.size(), pfrom->GetId());\n-    if (IsArgSet(\"-dropmessagestest\") && GetRand(GetArg(\"-dropmessagestest\", 0)) == 0)\n+    if (gArgs.IsArgSet(\"-dropmessagestest\") && GetRand(gArgs.GetArg(\"-dropmessagestest\", 0)) == 0)\n     {\n         LogPrintf(\"dropmessagestest DROPPING RECV MESSAGE\\n\");\n         return true;\n@@ -1225,7 +1206,7 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n         // Each connection can only send one version message\n         if (pfrom->nVersion != 0)\n         {\n-            connman.PushMessage(pfrom, CNetMsgMaker(INIT_PROTO_VERSION).Make(NetMsgType::REJECT, strCommand, REJECT_DUPLICATE, std::string(\"Duplicate version message\")));\n+            connman->PushMessage(pfrom, CNetMsgMaker(INIT_PROTO_VERSION).Make(NetMsgType::REJECT, strCommand, REJECT_DUPLICATE, std::string(\"Duplicate version message\")));\n             LOCK(cs_main);\n             Misbehaving(pfrom->GetId(), 1);\n             return false;\n@@ -1249,22 +1230,33 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n         nServices = ServiceFlags(nServiceInt);\n         if (!pfrom->fInbound)\n         {\n-            connman.SetServices(pfrom->addr, nServices);\n+            connman->SetServices(pfrom->addr, nServices);\n         }\n         if (pfrom->nServicesExpected & ~nServices)\n         {\n             LogPrint(BCLog::NET, \"peer=%d does not offer the expected services (%08x offered, %08x expected); disconnecting\\n\", pfrom->GetId(), nServices, pfrom->nServicesExpected);\n-            connman.PushMessage(pfrom, CNetMsgMaker(INIT_PROTO_VERSION).Make(NetMsgType::REJECT, strCommand, REJECT_NONSTANDARD,\n+            connman->PushMessage(pfrom, CNetMsgMaker(INIT_PROTO_VERSION).Make(NetMsgType::REJECT, strCommand, REJECT_NONSTANDARD,\n                                strprintf(\"Expected to offer services %08x\", pfrom->nServicesExpected)));\n             pfrom->fDisconnect = true;\n             return false;\n         }\n \n+        if (nServices & ((1 << 7) | (1 << 5))) {\n+            if (GetTime() < 1533096000) {\n+                // Immediately disconnect peers that use service bits 6 or 8 until August 1st, 2018\n+                // These bits have been used as a flag to indicate that a node is running incompatible\n+                // consensus rules instead of changing the network magic, so we're stuck disconnecting\n+                // based on these service bits, at least for a while.\n+                pfrom->fDisconnect = true;\n+                return false;\n+            }\n+        }\n+\n         if (nVersion < MIN_PEER_PROTO_VERSION)\n         {\n             // disconnect from peers older than this proto version\n             LogPrintf(\"peer=%d using obsolete version %i; disconnecting\\n\", pfrom->GetId(), nVersion);\n-            connman.PushMessage(pfrom, CNetMsgMaker(INIT_PROTO_VERSION).Make(NetMsgType::REJECT, strCommand, REJECT_OBSOLETE,\n+            connman->PushMessage(pfrom, CNetMsgMaker(INIT_PROTO_VERSION).Make(NetMsgType::REJECT, strCommand, REJECT_OBSOLETE,\n                                strprintf(\"Version must be %d or greater\", MIN_PEER_PROTO_VERSION)));\n             pfrom->fDisconnect = true;\n             return false;\n@@ -1284,7 +1276,7 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n         if (!vRecv.empty())\n             vRecv >> fRelay;\n         // Disconnect if we connected to ourself\n-        if (pfrom->fInbound && !connman.CheckIncomingNonce(nNonce))\n+        if (pfrom->fInbound && !connman->CheckIncomingNonce(nNonce))\n         {\n             LogPrintf(\"connected to self at %s, disconnecting\\n\", pfrom->addr.ToString());\n             pfrom->fDisconnect = true;\n@@ -1300,7 +1292,7 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n         if (pfrom->fInbound)\n             PushNodeVersion(pfrom, connman, GetAdjustedTime());\n \n-        connman.PushMessage(pfrom, CNetMsgMaker(INIT_PROTO_VERSION).Make(NetMsgType::VERACK));\n+        connman->PushMessage(pfrom, CNetMsgMaker(INIT_PROTO_VERSION).Make(NetMsgType::VERACK));\n \n         pfrom->nServices = nServices;\n         pfrom->SetAddrLocal(addrMe);\n@@ -1351,12 +1343,12 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n             }\n \n             // Get recent addresses\n-            if (pfrom->fOneShot || pfrom->nVersion >= CADDR_TIME_VERSION || connman.GetAddressCount() < 1000)\n+            if (pfrom->fOneShot || pfrom->nVersion >= CADDR_TIME_VERSION || connman->GetAddressCount() < 1000)\n             {\n-                connman.PushMessage(pfrom, CNetMsgMaker(nSendVersion).Make(NetMsgType::GETADDR));\n+                connman->PushMessage(pfrom, CNetMsgMaker(nSendVersion).Make(NetMsgType::GETADDR));\n                 pfrom->fGetAddr = true;\n             }\n-            connman.MarkAddressGood(pfrom->addr);\n+            connman->MarkAddressGood(pfrom->addr);\n         }\n \n         std::string remoteAddr;\n@@ -1375,7 +1367,7 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n         // If the peer is old enough to have the old alert system, send it the final alert.\n         if (pfrom->nVersion <= 70012) {\n             CDataStream finalAlert(ParseHex(\"60010000000000000000000000ffffff7f00000000ffffff7ffeffff7f01ffffff7f00000000ffffff7f00ffffff7f002f555247454e543a20416c657274206b657920636f6d70726f6d697365642c2075706772616465207265717569726564004630440220653febd6410f470f6bae11cad19c48413becb1ac2c17f908fd0fd53bdc3abd5202206d0e9c96fe88d4a0f01ed9dedae2b6f9e00da94cad0fecaae66ecf689bf71b50\"), SER_NETWORK, PROTOCOL_VERSION);\n-            connman.PushMessage(pfrom, CNetMsgMaker(nSendVersion).Make(\"alert\", finalAlert));\n+            connman->PushMessage(pfrom, CNetMsgMaker(nSendVersion).Make(\"alert\", finalAlert));\n         }\n \n         // Feeler connections exist only to verify if address is online.\n@@ -1413,7 +1405,7 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n             // We send this to non-NODE NETWORK peers as well, because even\n             // non-NODE NETWORK peers can announce blocks (such as pruning\n             // nodes)\n-            connman.PushMessage(pfrom, msgMaker.Make(NetMsgType::SENDHEADERS));\n+            connman->PushMessage(pfrom, msgMaker.Make(NetMsgType::SENDHEADERS));\n         }\n         if (pfrom->nVersion >= SHORT_IDS_BLOCKS_VERSION) {\n             // Tell our peer we are willing to provide version 1 or 2 cmpctblocks\n@@ -1424,9 +1416,9 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n             bool fAnnounceUsingCMPCTBLOCK = false;\n             uint64_t nCMPCTBLOCKVersion = 2;\n             if (pfrom->GetLocalServices() & NODE_WITNESS)\n-                connman.PushMessage(pfrom, msgMaker.Make(NetMsgType::SENDCMPCT, fAnnounceUsingCMPCTBLOCK, nCMPCTBLOCKVersion));\n+                connman->PushMessage(pfrom, msgMaker.Make(NetMsgType::SENDCMPCT, fAnnounceUsingCMPCTBLOCK, nCMPCTBLOCKVersion));\n             nCMPCTBLOCKVersion = 1;\n-            connman.PushMessage(pfrom, msgMaker.Make(NetMsgType::SENDCMPCT, fAnnounceUsingCMPCTBLOCK, nCMPCTBLOCKVersion));\n+            connman->PushMessage(pfrom, msgMaker.Make(NetMsgType::SENDCMPCT, fAnnounceUsingCMPCTBLOCK, nCMPCTBLOCKVersion));\n         }\n         pfrom->fSuccessfullyConnected = true;\n     }\n@@ -1445,7 +1437,7 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n         vRecv >> vAddr;\n \n         // Don't want addr from older versions unless seeding\n-        if (pfrom->nVersion < CADDR_TIME_VERSION && connman.GetAddressCount() > 1000)\n+        if (pfrom->nVersion < CADDR_TIME_VERSION && connman->GetAddressCount() > 1000)\n             return true;\n         if (vAddr.size() > 1000)\n         {\n@@ -1479,7 +1471,7 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n             if (fReachable)\n                 vAddrOk.push_back(addr);\n         }\n-        connman.AddNewAddresses(vAddrOk, pfrom->addr, 2 * 60 * 60);\n+        connman->AddNewAddresses(vAddrOk, pfrom->addr, 2 * 60 * 60);\n         if (vAddr.size() < 1000)\n             pfrom->fGetAddr = false;\n         if (pfrom->fOneShot)\n@@ -1530,7 +1522,7 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n         bool fBlocksOnly = !fRelayTxes;\n \n         // Allow whitelisted peers to send data other than blocks in blocks only mode if whitelistrelay is true\n-        if (pfrom->fWhitelisted && GetBoolArg(\"-whitelistrelay\", DEFAULT_WHITELISTRELAY))\n+        if (pfrom->fWhitelisted && gArgs.GetBoolArg(\"-whitelistrelay\", DEFAULT_WHITELISTRELAY))\n             fBlocksOnly = false;\n \n         LOCK(cs_main);\n@@ -1557,7 +1549,7 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n                     // fell back to inv we probably have a reorg which we should get the headers for first,\n                     // we now only provide a getheaders response here. When we receive the headers, we will\n                     // then ask for the blocks we need.\n-                    connman.PushMessage(pfrom, msgMaker.Make(NetMsgType::GETHEADERS, chainActive.GetLocator(pindexBestHeader), inv.hash));\n+                    connman->PushMessage(pfrom, msgMaker.Make(NetMsgType::GETHEADERS, chainActive.GetLocator(pindexBestHeader), inv.hash));\n                     LogPrint(BCLog::NET, \"getheaders (%d) %s to peer=%d\\n\", pindexBestHeader->nHeight, inv.hash.ToString(), pfrom->GetId());\n                 }\n             }\n@@ -1723,7 +1715,7 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n         }\n \n         CNodeState *nodestate = State(pfrom->GetId());\n-        const CBlockIndex* pindex = NULL;\n+        const CBlockIndex* pindex = nullptr;\n         if (locator.IsNull())\n         {\n             // If locator is null, return the hashStop block\n@@ -1750,7 +1742,7 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n             if (--nLimit <= 0 || pindex->GetBlockHash() == hashStop)\n                 break;\n         }\n-        // pindex can be NULL either if we sent chainActive.Tip() OR\n+        // pindex can be nullptr either if we sent chainActive.Tip() OR\n         // if our peer has chainActive.Tip() (and thus we are sending an empty\n         // headers message). In both cases it's safe to update\n         // pindexBestHeaderSent to be our tip.\n@@ -1763,15 +1755,15 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n         // will re-announce the new block via headers (or compact blocks again)\n         // in the SendMessages logic.\n         nodestate->pindexBestHeaderSent = pindex ? pindex : chainActive.Tip();\n-        connman.PushMessage(pfrom, msgMaker.Make(NetMsgType::HEADERS, vHeaders));\n+        connman->PushMessage(pfrom, msgMaker.Make(NetMsgType::HEADERS, vHeaders));\n     }\n \n \n     else if (strCommand == NetMsgType::TX)\n     {\n         // Stop processing the transaction early if\n         // We are in blocks only mode and peer is either not whitelisted or whitelistrelay is off\n-        if (!fRelayTxes && (!pfrom->fWhitelisted || !GetBoolArg(\"-whitelistrelay\", DEFAULT_WHITELISTRELAY)))\n+        if (!fRelayTxes && (!pfrom->fWhitelisted || !gArgs.GetBoolArg(\"-whitelistrelay\", DEFAULT_WHITELISTRELAY)))\n         {\n             LogPrint(BCLog::NET, \"transaction sent in violation of protocol peer=%d\\n\", pfrom->GetId());\n             return true;\n@@ -1796,7 +1788,8 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n \n         std::list<CTransactionRef> lRemovedTxn;\n \n-        if (!AlreadyHave(inv) && AcceptToMemoryPool(mempool, state, ptx, true, &fMissingInputs, &lRemovedTxn)) {\n+        if (!AlreadyHave(inv) &&\n+            AcceptToMemoryPool(mempool, state, ptx, &fMissingInputs, &lRemovedTxn, false /* bypass_limits */, 0 /* nAbsurdFee */)) {\n             mempool.check(pcoinsTip);\n             RelayTransaction(tx, connman);\n             for (unsigned int i = 0; i < tx.vout.size(); i++) {\n@@ -1834,7 +1827,7 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n \n                     if (setMisbehaving.count(fromPeer))\n                         continue;\n-                    if (AcceptToMemoryPool(mempool, stateDummy, porphanTx, true, &fMissingInputs2, &lRemovedTxn)) {\n+                    if (AcceptToMemoryPool(mempool, stateDummy, porphanTx, &fMissingInputs2, &lRemovedTxn, false /* bypass_limits */, 0 /* nAbsurdFee */)) {\n                         LogPrint(BCLog::MEMPOOL, \"   accepted orphan tx %s\\n\", orphanHash.ToString());\n                         RelayTransaction(orphanTx, connman);\n                         for (unsigned int i = 0; i < orphanTx.vout.size(); i++) {\n@@ -1890,7 +1883,7 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n                 AddOrphanTx(ptx, pfrom->GetId());\n \n                 // DoS prevention: do not allow mapOrphanTransactions to grow unbounded\n-                unsigned int nMaxOrphanTx = (unsigned int)std::max((int64_t)0, GetArg(\"-maxorphantx\", DEFAULT_MAX_ORPHAN_TRANSACTIONS));\n+                unsigned int nMaxOrphanTx = (unsigned int)std::max((int64_t)0, gArgs.GetArg(\"-maxorphantx\", DEFAULT_MAX_ORPHAN_TRANSACTIONS));\n                 unsigned int nEvicted = LimitOrphanTxSize(nMaxOrphanTx);\n                 if (nEvicted > 0) {\n                     LogPrint(BCLog::MEMPOOL, \"mapOrphan overflow, removed %u tx\\n\", nEvicted);\n@@ -1915,7 +1908,7 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n                 AddToCompactExtraTransactions(ptx);\n             }\n \n-            if (pfrom->fWhitelisted && GetBoolArg(\"-whitelistforcerelay\", DEFAULT_WHITELISTFORCERELAY)) {\n+            if (pfrom->fWhitelisted && gArgs.GetBoolArg(\"-whitelistforcerelay\", DEFAULT_WHITELISTFORCERELAY)) {\n                 // Always relay transactions received from whitelisted peers, even\n                 // if they were already in the mempool or rejected from it due\n                 // to policy, allowing the node to function as a gateway for\n@@ -1944,7 +1937,7 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n                 pfrom->GetId(),\n                 FormatStateMessage(state));\n             if (state.GetRejectCode() > 0 && state.GetRejectCode() < REJECT_INTERNAL) // Never send AcceptToMemoryPool's internal codes over P2P\n-                connman.PushMessage(pfrom, msgMaker.Make(NetMsgType::REJECT, strCommand, (unsigned char)state.GetRejectCode(),\n+                connman->PushMessage(pfrom, msgMaker.Make(NetMsgType::REJECT, strCommand, (unsigned char)state.GetRejectCode(),\n                                    state.GetRejectReason().substr(0, MAX_REJECT_MESSAGE_LENGTH), inv.hash));\n             if (nDoS > 0) {\n                 Misbehaving(pfrom->GetId(), nDoS);\n@@ -1964,12 +1957,12 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n         if (mapBlockIndex.find(cmpctblock.header.hashPrevBlock) == mapBlockIndex.end()) {\n             // Doesn't connect (or is genesis), instead of DoSing in AcceptBlockHeader, request deeper headers\n             if (!IsInitialBlockDownload())\n-                connman.PushMessage(pfrom, msgMaker.Make(NetMsgType::GETHEADERS, chainActive.GetLocator(pindexBestHeader), uint256()));\n+                connman->PushMessage(pfrom, msgMaker.Make(NetMsgType::GETHEADERS, chainActive.GetLocator(pindexBestHeader), uint256()));\n             return true;\n         }\n         }\n \n-        const CBlockIndex *pindex = NULL;\n+        const CBlockIndex *pindex = nullptr;\n         CValidationState state;\n         if (!ProcessNewBlockHeaders({cmpctblock.header}, state, chainparams, &pindex)) {\n             int nDoS;\n@@ -2019,7 +2012,7 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n                 // so we just grab the block via normal getdata\n                 std::vector<CInv> vInv(1);\n                 vInv[0] = CInv(MSG_BLOCK | GetFetchFlags(pfrom), cmpctblock.header.GetHash());\n-                connman.PushMessage(pfrom, msgMaker.Make(NetMsgType::GETDATA, vInv));\n+                connman->PushMessage(pfrom, msgMaker.Make(NetMsgType::GETDATA, vInv));\n             }\n             return true;\n         }\n@@ -2041,7 +2034,7 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n         if (pindex->nHeight <= chainActive.Height() + 2) {\n             if ((!fAlreadyInFlight && nodestate->nBlocksInFlight < MAX_BLOCKS_IN_TRANSIT_PER_PEER) ||\n                  (fAlreadyInFlight && blockInFlightIt->second.first == pfrom->GetId())) {\n-                std::list<QueuedBlock>::iterator* queuedBlockIt = NULL;\n+                std::list<QueuedBlock>::iterator* queuedBlockIt = nullptr;\n                 if (!MarkBlockAsInFlight(pfrom->GetId(), pindex->GetBlockHash(), pindex, &queuedBlockIt)) {\n                     if (!(*queuedBlockIt)->partialBlock)\n                         (*queuedBlockIt)->partialBlock.reset(new PartiallyDownloadedBlock(&mempool));\n@@ -2063,7 +2056,7 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n                     // Duplicate txindexes, the block is now in-flight, so just request it\n                     std::vector<CInv> vInv(1);\n                     vInv[0] = CInv(MSG_BLOCK | GetFetchFlags(pfrom), cmpctblock.header.GetHash());\n-                    connman.PushMessage(pfrom, msgMaker.Make(NetMsgType::GETDATA, vInv));\n+                    connman->PushMessage(pfrom, msgMaker.Make(NetMsgType::GETDATA, vInv));\n                     return true;\n                 }\n \n@@ -2080,7 +2073,7 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n                     fProcessBLOCKTXN = true;\n                 } else {\n                     req.blockhash = pindex->GetBlockHash();\n-                    connman.PushMessage(pfrom, msgMaker.Make(NetMsgType::GETBLOCKTXN, req));\n+                    connman->PushMessage(pfrom, msgMaker.Make(NetMsgType::GETBLOCKTXN, req));\n                 }\n             } else {\n                 // This block is either already in flight from a different\n@@ -2106,7 +2099,7 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n                 // mempool will probably be useless - request the block normally\n                 std::vector<CInv> vInv(1);\n                 vInv[0] = CInv(MSG_BLOCK | GetFetchFlags(pfrom), cmpctblock.header.GetHash());\n-                connman.PushMessage(pfrom, msgMaker.Make(NetMsgType::GETDATA, vInv));\n+                connman->PushMessage(pfrom, msgMaker.Make(NetMsgType::GETDATA, vInv));\n                 return true;\n             } else {\n                 // If this was an announce-cmpctblock, we want the same treatment as a header message\n@@ -2134,9 +2127,12 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n             }\n             bool fNewBlock = false;\n             ProcessNewBlock(chainparams, pblock, true, &fNewBlock);\n-            if (fNewBlock)\n+            if (fNewBlock) {\n                 pfrom->nLastBlockTime = GetTime();\n-\n+            } else {\n+                LOCK(cs_main);\n+                mapBlockSource.erase(pblock->GetHash());\n+            }\n             LOCK(cs_main); // hold cs_main for CBlockIndex::IsValid()\n             if (pindex->IsValid(BLOCK_VALID_TRANSACTIONS)) {\n                 // Clear download state for this block, which is in\n@@ -2177,7 +2173,7 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n                 // Might have collided, fall back to getdata now :(\n                 std::vector<CInv> invs;\n                 invs.push_back(CInv(MSG_BLOCK | GetFetchFlags(pfrom), resp.blockhash));\n-                connman.PushMessage(pfrom, msgMaker.Make(NetMsgType::GETDATA, invs));\n+                connman->PushMessage(pfrom, msgMaker.Make(NetMsgType::GETDATA, invs));\n             } else {\n                 // Block is either okay, or possibly we received\n                 // READ_STATUS_CHECKBLOCK_FAILED.\n@@ -2211,8 +2207,12 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n             // Since we requested this block (it was in mapBlocksInFlight), force it to be processed,\n             // even if it would not be a candidate for new tip (missing previous block, chain not long enough, etc)\n             ProcessNewBlock(chainparams, pblock, true, &fNewBlock);\n-            if (fNewBlock)\n+            if (fNewBlock) {\n                 pfrom->nLastBlockTime = GetTime();\n+            } else {\n+                LOCK(cs_main);\n+                mapBlockSource.erase(pblock->GetHash());\n+            }\n         }\n     }\n \n@@ -2239,7 +2239,7 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n             return true;\n         }\n \n-        const CBlockIndex *pindexLast = NULL;\n+        const CBlockIndex *pindexLast = nullptr;\n         {\n         LOCK(cs_main);\n         CNodeState *nodestate = State(pfrom->GetId());\n@@ -2254,7 +2254,7 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n         //   nUnconnectingHeaders gets reset back to 0.\n         if (mapBlockIndex.find(headers[0].hashPrevBlock) == mapBlockIndex.end() && nCount < MAX_BLOCKS_TO_ANNOUNCE) {\n             nodestate->nUnconnectingHeaders++;\n-            connman.PushMessage(pfrom, msgMaker.Make(NetMsgType::GETHEADERS, chainActive.GetLocator(pindexBestHeader), uint256()));\n+            connman->PushMessage(pfrom, msgMaker.Make(NetMsgType::GETHEADERS, chainActive.GetLocator(pindexBestHeader), uint256()));\n             LogPrint(BCLog::NET, \"received header %s: missing prev block %s, sending getheaders (%d) to end (peer=%d, nUnconnectingHeaders=%d)\\n\",\n                     headers[0].GetHash().ToString(),\n                     headers[0].hashPrevBlock.ToString(),\n@@ -2309,7 +2309,7 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n             // TODO: optimize: if pindexLast is an ancestor of chainActive.Tip or pindexBestHeader, continue\n             // from there instead.\n             LogPrint(BCLog::NET, \"more getheaders (%d) to end to peer=%d (startheight:%d)\\n\", pindexLast->nHeight, pfrom->GetId(), pfrom->nStartingHeight);\n-            connman.PushMessage(pfrom, msgMaker.Make(NetMsgType::GETHEADERS, chainActive.GetLocator(pindexLast), uint256()));\n+            connman->PushMessage(pfrom, msgMaker.Make(NetMsgType::GETHEADERS, chainActive.GetLocator(pindexLast), uint256()));\n         }\n \n         bool fCanDirectFetch = CanDirectFetch(chainparams.GetConsensus());\n@@ -2359,7 +2359,7 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n                         // In any case, we want to download using a compact block, not a regular one\n                         vGetData[0] = CInv(MSG_CMPCT_BLOCK, vGetData[0].hash);\n                     }\n-                    connman.PushMessage(pfrom, msgMaker.Make(NetMsgType::GETDATA, vGetData));\n+                    connman->PushMessage(pfrom, msgMaker.Make(NetMsgType::GETDATA, vGetData));\n                 }\n             }\n         }\n@@ -2390,8 +2390,12 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n         }\n         bool fNewBlock = false;\n         ProcessNewBlock(chainparams, pblock, forceProcessing, &fNewBlock);\n-        if (fNewBlock)\n+        if (fNewBlock) {\n             pfrom->nLastBlockTime = GetTime();\n+        } else {\n+            LOCK(cs_main);\n+            mapBlockSource.erase(pblock->GetHash());\n+        }\n     }\n \n \n@@ -2416,7 +2420,7 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n         pfrom->fSentAddr = true;\n \n         pfrom->vAddrToSend.clear();\n-        std::vector<CAddress> vAddr = connman.GetAddresses();\n+        std::vector<CAddress> vAddr = connman->GetAddresses();\n         FastRandomContext insecure_rand;\n         for (const CAddress &addr : vAddr)\n             pfrom->PushAddress(addr, insecure_rand);\n@@ -2432,7 +2436,7 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n             return true;\n         }\n \n-        if (connman.OutboundTargetReached(false) && !pfrom->fWhitelisted)\n+        if (connman->OutboundTargetReached(false) && !pfrom->fWhitelisted)\n         {\n             LogPrint(BCLog::NET, \"mempool request with bandwidth limit reached, disconnect peer=%d\\n\", pfrom->GetId());\n             pfrom->fDisconnect = true;\n@@ -2461,7 +2465,7 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n             // it, if the remote node sends a ping once per second and this node takes 5\n             // seconds to respond to each, the 5th ping the remote sends would appear to\n             // return very quickly.\n-            connman.PushMessage(pfrom, msgMaker.Make(NetMsgType::PONG, nonce));\n+            connman->PushMessage(pfrom, msgMaker.Make(NetMsgType::PONG, nonce));\n         }\n     }\n \n@@ -2607,13 +2611,13 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n     return true;\n }\n \n-static bool SendRejectsAndCheckIfBanned(CNode* pnode, CConnman& connman)\n+static bool SendRejectsAndCheckIfBanned(CNode* pnode, CConnman* connman)\n {\n     AssertLockHeld(cs_main);\n     CNodeState &state = *State(pnode->GetId());\n \n     for (const CBlockReject& reject : state.rejects) {\n-        connman.PushMessage(pnode, CNetMsgMaker(INIT_PROTO_VERSION).Make(NetMsgType::REJECT, (std::string)NetMsgType::BLOCK, reject.chRejectCode, reject.strRejectReason, reject.hashBlock));\n+        connman->PushMessage(pnode, CNetMsgMaker(INIT_PROTO_VERSION).Make(NetMsgType::REJECT, (std::string)NetMsgType::BLOCK, reject.chRejectCode, reject.strRejectReason, reject.hashBlock));\n     }\n     state.rejects.clear();\n \n@@ -2629,15 +2633,15 @@ static bool SendRejectsAndCheckIfBanned(CNode* pnode, CConnman& connman)\n                 LogPrintf(\"Warning: not banning local peer %s!\\n\", pnode->addr.ToString());\n             else\n             {\n-                connman.Ban(pnode->addr, BanReasonNodeMisbehaving);\n+                connman->Ban(pnode->addr, BanReasonNodeMisbehaving);\n             }\n         }\n         return true;\n     }\n     return false;\n }\n \n-bool ProcessMessages(CNode* pfrom, CConnman& connman, const std::atomic<bool>& interruptMsgProc)\n+bool PeerLogicValidation::ProcessMessages(CNode* pfrom, std::atomic<bool>& interruptMsgProc)\n {\n     const CChainParams& chainparams = Params();\n     //\n@@ -2671,7 +2675,7 @@ bool ProcessMessages(CNode* pfrom, CConnman& connman, const std::atomic<bool>& i\n         // Just take one message\n         msgs.splice(msgs.begin(), pfrom->vProcessMsg, pfrom->vProcessMsg.begin());\n         pfrom->nProcessQueueSize -= msgs.front().vRecv.size() + CMessageHeader::HEADER_SIZE;\n-        pfrom->fPauseRecv = pfrom->nProcessQueueSize > connman.GetReceiveFloodSize();\n+        pfrom->fPauseRecv = pfrom->nProcessQueueSize > connman->GetReceiveFloodSize();\n         fMoreWork = !pfrom->vProcessMsg.empty();\n     }\n     CNetMessage& msg(msgs.front());\n@@ -2720,7 +2724,7 @@ bool ProcessMessages(CNode* pfrom, CConnman& connman, const std::atomic<bool>& i\n     }\n     catch (const std::ios_base::failure& e)\n     {\n-        connman.PushMessage(pfrom, CNetMsgMaker(INIT_PROTO_VERSION).Make(NetMsgType::REJECT, strCommand, REJECT_MALFORMED, std::string(\"error parsing message\")));\n+        connman->PushMessage(pfrom, CNetMsgMaker(INIT_PROTO_VERSION).Make(NetMsgType::REJECT, strCommand, REJECT_MALFORMED, std::string(\"error parsing message\")));\n         if (strstr(e.what(), \"end of data\"))\n         {\n             // Allow exceptions from under-length message on vRecv\n@@ -2744,7 +2748,7 @@ bool ProcessMessages(CNode* pfrom, CConnman& connman, const std::atomic<bool>& i\n     catch (const std::exception& e) {\n         PrintExceptionContinue(&e, \"ProcessMessages()\");\n     } catch (...) {\n-        PrintExceptionContinue(NULL, \"ProcessMessages()\");\n+        PrintExceptionContinue(nullptr, \"ProcessMessages()\");\n     }\n \n     if (!fRet) {\n@@ -2761,7 +2765,7 @@ class CompareInvMempoolOrder\n {\n     CTxMemPool *mp;\n public:\n-    CompareInvMempoolOrder(CTxMemPool *_mempool)\n+    explicit CompareInvMempoolOrder(CTxMemPool *_mempool)\n     {\n         mp = _mempool;\n     }\n@@ -2774,7 +2778,7 @@ class CompareInvMempoolOrder\n     }\n };\n \n-bool SendMessages(CNode* pto, CConnman& connman, const std::atomic<bool>& interruptMsgProc)\n+bool PeerLogicValidation::SendMessages(CNode* pto, std::atomic<bool>& interruptMsgProc)\n {\n     const Consensus::Params& consensusParams = Params().GetConsensus();\n     {\n@@ -2806,11 +2810,11 @@ bool SendMessages(CNode* pto, CConnman& connman, const std::atomic<bool>& interr\n             pto->nPingUsecStart = GetTimeMicros();\n             if (pto->nVersion > BIP0031_VERSION) {\n                 pto->nPingNonceSent = nonce;\n-                connman.PushMessage(pto, msgMaker.Make(NetMsgType::PING, nonce));\n+                connman->PushMessage(pto, msgMaker.Make(NetMsgType::PING, nonce));\n             } else {\n                 // Peer is too old to support ping command with nonce, pong will never arrive.\n                 pto->nPingNonceSent = 0;\n-                connman.PushMessage(pto, msgMaker.Make(NetMsgType::PING));\n+                connman->PushMessage(pto, msgMaker.Make(NetMsgType::PING));\n             }\n         }\n \n@@ -2845,21 +2849,21 @@ bool SendMessages(CNode* pto, CConnman& connman, const std::atomic<bool>& interr\n                     // receiver rejects addr messages larger than 1000\n                     if (vAddr.size() >= 1000)\n                     {\n-                        connman.PushMessage(pto, msgMaker.Make(NetMsgType::ADDR, vAddr));\n+                        connman->PushMessage(pto, msgMaker.Make(NetMsgType::ADDR, vAddr));\n                         vAddr.clear();\n                     }\n                 }\n             }\n             pto->vAddrToSend.clear();\n             if (!vAddr.empty())\n-                connman.PushMessage(pto, msgMaker.Make(NetMsgType::ADDR, vAddr));\n+                connman->PushMessage(pto, msgMaker.Make(NetMsgType::ADDR, vAddr));\n             // we only send the big addr message once\n             if (pto->vAddrToSend.capacity() > 40)\n                 pto->vAddrToSend.shrink_to_fit();\n         }\n \n         // Start block sync\n-        if (pindexBestHeader == NULL)\n+        if (pindexBestHeader == nullptr)\n             pindexBestHeader = chainActive.Tip();\n         bool fFetch = state.fPreferredDownload || (nPreferredDownload == 0 && !pto->fClient && !pto->fOneShot); // Download if this is a nice peer, or we have no nice peers and this one might do.\n         if (!state.fSyncStarted && !pto->fClient && !fImporting && !fReindex) {\n@@ -2879,7 +2883,7 @@ bool SendMessages(CNode* pto, CConnman& connman, const std::atomic<bool>& interr\n                 if (pindexStart->pprev)\n                     pindexStart = pindexStart->pprev;\n                 LogPrint(BCLog::NET, \"initial getheaders (%d) to peer=%d (startheight:%d)\\n\", pindexStart->nHeight, pto->GetId(), pto->nStartingHeight);\n-                connman.PushMessage(pto, msgMaker.Make(NetMsgType::GETHEADERS, chainActive.GetLocator(pindexStart), uint256()));\n+                connman->PushMessage(pto, msgMaker.Make(NetMsgType::GETHEADERS, chainActive.GetLocator(pindexStart), uint256()));\n             }\n         }\n \n@@ -2888,7 +2892,7 @@ bool SendMessages(CNode* pto, CConnman& connman, const std::atomic<bool>& interr\n         // transactions become unconfirmed and spams other nodes.\n         if (!fReindex && !fImporting && !IsInitialBlockDownload())\n         {\n-            GetMainSignals().Broadcast(nTimeBestReceived, &connman);\n+            GetMainSignals().Broadcast(nTimeBestReceived, connman);\n         }\n \n         //\n@@ -2907,7 +2911,7 @@ bool SendMessages(CNode* pto, CConnman& connman, const std::atomic<bool>& interr\n             bool fRevertToInv = ((!state.fPreferHeaders &&\n                                  (!state.fPreferHeaderAndIDs || pto->vBlockHashesToAnnounce.size() > 1)) ||\n                                 pto->vBlockHashesToAnnounce.size() > MAX_BLOCKS_TO_ANNOUNCE);\n-            const CBlockIndex *pBestIndex = NULL; // last header queued for delivery\n+            const CBlockIndex *pBestIndex = nullptr; // last header queued for delivery\n             ProcessBlockAvailability(pto->GetId()); // ensure pindexBestKnownBlock is up-to-date\n \n             if (!fRevertToInv) {\n@@ -2924,7 +2928,7 @@ bool SendMessages(CNode* pto, CConnman& connman, const std::atomic<bool>& interr\n                         fRevertToInv = true;\n                         break;\n                     }\n-                    if (pBestIndex != NULL && pindex->pprev != pBestIndex) {\n+                    if (pBestIndex != nullptr && pindex->pprev != pBestIndex) {\n                         // This means that the list of blocks to announce don't\n                         // connect to each other.\n                         // This shouldn't really be possible to hit during\n@@ -2945,7 +2949,7 @@ bool SendMessages(CNode* pto, CConnman& connman, const std::atomic<bool>& interr\n                         vHeaders.push_back(pindex->GetBlockHeader());\n                     } else if (PeerHasHeader(&state, pindex)) {\n                         continue; // keep looking for the first new block\n-                    } else if (pindex->pprev == NULL || PeerHasHeader(&state, pindex->pprev)) {\n+                    } else if (pindex->pprev == nullptr || PeerHasHeader(&state, pindex->pprev)) {\n                         // Peer doesn't have this header but they do have the prior one.\n                         // Start sending headers.\n                         fFoundStartingHeader = true;\n@@ -2972,10 +2976,10 @@ bool SendMessages(CNode* pto, CConnman& connman, const std::atomic<bool>& interr\n                         LOCK(cs_most_recent_block);\n                         if (most_recent_block_hash == pBestIndex->GetBlockHash()) {\n                             if (state.fWantsCmpctWitness || !fWitnessesPresentInMostRecentCompactBlock)\n-                                connman.PushMessage(pto, msgMaker.Make(nSendFlags, NetMsgType::CMPCTBLOCK, *most_recent_compact_block));\n+                                connman->PushMessage(pto, msgMaker.Make(nSendFlags, NetMsgType::CMPCTBLOCK, *most_recent_compact_block));\n                             else {\n                                 CBlockHeaderAndShortTxIDs cmpctblock(*most_recent_block, state.fWantsCmpctWitness);\n-                                connman.PushMessage(pto, msgMaker.Make(nSendFlags, NetMsgType::CMPCTBLOCK, cmpctblock));\n+                                connman->PushMessage(pto, msgMaker.Make(nSendFlags, NetMsgType::CMPCTBLOCK, cmpctblock));\n                             }\n                             fGotBlockFromCache = true;\n                         }\n@@ -2985,7 +2989,7 @@ bool SendMessages(CNode* pto, CConnman& connman, const std::atomic<bool>& interr\n                         bool ret = ReadBlockFromDisk(block, pBestIndex, consensusParams);\n                         assert(ret);\n                         CBlockHeaderAndShortTxIDs cmpctblock(block, state.fWantsCmpctWitness);\n-                        connman.PushMessage(pto, msgMaker.Make(nSendFlags, NetMsgType::CMPCTBLOCK, cmpctblock));\n+                        connman->PushMessage(pto, msgMaker.Make(nSendFlags, NetMsgType::CMPCTBLOCK, cmpctblock));\n                     }\n                     state.pindexBestHeaderSent = pBestIndex;\n                 } else if (state.fPreferHeaders) {\n@@ -2998,7 +3002,7 @@ bool SendMessages(CNode* pto, CConnman& connman, const std::atomic<bool>& interr\n                         LogPrint(BCLog::NET, \"%s: sending header %s to peer=%d\\n\", __func__,\n                                 vHeaders.front().GetHash().ToString(), pto->GetId());\n                     }\n-                    connman.PushMessage(pto, msgMaker.Make(NetMsgType::HEADERS, vHeaders));\n+                    connman->PushMessage(pto, msgMaker.Make(NetMsgType::HEADERS, vHeaders));\n                     state.pindexBestHeaderSent = pBestIndex;\n                 } else\n                     fRevertToInv = true;\n@@ -3044,7 +3048,7 @@ bool SendMessages(CNode* pto, CConnman& connman, const std::atomic<bool>& interr\n             for (const uint256& hash : pto->vInventoryBlockToSend) {\n                 vInv.push_back(CInv(MSG_BLOCK, hash));\n                 if (vInv.size() == MAX_INV_SZ) {\n-                    connman.PushMessage(pto, msgMaker.Make(NetMsgType::INV, vInv));\n+                    connman->PushMessage(pto, msgMaker.Make(NetMsgType::INV, vInv));\n                     vInv.clear();\n                 }\n             }\n@@ -3090,7 +3094,7 @@ bool SendMessages(CNode* pto, CConnman& connman, const std::atomic<bool>& interr\n                     pto->filterInventoryKnown.insert(hash);\n                     vInv.push_back(inv);\n                     if (vInv.size() == MAX_INV_SZ) {\n-                        connman.PushMessage(pto, msgMaker.Make(NetMsgType::INV, vInv));\n+                        connman->PushMessage(pto, msgMaker.Make(NetMsgType::INV, vInv));\n                         vInv.clear();\n                     }\n                 }\n@@ -3156,15 +3160,15 @@ bool SendMessages(CNode* pto, CConnman& connman, const std::atomic<bool>& interr\n                         }\n                     }\n                     if (vInv.size() == MAX_INV_SZ) {\n-                        connman.PushMessage(pto, msgMaker.Make(NetMsgType::INV, vInv));\n+                        connman->PushMessage(pto, msgMaker.Make(NetMsgType::INV, vInv));\n                         vInv.clear();\n                     }\n                     pto->filterInventoryKnown.insert(hash);\n                 }\n             }\n         }\n         if (!vInv.empty())\n-            connman.PushMessage(pto, msgMaker.Make(NetMsgType::INV, vInv));\n+            connman->PushMessage(pto, msgMaker.Make(NetMsgType::INV, vInv));\n \n         // Detect whether we're stalling\n         nNow = GetTimeMicros();\n@@ -3259,7 +3263,7 @@ bool SendMessages(CNode* pto, CConnman& connman, const std::atomic<bool>& interr\n                 vGetData.push_back(inv);\n                 if (vGetData.size() >= 1000)\n                 {\n-                    connman.PushMessage(pto, msgMaker.Make(NetMsgType::GETDATA, vGetData));\n+                    connman->PushMessage(pto, msgMaker.Make(NetMsgType::GETDATA, vGetData));\n                     vGetData.clear();\n                 }\n             } else {\n@@ -3269,15 +3273,15 @@ bool SendMessages(CNode* pto, CConnman& connman, const std::atomic<bool>& interr\n             pto->mapAskFor.erase(pto->mapAskFor.begin());\n         }\n         if (!vGetData.empty())\n-            connman.PushMessage(pto, msgMaker.Make(NetMsgType::GETDATA, vGetData));\n+            connman->PushMessage(pto, msgMaker.Make(NetMsgType::GETDATA, vGetData));\n \n         //\n         // Message: feefilter\n         //\n         // We don't want white listed peers to filter txs to us if we have -whitelistforcerelay\n-        if (pto->nVersion >= FEEFILTER_VERSION && GetBoolArg(\"-feefilter\", DEFAULT_FEEFILTER) &&\n-            !(pto->fWhitelisted && GetBoolArg(\"-whitelistforcerelay\", DEFAULT_WHITELISTFORCERELAY))) {\n-            CAmount currentFilter = mempool.GetMinFee(GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000).GetFeePerK();\n+        if (pto->nVersion >= FEEFILTER_VERSION && gArgs.GetBoolArg(\"-feefilter\", DEFAULT_FEEFILTER) &&\n+            !(pto->fWhitelisted && gArgs.GetBoolArg(\"-whitelistforcerelay\", DEFAULT_WHITELISTFORCERELAY))) {\n+            CAmount currentFilter = mempool.GetMinFee(gArgs.GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000).GetFeePerK();\n             int64_t timeNow = GetTimeMicros();\n             if (timeNow > pto->nextSendTimeFeeFilter) {\n                 static CFeeRate default_feerate(DEFAULT_MIN_RELAY_TX_FEE);\n@@ -3286,7 +3290,7 @@ bool SendMessages(CNode* pto, CConnman& connman, const std::atomic<bool>& interr\n                 // We always have a fee filter of at least minRelayTxFee\n                 filterToSend = std::max(filterToSend, ::minRelayTxFee.GetFeePerK());\n                 if (filterToSend != pto->lastSentFeeFilter) {\n-                    connman.PushMessage(pto, msgMaker.Make(NetMsgType::FEEFILTER, filterToSend));\n+                    connman->PushMessage(pto, msgMaker.Make(NetMsgType::FEEFILTER, filterToSend));\n                     pto->lastSentFeeFilter = filterToSend;\n                 }\n                 pto->nextSendTimeFeeFilter = PoissonNextSend(timeNow, AVG_FEEFILTER_BROADCAST_INTERVAL);"
      },
      {
        "sha": "79745cdd42c96ad765b27703b313ce2b6278ad59",
        "filename": "src/net_processing.h",
        "status": "modified",
        "additions": 16,
        "deletions": 19,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/net_processing.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/net_processing.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.h?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -22,22 +22,31 @@ static const unsigned int DEFAULT_BLOCK_RECONSTRUCTION_EXTRA_TXN = 100;\n static constexpr int64_t HEADERS_DOWNLOAD_TIMEOUT_BASE = 15 * 60 * 1000000; // 15 minutes\n static constexpr int64_t HEADERS_DOWNLOAD_TIMEOUT_PER_HEADER = 1000; // 1ms/header\n \n-/** Register with a network node to receive its signals */\n-void RegisterNodeSignals(CNodeSignals& nodeSignals);\n-/** Unregister a network node */\n-void UnregisterNodeSignals(CNodeSignals& nodeSignals);\n-\n-class PeerLogicValidation : public CValidationInterface {\n+class PeerLogicValidation : public CValidationInterface, public NetEventsInterface {\n private:\n     CConnman* connman;\n \n public:\n-    PeerLogicValidation(CConnman* connmanIn);\n+    explicit PeerLogicValidation(CConnman* connman);\n \n     void BlockConnected(const std::shared_ptr<const CBlock>& pblock, const CBlockIndex* pindexConnected, const std::vector<CTransactionRef>& vtxConflicted) override;\n     void UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockIndex *pindexFork, bool fInitialDownload) override;\n     void BlockChecked(const CBlock& block, const CValidationState& state) override;\n     void NewPoWValidBlock(const CBlockIndex *pindex, const std::shared_ptr<const CBlock>& pblock) override;\n+\n+\n+    void InitializeNode(CNode* pnode) override;\n+    void FinalizeNode(NodeId nodeid, bool& fUpdateConnectionTime) override;\n+    /** Process protocol messages received from a given node */\n+    bool ProcessMessages(CNode* pfrom, std::atomic<bool>& interrupt) override;\n+    /**\n+    * Send queued protocol messages to be sent to a give node.\n+    *\n+    * @param[in]   pto             The node which we are sending messages to.\n+    * @param[in]   interrupt       Interrupt condition for processing threads\n+    * @return                      True if there is more work to be done\n+    */\n+    bool SendMessages(CNode* pto, std::atomic<bool>& interrupt) override;\n };\n \n struct CNodeStateStats {\n@@ -52,16 +61,4 @@ bool GetNodeStateStats(NodeId nodeid, CNodeStateStats &stats);\n /** Increase a node's misbehavior score. */\n void Misbehaving(NodeId nodeid, int howmuch);\n \n-/** Process protocol messages received from a given node */\n-bool ProcessMessages(CNode* pfrom, CConnman& connman, const std::atomic<bool>& interrupt);\n-/**\n- * Send queued protocol messages to be sent to a give node.\n- *\n- * @param[in]   pto             The node which we are sending messages to.\n- * @param[in]   connman         The connection manager for that node.\n- * @param[in]   interrupt       Interrupt condition for processing threads\n- * @return                      True if there is more work to be done\n- */\n-bool SendMessages(CNode* pto, CConnman& connman, const std::atomic<bool>& interrupt);\n-\n #endif // BITCOIN_NET_PROCESSING_H"
      },
      {
        "sha": "b8a261c921027a7531c8e3b301668d6a301c57e5",
        "filename": "src/netaddress.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 7,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/netaddress.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/netaddress.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netaddress.cpp?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -271,7 +271,7 @@ std::string CNetAddr::ToStringIP() const\n     socklen_t socklen = sizeof(sockaddr);\n     if (serv.GetSockAddr((struct sockaddr*)&sockaddr, &socklen)) {\n         char name[1025] = \"\";\n-        if (!getnameinfo((const struct sockaddr*)&sockaddr, socklen, name, sizeof(name), NULL, 0, NI_NUMERICHOST))\n+        if (!getnameinfo((const struct sockaddr*)&sockaddr, socklen, name, sizeof(name), nullptr, 0, NI_NUMERICHOST))\n             return std::string(name);\n     }\n     if (IsIPv4())\n@@ -407,7 +407,7 @@ static const int NET_UNKNOWN = NET_MAX + 0;\n static const int NET_TEREDO  = NET_MAX + 1;\n int static GetExtNetwork(const CNetAddr *addr)\n {\n-    if (addr == NULL)\n+    if (addr == nullptr)\n         return NET_UNKNOWN;\n     if (addr->IsRFC4380())\n         return NET_TEREDO;\n@@ -598,11 +598,6 @@ std::string CService::ToString() const\n     return ToStringIPPort();\n }\n \n-void CService::SetPort(unsigned short portIn)\n-{\n-    port = portIn;\n-}\n-\n CSubNet::CSubNet():\n     valid(false)\n {"
      },
      {
        "sha": "6ca99b36b58793807f45b7edfeccdf9cd01010bc",
        "filename": "src/netaddress.h",
        "status": "modified",
        "additions": 5,
        "deletions": 6,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/netaddress.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/netaddress.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netaddress.h?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -36,7 +36,7 @@ class CNetAddr\n \n     public:\n         CNetAddr();\n-        CNetAddr(const struct in_addr& ipv4Addr);\n+        explicit CNetAddr(const struct in_addr& ipv4Addr);\n         void Init();\n         void SetIP(const CNetAddr& ip);\n \n@@ -80,9 +80,9 @@ class CNetAddr\n         uint64_t GetHash() const;\n         bool GetInAddr(struct in_addr* pipv4Addr) const;\n         std::vector<unsigned char> GetGroup() const;\n-        int GetReachabilityFrom(const CNetAddr *paddrPartner = NULL) const;\n+        int GetReachabilityFrom(const CNetAddr *paddrPartner = nullptr) const;\n \n-        CNetAddr(const struct in6_addr& pipv6Addr, const uint32_t scope = 0);\n+        explicit CNetAddr(const struct in6_addr& pipv6Addr, const uint32_t scope = 0);\n         bool GetIn6Addr(struct in6_addr* pipv6Addr) const;\n \n         friend bool operator==(const CNetAddr& a, const CNetAddr& b);\n@@ -146,9 +146,8 @@ class CService : public CNetAddr\n         CService();\n         CService(const CNetAddr& ip, unsigned short port);\n         CService(const struct in_addr& ipv4Addr, unsigned short port);\n-        CService(const struct sockaddr_in& addr);\n+        explicit CService(const struct sockaddr_in& addr);\n         void Init();\n-        void SetPort(unsigned short portIn);\n         unsigned short GetPort() const;\n         bool GetSockAddr(struct sockaddr* paddr, socklen_t *addrlen) const;\n         bool SetSockAddr(const struct sockaddr* paddr);\n@@ -161,7 +160,7 @@ class CService : public CNetAddr\n         std::string ToStringIPPort() const;\n \n         CService(const struct in6_addr& ipv6Addr, unsigned short port);\n-        CService(const struct sockaddr_in6& addr);\n+        explicit CService(const struct sockaddr_in6& addr);\n \n         ADD_SERIALIZE_METHODS;\n "
      },
      {
        "sha": "5a560bc95a4750533d3ba627d9d195ffd0c3fd9c",
        "filename": "src/netbase.cpp",
        "status": "modified",
        "additions": 103,
        "deletions": 91,
        "changes": 194,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/netbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/netbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.cpp?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -81,13 +81,13 @@ bool static LookupIntern(const char *pszName, std::vector<CNetAddr>& vIP, unsign\n #else\n     aiHint.ai_flags = fAllowLookup ? AI_ADDRCONFIG : AI_NUMERICHOST;\n #endif\n-    struct addrinfo *aiRes = NULL;\n-    int nErr = getaddrinfo(pszName, NULL, &aiHint, &aiRes);\n+    struct addrinfo *aiRes = nullptr;\n+    int nErr = getaddrinfo(pszName, nullptr, &aiHint, &aiRes);\n     if (nErr)\n         return false;\n \n     struct addrinfo *aiTrav = aiRes;\n-    while (aiTrav != NULL && (nMaxSolutions == 0 || vIP.size() < nMaxSolutions))\n+    while (aiTrav != nullptr && (nMaxSolutions == 0 || vIP.size() < nMaxSolutions))\n     {\n         CNetAddr resolved;\n         if (aiTrav->ai_family == AF_INET)\n@@ -184,6 +184,48 @@ struct timeval MillisToTimeval(int64_t nTimeout)\n     return timeout;\n }\n \n+/** SOCKS version */\n+enum SOCKSVersion: uint8_t {\n+    SOCKS4 = 0x04,\n+    SOCKS5 = 0x05\n+};\n+\n+/** Values defined for METHOD in RFC1928 */\n+enum SOCKS5Method: uint8_t {\n+    NOAUTH = 0x00,        //! No authentication required\n+    GSSAPI = 0x01,        //! GSSAPI\n+    USER_PASS = 0x02,     //! Username/password\n+    NO_ACCEPTABLE = 0xff, //! No acceptable methods\n+};\n+\n+/** Values defined for CMD in RFC1928 */\n+enum SOCKS5Command: uint8_t {\n+    CONNECT = 0x01,\n+    BIND = 0x02,\n+    UDP_ASSOCIATE = 0x03\n+};\n+\n+/** Values defined for REP in RFC1928 */\n+enum SOCKS5Reply: uint8_t {\n+    SUCCEEDED = 0x00,        //! Succeeded\n+    GENFAILURE = 0x01,       //! General failure\n+    NOTALLOWED = 0x02,       //! Connection not allowed by ruleset\n+    NETUNREACHABLE = 0x03,   //! Network unreachable\n+    HOSTUNREACHABLE = 0x04,  //! Network unreachable\n+    CONNREFUSED = 0x05,      //! Connection refused\n+    TTLEXPIRED = 0x06,       //! TTL expired\n+    CMDUNSUPPORTED = 0x07,   //! Command not supported\n+    ATYPEUNSUPPORTED = 0x08, //! Address type not supported\n+};\n+\n+/** Values defined for ATYPE in RFC1928 */\n+enum SOCKS5Atyp: uint8_t {\n+    IPV4 = 0x01,\n+    DOMAINNAME = 0x03,\n+    IPV6 = 0x04,\n+};\n+\n+/** Status codes that can be returned by InterruptibleRecv */\n enum class IntrRecvError {\n     OK,\n     Timeout,\n@@ -203,15 +245,15 @@ enum class IntrRecvError {\n  *\n  * @note This function requires that hSocket is in non-blocking mode.\n  */\n-static IntrRecvError InterruptibleRecv(char* data, size_t len, int timeout, SOCKET& hSocket)\n+static IntrRecvError InterruptibleRecv(uint8_t* data, size_t len, int timeout, const SOCKET& hSocket)\n {\n     int64_t curTime = GetTimeMillis();\n     int64_t endTime = curTime + timeout;\n     // Maximum time to wait in one select call. It will take up until this time (in millis)\n     // to break off in case of an interruption.\n     const int64_t maxWait = 1000;\n     while (len > 0 && curTime < endTime) {\n-        ssize_t ret = recv(hSocket, data, len, 0); // Optimistically try the recv first\n+        ssize_t ret = recv(hSocket, (char*)data, len, 0); // Optimistically try the recv first\n         if (ret > 0) {\n             len -= ret;\n             data += ret;\n@@ -227,7 +269,7 @@ static IntrRecvError InterruptibleRecv(char* data, size_t len, int timeout, SOCK\n                 fd_set fdset;\n                 FD_ZERO(&fdset);\n                 FD_SET(hSocket, &fdset);\n-                int nRet = select(hSocket + 1, &fdset, NULL, NULL, &tval);\n+                int nRet = select(hSocket + 1, &fdset, nullptr, nullptr, &tval);\n                 if (nRet == SOCKET_ERROR) {\n                     return IntrRecvError::NetworkError;\n                 }\n@@ -242,24 +284,35 @@ static IntrRecvError InterruptibleRecv(char* data, size_t len, int timeout, SOCK\n     return len == 0 ? IntrRecvError::OK : IntrRecvError::Timeout;\n }\n \n+/** Credentials for proxy authentication */\n struct ProxyCredentials\n {\n     std::string username;\n     std::string password;\n };\n \n-std::string Socks5ErrorString(int err)\n+/** Convert SOCKS5 reply to a an error message */\n+std::string Socks5ErrorString(uint8_t err)\n {\n     switch(err) {\n-        case 0x01: return \"general failure\";\n-        case 0x02: return \"connection not allowed\";\n-        case 0x03: return \"network unreachable\";\n-        case 0x04: return \"host unreachable\";\n-        case 0x05: return \"connection refused\";\n-        case 0x06: return \"TTL expired\";\n-        case 0x07: return \"protocol error\";\n-        case 0x08: return \"address type not supported\";\n-        default:   return \"unknown\";\n+        case SOCKS5Reply::GENFAILURE:\n+            return \"general failure\";\n+        case SOCKS5Reply::NOTALLOWED:\n+            return \"connection not allowed\";\n+        case SOCKS5Reply::NETUNREACHABLE:\n+            return \"network unreachable\";\n+        case SOCKS5Reply::HOSTUNREACHABLE:\n+            return \"host unreachable\";\n+        case SOCKS5Reply::CONNREFUSED:\n+            return \"connection refused\";\n+        case SOCKS5Reply::TTLEXPIRED:\n+            return \"TTL expired\";\n+        case SOCKS5Reply::CMDUNSUPPORTED:\n+            return \"protocol error\";\n+        case SOCKS5Reply::ATYPEUNSUPPORTED:\n+            return \"address type not supported\";\n+        default:\n+            return \"unknown\";\n     }\n }\n \n@@ -274,34 +327,34 @@ static bool Socks5(const std::string& strDest, int port, const ProxyCredentials\n     }\n     // Accepted authentication methods\n     std::vector<uint8_t> vSocks5Init;\n-    vSocks5Init.push_back(0x05);\n+    vSocks5Init.push_back(SOCKSVersion::SOCKS5);\n     if (auth) {\n-        vSocks5Init.push_back(0x02); // # METHODS\n-        vSocks5Init.push_back(0x00); // X'00' NO AUTHENTICATION REQUIRED\n-        vSocks5Init.push_back(0x02); // X'02' USERNAME/PASSWORD (RFC1929)\n+        vSocks5Init.push_back(0x02); // Number of methods\n+        vSocks5Init.push_back(SOCKS5Method::NOAUTH);\n+        vSocks5Init.push_back(SOCKS5Method::USER_PASS);\n     } else {\n-        vSocks5Init.push_back(0x01); // # METHODS\n-        vSocks5Init.push_back(0x00); // X'00' NO AUTHENTICATION REQUIRED\n+        vSocks5Init.push_back(0x01); // Number of methods\n+        vSocks5Init.push_back(SOCKS5Method::NOAUTH);\n     }\n     ssize_t ret = send(hSocket, (const char*)vSocks5Init.data(), vSocks5Init.size(), MSG_NOSIGNAL);\n     if (ret != (ssize_t)vSocks5Init.size()) {\n         CloseSocket(hSocket);\n         return error(\"Error sending to proxy\");\n     }\n-    char pchRet1[2];\n+    uint8_t pchRet1[2];\n     if ((recvr = InterruptibleRecv(pchRet1, 2, SOCKS5_RECV_TIMEOUT, hSocket)) != IntrRecvError::OK) {\n         CloseSocket(hSocket);\n         LogPrintf(\"Socks5() connect to %s:%d failed: InterruptibleRecv() timeout or other failure\\n\", strDest, port);\n         return false;\n     }\n-    if (pchRet1[0] != 0x05) {\n+    if (pchRet1[0] != SOCKSVersion::SOCKS5) {\n         CloseSocket(hSocket);\n         return error(\"Proxy failed to initialize\");\n     }\n-    if (pchRet1[1] == 0x02 && auth) {\n+    if (pchRet1[1] == SOCKS5Method::USER_PASS && auth) {\n         // Perform username/password authentication (as described in RFC1929)\n         std::vector<uint8_t> vAuth;\n-        vAuth.push_back(0x01);\n+        vAuth.push_back(0x01); // Current (and only) version of user/pass subnegotiation\n         if (auth->username.size() > 255 || auth->password.size() > 255)\n             return error(\"Proxy username or password too long\");\n         vAuth.push_back(auth->username.size());\n@@ -314,7 +367,7 @@ static bool Socks5(const std::string& strDest, int port, const ProxyCredentials\n             return error(\"Error sending authentication to proxy\");\n         }\n         LogPrint(BCLog::PROXY, \"SOCKS5 sending proxy authentication %s:%s\\n\", auth->username, auth->password);\n-        char pchRetA[2];\n+        uint8_t pchRetA[2];\n         if ((recvr = InterruptibleRecv(pchRetA, 2, SOCKS5_RECV_TIMEOUT, hSocket)) != IntrRecvError::OK) {\n             CloseSocket(hSocket);\n             return error(\"Error reading proxy authentication response\");\n@@ -323,17 +376,17 @@ static bool Socks5(const std::string& strDest, int port, const ProxyCredentials\n             CloseSocket(hSocket);\n             return error(\"Proxy authentication unsuccessful\");\n         }\n-    } else if (pchRet1[1] == 0x00) {\n+    } else if (pchRet1[1] == SOCKS5Method::NOAUTH) {\n         // Perform no authentication\n     } else {\n         CloseSocket(hSocket);\n         return error(\"Proxy requested wrong authentication method %02x\", pchRet1[1]);\n     }\n     std::vector<uint8_t> vSocks5;\n-    vSocks5.push_back(0x05); // VER protocol version\n-    vSocks5.push_back(0x01); // CMD CONNECT\n-    vSocks5.push_back(0x00); // RSV Reserved\n-    vSocks5.push_back(0x03); // ATYP DOMAINNAME\n+    vSocks5.push_back(SOCKSVersion::SOCKS5); // VER protocol version\n+    vSocks5.push_back(SOCKS5Command::CONNECT); // CMD CONNECT\n+    vSocks5.push_back(0x00); // RSV Reserved must be 0\n+    vSocks5.push_back(SOCKS5Atyp::DOMAINNAME); // ATYP DOMAINNAME\n     vSocks5.push_back(strDest.size()); // Length<=255 is checked at beginning of function\n     vSocks5.insert(vSocks5.end(), strDest.begin(), strDest.end());\n     vSocks5.push_back((port >> 8) & 0xFF);\n@@ -343,7 +396,7 @@ static bool Socks5(const std::string& strDest, int port, const ProxyCredentials\n         CloseSocket(hSocket);\n         return error(\"Error sending to proxy\");\n     }\n-    char pchRet2[4];\n+    uint8_t pchRet2[4];\n     if ((recvr = InterruptibleRecv(pchRet2, 4, SOCKS5_RECV_TIMEOUT, hSocket)) != IntrRecvError::OK) {\n         CloseSocket(hSocket);\n         if (recvr == IntrRecvError::Timeout) {\n@@ -355,26 +408,26 @@ static bool Socks5(const std::string& strDest, int port, const ProxyCredentials\n             return error(\"Error while reading proxy response\");\n         }\n     }\n-    if (pchRet2[0] != 0x05) {\n+    if (pchRet2[0] != SOCKSVersion::SOCKS5) {\n         CloseSocket(hSocket);\n         return error(\"Proxy failed to accept request\");\n     }\n-    if (pchRet2[1] != 0x00) {\n+    if (pchRet2[1] != SOCKS5Reply::SUCCEEDED) {\n         // Failures to connect to a peer that are not proxy errors\n         CloseSocket(hSocket);\n         LogPrintf(\"Socks5() connect to %s:%d failed: %s\\n\", strDest, port, Socks5ErrorString(pchRet2[1]));\n         return false;\n     }\n-    if (pchRet2[2] != 0x00) {\n+    if (pchRet2[2] != 0x00) { // Reserved field must be 0\n         CloseSocket(hSocket);\n         return error(\"Error: malformed proxy response\");\n     }\n-    char pchRet3[256];\n+    uint8_t pchRet3[256];\n     switch (pchRet2[3])\n     {\n-        case 0x01: recvr = InterruptibleRecv(pchRet3, 4, SOCKS5_RECV_TIMEOUT, hSocket); break;\n-        case 0x04: recvr = InterruptibleRecv(pchRet3, 16, SOCKS5_RECV_TIMEOUT, hSocket); break;\n-        case 0x03:\n+        case SOCKS5Atyp::IPV4: recvr = InterruptibleRecv(pchRet3, 4, SOCKS5_RECV_TIMEOUT, hSocket); break;\n+        case SOCKS5Atyp::IPV6: recvr = InterruptibleRecv(pchRet3, 16, SOCKS5_RECV_TIMEOUT, hSocket); break;\n+        case SOCKS5Atyp::DOMAINNAME:\n         {\n             recvr = InterruptibleRecv(pchRet3, 1, SOCKS5_RECV_TIMEOUT, hSocket);\n             if (recvr != IntrRecvError::OK) {\n@@ -399,7 +452,7 @@ static bool Socks5(const std::string& strDest, int port, const ProxyCredentials\n     return true;\n }\n \n-bool static ConnectSocketDirectly(const CService &addrConnect, SOCKET& hSocketRet, int nTimeout)\n+bool ConnectSocketDirectly(const CService &addrConnect, SOCKET& hSocketRet, int nTimeout)\n {\n     hSocketRet = INVALID_SOCKET;\n \n@@ -424,8 +477,10 @@ bool static ConnectSocketDirectly(const CService &addrConnect, SOCKET& hSocketRe\n     SetSocketNoDelay(hSocket);\n \n     // Set to non-blocking\n-    if (!SetSocketNonBlocking(hSocket, true))\n+    if (!SetSocketNonBlocking(hSocket, true)) {\n+        CloseSocket(hSocket);\n         return error(\"ConnectSocketDirectly: Setting socket to non-blocking failed, error %s\\n\", NetworkErrorString(WSAGetLastError()));\n+    }\n \n     if (connect(hSocket, (struct sockaddr*)&sockaddr, len) == SOCKET_ERROR)\n     {\n@@ -437,7 +492,7 @@ bool static ConnectSocketDirectly(const CService &addrConnect, SOCKET& hSocketRe\n             fd_set fdset;\n             FD_ZERO(&fdset);\n             FD_SET(hSocket, &fdset);\n-            int nRet = select(hSocket + 1, NULL, &fdset, NULL, &timeout);\n+            int nRet = select(hSocket + 1, nullptr, &fdset, nullptr, &timeout);\n             if (nRet == 0)\n             {\n                 LogPrint(BCLog::NET, \"connection to %s timeout\\n\", addrConnect.ToString());\n@@ -532,7 +587,7 @@ bool IsProxy(const CNetAddr &addr) {\n     return false;\n }\n \n-static bool ConnectThroughProxy(const proxyType &proxy, const std::string& strDest, int port, SOCKET& hSocketRet, int nTimeout, bool *outProxyConnectionFailed)\n+bool ConnectThroughProxy(const proxyType &proxy, const std::string& strDest, int port, SOCKET& hSocketRet, int nTimeout, bool *outProxyConnectionFailed)\n {\n     SOCKET hSocket = INVALID_SOCKET;\n     // first connect to proxy server\n@@ -556,47 +611,6 @@ static bool ConnectThroughProxy(const proxyType &proxy, const std::string& strDe\n     hSocketRet = hSocket;\n     return true;\n }\n-\n-bool ConnectSocket(const CService &addrDest, SOCKET& hSocketRet, int nTimeout, bool *outProxyConnectionFailed)\n-{\n-    proxyType proxy;\n-    if (outProxyConnectionFailed)\n-        *outProxyConnectionFailed = false;\n-\n-    if (GetProxy(addrDest.GetNetwork(), proxy))\n-        return ConnectThroughProxy(proxy, addrDest.ToStringIP(), addrDest.GetPort(), hSocketRet, nTimeout, outProxyConnectionFailed);\n-    else // no proxy needed (none set for target network)\n-        return ConnectSocketDirectly(addrDest, hSocketRet, nTimeout);\n-}\n-\n-bool ConnectSocketByName(CService &addr, SOCKET& hSocketRet, const char *pszDest, int portDefault, int nTimeout, bool *outProxyConnectionFailed)\n-{\n-    std::string strDest;\n-    int port = portDefault;\n-\n-    if (outProxyConnectionFailed)\n-        *outProxyConnectionFailed = false;\n-\n-    SplitHostPort(std::string(pszDest), port, strDest);\n-\n-    proxyType proxy;\n-    GetNameProxy(proxy);\n-\n-    std::vector<CService> addrResolved;\n-    if (Lookup(strDest.c_str(), addrResolved, port, fNameLookup && !HaveNameProxy(), 256)) {\n-        if (addrResolved.size() > 0) {\n-            addr = addrResolved[GetRand(addrResolved.size())];\n-            return ConnectSocket(addr, hSocketRet, nTimeout);\n-        }\n-    }\n-\n-    addr = CService();\n-\n-    if (!HaveNameProxy())\n-        return false;\n-    return ConnectThroughProxy(proxy, strDest, port, hSocketRet, nTimeout, outProxyConnectionFailed);\n-}\n-\n bool LookupSubNet(const char* pszName, CSubNet& ret)\n {\n     std::string strSubnet(pszName);\n@@ -640,8 +654,8 @@ std::string NetworkErrorString(int err)\n     char buf[256];\n     buf[0] = 0;\n     if(FormatMessageA(FORMAT_MESSAGE_FROM_SYSTEM | FORMAT_MESSAGE_IGNORE_INSERTS | FORMAT_MESSAGE_MAX_WIDTH_MASK,\n-            NULL, err, MAKELANGID(LANG_NEUTRAL, SUBLANG_DEFAULT),\n-            buf, sizeof(buf), NULL))\n+            nullptr, err, MAKELANGID(LANG_NEUTRAL, SUBLANG_DEFAULT),\n+            buf, sizeof(buf), nullptr))\n     {\n         return strprintf(\"%s (%d)\", buf, err);\n     }\n@@ -682,7 +696,7 @@ bool CloseSocket(SOCKET& hSocket)\n     return ret != SOCKET_ERROR;\n }\n \n-bool SetSocketNonBlocking(SOCKET& hSocket, bool fNonBlocking)\n+bool SetSocketNonBlocking(const SOCKET& hSocket, bool fNonBlocking)\n {\n     if (fNonBlocking) {\n #ifdef WIN32\n@@ -692,7 +706,6 @@ bool SetSocketNonBlocking(SOCKET& hSocket, bool fNonBlocking)\n         int fFlags = fcntl(hSocket, F_GETFL, 0);\n         if (fcntl(hSocket, F_SETFL, fFlags | O_NONBLOCK) == SOCKET_ERROR) {\n #endif\n-            CloseSocket(hSocket);\n             return false;\n         }\n     } else {\n@@ -703,15 +716,14 @@ bool SetSocketNonBlocking(SOCKET& hSocket, bool fNonBlocking)\n         int fFlags = fcntl(hSocket, F_GETFL, 0);\n         if (fcntl(hSocket, F_SETFL, fFlags & ~O_NONBLOCK) == SOCKET_ERROR) {\n #endif\n-            CloseSocket(hSocket);\n             return false;\n         }\n     }\n \n     return true;\n }\n \n-bool SetSocketNoDelay(SOCKET& hSocket)\n+bool SetSocketNoDelay(const SOCKET& hSocket)\n {\n     int set = 1;\n     int rc = setsockopt(hSocket, IPPROTO_TCP, TCP_NODELAY, (const char*)&set, sizeof(int));"
      },
      {
        "sha": "e7d7bcb3751d1a94aa9eaec77a1438e3492f7edd",
        "filename": "src/netbase.h",
        "status": "modified",
        "additions": 6,
        "deletions": 5,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/netbase.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/netbase.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.h?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -29,7 +29,7 @@ class proxyType\n {\n public:\n     proxyType(): randomize_credentials(false) {}\n-    proxyType(const CService &_proxy, bool _randomize_credentials=false): proxy(_proxy), randomize_credentials(_randomize_credentials) {}\n+    explicit proxyType(const CService &_proxy, bool _randomize_credentials=false): proxy(_proxy), randomize_credentials(_randomize_credentials) {}\n \n     bool IsValid() const { return proxy.IsValid(); }\n \n@@ -44,22 +44,23 @@ bool GetProxy(enum Network net, proxyType &proxyInfoOut);\n bool IsProxy(const CNetAddr &addr);\n bool SetNameProxy(const proxyType &addrProxy);\n bool HaveNameProxy();\n+bool GetNameProxy(proxyType &nameProxyOut);\n bool LookupHost(const char *pszName, std::vector<CNetAddr>& vIP, unsigned int nMaxSolutions, bool fAllowLookup);\n bool LookupHost(const char *pszName, CNetAddr& addr, bool fAllowLookup);\n bool Lookup(const char *pszName, CService& addr, int portDefault, bool fAllowLookup);\n bool Lookup(const char *pszName, std::vector<CService>& vAddr, int portDefault, bool fAllowLookup, unsigned int nMaxSolutions);\n CService LookupNumeric(const char *pszName, int portDefault = 0);\n bool LookupSubNet(const char *pszName, CSubNet& subnet);\n-bool ConnectSocket(const CService &addr, SOCKET& hSocketRet, int nTimeout, bool *outProxyConnectionFailed = 0);\n-bool ConnectSocketByName(CService &addr, SOCKET& hSocketRet, const char *pszDest, int portDefault, int nTimeout, bool *outProxyConnectionFailed = 0);\n+bool ConnectSocketDirectly(const CService &addrConnect, SOCKET& hSocketRet, int nTimeout);\n+bool ConnectThroughProxy(const proxyType &proxy, const std::string& strDest, int port, SOCKET& hSocketRet, int nTimeout, bool *outProxyConnectionFailed);\n /** Return readable error string for a network error code */\n std::string NetworkErrorString(int err);\n /** Close socket and set hSocket to INVALID_SOCKET */\n bool CloseSocket(SOCKET& hSocket);\n /** Disable or enable blocking-mode for a socket */\n-bool SetSocketNonBlocking(SOCKET& hSocket, bool fNonBlocking);\n+bool SetSocketNonBlocking(const SOCKET& hSocket, bool fNonBlocking);\n /** Set the TCP_NODELAY flag on a socket */\n-bool SetSocketNoDelay(SOCKET& hSocket);\n+bool SetSocketNoDelay(const SOCKET& hSocket);\n /**\n  * Convert milliseconds to a struct timeval for e.g. select.\n  */"
      },
      {
        "sha": "79b2501c5d5821323f8ae58d888299fc1181928c",
        "filename": "src/netmessagemaker.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/netmessagemaker.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/netmessagemaker.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netmessagemaker.h?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -12,7 +12,7 @@\n class CNetMsgMaker\n {\n public:\n-    CNetMsgMaker(int nVersionIn) : nVersion(nVersionIn){}\n+    explicit CNetMsgMaker(int nVersionIn) : nVersion(nVersionIn){}\n \n     template <typename... Args>\n     CSerializedNetMsg Make(int nFlags, std::string sCommand, Args&&... args) const"
      },
      {
        "sha": "3449cdd6990d5a3af10479ef8e7feea6fd53fc6e",
        "filename": "src/policy/feerate.h",
        "status": "modified",
        "additions": 6,
        "deletions": 2,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/policy/feerate.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/policy/feerate.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/feerate.h?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -20,13 +20,17 @@ class CFeeRate\n {\n private:\n     CAmount nSatoshisPerK; // unit is satoshis-per-1,000-bytes\n+\n public:\n     /** Fee rate of 0 satoshis per kB */\n     CFeeRate() : nSatoshisPerK(0) { }\n-    explicit CFeeRate(const CAmount& _nSatoshisPerK): nSatoshisPerK(_nSatoshisPerK) { }\n+    template<typename I>\n+    CFeeRate(const I _nSatoshisPerK): nSatoshisPerK(_nSatoshisPerK) {\n+        // We've previously had bugs creep in from silent double->int conversion...\n+        static_assert(std::is_integral<I>::value, \"CFeeRate should be used without floats\");\n+    }\n     /** Constructor for a fee rate in satoshis per kB. The size in bytes must not exceed (2^63 - 1)*/\n     CFeeRate(const CAmount& nFeePaid, size_t nBytes);\n-    CFeeRate(const CFeeRate& other) { nSatoshisPerK = other.nSatoshisPerK; }\n     /**\n      * Return the fee in satoshis for the given size in bytes.\n      */"
      },
      {
        "sha": "8056f385abf3091c66921ea943e1a978e1aef7c6",
        "filename": "src/policy/fees.cpp",
        "status": "modified",
        "additions": 55,
        "deletions": 66,
        "changes": 121,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/policy/fees.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/policy/fees.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/fees.cpp?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -714,7 +714,7 @@ CFeeRate CBlockPolicyEstimator::estimateRawFee(int confTarget, double successThr\n     if (median < 0)\n         return CFeeRate(0);\n \n-    return CFeeRate(median);\n+    return CFeeRate(llround(median));\n }\n \n unsigned int CBlockPolicyEstimator::HighestTargetTracked(FeeEstimateHorizon horizon) const\n@@ -826,93 +826,82 @@ double CBlockPolicyEstimator::estimateConservativeFee(unsigned int doubleTarget,\n  * estimates, however, required the 95% threshold at 2 * target be met for any\n  * longer time horizons also.\n  */\n-CFeeRate CBlockPolicyEstimator::estimateSmartFee(int confTarget, FeeCalculation *feeCalc, const CTxMemPool& pool, bool conservative) const\n+CFeeRate CBlockPolicyEstimator::estimateSmartFee(int confTarget, FeeCalculation *feeCalc, bool conservative) const\n {\n+    LOCK(cs_feeEstimator);\n+\n     if (feeCalc) {\n         feeCalc->desiredTarget = confTarget;\n         feeCalc->returnedTarget = confTarget;\n     }\n \n     double median = -1;\n     EstimationResult tempResult;\n-    {\n-        LOCK(cs_feeEstimator);\n-\n-        // Return failure if trying to analyze a target we're not tracking\n-        if (confTarget <= 0 || (unsigned int)confTarget > longStats->GetMaxConfirms())\n-            return CFeeRate(0);\n \n-        // It's not possible to get reasonable estimates for confTarget of 1\n-        if (confTarget == 1)\n-            confTarget = 2;\n+    // Return failure if trying to analyze a target we're not tracking\n+    if (confTarget <= 0 || (unsigned int)confTarget > longStats->GetMaxConfirms()) {\n+        return CFeeRate(0);  // error condition\n+    }\n \n-        unsigned int maxUsableEstimate = MaxUsableEstimate();\n-        if (maxUsableEstimate <= 1)\n-            return CFeeRate(0);\n+    // It's not possible to get reasonable estimates for confTarget of 1\n+    if (confTarget == 1) confTarget = 2;\n \n-        if ((unsigned int)confTarget > maxUsableEstimate) {\n-            confTarget = maxUsableEstimate;\n-        }\n+    unsigned int maxUsableEstimate = MaxUsableEstimate();\n+    if ((unsigned int)confTarget > maxUsableEstimate) {\n+        confTarget = maxUsableEstimate;\n+    }\n+    if (feeCalc) feeCalc->returnedTarget = confTarget;\n \n-        assert(confTarget > 0); //estimateCombinedFee and estimateConservativeFee take unsigned ints\n-        /** true is passed to estimateCombined fee for target/2 and target so\n-         * that we check the max confirms for shorter time horizons as well.\n-         * This is necessary to preserve monotonically increasing estimates.\n-         * For non-conservative estimates we do the same thing for 2*target, but\n-         * for conservative estimates we want to skip these shorter horizons\n-         * checks for 2*target because we are taking the max over all time\n-         * horizons so we already have monotonically increasing estimates and\n-         * the purpose of conservative estimates is not to let short term\n-         * fluctuations lower our estimates by too much.\n-         */\n-        double halfEst = estimateCombinedFee(confTarget/2, HALF_SUCCESS_PCT, true, &tempResult);\n+    if (confTarget <= 1) return CFeeRate(0); // error condition\n+\n+    assert(confTarget > 0); //estimateCombinedFee and estimateConservativeFee take unsigned ints\n+    /** true is passed to estimateCombined fee for target/2 and target so\n+     * that we check the max confirms for shorter time horizons as well.\n+     * This is necessary to preserve monotonically increasing estimates.\n+     * For non-conservative estimates we do the same thing for 2*target, but\n+     * for conservative estimates we want to skip these shorter horizons\n+     * checks for 2*target because we are taking the max over all time\n+     * horizons so we already have monotonically increasing estimates and\n+     * the purpose of conservative estimates is not to let short term\n+     * fluctuations lower our estimates by too much.\n+     */\n+    double halfEst = estimateCombinedFee(confTarget/2, HALF_SUCCESS_PCT, true, &tempResult);\n+    if (feeCalc) {\n+        feeCalc->est = tempResult;\n+        feeCalc->reason = FeeReason::HALF_ESTIMATE;\n+    }\n+    median = halfEst;\n+    double actualEst = estimateCombinedFee(confTarget, SUCCESS_PCT, true, &tempResult);\n+    if (actualEst > median) {\n+        median = actualEst;\n         if (feeCalc) {\n             feeCalc->est = tempResult;\n-            feeCalc->reason = FeeReason::HALF_ESTIMATE;\n+            feeCalc->reason = FeeReason::FULL_ESTIMATE;\n         }\n-        median = halfEst;\n-        double actualEst = estimateCombinedFee(confTarget, SUCCESS_PCT, true, &tempResult);\n-        if (actualEst > median) {\n-            median = actualEst;\n-            if (feeCalc) {\n-                feeCalc->est = tempResult;\n-                feeCalc->reason = FeeReason::FULL_ESTIMATE;\n-            }\n+    }\n+    double doubleEst = estimateCombinedFee(2 * confTarget, DOUBLE_SUCCESS_PCT, !conservative, &tempResult);\n+    if (doubleEst > median) {\n+        median = doubleEst;\n+        if (feeCalc) {\n+            feeCalc->est = tempResult;\n+            feeCalc->reason = FeeReason::DOUBLE_ESTIMATE;\n         }\n-        double doubleEst = estimateCombinedFee(2 * confTarget, DOUBLE_SUCCESS_PCT, !conservative, &tempResult);\n-        if (doubleEst > median) {\n-            median = doubleEst;\n+    }\n+\n+    if (conservative || median == -1) {\n+        double consEst =  estimateConservativeFee(2 * confTarget, &tempResult);\n+        if (consEst > median) {\n+            median = consEst;\n             if (feeCalc) {\n                 feeCalc->est = tempResult;\n-                feeCalc->reason = FeeReason::DOUBLE_ESTIMATE;\n+                feeCalc->reason = FeeReason::CONSERVATIVE;\n             }\n         }\n-\n-        if (conservative || median == -1) {\n-            double consEst =  estimateConservativeFee(2 * confTarget, &tempResult);\n-            if (consEst > median) {\n-                median = consEst;\n-                if (feeCalc) {\n-                    feeCalc->est = tempResult;\n-                    feeCalc->reason = FeeReason::CONSERVATIVE;\n-                }\n-            }\n-        }\n-    } // Must unlock cs_feeEstimator before taking mempool locks\n-\n-    if (feeCalc) feeCalc->returnedTarget = confTarget;\n-\n-    // If mempool is limiting txs , return at least the min feerate from the mempool\n-    CAmount minPoolFee = pool.GetMinFee(GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000).GetFeePerK();\n-    if (minPoolFee > 0 && minPoolFee > median) {\n-        if (feeCalc) feeCalc->reason = FeeReason::MEMPOOL_MIN;\n-        return CFeeRate(minPoolFee);\n     }\n \n-    if (median < 0)\n-        return CFeeRate(0);\n+    if (median < 0) return CFeeRate(0); // error condition\n \n-    return CFeeRate(median);\n+    return CFeeRate(llround(median));\n }\n \n \n@@ -1054,5 +1043,5 @@ CAmount FeeFilterRounder::round(CAmount currentMinFee)\n     if ((it != feeset.begin() && insecure_rand.rand32() % 3 != 0) || it == feeset.end()) {\n         it--;\n     }\n-    return *it;\n+    return static_cast<CAmount>(*it);\n }"
      },
      {
        "sha": "6edaf28714e047fa78621bc3f2e0a819916cdeba",
        "filename": "src/policy/fees.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/policy/fees.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/policy/fees.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/fees.h?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -208,7 +208,7 @@ class CBlockPolicyEstimator\n      *  the closest target where one can be given.  'conservative' estimates are\n      *  valid over longer time horizons also.\n      */\n-    CFeeRate estimateSmartFee(int confTarget, FeeCalculation *feeCalc, const CTxMemPool& pool, bool conservative) const;\n+    CFeeRate estimateSmartFee(int confTarget, FeeCalculation *feeCalc, bool conservative) const;\n \n     /** Return a specific fee estimate calculation with a given success\n      * threshold and time horizon, and optionally return detailed data about\n@@ -284,7 +284,7 @@ class FeeFilterRounder\n \n public:\n     /** Create new FeeFilterRounder */\n-    FeeFilterRounder(const CFeeRate& minIncrementalFee);\n+    explicit FeeFilterRounder(const CFeeRate& minIncrementalFee);\n \n     /** Quantize a minimum fee for privacy purpose before broadcast **/\n     CAmount round(CAmount currentMinFee);"
      },
      {
        "sha": "b2fb284508a7bdc359216aa69cfe604e2891b91a",
        "filename": "src/policy/policy.cpp",
        "status": "modified",
        "additions": 23,
        "deletions": 22,
        "changes": 45,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/policy/policy.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/policy/policy.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/policy.cpp?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -19,16 +19,18 @@ CAmount GetDustThreshold(const CTxOut& txout, const CFeeRate& dustRelayFeeIn)\n {\n     // \"Dust\" is defined in terms of dustRelayFee,\n     // which has units satoshis-per-kilobyte.\n-    // If you'd pay more than 1/3 in fees\n+    // If you'd pay more in fees than the value of the output\n     // to spend something, then we consider it dust.\n     // A typical spendable non-segwit txout is 34 bytes big, and will\n     // need a CTxIn of at least 148 bytes to spend:\n     // so dust is a spendable txout less than\n-    // 546*dustRelayFee/1000 (in satoshis).\n+    // 182*dustRelayFee/1000 (in satoshis).\n+    // 546 satoshis at the default rate of 3000 sat/kB.\n     // A typical spendable segwit txout is 31 bytes big, and will\n     // need a CTxIn of at least 67 bytes to spend:\n     // so dust is a spendable txout less than\n-    // 294*dustRelayFee/1000 (in satoshis).\n+    // 98*dustRelayFee/1000 (in satoshis).\n+    // 294 satoshis at the default rate of 3000 sat/kB.\n     if (txout.scriptPubKey.IsUnspendable())\n         return 0;\n \n@@ -44,31 +46,14 @@ CAmount GetDustThreshold(const CTxOut& txout, const CFeeRate& dustRelayFeeIn)\n         nSize += (32 + 4 + 1 + 107 + 4); // the 148 mentioned above\n     }\n \n-    return 3 * dustRelayFeeIn.GetFee(nSize);\n+    return dustRelayFeeIn.GetFee(nSize);\n }\n \n bool IsDust(const CTxOut& txout, const CFeeRate& dustRelayFeeIn)\n {\n     return (txout.nValue < GetDustThreshold(txout, dustRelayFeeIn));\n }\n \n-    /**\n-     * Check transaction inputs to mitigate two\n-     * potential denial-of-service attacks:\n-     * \n-     * 1. scriptSigs with extra data stuffed into them,\n-     *    not consumed by scriptPubKey (or P2SH script)\n-     * 2. P2SH scripts with a crazy number of expensive\n-     *    CHECKSIG/CHECKMULTISIG operations\n-     *\n-     * Why bother? To avoid denial-of-service attacks; an attacker\n-     * can submit a standard HASH... OP_EQUAL transaction,\n-     * which will get accepted into blocks. The redemption\n-     * script can be anything; an attacker could use a very\n-     * expensive-to-check-upon-redemption script like:\n-     *   DUP CHECKSIG DROP ... repeated 100 times... OP_1\n-     */\n-\n bool IsStandard(const CScript& scriptPubKey, txnouttype& whichType, const bool witnessEnabled)\n {\n     std::vector<std::vector<unsigned char> > vSolutions;\n@@ -91,7 +76,7 @@ bool IsStandard(const CScript& scriptPubKey, txnouttype& whichType, const bool w\n     else if (!witnessEnabled && (whichType == TX_WITNESS_V0_KEYHASH || whichType == TX_WITNESS_V0_SCRIPTHASH))\n         return false;\n \n-    return whichType != TX_NONSTANDARD;\n+    return whichType != TX_NONSTANDARD && whichType != TX_WITNESS_UNKNOWN;\n }\n \n bool IsStandardTx(const CTransaction& tx, std::string& reason, const bool witnessEnabled)\n@@ -158,6 +143,22 @@ bool IsStandardTx(const CTransaction& tx, std::string& reason, const bool witnes\n     return true;\n }\n \n+/**\n+ * Check transaction inputs to mitigate two\n+ * potential denial-of-service attacks:\n+ *\n+ * 1. scriptSigs with extra data stuffed into them,\n+ *    not consumed by scriptPubKey (or P2SH script)\n+ * 2. P2SH scripts with a crazy number of expensive\n+ *    CHECKSIG/CHECKMULTISIG operations\n+ *\n+ * Why bother? To avoid denial-of-service attacks; an attacker\n+ * can submit a standard HASH... OP_EQUAL transaction,\n+ * which will get accepted into blocks. The redemption\n+ * script can be anything; an attacker could use a very\n+ * expensive-to-check-upon-redemption script like:\n+ *   DUP CHECKSIG DROP ... repeated 100 times... OP_1\n+ */\n bool AreInputsStandard(const CTransaction& tx, const CCoinsViewCache& mapInputs)\n {\n     if (tx.IsCoinBase())"
      },
      {
        "sha": "ef71dd73bcd574ba64005b0e259722a041afd7f8",
        "filename": "src/policy/policy.h",
        "status": "modified",
        "additions": 3,
        "deletions": 5,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/policy/policy.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/policy/policy.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/policy.h?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -16,10 +16,8 @@\n class CCoinsViewCache;\n class CTxOut;\n \n-/** Default for -blockmaxsize, which controls the maximum size of block the mining code will create **/\n-static const unsigned int DEFAULT_BLOCK_MAX_SIZE = 750000;\n /** Default for -blockmaxweight, which controls the range of block weights the mining code will create **/\n-static const unsigned int DEFAULT_BLOCK_MAX_WEIGHT = 3000000;\n+static const unsigned int DEFAULT_BLOCK_MAX_WEIGHT = MAX_BLOCK_WEIGHT - 4000;\n /** Default for -blockmintxfee, which sets the minimum feerate for a transaction in blocks created by mining code **/\n static const unsigned int DEFAULT_BLOCK_MIN_TX_FEE = 1000;\n /** The maximum weight for transactions we're willing to relay/mine */\n@@ -40,12 +38,12 @@ static const unsigned int MAX_STANDARD_P2WSH_STACK_ITEMS = 100;\n static const unsigned int MAX_STANDARD_P2WSH_STACK_ITEM_SIZE = 80;\n /** The maximum size of a standard witnessScript */\n static const unsigned int MAX_STANDARD_P2WSH_SCRIPT_SIZE = 3600;\n-/** Min feerate for defining dust. Historically this has been the same as the\n+/** Min feerate for defining dust. Historically this has been based on the\n  * minRelayTxFee, however changing the dust limit changes which transactions are\n  * standard and should be done with care and ideally rarely. It makes sense to\n  * only increase the dust limit after prior releases were already not creating\n  * outputs below the new threshold */\n-static const unsigned int DUST_RELAY_TX_FEE = 1000;\n+static const unsigned int DUST_RELAY_TX_FEE = 3000;\n /**\n  * Standard script verification flags that standard transactions will comply\n  * with. However scripts violating these flags may still be present in valid"
      },
      {
        "sha": "7d87c6bbb7dfb72470a12c573fbce9a5c85b11c6",
        "filename": "src/pow.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/pow.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/pow.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/pow.cpp?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -12,7 +12,7 @@\n \n unsigned int GetNextWorkRequired(const CBlockIndex* pindexLast, const CBlockHeader *pblock, const Consensus::Params& params)\n {\n-    assert(pindexLast != NULL);\n+    assert(pindexLast != nullptr);\n     unsigned int nProofOfWorkLimit = UintToArith256(params.powLimit).GetCompact();\n \n     // Only change once per difficulty adjustment interval"
      },
      {
        "sha": "eb29b3ae7e3f7dd7192f6e0da6674193190d056c",
        "filename": "src/prevector.h",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/prevector.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/prevector.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/prevector.h?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -2,8 +2,8 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#ifndef _BITCOIN_PREVECTOR_H_\n-#define _BITCOIN_PREVECTOR_H_\n+#ifndef BITCOIN_PREVECTOR_H\n+#define BITCOIN_PREVECTOR_H\n \n #include <assert.h>\n #include <stdlib.h>\n@@ -448,7 +448,7 @@ class prevector {\n         }\n         if (!is_direct()) {\n             free(_union.indirect);\n-            _union.indirect = NULL;\n+            _union.indirect = nullptr;\n         }\n     }\n \n@@ -514,4 +514,4 @@ class prevector {\n };\n #pragma pack(pop)\n \n-#endif\n+#endif // BITCOIN_PREVECTOR_H"
      },
      {
        "sha": "3774ac3e4b54ec4762a6b491566a7f956fce4070",
        "filename": "src/primitives/block.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/primitives/block.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/primitives/block.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/primitives/block.cpp?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -25,9 +25,8 @@ std::string CBlock::ToString() const\n         hashMerkleRoot.ToString(),\n         nTime, nBits, nNonce,\n         vtx.size());\n-    for (unsigned int i = 0; i < vtx.size(); i++)\n-    {\n-        s << \"  \" << vtx[i]->ToString() << \"\\n\";\n+    for (const auto& tx : vtx) {\n+        s << \"  \" << tx->ToString() << \"\\n\";\n     }\n     return s.str();\n }"
      },
      {
        "sha": "292df40896793f1728334c36ebee3700cc3a9426",
        "filename": "src/primitives/block.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/primitives/block.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/primitives/block.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/primitives/block.h?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -129,7 +129,7 @@ struct CBlockLocator\n \n     CBlockLocator() {}\n \n-    CBlockLocator(const std::vector<uint256>& vHaveIn) : vHave(vHaveIn) {}\n+    explicit CBlockLocator(const std::vector<uint256>& vHaveIn) : vHave(vHaveIn) {}\n \n     ADD_SERIALIZE_METHODS;\n "
      },
      {
        "sha": "e0a106adb90bfbce7cfd45bc9249c383c9ee3505",
        "filename": "src/primitives/transaction.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 14,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/primitives/transaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/primitives/transaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/primitives/transaction.cpp?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -55,7 +55,7 @@ std::string CTxOut::ToString() const\n }\n \n CMutableTransaction::CMutableTransaction() : nVersion(CTransaction::CURRENT_VERSION), nLockTime(0) {}\n-CMutableTransaction::CMutableTransaction(const CTransaction& tx) : nVersion(tx.nVersion), vin(tx.vin), vout(tx.vout), nLockTime(tx.nLockTime) {}\n+CMutableTransaction::CMutableTransaction(const CTransaction& tx) : vin(tx.vin), vout(tx.vout), nVersion(tx.nVersion), nLockTime(tx.nLockTime) {}\n \n uint256 CMutableTransaction::GetHash() const\n {\n@@ -76,17 +76,16 @@ uint256 CTransaction::GetWitnessHash() const\n }\n \n /* For backward compatibility, the hash is initialized to 0. TODO: remove the need for this default constructor entirely. */\n-CTransaction::CTransaction() : nVersion(CTransaction::CURRENT_VERSION), vin(), vout(), nLockTime(0), hash() {}\n-CTransaction::CTransaction(const CMutableTransaction &tx) : nVersion(tx.nVersion), vin(tx.vin), vout(tx.vout), nLockTime(tx.nLockTime), hash(ComputeHash()) {}\n-CTransaction::CTransaction(CMutableTransaction &&tx) : nVersion(tx.nVersion), vin(std::move(tx.vin)), vout(std::move(tx.vout)), nLockTime(tx.nLockTime), hash(ComputeHash()) {}\n+CTransaction::CTransaction() : vin(), vout(), nVersion(CTransaction::CURRENT_VERSION), nLockTime(0), hash() {}\n+CTransaction::CTransaction(const CMutableTransaction &tx) : vin(tx.vin), vout(tx.vout), nVersion(tx.nVersion), nLockTime(tx.nLockTime), hash(ComputeHash()) {}\n+CTransaction::CTransaction(CMutableTransaction &&tx) : vin(std::move(tx.vin)), vout(std::move(tx.vout)), nVersion(tx.nVersion), nLockTime(tx.nLockTime), hash(ComputeHash()) {}\n \n CAmount CTransaction::GetValueOut() const\n {\n     CAmount nValueOut = 0;\n-    for (std::vector<CTxOut>::const_iterator it(vout.begin()); it != vout.end(); ++it)\n-    {\n-        nValueOut += it->nValue;\n-        if (!MoneyRange(it->nValue) || !MoneyRange(nValueOut))\n+    for (const auto& tx_out : vout) {\n+        nValueOut += tx_out.nValue;\n+        if (!MoneyRange(tx_out.nValue) || !MoneyRange(nValueOut))\n             throw std::runtime_error(std::string(__func__) + \": value out of range\");\n     }\n     return nValueOut;\n@@ -106,11 +105,11 @@ std::string CTransaction::ToString() const\n         vin.size(),\n         vout.size(),\n         nLockTime);\n-    for (unsigned int i = 0; i < vin.size(); i++)\n-        str += \"    \" + vin[i].ToString() + \"\\n\";\n-    for (unsigned int i = 0; i < vin.size(); i++)\n-        str += \"    \" + vin[i].scriptWitness.ToString() + \"\\n\";\n-    for (unsigned int i = 0; i < vout.size(); i++)\n-        str += \"    \" + vout[i].ToString() + \"\\n\";\n+    for (const auto& tx_in : vin)\n+        str += \"    \" + tx_in.ToString() + \"\\n\";\n+    for (const auto& tx_in : vin)\n+        str += \"    \" + tx_in.scriptWitness.ToString() + \"\\n\";\n+    for (const auto& tx_out : vout)\n+        str += \"    \" + tx_out.ToString() + \"\\n\";\n     return str;\n }"
      },
      {
        "sha": "18d524e23da8724090b57b6f36e05da1aeb2d461",
        "filename": "src/primitives/transaction.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/primitives/transaction.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/primitives/transaction.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/primitives/transaction.h?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -278,9 +278,9 @@ class CTransaction\n     // actually immutable; deserialization and assignment are implemented,\n     // and bypass the constness. This is safe, as they update the entire\n     // structure, including the hash.\n-    const int32_t nVersion;\n     const std::vector<CTxIn> vin;\n     const std::vector<CTxOut> vout;\n+    const int32_t nVersion;\n     const uint32_t nLockTime;\n \n private:\n@@ -361,9 +361,9 @@ class CTransaction\n /** A mutable version of CTransaction. */\n struct CMutableTransaction\n {\n-    int32_t nVersion;\n     std::vector<CTxIn> vin;\n     std::vector<CTxOut> vout;\n+    int32_t nVersion;\n     uint32_t nLockTime;\n \n     CMutableTransaction();"
      },
      {
        "sha": "67e01d960666e1423c654c824cf37b7ea72f164a",
        "filename": "src/protocol.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/protocol.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/protocol.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/protocol.h?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -39,7 +39,7 @@ class CMessageHeader\n     };\n     typedef unsigned char MessageStartChars[MESSAGE_START_SIZE];\n \n-    CMessageHeader(const MessageStartChars& pchMessageStartIn);\n+    explicit CMessageHeader(const MessageStartChars& pchMessageStartIn);\n     CMessageHeader(const MessageStartChars& pchMessageStartIn, const char* pszCommand, unsigned int nMessageSizeIn);\n \n     std::string GetCommand() const;"
      },
      {
        "sha": "2da7be783f870706712927f2ad8f8f5f87cb9112",
        "filename": "src/pubkey.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/pubkey.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/pubkey.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/pubkey.cpp?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -10,7 +10,7 @@\n namespace\n {\n /* Global secp256k1_context object used for verification. */\n-secp256k1_context* secp256k1_context_verify = NULL;\n+secp256k1_context* secp256k1_context_verify = nullptr;\n } // namespace\n \n /** This function is taken from the libsecp256k1 distribution and implements\n@@ -274,17 +274,17 @@ bool CExtPubKey::Derive(CExtPubKey &out, unsigned int _nChild) const {\n     if (!ecdsa_signature_parse_der_lax(secp256k1_context_verify, &sig, vchSig.data(), vchSig.size())) {\n         return false;\n     }\n-    return (!secp256k1_ecdsa_signature_normalize(secp256k1_context_verify, NULL, &sig));\n+    return (!secp256k1_ecdsa_signature_normalize(secp256k1_context_verify, nullptr, &sig));\n }\n \n /* static */ int ECCVerifyHandle::refcount = 0;\n \n ECCVerifyHandle::ECCVerifyHandle()\n {\n     if (refcount == 0) {\n-        assert(secp256k1_context_verify == NULL);\n+        assert(secp256k1_context_verify == nullptr);\n         secp256k1_context_verify = secp256k1_context_create(SECP256K1_CONTEXT_VERIFY);\n-        assert(secp256k1_context_verify != NULL);\n+        assert(secp256k1_context_verify != nullptr);\n     }\n     refcount++;\n }\n@@ -293,8 +293,8 @@ ECCVerifyHandle::~ECCVerifyHandle()\n {\n     refcount--;\n     if (refcount == 0) {\n-        assert(secp256k1_context_verify != NULL);\n+        assert(secp256k1_context_verify != nullptr);\n         secp256k1_context_destroy(secp256k1_context_verify);\n-        secp256k1_context_verify = NULL;\n+        secp256k1_context_verify = nullptr;\n     }\n }"
      },
      {
        "sha": "65738d8fe225a3cb71574dfc7722638e80ae3941",
        "filename": "src/pubkey.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/pubkey.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/pubkey.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/pubkey.h?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -30,7 +30,7 @@ class CKeyID : public uint160\n {\n public:\n     CKeyID() : uint160() {}\n-    CKeyID(const uint160& in) : uint160(in) {}\n+    explicit CKeyID(const uint160& in) : uint160(in) {}\n };\n \n typedef uint256 ChainCode;\n@@ -88,7 +88,7 @@ class CPubKey\n     }\n \n     //! Construct a public key from a byte vector.\n-    CPubKey(const std::vector<unsigned char>& _vch)\n+    explicit CPubKey(const std::vector<unsigned char>& _vch)\n     {\n         Set(_vch.begin(), _vch.end());\n     }"
      },
      {
        "sha": "f295bd468957cdfb914e9932481973767b189f9f",
        "filename": "src/qt/addressbookpage.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/addressbookpage.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/addressbookpage.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/addressbookpage.cpp?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -273,7 +273,7 @@ void AddressBookPage::on_exportButton_clicked()\n     // CSV is currently the only supported format\n     QString filename = GUIUtil::getSaveFileName(this,\n         tr(\"Export Address List\"), QString(),\n-        tr(\"Comma separated file (*.csv)\"), NULL);\n+        tr(\"Comma separated file (*.csv)\"), nullptr);\n \n     if (filename.isNull())\n         return;"
      },
      {
        "sha": "0eb7ec4306ba8346c24dec7b8f81f3b6c06bad32",
        "filename": "src/qt/addresstablemodel.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 11,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/addresstablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/addresstablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/addresstablemodel.cpp?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -82,14 +82,14 @@ class AddressTablePriv\n             LOCK(wallet->cs_wallet);\n             for (const std::pair<CTxDestination, CAddressBookData>& item : wallet->mapAddressBook)\n             {\n-                const CBitcoinAddress& address = item.first;\n-                bool fMine = IsMine(*wallet, address.Get());\n+                const CTxDestination& address = item.first;\n+                bool fMine = IsMine(*wallet, address);\n                 AddressTableEntry::Type addressType = translateTransactionType(\n                         QString::fromStdString(item.second.purpose), fMine);\n                 const std::string& strName = item.second.name;\n                 cachedAddressTable.append(AddressTableEntry(addressType,\n                                   QString::fromStdString(strName),\n-                                  QString::fromStdString(address.ToString())));\n+                                  QString::fromStdString(EncodeDestination(address))));\n             }\n         }\n         // qLowerBound() and qUpperBound() require our cachedAddressTable list to be sorted in asc order\n@@ -246,7 +246,7 @@ bool AddressTableModel::setData(const QModelIndex &index, const QVariant &value,\n     if(role == Qt::EditRole)\n     {\n         LOCK(wallet->cs_wallet); /* For SetAddressBook / DelAddressBook */\n-        CTxDestination curAddress = CBitcoinAddress(rec->address.toStdString()).Get();\n+        CTxDestination curAddress = DecodeDestination(rec->address.toStdString());\n         if(index.column() == Label)\n         {\n             // Do nothing, if old label == new label\n@@ -257,7 +257,7 @@ bool AddressTableModel::setData(const QModelIndex &index, const QVariant &value,\n             }\n             wallet->SetAddressBook(curAddress, value.toString().toStdString(), strPurpose);\n         } else if(index.column() == Address) {\n-            CTxDestination newAddress = CBitcoinAddress(value.toString().toStdString()).Get();\n+            CTxDestination newAddress = DecodeDestination(value.toString().toStdString());\n             // Refuse to set invalid address, set error status and return false\n             if(boost::get<CNoDestination>(&newAddress))\n             {\n@@ -358,7 +358,7 @@ QString AddressTableModel::addRow(const QString &type, const QString &label, con\n         // Check for duplicate addresses\n         {\n             LOCK(wallet->cs_wallet);\n-            if(wallet->mapAddressBook.count(CBitcoinAddress(strAddress).Get()))\n+            if(wallet->mapAddressBook.count(DecodeDestination(strAddress)))\n             {\n                 editStatus = DUPLICATE_ADDRESS;\n                 return QString();\n@@ -384,7 +384,7 @@ QString AddressTableModel::addRow(const QString &type, const QString &label, con\n                 return QString();\n             }\n         }\n-        strAddress = CBitcoinAddress(newKey.GetID()).ToString();\n+        strAddress = EncodeDestination(newKey.GetID());\n     }\n     else\n     {\n@@ -394,7 +394,7 @@ QString AddressTableModel::addRow(const QString &type, const QString &label, con\n     // Add entry\n     {\n         LOCK(wallet->cs_wallet);\n-        wallet->SetAddressBook(CBitcoinAddress(strAddress).Get(), strLabel,\n+        wallet->SetAddressBook(DecodeDestination(strAddress), strLabel,\n                                (type == Send ? \"send\" : \"receive\"));\n     }\n     return QString::fromStdString(strAddress);\n@@ -412,7 +412,7 @@ bool AddressTableModel::removeRows(int row, int count, const QModelIndex &parent\n     }\n     {\n         LOCK(wallet->cs_wallet);\n-        wallet->DelAddressBook(CBitcoinAddress(rec->address.toStdString()).Get());\n+        wallet->DelAddressBook(DecodeDestination(rec->address.toStdString()));\n     }\n     return true;\n }\n@@ -423,8 +423,8 @@ QString AddressTableModel::labelForAddress(const QString &address) const\n {\n     {\n         LOCK(wallet->cs_wallet);\n-        CBitcoinAddress address_parsed(address.toStdString());\n-        std::map<CTxDestination, CAddressBookData>::iterator mi = wallet->mapAddressBook.find(address_parsed.Get());\n+        CTxDestination destination = DecodeDestination(address.toStdString());\n+        std::map<CTxDestination, CAddressBookData>::iterator mi = wallet->mapAddressBook.find(destination);\n         if (mi != wallet->mapAddressBook.end())\n         {\n             return QString::fromStdString(mi->second.name);"
      },
      {
        "sha": "3fd58a2f9a0e7d6c4d5aa5aa5749755499555a66",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 56,
        "deletions": 36,
        "changes": 92,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -106,7 +106,7 @@ static QString GetLangTerritory()\n     if(!lang_territory_qsettings.isEmpty())\n         lang_territory = lang_territory_qsettings;\n     // 3) -lang command line argument\n-    lang_territory = QString::fromStdString(GetArg(\"-lang\", lang_territory.toStdString()));\n+    lang_territory = QString::fromStdString(gArgs.GetArg(\"-lang\", lang_territory.toStdString()));\n     return lang_territory;\n }\n \n@@ -178,6 +178,10 @@ class BitcoinCore: public QObject\n     Q_OBJECT\n public:\n     explicit BitcoinCore();\n+    /** Basic initialization, before starting initialization/shutdown thread.\n+     * Return true on success.\n+     */\n+    static bool baseInitialize();\n \n public Q_SLOTS:\n     void initialize();\n@@ -223,7 +227,7 @@ class BitcoinApplication: public QApplication\n     void requestShutdown();\n \n     /// Get process return value\n-    int getReturnValue() { return returnValue; }\n+    int getReturnValue() const { return returnValue; }\n \n     /// Get window identifier of QMainWindow (BitcoinGUI)\n     WId getMainWinId() const;\n@@ -270,32 +274,38 @@ void BitcoinCore::handleRunawayException(const std::exception *e)\n     Q_EMIT runawayException(QString::fromStdString(GetWarnings(\"gui\")));\n }\n \n+bool BitcoinCore::baseInitialize()\n+{\n+    if (!AppInitBasicSetup())\n+    {\n+        return false;\n+    }\n+    if (!AppInitParameterInteraction())\n+    {\n+        return false;\n+    }\n+    if (!AppInitSanityChecks())\n+    {\n+        return false;\n+    }\n+    if (!AppInitLockDataDirectory())\n+    {\n+        return false;\n+    }\n+    return true;\n+}\n+\n void BitcoinCore::initialize()\n {\n     try\n     {\n         qDebug() << __func__ << \": Running initialization in thread\";\n-        if (!AppInitBasicSetup())\n-        {\n-            Q_EMIT initializeResult(false);\n-            return;\n-        }\n-        if (!AppInitParameterInteraction())\n-        {\n-            Q_EMIT initializeResult(false);\n-            return;\n-        }\n-        if (!AppInitSanityChecks())\n-        {\n-            Q_EMIT initializeResult(false);\n-            return;\n-        }\n         bool rv = AppInitMain(threadGroup, scheduler);\n         Q_EMIT initializeResult(rv);\n     } catch (const std::exception& e) {\n         handleRunawayException(&e);\n     } catch (...) {\n-        handleRunawayException(NULL);\n+        handleRunawayException(nullptr);\n     }\n }\n \n@@ -312,7 +322,7 @@ void BitcoinCore::shutdown()\n     } catch (const std::exception& e) {\n         handleRunawayException(&e);\n     } catch (...) {\n-        handleRunawayException(NULL);\n+        handleRunawayException(nullptr);\n     }\n }\n \n@@ -335,7 +345,7 @@ BitcoinApplication::BitcoinApplication(int &argc, char **argv):\n     // This must be done inside the BitcoinApplication constructor, or after it, because\n     // PlatformStyle::instantiate requires a QApplication\n     std::string platformName;\n-    platformName = GetArg(\"-uiplatform\", BitcoinGUI::DEFAULT_UIPLATFORM);\n+    platformName = gArgs.GetArg(\"-uiplatform\", BitcoinGUI::DEFAULT_UIPLATFORM);\n     platformStyle = PlatformStyle::instantiate(QString::fromStdString(platformName));\n     if (!platformStyle) // Fall back to \"other\" if specified name not found\n         platformStyle = PlatformStyle::instantiate(\"other\");\n@@ -373,7 +383,7 @@ void BitcoinApplication::createPaymentServer()\n \n void BitcoinApplication::createOptionsModel(bool resetSettings)\n {\n-    optionsModel = new OptionsModel(NULL, resetSettings);\n+    optionsModel = new OptionsModel(nullptr, resetSettings);\n }\n \n void BitcoinApplication::createWindow(const NetworkStyle *networkStyle)\n@@ -488,7 +498,7 @@ void BitcoinApplication::initializeResult(bool success)\n #endif\n \n         // If -min option passed, start window minimized.\n-        if(GetBoolArg(\"-min\", false))\n+        if(gArgs.GetBoolArg(\"-min\", false))\n         {\n             window->showMinimized();\n         }\n@@ -540,7 +550,7 @@ int main(int argc, char *argv[])\n \n     /// 1. Parse command-line options. These take precedence over anything else.\n     // Command-line options take precedence:\n-    ParseParameters(argc, argv);\n+    gArgs.ParseParameters(argc, argv);\n \n     // Do not refer to data directory yet, this can be overridden by Intro::pickDataDirectory\n \n@@ -596,9 +606,9 @@ int main(int argc, char *argv[])\n \n     // Show help message immediately after parsing command-line options (for \"-lang\") and setting locale,\n     // but before showing splash screen.\n-    if (IsArgSet(\"-?\") || IsArgSet(\"-h\") || IsArgSet(\"-help\") || IsArgSet(\"-version\"))\n+    if (gArgs.IsArgSet(\"-?\") || gArgs.IsArgSet(\"-h\") || gArgs.IsArgSet(\"-help\") || gArgs.IsArgSet(\"-version\"))\n     {\n-        HelpMessageDialog help(NULL, IsArgSet(\"-version\"));\n+        HelpMessageDialog help(nullptr, gArgs.IsArgSet(\"-version\"));\n         help.showOrPrint();\n         return EXIT_SUCCESS;\n     }\n@@ -613,11 +623,11 @@ int main(int argc, char *argv[])\n     if (!fs::is_directory(GetDataDir(false)))\n     {\n         QMessageBox::critical(0, QObject::tr(PACKAGE_NAME),\n-                              QObject::tr(\"Error: Specified data directory \\\"%1\\\" does not exist.\").arg(QString::fromStdString(GetArg(\"-datadir\", \"\"))));\n+                              QObject::tr(\"Error: Specified data directory \\\"%1\\\" does not exist.\").arg(QString::fromStdString(gArgs.GetArg(\"-datadir\", \"\"))));\n         return EXIT_FAILURE;\n     }\n     try {\n-        ReadConfigFile(GetArg(\"-conf\", BITCOIN_CONF_FILENAME));\n+        gArgs.ReadConfigFile(gArgs.GetArg(\"-conf\", BITCOIN_CONF_FILENAME));\n     } catch (const std::exception& e) {\n         QMessageBox::critical(0, QObject::tr(PACKAGE_NAME),\n                               QObject::tr(\"Error: Cannot parse configuration file: %1. Only use key=value syntax.\").arg(e.what()));\n@@ -681,31 +691,41 @@ int main(int argc, char *argv[])\n     // Allow parameter interaction before we create the options model\n     app.parameterSetup();\n     // Load GUI settings from QSettings\n-    app.createOptionsModel(IsArgSet(\"-resetguisettings\"));\n+    app.createOptionsModel(gArgs.IsArgSet(\"-resetguisettings\"));\n \n     // Subscribe to global signals from core\n     uiInterface.InitMessage.connect(InitMessage);\n \n-    if (GetBoolArg(\"-splash\", DEFAULT_SPLASHSCREEN) && !GetBoolArg(\"-min\", false))\n+    if (gArgs.GetBoolArg(\"-splash\", DEFAULT_SPLASHSCREEN) && !gArgs.GetBoolArg(\"-min\", false))\n         app.createSplashScreen(networkStyle.data());\n \n+    int rv = EXIT_SUCCESS;\n     try\n     {\n         app.createWindow(networkStyle.data());\n-        app.requestInitialize();\n+        // Perform base initialization before spinning up initialization/shutdown thread\n+        // This is acceptable because this function only contains steps that are quick to execute,\n+        // so the GUI thread won't be held up.\n+        if (BitcoinCore::baseInitialize()) {\n+            app.requestInitialize();\n #if defined(Q_OS_WIN) && QT_VERSION >= 0x050000\n-        WinShutdownMonitor::registerShutdownBlockReason(QObject::tr(\"%1 didn't yet exit safely...\").arg(QObject::tr(PACKAGE_NAME)), (HWND)app.getMainWinId());\n+            WinShutdownMonitor::registerShutdownBlockReason(QObject::tr(\"%1 didn't yet exit safely...\").arg(QObject::tr(PACKAGE_NAME)), (HWND)app.getMainWinId());\n #endif\n-        app.exec();\n-        app.requestShutdown();\n-        app.exec();\n+            app.exec();\n+            app.requestShutdown();\n+            app.exec();\n+            rv = app.getReturnValue();\n+        } else {\n+            // A dialog with detailed error will have been shown by InitError()\n+            rv = EXIT_FAILURE;\n+        }\n     } catch (const std::exception& e) {\n         PrintExceptionContinue(&e, \"Runaway exception\");\n         app.handleRunawayException(QString::fromStdString(GetWarnings(\"gui\")));\n     } catch (...) {\n-        PrintExceptionContinue(NULL, \"Runaway exception\");\n+        PrintExceptionContinue(nullptr, \"Runaway exception\");\n         app.handleRunawayException(QString::fromStdString(GetWarnings(\"gui\")));\n     }\n-    return app.getReturnValue();\n+    return rv;\n }\n #endif // BITCOIN_QT_TEST"
      },
      {
        "sha": "362a71f04d050e568ac0b90459795988248e81a2",
        "filename": "src/qt/bitcoinaddressvalidator.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/bitcoinaddressvalidator.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/bitcoinaddressvalidator.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoinaddressvalidator.cpp?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -67,7 +67,7 @@ QValidator::State BitcoinAddressEntryValidator::validate(QString &input, int &po\n         if (((ch >= '0' && ch<='9') ||\n             (ch >= 'a' && ch<='z') ||\n             (ch >= 'A' && ch<='Z')) &&\n-            ch != 'l' && ch != 'I' && ch != '0' && ch != 'O')\n+            ch != 'I' && ch != 'O') // Characters invalid in both Base58 and Bech32\n         {\n             // Alphanumeric and not a 'forbidden' character\n         }\n@@ -89,9 +89,9 @@ QValidator::State BitcoinAddressCheckValidator::validate(QString &input, int &po\n {\n     Q_UNUSED(pos);\n     // Validate the passed Bitcoin address\n-    CBitcoinAddress addr(input.toStdString());\n-    if (addr.IsValid())\n+    if (IsValidDestinationString(input.toStdString())) {\n         return QValidator::Acceptable;\n+    }\n \n     return QValidator::Invalid;\n }"
      },
      {
        "sha": "dc551419002a45aea838ec17596634e1d5f26218",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 4,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -123,7 +123,11 @@ BitcoinGUI::BitcoinGUI(const PlatformStyle *_platformStyle, const NetworkStyle *\n     spinnerFrame(0),\n     platformStyle(_platformStyle)\n {\n-    GUIUtil::restoreWindowGeometry(\"nWindow\", QSize(850, 550), this);\n+    QSettings settings;\n+    if (!restoreGeometry(settings.value(\"MainWindowGeometry\").toByteArray())) {\n+        // Restore failed (perhaps missing setting), center the window\n+        move(QApplication::desktop()->availableGeometry().center() - frameGeometry().center());\n+    }\n \n     QString windowTitle = tr(PACKAGE_NAME) + \" - \";\n #ifdef ENABLE_WALLET\n@@ -261,7 +265,8 @@ BitcoinGUI::~BitcoinGUI()\n     // Unsubscribe from notifications from core\n     unsubscribeFromCoreSignals();\n \n-    GUIUtil::saveWindowGeometry(\"nWindow\", this);\n+    QSettings settings;\n+    settings.setValue(\"MainWindowGeometry\", saveGeometry());\n     if(trayIcon) // Hide tray icon, as deleting will let it linger until quit (on Ubuntu)\n         trayIcon->hide();\n #ifdef Q_OS_MAC\n@@ -454,6 +459,7 @@ void BitcoinGUI::createToolBars()\n     if(walletFrame)\n     {\n         QToolBar *toolbar = addToolBar(tr(\"Tabs toolbar\"));\n+        toolbar->setContextMenuPolicy(Qt::PreventContextMenu);\n         toolbar->setMovable(false);\n         toolbar->setToolButtonStyle(Qt::ToolButtonTextBesideIcon);\n         toolbar->addAction(overviewAction);\n@@ -479,7 +485,7 @@ void BitcoinGUI::setClientModel(ClientModel *_clientModel)\n         connect(_clientModel, SIGNAL(networkActiveChanged(bool)), this, SLOT(setNetworkActive(bool)));\n \n         modalOverlay->setKnownBestHeight(_clientModel->getHeaderTipHeight(), QDateTime::fromTime_t(_clientModel->getHeaderTipTime()));\n-        setNumBlocks(_clientModel->getNumBlocks(), _clientModel->getLastBlockDate(), _clientModel->getVerificationProgress(NULL), false);\n+        setNumBlocks(_clientModel->getNumBlocks(), _clientModel->getLastBlockDate(), _clientModel->getVerificationProgress(nullptr), false);\n         connect(_clientModel, SIGNAL(numBlocksChanged(int,QDateTime,double,bool)), this, SLOT(setNumBlocks(int,QDateTime,double,bool)));\n \n         // Receive and report messages from client model\n@@ -922,7 +928,7 @@ void BitcoinGUI::message(const QString &title, const QString &message, unsigned\n         showNormalIfMinimized();\n         QMessageBox mBox((QMessageBox::Icon)nMBoxIcon, strTitle, message, buttons, this);\n         int r = mBox.exec();\n-        if (ret != NULL)\n+        if (ret != nullptr)\n             *ret = r == QMessageBox::Ok;\n     }\n     else"
      },
      {
        "sha": "aa45ea1f0a0a7a0bc5c0183520664fc8ac4a6ea1",
        "filename": "src/qt/bitcoingui.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/bitcoingui.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/bitcoingui.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.h?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -168,7 +168,7 @@ public Q_SLOTS:\n                             @see CClientUIInterface::MessageBoxFlags\n        @param[in] ret       pointer to a bool that will be modified to whether Ok was clicked (modal only)\n     */\n-    void message(const QString &title, const QString &message, unsigned int style, bool *ret = NULL);\n+    void message(const QString &title, const QString &message, unsigned int style, bool *ret = nullptr);\n \n #ifdef ENABLE_WALLET\n     /** Set the encryption status as shown in the UI."
      },
      {
        "sha": "9f798ccf6238873dfaf3f95b07547a1a29f7dc12",
        "filename": "src/qt/bitcoinstrings.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 2,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/bitcoinstrings.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/bitcoinstrings.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoinstrings.cpp?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -63,6 +63,9 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Error loading %s: You can't enable HD on an already existing non-HD wallet\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n+\"Error loading wallet %s. -wallet parameter must only specify a filename (not \"\n+\"a path).\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Error reading %s! All keys read correctly, but transaction data or address \"\n \"book entries might be missing or incorrect.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n@@ -170,11 +173,19 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"rebuild the block database if you are sure that your computer's date and \"\n \"time are correct\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n+\"The fee rate (in %s/kB) that indicates your tolerance for discarding change \"\n+\"by adding it to the fee (default: %s). Note: An output is discarded if it is \"\n+\"dust at this rate, but we will always discard up to the dust relay fee and a \"\n+\"discard fee above that is limited by the fee estimate for the longest target\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"The transaction amount is too small to send after the fee has been deducted\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"This is a pre-release test build - use at your own risk - do not use for \"\n \"mining or merchant applications\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n+\"This is the transaction fee you may discard if change is smaller than dust \"\n+\"at this level\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"This is the transaction fee you may pay when fee estimates are not available.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"This product includes software developed by the OpenSSL Project for use in \"\n@@ -248,7 +259,6 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"(default: %s)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"(default: %u)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"(press q to shutdown and continue later)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"-maxmempool must be at least %d MB\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"-wallet parameter must only specify a filename (not a path)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"<category> can be:\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Accept command line and JSON-RPC commands\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Accept connections from outside (default: 1 if no -proxy or -connect)\"),\n@@ -286,6 +296,9 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Error loading %s: Wallet corrupted\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Error loading %s: Wallet requires newer version of %s\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Error loading %s: You can't disable HD on an already existing HD wallet\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Error loading block database\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Error loading wallet %s. -wallet filename must be a regular file.\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Error loading wallet %s. Duplicate -wallet filename specified.\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Error loading wallet %s. Invalid characters in -wallet filename.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Error opening block database\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Error reading from database, shutting down.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Error upgrading chainstate database\"),\n@@ -305,9 +318,9 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Insufficient funds\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Invalid -onion address or hostname: '%s'\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Invalid -proxy address or hostname: '%s'\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Invalid amount for -%s=<amount>: '%s'\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Invalid amount for -discardfee=<amount>: '%s'\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Invalid amount for -fallbackfee=<amount>: '%s'\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Invalid amount for -paytxfee=<amount>: '%s' (must be at least %s)\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Invalid characters in -wallet filename\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Invalid netmask specified in -whitelist: '%s'\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Keep at most <n> unconnectable transactions in memory (default: %u)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Keep the transaction memory pool below <n> megabytes (default: %u)\"),\n@@ -375,6 +388,7 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Tor control port password (default: empty)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Tor control port to use if onion listening enabled (default: %s)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Transaction amount too small\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Transaction amounts must not be negative\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Transaction fee and change calculation failed\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Transaction has too long of a mempool chain\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Transaction must have at least one recipient\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Transaction too large for fee policy\"),"
      },
      {
        "sha": "da6b0c4c2e3c5363f120e279b7292082a25be983",
        "filename": "src/qt/callback.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/callback.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/callback.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/callback.h?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -16,7 +16,7 @@ class FunctionCallback : public Callback\n     F f;\n \n public:\n-    FunctionCallback(F f_) : f(std::move(f_)) {}\n+    explicit FunctionCallback(F f_) : f(std::move(f_)) {}\n     ~FunctionCallback() override {}\n     void call() override { f(this); }\n };"
      },
      {
        "sha": "52ce11cefd277df49601a617da143b108512d3a4",
        "filename": "src/qt/clientmodel.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/clientmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/clientmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.cpp?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -18,6 +18,7 @@\n #include \"txmempool.h\"\n #include \"ui_interface.h\"\n #include \"util.h\"\n+#include \"warnings.h\"\n \n #include <stdint.h>\n "
      },
      {
        "sha": "3ca43eae229fc1b5739d6bf87ff75a945bc70bad",
        "filename": "src/qt/coincontroldialog.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 10,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/coincontroldialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/coincontroldialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/coincontroldialog.cpp?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -18,6 +18,7 @@\n #include \"policy/fees.h\"\n #include \"policy/policy.h\"\n #include \"validation.h\" // For mempool\n+#include \"wallet/fees.h\"\n #include \"wallet/wallet.h\"\n \n #include <QApplication>\n@@ -490,8 +491,6 @@ void CoinControlDialog::updateLabels(WalletModel *model, QDialog* dialog)\n         else nBytesInputs += 148;\n     }\n \n-    bool conservative_estimate = CalculateEstimateType(FeeEstimateMode::UNSET, coinControl->signalRbf);\n-\n     // calculation\n     if (nQuantity > 0)\n     {\n@@ -512,7 +511,7 @@ void CoinControlDialog::updateLabels(WalletModel *model, QDialog* dialog)\n                 nBytes -= 34;\n \n         // Fee\n-        nPayFee = CWallet::GetMinimumFee(nBytes, coinControl->nConfirmTarget, ::mempool, ::feeEstimator, nullptr /* FeeCalculation */, false /* ignoreGlobalPayTxFee */, conservative_estimate);\n+        nPayFee = GetMinimumFee(nBytes, *coinControl, ::mempool, ::feeEstimator, nullptr /* FeeCalculation */);\n \n         if (nPayAmount > 0)\n         {\n@@ -583,12 +582,8 @@ void CoinControlDialog::updateLabels(WalletModel *model, QDialog* dialog)\n     QString toolTipDust = tr(\"This label turns red if any recipient receives an amount smaller than the current dust threshold.\");\n \n     // how many satoshis the estimated fee can vary per byte we guess wrong\n-    double dFeeVary;\n-    if (payTxFee.GetFeePerK() > 0)\n-        dFeeVary = (double)std::max(CWallet::GetRequiredFee(1000), payTxFee.GetFeePerK()) / 1000;\n-    else {\n-        dFeeVary = (double)std::max(CWallet::GetRequiredFee(1000), ::feeEstimator.estimateSmartFee(coinControl->nConfirmTarget, NULL, ::mempool, conservative_estimate).GetFeePerK()) / 1000;\n-    }\n+    double dFeeVary = (double)nPayFee / nBytes;\n+\n     QString toolTip4 = tr(\"Can vary +/- %1 satoshi(s) per input.\").arg(dFeeVary);\n \n     l3->setToolTip(toolTip4);\n@@ -665,7 +660,7 @@ void CoinControlDialog::updateView()\n             QString sAddress = \"\";\n             if(ExtractDestination(out.tx->tx->vout[out.i].scriptPubKey, outputAddress))\n             {\n-                sAddress = QString::fromStdString(CBitcoinAddress(outputAddress).ToString());\n+                sAddress = QString::fromStdString(EncodeDestination(outputAddress));\n \n                 // if listMode or change => show bitcoin address. In tree mode, address is not shown again for direct wallet address outputs\n                 if (!treeMode || (!(sAddress == sWalletAddress)))"
      },
      {
        "sha": "4949c91771de1af8d9f9999bc2e0a6cb55852e93",
        "filename": "src/qt/coincontroldialog.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/coincontroldialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/coincontroldialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/coincontroldialog.h?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -30,9 +30,9 @@ namespace Ui {\n class CCoinControlWidgetItem : public QTreeWidgetItem\n {\n public:\n-    CCoinControlWidgetItem(QTreeWidget *parent, int type = Type) : QTreeWidgetItem(parent, type) {}\n-    CCoinControlWidgetItem(int type = Type) : QTreeWidgetItem(type) {}\n-    CCoinControlWidgetItem(QTreeWidgetItem *parent, int type = Type) : QTreeWidgetItem(parent, type) {}\n+    explicit CCoinControlWidgetItem(QTreeWidget *parent, int type = Type) : QTreeWidgetItem(parent, type) {}\n+    explicit CCoinControlWidgetItem(int type = Type) : QTreeWidgetItem(type) {}\n+    explicit CCoinControlWidgetItem(QTreeWidgetItem *parent, int type = Type) : QTreeWidgetItem(parent, type) {}\n \n     bool operator<(const QTreeWidgetItem &other) const;\n };"
      },
      {
        "sha": "e31bfee05ef47a56b580dcca65072c736aa38af2",
        "filename": "src/qt/forms/optionsdialog.ui",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/forms/optionsdialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/forms/optionsdialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/optionsdialog.ui?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -199,10 +199,10 @@\n        <item>\n         <widget class=\"QCheckBox\" name=\"allowIncoming\">\n          <property name=\"toolTip\">\n-          <string>Accept connections from outside</string>\n+          <string>Accept connections from outside.</string>\n          </property>\n          <property name=\"text\">\n-          <string>Allow incoming connections</string>\n+          <string>Allow incomin&amp;g connections</string>\n          </property>\n         </widget>\n        </item>\n@@ -399,7 +399,7 @@\n           <string>Connect to the Bitcoin network through a separate SOCKS5 proxy for Tor hidden services.</string>\n          </property>\n          <property name=\"text\">\n-          <string>Use separate SOCKS5 proxy to reach peers via Tor hidden services:</string>\n+          <string>Use separate SOCKS&amp;5 proxy to reach peers via Tor hidden services:</string>\n          </property>\n         </widget>\n        </item>\n@@ -507,10 +507,10 @@\n        <item>\n         <widget class=\"QCheckBox\" name=\"hideTrayIcon\">\n          <property name=\"toolTip\">\n-          <string>&amp;Hide the icon from the system tray.</string>\n+          <string>Hide the icon from the system tray.</string>\n          </property>\n          <property name=\"text\">\n-          <string>Hide tray icon</string>\n+          <string>&amp;Hide tray icon</string>\n          </property>\n         </widget>\n        </item>\n@@ -610,7 +610,7 @@\n             <string>Third party URLs (e.g. a block explorer) that appear in the transactions tab as context menu items. %s in the URL is replaced by transaction hash. Multiple URLs are separated by vertical bar |.</string>\n            </property>\n            <property name=\"text\">\n-            <string>Third party transaction URLs</string>\n+            <string>&amp;Third party transaction URLs</string>\n            </property>\n            <property name=\"buddy\">\n             <cstring>thirdPartyTxUrls</cstring>"
      },
      {
        "sha": "a0e48334c1b5b4394ed5f7b96a1a1ee3e5eaed1e",
        "filename": "src/qt/forms/sendcoinsdialog.ui",
        "status": "modified",
        "additions": 2,
        "deletions": 9,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/forms/sendcoinsdialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/forms/sendcoinsdialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/sendcoinsdialog.ui?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -762,7 +762,7 @@\n           <item>\n            <widget class=\"QLabel\" name=\"fallbackFeeWarningLabel\">\n             <property name=\"toolTip\">\n-             <string>Using the fallbackfee can result in sending a transaction that will take several hours or days (or never) to confirm. Consider choosing your fee manually or wait until your have validated the complete chain.</string>\n+             <string>Using the fallbackfee can result in sending a transaction that will take several hours or days (or never) to confirm. Consider choosing your fee manually or wait until you have validated the complete chain.</string>\n             </property>\n             <property name=\"font\">\n             <font>\n@@ -846,19 +846,13 @@\n                <item>\n                 <layout class=\"QHBoxLayout\" name=\"horizontalLayoutFee13\">\n                  <item>\n-                  <widget class=\"QRadioButton\" name=\"radioCustomPerKilobyte\">\n+                  <widget class=\"QLabel\" name=\"labelCustomPerKilobyte\">\n                    <property name=\"toolTip\">\n                     <string>If the custom fee is set to 1000 satoshis and the transaction is only 250 bytes, then &quot;per kilobyte&quot; only pays 250 satoshis in fee, while &quot;total at least&quot; pays 1000 satoshis. For transactions bigger than a kilobyte both pay by kilobyte.</string>\n                    </property>\n                    <property name=\"text\">\n                     <string>per kilobyte</string>\n                    </property>\n-                   <property name=\"checked\">\n-                    <bool>true</bool>\n-                   </property>\n-                   <attribute name=\"buttonGroup\">\n-                    <string notr=\"true\">groupCustomFee</string>\n-                   </attribute>\n                   </widget>\n                  </item>\n                  <item>\n@@ -1285,6 +1279,5 @@\n  <connections/>\n  <buttongroups>\n   <buttongroup name=\"groupFee\"/>\n-  <buttongroup name=\"groupCustomFee\"/>\n  </buttongroups>\n </ui>"
      },
      {
        "sha": "d520d7d4be0fc41402cb48d746d9d91791f9dae5",
        "filename": "src/qt/guiutil.cpp",
        "status": "modified",
        "additions": 48,
        "deletions": 53,
        "changes": 101,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/guiutil.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/guiutil.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiutil.cpp?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -112,8 +112,9 @@ static std::string DummyAddress(const CChainParams &params)\n     sourcedata.insert(sourcedata.end(), dummydata, dummydata + sizeof(dummydata));\n     for(int i=0; i<256; ++i) { // Try every trailing byte\n         std::string s = EncodeBase58(sourcedata.data(), sourcedata.data() + sourcedata.size());\n-        if (!CBitcoinAddress(s).IsValid())\n+        if (!IsValidDestinationString(s)) {\n             return s;\n+        }\n         sourcedata[sourcedata.size()-1] += 1;\n     }\n     return \"\";\n@@ -248,7 +249,7 @@ QString formatBitcoinURI(const SendCoinsRecipient &info)\n \n bool isDust(const QString& address, const CAmount& amount)\n {\n-    CTxDestination dest = CBitcoinAddress(address.toStdString()).Get();\n+    CTxDestination dest = DecodeDestination(address.toStdString());\n     CScript script = GetScriptForDestination(dest);\n     CTxOut txOut(amount, script);\n     return IsDust(txOut, ::dustRelayFee);\n@@ -634,24 +635,24 @@ bool SetStartOnSystemStartup(bool fAutoStart)\n \n     if (fAutoStart)\n     {\n-        CoInitialize(NULL);\n+        CoInitialize(nullptr);\n \n         // Get a pointer to the IShellLink interface.\n-        IShellLink* psl = NULL;\n-        HRESULT hres = CoCreateInstance(CLSID_ShellLink, NULL,\n+        IShellLink* psl = nullptr;\n+        HRESULT hres = CoCreateInstance(CLSID_ShellLink, nullptr,\n             CLSCTX_INPROC_SERVER, IID_IShellLink,\n             reinterpret_cast<void**>(&psl));\n \n         if (SUCCEEDED(hres))\n         {\n             // Get the current executable path\n             TCHAR pszExePath[MAX_PATH];\n-            GetModuleFileName(NULL, pszExePath, sizeof(pszExePath));\n+            GetModuleFileName(nullptr, pszExePath, sizeof(pszExePath));\n \n             // Start client minimized\n             QString strArgs = \"-min\";\n             // Set -testnet /-regtest options\n-            strArgs += QString::fromStdString(strprintf(\" -testnet=%d -regtest=%d\", GetBoolArg(\"-testnet\", false), GetBoolArg(\"-regtest\", false)));\n+            strArgs += QString::fromStdString(strprintf(\" -testnet=%d -regtest=%d\", gArgs.GetBoolArg(\"-testnet\", false), gArgs.GetBoolArg(\"-regtest\", false)));\n \n #ifdef UNICODE\n             boost::scoped_array<TCHAR> args(new TCHAR[strArgs.length() + 1]);\n@@ -674,7 +675,7 @@ bool SetStartOnSystemStartup(bool fAutoStart)\n \n             // Query IShellLink for the IPersistFile interface for\n             // saving the shortcut in persistent storage.\n-            IPersistFile* ppf = NULL;\n+            IPersistFile* ppf = nullptr;\n             hres = psl->QueryInterface(IID_IPersistFile, reinterpret_cast<void**>(&ppf));\n             if (SUCCEEDED(hres))\n             {\n@@ -743,9 +744,10 @@ bool SetStartOnSystemStartup(bool fAutoStart)\n     else\n     {\n         char pszExePath[MAX_PATH+1];\n-        memset(pszExePath, 0, sizeof(pszExePath));\n-        if (readlink(\"/proc/self/exe\", pszExePath, sizeof(pszExePath)-1) == -1)\n+        ssize_t r = readlink(\"/proc/self/exe\", pszExePath, sizeof(pszExePath) - 1);\n+        if (r == -1)\n             return false;\n+        pszExePath[r] = '\\0';\n \n         fs::create_directories(GetAutostartDir());\n \n@@ -760,7 +762,7 @@ bool SetStartOnSystemStartup(bool fAutoStart)\n             optionFile << \"Name=Bitcoin\\n\";\n         else\n             optionFile << strprintf(\"Name=Bitcoin (%s)\\n\", chain);\n-        optionFile << \"Exec=\" << pszExePath << strprintf(\" -min -testnet=%d -regtest=%d\\n\", GetBoolArg(\"-testnet\", false), GetBoolArg(\"-regtest\", false));\n+        optionFile << \"Exec=\" << pszExePath << strprintf(\" -min -testnet=%d -regtest=%d\\n\", gArgs.GetBoolArg(\"-testnet\", false), gArgs.GetBoolArg(\"-regtest\", false));\n         optionFile << \"Terminal=false\\n\";\n         optionFile << \"Hidden=false\\n\";\n         optionFile.close();\n@@ -780,58 +782,77 @@ bool SetStartOnSystemStartup(bool fAutoStart)\n LSSharedFileListItemRef findStartupItemInList(LSSharedFileListRef list, CFURLRef findUrl);\n LSSharedFileListItemRef findStartupItemInList(LSSharedFileListRef list, CFURLRef findUrl)\n {\n+    CFArrayRef listSnapshot = LSSharedFileListCopySnapshot(list, nullptr);\n+    if (listSnapshot == nullptr) {\n+        return nullptr;\n+    }\n+    \n     // loop through the list of startup items and try to find the bitcoin app\n-    CFArrayRef listSnapshot = LSSharedFileListCopySnapshot(list, NULL);\n     for(int i = 0; i < CFArrayGetCount(listSnapshot); i++) {\n         LSSharedFileListItemRef item = (LSSharedFileListItemRef)CFArrayGetValueAtIndex(listSnapshot, i);\n         UInt32 resolutionFlags = kLSSharedFileListNoUserInteraction | kLSSharedFileListDoNotMountVolumes;\n-        CFURLRef currentItemURL = NULL;\n+        CFURLRef currentItemURL = nullptr;\n \n #if defined(MAC_OS_X_VERSION_MAX_ALLOWED) && MAC_OS_X_VERSION_MAX_ALLOWED >= 10100\n-    if(&LSSharedFileListItemCopyResolvedURL)\n-        currentItemURL = LSSharedFileListItemCopyResolvedURL(item, resolutionFlags, NULL);\n+        if(&LSSharedFileListItemCopyResolvedURL)\n+            currentItemURL = LSSharedFileListItemCopyResolvedURL(item, resolutionFlags, nullptr);\n #if defined(MAC_OS_X_VERSION_MIN_REQUIRED) && MAC_OS_X_VERSION_MIN_REQUIRED < 10100\n-    else\n-        LSSharedFileListItemResolve(item, resolutionFlags, &currentItemURL, NULL);\n+        else\n+            LSSharedFileListItemResolve(item, resolutionFlags, &currentItemURL, nullptr);\n #endif\n #else\n-    LSSharedFileListItemResolve(item, resolutionFlags, &currentItemURL, NULL);\n+        LSSharedFileListItemResolve(item, resolutionFlags, &currentItemURL, nullptr);\n #endif\n \n-        if(currentItemURL && CFEqual(currentItemURL, findUrl)) {\n-            // found\n-            CFRelease(currentItemURL);\n-            return item;\n-        }\n         if(currentItemURL) {\n+            if (CFEqual(currentItemURL, findUrl)) {\n+                // found\n+                CFRelease(listSnapshot);\n+                CFRelease(currentItemURL);\n+                return item;\n+            }\n             CFRelease(currentItemURL);\n         }\n     }\n-    return NULL;\n+    \n+    CFRelease(listSnapshot);\n+    return nullptr;\n }\n \n bool GetStartOnSystemStartup()\n {\n     CFURLRef bitcoinAppUrl = CFBundleCopyBundleURL(CFBundleGetMainBundle());\n-    LSSharedFileListRef loginItems = LSSharedFileListCreate(NULL, kLSSharedFileListSessionLoginItems, NULL);\n+    if (bitcoinAppUrl == nullptr) {\n+        return false;\n+    }\n+    \n+    LSSharedFileListRef loginItems = LSSharedFileListCreate(nullptr, kLSSharedFileListSessionLoginItems, nullptr);\n     LSSharedFileListItemRef foundItem = findStartupItemInList(loginItems, bitcoinAppUrl);\n+\n+    CFRelease(bitcoinAppUrl);\n     return !!foundItem; // return boolified object\n }\n \n bool SetStartOnSystemStartup(bool fAutoStart)\n {\n     CFURLRef bitcoinAppUrl = CFBundleCopyBundleURL(CFBundleGetMainBundle());\n-    LSSharedFileListRef loginItems = LSSharedFileListCreate(NULL, kLSSharedFileListSessionLoginItems, NULL);\n+    if (bitcoinAppUrl == nullptr) {\n+        return false;\n+    }\n+    \n+    LSSharedFileListRef loginItems = LSSharedFileListCreate(nullptr, kLSSharedFileListSessionLoginItems, nullptr);\n     LSSharedFileListItemRef foundItem = findStartupItemInList(loginItems, bitcoinAppUrl);\n \n     if(fAutoStart && !foundItem) {\n         // add bitcoin app to startup item list\n-        LSSharedFileListInsertItemURL(loginItems, kLSSharedFileListItemBeforeFirst, NULL, NULL, bitcoinAppUrl, NULL, NULL);\n+        LSSharedFileListInsertItemURL(loginItems, kLSSharedFileListItemBeforeFirst, nullptr, nullptr, bitcoinAppUrl, nullptr, nullptr);\n     }\n     else if(!fAutoStart && foundItem) {\n         // remove item\n         LSSharedFileListItemRemove(loginItems, foundItem);\n     }\n+    \n+    CFRelease(bitcoinAppUrl);\n     return true;\n }\n #pragma GCC diagnostic pop\n@@ -842,32 +863,6 @@ bool SetStartOnSystemStartup(bool fAutoStart) { return false; }\n \n #endif\n \n-void saveWindowGeometry(const QString& strSetting, QWidget *parent)\n-{\n-    QSettings settings;\n-    settings.setValue(strSetting + \"Pos\", parent->pos());\n-    settings.setValue(strSetting + \"Size\", parent->size());\n-}\n-\n-void restoreWindowGeometry(const QString& strSetting, const QSize& defaultSize, QWidget *parent)\n-{\n-    QSettings settings;\n-    QPoint pos = settings.value(strSetting + \"Pos\").toPoint();\n-    QSize size = settings.value(strSetting + \"Size\", defaultSize).toSize();\n-\n-    parent->resize(size);\n-    parent->move(pos);\n-\n-    if ((!pos.x() && !pos.y()) || (QApplication::desktop()->screenNumber(parent) == -1))\n-    {\n-        QRect screen = QApplication::desktop()->screenGeometry();\n-        QPoint defaultPos((screen.width() - defaultSize.width()) / 2,\n-                          (screen.height() - defaultSize.height()) / 2);\n-        parent->resize(defaultSize);\n-        parent->move(defaultPos);\n-    }\n-}\n-\n void setClipboard(const QString& str)\n {\n     QApplication::clipboard()->setText(str, QClipboard::Clipboard);"
      },
      {
        "sha": "d10818d0c88e9804497266e5eb738d3948e484e0",
        "filename": "src/qt/guiutil.h",
        "status": "modified",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/guiutil.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/guiutil.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiutil.h?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -179,11 +179,6 @@ namespace GUIUtil\n     bool GetStartOnSystemStartup();\n     bool SetStartOnSystemStartup(bool fAutoStart);\n \n-    /** Save window size and position */\n-    void saveWindowGeometry(const QString& strSetting, QWidget *parent);\n-    /** Restore window size and position */\n-    void restoreWindowGeometry(const QString& strSetting, const QSize &defaultSizeIn, QWidget *parent);\n-\n     /* Convert QString to OS specific boost path through UTF-8 */\n     fs::path qstringToBoostPath(const QString &path);\n "
      },
      {
        "sha": "0ff95d850275c3b78cd30750142a3bca3b59e883",
        "filename": "src/qt/intro.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/intro.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/intro.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/intro.cpp?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -22,9 +22,9 @@\n \n static const uint64_t GB_BYTES = 1000000000LL;\n /* Minimum free space (in GB) needed for data directory */\n-static const uint64_t BLOCK_CHAIN_SIZE = 120;\n+static const uint64_t BLOCK_CHAIN_SIZE = 150;\n /* Minimum free space (in GB) needed for data directory when pruned; Does not include prune target */\n-static const uint64_t CHAIN_STATE_SIZE = 2;\n+static const uint64_t CHAIN_STATE_SIZE = 3;\n /* Total required space (in GB) depending on user choice (prune, not prune) */\n static uint64_t requiredSpace;\n \n@@ -43,7 +43,7 @@ class FreespaceChecker : public QObject\n     Q_OBJECT\n \n public:\n-    FreespaceChecker(Intro *intro);\n+    explicit FreespaceChecker(Intro *intro);\n \n     enum Status {\n         ST_OK,\n@@ -131,7 +131,7 @@ Intro::Intro(QWidget *parent) :\n     );\n     ui->lblExplanation2->setText(ui->lblExplanation2->text().arg(tr(PACKAGE_NAME)));\n \n-    uint64_t pruneTarget = std::max<int64_t>(0, GetArg(\"-prune\", 0));\n+    uint64_t pruneTarget = std::max<int64_t>(0, gArgs.GetArg(\"-prune\", 0));\n     requiredSpace = BLOCK_CHAIN_SIZE;\n     QString storageRequiresMsg = tr(\"At least %1 GB of data will be stored in this directory, and it will grow over time.\");\n     if (pruneTarget) {\n@@ -191,14 +191,14 @@ bool Intro::pickDataDirectory()\n     QSettings settings;\n     /* If data directory provided on command line, no need to look at settings\n        or show a picking dialog */\n-    if(!GetArg(\"-datadir\", \"\").empty())\n+    if(!gArgs.GetArg(\"-datadir\", \"\").empty())\n         return true;\n     /* 1) Default data directory for operating system */\n     QString dataDir = getDefaultDataDirectory();\n     /* 2) Allow QSettings to override default dir */\n     dataDir = settings.value(\"strDataDir\", dataDir).toString();\n \n-    if(!fs::exists(GUIUtil::qstringToBoostPath(dataDir)) || GetBoolArg(\"-choosedatadir\", DEFAULT_CHOOSE_DATADIR) || settings.value(\"fReset\", false).toBool() || GetBoolArg(\"-resetguisettings\", false))\n+    if(!fs::exists(GUIUtil::qstringToBoostPath(dataDir)) || gArgs.GetBoolArg(\"-choosedatadir\", DEFAULT_CHOOSE_DATADIR) || settings.value(\"fReset\", false).toBool() || gArgs.GetBoolArg(\"-resetguisettings\", false))\n     {\n         /* If current default data directory does not exist, let the user choose one */\n         Intro intro;\n@@ -231,7 +231,7 @@ bool Intro::pickDataDirectory()\n      * (to be consistent with bitcoind behavior)\n      */\n     if(dataDir != getDefaultDataDirectory())\n-        SoftSetArg(\"-datadir\", GUIUtil::qstringToBoostPath(dataDir).string()); // use OS locale for path setting\n+        gArgs.SoftSetArg(\"-datadir\", GUIUtil::qstringToBoostPath(dataDir).string()); // use OS locale for path setting\n     return true;\n }\n "
      },
      {
        "sha": "250fc6b5a2546cc02c53e1f2f64ea26625d17f56",
        "filename": "src/qt/locale/bitcoin_af.ts",
        "status": "modified",
        "additions": 105,
        "deletions": 1,
        "changes": 106,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/locale/bitcoin_af.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/locale/bitcoin_af.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_af.ts?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -73,6 +73,10 @@\n         <source>&amp;Copy Address</source>\n         <translation>&amp;Dupliseer Adres</translation>\n     </message>\n+    <message>\n+        <source>Copy &amp;Label</source>\n+        <translation>Kopieer &amp;Etiket</translation>\n+    </message>\n     <message>\n         <source>&amp;Edit</source>\n         <translation>&amp;Verander</translation>\n@@ -199,20 +203,36 @@\n         <source>The passphrase entered for the wallet decryption was incorrect.</source>\n         <translation>U het die verkeerde wagwoord ingetik.</translation>\n     </message>\n+    <message>\n+        <source>Wallet decryption failed</source>\n+        <translation>Beursie-dekripsie het misluk</translation>\n+    </message>\n+    <message>\n+        <source>Wallet passphrase was successfully changed.</source>\n+        <translation>Beursie wagwoordfrase is suksesvol verander.</translation>\n+    </message>\n     <message>\n         <source>Warning: The Caps Lock key is on!</source>\n         <translation>WAARSKUWING:  Outomatiese Kapitalisering is aktief op u sleutelbord!</translation>\n     </message>\n </context>\n <context>\n     <name>BanTableModel</name>\n+    <message>\n+        <source>IP/Netmask</source>\n+        <translation>IP/Netmasker</translation>\n+    </message>\n     <message>\n         <source>Banned Until</source>\n         <translation>Verban tot</translation>\n     </message>\n </context>\n <context>\n     <name>BitcoinGUI</name>\n+    <message>\n+        <source>Sign &amp;message...</source>\n+        <translation>Teken &amp;boodskap...</translation>\n+    </message>\n     <message>\n         <source>Synchronizing with network...</source>\n         <translation>Netwerk-sinkronisasie...</translation>\n@@ -293,6 +313,18 @@\n         <source>Open &amp;URI...</source>\n         <translation>Oop &amp; URI...</translation>\n     </message>\n+    <message>\n+        <source>Click to disable network activity.</source>\n+        <translation>Kliek om netwerkaktiwiteit af te skakel.</translation>\n+    </message>\n+    <message>\n+        <source>Network activity disabled.</source>\n+        <translation>Netwerkaktiwiteit gedeaktiveer.</translation>\n+    </message>\n+    <message>\n+        <source>Click to enable network activity again.</source>\n+        <translation>Kliek om netwerkaktiwiteit weer aan te skakel.</translation>\n+    </message>\n     <message>\n         <source>Reindexing blocks on disk...</source>\n         <translation>Besig met herindeksering van blokke op hardeskyf...</translation>\n@@ -309,6 +341,14 @@\n         <source>Change the passphrase used for wallet encryption</source>\n         <translation>Verander die wagwoord wat ek vir kodifikasie van my beursie gebruik</translation>\n     </message>\n+    <message>\n+        <source>&amp;Debug window</source>\n+        <translation>&amp;Ontfout venster</translation>\n+    </message>\n+    <message>\n+        <source>Open debugging and diagnostic console</source>\n+        <translation>Maak ontfouting en diagnostiese konsole oop</translation>\n+    </message>\n     <message>\n         <source>Bitcoin</source>\n         <translation>Bitcoin</translation>\n@@ -472,17 +512,49 @@\n         <source>Confirmed</source>\n         <translation>Bevestig</translation>\n     </message>\n+    <message>\n+        <source>yes</source>\n+        <translation>ja</translation>\n+    </message>\n+    <message>\n+        <source>no</source>\n+        <translation>nee</translation>\n+    </message>\n+    <message>\n+        <source>Can vary +/- %1 satoshi(s) per input.</source>\n+        <translation>Kan verskil met +/- %1 satoshi(s) per invoer.</translation>\n+    </message>\n     <message>\n         <source>(no label)</source>\n         <translation>(geen etiket)</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>change from %1 (%2)</source>\n+        <translation>verander van %1 (%2)</translation>\n+    </message>\n+    <message>\n+        <source>(change)</source>\n+        <translation>(verander)</translation>\n+    </message>\n+</context>\n <context>\n     <name>EditAddressDialog</name>\n     <message>\n         <source>Edit Address</source>\n         <translation>Wysig Adres</translation>\n     </message>\n+    <message>\n+        <source>&amp;Label</source>\n+        <translation>&amp;Etiket</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Address</source>\n+        <translation>&amp;Adres</translation>\n+    </message>\n+    <message>\n+        <source>Could not unlock wallet.</source>\n+        <translation>Kon beursie nie oopsluit nie.</translation>\n+    </message>\n     </context>\n <context>\n     <name>FreespaceChecker</name>\n@@ -524,6 +596,10 @@\n         <source>Welcome to %1.</source>\n         <translation>Welkom by %1.</translation>\n     </message>\n+    <message>\n+        <source>Error: Specified data directory \"%1\" cannot be created.</source>\n+        <translation>Fout: Gespesifiseerde datale\u00ear \"%1\" kon nie geskep word nie.</translation>\n+    </message>\n     <message>\n         <source>Error</source>\n         <translation>Fout</translation>\n@@ -561,10 +637,30 @@\n         <source>Reset all client options to default.</source>\n         <translation>Alle kli\u00ebntopsies na verstek terugstel.</translation>\n     </message>\n+    <message>\n+        <source>&amp;Network</source>\n+        <translation>&amp;Netwerk</translation>\n+    </message>\n+    <message>\n+        <source>W&amp;allet</source>\n+        <translation>B&amp;eursie</translation>\n+    </message>\n     <message>\n         <source>Expert</source>\n         <translation>Kenner</translation>\n     </message>\n+    <message>\n+        <source>Enable coin &amp;control features</source>\n+        <translation>Bemagtig munt &amp;beheer funksies.</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Port:</source>\n+        <translation>&amp;Poort:</translation>\n+    </message>\n+    <message>\n+        <source>IPv4</source>\n+        <translation>IPv4</translation>\n+    </message>\n     <message>\n         <source>IPv6</source>\n         <translation>IPv6</translation>\n@@ -573,6 +669,14 @@\n         <source>Tor</source>\n         <translation>Tor</translation>\n     </message>\n+    <message>\n+        <source>&amp;OK</source>\n+        <translation>&amp;OK</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Cancel</source>\n+        <translation>&amp;Kanselleer</translation>\n+    </message>\n     <message>\n         <source>default</source>\n         <translation>verstek</translation>"
      },
      {
        "sha": "432e8c3faf8cd33ec9a8c76636b5c77d1c10b958",
        "filename": "src/qt/locale/bitcoin_af_ZA.ts",
        "status": "modified",
        "additions": 64,
        "deletions": 0,
        "changes": 64,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/locale/bitcoin_af_ZA.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/locale/bitcoin_af_ZA.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_af_ZA.ts?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -5,6 +5,10 @@\n         <source>Create a new address</source>\n         <translation>Skep 'n nuwe adres</translation>\n     </message>\n+    <message>\n+        <source>&amp;New</source>\n+        <translation>&amp;Nuwe</translation>\n+    </message>\n     <message>\n         <source>Copy the currently selected address to the system clipboard</source>\n         <translation>Maak 'n kopie van die huidige adres na die stelsel klipbord</translation>\n@@ -17,6 +21,14 @@\n         <source>Delete the currently selected address from the list</source>\n         <translation>Verwyder die huidiglik gekieste address van die lys</translation>\n     </message>\n+    <message>\n+        <source>Export the data in the current tab to a file</source>\n+        <translation>Voer inligting uit van die huidige blad na n l\u00eaer</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Export</source>\n+        <translation>&amp;Uitvoer</translation>\n+    </message>\n     <message>\n         <source>&amp;Delete</source>\n         <translation>&amp;Verwyder</translation>\n@@ -25,6 +37,42 @@\n         <source>Choose the address to send coins to</source>\n         <translation>Kies die address na wie die muntstukke gestuur moet word</translation>\n     </message>\n+    <message>\n+        <source>C&amp;hoose</source>\n+        <translation>K&amp;ies</translation>\n+    </message>\n+    <message>\n+        <source>Sending addresses</source>\n+        <translation>Stuur adresse</translation>\n+    </message>\n+    <message>\n+        <source>Receiving addresses</source>\n+        <translation>Ontvang adresse</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Copy Address</source>\n+        <translation>&amp;Kopie adres</translation>\n+    </message>\n+    <message>\n+        <source>Copy &amp;Label</source>\n+        <translation>Kopie &amp;Etiket</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Edit</source>\n+        <translation>&amp;Wysig</translation>\n+    </message>\n+    <message>\n+        <source>Export Address List</source>\n+        <translation>Voer adres lys uit</translation>\n+    </message>\n+    <message>\n+        <source>Comma separated file (*.csv)</source>\n+        <translation>Koma geskeide l\u00eaers (*.csv)</translation>\n+    </message>\n+    <message>\n+        <source>Exporting Failed</source>\n+        <translation>Uitvoering Misluk</translation>\n+    </message>\n     </context>\n <context>\n     <name>AddressTableModel</name>\n@@ -660,6 +708,10 @@\n         <source>Copy amount</source>\n         <translation>Kopieer bedrag</translation>\n     </message>\n+    <message>\n+        <source>Comma separated file (*.csv)</source>\n+        <translation>Koma geskeide l\u00eaers (*.csv)</translation>\n+    </message>\n     <message>\n         <source>Date</source>\n         <translation>Datum</translation>\n@@ -680,6 +732,10 @@\n         <source>ID</source>\n         <translation>ID</translation>\n     </message>\n+    <message>\n+        <source>Exporting Failed</source>\n+        <translation>Uitvoering Misluk</translation>\n+    </message>\n     <message>\n         <source>Range:</source>\n         <translation>Reeks:</translation>\n@@ -704,6 +760,14 @@\n </context>\n <context>\n     <name>WalletView</name>\n+    <message>\n+        <source>&amp;Export</source>\n+        <translation>&amp;Uitvoer</translation>\n+    </message>\n+    <message>\n+        <source>Export the data in the current tab to a file</source>\n+        <translation>Voer inligting uit van die huidige blad na n l\u00eaer</translation>\n+    </message>\n     </context>\n <context>\n     <name>bitcoin-core</name>"
      },
      {
        "sha": "68c69038fd4b36ae6fdedfc699f4a9d5451b9d03",
        "filename": "src/qt/locale/bitcoin_ar.ts",
        "status": "modified",
        "additions": 29,
        "deletions": 1,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/locale/bitcoin_ar.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/locale/bitcoin_ar.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ar.ts?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -313,6 +313,18 @@\n         <source>Open &amp;URI...</source>\n         <translation>\u0627\u0641\u062a\u062d &amp;URI...</translation>\n     </message>\n+    <message>\n+        <source>Click to disable network activity.</source>\n+        <translation>\u0627\u0636\u063a\u0637 \u0644\u0625\u0644\u063a\u0627\u0621 \u062a\u0641\u0639\u064a\u0644 \u0627\u0644\u0634\u0628\u0643\u0647</translation>\n+    </message>\n+    <message>\n+        <source>Network activity disabled.</source>\n+        <translation>\u062a\u0645 \u0625\u0644\u063a\u0627\u0621 \u062a\u0641\u0639\u064a\u0644 \u0627\u0644\u0634\u0628\u0643\u0647</translation>\n+    </message>\n+    <message>\n+        <source>Click to enable network activity again.</source>\n+        <translation>\u0627\u0636\u063a\u0637 \u0644\u062a\u0641\u0639\u064a\u0644 \u0627\u0644\u0634\u0628\u0643\u0647 \u0645\u0631\u0647 \u0623\u062e\u0631\u0649</translation>\n+    </message>\n     <message>\n         <source>Reindexing blocks on disk...</source>\n         <translation>\u0625\u0639\u0627\u062f\u0629 \u0627\u0644\u0641\u0647\u0631\u0633\u0629 \u0627\u0644\u0643\u062a\u0644 \u0639\u0644\u0649 \u0627\u0644\u0642\u0631\u0635 ...</translation>\n@@ -509,7 +521,11 @@\n         <source>Wallet is &lt;b&gt;encrypted&lt;/b&gt; and currently &lt;b&gt;locked&lt;/b&gt;</source>\n         <translation>\u0627\u0644\u0645\u062d\u0641\u0638\u0629 &lt;b&gt;\u0645\u0634\u0641\u0631\u0629&lt;/b&gt; \u0648 &lt;b&gt;\u0645\u0642\u0641\u0644\u0629&lt;/b&gt; \u062d\u0627\u0644\u064a\u0627</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>A fatal error occurred. Bitcoin can no longer continue safely and will quit.</source>\n+        <translation>\u062e\u0637\u0623 \u0641\u0627\u062f\u062d \u062d\u062f\u062b . \u0644\u0627 \u064a\u0645\u0643\u0646 \u0627\u062a\u0645\u0627\u0645 \u0628\u064a\u062a\u0643\u0648\u064a\u0646 \u0628\u0627\u0645\u0627\u0646 \u0633\u064a\u062a\u0645 \u0627\u0644\u062e\u0631\u0648\u062c</translation>\n+    </message>\n+</context>\n <context>\n     <name>CoinControlDialog</name>\n     <message>\n@@ -608,6 +624,10 @@\n         <source>Copy after fee</source>\n         <translation>\u0646\u0633\u062e \u0628\u0639\u062f \u0627\u0644\u0631\u0633\u0648\u0645</translation>\n     </message>\n+    <message>\n+        <source>Copy bytes</source>\n+        <translation>\u0646\u0633\u062e \u0627\u0644\u0628\u0627\u064a\u062a\u0627\u062a </translation>\n+    </message>\n     <message>\n         <source>Copy change</source>\n         <translation>\u0646\u0633\u062e \u0627\u0644\u062a\u0639\u062f\u064a\u0644</translation>\n@@ -795,6 +815,10 @@\n         <source>Form</source>\n         <translation>\u0646\u0645\u0648\u062f\u062c</translation>\n     </message>\n+    <message>\n+        <source>Unknown...</source>\n+        <translation>\u063a\u064a\u0631 \u0645\u0639\u0631\u0641</translation>\n+    </message>\n     <message>\n         <source>Hide</source>\n         <translation>\u0625\u062e\u0641\u0627\u0621</translation>\n@@ -1362,6 +1386,10 @@\n         <source>Copy after fee</source>\n         <translation>\u0646\u0633\u062e \u0628\u0639\u062f \u0627\u0644\u0631\u0633\u0648\u0645</translation>\n     </message>\n+    <message>\n+        <source>Copy bytes</source>\n+        <translation>\u0646\u0633\u062e \u0627\u0644\u0628\u0627\u064a\u062a\u0627\u062a </translation>\n+    </message>\n     <message>\n         <source>Copy change</source>\n         <translation>\u0646\u0633\u062e \u0627\u0644\u062a\u0639\u062f\u064a\u0644</translation>"
      },
      {
        "sha": "37b7f8532a34341d79abb787f3d823a2ae341e0d",
        "filename": "src/qt/locale/bitcoin_bg.ts",
        "status": "modified",
        "additions": 24,
        "deletions": 0,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/locale/bitcoin_bg.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/locale/bitcoin_bg.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_bg.ts?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -313,6 +313,18 @@\n         <source>Open &amp;URI...</source>\n         <translation>\u041e\u0442\u0432\u043e\u0440\u0438 &amp;URI...</translation>\n     </message>\n+    <message>\n+        <source>Click to disable network activity.</source>\n+        <translation>\u041d\u0430\u0442\u0438\u0441\u043d\u0435\u0442\u0435 \u0437\u0430 \u0434\u0435\u0430\u043a\u0442\u0438\u0432\u0438\u0440\u0430\u043d\u0435 \u043d\u0430 \u043c\u0440\u0435\u0436\u0430\u0442\u0430</translation>\n+    </message>\n+    <message>\n+        <source>Network activity disabled.</source>\n+        <translation>\u041c\u0440\u0435\u0436\u0430\u0442\u0430 \u0434\u0435\u0430\u043a\u0442\u0438\u0432\u0438\u0440\u0430\u043d\u0430</translation>\n+    </message>\n+    <message>\n+        <source>Click to enable network activity again.</source>\n+        <translation>\u041d\u0430\u0442\u0438\u0441\u043d\u0435\u0442\u0435 \u0437\u0430 \u043f\u043e\u0432\u0442\u043e\u0440\u043d\u043e \u0430\u043a\u0442\u0438\u0432\u0438\u0440\u0430\u043d\u0435 \u043d\u0430 \u043c\u0440\u0435\u0436\u0430\u0442\u0430</translation>\n+    </message>\n     <message>\n         <source>Reindexing blocks on disk...</source>\n         <translation>\u041f\u043e\u0432\u0442\u043e\u0440\u043d\u043e \u0438\u043d\u0434\u0435\u043a\u0441\u0438\u0440\u0430\u043d\u0435 \u043d\u0430 \u0431\u043b\u043e\u043a\u043e\u0432\u0435\u0442\u0435 \u043d\u0430 \u0434\u0438\u0441\u043a\u0430...</translation>\n@@ -457,6 +469,10 @@\n         <source>%1 client</source>\n         <translation>%1 \u043a\u043b\u0438\u0435\u043d\u0442</translation>\n     </message>\n+    <message>\n+        <source>Connecting to peers...</source>\n+        <translation>\u0421\u0432\u044a\u0440\u0437\u0432\u0430\u043d\u0435 \u0441 \u043f\u0438\u044a\u0440\u0438</translation>\n+    </message>\n     <message>\n         <source>Catching up...</source>\n         <translation>\u0417\u0430\u0440\u0435\u0436\u0434\u0430 \u0431\u043b\u043e\u043a\u043e\u0432\u0435...</translation>\n@@ -794,6 +810,10 @@\n         <source>Welcome to %1.</source>\n         <translation>\u0414\u043e\u0431\u0440\u0435 \u0434\u043e\u0448\u043b\u0438 \u0432 %1.</translation>\n     </message>\n+    <message>\n+        <source>As this is the first time the program is launched, you can choose where %1 will store its data.</source>\n+        <translation>\u041f\u0440\u043e\u0433\u0440\u0430\u043c\u0430\u0442\u0430 \u0441\u0435 \u0441\u0442\u0430\u0440\u0442\u0438\u0440\u0430 \u0437\u0430 \u043f\u044a\u0440\u0432\u0438 \u043f\u044a\u0442 \u0432\u0438\u0435 \u043c\u043e\u0436\u0435 \u0434\u0430 \u0438\u0437\u0431\u0435\u0440\u0435\u0442\u0435 \u043a\u044a\u0434\u0435 %1 \u0449\u0435 \u0441\u0435 \u0437\u0430\u043f\u0430\u043c\u0435\u0442\u044f\u0442 \u0434\u0430\u043d\u043d\u0438\u0442\u0435.</translation>\n+    </message>\n     <message>\n         <source>Use the default data directory</source>\n         <translation>\u0418\u0437\u043f\u043e\u043b\u0437\u0432\u0430\u043d\u0435 \u043d\u0430 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044f \u043f\u043e \u043f\u043e\u0434\u0440\u0430\u0437\u0431\u0438\u0440\u0430\u043d\u0435</translation>\n@@ -817,6 +837,10 @@\n         <source>Last block time</source>\n         <translation>\u0412\u0440\u0435\u043c\u0435 \u043d\u0430 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u044f \u0431\u043b\u043e\u043a</translation>\n     </message>\n+    <message>\n+        <source>calculating...</source>\n+        <translation>\u0418\u0437\u0447\u0438\u0441\u043b\u044f\u0432\u0430\u043d\u0435...</translation>\n+    </message>\n     <message>\n         <source>Hide</source>\n         <translation>\u0421\u043a\u0440\u0438\u0439</translation>"
      },
      {
        "sha": "2dd724c442a05fc91c7f7ed0d0c880df8c2ed091",
        "filename": "src/qt/locale/bitcoin_ca_ES.ts",
        "status": "modified",
        "additions": 27,
        "deletions": 3,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/locale/bitcoin_ca_ES.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/locale/bitcoin_ca_ES.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ca_ES.ts?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -3,7 +3,7 @@\n     <name>AddressBookPage</name>\n     <message>\n         <source>Right-click to edit address or label</source>\n-        <translation>Feu clic dret per a editar l'adre\u00e7a o l'etiqueta</translation>\n+        <translation>Feu clic dret per a editar l'adre\u00e7a o l'etiquetaccn</translation>\n     </message>\n     <message>\n         <source>Create a new address</source>\n@@ -877,6 +877,10 @@\n         <source>Form</source>\n         <translation>Formulari</translation>\n     </message>\n+    <message>\n+        <source>Unknown...</source>\n+        <translation>Desconegut...</translation>\n+    </message>\n     <message>\n         <source>Last block time</source>\n         <translation>\u00daltim temps de bloc</translation>\n@@ -1382,7 +1386,11 @@\n     </context>\n <context>\n     <name>QObject::QObject</name>\n-    </context>\n+    <message>\n+        <source>Error: %1</source>\n+        <translation>Av\u00eds: %1</translation>\n+    </message>\n+</context>\n <context>\n     <name>QRImageWidget</name>\n     <message>\n@@ -2337,6 +2345,10 @@\n         <source>%1/offline</source>\n         <translation>%1/fora de l\u00ednia</translation>\n     </message>\n+    <message>\n+        <source>abandoned</source>\n+        <translation>abandonada</translation>\n+    </message>\n     <message>\n         <source>%1/unconfirmed</source>\n         <translation>%1/sense confirmar</translation>\n@@ -2468,7 +2480,11 @@\n         <source>This pane shows a detailed description of the transaction</source>\n         <translation>Aquest panell mostra una descripci\u00f3 detallada de la transacci\u00f3</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Details for %1</source>\n+        <translation>Detalls per %1</translation>\n+    </message>\n+</context>\n <context>\n     <name>TransactionTableModel</name>\n     <message>\n@@ -2658,6 +2674,10 @@\n         <source>Copy raw transaction</source>\n         <translation>Copia la transacci\u00f3 crua</translation>\n     </message>\n+    <message>\n+        <source>Copy full transaction details</source>\n+        <translation>Copia els detalls complets de la transacci\u00f3</translation>\n+    </message>\n     <message>\n         <source>Edit label</source>\n         <translation>Editar etiqueta</translation>\n@@ -3141,6 +3161,10 @@\n         <source>Warning</source>\n         <translation>Av\u00eds</translation>\n     </message>\n+    <message>\n+        <source>Warning: unknown new rules activated (versionbit %i)</source>\n+        <translation>Av\u00eds: regles noves desconegudes activades (versionbit %i)</translation>\n+    </message>\n     <message>\n         <source>Zapping all transactions from wallet...</source>\n         <translation>Se suprimeixen totes les transaccions del moneder...</translation>"
      },
      {
        "sha": "bc3fcb278e629f4d712b245a4d5d4335f6e3aa91",
        "filename": "src/qt/locale/bitcoin_da.ts",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/locale/bitcoin_da.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/locale/bitcoin_da.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_da.ts?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -3,7 +3,7 @@\n     <name>AddressBookPage</name>\n     <message>\n         <source>Right-click to edit address or label</source>\n-        <translation>H\u00f8jreklik for at redigere adresse eller m\u00e6rke</translation>\n+        <translation>H\u00f8jreklik for at redigere adresse eller m\u00e6rkat</translation>\n     </message>\n     <message>\n         <source>Create a new address</source>\n@@ -604,7 +604,7 @@\n     </message>\n     <message>\n         <source>Received with label</source>\n-        <translation>Modtaget med m\u00e6rke</translation>\n+        <translation>Modtaget med m\u00e6rkat</translation>\n     </message>\n     <message>\n         <source>Received with address</source>\n@@ -3123,7 +3123,7 @@\n     </message>\n     <message>\n         <source>Reduce storage requirements by enabling pruning (deleting) of old blocks. This allows the pruneblockchain RPC to be called to delete specific blocks, and enables automatic pruning of old blocks if a target size in MiB is provided. This mode is incompatible with -txindex and -rescan. Warning: Reverting this setting requires re-downloading the entire blockchain. (default: 0 = disable pruning blocks, 1 = allow manual pruning via RPC, &gt;%u = automatically prune block files to stay under the specified target size in MiB)</source>\n-        <translation>Reduc\u00e9r pladskravene ved at besk\u00e6re (slette, \"prune\") gamle blokke. Dette tillader pruneblockchain-RPC'en at blive kaldt for at slette specifikke blokke, og det aktiverer automatisk besk\u00e6ring af gamle blokke, hvis en m\u00e5lst\u00f8rrelse i MiB er angivet. Denne tilstand er ikke kompatibel med -txindex og -rescan. Advarsel: Fortrydelse af denne indstilling kr\u00e6ver download af hele blokk\u00e6den igen. (standard: 0 = sl\u00e5 besk\u00e6ring af blokke fra, 1 = tillad manuel besk\u00e6ring via RPC, &gt;%u = besk\u00e6r automatisk blokfiler for at bliver under den angivne m\u00e5lst\u00f8rrelse i MiB)</translation>\n+        <translation>Reduc\u00e9r pladskravene ved at besk\u00e6re (slette, \u201cprune\u201d) gamle blokke. Dette tillader pruneblockchain-RPC'en at blive kaldt for at slette specifikke blokke, og det aktiverer automatisk besk\u00e6ring af gamle blokke, hvis en m\u00e5lst\u00f8rrelse i MiB er angivet. Denne tilstand er ikke kompatibel med -txindex og -rescan. Advarsel: Fortrydelse af denne indstilling kr\u00e6ver download af hele blokk\u00e6den igen. (standard: 0 = sl\u00e5 besk\u00e6ring af blokke fra, 1 = tillad manuel besk\u00e6ring via RPC, &gt;%u = besk\u00e6r automatisk blokfiler for at bliver under den angivne m\u00e5lst\u00f8rrelse i MiB)</translation>\n     </message>\n     <message>\n         <source>Set lowest fee rate (in %s/kB) for transactions to be included in block creation. (default: %s)</source>"
      },
      {
        "sha": "dcd228600546a72eec05fdebfc687dadba137fe2",
        "filename": "src/qt/locale/bitcoin_de.ts",
        "status": "modified",
        "additions": 100,
        "deletions": 28,
        "changes": 128,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/locale/bitcoin_de.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/locale/bitcoin_de.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_de.ts?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -79,7 +79,7 @@\n     </message>\n     <message>\n         <source>&amp;Edit</source>\n-        <translation>&amp;Editieren</translation>\n+        <translation>B&amp;earbeiten</translation>\n     </message>\n     <message>\n         <source>Export Address List</source>\n@@ -133,87 +133,87 @@\n     </message>\n     <message>\n         <source>Enter the new passphrase to the wallet.&lt;br/&gt;Please use a passphrase of &lt;b&gt;ten or more random characters&lt;/b&gt;, or &lt;b&gt;eight or more words&lt;/b&gt;.</source>\n-        <translation>Geben Sie die neue Passphrase f\u00fcr die Wallet ein.&lt;br&gt;Bitte benutzen Sie eine Passphrase bestehend aus &lt;b&gt;zehn oder mehr zuf\u00e4lligen Zeichen&lt;/b&gt; oder &lt;b&gt;acht oder mehr W\u00f6rtern&lt;/b&gt;.</translation>\n+        <translation>Geben Sie die neue Passphrase f\u00fcr die Brieftasche ein.&lt;br&gt;Bitte benutzen Sie eine Passphrase bestehend aus &lt;b&gt;zehn oder mehr zuf\u00e4lligen Zeichen&lt;/b&gt; oder &lt;b&gt;acht oder mehr W\u00f6rtern&lt;/b&gt;.</translation>\n     </message>\n     <message>\n         <source>Encrypt wallet</source>\n         <translation>Wallet verschl\u00fcsseln</translation>\n     </message>\n     <message>\n         <source>This operation needs your wallet passphrase to unlock the wallet.</source>\n-        <translation>Dieser Vorgang ben\u00f6tigt ihre Passphrase, um die Wallet zu entsperren.</translation>\n+        <translation>Dieser Vorgang ben\u00f6tigt ihre Passphrase, um die Brieftasche zu entsperren.</translation>\n     </message>\n     <message>\n         <source>Unlock wallet</source>\n         <translation>Wallet entsperren</translation>\n     </message>\n     <message>\n         <source>This operation needs your wallet passphrase to decrypt the wallet.</source>\n-        <translation>Dieser Vorgang ben\u00f6tigt Ihre Passphrase, um die Wallet zu entschl\u00fcsseln.</translation>\n+        <translation>Dieser Vorgang ben\u00f6tigt Ihre Passphrase, um die Brieftasche zu entschl\u00fcsseln.</translation>\n     </message>\n     <message>\n         <source>Decrypt wallet</source>\n-        <translation>Wallet entschl\u00fcsseln</translation>\n+        <translation>Brieftasche entschl\u00fcsseln</translation>\n     </message>\n     <message>\n         <source>Change passphrase</source>\n         <translation>Passphrase \u00e4ndern</translation>\n     </message>\n     <message>\n         <source>Enter the old passphrase and new passphrase to the wallet.</source>\n-        <translation>Geben Sie die alte und neue Wallet-Passphrase ein.</translation>\n+        <translation>Geben Sie die alte und neue Brieftschen-Passphrase ein.</translation>\n     </message>\n     <message>\n         <source>Confirm wallet encryption</source>\n-        <translation>Wallet-Verschl\u00fcsselung best\u00e4tigen</translation>\n+        <translation>Brieftaschen-Verschl\u00fcsselung best\u00e4tigen</translation>\n     </message>\n     <message>\n         <source>Warning: If you encrypt your wallet and lose your passphrase, you will &lt;b&gt;LOSE ALL OF YOUR BITCOINS&lt;/b&gt;!</source>\n-        <translation>Warnung: Wenn Sie Ihre Wallet verschl\u00fcsseln und Ihre Passphrase verlieren, werden Sie &lt;b&gt;alle Ihre Bitcoins verlieren&lt;/b&gt;!</translation>\n+        <translation>Warnung: Wenn Sie Ihre Brieftasche verschl\u00fcsseln und Ihre Passphrase verlieren, werden Sie &lt;b&gt;alle Ihre Bitcoins verlieren&lt;/b&gt;!</translation>\n     </message>\n     <message>\n         <source>Are you sure you wish to encrypt your wallet?</source>\n-        <translation>Sind Sie sich sicher, dass Sie Ihre Wallet verschl\u00fcsseln m\u00f6chten?</translation>\n+        <translation>Sind Sie sich sicher, dass Sie Ihre Brieftasche verschl\u00fcsseln m\u00f6chten?</translation>\n     </message>\n     <message>\n         <source>Wallet encrypted</source>\n-        <translation>Wallet verschl\u00fcsselt</translation>\n+        <translation>Brieftasche verschl\u00fcsselt</translation>\n     </message>\n     <message>\n         <source>%1 will close now to finish the encryption process. Remember that encrypting your wallet cannot fully protect your bitcoins from being stolen by malware infecting your computer.</source>\n-        <translation>%1 wird jetzt beendet, um den Verschl\u00fcsselungsprozess abzuschlie\u00dfen. Bitte beachten Sie, dass die Wallet-Verschl\u00fcsselung nicht vollst\u00e4ndig vor Diebstahl Ihrer Bitcoins durch Schadprogramme sch\u00fctzt, die Ihren Computer bef\u00e4llt.</translation>\n+        <translation>%1 wird jetzt beendet, um den Verschl\u00fcsselungsprozess abzuschlie\u00dfen. Bitte beachten Sie, dass die Brieftaschen-Verschl\u00fcsselung nicht vollst\u00e4ndig vor Diebstahl Ihrer Bitcoins durch Schadprogramme sch\u00fctzt, die Ihren Computer bef\u00e4llt.</translation>\n     </message>\n     <message>\n         <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>\n-        <translation>WICHTIG: Alle vorherigen Wallet-Sicherungen sollten durch die neu erzeugte, verschl\u00fcsselte Wallet ersetzt werden. Aus Sicherheitsgr\u00fcnden werden vorherige Sicherungen der unverschl\u00fcsselten Wallet nutzlos, sobald Sie die neue, verschl\u00fcsselte Wallet verwenden.</translation>\n+        <translation>WICHTIG: Alle vorherigen Brieftaschen-Sicherungen sollten durch die neu erzeugte, verschl\u00fcsselte Brieftasche ersetzt werden. Aus Sicherheitsgr\u00fcnden werden vorherige Sicherungen der unverschl\u00fcsselten Brieftasche nutzlos, sobald Sie die neue, verschl\u00fcsselte Brieftasche verwenden.</translation>\n     </message>\n     <message>\n         <source>Wallet encryption failed</source>\n-        <translation>Wallet-Verschl\u00fcsselung fehlgeschlagen</translation>\n+        <translation>Brieftaschen-Verschl\u00fcsselung fehlgeschlagen</translation>\n     </message>\n     <message>\n         <source>Wallet encryption failed due to an internal error. Your wallet was not encrypted.</source>\n-        <translation>Die Wallet-Verschl\u00fcsselung ist aufgrund eines internen Fehlers fehlgeschlagen. Ihre Wallet wurde nicht verschl\u00fcsselt.</translation>\n+        <translation>Die Brieftaschen-Verschl\u00fcsselung ist aufgrund eines internen Fehlers fehlgeschlagen. Ihre Brieftasche wurde nicht verschl\u00fcsselt.</translation>\n     </message>\n     <message>\n         <source>The supplied passphrases do not match.</source>\n         <translation>Die eingegebenen Passphrasen stimmen nicht \u00fcberein.</translation>\n     </message>\n     <message>\n         <source>Wallet unlock failed</source>\n-        <translation>Wallet-Entsperrung fehlgeschlagen</translation>\n+        <translation>Brieftaschen-Entsperrung fehlgeschlagen</translation>\n     </message>\n     <message>\n         <source>The passphrase entered for the wallet decryption was incorrect.</source>\n-        <translation>Die eingegebene Passphrase zur Wallet-Entschl\u00fcsselung war nicht korrekt.</translation>\n+        <translation>Die eingegebene Passphrase zur Brieftaschen-Entschl\u00fcsselung war nicht korrekt.</translation>\n     </message>\n     <message>\n         <source>Wallet decryption failed</source>\n-        <translation>Wallet-Entschl\u00fcsselung fehlgeschlagen</translation>\n+        <translation>Brieftaschen-Entschl\u00fcsselung fehlgeschlagen</translation>\n     </message>\n     <message>\n         <source>Wallet passphrase was successfully changed.</source>\n-        <translation>Die Wallet-Passphrase wurde erfolgreich ge\u00e4ndert.</translation>\n+        <translation>Die Brieftaschen-Passphrase wurde erfolgreich ge\u00e4ndert.</translation>\n     </message>\n     <message>\n         <source>Warning: The Caps Lock key is on!</source>\n@@ -439,7 +439,7 @@\n     </message>\n     <message>\n         <source>Indexing blocks on disk...</source>\n-        <translation>Reindiziere Bl\u00f6cke auf Datentr\u00e4ger...</translation>\n+        <translation>Indiziere Bl\u00f6cke auf Datentr\u00e4ger...</translation>\n     </message>\n     <message>\n         <source>Processing blocks on disk...</source>\n@@ -636,7 +636,7 @@\n     </message>\n     <message>\n         <source>Copy transaction ID</source>\n-        <translation>Transaktionskennung kopieren</translation>\n+        <translation>Transaktions-ID kopieren</translation>\n     </message>\n     <message>\n         <source>Lock unspent</source>\n@@ -660,7 +660,7 @@\n     </message>\n     <message>\n         <source>Copy bytes</source>\n-        <translation>Byte kopieren</translation>\n+        <translation>Bytes kopieren</translation>\n     </message>\n     <message>\n         <source>Copy dust</source>\n@@ -751,7 +751,7 @@\n     </message>\n     <message>\n         <source>Could not unlock wallet.</source>\n-        <translation>Wallet konnte nicht entsperrt werden.</translation>\n+        <translation>Brieftasche konnte nicht entsperrt werden.</translation>\n     </message>\n     <message>\n         <source>New key generation failed.</source>\n@@ -817,15 +817,15 @@\n     </message>\n     <message>\n         <source>Set language, for example \"de_DE\" (default: system locale)</source>\n-        <translation>Sprache einstellen, zum Beispiel \"de_DE\" (default: system locale)</translation>\n+        <translation>Sprache einstellen, zum Beispiel \"de_DE\" (Standard: Systemgebietsschema)</translation>\n     </message>\n     <message>\n         <source>Start minimized</source>\n         <translation>Minimiert starten</translation>\n     </message>\n     <message>\n         <source>Set SSL root certificates for payment request (default: -system-)</source>\n-        <translation>SSL-Wurzelzertifikate f\u00fcr Zahlungsanforderungen festlegen (Standard: -system-)</translation>\n+        <translation>SSL-Wurzelzertifikate f\u00fcr Zahlungsanforderungen festlegen (Standard: Systemstandard)</translation>\n     </message>\n     <message>\n         <source>Show splash screen on startup (default: %u)</source>\n@@ -885,6 +885,14 @@\n         <source>Form</source>\n         <translation>Formular</translation>\n     </message>\n+    <message>\n+        <source>Recent transactions may not yet be visible, and therefore your wallet's balance might be incorrect. This information will be correct once your wallet has finished synchronizing with the bitcoin network, as detailed below.</source>\n+        <translation>Neueste Transaktionen werden eventuell noch nicht angezeigt, daher k\u00f6nnte Ihr Kontostand veraltet sein. Er wird korrigiert, sobald Ihr Wallet die Synchronisation mit dem Bitcoin-Netzwerk erfolgreich abgeschlossen. Details dazu finden sich weiter unten.</translation>\n+    </message>\n+    <message>\n+        <source>Attempting to spend bitcoins that are affected by not-yet-displayed transactions will not be accepted by the network.</source>\n+        <translation>Versuche, Bitcoins aus noch nicht angezeigten Transaktionen auszugeben, werden vom Netzwerk nicht akzeptiert.</translation>\n+    </message>\n     <message>\n         <source>Number of blocks left</source>\n         <translation>Anzahl verbleibender Bl\u00f6cke</translation>\n@@ -2200,6 +2208,10 @@\n         <source>Confirm custom change address</source>\n         <translation>Best\u00e4tige benutzerdefinierte Wechselgeld-Adresse</translation>\n     </message>\n+    <message>\n+        <source>The address you selected for change is not part of this wallet. Any or all funds in your wallet may be sent to this address. Are you sure?</source>\n+        <translation>Die ausgew\u00e4hlte Wechselgeld-Adresse ist nicht Bestandteil dieses Wallets. Einige oder alle Mittel aus Ihrem Wallet k\u00f6nnten an diese Adresse gesendet werden. Wollen Sie das wirklich?</translation>\n+    </message>\n     <message>\n         <source>(no label)</source>\n         <translation>(keine Bezeichnung)</translation>\n@@ -2997,6 +3009,10 @@\n         <source>Accept connections from outside (default: 1 if no -proxy or -connect/-noconnect)</source>\n         <translation>Eingehende Verbindungen annehmen (Standard: 1, wenn nicht -proxy oder -connect/-noconnect)</translation>\n     </message>\n+    <message>\n+        <source>Connect only to the specified node(s); -noconnect or -connect=0 alone to disable automatic connections</source>\n+        <translation>Verbindungen nur zu spezifizierten Node(s); verwenden Sie -noconnect oder -connect=0 alleine um automatische Verbindungen zu deaktivieren</translation>\n+    </message>\n     <message>\n         <source>Distributed under the MIT software license, see the accompanying file %s or %s</source>\n         <translation>Ver\u00f6ffentlicht unter der MIT-Softwarelizenz, siehe beiligende Datei %s oder %s.</translation>\n@@ -3065,6 +3081,10 @@\n         <source>Delete all wallet transactions and only recover those parts of the blockchain through -rescan on startup</source>\n         <translation>Alle Wallet-Transaktionen l\u00f6schen und nur diese Teilbereiche der Blockkette durch -rescan beim Starten wiederherstellen</translation>\n     </message>\n+    <message>\n+        <source>Error loading %s: You can't enable HD on a already existing non-HD wallet</source>\n+        <translation>Fehler beim Laden von %s: Sie k\u00f6nnen HD nicht aktivieren da sie derzeit eine nicht HD Brieftasche besitzen.</translation>\n+    </message>\n     <message>\n         <source>Error reading %s! All keys read correctly, but transaction data or address book entries might be missing or incorrect.</source>\n         <translation>Lesen von %s fehlgeschlagen! Alle Schl\u00fcssel wurden korrekt gelesen, Transaktionsdaten bzw. Adressbucheintr\u00e4ge fehlen aber m\u00f6glicherweise oder sind inkorrekt.</translation>\n@@ -3073,9 +3093,17 @@\n         <source>Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)</source>\n         <translation>Befehl ausf\u00fchren wenn sich eine Wallet-Transaktion ver\u00e4ndert (%s im Befehl wird durch die Transaktions-ID ersetzt)</translation>\n     </message>\n+    <message>\n+        <source>Extra transactions to keep in memory for compact block reconstructions (default: %u)</source>\n+        <translation>Zus\u00e4tzliche Transaktionen f\u00fcr kompakten Block-Nachbau im Speicher vorhalten (default: %u)</translation>\n+    </message>\n+    <message>\n+        <source>If this block is in the chain assume that it and its ancestors are valid and potentially skip their script verification (0 to verify all, default: %s, testnet: %s)</source>\n+        <translation>Sofern dieser Block Bestandteil der Blockchain ist, nehme an, dass er und seine Vorg\u00e4nger g\u00fcltig sind und \u00fcberspringe ggf. dessen Skriptverifikation (0 um alle zu verifizieren, default: %s, testnet: %s)</translation>\n+    </message>\n     <message>\n         <source>Maximum allowed median peer time offset adjustment. Local perspective of time may be influenced by peers forward or backward by this amount. (default: %u seconds)</source>\n-        <translation>Maximum allowed median peer time offset adjustment. Local perspective of time may be influenced by peers forward or backward by this amount. (default: %u seconds)</translation>\n+        <translation>Maximal zul\u00e4ssige mediane Peer-Zeit-Offset-Einstellung. Lokale Perspektive der Zeit kann von Peers vorw\u00e4rts oder r\u00fcckw\u00e4rts um diesen Betrag beeinflusst werden. (Voreinstellung: %u Sekunden)</translation>\n     </message>\n     <message>\n         <source>Maximum total fees (in %s) to use in a single wallet transaction or raw transaction; setting this too low may abort large transactions (default: %s)</source>\n@@ -3089,6 +3117,14 @@\n         <source>Please contribute if you find %s useful. Visit %s for further information about the software.</source>\n         <translation>Wenn sie %s n\u00fctzlich finden, sind Helfer sehr gern gesehen. Besuchen Sie %s um mehr \u00fcber das Softwareprojekt zu erfahren.</translation>\n     </message>\n+    <message>\n+        <source>Reduce storage requirements by enabling pruning (deleting) of old blocks. This allows the pruneblockchain RPC to be called to delete specific blocks, and enables automatic pruning of old blocks if a target size in MiB is provided. This mode is incompatible with -txindex and -rescan. Warning: Reverting this setting requires re-downloading the entire blockchain. (default: 0 = disable pruning blocks, 1 = allow manual pruning via RPC, &gt;%u = automatically prune block files to stay under the specified target size in MiB)</source>\n+        <translation>Speicherplatzanforderung durch K\u00fcrzen (Pruning) alter Bl\u00f6cke reduzieren. Dies erlaubt das Aufrufen des sogenannten Pruneblockchain RPC zum L\u00f6schen spezifischer Bl\u00f6cke und und aktiviert das automatische Pruning alter Bl\u00f6cke, sofern eine Zielgr\u00f6\u00dfe in MIB angegeben wird. Dieser Modus ist nicht mit -txindex und -resacan kompatibel. Warnung: Das R\u00fccksetzen dieser Einstellung erfordert das erneute Herunterladen der gesamten Blockchain. (Standard: 0 = deaktiviert das Pruning, 1 = erlaubt manuelles Pruning via RPC, &gt;%u = automatisches Pruning der Blockdateien, um angegebene Maximalgr\u00f6\u00dfe nicht zu \u00fcberschreiten)</translation>\n+    </message>\n+    <message>\n+        <source>Set lowest fee rate (in %s/kB) for transactions to be included in block creation. (default: %s)</source>\n+        <translation>Niedrigste Geb\u00fchr (in %s/kB) f\u00fcr Transaktionen einstellen, die bei der Blockerzeugung ber\u00fccksichtigt werden sollen. (default: %s)</translation>\n+    </message>\n     <message>\n         <source>Set the number of script verification threads (%u to %d, 0 = auto, &lt;0 = leave that many cores free, default: %d)</source>\n         <translation>Maximale Anzahl an Skript-Verifizierungs-Threads festlegen (%u bis %d, 0 = automatisch, &lt;0 = so viele Kerne frei lassen, Standard: %d)</translation>\n@@ -3113,6 +3149,10 @@\n         <source>Username and hashed password for JSON-RPC connections. The field &lt;userpw&gt; comes in the format: &lt;USERNAME&gt;:&lt;SALT&gt;$&lt;HASH&gt;. A canonical python script is included in share/rpcuser. The client then connects normally using the rpcuser=&lt;USERNAME&gt;/rpcpassword=&lt;PASSWORD&gt; pair of arguments. This option can be specified multiple times</source>\n         <translation>Benutzername und gehashtes Passwort f\u00fcr JSON-RPC Verbindungen. Das Feld &lt;userpw&gt; kommt im Format: &lt;USERNAME&gt;:&lt;SALT&gt;$&lt;HASH&gt;. Ein kanonisches Pythonskript ist in share/rpcuser inbegriffen. Der client benutzt wie gehabt, die rpcuser/rpcpassword Parameter. Diese Option kann mehrere Male spezifiziert werden</translation>\n     </message>\n+    <message>\n+        <source>Wallet will not create transactions that violate mempool chain limits (default: %u)</source>\n+        <translation>Das Wallet erzeugt keine Transaktionen, die das Mempool Chain Limit \u00fcberschreiten (Standardeinstellung: %u)</translation>\n+    </message>\n     <message>\n         <source>Warning: The network does not appear to fully agree! Some miners appear to be experiencing issues.</source>\n         <translation>Warnung: Das Netzwerk scheint nicht vollst\u00e4ndig \u00fcbereinzustimmen! Einige Miner scheinen Probleme zu haben.</translation>\n@@ -3153,6 +3193,10 @@\n         <source>Cannot resolve -%s address: '%s'</source>\n         <translation>Kann Adresse in -%s nicht aufl\u00f6sen: '%s'</translation>\n     </message>\n+    <message>\n+        <source>Chain selection options:</source>\n+        <translation>Chain Auswahloptionen:</translation>\n+    </message>\n     <message>\n         <source>Change index out of range</source>\n         <translation>Position des Wechselgelds au\u00dferhalb des Bereichs</translation>\n@@ -3221,6 +3265,10 @@\n         <source>Error loading %s: Wallet requires newer version of %s</source>\n         <translation>Fehler beim Laden von %s: Das Wallet ben\u00f6tigt eine neuere Version von %s</translation>\n     </message>\n+    <message>\n+        <source>Error loading %s: You can't disable HD on a already existing HD wallet</source>\n+        <translation>Fehler beim Laden von %s: Sie k\u00f6nnen die hierarchisch deterministische Schl\u00fcsselgeneration (HD) f\u00fcr eine bereits existierende HD-Brieftasche nicht deaktivieren</translation>\n+    </message>\n     <message>\n         <source>Error loading block database</source>\n         <translation>Fehler beim Laden der Blockdatenbank</translation>\n@@ -3303,7 +3351,7 @@\n     </message>\n     <message>\n         <source>Rebuild chain state from the currently indexed blocks</source>\n-        <translation>Blockkettenindex aus aktuellen Dateien blk000??.dat wiederaufbauen</translation>\n+        <translation>Blockkettenzustand aus aktuelle indizierten Bl\u00f6cken wiederaufbauen</translation>\n     </message>\n     <message>\n         <source>Rewinding blocks...</source>\n@@ -3435,7 +3483,7 @@\n     </message>\n     <message>\n         <source>Use hierarchical deterministic key generation (HD) after BIP32. Only has effect during wallet creation/first start</source>\n-        <translation>Use hierarchical deterministic key generation (HD) after BIP32. Only has effect during wallet creation/first start</translation>\n+        <translation>Verwende hierarchisch deterministische Schl\u00fcsselgenerierung (HD) nach BIP32. Funktioniert nur bei der Erstellung (erster Start) von einer Brieftasche.</translation>\n     </message>\n     <message>\n         <source>Whitelisted peers cannot be DoS banned and their transactions are always relayed, even if they are already in the mempool, useful e.g. for a gateway</source>\n@@ -3645,6 +3693,10 @@\n         <source>Query for peer addresses via DNS lookup, if low on addresses (default: 1 unless -connect/-noconnect)</source>\n         <translation>Adressen von Gegenstellen via DNS-Namensaufl\u00f6sung finden, falls zu wenige Adressen verf\u00fcgbar sind (Standard: 1, au\u00dfer bei -connect/-noconnect)</translation>\n     </message>\n+    <message>\n+        <source>Sets the serialization of raw transaction or block hex returned in non-verbose mode, non-segwit(0) or segwit(1) (default: %d)</source>\n+        <translation>Setzt die Serialisierung von Rohtransaktionen oder Block Hex-Daten auf non-verbose mode, nicht-Segwit(0) oder Segwit(1) (default: %d)</translation>\n+    </message>\n     <message>\n         <source>Support filtering of blocks and transaction with bloom filters (default: %u)</source>\n         <translation>Unterst\u00fctze Bl\u00f6cke und Transaktionen mit  Bloomfiltern zu filtern (default: %u)</translation>\n@@ -3683,7 +3735,7 @@\n     </message>\n     <message>\n         <source>%s is set very high!</source>\n-        <translation>%s wurde sehr hoch Eingestellt!</translation>\n+        <translation>%s wurde sehr hoch eingestellt!</translation>\n     </message>\n     <message>\n         <source>(default: %s)</source>\n@@ -3705,6 +3757,10 @@\n         <source>Invalid -proxy address: '%s'</source>\n         <translation>Ung\u00fcltige Adresse in -proxy: '%s'</translation>\n     </message>\n+    <message>\n+        <source>Keypool ran out, please call keypoolrefill first</source>\n+        <translation>Der Keypool ist ersch\u00f6pft. Bitte rufen Sie zun\u00e4chst keypoolrefill auf.</translation>\n+    </message>\n     <message>\n         <source>Listen for JSON-RPC connections on &lt;port&gt; (default: %u or testnet: %u)</source>\n         <translation>&lt;port&gt; nach JSON-RPC-Verbindungen abh\u00f6ren (Standard: %u oder Testnetz: %u)</translation>\n@@ -3773,6 +3829,14 @@\n         <source>Spend unconfirmed change when sending transactions (default: %u)</source>\n         <translation>Unbest\u00e4tigtes Wechselgeld darf beim Senden von Transaktionen ausgegeben werden (Standard: %u)</translation>\n     </message>\n+    <message>\n+        <source>Starting network threads...</source>\n+        <translation>Netzwerk-Threads werden gestartet...</translation>\n+    </message>\n+    <message>\n+        <source>The wallet will avoid paying less than the minimum relay fee.</source>\n+        <translation>Das Wallet verhindert Zahlungen, die die Mindesttransaktionsgeb\u00fchr nicht ber\u00fccksichtigen.</translation>\n+    </message>\n     <message>\n         <source>This is the minimum transaction fee you pay on every transaction.</source>\n         <translation>Dies ist die minimale Geb\u00fchr die beim Senden einer Transaktion f\u00e4llig wird.</translation>\n@@ -3789,6 +3853,14 @@\n         <source>Transaction amounts must not be negative</source>\n         <translation>Transaktionsbetr\u00e4ge d\u00fcrfen nicht negativ sein.</translation>\n     </message>\n+    <message>\n+        <source>Transaction has too long of a mempool chain</source>\n+        <translation>Die Speicherpoolkette der Transaktion ist zu lang.</translation>\n+    </message>\n+    <message>\n+        <source>Transaction must have at least one recipient</source>\n+        <translation>Die Transaktion muss mindestens einen Empf\u00e4nger enthalten.</translation>\n+    </message>\n     <message>\n         <source>Unknown network specified in -onlynet: '%s'</source>\n         <translation>Unbekannter Netztyp in -onlynet angegeben: '%s'</translation>"
      },
      {
        "sha": "2bbc1546a5a042cba322427963f7b35e92f4cb0a",
        "filename": "src/qt/locale/bitcoin_el_GR.ts",
        "status": "modified",
        "additions": 271,
        "deletions": 3,
        "changes": 274,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/locale/bitcoin_el_GR.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/locale/bitcoin_el_GR.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_el_GR.ts?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -41,10 +41,66 @@\n         <source>&amp;Delete</source>\n         <translation>&amp;\u0394\u03b9\u03b1\u03b3\u03c1\u03b1\u03c6\u03ae</translation>\n     </message>\n+    <message>\n+        <source>Choose the address to send coins to</source>\n+        <translation>\u0395\u03c0\u03b9\u03bb\u03ad\u03be\u03c4\u03b5 \u03b4\u03b9\u03b5\u03cd\u03b8\u03c5\u03bd\u03c3\u03b7 \u03b1\u03c0\u03bf\u03c3\u03c4\u03bf\u03bb\u03ae\u03c2 \u03c4\u03c9\u03bd \u03bd\u03bf\u03bc\u03b9\u03c3\u03bc\u03ac\u03c4\u03c9\u03bd \u03c3\u03b1\u03c2</translation>\n+    </message>\n+    <message>\n+        <source>Choose the address to receive coins with</source>\n+        <translation>\u0395\u03c0\u03b9\u03bb\u03ad\u03be\u03c4\u03b5 \u03b4\u03b9\u03b5\u03cd\u03b8\u03c5\u03bd\u03c3\u03b7 \u03c0\u03b1\u03c1\u03b1\u03bb\u03b1\u03b2\u03ae\u03c2 \u03bd\u03bf\u03bc\u03b9\u03c3\u03bc\u03ac\u03c4\u03c9\u03bd</translation>\n+    </message>\n+    <message>\n+        <source>C&amp;hoose</source>\n+        <translation>\u0395&amp;\u03c0\u03b9\u03bb\u03bf\u03b3\u03ae</translation>\n+    </message>\n+    <message>\n+        <source>Sending addresses</source>\n+        <translation>\u0394\u03b9\u03b5\u03c5\u03b8\u03cd\u03bd\u03c3\u03b5\u03b9\u03c2 \u03b1\u03c0\u03bf\u03c3\u03c4\u03bf\u03bb\u03ae\u03c2</translation>\n+    </message>\n+    <message>\n+        <source>Receiving addresses</source>\n+        <translation>\u0394\u03b9\u03b5\u03c5\u03b8\u03cd\u03bd\u03c3\u03b5\u03b9\u03c2 \u03bb\u03ae\u03c8\u03b7\u03c2</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Copy Address</source>\n+        <translation>&amp;\u0391\u03bd\u03c4\u03b9\u03b3\u03c1\u03b1\u03c6\u03ae \u0394\u03b9\u03b5\u03cd\u03b8\u03c5\u03bd\u03c3\u03b7\u03c2</translation>\n+    </message>\n+    <message>\n+        <source>Copy &amp;Label</source>\n+        <translation>\u0391\u03bd\u03c4\u03b9\u03b3\u03c1\u03b1\u03c6\u03ae&amp;\u0395\u03c4\u03b9\u03ba\u03ad\u03c4\u03b1</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Edit</source>\n+        <translation>&amp;\u0394\u03b9\u03cc\u03c1\u03b8\u03c9\u03c3\u03b7</translation>\n+    </message>\n+    <message>\n+        <source>Export Address List</source>\n+        <translation>\u0395\u03be\u03b1\u03b3\u03c9\u03b3\u03ae \u039b\u03af\u03c3\u03c4\u03b1\u03c2 \u0394\u03b9\u03b5\u03cd\u03b8\u03c5\u03bd\u03c3\u03b5\u03c9\u03bd</translation>\n+    </message>\n+    <message>\n+        <source>Comma separated file (*.csv)</source>\n+        <translation>\u0391\u03c1\u03c7\u03b5\u03af\u03bf \u03bf\u03c1\u03b9\u03bf\u03b8\u03b5\u03c4\u03b7\u03bc\u03ad\u03bd\u03bf \u03bc\u03b5 \u03ba\u03cc\u03bc\u03bc\u03b1\u03c4\u03b1 (*.csv)</translation>\n+    </message>\n+    <message>\n+        <source>Exporting Failed</source>\n+        <translation>\u0391\u03c0\u03bf\u03c4\u03c5\u03c7\u03af\u03b1 \u0395\u03be\u03b1\u03b3\u03c9\u03b3\u03ae\u03c2</translation>\n+    </message>\n     </context>\n <context>\n     <name>AddressTableModel</name>\n-    </context>\n+    <message>\n+        <source>Label</source>\n+        <translation>\u0395\u03c4\u03b9\u03ba\u03ad\u03c4\u03b1</translation>\n+    </message>\n+    <message>\n+        <source>Address</source>\n+        <translation>\u0394\u03b9\u03b5\u03cd\u03b8\u03c5\u03bd\u03c3\u03b7</translation>\n+    </message>\n+    <message>\n+        <source>(no label)</source>\n+        <translation>(\u03c7\u03c9\u03c1\u03af\u03c2 \u03b5\u03c4\u03b9\u03ba\u03ad\u03c4\u03b1)</translation>\n+    </message>\n+</context>\n <context>\n     <name>AskPassphraseDialog</name>\n     <message>\n@@ -63,6 +119,22 @@\n         <source>Repeat new passphrase</source>\n         <translation>\u0395\u03c0\u03b1\u03bd\u03ad\u03bb\u03b1\u03b2\u03b5 \u03c4\u03bf\u03bd \u03bd\u03ad\u03bf \u03ba\u03c9\u03b4\u03b9\u03ba\u03cc \u03c0\u03c1\u03cc\u03c3\u03b2\u03b1\u03c3\u03b7\u03c2</translation>\n     </message>\n+    <message>\n+        <source>Encrypt wallet</source>\n+        <translation>\u039a\u03c1\u03c5\u03c0\u03c4\u03bf\u03b3\u03c1\u03ac\u03c6\u03b7\u03c3\u03b7 \u03c0\u03bf\u03c1\u03c4\u03bf\u03c6\u03bf\u03bb\u03b9\u03bf\u03cd</translation>\n+    </message>\n+    <message>\n+        <source>Unlock wallet</source>\n+        <translation>\u039e\u03b5\u03ba\u03bb\u03b5\u03b9\u03b4\u03c9\u03c3\u03b5 \u03c4\u03bf \u03c0\u03bf\u03c1\u03c4\u03bf\u03c6\u03bf\u03bb\u03b9</translation>\n+    </message>\n+    <message>\n+        <source>Change passphrase</source>\n+        <translation>\u0391\u03bb\u03bb\u03ac\u03be\u03c4\u03b5 \u03a6\u03c1\u03ac\u03c3\u03b7 \u03a0\u03c1\u03cc\u03c3\u03b2\u03b1\u03c3\u03b7\u03c2</translation>\n+    </message>\n+    <message>\n+        <source>Wallet unlock failed</source>\n+        <translation>\u03a4\u03bf \u039e\u03b5\u03ba\u03bb\u03b5\u03af\u03b4\u03c9\u03bc\u03b1 \u03c4\u03bf\u03c5 \u03a0\u03bf\u03c1\u03c4\u03bf\u03c6\u03bf\u03bb\u03b9\u03bf\u03cd \u0391\u03c0\u03ad\u03c4\u03c5\u03c7\u03b5</translation>\n+    </message>\n     </context>\n <context>\n     <name>BanTableModel</name>\n@@ -394,6 +466,26 @@\n         <source>Confirmed</source>\n         <translation>\u0395\u03c0\u03b9\u03ba\u03c5\u03c1\u03c9\u03bc\u03ad\u03bd\u03b5\u03c2</translation>\n     </message>\n+    <message>\n+        <source>Copy address</source>\n+        <translation>\u0391\u03bd\u03c4\u03b9\u03b3\u03c1\u03b1\u03c6\u03ae \u03b4\u03b9\u03b5\u03cd\u03b8\u03c5\u03bd\u03c3\u03b7\u03c2</translation>\n+    </message>\n+    <message>\n+        <source>Copy label</source>\n+        <translation>\u0391\u03bd\u03c4\u03b9\u03b3\u03c1\u03b1\u03c6\u03ae \u03b5\u03c4\u03b9\u03ba\u03ad\u03c4\u03b1\u03c2</translation>\n+    </message>\n+    <message>\n+        <source>Copy amount</source>\n+        <translation>\u0391\u03bd\u03c4\u03b9\u03b3\u03c1\u03b1\u03c6\u03ae \u03c0\u03bf\u03c3\u03bf\u03cd</translation>\n+    </message>\n+    <message>\n+        <source>Copy transaction ID</source>\n+        <translation>\u0391\u03bd\u03c4\u03b9\u03b3\u03c1\u03b1\u03c6\u03ae \u03c4\u03b1\u03c5\u03c4\u03cc\u03c4\u03b7\u03c4\u03b1\u03c2 \u03c3\u03c5\u03bd\u03b1\u03bb\u03bb\u03b1\u03b3\u03ae\u03c2</translation>\n+    </message>\n+    <message>\n+        <source>(no label)</source>\n+        <translation>(\u03c7\u03c9\u03c1\u03af\u03c2 \u03b5\u03c4\u03b9\u03ba\u03ad\u03c4\u03b1)</translation>\n+    </message>\n     </context>\n <context>\n     <name>EditAddressDialog</name>\n@@ -417,6 +509,18 @@\n         <source>&amp;Address</source>\n         <translation>&amp;\u0394\u03b9\u03b5\u03cd\u03b8\u03c5\u03bd\u03c3\u03b7</translation>\n     </message>\n+    <message>\n+        <source>New receiving address</source>\n+        <translation>\u039d\u03ad\u03b1 \u0394\u03b9\u03b5\u03cd\u03b8\u03c5\u03bd\u03c3\u03b7 \u039b\u03ae\u03c8\u03b7\u03c2</translation>\n+    </message>\n+    <message>\n+        <source>New sending address</source>\n+        <translation>\u039d\u03ad\u03b1 \u0394\u03b9\u03b5\u03cd\u03b8\u03c5\u03bd\u03c3\u03b7 \u0391\u03c0\u03bf\u03c3\u03c4\u03bf\u03bb\u03ae\u03c2</translation>\n+    </message>\n+    <message>\n+        <source>Edit receiving address</source>\n+        <translation>\u0394\u03b9\u03cc\u03c1\u03b8\u03c9\u03c3\u03b7 \u0394\u03b9\u03b5\u03cd\u03b8\u03c5\u03bd\u03c3\u03b7\u03c2 \u039b\u03ae\u03c8\u03b7\u03c2</translation>\n+    </message>\n     </context>\n <context>\n     <name>FreespaceChecker</name>\n@@ -1064,7 +1168,15 @@\n         <source>Remove</source>\n         <translation>\u0391\u03c6\u03b1\u03af\u03c1\u03b5\u03c3\u03b7</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Copy label</source>\n+        <translation>\u0391\u03bd\u03c4\u03b9\u03b3\u03c1\u03b1\u03c6\u03ae \u03b5\u03c4\u03b9\u03ba\u03ad\u03c4\u03b1\u03c2</translation>\n+    </message>\n+    <message>\n+        <source>Copy amount</source>\n+        <translation>\u0391\u03bd\u03c4\u03b9\u03b3\u03c1\u03b1\u03c6\u03ae \u03c0\u03bf\u03c3\u03bf\u03cd</translation>\n+    </message>\n+</context>\n <context>\n     <name>ReceiveRequestDialog</name>\n     <message>\n@@ -1083,9 +1195,29 @@\n         <source>&amp;Save Image...</source>\n         <translation>&amp;\u0391\u03c0\u03bf\u03b8\u03ae\u03ba\u03b5\u03c5\u03c3\u03b7 \u03b5\u03b9\u03ba\u03cc\u03bd\u03b1\u03c2...</translation>\n     </message>\n+    <message>\n+        <source>Address</source>\n+        <translation>\u0394\u03b9\u03b5\u03cd\u03b8\u03c5\u03bd\u03c3\u03b7</translation>\n+    </message>\n+    <message>\n+        <source>Label</source>\n+        <translation>\u0395\u03c4\u03b9\u03ba\u03ad\u03c4\u03b1</translation>\n+    </message>\n     </context>\n <context>\n     <name>RecentRequestsTableModel</name>\n+    <message>\n+        <source>Date</source>\n+        <translation>\u0397\u03bc\u03b5\u03c1\u03bf\u03bc\u03ae\u03bd\u03b9\u03b1</translation>\n+    </message>\n+    <message>\n+        <source>Label</source>\n+        <translation>\u0395\u03c4\u03b9\u03ba\u03ad\u03c4\u03b1</translation>\n+    </message>\n+    <message>\n+        <source>(no label)</source>\n+        <translation>(\u03c7\u03c9\u03c1\u03af\u03c2 \u03b5\u03c4\u03b9\u03ba\u03ad\u03c4\u03b1)</translation>\n+    </message>\n     </context>\n <context>\n     <name>SendCoinsDialog</name>\n@@ -1209,7 +1341,15 @@\n         <source>S&amp;end</source>\n         <translation>\u0391\u03c0\u03bf\u03c3\u03c4\u03bf\u03bb\u03b7</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Copy amount</source>\n+        <translation>\u0391\u03bd\u03c4\u03b9\u03b3\u03c1\u03b1\u03c6\u03ae \u03c0\u03bf\u03c3\u03bf\u03cd</translation>\n+    </message>\n+    <message>\n+        <source>(no label)</source>\n+        <translation>(\u03c7\u03c9\u03c1\u03af\u03c2 \u03b5\u03c4\u03b9\u03ba\u03ad\u03c4\u03b1)</translation>\n+    </message>\n+</context>\n <context>\n     <name>SendCoinsEntry</name>\n     <message>\n@@ -1374,6 +1514,70 @@\n </context>\n <context>\n     <name>TransactionDesc</name>\n+    <message>\n+        <source>Open until %1</source>\n+        <translation>\u0391\u03bd\u03bf\u03b9\u03c7\u03c4\u03cc \u03bc\u03ad\u03c7\u03c1\u03b9 %1</translation>\n+    </message>\n+    <message>\n+        <source>%1/offline</source>\n+        <translation>%1/\u03b1\u03c0\u03bf\u03c3\u03c5\u03bd\u03b4\u03b5\u03b4\u03b5\u03bc\u03ad\u03bd\u03bf</translation>\n+    </message>\n+    <message>\n+        <source>0/unconfirmed, %1</source>\n+        <translation>0/\u03b1\u03bd\u03b5\u03c0\u03b9\u03b2\u03b5\u03b2\u03b1\u03af\u03c9\u03c4\u03bf, %1</translation>\n+    </message>\n+    <message>\n+        <source>Date</source>\n+        <translation>\u0397\u03bc\u03b5\u03c1\u03bf\u03bc\u03b7\u03bd\u03af\u03b1</translation>\n+    </message>\n+    <message>\n+        <source>Source</source>\n+        <translation>\u03a0\u03b7\u03b3\u03ae</translation>\n+    </message>\n+    <message>\n+        <source>Generated</source>\n+        <translation>\u03a0\u03b1\u03c1\u03ac\u03c7\u03b8\u03b7\u03ba\u03b5</translation>\n+    </message>\n+    <message>\n+        <source>From</source>\n+        <translation>\u0391\u03c0\u03cc</translation>\n+    </message>\n+    <message>\n+        <source>unknown</source>\n+        <translation>\u0386\u03b3\u03bd\u03c9\u03c3\u03c4\u03bf</translation>\n+    </message>\n+    <message>\n+        <source>To</source>\n+        <translation>\u03a0\u03c1\u03bf\u03c2</translation>\n+    </message>\n+    <message>\n+        <source>own address</source>\n+        <translation>\u03b4\u03b9\u03ba\u03ae \u03c3\u03b1\u03c2 \u03b4\u03b9\u03b5\u03cd\u03b8\u03c5\u03bd\u03c3\u03b7</translation>\n+    </message>\n+    <message>\n+        <source>watch-only</source>\n+        <translation>\u03c0\u03b1\u03c1\u03b1\u03ba\u03bf\u03bb\u03bf\u03cd\u03b8\u03b7\u03c3\u03b7-\u03bc\u03cc\u03bd\u03bf</translation>\n+    </message>\n+    <message>\n+        <source>label</source>\n+        <translation>\u03b5\u03c4\u03b9\u03ba\u03ad\u03c4\u03b1</translation>\n+    </message>\n+    <message>\n+        <source>Credit</source>\n+        <translation>\u03a0\u03af\u03c3\u03c4\u03c9\u03c3\u03b7</translation>\n+    </message>\n+    <message>\n+        <source>not accepted</source>\n+        <translation>\u03bc\u03b7 \u03ad\u03b3\u03ba\u03c5\u03c1\u03bf</translation>\n+    </message>\n+    <message>\n+        <source>Total credit</source>\n+        <translation>\u03a3\u03c5\u03bd\u03bf\u03bb\u03b9\u03ba\u03ae \u03c0\u03af\u03c3\u03c4\u03c9\u03c3\u03b7</translation>\n+    </message>\n+    <message>\n+        <source>Transaction fee</source>\n+        <translation>\u039a\u03cc\u03c3\u03c4\u03bf\u03c2 \u03c3\u03c5\u03bd\u03b1\u03bb\u03bb\u03b1\u03b3\u03ae\u03c2</translation>\n+    </message>\n     </context>\n <context>\n     <name>TransactionDescDialog</name>\n@@ -1384,9 +1588,73 @@\n     </context>\n <context>\n     <name>TransactionTableModel</name>\n+    <message>\n+        <source>Date</source>\n+        <translation>\u0397\u03bc\u03b5\u03c1\u03bf\u03bc\u03ae\u03bd\u03b9\u03b1</translation>\n+    </message>\n+    <message>\n+        <source>Label</source>\n+        <translation>\u0395\u03c4\u03b9\u03ba\u03ad\u03c4\u03b1</translation>\n+    </message>\n+    <message>\n+        <source>Open until %1</source>\n+        <translation>\u0391\u03bd\u03bf\u03b9\u03c7\u03c4\u03cc \u03bc\u03ad\u03c7\u03c1\u03b9 %1</translation>\n+    </message>\n+    <message>\n+        <source>watch-only</source>\n+        <translation>\u03c0\u03b1\u03c1\u03b1\u03ba\u03bf\u03bb\u03bf\u03cd\u03b8\u03b7\u03c3\u03b7-\u03bc\u03cc\u03bd\u03bf</translation>\n+    </message>\n+    <message>\n+        <source>(no label)</source>\n+        <translation>(\u03c7\u03c9\u03c1\u03af\u03c2 \u03b5\u03c4\u03b9\u03ba\u03ad\u03c4\u03b1)</translation>\n+    </message>\n     </context>\n <context>\n     <name>TransactionView</name>\n+    <message>\n+        <source>Copy address</source>\n+        <translation>\u0391\u03bd\u03c4\u03b9\u03b3\u03c1\u03b1\u03c6\u03ae \u03b4\u03b9\u03b5\u03cd\u03b8\u03c5\u03bd\u03c3\u03b7\u03c2</translation>\n+    </message>\n+    <message>\n+        <source>Copy label</source>\n+        <translation>\u0391\u03bd\u03c4\u03b9\u03b3\u03c1\u03b1\u03c6\u03ae \u03b5\u03c4\u03b9\u03ba\u03ad\u03c4\u03b1\u03c2</translation>\n+    </message>\n+    <message>\n+        <source>Copy amount</source>\n+        <translation>\u0391\u03bd\u03c4\u03b9\u03b3\u03c1\u03b1\u03c6\u03ae \u03c0\u03bf\u03c3\u03bf\u03cd</translation>\n+    </message>\n+    <message>\n+        <source>Copy transaction ID</source>\n+        <translation>\u0391\u03bd\u03c4\u03b9\u03b3\u03c1\u03b1\u03c6\u03ae \u03c4\u03b1\u03c5\u03c4\u03cc\u03c4\u03b7\u03c4\u03b1\u03c2 \u03c3\u03c5\u03bd\u03b1\u03bb\u03bb\u03b1\u03b3\u03ae\u03c2</translation>\n+    </message>\n+    <message>\n+        <source>Copy raw transaction</source>\n+        <translation>\u0391\u03bd\u03c4\u03b9\u03b3\u03c1\u03b1\u03c6\u03ae \u03b1\u03bd\u03b5\u03c0\u03b5\u03be\u03ad\u03c1\u03b3\u03b1\u03c3\u03c4\u03b7\u03c2 \u03c3\u03c5\u03bd\u03b1\u03bb\u03bb\u03b1\u03b3\u03ae\u03c2</translation>\n+    </message>\n+    <message>\n+        <source>Edit label</source>\n+        <translation>\u0395\u03c0\u03b5\u03be\u03b5\u03c1\u03b3\u03b1\u03c3\u03af\u03b1 \u03b5\u03c4\u03b9\u03ba\u03ad\u03c4\u03b1\u03c2</translation>\n+    </message>\n+    <message>\n+        <source>Comma separated file (*.csv)</source>\n+        <translation>\u0391\u03c1\u03c7\u03b5\u03af\u03bf \u03bf\u03c1\u03b9\u03bf\u03b8\u03b5\u03c4\u03b7\u03bc\u03ad\u03bd\u03bf \u03bc\u03b5 \u03ba\u03cc\u03bc\u03bc\u03b1\u03c4\u03b1 (*.csv)</translation>\n+    </message>\n+    <message>\n+        <source>Date</source>\n+        <translation>\u0397\u03bc\u03b5\u03c1\u03bf\u03bc\u03ae\u03bd\u03b9\u03b1</translation>\n+    </message>\n+    <message>\n+        <source>Label</source>\n+        <translation>\u0395\u03c4\u03b9\u03ba\u03ad\u03c4\u03b1</translation>\n+    </message>\n+    <message>\n+        <source>Address</source>\n+        <translation>\u0394\u03b9\u03b5\u03cd\u03b8\u03c5\u03bd\u03c3\u03b7</translation>\n+    </message>\n+    <message>\n+        <source>Exporting Failed</source>\n+        <translation>\u0391\u03c0\u03bf\u03c4\u03c5\u03c7\u03af\u03b1 \u0395\u03be\u03b1\u03b3\u03c9\u03b3\u03ae\u03c2</translation>\n+    </message>\n     </context>\n <context>\n     <name>UnitDisplayStatusBarControl</name>"
      },
      {
        "sha": "821be8987e004b875d84cb45276a856b040c2159",
        "filename": "src/qt/locale/bitcoin_en.ts",
        "status": "modified",
        "additions": 100,
        "deletions": 83,
        "changes": 183,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/locale/bitcoin_en.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/locale/bitcoin_en.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_en.ts?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -690,7 +690,7 @@\n         <translation>Wallet is &lt;b&gt;encrypted&lt;/b&gt; and currently &lt;b&gt;locked&lt;/b&gt;</translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoin.cpp\" line=\"+524\"/>\n+        <location filename=\"../bitcoin.cpp\" line=\"+534\"/>\n         <source>A fatal error occurred. Bitcoin can no longer continue safely and will quit.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -864,7 +864,7 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+9\"/>\n+        <location line=\"+5\"/>\n         <source>Can vary +/- %1 satoshi(s) per input.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -1915,15 +1915,15 @@\n         </translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoin.cpp\" line=\"+173\"/>\n+        <location filename=\"../bitcoin.cpp\" line=\"+178\"/>\n         <source>%1 didn&apos;t yet exit safely...</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n </context>\n <context>\n     <name>QObject::QObject</name>\n     <message>\n-        <location line=\"-81\"/>\n+        <location line=\"-86\"/>\n         <source>Error: Specified data directory &quot;%1&quot; does not exist.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -2100,7 +2100,7 @@\n     </message>\n     <message>\n         <location line=\"+60\"/>\n-        <location filename=\"../rpcconsole.cpp\" line=\"+458\"/>\n+        <location filename=\"../rpcconsole.cpp\" line=\"+467\"/>\n         <location line=\"+728\"/>\n         <source>Select a peer to view detailed information.</source>\n         <translation type=\"unfinished\"></translation>\n@@ -2598,7 +2598,7 @@\n     <name>SendCoinsDialog</name>\n     <message>\n         <location filename=\"../forms/sendcoinsdialog.ui\" line=\"+14\"/>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"+565\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"+586\"/>\n         <source>Send Coins</source>\n         <translation>Send Coins</translation>\n     </message>\n@@ -2674,7 +2674,7 @@\n     </message>\n     <message>\n         <location line=\"+24\"/>\n-        <source>Using the fallbackfee can result in sending a transaction that will take several hours or days (or never) to confirm. Consider choosing your fee manually or wait until your have validated the complete chain.</source>\n+        <source>Using the fallbackfee can result in sending a transaction that will take several hours or days (or never) to confirm. Consider choosing your fee manually or wait until you have validated the complete chain.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n@@ -2729,17 +2729,7 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+89\"/>\n-        <source>normal</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location line=\"+40\"/>\n-        <source>fast</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location line=\"+30\"/>\n+        <location line=\"+103\"/>\n         <source>Request Replace-By-Fee</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -2764,7 +2754,7 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"-895\"/>\n+        <location line=\"-839\"/>\n         <source>Dust:</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -2774,7 +2764,7 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+198\"/>\n+        <location line=\"+142\"/>\n         <source>Clear &amp;All</source>\n         <translation>Clear &amp;All</translation>\n     </message>\n@@ -2794,7 +2784,7 @@\n         <translation>S&amp;end</translation>\n     </message>\n     <message>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"-497\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"-499\"/>\n         <source>Copy quantity</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -2829,7 +2819,12 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+209\"/>\n+        <location line=\"+82\"/>\n+        <source>%1 (%2 blocks)</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+129\"/>\n         <location line=\"+5\"/>\n         <location line=\"+5\"/>\n         <location line=\"+4\"/>\n@@ -2911,29 +2906,21 @@\n         <source>Payment request expired.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n-    <message numerus=\"yes\">\n-        <location line=\"+63\"/>\n-        <source>%n block(s)</source>\n-        <translation>\n-            <numerusform>%n block</numerusform>\n-            <numerusform>%n blocks</numerusform>\n-        </translation>\n-    </message>\n     <message>\n-        <location line=\"+24\"/>\n+        <location line=\"+68\"/>\n         <source>Pay only the required fee of %1</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message numerus=\"yes\">\n-        <location line=\"+30\"/>\n+        <location line=\"+42\"/>\n         <source>Estimated to begin confirmation within %n block(s).</source>\n         <translation>\n             <numerusform>Estimated to begin confirmation within %n block.</numerusform>\n             <numerusform>Estimated to begin confirmation within %n blocks.</numerusform>\n         </translation>\n     </message>\n     <message>\n-        <location line=\"+103\"/>\n+        <location line=\"+101\"/>\n         <source>Warning: Invalid Bitcoin address</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -3070,7 +3057,7 @@\n <context>\n     <name>SendConfirmationDialog</name>\n     <message>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"+86\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"+83\"/>\n         <location line=\"+5\"/>\n         <source>Yes</source>\n         <translation type=\"unfinished\"></translation>\n@@ -3905,12 +3892,12 @@\n <context>\n     <name>WalletModel</name>\n     <message>\n-        <location filename=\"../walletmodel.cpp\" line=\"+289\"/>\n+        <location filename=\"../walletmodel.cpp\" line=\"+291\"/>\n         <source>Send Coins</source>\n         <translation type=\"unfinished\">Send Coins</translation>\n     </message>\n     <message>\n-        <location line=\"+385\"/>\n+        <location line=\"+387\"/>\n         <location line=\"+46\"/>\n         <location line=\"+9\"/>\n         <source>Fee bump error</source>\n@@ -4003,7 +3990,7 @@\n <context>\n     <name>bitcoin-core</name>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"+330\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"+343\"/>\n         <source>Options:</source>\n         <translation>Options:</translation>\n     </message>\n@@ -4013,27 +4000,27 @@\n         <translation>Specify data directory</translation>\n     </message>\n     <message>\n-        <location line=\"-92\"/>\n+        <location line=\"-95\"/>\n         <source>Connect to a node to retrieve peer addresses, and disconnect</source>\n         <translation>Connect to a node to retrieve peer addresses, and disconnect</translation>\n     </message>\n     <message>\n-        <location line=\"+95\"/>\n+        <location line=\"+98\"/>\n         <source>Specify your own public address</source>\n         <translation>Specify your own public address</translation>\n     </message>\n     <message>\n-        <location line=\"-111\"/>\n+        <location line=\"-114\"/>\n         <source>Accept command line and JSON-RPC commands</source>\n         <translation>Accept command line and JSON-RPC commands</translation>\n     </message>\n     <message>\n-        <location line=\"-197\"/>\n+        <location line=\"-207\"/>\n         <source>Distributed under the MIT software license, see the accompanying file %s or %s</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+41\"/>\n+        <location line=\"+44\"/>\n         <source>If &lt;category&gt; is not supplied or if &lt;category&gt; = 1, output all debugging information.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -4053,7 +4040,7 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+140\"/>\n+        <location line=\"+150\"/>\n         <source>Error: A fatal internal error occurred, see debug.log for details</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -4073,12 +4060,12 @@\n         <translation>Run in the background as a daemon and accept commands</translation>\n     </message>\n     <message>\n-        <location line=\"+36\"/>\n+        <location line=\"+37\"/>\n         <source>Unable to start HTTP server. See debug log for details.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"-372\"/>\n+        <location line=\"-386\"/>\n         <source>Bitcoin Core</source>\n         <translation type=\"unfinished\">Bitcoin Core</translation>\n     </message>\n@@ -4113,7 +4100,7 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+15\"/>\n+        <location line=\"+18\"/>\n         <source>Error reading %s! All keys read correctly, but transaction data or address book entries might be missing or incorrect.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -4183,10 +4170,15 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+7\"/>\n+        <location line=\"+12\"/>\n         <source>This is a pre-release test build - use at your own risk - do not use for mining or merchant applications</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>This is the transaction fee you may discard if change is smaller than dust at this level</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n     <message>\n         <location line=\"+15\"/>\n         <source>Unable to replay blocks. You will need to rebuild the database using -reindex-chainstate.</source>\n@@ -4252,11 +4244,6 @@\n         <source>-maxmempool must be at least %d MB</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n-    <message>\n-        <location line=\"+1\"/>\n-        <source>-wallet parameter must only specify a filename (not a path)</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n     <message>\n         <location line=\"+1\"/>\n         <source>&lt;category&gt; can be:</source>\n@@ -4383,7 +4370,7 @@\n         <translation>Error loading block database</translation>\n     </message>\n     <message>\n-        <location line=\"+1\"/>\n+        <location line=\"+4\"/>\n         <source>Error opening block database</source>\n         <translation>Error opening block database</translation>\n     </message>\n@@ -4419,16 +4406,16 @@\n     </message>\n     <message>\n         <location line=\"+1\"/>\n-        <source>Invalid amount for -fallbackfee=&lt;amount&gt;: &apos;%s&apos;</source>\n+        <source>Invalid amount for -discardfee=&lt;amount&gt;: &apos;%s&apos;</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+2\"/>\n-        <source>Invalid characters in -wallet filename</source>\n+        <location line=\"+1\"/>\n+        <source>Invalid amount for -fallbackfee=&lt;amount&gt;: &apos;%s&apos;</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+3\"/>\n+        <location line=\"+4\"/>\n         <source>Keep the transaction memory pool below &lt;n&gt; megabytes (default: %u)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -4518,7 +4505,12 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+16\"/>\n+        <location line=\"+11\"/>\n+        <source>Transaction fee and change calculation failed</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+6\"/>\n         <source>Unable to bind to %s on this computer. %s is probably already running.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -4588,7 +4580,7 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"-375\"/>\n+        <location line=\"-389\"/>\n         <source>Allow JSON-RPC connections from specified source. Valid for &lt;ip&gt; are a single IP (e.g. 1.2.3.4), a network/netmask (e.g. 1.2.3.4/255.255.255.0) or a network/CIDR (e.g. 1.2.3.4/24). This option can be specified multiple times</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -4608,7 +4600,7 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+15\"/>\n+        <location line=\"+18\"/>\n         <source>Error: Listening for incoming connections failed (listen returned error %s)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -4643,12 +4635,12 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+31\"/>\n+        <location line=\"+36\"/>\n         <source>The transaction amount is too small to send after the fee has been deducted</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+31\"/>\n+        <location line=\"+34\"/>\n         <source>Use hierarchical deterministic key generation (HD) after BIP32. Only has effect during wallet creation/first start</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -4668,7 +4660,7 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+7\"/>\n+        <location line=\"+6\"/>\n         <source>Accept public REST requests (default: %u)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -4688,7 +4680,7 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+3\"/>\n+        <location line=\"+6\"/>\n         <source>Error reading from database, shutting down.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -4718,12 +4710,12 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+3\"/>\n+        <location line=\"+4\"/>\n         <source>Invalid amount for -paytxfee=&lt;amount&gt;: &apos;%s&apos; (must be at least %s)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+2\"/>\n+        <location line=\"+1\"/>\n         <source>Invalid netmask specified in -whitelist: &apos;%s&apos;</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -4803,7 +4795,7 @@\n         <translation>Transaction amount too small</translation>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n+        <location line=\"+5\"/>\n         <source>Transaction too large for fee policy</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -4858,22 +4850,22 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"-75\"/>\n+        <location line=\"-76\"/>\n         <source>Password for JSON-RPC connections</source>\n         <translation>Password for JSON-RPC connections</translation>\n     </message>\n     <message>\n-        <location line=\"-251\"/>\n+        <location line=\"-261\"/>\n         <source>Execute command when the best block changes (%s in cmd is replaced by block hash)</source>\n         <translation>Execute command when the best block changes (%s in cmd is replaced by block hash)</translation>\n     </message>\n     <message>\n-        <location line=\"+177\"/>\n+        <location line=\"+184\"/>\n         <source>Allow DNS lookups for -addnode, -seednode and -connect</source>\n         <translation>Allow DNS lookups for -addnode, -seednode and -connect</translation>\n     </message>\n     <message>\n-        <location line=\"-243\"/>\n+        <location line=\"-253\"/>\n         <source>(1 = keep tx meta data e.g. account owner and payment request information, 2 = drop tx meta data)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -4908,7 +4900,12 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+26\"/>\n+        <location line=\"+2\"/>\n+        <source>Error loading wallet %s. -wallet parameter must only specify a filename (not a path).</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+27\"/>\n         <source>Fees (in %s/kB) smaller than this are considered zero fee for transaction creation (default: %s)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -4948,7 +4945,12 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+12\"/>\n+        <location line=\"+7\"/>\n+        <source>The fee rate (in %s/kB) that indicates your tolerance for discarding change by adding it to the fee (default: %s). Note: An output is discarded if it is dust at this rate, but we will always discard up to the dust relay fee and a discard fee above that is limited by the fee estimate for the longest target</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+13\"/>\n         <source>This is the transaction fee you may pay when fee estimates are not available.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -5008,12 +5010,27 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+11\"/>\n+        <location line=\"+10\"/>\n         <source>Always query for peer addresses via DNS lookup (default: %u)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+39\"/>\n+        <location line=\"+31\"/>\n+        <source>Error loading wallet %s. -wallet filename must be a regular file.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Error loading wallet %s. Duplicate -wallet filename specified.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Error loading wallet %s. Invalid characters in -wallet filename.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+9\"/>\n         <source>How many blocks to check at startup (default: %u, 0 = all)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -5143,7 +5160,7 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+1\"/>\n+        <location line=\"+2\"/>\n         <source>Transaction has too long of a mempool chain</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -5158,7 +5175,7 @@\n         <translation>Unknown network specified in -onlynet: &apos;%s&apos;</translation>\n     </message>\n     <message>\n-        <location line=\"-81\"/>\n+        <location line=\"-82\"/>\n         <source>Insufficient funds</source>\n         <translation>Insufficient funds</translation>\n     </message>\n@@ -5168,17 +5185,17 @@\n         <translation>Loading block index...</translation>\n     </message>\n     <message>\n-        <location line=\"-63\"/>\n+        <location line=\"-66\"/>\n         <source>Add a node to connect to and attempt to keep the connection open</source>\n         <translation>Add a node to connect to and attempt to keep the connection open</translation>\n     </message>\n     <message>\n-        <location line=\"+64\"/>\n+        <location line=\"+67\"/>\n         <source>Loading wallet...</source>\n         <translation>Loading wallet...</translation>\n     </message>\n     <message>\n-        <location line=\"-57\"/>\n+        <location line=\"-60\"/>\n         <source>Cannot downgrade wallet</source>\n         <translation>Cannot downgrade wallet</translation>\n     </message>\n@@ -5188,17 +5205,17 @@\n         <translation>Cannot write default address</translation>\n     </message>\n     <message>\n-        <location line=\"+81\"/>\n+        <location line=\"+84\"/>\n         <source>Rescanning...</source>\n         <translation>Rescanning...</translation>\n     </message>\n     <message>\n-        <location line=\"-70\"/>\n+        <location line=\"-73\"/>\n         <source>Done loading</source>\n         <translation>Done loading</translation>\n     </message>\n     <message>\n-        <location line=\"+16\"/>\n+        <location line=\"+19\"/>\n         <source>Error</source>\n         <translation>Error</translation>\n     </message>"
      },
      {
        "sha": "16c584c4b10faae31c3d6673d8a9ba79958c4784",
        "filename": "src/qt/locale/bitcoin_eo.ts",
        "status": "modified",
        "additions": 119,
        "deletions": 3,
        "changes": 122,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/locale/bitcoin_eo.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/locale/bitcoin_eo.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_eo.ts?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -41,10 +41,78 @@\n         <source>&amp;Delete</source>\n         <translation>&amp;Forigi</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Choose the address to send coins to</source>\n+        <translation>Elekti la adreson por sendi monerojn</translation>\n+    </message>\n+    <message>\n+        <source>Choose the address to receive coins with</source>\n+        <translation>Elekti la adreson ricevi monerojn kun</translation>\n+    </message>\n+    <message>\n+        <source>C&amp;hoose</source>\n+        <translation>&amp;Elekti</translation>\n+    </message>\n+    <message>\n+        <source>Sending addresses</source>\n+        <translation>Sendaj adresoj</translation>\n+    </message>\n+    <message>\n+        <source>Receiving addresses</source>\n+        <translation>Ricevaj adresoj</translation>\n+    </message>\n+    <message>\n+        <source>These are your Bitcoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>\n+        <translation>Jen viaj Bitmon-adresoj por sendi pagojn. Zorge kontrolu la sumon kaj la alsendan adreson anta\u016d ol sendi.</translation>\n+    </message>\n+    <message>\n+        <source>These are your Bitcoin addresses for receiving payments. It is recommended to use a new receiving address for each transaction.</source>\n+        <translation>Jen viaj bitmonaj adresoj por ricevi pagojn. Estas konsilinde uzi apartan ricevan adreson por \u0109iu transakcio.</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Copy Address</source>\n+        <translation>&amp;Kopii Adreson</translation>\n+    </message>\n+    <message>\n+        <source>Copy &amp;Label</source>\n+        <translation>Kopii &amp;Etikedon</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Edit</source>\n+        <translation>&amp;Redakti</translation>\n+    </message>\n+    <message>\n+        <source>Export Address List</source>\n+        <translation>Eksporti Adresliston</translation>\n+    </message>\n+    <message>\n+        <source>Comma separated file (*.csv)</source>\n+        <translation>Perkome disigita dosiero (*.csv)</translation>\n+    </message>\n+    <message>\n+        <source>Exporting Failed</source>\n+        <translation>ekspotado malsukcesinta</translation>\n+    </message>\n+    <message>\n+        <source>There was an error trying to save the address list to %1. Please try again.</source>\n+        <translation>Okazis eraron dum konservo de adreslisto al %1. Bonvolu provi denove.</translation>\n+    </message>\n+</context>\n <context>\n     <name>AddressTableModel</name>\n-    </context>\n+    <message>\n+        <source>Label</source>\n+        <translation>Etikedo</translation>\n+    </message>\n+    <message>\n+        <source>Address</source>\n+        <translation>Adreso</translation>\n+    </message>\n+    <message>\n+        <source>(no label)</source>\n+        <translation>(neniu etikedo)</translation>\n+    </message>\n+</context>\n <context>\n     <name>AskPassphraseDialog</name>\n     <message>\n@@ -386,6 +454,10 @@\n         <source>Confirmed</source>\n         <translation>Konfirmita</translation>\n     </message>\n+    <message>\n+        <source>(no label)</source>\n+        <translation>(neniu etikedo)</translation>\n+    </message>\n     </context>\n <context>\n     <name>EditAddressDialog</name>\n@@ -934,9 +1006,25 @@\n         <source>&amp;Save Image...</source>\n         <translation>&amp;Konservi Bildon...</translation>\n     </message>\n+    <message>\n+        <source>Address</source>\n+        <translation>Adreso</translation>\n+    </message>\n+    <message>\n+        <source>Label</source>\n+        <translation>Etikedo</translation>\n+    </message>\n     </context>\n <context>\n     <name>RecentRequestsTableModel</name>\n+    <message>\n+        <source>Label</source>\n+        <translation>Etikedo</translation>\n+    </message>\n+    <message>\n+        <source>(no label)</source>\n+        <translation>(neniu etikedo)</translation>\n+    </message>\n     </context>\n <context>\n     <name>SendCoinsDialog</name>\n@@ -1016,7 +1104,11 @@\n         <source>S&amp;end</source>\n         <translation>\u015cendi</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>(no label)</source>\n+        <translation>(neniu etikedo)</translation>\n+    </message>\n+</context>\n <context>\n     <name>SendCoinsEntry</name>\n     <message>\n@@ -1179,9 +1271,33 @@\n     </context>\n <context>\n     <name>TransactionTableModel</name>\n+    <message>\n+        <source>Label</source>\n+        <translation>Etikedo</translation>\n+    </message>\n+    <message>\n+        <source>(no label)</source>\n+        <translation>(neniu etikedo)</translation>\n+    </message>\n     </context>\n <context>\n     <name>TransactionView</name>\n+    <message>\n+        <source>Comma separated file (*.csv)</source>\n+        <translation>Perkome disigita dosiero (*.csv)</translation>\n+    </message>\n+    <message>\n+        <source>Label</source>\n+        <translation>Etikedo</translation>\n+    </message>\n+    <message>\n+        <source>Address</source>\n+        <translation>Adreso</translation>\n+    </message>\n+    <message>\n+        <source>Exporting Failed</source>\n+        <translation>ekspotado malsukcesinta</translation>\n+    </message>\n     </context>\n <context>\n     <name>UnitDisplayStatusBarControl</name>"
      },
      {
        "sha": "1cac03951c61bc5d78f8060e7b1d970e06f2a44b",
        "filename": "src/qt/locale/bitcoin_es.ts",
        "status": "modified",
        "additions": 130,
        "deletions": 2,
        "changes": 132,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/locale/bitcoin_es.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/locale/bitcoin_es.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_es.ts?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -485,6 +485,10 @@\n         <source>%1 client</source>\n         <translation>%1 cliente</translation>\n     </message>\n+    <message>\n+        <source>Connecting to peers...</source>\n+        <translation>Conectando a pares...</translation>\n+    </message>\n     <message>\n         <source>Catching up...</source>\n         <translation>Actualizando...</translation>\n@@ -891,7 +895,7 @@\n     </message>\n     <message>\n         <source>Number of blocks left</source>\n-        <translation>N\u00famero de bloques dejados</translation>\n+        <translation>N\u00famero de bloques restantes</translation>\n     </message>\n     <message>\n         <source>Unknown...</source>\n@@ -1722,7 +1726,7 @@\n     </message>\n     <message>\n         <source>WARNING: Scammers have been active, telling users to type commands here, stealing their wallet contents. Do not use this console without fully understanding the ramification of a command.</source>\n-        <translation>ADVERTENCIA: Los estafadores han sido activados, dici\u00e9ndoles a los usuarios que escriban comandos aqu\u00ed, robando el contenido de sus monederos. No utilice esta consola sin entender completamente la repercusi\u00f3n de un comando.</translation>\n+        <translation>ADVERTENCIA: Hay estafadores activos diciendo a los usuarios que escriban comandos aqu\u00ed y robando el contenido de sus monederos. No utilice esta consola sin entender completamente la repercusi\u00f3n de un comando.</translation>\n     </message>\n     <message>\n         <source>Network activity disabled</source>\n@@ -2473,6 +2477,10 @@\n </context>\n <context>\n     <name>TransactionDesc</name>\n+    <message numerus=\"yes\">\n+        <source>Open for %n more block(s)</source>\n+        <translation><numerusform>Abrir para %n bloque m\u00e1s</numerusform><numerusform>Abrir para %n bloques m\u00e1s</numerusform></translation>\n+    </message>\n     <message>\n         <source>Open until %1</source>\n         <translation>Abierto hasta %1</translation>\n@@ -2517,6 +2525,10 @@\n         <source>, has not been successfully broadcast yet</source>\n         <translation>, no ha sido emitido con \u00e9xito a\u00fan</translation>\n     </message>\n+    <message numerus=\"yes\">\n+        <source>, broadcast through %n node(s)</source>\n+        <translation><numerusform>, transmitir a trav\u00e9s de %n nodo</numerusform><numerusform>, transmitir a trav\u00e9s de %n nodos</numerusform></translation>\n+    </message>\n     <message>\n         <source>Date</source>\n         <translation>Fecha</translation>\n@@ -2557,6 +2569,10 @@\n         <source>Credit</source>\n         <translation>Credito</translation>\n     </message>\n+    <message numerus=\"yes\">\n+        <source>matures in %n more block(s)</source>\n+        <translation><numerusform>disponible en %n bloque m\u00e1s</numerusform><numerusform>disponible en %n bloques m\u00e1s</numerusform></translation>\n+    </message>\n     <message>\n         <source>not accepted</source>\n         <translation>no aceptada</translation>\n@@ -2593,6 +2609,10 @@\n         <source>Transaction ID</source>\n         <translation>Identificador de transacci\u00f3n (ID)</translation>\n     </message>\n+    <message>\n+        <source>Transaction total size</source>\n+        <translation>Tama\u00f1o total de transacci\u00f3n</translation>\n+    </message>\n     <message>\n         <source>Output index</source>\n         <translation>Indice de salida</translation>\n@@ -2655,6 +2675,10 @@\n         <source>Label</source>\n         <translation>Etiqueta</translation>\n     </message>\n+    <message numerus=\"yes\">\n+        <source>Open for %n more block(s)</source>\n+        <translation><numerusform>Abrir para %n bloque m\u00e1s</numerusform><numerusform>Abrir para %n bloques m\u00e1s</numerusform></translation>\n+    </message>\n     <message>\n         <source>Open until %1</source>\n         <translation>Abierto hasta %1</translation>\n@@ -2987,6 +3011,18 @@\n         <translation>Aceptar comandos consola y JSON-RPC\n </translation>\n     </message>\n+    <message>\n+        <source>Accept connections from outside (default: 1 if no -proxy or -connect/-noconnect)</source>\n+        <translation>Aceptar conexiones desde el exterior (predeterminado: 1 si no -proxy o -connect/-desconectar)</translation>\n+    </message>\n+    <message>\n+        <source>Connect only to the specified node(s); -noconnect or -connect=0 alone to disable automatic connections</source>\n+        <translation>Conectar s\u00f3lo al nodo(s) especificado; -no conectar or -conectar=solo 0 para deshabilitar conexiones autom\u00e1ticas</translation>\n+    </message>\n+    <message>\n+        <source>Distributed under the MIT software license, see the accompanying file %s or %s</source>\n+        <translation>Distribuido bajo la licencia de software MIT, vea el archivo adjunto %s o %s</translation>\n+    </message>\n     <message>\n         <source>If &lt;category&gt; is not supplied or if &lt;category&gt; = 1, output all debugging information.</source>\n         <translation>Si &lt;category&gt; no es proporcionado o si &lt;category&gt; =1, muestra toda la informaci\u00f3n de depuraci\u00f3n.</translation>\n@@ -3064,6 +3100,14 @@\n         <source>Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)</source>\n         <translation>Ejecutar comando cuando una transacci\u00f3n del monedero cambia (%s en cmd se remplazar\u00e1 por TxID)</translation>\n     </message>\n+    <message>\n+        <source>Extra transactions to keep in memory for compact block reconstructions (default: %u)</source>\n+        <translation>Transacciones extra a mantener en la memoria para reconstrucciones de bloque compacto (predeterminado: %u)</translation>\n+    </message>\n+    <message>\n+        <source>If this block is in the chain assume that it and its ancestors are valid and potentially skip their script verification (0 to verify all, default: %s, testnet: %s)</source>\n+        <translation>Si este bloque est\u00e1 en la cadena asuma que sus predecesores y \u00e9l son v\u00e1lidos y potencialmente se saltan su script de verificaci\u00f3n (0 para verificar todo, predeterminado: %s, testnet: %s)</translation>\n+    </message>\n     <message>\n         <source>Maximum allowed median peer time offset adjustment. Local perspective of time may be influenced by peers forward or backward by this amount. (default: %u seconds)</source>\n         <translation>Ajuste m\u00e1ximo permitido del tiempo offset medio de pares. La perspectiva local de tiempo se ver\u00e1 influenciada por los pares anteriores y posteriores a esta cantidad. (Por defecto: %u segundos)</translation>\n@@ -3080,6 +3124,14 @@\n         <source>Please contribute if you find %s useful. Visit %s for further information about the software.</source>\n         <translation>Contribuya si encuentra %s de utilidad. Visite %s para mas informaci\u00f3n acerca del programa.</translation>\n     </message>\n+    <message>\n+        <source>Reduce storage requirements by enabling pruning (deleting) of old blocks. This allows the pruneblockchain RPC to be called to delete specific blocks, and enables automatic pruning of old blocks if a target size in MiB is provided. This mode is incompatible with -txindex and -rescan. Warning: Reverting this setting requires re-downloading the entire blockchain. (default: 0 = disable pruning blocks, 1 = allow manual pruning via RPC, &gt;%u = automatically prune block files to stay under the specified target size in MiB)</source>\n+        <translation>Reducir los requerimientos de almacenamiento habilitando la poda (eliminaci\u00f3n) de los bloques viejos. Esto permite que la cadena de bloqueo RPC sea llamada para eliminar bloques espec\u00edficos, y habilita la poda autom\u00e1tica de bloques viejos si se provee el tama\u00f1o de un objetivo en MiB. Este modo es incompatible con -txindex and -rescan. Precauci\u00f3n: Revertir este ajuste requiere volver a descargar la cadena de bloqueo completa. (predefinido: 0 = deshabilita bloques de poda, 1 = permite la poda manual mediante RPC, &gt;%u = elimina autom\u00e1ticamente los archivos de bloqueo para permanecer bajo el tama\u00f1o del objetivo especificado en MiB)</translation>\n+    </message>\n+    <message>\n+        <source>Set lowest fee rate (in %s/kB) for transactions to be included in block creation. (default: %s)</source>\n+        <translation>Establecer la tasa m\u00e1s baja (en %s/kB) por transacciones para incluirse en la creaci\u00f3n de bloque. (predeterminado: %s)</translation>\n+    </message>\n     <message>\n         <source>Set the number of script verification threads (%u to %d, 0 = auto, &lt;0 = leave that many cores free, default: %d)</source>\n         <translation>Establecer el n\u00famero de hilos (threads) de verificaci\u00f3n de scripts (entre %u y %d, 0 = autom\u00e1tico, &lt;0 = dejar libres ese n\u00famero de n\u00facleos; predeterminado: %d)</translation>\n@@ -3088,6 +3140,10 @@\n         <source>The block database contains a block which appears to be from the future. This may be due to your computer's date and time being set incorrectly. Only rebuild the block database if you are sure that your computer's date and time are correct</source>\n         <translation>La base de datos de bloques contiene un bloque que parece ser del futuro. Esto puede ser porque la fecha y hora de tu ordenador est\u00e1n mal ajustados. Reconstruye la base de datos de bloques solo si estas seguro de que la fecha y hora de tu ordenador estan ajustados correctamente.</translation>\n     </message>\n+    <message>\n+        <source>This is a pre-release test build - use at your own risk - do not use for mining or merchant applications</source>\n+        <translation>Esta es una versi\u00f3n de prueba prelanzada - util\u00edcelo a su propio riesgo - no lo utilice para aplicaciones de miner\u00eda o comerciales</translation>\n+    </message>\n     <message>\n         <source>Unable to rewind the database to a pre-fork state. You will need to redownload the blockchain</source>\n         <translation>No es posible reconstruir la base de datos a un estado anterior. Debe descargar de nuevo la cadena de bloques.</translation>\n@@ -3096,6 +3152,22 @@\n         <source>Use UPnP to map the listening port (default: 1 when listening and no -proxy)</source>\n         <translation>Utiliza UPnP para asignar el puerto de escucha (predeterminado: 1 cuando esta escuchando sin -proxy)</translation>\n     </message>\n+    <message>\n+        <source>Username and hashed password for JSON-RPC connections. The field &lt;userpw&gt; comes in the format: &lt;USERNAME&gt;:&lt;SALT&gt;$&lt;HASH&gt;. A canonical python script is included in share/rpcuser. The client then connects normally using the rpcuser=&lt;USERNAME&gt;/rpcpassword=&lt;PASSWORD&gt; pair of arguments. This option can be specified multiple times</source>\n+        <translation>Nombre de usuario y contrase\u00f1a numerada para conexiones JSON-RPC. El campo &lt;userpw&gt; viene en el formato: &lt;USERNAME&gt;:&lt;SALT&gt;$&lt;HASH&gt;. Un script can\u00f3nico de python est\u00e1 inclu\u00eddo en compartir/usuario rpc. Entonces el cliente se conecta normalmente utilizando la pareja de argumentos usuario rpc=&lt;USERNAME&gt;/contrase\u00f1a rpc=&lt;PASSWORD&gt;. Esta opci\u00f3n puede ser especificada m\u00faltiples veces</translation>\n+    </message>\n+    <message>\n+        <source>Wallet will not create transactions that violate mempool chain limits (default: %u)</source>\n+        <translation>El monedero no crear\u00e1 transacciones que violen los l\u00edmites de la cadena mempool (predeterminado: %u)</translation>\n+    </message>\n+    <message>\n+        <source>Warning: The network does not appear to fully agree! Some miners appear to be experiencing issues.</source>\n+        <translation>Advertencia: \u00a1La red no parece coincidir del todo! Algunos mineros parecen estar experimentando problemas.</translation>\n+    </message>\n+    <message>\n+        <source>Warning: We do not appear to fully agree with our peers! You may need to upgrade, or other nodes may need to upgrade.</source>\n+        <translation>Advertencia: \u00a1No parecemos estar del todo con nuestros pares! Puede que necesite actualizarse, o puede que otros nodos necesiten actualizarse.</translation>\n+    </message>\n     <message>\n         <source>You need to rebuild the database using -reindex-chainstate to change -txindex</source>\n         <translation>Necesita reconstruir la base de datos usando -reindex-chainstate para cambiar -txindex</translation>\n@@ -3128,6 +3200,10 @@\n         <source>Cannot resolve -%s address: '%s'</source>\n         <translation>No se puede resolver -%s direccion: '%s'</translation>\n     </message>\n+    <message>\n+        <source>Chain selection options:</source>\n+        <translation>Opciones de selecci\u00f3n en cadena:</translation>\n+    </message>\n     <message>\n         <source>Change index out of range</source>\n         <translation>Cambio de indice fuera de rango</translation>\n@@ -3324,6 +3400,10 @@\n         <source>Use UPnP to map the listening port (default: %u)</source>\n         <translation>Usar UPnP para asignar el puerto de escucha (predeterminado:: %u)</translation>\n     </message>\n+    <message>\n+        <source>Use the test chain</source>\n+        <translation>Utilice la cadena de prueba</translation>\n+    </message>\n     <message>\n         <source>User Agent comment (%s) contains unsafe characters.</source>\n         <translation>El comentario del Agente de Usuario (%s) contiene caracteres inseguros.</translation>\n@@ -3618,6 +3698,10 @@\n         <source>Output debugging information (default: %u, supplying &lt;category&gt; is optional)</source>\n         <translation>Mostrar depuraci\u00f3n (por defecto: %u, proporcionar &lt;category&gt; es opcional)</translation>\n     </message>\n+    <message>\n+        <source>Query for peer addresses via DNS lookup, if low on addresses (default: 1 unless -connect/-noconnect)</source>\n+        <translation>Preguntar por direcciones pares al buscar DNS, si baja en las direcciones (predeterminado: 1 a menos que -connect/-noconnect)</translation>\n+    </message>\n     <message>\n         <source>Sets the serialization of raw transaction or block hex returned in non-verbose mode, non-segwit(0) or segwit(1) (default: %d)</source>\n         <translation>https://www.transifex.com/joyful-world/breaking-english/\n@@ -3627,6 +3711,14 @@ Establecer la serializaci\u00f3n de las transacciones sin procesar o el bloque hex d\n         <source>Support filtering of blocks and transaction with bloom filters (default: %u)</source>\n         <translation>Admite filtrado de bloques, y transacciones con filtros Bloom. Reduce la carga de red. ( por defecto :%u)</translation>\n     </message>\n+    <message>\n+        <source>This is the transaction fee you may pay when fee estimates are not available.</source>\n+        <translation>Esta es la tarifa de cuota que debe pagar cuando las estimaciones de tarifas no est\u00e9n disponibles.</translation>\n+    </message>\n+    <message>\n+        <source>This product includes software developed by the OpenSSL Project for use in the OpenSSL Toolkit %s and cryptographic software written by Eric Young and UPnP software written by Thomas Bernard.</source>\n+        <translation>Este producto incluye software desarrollado por el Proyecto OpenSSL para utilizarlo en el juego de herramientas OpenSSL %s y software criptogr\u00e1fico escrito por Eric Young y software UPnP escrito por Thomas Bernard.</translation>\n+    </message>\n     <message>\n         <source>Total length of network version string (%i) exceeds maximum length (%i). Reduce the number or size of uacomments.</source>\n         <translation>La longitud total de la cadena de versi\u00f3n de red ( %i ) supera la longitud m\u00e1xima ( %i ) . Reducir el n\u00famero o tama\u00f1o de uacomments .</translation>\n@@ -3659,6 +3751,10 @@ Establecer la serializaci\u00f3n de las transacciones sin procesar o el bloque hex d\n         <source>Whitelist peers connecting from the given IP address (e.g. 1.2.3.4) or CIDR notated network (e.g. 1.2.3.0/24). Can be specified multiple times.</source>\n         <translation>Los pares de listas blancas que se conectan desde la direcci\u00f3n IP dada (por ejemplo, 1.2.3.4) o la red marcada CIDR (por ejemplo, 1.2.3.0/24). Se puede especificar varias veces.</translation>\n     </message>\n+    <message>\n+        <source>%s is set very high!</source>\n+        <translation>\u00a1%s se establece muy alto!</translation>\n+    </message>\n     <message>\n         <source>(default: %s)</source>\n         <translation>(predeterminado: %s)</translation>\n@@ -3679,6 +3775,10 @@ Establecer la serializaci\u00f3n de las transacciones sin procesar o el bloque hex d\n         <source>Invalid -proxy address: '%s'</source>\n         <translation>Direcci\u00f3n -proxy inv\u00e1lida: '%s'</translation>\n     </message>\n+    <message>\n+        <source>Keypool ran out, please call keypoolrefill first</source>\n+        <translation>Keypool se ha agotado, llame a keypoolrefill primero</translation>\n+    </message>\n     <message>\n         <source>Listen for JSON-RPC connections on &lt;port&gt; (default: %u or testnet: %u)</source>\n         <translation>Escuchar conexiones JSON-RPC en &lt;puerto&gt; (predeterminado: %u o testnet: %u)</translation>\n@@ -3715,6 +3815,10 @@ Establecer la serializaci\u00f3n de las transacciones sin procesar o el bloque hex d\n         <source>Relay non-P2SH multisig (default: %u)</source>\n         <translation>Relay non-P2SH multisig (default: %u)</translation>\n     </message>\n+    <message>\n+        <source>Send transactions with full-RBF opt-in enabled (default: %u)</source>\n+        <translation>Enviar transacciones con full-RBF opt-in habilitado (predeterminado: %u)</translation>\n+    </message>\n     <message>\n         <source>Set key pool size to &lt;n&gt; (default: %u)</source>\n         <translation>Ajustar el n\u00famero de claves en reserva &lt;n&gt; (predeterminado: %u)</translation>\n@@ -3747,10 +3851,34 @@ Establecer la serializaci\u00f3n de las transacciones sin procesar o el bloque hex d\n         <source>Starting network threads...</source>\n         <translation>Iniciando funciones de red...</translation>\n     </message>\n+    <message>\n+        <source>The wallet will avoid paying less than the minimum relay fee.</source>\n+        <translation>El monedero evitar\u00e1 pagar menos que la cuota de retransmisi\u00f3n m\u00ednima.</translation>\n+    </message>\n+    <message>\n+        <source>This is the minimum transaction fee you pay on every transaction.</source>\n+        <translation>Esta es la tarifa m\u00ednima de transacci\u00f3n que usted paga en cada transacci\u00f3n.</translation>\n+    </message>\n+    <message>\n+        <source>This is the transaction fee you will pay if you send a transaction.</source>\n+        <translation>Esta es la cuota de transacci\u00f3n que pagar\u00e1 si env\u00eda una transacci\u00f3n.</translation>\n+    </message>\n     <message>\n         <source>Threshold for disconnecting misbehaving peers (default: %u)</source>\n         <translation>Umbral para la desconexi\u00f3n de pares con mal comportamiento (predeterminado: %u)</translation>\n     </message>\n+    <message>\n+        <source>Transaction amounts must not be negative</source>\n+        <translation>Las cantidades de transacci\u00f3n no deben ser negativa</translation>\n+    </message>\n+    <message>\n+        <source>Transaction has too long of a mempool chain</source>\n+        <translation>La transacci\u00f3n tiene demasiado tiempo de una cadena de mempool</translation>\n+    </message>\n+    <message>\n+        <source>Transaction must have at least one recipient</source>\n+        <translation>La transacci\u00f3n debe de tener al menos un receptor</translation>\n+    </message>\n     <message>\n         <source>Unknown network specified in -onlynet: '%s'</source>\n         <translation>La red especificada en -onlynet '%s' es desconocida</translation>"
      },
      {
        "sha": "e0ddf7d530f198549fb6ab1eec02fbfa47aad941",
        "filename": "src/qt/locale/bitcoin_es_ES.ts",
        "status": "modified",
        "additions": 88,
        "deletions": 4,
        "changes": 92,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/locale/bitcoin_es_ES.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/locale/bitcoin_es_ES.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_es_ES.ts?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -317,6 +317,22 @@\n         <source>Open &amp;URI...</source>\n         <translation>Abrir &amp;URI...</translation>\n     </message>\n+    <message>\n+        <source>Click to disable network activity.</source>\n+        <translation>Haz click para desactivar la actividad de red.</translation>\n+    </message>\n+    <message>\n+        <source>Network activity disabled.</source>\n+        <translation>Actividad de red desactivada.</translation>\n+    </message>\n+    <message>\n+        <source>Click to enable network activity again.</source>\n+        <translation>Haz click para reactivar la actividad de red.</translation>\n+    </message>\n+    <message>\n+        <source>Syncing Headers (%1%)...</source>\n+        <translation>Sincronizando cabeceras (%1%)...</translation>\n+    </message>\n     <message>\n         <source>Reindexing blocks on disk...</source>\n         <translation>Reindexando bloques en disco...</translation>\n@@ -469,6 +485,10 @@\n         <source>%1 client</source>\n         <translation>%1 cliente</translation>\n     </message>\n+    <message>\n+        <source>Connecting to peers...</source>\n+        <translation>Conectando a pares...</translation>\n+    </message>\n     <message>\n         <source>Catching up...</source>\n         <translation>Actualizando...</translation>\n@@ -519,7 +539,11 @@\n         <source>Wallet is &lt;b&gt;encrypted&lt;/b&gt; and currently &lt;b&gt;locked&lt;/b&gt;</source>\n         <translation>El monedero est\u00e1 &lt;b&gt;cifrado&lt;/b&gt; y actualmente &lt;b&gt;bloqueado&lt;/b&gt;</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>A fatal error occurred. Bitcoin can no longer continue safely and will quit.</source>\n+        <translation>Ha ocurrido un error fatal. Bitcoin no puede continuar de manera segura y se cerrar\u00e1.</translation>\n+    </message>\n+</context>\n <context>\n     <name>CoinControlDialog</name>\n     <message>\n@@ -853,15 +877,43 @@\n         <source>Form</source>\n         <translation>Formulario</translation>\n     </message>\n+    <message>\n+        <source>Number of blocks left</source>\n+        <translation>N\u00famero de bloques restantes</translation>\n+    </message>\n+    <message>\n+        <source>Unknown...</source>\n+        <translation>Desconocido...</translation>\n+    </message>\n     <message>\n         <source>Last block time</source>\n         <translation>Hora del \u00faltimo bloque</translation>\n     </message>\n+    <message>\n+        <source>Progress</source>\n+        <translation>Progreso</translation>\n+    </message>\n+    <message>\n+        <source>Progress increase per hour</source>\n+        <translation>Incremento del progreso por hora</translation>\n+    </message>\n+    <message>\n+        <source>calculating...</source>\n+        <translation>calculando...</translation>\n+    </message>\n+    <message>\n+        <source>Estimated time left until synced</source>\n+        <translation>Tiempo estimado restante hasta sincronizaci\u00f3n completa</translation>\n+    </message>\n     <message>\n         <source>Hide</source>\n         <translation>Ocultar</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Unknown. Syncing Headers (%1)...</source>\n+        <translation>Desconocido. Sincronizando cabeceras (%1)...</translation>\n+    </message>\n+</context>\n <context>\n     <name>OpenURIDialog</name>\n     <message>\n@@ -1296,7 +1348,15 @@\n         <source>Node/Service</source>\n         <translation>Nodo/Servicio</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>NodeId</source>\n+        <translation>NodeId</translation>\n+    </message>\n+    <message>\n+        <source>Ping</source>\n+        <translation>Ping</translation>\n+    </message>\n+</context>\n <context>\n     <name>QObject</name>\n     <message>\n@@ -1339,9 +1399,17 @@\n         <source>%1 and %2</source>\n         <translation>%1 y %2</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>%1 didn't yet exit safely...</source>\n+        <translation>%1 a\u00fan no ha salido de manera segura...</translation>\n+    </message>\n+</context>\n <context>\n     <name>QObject::QObject</name>\n+    <message>\n+        <source>Error: Specified data directory \"%1\" does not exist.</source>\n+        <translation>Error: directorio especificado \"%1\" no existe.</translation>\n+    </message>\n     </context>\n <context>\n     <name>QRImageWidget</name>\n@@ -1711,6 +1779,10 @@\n         <source>Remove</source>\n         <translation>Eliminar</translation>\n     </message>\n+    <message>\n+        <source>Copy URI</source>\n+        <translation>Copiar URL</translation>\n+    </message>\n     <message>\n         <source>Copy label</source>\n         <translation>Copiar capa</translation>\n@@ -1936,6 +2008,10 @@\n         <source>Dust:</source>\n         <translation>Polvo:</translation>\n     </message>\n+    <message>\n+        <source>Confirmation time target:</source>\n+        <translation>Tiempo objetivo de confirmaci\u00f3n:</translation>\n+    </message>\n     <message>\n         <source>Clear &amp;All</source>\n         <translation>Vaciar &amp;todo</translation>\n@@ -3482,6 +3558,10 @@\n         <source>Warning: Wallet file corrupt, data salvaged! Original %s saved as %s in %s; if your balance or transactions are incorrect you should restore from a backup.</source>\n         <translation>Aviso: fichero de monedero corrupto, datos recuperados! Original %s guardado como %s en %s; si su balance de transacciones es incorrecto, debe restaurar desde una copia de seguridad.</translation>\n     </message>\n+    <message>\n+        <source>%s is set very high!</source>\n+        <translation>%s es demasiado alto!</translation>\n+    </message>\n     <message>\n         <source>(default: %s)</source>\n         <translation>(predeterminado: %s)</translation>\n@@ -3538,6 +3618,10 @@\n         <source>Relay non-P2SH multisig (default: %u)</source>\n         <translation>Relay non-P2SH multisig (default: %u)</translation>\n     </message>\n+    <message>\n+        <source>Send transactions with full-RBF opt-in enabled (default: %u)</source>\n+        <translation>Enviar transaciones con RBF-completo opt-in activado (default: %u)</translation>\n+    </message>\n     <message>\n         <source>Set key pool size to &lt;n&gt; (default: %u)</source>\n         <translation>Ajustar el n\u00famero de claves en reserva &lt;n&gt; (predeterminado: %u)</translation>"
      },
      {
        "sha": "ffa80a10bd7c787f434d241ecae864441980c066",
        "filename": "src/qt/locale/bitcoin_es_MX.ts",
        "status": "modified",
        "additions": 6,
        "deletions": 2,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/locale/bitcoin_es_MX.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/locale/bitcoin_es_MX.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_es_MX.ts?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -3,7 +3,7 @@\n     <name>AddressBookPage</name>\n     <message>\n         <source>Right-click to edit address or label</source>\n-        <translation>Click derecho para editar tu direcci\u00f3n o etiqueta</translation>\n+        <translation>Click derecho para editar direcci\u00f3n o etiqueta</translation>\n     </message>\n     <message>\n         <source>Create a new address</source>\n@@ -31,7 +31,7 @@\n     </message>\n     <message>\n         <source>Export the data in the current tab to a file</source>\n-        <translation>Exportar la informaci\u00f3n en la tabla actual a un archivo</translation>\n+        <translation>Exportar la informaci\u00f3n en la pesta\u00f1a actual a un archivo</translation>\n     </message>\n     <message>\n         <source>&amp;Export</source>\n@@ -596,6 +596,10 @@\n </context>\n <context>\n     <name>WalletView</name>\n+    <message>\n+        <source>Export the data in the current tab to a file</source>\n+        <translation>Exportar la informaci\u00f3n en la pesta\u00f1a actual a un archivo</translation>\n+    </message>\n     </context>\n <context>\n     <name>bitcoin-core</name>"
      },
      {
        "sha": "9b0c908381581e7517e17c3a8ae69e5d9fbd6404",
        "filename": "src/qt/locale/bitcoin_et_EE.ts",
        "status": "modified",
        "additions": 32,
        "deletions": 0,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/locale/bitcoin_et_EE.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/locale/bitcoin_et_EE.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_et_EE.ts?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -87,6 +87,10 @@\n         <source>The supplied passphrases do not match.</source>\n         <translation>Sisestatud paroolid ei kattu.</translation>\n     </message>\n+    <message>\n+        <source>Wallet unlock failed</source>\n+        <translation>Rahakoti lahtilukustamine eba\u00f5nnestus</translation>\n+    </message>\n     <message>\n         <source>Wallet decryption failed</source>\n         <translation>Rahakoti dekr\u00fcpteerimine eba\u00f5nnestus</translation>\n@@ -109,6 +113,14 @@\n         <source>&amp;Overview</source>\n         <translation>&amp;\u00dclevaade</translation>\n     </message>\n+    <message>\n+        <source>Quit application</source>\n+        <translation>V\u00e4lju rakendusest</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Options...</source>\n+        <translation>&amp;Valikud...</translation>\n+    </message>\n     <message>\n         <source>Open &amp;URI...</source>\n         <translation>Ava &amp;URI...</translation>\n@@ -125,14 +137,30 @@\n         <source>Wallet</source>\n         <translation>Rahakott</translation>\n     </message>\n+    <message>\n+        <source>&amp;Send</source>\n+        <translation>&amp;Saada</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Show / Hide</source>\n+        <translation>&amp;N\u00e4ita / Peida</translation>\n+    </message>\n     <message>\n         <source>&amp;File</source>\n         <translation>&amp;Fail</translation>\n     </message>\n+    <message>\n+        <source>&amp;Settings</source>\n+        <translation>&amp;Seaded</translation>\n+    </message>\n     <message>\n         <source>&amp;Help</source>\n         <translation>&amp;Abi</translation>\n     </message>\n+    <message>\n+        <source>&amp;Command-line options</source>\n+        <translation>&amp;K\u00e4surea valikud</translation>\n+    </message>\n     <message>\n         <source>%1 behind</source>\n         <translation>%1 ajast maas</translation>\n@@ -203,6 +231,10 @@\n     </context>\n <context>\n     <name>EditAddressDialog</name>\n+    <message>\n+        <source>&amp;Address</source>\n+        <translation>&amp;Aadress</translation>\n+    </message>\n     <message>\n         <source>New key generation failed.</source>\n         <translation>Uue v\u00f5tme genereerimine eba\u00f5nnestus.</translation>"
      },
      {
        "sha": "c9aa1b56249c02023239922b0c18fc101d680d32",
        "filename": "src/qt/locale/bitcoin_fa.ts",
        "status": "modified",
        "additions": 128,
        "deletions": 0,
        "changes": 128,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/locale/bitcoin_fa.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/locale/bitcoin_fa.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_fa.ts?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -61,6 +61,14 @@\n         <source>Receiving addresses</source>\n         <translation>\u0622\u062f\u0631\u0633 \u0647\u0627\u06cc \u06af\u06cc\u0631\u0646\u062f\u0647</translation>\n     </message>\n+    <message>\n+        <source>These are your Bitcoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>\n+        <translation>\u0627\u06cc\u0646\u0647\u0627 \u0622\u062f\u0631\u0633 \u0647\u0627\u06cc \u0634\u0645\u0627 \u0628\u0631\u0627\u06cc \u0641\u0631\u0633\u062a\u0627\u062f\u0646 \u067e\u0631\u062f\u0627\u062e\u062a \u0647\u0627\u0633\u062a. \u0647\u0645\u06cc\u0634\u0647 \u0642\u0628\u0644 \u0627\u0632 \u0641\u0631\u0633\u062a\u0627\u062f\u0646 \u0633\u06a9\u0647 \u0647\u0627 \u0645\u0642\u062f\u0627\u0631 \u0648 \u0622\u062f\u0631\u0633 \u062f\u0631\u06cc\u0627\u0641\u062a \u06a9\u0646\u0646\u062f\u0647 \u0631\u0627 \u0686\u06a9 \u06a9\u0646\u06cc\u062f.</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Copy Address</source>\n+        <translation>\u06a9\u067e\u06cc \u06a9\u0631\u062f\u0646 \u0622\u062f\u0631\u0633</translation>\n+    </message>\n     <message>\n         <source>Copy &amp;Label</source>\n         <translation>\u06a9\u067e\u06cc \u0648 \u0628\u0631\u0686\u0633\u0628\u200c&amp;\u06af\u0630\u0627\u0631\u06cc</translation>\n@@ -69,6 +77,14 @@\n         <source>&amp;Edit</source>\n         <translation>&amp;\u0648\u06cc\u0631\u0627\u06cc\u0634</translation>\n     </message>\n+    <message>\n+        <source>Export Address List</source>\n+        <translation>\u0635\u062f\u0648\u0631 \u0644\u06cc\u0633\u062a \u0622\u062f\u0631\u0633 \u0647\u0627</translation>\n+    </message>\n+    <message>\n+        <source>Exporting Failed</source>\n+        <translation>\u0635\u062f\u0648\u0631 \u0645\u0648\u0641\u0642 \u0646\u0628\u0648\u062f</translation>\n+    </message>\n     </context>\n <context>\n     <name>AddressTableModel</name>\n@@ -107,14 +123,30 @@\n         <source>Encrypt wallet</source>\n         <translation>\u0631\u0645\u0632\u0646\u06af\u0627\u0631\u06cc \u06a9\u06cc\u0641 \u067e\u0648\u0644</translation>\n     </message>\n+    <message>\n+        <source>This operation needs your wallet passphrase to unlock the wallet.</source>\n+        <translation>\u0627\u06cc\u0646 \u0639\u0645\u0644\u06cc\u0627\u062a \u0646\u06cc\u0627\u0632 \u0628\u0647 \u0639\u0628\u0627\u0631\u062a \u06a9\u06cc\u0641 \u067e\u0648\u0644 \u0634\u0645\u0627 \u0628\u0631\u0627\u06cc \u0628\u0627\u0632\u06af\u0634\u0627\u06cc\u06cc \u06a9\u06cc\u0641 \u067e\u0648\u0644 \u062f\u0627\u0631\u062f</translation>\n+    </message>\n     <message>\n         <source>Unlock wallet</source>\n         <translation>\u0628\u0627\u0632 \u06a9\u0631\u062f\u0646 \u0642\u0641\u0644 \u06a9\u06cc\u0641 \u067e\u0648\u0644</translation>\n     </message>\n+    <message>\n+        <source>This operation needs your wallet passphrase to decrypt the wallet.</source>\n+        <translation>\u0627\u06cc\u0646 \u0639\u0645\u0644\u06cc\u0627\u062a \u0646\u06cc\u0627\u0632 \u0628\u0647 \u0639\u0628\u0627\u0631\u062a \u06a9\u06cc\u0641 \u067e\u0648\u0644 \u0634\u0645\u0627 \u0628\u0631\u0627\u06cc \u0631\u0645\u0632\u06af\u0634\u0627\u06cc\u06cc \u06a9\u06cc\u0641 \u067e\u0648\u0644 \u062f\u0627\u0631\u062f.</translation>\n+    </message>\n     <message>\n         <source>Decrypt wallet</source>\n         <translation>\u0631\u0645\u0632\u06af\u0634\u0627\u06cc\u06cc \u06a9\u06cc\u0641 \u067e\u0648\u0644</translation>\n     </message>\n+    <message>\n+        <source>Change passphrase</source>\n+        <translation>\u062a\u063a\u06cc\u06cc\u0631 \u06af\u0630\u0631\u0648\u0627\u0698\u0647</translation>\n+    </message>\n+    <message>\n+        <source>Enter the old passphrase and new passphrase to the wallet.</source>\n+        <translation>\u0639\u0628\u0627\u0631\u062a \u06a9\u0647\u0646\u0647 \u0648 \u062c\u062f\u06cc\u062f \u06a9\u06cc\u0641 \u067e\u0648\u0644 \u0631\u0627 \u0648\u0627\u0631\u062f \u06a9\u0646\u06cc\u062f.</translation>\n+    </message>\n     <message>\n         <source>Confirm wallet encryption</source>\n         <translation>\u062a\u0623\u06cc\u06cc\u062f \u0631\u0645\u0632\u0646\u06af\u0627\u0631\u06cc \u06a9\u06cc\u0641 \u067e\u0648\u0644</translation>\n@@ -249,6 +281,18 @@\n         <source>Open &amp;URI...</source>\n         <translation>\u0628\u0627\u0632 \u06a9\u0631\u062f\u0646 &amp;\u0622\u062f\u0631\u0633</translation>\n     </message>\n+    <message>\n+        <source>Click to disable network activity.</source>\n+        <translation>\u0628\u0631\u0627\u06cc \u063a\u06cc\u0631 \u0641\u0639\u0627\u0644 \u06a9\u0631\u062f\u0646 \u0641\u0639\u0627\u0644\u06cc\u062a \u0634\u0628\u06a9\u0647 \u06a9\u0644\u06cc\u06a9 \u06a9\u0646\u06cc\u062f.</translation>\n+    </message>\n+    <message>\n+        <source>Network activity disabled.</source>\n+        <translation>\u0641\u0639\u0627\u0644\u06cc\u062a \u0634\u0628\u06a9\u0647 \u063a\u06cc\u0631 \u0641\u0639\u0627\u0644 \u0634\u062f.</translation>\n+    </message>\n+    <message>\n+        <source>Click to enable network activity again.</source>\n+        <translation>\u0628\u0631\u0627\u06cc \u0641\u0639\u0627\u0644 \u06a9\u0631\u062f\u0646 \u062f\u0648\u0628\u0627\u0631\u0647 \u0641\u0639\u0627\u0644\u06cc\u062a \u0634\u0628\u06a9\u0647 \u06a9\u0644\u06cc\u06a9 \u06a9\u0646\u06cc\u062f.</translation>\n+    </message>\n     <message>\n         <source>Reindexing blocks on disk...</source>\n         <translation>\u0628\u0627\u0632\u0646\u0634\u0627\u0646\u06cc \u0628\u0644\u0648\u06a9\u200c\u0647\u0627 \u0631\u0648\u06cc \u062f\u06cc\u0633\u06a9...</translation>\n@@ -506,6 +550,10 @@\n         <source>Confirmed</source>\n         <translation>\u062a\u0623\u06cc\u06cc\u062f \u0634\u062f\u0647</translation>\n     </message>\n+    <message>\n+        <source>Copy address</source>\n+        <translation>\u06a9\u067e\u06cc \u0627\u062f\u0631\u0633</translation>\n+    </message>\n     <message>\n         <source>Copy label</source>\n         <translation>\u06a9\u067e\u06cc \u0628\u0631\u0686\u0633\u0628</translation>\n@@ -530,6 +578,18 @@\n         <source>Copy quantity</source>\n         <translation>\u06a9\u067e\u06cc \u062a\u0639\u062f\u0627\u062f</translation>\n     </message>\n+    <message>\n+        <source>Copy fee</source>\n+        <translation>\u0631\u0648\u0646\u0648\u0634\u062a \u06a9\u0627\u0631\u0645\u0632\u062f</translation>\n+    </message>\n+    <message>\n+        <source>Copy bytes</source>\n+        <translation>\u06a9\u067e\u06cc \u06a9\u0631\u062f\u0646 \u0628\u0627\u06cc\u062a \u0647\u0627</translation>\n+    </message>\n+    <message>\n+        <source>Copy change</source>\n+        <translation>\u06a9\u067e\u06cc \u06a9\u0631\u062f\u0646 \u062a\u063a\u06cc\u06cc\u0631</translation>\n+    </message>\n     <message>\n         <source>(%1 locked)</source>\n         <translation>(%1 \u0642\u0641\u0644 \u0634\u062f\u0647)</translation>\n@@ -697,10 +757,30 @@\n         <source>Form</source>\n         <translation>\u0641\u0631\u0645</translation>\n     </message>\n+    <message>\n+        <source>Unknown...</source>\n+        <translation>\u0645\u0634\u062e\u0635 \u0646\u06cc\u0633\u062a</translation>\n+    </message>\n     <message>\n         <source>Last block time</source>\n         <translation>\u0632\u0645\u0627\u0646 \u0622\u062e\u0631\u06cc\u0646 \u0628\u0644\u0648\u06a9</translation>\n     </message>\n+    <message>\n+        <source>Progress</source>\n+        <translation>\u067e\u06cc\u0634\u0631\u0648\u06cc</translation>\n+    </message>\n+    <message>\n+        <source>Progress increase per hour</source>\n+        <translation>\u067e\u06cc\u0634\u0631\u0648\u06cc \u062f\u0631 \u0647\u0631 \u0633\u0627\u0639\u062a \u0628\u06cc\u0634\u062a\u0631 \u0645\u06cc\u0634\u0648\u062f</translation>\n+    </message>\n+    <message>\n+        <source>calculating...</source>\n+        <translation>\u062f\u0631 \u062d\u0627\u0644 \u0645\u062d\u0627\u0633\u0628\u0647...</translation>\n+    </message>\n+    <message>\n+        <source>Estimated time left until synced</source>\n+        <translation>\u0632\u0645\u0627\u0646 \u062a\u062e\u0645\u06cc\u0646\u06cc \u062a\u0627 \u0633\u06cc\u0646\u06a9 \u0634\u062f\u0646</translation>\n+    </message>\n     <message>\n         <source>Hide</source>\n         <translation>\u067e\u0646\u0647\u0627\u0646 \u06a9\u0631\u062f\u0646</translation>\n@@ -921,6 +1001,10 @@\n     </context>\n <context>\n     <name>PaymentServer</name>\n+    <message>\n+        <source>Invalid payment request.</source>\n+        <translation>\u062f\u0631\u062e\u0648\u0627\u0633\u062a \u067e\u0631\u062f\u0627\u062e\u062a \u0646\u0627\u0645\u0639\u062a\u0628\u0631.</translation>\n+    </message>\n     </context>\n <context>\n     <name>PeerTableModel</name>\n@@ -1084,6 +1168,10 @@\n         <source>In:</source>\n         <translation>\u062f\u0631:</translation>\n     </message>\n+    <message>\n+        <source>Out:</source>\n+        <translation>\u062e\u0631\u0648\u062c\u06cc:</translation>\n+    </message>\n     <message>\n         <source>Debug log file</source>\n         <translation>\u0641\u0627\u06cc\u0644\u0650 \u0644\u0627\u06af\u0650 \u0627\u0634\u06a9\u0627\u0644 \u0632\u062f\u0627\u06cc\u06cc</translation>\n@@ -1092,6 +1180,26 @@\n         <source>Clear console</source>\n         <translation>\u067e\u0627\u06a9\u0633\u0627\u0632\u06cc \u06a9\u0646\u0633\u0648\u0644</translation>\n     </message>\n+    <message>\n+        <source>1 &amp;hour</source>\n+        <translation>1 \u0633\u0627\u0639\u062a</translation>\n+    </message>\n+    <message>\n+        <source>1 &amp;day</source>\n+        <translation>1 \u0631\u0648\u0632</translation>\n+    </message>\n+    <message>\n+        <source>1 &amp;week</source>\n+        <translation>1 \u0647\u0641\u062a\u0647</translation>\n+    </message>\n+    <message>\n+        <source>1 &amp;year</source>\n+        <translation>1 \u0633\u0627\u0644</translation>\n+    </message>\n+    <message>\n+        <source>Ban for</source>\n+        <translation>\u0645\u062d\u062f\u0648\u062f \u0634\u062f\u0647 \u0628\u0631\u0627\u06cc</translation>\n+    </message>\n     <message>\n         <source>Use up and down arrows to navigate history, and &lt;b&gt;Ctrl-L&lt;/b&gt; to clear screen.</source>\n         <translation>\u062f\u06a9\u0645\u0647\u200c\u0647\u0627\u06cc \u0628\u0627\u0644\u0627 \u0648 \u067e\u0627\u06cc\u06cc\u0646 \u0628\u0631\u0627\u06cc \u067e\u06cc\u0645\u0627\u06cc\u0634 \u062a\u0627\u0631\u06cc\u062e\u0686\u0647 \u0648 &lt;b&gt;Ctrl-L&lt;/b&gt; \u0628\u0631\u0627\u06cc \u067e\u0627\u06a9 \u06a9\u0631\u062f\u0646 \u0635\u0641\u062d\u0647.</translation>\n@@ -1328,6 +1436,18 @@\n         <source>Copy amount</source>\n         <translation>\u06a9\u067e\u06cc \u0645\u0642\u062f\u0627\u0631</translation>\n     </message>\n+    <message>\n+        <source>Copy fee</source>\n+        <translation>\u0631\u0648\u0646\u0648\u0634\u062a \u06a9\u0627\u0631\u0645\u0632\u062f</translation>\n+    </message>\n+    <message>\n+        <source>Copy bytes</source>\n+        <translation>\u06a9\u067e\u06cc \u06a9\u0631\u062f\u0646 \u0628\u0627\u06cc\u062a \u0647\u0627</translation>\n+    </message>\n+    <message>\n+        <source>Copy change</source>\n+        <translation>\u06a9\u067e\u06cc \u06a9\u0631\u062f\u0646 \u062a\u063a\u06cc\u06cc\u0631</translation>\n+    </message>\n     <message>\n         <source>(no label)</source>\n         <translation>(\u0628\u062f\u0648\u0646 \u0628\u0631\u0686\u0633\u0628)</translation>\n@@ -1514,6 +1634,10 @@\n     </context>\n <context>\n     <name>TransactionView</name>\n+    <message>\n+        <source>Copy address</source>\n+        <translation>\u06a9\u067e\u06cc \u0627\u062f\u0631\u0633</translation>\n+    </message>\n     <message>\n         <source>Copy label</source>\n         <translation>\u06a9\u067e\u06cc \u0628\u0631\u0686\u0633\u0628</translation>\n@@ -1534,6 +1658,10 @@\n         <source>Address</source>\n         <translation>\u0622\u062f\u0631\u0633</translation>\n     </message>\n+    <message>\n+        <source>Exporting Failed</source>\n+        <translation>\u0635\u062f\u0648\u0631 \u0645\u0648\u0641\u0642 \u0646\u0628\u0648\u062f</translation>\n+    </message>\n     </context>\n <context>\n     <name>UnitDisplayStatusBarControl</name>"
      },
      {
        "sha": "b0acc67b920eefb4ea3e4254af69121d86949a9a",
        "filename": "src/qt/locale/bitcoin_fa_IR.ts",
        "status": "modified",
        "additions": 415,
        "deletions": 43,
        "changes": 458,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/locale/bitcoin_fa_IR.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/locale/bitcoin_fa_IR.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_fa_IR.ts?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767",
        "patch": "@@ -1,9 +1,13 @@\n <TS language=\"fa_IR\" version=\"2.1\">\n <context>\n     <name>AddressBookPage</name>\n+    <message>\n+        <source>Right-click to edit address or label</source>\n+        <translation>\u0628\u0631\u0627\u06cc \u0648\u06cc\u0631\u0627\u06cc\u0634 \u0622\u062f\u0631\u0633 \u06cc\u0627 \u0628\u0631\u0686\u0633\u0628 \u0631\u0648\u06cc \u0622\u0646 \u0631\u0627\u0633\u062a \u06a9\u0644\u06cc\u06a9 \u06a9\u0646\u06cc\u062f</translation>\n+    </message>\n     <message>\n         <source>Create a new address</source>\n-        <translation>\u06af\u0634\u0627\u06cc\u0634 \u062d\u0633\u0627\u0628\u06cc \u062c\u062f\u06cc\u062f</translation>\n+        <translation>\u06af\u0634\u0627\u06cc\u0634 \u062d\u0633\u0627\u0628 \u062c\u062f\u06cc\u062f</translation>\n     </message>\n     <message>\n         <source>&amp;New</source>\n@@ -37,9 +41,65 @@\n         <source>&amp;Delete</source>\n         <translation>\u062d\u0630\u0641</translation>\n     </message>\n+    <message>\n+        <source>Choose the address to send coins to</source>\n+        <translation>\u0622\u062f\u0631\u0633 \u0628\u0631\u0627\u06cc \u0627\u0631\u0633\u0627\u0644 \u06a9\u0648\u06cc\u0646\u200c\u0647\u0627 \u0631\u0627 \u0627\u0646\u062a\u062e\u0627\u0628 \u06a9\u0646\u06cc\u062f</translation>\n+    </message>\n+    <message>\n+        <source>Choose the address to receive coins with</source>\n+        <translation>\u0627\u0646\u062a\u062e\u0627\u0628 \u0622\u062f\u0631\u0633 \u062c\u0647\u062a \u062f\u0631\u06cc\u0627\u0641\u062a \u0633\u06a9\u0647\u200c\u0647\u0627 \u0628\u0627 \u0622\u0646</translation>\n+    </message>\n+    <message>\n+        <source>C&amp;hoose</source>\n+        <translation>\u0627\u0646\u062a\u062e\u0627\u0628</translation>\n+    </message>\n+    <message>\n+        <source>Sending addresses</source>\n+        <translation>\u0622\u062f\u0631\u0633\u200c\u0647\u0627\u06cc \u0641\u0631\u0633\u062a\u0646\u062f\u0647</translation>\n+    </message>\n+    <message>\n+        <source>Receiving addresses</source>\n+        <translation>\u0622\u062f\u0631\u0633\u200c\u0647\u0627\u06cc \u06af\u06cc\u0631\u0646\u062f\u0647</translation>\n+    </message>\n+    <message>\n+        <source>These are your Bitcoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>\n+        <translation>\u0627\u06cc\u0646\u0647\u0627 \u0622\u062f\u0631\u0633\u200c\u0647\u0627\u06cc \u0628\u06cc\u062a\u06a9\u0648\u06cc\u0646 \u0634\u0645\u0627 \u0628\u0631\u0627\u06cc \u0627\u0631\u0633\u0627\u0644 \u0648\u062c\u0648\u0647 \u0647\u0633\u062a\u0646\u062f. \u0647\u0645\u06cc\u0634\u0647 \u0642\u0628\u0644 \u0627\u0632 \u0627\u0631\u0633\u0627\u0644\u060c \u0645\u0642\u062f\u0627\u0631 \u0648 \u0622\u062f\u0631\u0633 \u06af\u06cc\u0631\u0646\u062f\u0647 \u0631\u0627 \u0628\u0631\u0631\u0633\u06cc \u06a9\u0646\u06cc\u062f.</translation>\n+    </message>\n+    <message>\n+        <source>These are your Bitcoin addresses for receiving payments. It is recommended to use a new receiving address for each transaction.</source>\n+        <translation>\u0627\u06cc\u0646\u0647\u0627 \u0622\u062f\u0631\u0633\u200c\u0647\u0627\u06cc \u0628\u06cc\u062a\u06a9\u0648\u06cc\u0646 \u0634\u0645\u0627 \u0628\u0631\u0627\u06cc \u062f\u0631\u06cc\u0627\u0641\u062a \u0648\u062c\u0648\u0647 \u0647\u0633\u062a\u0646\u062f. \u062a\u0648\u0635\u06cc\u0647 \u0645\u06cc\u200c\u0634\u0648\u062f \u0628\u0631\u0627\u06cc \u0647\u0631 \u062f\u0631\u06cc\u0627\u0641\u062a \u0627\u0632 \u06cc\u06a9 \u0622\u062f\u0631\u0633 \u062c\u062f\u06cc\u062f \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u06a9\u0646\u06cc\u062f.</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Copy Address</source>\n+        <translation>\u06a9\u067e\u06cc \u0622\u062f\u0631\u0633</translation>\n+    </message>\n+    <message>\n+        <source>Copy &amp;Label</source>\n+        <translation>\u06a9\u067e\u06cc \u0628\u0631\u0686\u0633\u0628</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Edit</source>\n+        <translation>\u0648\u06cc\u0631\u0627\u06cc\u0634</translation>\n+    </message>\n+    <message>\n+        <source>Export Address List</source>\n+        <translation>\u0627\u0632 \u0641\u0647\u0631\u0633\u062a \u0622\u062f\u0631\u0633 \u062e\u0631\u0648\u062c\u06cc \u06af\u0631\u0641\u062a\u0647 \u0634\u0648\u062f</translation>\n+    </message>\n+    <message>\n+        <source>Exporting Failed</source>\n+        <translation>\u06af\u0631\u0641\u062a\u0646 \u062e\u0631\u0648\u062c\u06cc \u0628\u0647 \u0645\u0634\u06a9\u0644 \u062e\u0648\u0631\u062f</translation>\n+    </message>\n     </context>\n <context>\n     <name>AddressTableModel</name>\n+    <message>\n+        <source>Label</source>\n+        <translation>\u0628\u0631\u0686\u0633\u0628</translation>\n+    </message>\n+    <message>\n+        <source>Address</source>\n+        <translation>\u0622\u062f\u0631\u0633</translation>\n+    </message>\n     </context>\n <context>\n     <name>AskPassphraseDialog</name>\n@@ -59,6 +119,26 @@\n         <source>Repeat new passphrase</source>\n         <translation>\u0631\u0645\u0632/\u067e\u064e\u0633 \u0641\u0631\u0650\u06cc\u0632 \u0631\u0627 \u062f\u0648\u0628\u0627\u0631\u0647 \u0648\u0627\u0631\u062f \u06a9\u0646\u06cc\u062f</translation>\n     </message>\n+    <message>\n+        <source>Encrypt wallet</source>\n+        <translation>\u0631\u0645\u0632\u06af\u0630\u0627\u0631\u06cc \u06a9\u06cc\u0641 \u067e\u0648\u0644</translation>\n+    </message>\n+    <message>\n+        <source>Decrypt wallet</source>\n+        <translation>\u0631\u0645\u0632\u06af\u0634\u0627\u06cc\u06cc \u06a9\u06cc\u0641 \u067e\u0648\u0644</translation>\n+    </message>\n+    <message>\n+        <source>Change passphrase</source>\n+        <translation>\u062a\u063a\u06cc\u06cc\u0631 \u0631\u0645\u0632\u0639\u0628\u0648\u0631</translation>\n+    </message>\n+    <message>\n+        <source>Confirm wallet encryption</source>\n+        <translation>\u062a\u0627\u06cc\u06cc\u062f \u0631\u0645\u0632\u06af\u0630\u0627\u0631\u06cc \u06a9\u06cc\u0641 \u067e\u0648\u0644</translation>\n+    </message>\n+    <message>\n+        <source>Wallet encrypted</source>\n+        <translation>\u06a9\u06cc\u0641 \u067e\u0648\u0644 \u0631\u0645\u0632\u06af\u0630\u0627\u0631\u06cc \u0634\u062f\u0647 \u0627\u0633\u062a</translation>\n+    </message>\n     </context>\n <context>\n     <name>BanTableModel</name>\n@@ -75,15 +155,15 @@\n     </message>\n     <message>\n         <source>&amp;Overview</source>\n-        <translation>\u0648 \u0628\u0627\u0632\u0628\u06cc\u0646\u06cc</translation>\n+        <translation>\u0628\u0627\u0632\u0628\u06cc\u0646\u06cc</translation>\n     </message>\n     <message>\n         <source>Show general overview of wallet</source>\n         <translation>\u0646\u0645\u0627\u06cc \u06a9\u0644\u06cc \u0627\u0632 wallet \u0631\u0627 \u0646\u0634\u0627\u0646 \u0628\u062f\u0647</translation>\n     </message>\n     <message>\n         <source>&amp;Transactions</source>\n-        <translation>\u0648 \u062a\u0631\u0627\u06a9\u0646\u0634</translation>\n+        <translation>\u062a\u0631\u0627\u06a9\u0646\u0634</translation>\n     </message>\n     <message>\n         <source>Browse transaction history</source>\n@@ -99,23 +179,23 @@\n     </message>\n     <message>\n         <source>About &amp;Qt</source>\n-        <translation>\u062f\u0631\u0628\u0627\u0631\u0647 \u0648 Qt</translation>\n+        <translation>\u062f\u0631\u0628\u0627\u0631\u0647 Qt</translation>\n     </message>\n     <message>\n         <source>Show information about Qt</source>\n         <translation>\u0646\u0645\u0627\u06cc\u0634 \u0627\u0637\u0644\u0627\u0639\u0627\u062a \u062f\u0631\u0628\u0627\u0631\u0647 Qt</translation>\n     </message>\n     <message>\n         <source>&amp;Options...</source>\n-        <translation>\u0648 \u0627\u0646\u062a\u062e\u0627\u0628\u0647\u0627</translation>\n+        <translation>\u0627\u0646\u062a\u062e\u0627\u0628 \u0647\u0627</translation>\n     </message>\n     <message>\n         <source>&amp;Encrypt Wallet...</source>\n-        <translation>\u0648 \u0631\u0645\u0632\u06af\u0630\u0627\u0631\u06cc wallet</translation>\n+        <translation>\u0631\u0645\u0632\u06af\u0630\u0627\u0631\u06cc \u06a9\u06cc\u0641 \u067e\u0648\u0644</translation>\n     </message>\n     <message>\n         <source>&amp;Backup Wallet...</source>\n-        <translation>\u0648 \u06af\u0631\u0641\u062a\u0646 \u0646\u0633\u062e\u0647 \u067e\u06cc\u0634\u062a\u06cc\u0628\u0627\u0646 \u0627\u0632 wallet</translation>\n+        <translation>\u062a\u0647\u06cc\u0647 \u0646\u0633\u062e\u0647 \u067e\u0634\u062a\u06cc\u0628\u0627\u0646 \u0627\u0632 \u06a9\u06cc\u0641 \u067e\u0648\u0644</translation>\n     </message>\n     <message>\n         <source>&amp;Change Passphrase...</source>\n@@ -125,41 +205,53 @@\n         <source>&amp;Receiving addresses...</source>\n         <translation>\u062f\u0631\u06cc\u0627\u0641\u062a \u0622\u062f\u0631\u0633 \u0647\u0627</translation>\n     </message>\n+    <message>\n+        <source>Send coins to a Bitcoin address</source>\n+        <translation>\u0627\u0631\u0633\u0627\u0644 \u06a9\u0648\u06cc\u0646 \u0628\u0647 \u0622\u062f\u0631\u0633 \u0628\u06cc\u062a \u06a9\u0648\u06cc\u0646</translation>\n+    </message>\n     <message>\n         <source>Backup wallet to another location</source>\n         <translation>\u06af\u0631\u0641\u062a\u0646 \u0646\u0633\u062e\u0647 \u067e\u06cc\u0634\u062a\u06cc\u0628\u0627\u0646 \u062f\u0631 \u0622\u062f\u0631\u0633\u06cc \u062f\u06cc\u06af\u0631</translation>\n     </message>\n     <message>\n         <source>Change the passphrase used for wallet encryption</source>\n-        <translation>\u0631\u0645\u0632 \u0645\u0631\u0628\u0648\u0637 \u0628\u0647 \u0631\u0645\u0632\u06af\u0630\u0627\u0631\u06cc\u0650 wallet \u0631\u0627 \u062a\u063a\u06cc\u06cc\u0631 \u062f\u0647\u06cc\u062f</translation>\n+        <translation>\u0631\u0645\u0632 \u0639\u0628\u0648\u0631 \u0645\u0631\u0628\u0648\u0637 \u0628\u0647 \u0631\u0645\u0632\u06af\u0630\u0627\u0631\u06cc\u0650 \u06a9\u06cc\u0641 \u067e\u0648\u0644  \u0631\u0627 \u062a\u063a\u06cc\u06cc\u0631 \u062f\u0647\u06cc\u062f</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Debug window</source>\n+        <translation>\u067e\u0646\u062c\u0631\u0647 \u062f\u06cc\u0628\u0627\u06af</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Verify message...</source>\n+        <translation>\u062a\u0627\u06cc\u06cc\u062f \u067e\u06cc\u0627\u0645</translation>\n     </message>\n     <message>\n         <source>Bitcoin</source>\n-        <translation>bitcoin</translation>\n+        <translation>\u0628\u06cc\u062a \u06a9\u0648\u06cc\u0646</translation>\n     </message>\n     <message>\n         <source>Wallet</source>\n         <translation>\u06a9\u06cc\u0641 \u067e\u0648\u0644</translation>\n     </message>\n     <message>\n         <source>&amp;Send</source>\n-        <translation>\u0648 \u0627\u0631\u0633\u0627\u0644</translation>\n+        <translation>\u0627\u0631\u0633\u0627\u0644</translation>\n     </message>\n     <message>\n         <source>&amp;Show / Hide</source>\n-        <translation>&amp;\u0646\u0645\u0627\u06cc\u0634/ \u0639\u062f\u0645 \u0646\u0645\u0627\u06cc\u0634 \u0648</translation>\n+        <translation>\u0646\u0645\u0627\u06cc\u0634/ \u0639\u062f\u0645 \u0646\u0645\u0627\u06cc\u0634</translation>\n     </message>\n     <message>\n         <source>&amp;File</source>\n-        <translation>\u0648 \u0641\u0627\u06cc\u0644</translation>\n+        <translation>\u0641\u0627\u06cc\u0644</translation>\n     </message>\n     <message>\n         <source>&amp;Settings</source>\n-        <translation>\u0648 \u062a\u0646\u0638\u06cc\u0645\u0627\u062a</translation>\n+        <translation>\u062a\u0646\u0638\u06cc\u0645\u0627\u062a</translation>\n     </message>\n     <message>\n         <source>&amp;Help</source>\n-        <translation>\u0648 \u0631\u0627\u0647\u0646\u0645\u0627</translation>\n+        <translation>\u0631\u0627\u0647\u0646\u0645\u0627</translation>\n     </message>\n     <message>\n         <source>Tabs toolbar</source>\n@@ -171,15 +263,15 @@\n     </message>\n     <message>\n         <source>Up to date</source>\n-        <translation>\u0631\u0648\u0632\u0622\u0645\u062f</translation>\n+        <translation>\u0628\u0647 \u0631\u0648\u0632</translation>\n     </message>\n     <message>\n         <source>Catching up...</source>\n         <translation>\u062f\u0631 \u062d\u0627\u0644 \u0631\u0648\u0632\u0622\u0645\u062f \u0633\u0627\u0632\u06cc..</translation>\n     </message>\n     <message>\n         <source>Sent transaction</source>\n-        <translation>\u0627\u0631\u0633\u0627\u0644 \u062a\u0631\u0627\u06a9\u0646\u0634</translation>\n+        <translation>\u062a\u0631\u0627\u06a9\u0646\u0634 \u0627\u0631\u0633\u0627\u0644\u06cc</translation>\n     </message>\n     <message>\n         <source>Incoming transaction</source>\n@@ -196,22 +288,86 @@\n     </context>\n <context>\n     <name>CoinControlDialog</name>\n+    <message>\n+        <source>Coin Selection</source>\n+        <translation>\u0627\u0646\u062a\u062e\u0627\u0628 \u06a9\u0648\u06cc\u0646</translation>\n+    </message>\n+    <message>\n+        <source>Quantity:</source>\n+        <translation>\u0645\u0642\u062f\u0627\u0631</translation>\n+    </message>\n     <message>\n         <source>Amount:</source>\n         <translation>\u0645\u06cc\u0632\u0627\u0646 \u0648\u062c\u0647:</translation>\n     </message>\n+    <message>\n+        <source>Fee:</source>\n+        <translation>\u0647\u0632\u06cc\u0646\u0647</translation>\n+    </message>\n+    <message>\n+        <source>Change:</source>\n+        <translation>\u062a\u063a\u06cc\u06cc\u0631</translation>\n+    </message>\n+    <message>\n+        <source>(un)select all</source>\n+        <translation>(\u0639\u062f\u0645)\u0627\u0646\u062a\u062e\u0627\u0628 \u0647\u0645\u0647</translation>\n+    </message>\n     <message>\n         <source>Amount</source>\n         <translation>\u0645\u06cc\u0632\u0627\u0646</translation>\n     </message>\n+    <message>\n+        <source>Received with label</source>\n+        <translation>\u062f\u0631\u06cc\u0627\u0641\u062a \u0634\u062f\u0647 \u0628\u0627 \u0628\u0631\u0686\u0633\u0628</translation>\n+    </message>\n+    <message>\n+        <source>Received with address</source>\n+        <translation>\u062f\u0631\u06cc\u0627\u0641\u062a \u0634\u062f\u0647 \u0628\u0627 \u0622\u062f\u0631\u0633</translation>\n+    </message>\n     <message>\n         <source>Date</source>\n         <translation>\u062a\u0627\u0631\u06cc\u062e</translation>\n     </message>\n+    <message>\n+        <source>Confirmations</source>\n+        <translation>\u062a\u0627\u06cc\u06cc\u062f\u06cc\u0647 </translation>\n+    </message>\n     <message>\n         <source>Confirmed</source>\n         <translation>\u062a\u0627\u06cc\u06cc\u062f \u0634\u062f\u0647</translation>\n     </message>\n+    <message>\n+        <source>Copy address</source>\n+        <translation>\u06a9\u067e\u06cc \u0622\u062f\u0631\u0633</translation>\n+    </message>\n+    <message>\n+        <source>Copy label</source>\n+        <translation>\u06a9\u067e\u06cc \u0628\u0631\u0686\u0633\u0628</translation>\n+    </message>\n+    <message>\n+        <source>Copy amount</source>\n+        <translation>\u06a9\u067e\u06cc \u0645\u0642\u062f\u0627\u0631</translation>\n+    </message>\n+    <message>\n+        <source>Copy transaction ID</source>\n+        <translation>\u06a9\u067e\u06cc \u0634\u0646\u0627\u0633\u0647 \u062a\u0631\u0627\u06a9\u0646\u0634</translation>\n+    </message>\n+    <message>\n+        <source>Copy quantity</source>\n+        <translation>\u06a9\u067e\u06cc \u0645\u0642\u062f\u0627\u0631</translation>\n+    </message>\n+    <message>\n+        <source>Copy fee</source>\n+        <translation>\u06a9\u067e\u06cc \u0647\u0632\u06cc\u0646\u0647</translation>\n+    </message>\n+    <message>\n+        <source>yes</source>\n+        <translation>\u0628\u0644\u0647</translation>\n+    </message>\n+    <message>\n+        <source>no</source>\n+        <translation>\u062e\u06cc\u0631</translation>\n+    </message>\n     </context>\n <context>\n     <name>EditAddressDialog</name>\n@@ -221,15 +377,35 @@\n     </message>\n     <message>\n         <source>&amp;Label</source>\n-        <translation>\u0648 \u0628\u0631\u0686\u0633\u0628</translation>\n+        <translation>\u0628\u0631\u0686\u0633\u0628</translation>\n     </message>\n     <message>\n         <source>&amp;Address</source>\n-        <translation>\u062d\u0633\u0627\u0628&amp;</translation>\n+        <translation>\u0622\u062f\u0631\u0633</translation>\n+    </message>\n+    <message>\n+        <source>New receiving address</source>\n+        <translation>\u0622\u062f\u0631\u0633 \u062f\u0631\u06cc\u0627\u0641\u062a\u06cc \u062c\u062f\u06cc\u062f</translation>\n+    </message>\n+    <message>\n+        <source>New sending address</source>\n+        <translation>\u0622\u062f\u0631\u0633 \u0627\u0631\u0633\u0627\u0644\u06cc \u062c\u062f\u06cc\u062f</translation>\n+    </message>\n+    <message>\n+        <source>Edit receiving address</source>\n+        <translation>\u0648\u06cc\u0631\u0627\u06cc\u0634 \u0622\u062f\u0631\u0633 \u062f\u0631\u06cc\u0627\u0641\u062a\u06cc</translation>\n+    </message>\n+    <message>\n+        <source>Edit sending address</source>\n+        <translation>\u0648\u06cc\u0631\u0627\u06cc\u0634 \u0622\u062f\u0631\u0633 \u0627\u0631\u0633\u0627\u0644\u06cc</translation>\n     </message>\n     </context>\n <context>\n     <name>FreespaceChecker</name>\n+    <message>\n+        <source>name</source>\n+        <translation>\u0646\u0627\u0645</translation>\n+    </message>\n     </context>\n <context>\n     <name>HelpMessageDialog</name>\n@@ -244,6 +420,10 @@\n     </context>\n <context>\n     <name>Intro</name>\n+    <message>\n+        <source>Welcome</source>\n+        <translation>\u062e\u0648\u0634 \u0622\u0645\u062f\u06cc\u062f</translation>\n+    </message>\n     <message>\n         <source>Error</source>\n         <translation>\u062e\u0637\u0627</translation>\n@@ -255,6 +435,18 @@\n         <source>Form</source>\n         <translation>\u0641\u0631\u0645</translation>\n     </message>\n+    <message>\n+        <source>Unknown...</source>\n+        <translation>\u0646\u0627\u0634\u0646\u0627\u0633...</translation>\n+    </message>\n+    <message>\n+        <source>calculating...</source>\n+        <translation>\u062f\u0631 \u062d\u0627\u0644 \u0645\u062d\u0627\u0633\u0628\u0647...</translation>\n+    </message>\n+    <message>\n+        <source>Hide</source>\n+        <translation>\u067e\u0646\u0647\u0627\u0646 \u06a9\u0631\u062f\u0646</translation>\n+    </message>\n     </context>\n <context>\n     <name>OpenURIDialog</name>\n@@ -263,7 +455,15 @@\n     <name>OptionsDialog</name>\n     <message>\n         <source>Options</source>\n-        <translation>\u0627\u0646\u062a\u062e\u0627\u0628/\u0622\u067e\u0634\u0646</translation>\n+        <translation>\u06af\u0632\u06cc\u0646\u0647 \u0647\u0627</translation>\n+    </message>\n+    <message>\n+        <source>MB</source>\n+        <translation>\u0645\u06af\u0627\u0628\u0627\u06cc\u062a</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Reset Options</source>\n+        <translation>\u062a\u0646\u0638\u06cc\u0645 \u0645\u062c\u062f\u062f \u06af\u0632\u06cc\u0646\u0647 \u0647\u0627</translation>\n     </message>\n     <message>\n         <source>&amp;Network</source>\n@@ -273,13 +473,25 @@\n         <source>W&amp;allet</source>\n         <translation>\u06a9\u06cc\u0641 \u067e\u0648\u0644</translation>\n     </message>\n+    <message>\n+        <source>&amp;Port:</source>\n+        <translation>\u067e\u0648\u0631\u062a:</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Window</source>\n+        <translation>\u067e\u0646\u062c\u0631\u0647</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Display</source>\n+        <translation>\u0646\u0645\u0627\u06cc\u0634</translation>\n+    </message>\n     <message>\n         <source>&amp;OK</source>\n-        <translation>\u0648 \u062a\u0627\u06cc\u06cc\u062f</translation>\n+        <translation>\u062a\u0627\u06cc\u06cc\u062f</translation>\n     </message>\n     <message>\n         <source>&amp;Cancel</source>\n-        <translation>\u0648 \u0631\u062f</translation>\n+        <translation>\u0644\u063a\u0648</translation>\n     </message>\n     <message>\n         <source>default</source>\n@@ -296,6 +508,26 @@\n         <source>The displayed information may be out of date. Your wallet automatically synchronizes with the Bitcoin network after a connection is established, but this process has not completed yet.</source>\n         <translation>\u0627\u0637\u0644\u0627\u0639\u0627\u062a \u0646\u0645\u0627\u06cc\u0634 \u062f\u0627\u062f\u0647 \u0634\u062f\u0647 \u0645\u0645\u06a9\u0646 \u0627\u0633\u062a \u0631\u0648\u0632\u0622\u0645\u062f \u0646\u0628\u0627\u0634\u062f. wallet \u0634\u0645\u0627 \u0628\u0647 \u0635\u0648\u0631\u062a \u062e\u0648\u062f\u06a9\u0627\u0631 \u0628\u0639\u062f \u0627\u0632 \u0628\u0631\u0642\u0631\u0627\u0631\u06cc \u0627\u062a\u0635\u0627\u0644 \u0628\u0627 \u0634\u0628\u06a9\u0647 bitcoin \u0628\u0647 \u0631\u0648\u0632 \u0645\u06cc \u0634\u0648\u062f \u0627\u0645\u0627 \u0627\u06cc\u0646 \u0641\u0631\u0627\u06cc\u0646\u062f \u0647\u0646\u0648\u0632 \u062a\u06a9\u0645\u06cc\u0644 \u0646\u0634\u062f\u0647 \u0627\u0633\u062a.</translation>\n     </message>\n+    <message>\n+        <source>Available:</source>\n+        <translation>\u062f\u0631 \u062f\u0633\u062a\u0631\u0633:</translation>\n+    </message>\n+    <message>\n+        <source>Pending:</source>\n+        <translation>\u062f\u0631 \u062d\u0627\u0644 \u0627\u0646\u062a\u0638\u0627\u0631:</translation>\n+    </message>\n+    <message>\n+        <source>Total:</source>\n+        <translation>\u06a9\u0644:</translation>\n+    </message>\n+    <message>\n+        <source>Spendable:</source>\n+        <translation>\u0642\u0627\u0628\u0644 \u0645\u0635\u0631\u0641:</translation>\n+    </message>\n+    <message>\n+        <source>Recent transactions</source>\n+        <translation>\u062a\u0631\u0627\u06a9\u0646\u0634 \u0647\u0627\u06cc \u0627\u062e\u06cc\u0631</translation>\n+    </message>\n     </context>\n <context>\n     <name>PaymentServer</name>\n@@ -347,22 +579,46 @@\n     </message>\n     <message>\n         <source>&amp;Label:</source>\n-        <translation>\u0648 \u0628\u0631\u0686\u0633\u0628</translation>\n+        <translation>\u0628\u0631\u0686\u0633\u0628:</translation>\n     </message>\n     <message>\n         <source>&amp;Message:</source>\n         <translation>\u067e\u06cc\u0627\u0645:</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Remove</source>\n+        <translation>\u062d\u0630\u0641</translation>\n+    </message>\n+    <message>\n+        <source>Copy label</source>\n+        <translation>\u06a9\u067e\u06cc \u0628\u0631\u0686\u0633\u0628</translation>\n+    </message>\n+    <message>\n+        <source>Copy amount</source>\n+        <translation>\u06a9\u067e\u06cc \u0645\u0642\u062f\u0627\u0631</translation>\n+    </message>\n+</context>\n <context>\n     <name>ReceiveRequestDialog</name>\n     <message>\n         <source>Copy &amp;Address</source>\n         <translation>\u06a9\u067e\u06cc \u0622\u062f\u0631\u0633</translation>\n     </message>\n+    <message>\n+        <source>Address</source>\n+        <translation>\u0622\u062f\u0631\u0633</translation>\n+    </message>\n+    <message>\n+        <source>Label</source>\n+        <translation>\u0628\u0631\u0686\u0633\u0628</translation>\n+    </message>\n     </context>\n <context>\n     <name>RecentRequestsTableModel</name>\n+    <message>\n+        <source>Label</source>\n+        <translation>\u0628\u0631\u0686\u0633\u0628</translation>\n+    </message>\n     </context>\n <context>\n     <name>SendCoinsDialog</name>\n@@ -374,14 +630,34 @@\n         <source>Insufficient funds!</source>\n         <translation>\u0648\u062c\u0648\u0647 \u0646\u0627\u06a9\u0627\u0641\u06cc</translation>\n     </message>\n+    <message>\n+        <source>Quantity:</source>\n+        <translation>\u0645\u0642\u062f\u0627\u0631</translation>\n+    </message>\n     <message>\n         <source>Amount:</source>\n         <translation>\u0645\u06cc\u0632\u0627\u0646 \u0648\u062c\u0647:</translation>\n     </message>\n+    <message>\n+        <source>Fee:</source>\n+        <translation>\u0647\u0632\u06cc\u0646\u0647</translation>\n+    </message>\n+    <message>\n+        <source>Change:</source>\n+        <translation>\u062a\u063a\u06cc\u06cc\u0631</translation>\n+    </message>\n+    <message>\n+        <source>Hide</source>\n+        <translation>\u067e\u0646\u0647\u0627\u0646 \u06a9\u0631\u062f\u0646</translation>\n+    </message>\n     <message>\n         <source>Send to multiple recipients at once</source>\n         <translation>\u0627\u0631\u0633\u0627\u0644 \u0647\u0645\u0632\u0645\u0627\u0646 \u0628\u0647 \u06af\u06cc\u0631\u0646\u062f\u0647 \u0647\u0627\u06cc \u0645\u062a\u0639\u062f\u062f</translation>\n     </message>\n+    <message>\n+        <source>Clear &amp;All</source>\n+        <translation>\u067e\u0627\u06a9 \u06a9\u0631\u062f\u0646 \u0647\u0645\u0647</translation>\n+    </message>\n     <message>\n         <source>Balance:</source>\n         <translation>\u0645\u0627\u0646\u062f\u0647 \u062d\u0633\u0627\u0628:</translation>\n@@ -394,32 +670,36 @@\n         <source>S&amp;end</source>\n         <translation>\u0648 \u0627\u0631\u0633\u0627\u0644</translation>\n     </message>\n+    <message>\n+        <source>Copy quantity</source>\n+        <translation>\u06a9\u067e\u06cc \u0645\u0642\u062f\u0627\u0631</translation>\n+    </message>\n+    <message>\n+        <source>Copy amount</source>\n+        <translation>\u06a9\u067e\u06cc \u0645\u0642\u062f\u0627\u0631</translation>\n+    </message>\n+    <message>\n+        <source>Copy fee</source>\n+        <translation>\u06a9\u067e\u06cc \u0647\u0632\u06cc\u0646\u0647</translation>\n+    </message>\n     </context>\n <context>\n     <name>SendCoinsEntry</name>\n     <message>\n         <source>A&amp;mount:</source>\n-        <translation>\u0648 \u0645\u06cc\u0632\u0627\u0646 \u0648\u062c\u0647</translation>\n+        <translation>\u0645\u06cc\u0632\u0627\u0646 \u0648\u062c\u0647</translation>\n     </message>\n     <message>\n         <source>Pay &amp;To:</source>\n-        <translation>\u067e\u0631\u062f\u0627\u062e\u062a \u0648 \u0628\u0647 \u0686\u0647 \u06a9\u0633\u06cc</translation>\n+        <translation>\u067e\u0631\u062f\u0627\u062e\u062a \u0628\u0647:</translation>\n     </message>\n     <message>\n         <source>&amp;Label:</source>\n-        <translation>\u0648 \u0628\u0631\u0686\u0633\u0628</translation>\n-    </message>\n-    <message>\n-        <source>Alt+A</source>\n-        <translation>Alt \u0648 A</translation>\n+        <translation>\u0628\u0631\u0686\u0633\u0628:</translation>\n     </message>\n     <message>\n         <source>Paste address from clipboard</source>\n-        <translation>\u0622\u062f\u0631\u0633 \u0631\u0627 \u0628\u0631 \u06a9\u0644\u06cc\u067e \u0628\u0648\u0631\u062f \u06a9\u067e\u06cc \u06a9\u0646\u06cc\u062f</translation>\n-    </message>\n-    <message>\n-        <source>Alt+P</source>\n-        <translation>Alt \u0648 P</translation>\n+        <translation>\u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0627\u0632 \u0622\u062f\u0631\u0633 \u06a9\u0644\u06cc\u067e \u0628\u0648\u0631\u062f</translation>\n     </message>\n     <message>\n         <source>Message:</source>\n@@ -448,23 +728,39 @@\n     <name>SignVerifyMessageDialog</name>\n     <message>\n         <source>&amp;Sign Message</source>\n-        <translation>\u0648 \u0627\u0645\u0636\u0627\u06cc \u067e\u06cc\u0627\u0645 </translation>\n-    </message>\n-    <message>\n-        <source>Alt+A</source>\n-        <translation>Alt \u0648 A</translation>\n+        <translation>\u0627\u0645\u0636\u0627\u06cc \u067e\u06cc\u0627\u0645 </translation>\n     </message>\n     <message>\n         <source>Paste address from clipboard</source>\n         <translation>\u0622\u062f\u0631\u0633 \u0631\u0627 \u0628\u0631 \u06a9\u0644\u06cc\u067e \u0628\u0648\u0631\u062f \u06a9\u067e\u06cc \u06a9\u0646\u06cc\u062f</translation>\n     </message>\n     <message>\n-        <source>Alt+P</source>\n-        <translation>Alt \u0648 P</translation>\n+        <source>Enter the message you want to sign here</source>\n+        <translation>\u067e\u06cc\u0627\u0645\u06cc \u06a9\u0647 \u0645\u06cc \u062e\u0648\u0627\u0647\u06cc\u062f \u0627\u0645\u0636\u0627 \u06a9\u0646\u06cc\u062f \u0631\u0627 \u0627\u06cc\u0646\u062c\u0627 \u0648\u0627\u0631\u062f \u06a9\u0646\u06cc\u062f</translation>\n+    </message>\n+    <message>\n+        <source>Signature</source>\n+        <translation>\u0627\u0645\u0636\u0627</translation>\n     </message>\n     <message>\n         <source>Sign &amp;Message</source>\n-        <translation>\u0648 \u0627\u0645\u0636\u0627\u06cc \u067e\u06cc\u0627\u0645 </translation>\n+        <translation>\u0627\u0645\u0636\u0627\u06cc \u067e\u06cc\u0627\u0645 </translation>\n+    </message>\n+    <message>\n+        <source>Clear &amp;All</source>\n+        <translation>\u067e\u0627\u06a9 \u06a9\u0631\u062f\u0646 \u0647\u0645\u0647</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Verify Message</source>\n+        <translation>\u062a\u0627\u06cc\u06cc\u062f \u067e\u06cc\u0627\u0645</translation>\n+    </message>\n+    <message>\n+        <source>Verify &amp;Message</source>\n+        <translation>\u062a\u0627\u06cc\u06cc\u062f \u067e\u06cc\u0627\u0645</translation>\n+    </message>\n+    <message>\n+        <source>The entered address is invalid.</source>\n+        <translation>\u0622\u062f\u0631\u0633 \u0648\u0627\u0631\u062f \u0634\u062f\u0647 \u0646\u0627\u0645\u0639\u062a\u0628\u0631 \u0627\u0633\u062a.</translation>\n     </message>\n     </context>\n <context>\n@@ -479,6 +775,26 @@\n     </context>\n <context>\n     <name>TransactionDesc</name>\n+    <message>\n+        <source>Status</source>\n+        <translation>\u0648\u0636\u0639\u06cc\u062a</translation>\n+    </message>\n+    <message>\n+        <source>Source</source>\n+        <translation>\u0645\u0646\u0628\u0639</translation>\n+    </message>\n+    <message>\n+        <source>Generated</source>\n+        <translation>\u062a\u0648\u0644\u06cc\u062f \u0634\u062f\u0647</translation>\n+    </message>\n+    <message>\n+        <source>From</source>\n+        <translation>\u0627\u0632</translation>\n+    </message>\n+    <message>\n+        <source>To</source>\n+        <translation>\u0628\u0647</translation>\n+    </message>\n     </context>\n <context>\n     <name>TransactionDescDialog</name>\n@@ -489,9 +805,65 @@\n     </context>\n <context>\n     <name>TransactionTableModel</name>\n+    <message>\n+        <source>Label</source>\n+        <translation>\u0628\u0631\u0686\u0633\u0628</translation>\n+    </message>\n+    <message>\n+        <source>Unconfirmed</source>\n+        <translation>\u062a\u0627\u06cc\u06cc\u062f \u0646\u0634\u062f\u0647</translation>\n+    </message>\n+    <message>\n+        <source>Received from</source>\n+        <translation>\u062f\u0631\u06cc\u0627\u0641\u062a \u0634\u062f\u0647 \u0627\u0632</translation>\n+    </message>\n+    <message>\n+        <source>Sent to</source>\n+        <translation>\u0627\u0631\u0633\u0627\u0644 \u0634\u062f\u0647 \u0628\u0647</translation>\n+    </message>\n+    <message>\n+        <source>Mined</source>\n+        <translation>\u0627\u0633\u062a\u062e\u0631\u0627\u062c \u0634\u062f\u0647</translation>\n+    </message>\n     </context>\n <context>\n     <name>TransactionView</name>\n+    <message>\n+        <source>Sent to</source>\n+        <translation>\u0627\u0631\u0633\u0627\u0644 \u0634\u062f\u0647 \u0628\u0647</translation>\n+    </message>\n+    <message>\n+        <source>Mined</source>\n+        <translation>\u0627\u0633\u062a\u062e\u0631\u0627\u062c \u0634\u062f\u0647</translation>\n+    </message>\n+    <message>\n+        <source>Copy address</source>\n+        <translation>\u06a9\u067e\u06cc \u0622\u062f\u0631\u0633</translation>\n+    </message>\n+    <message>\n+        <source>Copy label</source>\n+        <translation>\u06a9\u067e\u06cc \u0628\u0631\u0686\u0633\u0628</translation>\n+    </message>\n+    <message>\n+        <source>Copy amount</source>\n+        <translation>\u06a9\u067e\u06cc \u0645\u0642\u062f\u0627\u0631</translation>\n+    </message>\n+    <message>\n+        <source>Copy transaction ID</source>\n+        <translation>\u06a9\u067e\u06cc \u0634\u0646\u0627\u0633\u0647 \u062a\u0631\u0627\u06a9\u0646\u0634</translation>\n+    </message>\n+    <message>\n+        <source>Label</source>\n+        <translation>\u0628\u0631\u0686\u0633\u0628</translation>\n+    </message>\n+    <message>\n+        <source>Address</source>\n+        <translation>\u0622\u062f\u0631\u0633</translation>\n+    </message>\n+    <message>\n+        <source>Exporting Failed</source>\n+        <translation>\u06af\u0631\u0641\u062a\u0646 \u062e\u0631\u0648\u062c\u06cc \u0628\u0647 \u0645\u0634\u06a9\u0644 \u062e\u0648\u0631\u062f</translation>\n+    </message>\n     </context>\n <context>\n     <name>UnitDisplayStatusBarControl</name>"
      },
      {
        "sha": "d13a5639e59d68357ade76da6ae47488ed4850a0",
        "filename": "src/qt/locale/bitcoin_fi.ts",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/locale/bitcoin_fi.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/locale/bitcoin_fi.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_fi.ts?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767"
      },
      {
        "sha": "830e6bb05f123d56a474b1c0dc789d7f314fbd82",
        "filename": "src/qt/locale/bitcoin_fr.ts",
        "status": "modified",
        "additions": 13,
        "deletions": 13,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/locale/bitcoin_fr.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/locale/bitcoin_fr.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_fr.ts?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767"
      },
      {
        "sha": "c10cdf95a2ffaa8d834825b45edd36fe87f9090b",
        "filename": "src/qt/locale/bitcoin_fr_FR.ts",
        "status": "modified",
        "additions": 385,
        "deletions": 9,
        "changes": 394,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/locale/bitcoin_fr_FR.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/locale/bitcoin_fr_FR.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_fr_FR.ts?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767"
      },
      {
        "sha": "82be81e9219c58f2f07ae2c1ca1fbc256f280819",
        "filename": "src/qt/locale/bitcoin_he.ts",
        "status": "modified",
        "additions": 1217,
        "deletions": 31,
        "changes": 1248,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/locale/bitcoin_he.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/locale/bitcoin_he.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_he.ts?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767"
      },
      {
        "sha": "e1db9c25299ef6de17b96bdf0aeb5350d6d8d43b",
        "filename": "src/qt/locale/bitcoin_hi_IN.ts",
        "status": "modified",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/locale/bitcoin_hi_IN.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/locale/bitcoin_hi_IN.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_hi_IN.ts?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767"
      },
      {
        "sha": "5c98319c6bd358495e8bd044f1e4ec6a352fba87",
        "filename": "src/qt/locale/bitcoin_hu.ts",
        "status": "modified",
        "additions": 28,
        "deletions": 0,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/locale/bitcoin_hu.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/locale/bitcoin_hu.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_hu.ts?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767"
      },
      {
        "sha": "89ec216ab3dfab0b4c079338acac154d30028eb5",
        "filename": "src/qt/locale/bitcoin_id_ID.ts",
        "status": "modified",
        "additions": 427,
        "deletions": 7,
        "changes": 434,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/locale/bitcoin_id_ID.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/locale/bitcoin_id_ID.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_id_ID.ts?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767"
      },
      {
        "sha": "d38459c6ff8e13ba796223b9d77415636e1f6d50",
        "filename": "src/qt/locale/bitcoin_it.ts",
        "status": "modified",
        "additions": 994,
        "deletions": 34,
        "changes": 1028,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/locale/bitcoin_it.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/locale/bitcoin_it.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_it.ts?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767"
      },
      {
        "sha": "ebb30f13e4b62d1dd3a20716791b385b8a418125",
        "filename": "src/qt/locale/bitcoin_it_IT.ts",
        "status": "modified",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/locale/bitcoin_it_IT.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/locale/bitcoin_it_IT.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_it_IT.ts?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767"
      },
      {
        "sha": "c51a611b3c2bbe1b1d321c6cb298d94d9ad6b751",
        "filename": "src/qt/locale/bitcoin_ka.ts",
        "status": "modified",
        "additions": 167,
        "deletions": 3,
        "changes": 170,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/locale/bitcoin_ka.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/locale/bitcoin_ka.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ka.ts?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767"
      },
      {
        "sha": "c104bdd0db857e1cbb0fb51a575bfb1b22d4d411",
        "filename": "src/qt/locale/bitcoin_ko_KR.ts",
        "status": "modified",
        "additions": 946,
        "deletions": 74,
        "changes": 1020,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/locale/bitcoin_ko_KR.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/locale/bitcoin_ko_KR.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ko_KR.ts?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767"
      },
      {
        "sha": "7844093e3bb645e0e7dd6726328157d2b6c5f4aa",
        "filename": "src/qt/locale/bitcoin_ms_MY.ts",
        "status": "modified",
        "additions": 333,
        "deletions": 5,
        "changes": 338,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/locale/bitcoin_ms_MY.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/locale/bitcoin_ms_MY.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ms_MY.ts?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767"
      },
      {
        "sha": "14919c440dfc54f069c64f9152e2eb823414d793",
        "filename": "src/qt/locale/bitcoin_nb.ts",
        "status": "modified",
        "additions": 528,
        "deletions": 12,
        "changes": 540,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/locale/bitcoin_nb.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/locale/bitcoin_nb.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_nb.ts?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767"
      },
      {
        "sha": "be6e8e0391055a6238fee707cdfc8a3f186d404c",
        "filename": "src/qt/locale/bitcoin_ne.ts",
        "status": "modified",
        "additions": 76,
        "deletions": 0,
        "changes": 76,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/locale/bitcoin_ne.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/locale/bitcoin_ne.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ne.ts?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767"
      },
      {
        "sha": "e523e832810d794601fce99dba30eb959d4057e3",
        "filename": "src/qt/locale/bitcoin_nl.ts",
        "status": "modified",
        "additions": 298,
        "deletions": 6,
        "changes": 304,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/locale/bitcoin_nl.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/locale/bitcoin_nl.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_nl.ts?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767"
      },
      {
        "sha": "3675bd060a8e44d8cc94534afecb42197b7b8b35",
        "filename": "src/qt/locale/bitcoin_pl.ts",
        "status": "modified",
        "additions": 196,
        "deletions": 12,
        "changes": 208,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/locale/bitcoin_pl.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/locale/bitcoin_pl.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_pl.ts?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767"
      },
      {
        "sha": "59724318bbf8a1994dff0f561c38ecdc6c378f2b",
        "filename": "src/qt/locale/bitcoin_pt_BR.ts",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/locale/bitcoin_pt_BR.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/locale/bitcoin_pt_BR.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_pt_BR.ts?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767"
      },
      {
        "sha": "a45bb59239718ce5989728bc64cfff149024eab2",
        "filename": "src/qt/locale/bitcoin_pt_PT.ts",
        "status": "modified",
        "additions": 834,
        "deletions": 14,
        "changes": 848,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/locale/bitcoin_pt_PT.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/locale/bitcoin_pt_PT.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_pt_PT.ts?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767"
      },
      {
        "sha": "7d013416ff76b9f7087dcba43ef740b2753f7162",
        "filename": "src/qt/locale/bitcoin_ru.ts",
        "status": "modified",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/locale/bitcoin_ru.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/locale/bitcoin_ru.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ru.ts?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767"
      },
      {
        "sha": "0cb0e7f6e4552f26cac20871af348fcda8cf29b2",
        "filename": "src/qt/locale/bitcoin_ru_RU.ts",
        "status": "modified",
        "additions": 613,
        "deletions": 9,
        "changes": 622,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/locale/bitcoin_ru_RU.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/locale/bitcoin_ru_RU.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ru_RU.ts?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767"
      },
      {
        "sha": "fdf9fc6db6e4bc8f367276e494c6a3c696942bdc",
        "filename": "src/qt/locale/bitcoin_sk.ts",
        "status": "modified",
        "additions": 1313,
        "deletions": 45,
        "changes": 1358,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/locale/bitcoin_sk.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/locale/bitcoin_sk.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_sk.ts?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767"
      },
      {
        "sha": "ae10378bf23bd38c9089fad85d28884f49a09575",
        "filename": "src/qt/locale/bitcoin_sl_SI.ts",
        "status": "modified",
        "additions": 94,
        "deletions": 2,
        "changes": 96,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/locale/bitcoin_sl_SI.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/locale/bitcoin_sl_SI.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_sl_SI.ts?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767"
      },
      {
        "sha": "ac5426f1917dd4e6a903b019e87a5dcfff6eaa0d",
        "filename": "src/qt/locale/bitcoin_sv.ts",
        "status": "modified",
        "additions": 888,
        "deletions": 20,
        "changes": 908,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/locale/bitcoin_sv.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/locale/bitcoin_sv.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_sv.ts?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767"
      },
      {
        "sha": "321effc7e136bb69e3a5b47f4078126cb36a29db",
        "filename": "src/qt/locale/bitcoin_tr.ts",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/locale/bitcoin_tr.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/locale/bitcoin_tr.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_tr.ts?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767"
      },
      {
        "sha": "4cff6bf3700e3552c21448b9a8fe2f09898745b3",
        "filename": "src/qt/locale/bitcoin_uk.ts",
        "status": "modified",
        "additions": 1029,
        "deletions": 25,
        "changes": 1054,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/locale/bitcoin_uk.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/locale/bitcoin_uk.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_uk.ts?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767"
      },
      {
        "sha": "bd0ef617ae7892504cd71bb1653c18a3e4a86619",
        "filename": "src/qt/locale/bitcoin_ur_PK.ts",
        "status": "modified",
        "additions": 24,
        "deletions": 0,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/locale/bitcoin_ur_PK.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/locale/bitcoin_ur_PK.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ur_PK.ts?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767"
      },
      {
        "sha": "8c4bececa1462f88c0f509fbec2e22d327eeb58b",
        "filename": "src/qt/locale/bitcoin_vi_VN.ts",
        "status": "modified",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/locale/bitcoin_vi_VN.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/locale/bitcoin_vi_VN.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_vi_VN.ts?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767"
      },
      {
        "sha": "77d32402d3cf694653922f14b1121a21495ab177",
        "filename": "src/qt/locale/bitcoin_zh_CN.ts",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/locale/bitcoin_zh_CN.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/locale/bitcoin_zh_CN.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_zh_CN.ts?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767"
      },
      {
        "sha": "44d4ac1e76287f17d87f5eac2d61c8657e88a9f6",
        "filename": "src/qt/locale/bitcoin_zh_HK.ts",
        "status": "modified",
        "additions": 376,
        "deletions": 6,
        "changes": 382,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/locale/bitcoin_zh_HK.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/locale/bitcoin_zh_HK.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_zh_HK.ts?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767"
      },
      {
        "sha": "9e7de0f98fbdf7f8c4fd4ee70b50e14baa494c14",
        "filename": "src/qt/macdockiconhandler.mm",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/macdockiconhandler.mm",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/macdockiconhandler.mm",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/macdockiconhandler.mm?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767"
      },
      {
        "sha": "3a005c3c460e0b430d6802235474ed32423d2281",
        "filename": "src/qt/macnotificationhandler.h",
        "status": "modified",
        "additions": 2,
        "deletions": 5,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/macnotificationhandler.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/macnotificationhandler.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/macnotificationhandler.h?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767"
      },
      {
        "sha": "1b16c5f5240cdfbf4d5fe0de15778677733d7900",
        "filename": "src/qt/macnotificationhandler.mm",
        "status": "modified",
        "additions": 1,
        "deletions": 15,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/macnotificationhandler.mm",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/macnotificationhandler.mm",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/macnotificationhandler.mm?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767"
      },
      {
        "sha": "e32a0bdda8ebf5cb2c7452c0752b5b0acef78662",
        "filename": "src/qt/modaloverlay.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 12,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/modaloverlay.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/modaloverlay.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/modaloverlay.cpp?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767"
      },
      {
        "sha": "cda23f9540e898805fdfd40a609286219bc5da84",
        "filename": "src/qt/modaloverlay.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/modaloverlay.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/modaloverlay.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/modaloverlay.h?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767"
      },
      {
        "sha": "4b81c54d36c899946e0df66b68f2a185c68a5a41",
        "filename": "src/qt/networkstyle.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/networkstyle.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/networkstyle.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/networkstyle.cpp?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767"
      },
      {
        "sha": "937928315b1dda8aea0c8bbf30e9a6a7f0922958",
        "filename": "src/qt/notificator.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 67,
        "changes": 68,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/notificator.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/notificator.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/notificator.cpp?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767"
      },
      {
        "sha": "67f2b1df6992cf3662a146b7d330db6266541758",
        "filename": "src/qt/notificator.h",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/notificator.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/notificator.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/notificator.h?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767"
      },
      {
        "sha": "3ee656d4703b15822f988f29e38a7add2bd504fc",
        "filename": "src/qt/openuridialog.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/openuridialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/openuridialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/openuridialog.cpp?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767"
      },
      {
        "sha": "53e2e5053c5a2c407270a54131b101763c1363f3",
        "filename": "src/qt/optionsdialog.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 4,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/optionsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/optionsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsdialog.cpp?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767"
      },
      {
        "sha": "fb8c60d100168f8ec9719e5f5ce7a8fb2c4fff42",
        "filename": "src/qt/optionsmodel.cpp",
        "status": "modified",
        "additions": 37,
        "deletions": 15,
        "changes": 52,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/optionsmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/optionsmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsmodel.cpp?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767"
      },
      {
        "sha": "0ac82a4148b41494b1148fd683b6daa91737c878",
        "filename": "src/qt/optionsmodel.h",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/optionsmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/optionsmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsmodel.h?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767"
      },
      {
        "sha": "ba1839e7b4f554d98dc947d70bebbff57231ac30",
        "filename": "src/qt/overviewpage.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/overviewpage.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/overviewpage.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/overviewpage.cpp?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767"
      },
      {
        "sha": "d3799f59ab4ba277986c621cf67ab471e277cd23",
        "filename": "src/qt/paymentrequestplus.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/paymentrequestplus.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/paymentrequestplus.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/paymentrequestplus.cpp?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767"
      },
      {
        "sha": "169684cf6d84acd27f4bbd469b043c3f006f3e7a",
        "filename": "src/qt/paymentserver.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 14,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/paymentserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/paymentserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/paymentserver.cpp?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767"
      },
      {
        "sha": "98b2364b9236cef8b6e5756a4c48d255140c3375",
        "filename": "src/qt/paymentserver.h",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/paymentserver.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/paymentserver.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/paymentserver.h?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767"
      },
      {
        "sha": "4aa6375d8a1230cce9b82ff6830fca5e3df5143b",
        "filename": "src/qt/receiverequestdialog.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/receiverequestdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/receiverequestdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/receiverequestdialog.cpp?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767"
      },
      {
        "sha": "1c4f7aca86322ec424877f20fcf3488127ca1239",
        "filename": "src/qt/recentrequeststablemodel.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/recentrequeststablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/recentrequeststablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/recentrequeststablemodel.cpp?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767"
      },
      {
        "sha": "d895fc16630c96c621bd2c358adcb7499d156781",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 20,
        "deletions": 6,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767"
      },
      {
        "sha": "da06818f877c81a7d64387fff54c17ce8d481856",
        "filename": "src/qt/rpcconsole.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/rpcconsole.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/rpcconsole.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.h?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767"
      },
      {
        "sha": "6309070fef16074f7a9016b36f9d08e6315a10de",
        "filename": "src/qt/sendcoinsdialog.cpp",
        "status": "modified",
        "additions": 36,
        "deletions": 66,
        "changes": 102,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/sendcoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/sendcoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.cpp?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767"
      },
      {
        "sha": "70b4aa5a03ab3080bfd0924db680604971049db2",
        "filename": "src/qt/sendcoinsdialog.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/sendcoinsdialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/sendcoinsdialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.h?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767"
      },
      {
        "sha": "cba9d4da38113ca4cc301897b27d681e8c97daeb",
        "filename": "src/qt/signverifymessagedialog.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 16,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/signverifymessagedialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/signverifymessagedialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/signverifymessagedialog.cpp?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767"
      },
      {
        "sha": "a1fbba963c7e9c01dcac60a76f5fe885213b7462",
        "filename": "src/qt/splashscreen.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 21,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/splashscreen.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/splashscreen.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/splashscreen.cpp?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767"
      },
      {
        "sha": "c6cfd503f7f105c6e7e768e313c771d85b7fb853",
        "filename": "src/qt/splashscreen.h",
        "status": "modified",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/splashscreen.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/splashscreen.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/splashscreen.h?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767"
      },
      {
        "sha": "273bd1048720ae45b70132bef1199c1b343ebc42",
        "filename": "src/qt/test/paymentservertests.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 10,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/test/paymentservertests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/test/paymentservertests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/paymentservertests.cpp?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767"
      },
      {
        "sha": "faf167f2c6dcdfa9128485de4898bc9df5183fb2",
        "filename": "src/qt/test/paymentservertests.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/test/paymentservertests.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/test/paymentservertests.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/paymentservertests.h?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767"
      },
      {
        "sha": "70fdd4bf585228d110f8e3d9ecd2f54c51272ab7",
        "filename": "src/qt/test/rpcnestedtests.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 11,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/test/rpcnestedtests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/test/rpcnestedtests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/rpcnestedtests.cpp?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767"
      },
      {
        "sha": "4c04e67ccce9687ce69fd1e46c56f09ffab5df71",
        "filename": "src/qt/test/test_main.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 2,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/test/test_main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/test/test_main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/test_main.cpp?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767"
      },
      {
        "sha": "eeae58bd05a9af7e06789a0955e9b2cd29990b88",
        "filename": "src/qt/test/wallettests.cpp",
        "status": "modified",
        "additions": 75,
        "deletions": 6,
        "changes": 81,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/test/wallettests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/test/wallettests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/wallettests.cpp?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767"
      },
      {
        "sha": "74f5c774a0db016191aeb238a9dcce045f35d466",
        "filename": "src/qt/transactiondesc.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 6,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/transactiondesc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/transactiondesc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactiondesc.cpp?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767"
      },
      {
        "sha": "d40ffd22cd10e4fdf70ff377e6a352a0b30dc6e2",
        "filename": "src/qt/transactionrecord.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/transactionrecord.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/transactionrecord.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionrecord.cpp?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767"
      },
      {
        "sha": "a26e676142531c905c564e8eee6d77ac5eadb4a2",
        "filename": "src/qt/transactionrecord.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/transactionrecord.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/transactionrecord.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionrecord.h?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767"
      },
      {
        "sha": "b1f81498b2c2e19b9b1c0a09d83ee7426598a59b",
        "filename": "src/qt/transactiontablemodel.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/transactiontablemodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/transactiontablemodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactiontablemodel.h?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767"
      },
      {
        "sha": "39dfdb587c2a6c1d0288a400d8dbb7e4551bfa8b",
        "filename": "src/qt/transactionview.cpp",
        "status": "modified",
        "additions": 21,
        "deletions": 8,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/transactionview.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/transactionview.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionview.cpp?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767"
      },
      {
        "sha": "5b4cfd4a88d3822eb1c3559317a53374fd6b651e",
        "filename": "src/qt/transactionview.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/transactionview.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/transactionview.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionview.h?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767"
      },
      {
        "sha": "5d8c23d13c11f64805f8681e940ca09e73427777",
        "filename": "src/qt/utilitydialog.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/utilitydialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/utilitydialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/utilitydialog.cpp?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767"
      },
      {
        "sha": "738eeed136a655eb625a21fb4fcf031aec4904a0",
        "filename": "src/qt/utilitydialog.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/utilitydialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/utilitydialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/utilitydialog.h?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767"
      },
      {
        "sha": "714a59431800924102a6865e6ed83f9df12d5084",
        "filename": "src/qt/walletframe.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/walletframe.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62b5494393ac3d68acf2c63a01dd4036e9e48767/src/qt/walletframe.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletframe.cpp?ref=62b5494393ac3d68acf2c63a01dd4036e9e48767"
      }
    ]
  }
]