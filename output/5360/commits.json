[
  {
    "sha": "71acb865402ab4423633c7e5f03b7ec4ef8c8e18",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3MWFjYjg2NTQwMmFiNDQyMzYzM2M3ZTVmMDNiN2VjNGVmOGM4ZTE4",
    "commit": {
      "author": {
        "name": "Heath",
        "email": "heathmatlock@gmail.com",
        "date": "2014-11-24T18:38:39Z"
      },
      "committer": {
        "name": "Heath",
        "email": "heathmatlock@gmail.com",
        "date": "2014-11-24T18:38:39Z"
      },
      "message": "print the caught error instead of raising an error",
      "tree": {
        "sha": "67dc45b8516a2620153fca0577e83078363842d6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/67dc45b8516a2620153fca0577e83078363842d6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/71acb865402ab4423633c7e5f03b7ec4ef8c8e18",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/71acb865402ab4423633c7e5f03b7ec4ef8c8e18",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/71acb865402ab4423633c7e5f03b7ec4ef8c8e18",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/71acb865402ab4423633c7e5f03b7ec4ef8c8e18/comments",
    "author": {
      "login": "heath",
      "id": 36502,
      "node_id": "MDQ6VXNlcjM2NTAy",
      "avatar_url": "https://avatars.githubusercontent.com/u/36502?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/heath",
      "html_url": "https://github.com/heath",
      "followers_url": "https://api.github.com/users/heath/followers",
      "following_url": "https://api.github.com/users/heath/following{/other_user}",
      "gists_url": "https://api.github.com/users/heath/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/heath/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/heath/subscriptions",
      "organizations_url": "https://api.github.com/users/heath/orgs",
      "repos_url": "https://api.github.com/users/heath/repos",
      "events_url": "https://api.github.com/users/heath/events{/privacy}",
      "received_events_url": "https://api.github.com/users/heath/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "heath",
      "id": 36502,
      "node_id": "MDQ6VXNlcjM2NTAy",
      "avatar_url": "https://avatars.githubusercontent.com/u/36502?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/heath",
      "html_url": "https://github.com/heath",
      "followers_url": "https://api.github.com/users/heath/followers",
      "following_url": "https://api.github.com/users/heath/following{/other_user}",
      "gists_url": "https://api.github.com/users/heath/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/heath/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/heath/subscriptions",
      "organizations_url": "https://api.github.com/users/heath/orgs",
      "repos_url": "https://api.github.com/users/heath/repos",
      "events_url": "https://api.github.com/users/heath/events{/privacy}",
      "received_events_url": "https://api.github.com/users/heath/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fe042dbe9f92f4bf004e3fbb8cc4a9ebdfbdfcb7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fe042dbe9f92f4bf004e3fbb8cc4a9ebdfbdfcb7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fe042dbe9f92f4bf004e3fbb8cc4a9ebdfbdfcb7"
      }
    ],
    "stats": {
      "total": 144,
      "additions": 71,
      "deletions": 73
    },
    "files": [
      {
        "sha": "c3ce9d793625fc0b1318a9baf77b7f428cbe2062",
        "filename": "contrib/bitrpc/bitrpc.py",
        "status": "modified",
        "additions": 71,
        "deletions": 73,
        "changes": 144,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/71acb865402ab4423633c7e5f03b7ec4ef8c8e18/contrib/bitrpc/bitrpc.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/71acb865402ab4423633c7e5f03b7ec4ef8c8e18/contrib/bitrpc/bitrpc.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/bitrpc/bitrpc.py?ref=71acb865402ab4423633c7e5f03b7ec4ef8c8e18",
        "patch": "@@ -20,9 +20,9 @@\n     try:\n         path = raw_input(\"Enter destination path/filename: \")\n         print access.backupwallet(path)\n-    except:\n-        print \"\\n---An error occurred---\\n\"\n-        \n+    except Exception as inst:\n+        print inst\n+\n elif cmd == \"encryptwallet\":\n     try:\n         pwd = getpass.getpass(prompt=\"Enter passphrase: \")\n@@ -32,29 +32,29 @@\n             print \"\\n---Wallet encrypted. Server stopping, restart to run with encrypted wallet---\\n\"\n         else:\n             print \"\\n---Passphrases do not match---\\n\"\n-    except:\n-        print \"\\n---An error occurred---\\n\"\n+    except Exception as inst:\n+        print inst\n \n elif cmd == \"getaccount\":\n     try:\n         addr = raw_input(\"Enter a Bitcoin address: \")\n         print access.getaccount(addr)\n-    except:\n-        print \"\\n---An error occurred---\\n\"\n+    except Exception as inst:\n+        print inst\n \n elif cmd == \"getaccountaddress\":\n     try:\n         acct = raw_input(\"Enter an account name: \")\n         print access.getaccountaddress(acct)\n-    except:\n-        print \"\\n---An error occurred---\\n\"\n+    except Exception as inst:\n+        print inst\n \n elif cmd == \"getaddressesbyaccount\":\n     try:\n         acct = raw_input(\"Enter an account name: \")\n         print access.getaddressesbyaccount(acct)\n-    except:\n-        print \"\\n---An error occurred---\\n\"\n+    except Exception as inst:\n+        print inst\n \n elif cmd == \"getbalance\":\n     try:\n@@ -64,57 +64,57 @@\n             print access.getbalance(acct, mc)\n         except:\n             print access.getbalance()\n-    except:\n-        print \"\\n---An error occurred---\\n\"\n+    except Exception as inst:\n+        print inst\n \n elif cmd == \"getblockbycount\":\n     try:\n         height = raw_input(\"Height: \")\n         print access.getblockbycount(height)\n-    except:\n-        print \"\\n---An error occurred---\\n\"\n+    except Exception as inst:\n+        print inst\n \n elif cmd == \"getblockcount\":\n     try:\n         print access.getblockcount()\n-    except:\n-        print \"\\n---An error occurred---\\n\"\n+    except Exception as inst:\n+        print inst\n \n elif cmd == \"getblocknumber\":\n     try:\n         print access.getblocknumber()\n-    except:\n-        print \"\\n---An error occurred---\\n\"\n+    except Exception as inst:\n+        print inst\n \n elif cmd == \"getconnectioncount\":\n     try:\n         print access.getconnectioncount()\n-    except:\n-        print \"\\n---An error occurred---\\n\"\n+    except Exception as inst:\n+        print inst\n \n elif cmd == \"getdifficulty\":\n     try:\n         print access.getdifficulty()\n-    except:\n-        print \"\\n---An error occurred---\\n\"\n+    except Exception as inst:\n+        print inst\n \n elif cmd == \"getgenerate\":\n     try:\n         print access.getgenerate()\n-    except:\n-        print \"\\n---An error occurred---\\n\"\n+    except Exception as inst:\n+        print inst\n \n elif cmd == \"gethashespersec\":\n     try:\n         print access.gethashespersec()\n-    except:\n-        print \"\\n---An error occurred---\\n\"\n+    except Exception as inst:\n+        print inst\n \n elif cmd == \"getinfo\":\n     try:\n         print access.getinfo()\n-    except:\n-        print \"\\n---An error occurred---\\n\"\n+    except Exception as inst:\n+        print inst\n \n elif cmd == \"getnewaddress\":\n     try:\n@@ -123,8 +123,8 @@\n             print access.getnewaddress(acct)\n         except:\n             print access.getnewaddress()\n-    except:\n-        print \"\\n---An error occurred---\\n\"\n+    except Exception as inst:\n+        print inst\n \n elif cmd == \"getreceivedbyaccount\":\n     try:\n@@ -134,8 +134,8 @@\n             print access.getreceivedbyaccount(acct, mc)\n         except:\n             print access.getreceivedbyaccount()\n-    except:\n-        print \"\\n---An error occurred---\\n\"\n+    except Exception as inst:\n+        print inst\n \n elif cmd == \"getreceivedbyaddress\":\n     try:\n@@ -145,15 +145,15 @@\n             print access.getreceivedbyaddress(addr, mc)\n         except:\n             print access.getreceivedbyaddress()\n-    except:\n-        print \"\\n---An error occurred---\\n\"\n+    except Exception as inst:\n+        print inst\n \n elif cmd == \"gettransaction\":\n     try:\n         txid = raw_input(\"Enter a transaction ID: \")\n         print access.gettransaction(txid)\n-    except:\n-        print \"\\n---An error occurred---\\n\"\n+    except Exception as inst:\n+        print inst\n \n elif cmd == \"getwork\":\n     try:\n@@ -162,8 +162,8 @@\n             print access.gettransaction(data)\n         except:\n             print access.gettransaction()\n-    except:\n-        print \"\\n---An error occurred---\\n\"\n+    except Exception as inst:\n+        print inst\n \n elif cmd == \"help\":\n     try:\n@@ -172,8 +172,8 @@\n             print access.help(cmd)\n         except:\n             print access.help()\n-    except:\n-        print \"\\n---An error occurred---\\n\"\n+    except Exception as inst:\n+        print inst\n \n elif cmd == \"listaccounts\":\n     try:\n@@ -182,8 +182,8 @@\n             print access.listaccounts(mc)\n         except:\n             print access.listaccounts()\n-    except:\n-        print \"\\n---An error occurred---\\n\"\n+    except Exception as inst:\n+        print inst\n \n elif cmd == \"listreceivedbyaccount\":\n     try:\n@@ -193,8 +193,8 @@\n             print access.listreceivedbyaccount(mc, incemp)\n         except:\n             print access.listreceivedbyaccount()\n-    except:\n-        print \"\\n---An error occurred---\\n\"\n+    except Exception as inst:\n+        print inst\n \n elif cmd == \"listreceivedbyaddress\":\n     try:\n@@ -204,8 +204,8 @@\n             print access.listreceivedbyaddress(mc, incemp)\n         except:\n             print access.listreceivedbyaddress()\n-    except:\n-        print \"\\n---An error occurred---\\n\"\n+    except Exception as inst:\n+        print inst\n \n elif cmd == \"listtransactions\":\n     try:\n@@ -216,8 +216,8 @@\n             print access.listtransactions(acct, count, frm)\n         except:\n             print access.listtransactions()\n-    except:\n-        print \"\\n---An error occurred---\\n\"\n+    except Exception as inst:\n+        print inst\n \n elif cmd == \"move\":\n     try:\n@@ -230,8 +230,8 @@\n             print access.move(frm, to, amt, mc, comment)\n         except:\n             print access.move(frm, to, amt)\n-    except:\n-        print \"\\n---An error occurred---\\n\"\n+    except Exception as inst:\n+        print inst\n \n elif cmd == \"sendfrom\":\n     try:\n@@ -245,8 +245,8 @@\n             print access.sendfrom(frm, to, amt, mc, comment, commentto)\n         except:\n             print access.sendfrom(frm, to, amt)\n-    except:\n-        print \"\\n---An error occurred---\\n\"\n+    except Exception as inst:\n+        print inst\n \n elif cmd == \"sendmany\":\n     try:\n@@ -258,8 +258,8 @@\n             print access.sendmany(frm,to,mc,comment)\n         except:\n             print access.sendmany(frm,to)\n-    except:\n-        print \"\\n---An error occurred---\\n\"\n+    except Exception as inst:\n+        print inst\n \n elif cmd == \"sendtoaddress\":\n     try:\n@@ -271,16 +271,16 @@\n             print access.sendtoaddress(to,amt,comment,commentto)\n         except:\n             print access.sendtoaddress(to,amt)\n-    except:\n-        print \"\\n---An error occurred---\\n\"\n+    except Exception as inst:\n+        print inst\n \n elif cmd == \"setaccount\":\n     try:\n         addr = raw_input(\"Address: \")\n         acct = raw_input(\"Account:\")\n         print access.setaccount(addr,acct)\n-    except:\n-        print \"\\n---An error occurred---\\n\"\n+    except Exception as inst:\n+        print inst\n \n elif cmd == \"setgenerate\":\n     try:\n@@ -290,36 +290,36 @@\n             print access.setgenerate(gen, cpus)\n         except:\n             print access.setgenerate(gen)\n-    except:\n-        print \"\\n---An error occurred---\\n\"\n+    except Exception as inst:\n+        print inst\n \n elif cmd == \"settxfee\":\n     try:\n         amt = raw_input(\"Amount:\")\n         print access.settxfee(amt)\n-    except:\n-        print \"\\n---An error occurred---\\n\"\n+    except Exception as inst:\n+        print inst\n \n elif cmd == \"stop\":\n     try:\n         print access.stop()\n-    except:\n-        print \"\\n---An error occurred---\\n\"\n+    except Exception as inst:\n+        print inst\n \n elif cmd == \"validateaddress\":\n     try:\n         addr = raw_input(\"Address: \")\n         print access.validateaddress(addr)\n-    except:\n-        print \"\\n---An error occurred---\\n\"\n+    except Exception as inst:\n+        print inst\n \n elif cmd == \"walletpassphrase\":\n     try:\n         pwd = getpass.getpass(prompt=\"Enter wallet passphrase: \")\n         access.walletpassphrase(pwd, 60)\n         print \"\\n---Wallet unlocked---\\n\"\n-    except:\n-        print \"\\n---An error occurred---\\n\"\n+    except Exception as inst:\n+        print inst\n \n elif cmd == \"walletpassphrasechange\":\n     try:\n@@ -328,10 +328,8 @@\n         access.walletpassphrasechange(pwd, pwd2)\n         print\n         print \"\\n---Passphrase changed---\\n\"\n-    except:\n-        print\n-        print \"\\n---An error occurred---\\n\"\n-        print\n+    except Exception as inst:\n+        print inst\n \n else:\n     print \"Command not found or not supported\""
      }
    ]
  }
]