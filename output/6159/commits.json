[
  {
    "sha": "ffdda4e8a7987de85221d3ca3137593a77d8f5f5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmZmRkYTRlOGE3OTg3ZGU4NTIyMWQzY2EzMTM3NTkzYTc3ZDhmNWY1",
    "commit": {
      "author": {
        "name": "Adam Weiss",
        "email": "adam@signal11.com",
        "date": "2015-05-18T23:37:43Z"
      },
      "committer": {
        "name": "Adam Weiss",
        "email": "adam@signal11.com",
        "date": "2015-05-22T18:15:22Z"
      },
      "message": "Catch errors on datadir lock and pidfile delete\n\nPrevents bad permissions (or other fs related problems) from resulting\nin hard crashes with cryptic messages on startup and shutdown.",
      "tree": {
        "sha": "ae466ea44b5d80bf2825af8cb9b6cc6173a20194",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ae466ea44b5d80bf2825af8cb9b6cc6173a20194"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ffdda4e8a7987de85221d3ca3137593a77d8f5f5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ffdda4e8a7987de85221d3ca3137593a77d8f5f5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ffdda4e8a7987de85221d3ca3137593a77d8f5f5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ffdda4e8a7987de85221d3ca3137593a77d8f5f5/comments",
    "author": {
      "login": "ajweiss",
      "id": 430315,
      "node_id": "MDQ6VXNlcjQzMDMxNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/430315?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajweiss",
      "html_url": "https://github.com/ajweiss",
      "followers_url": "https://api.github.com/users/ajweiss/followers",
      "following_url": "https://api.github.com/users/ajweiss/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajweiss/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajweiss/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajweiss/subscriptions",
      "organizations_url": "https://api.github.com/users/ajweiss/orgs",
      "repos_url": "https://api.github.com/users/ajweiss/repos",
      "events_url": "https://api.github.com/users/ajweiss/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajweiss/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ajweiss",
      "id": 430315,
      "node_id": "MDQ6VXNlcjQzMDMxNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/430315?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajweiss",
      "html_url": "https://github.com/ajweiss",
      "followers_url": "https://api.github.com/users/ajweiss/followers",
      "following_url": "https://api.github.com/users/ajweiss/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajweiss/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajweiss/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajweiss/subscriptions",
      "organizations_url": "https://api.github.com/users/ajweiss/orgs",
      "repos_url": "https://api.github.com/users/ajweiss/repos",
      "events_url": "https://api.github.com/users/ajweiss/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajweiss/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2cc1372190c01bc6aae70f94fcc3b81ae4f7aba3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2cc1372190c01bc6aae70f94fcc3b81ae4f7aba3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2cc1372190c01bc6aae70f94fcc3b81ae4f7aba3"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 14,
      "deletions": 4
    },
    "files": [
      {
        "sha": "87e989f16863b39aaf00614f453980efb8e6c77b",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 4,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ffdda4e8a7987de85221d3ca3137593a77d8f5f5/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ffdda4e8a7987de85221d3ca3137593a77d8f5f5/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=ffdda4e8a7987de85221d3ca3137593a77d8f5f5",
        "patch": "@@ -187,7 +187,11 @@ void Shutdown()\n         pwalletMain->Flush(true);\n #endif\n #ifndef WIN32\n-    boost::filesystem::remove(GetPidFile());\n+    try {\n+        boost::filesystem::remove(GetPidFile());\n+    } catch (const boost::filesystem::filesystem_error& e) {\n+        LogPrintf(\"%s: Unable to remove pidfile: %s\\n\", __func__, e.what());\n+    }\n #endif\n     UnregisterAllValidationInterfaces();\n #ifdef ENABLE_WALLET\n@@ -862,9 +866,15 @@ bool AppInit2(boost::thread_group& threadGroup)\n     boost::filesystem::path pathLockFile = GetDataDir() / \".lock\";\n     FILE* file = fopen(pathLockFile.string().c_str(), \"a\"); // empty lock file; created if it doesn't exist.\n     if (file) fclose(file);\n-    static boost::interprocess::file_lock lock(pathLockFile.string().c_str());\n-    if (!lock.try_lock())\n-        return InitError(strprintf(_(\"Cannot obtain a lock on data directory %s. Bitcoin Core is probably already running.\"), strDataDir));\n+\n+    try {\n+        static boost::interprocess::file_lock lock(pathLockFile.string().c_str());\n+        if (!lock.try_lock())\n+            return InitError(strprintf(_(\"Cannot obtain a lock on data directory %s. Bitcoin Core is probably already running.\"), strDataDir));\n+    } catch(const boost::interprocess::interprocess_exception& e) {\n+        return InitError(strprintf(_(\"Cannot obtain a lock on data directory %s. Bitcoin Core is probably already running.\") + \" %s.\", strDataDir, e.what()));\n+    }\n+\n #ifndef WIN32\n     CreatePidFile(GetPidFile(), getpid());\n #endif"
      }
    ]
  }
]