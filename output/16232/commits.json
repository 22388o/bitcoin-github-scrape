[
  {
    "sha": "97f8eb842530e0607dcacc883970a28a0d8ad8ef",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5N2Y4ZWI4NDI1MzBlMDYwN2RjYWNjODgzOTcwYTI4YTBkOGFkOGVm",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-06-18T14:08:31Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-06-18T14:08:31Z"
      },
      "message": "travis: Remove travis",
      "tree": {
        "sha": "fb9d7497c746d146c75e197c236b303f5eb2cdb9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fb9d7497c746d146c75e197c236b303f5eb2cdb9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/97f8eb842530e0607dcacc883970a28a0d8ad8ef",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/97f8eb842530e0607dcacc883970a28a0d8ad8ef",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/97f8eb842530e0607dcacc883970a28a0d8ad8ef",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/97f8eb842530e0607dcacc883970a28a0d8ad8ef/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "22b6c4ed7562a23e4363e8f0fd889b92c7653d5f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/22b6c4ed7562a23e4363e8f0fd889b92c7653d5f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/22b6c4ed7562a23e4363e8f0fd889b92c7653d5f"
      }
    ],
    "stats": {
      "total": 410,
      "additions": 0,
      "deletions": 410
    },
    "files": [
      {
        "sha": "adf2140642b616ff2cd73b232f31a24a94fb2ba0",
        "filename": ".travis.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 188,
        "changes": 188,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/22b6c4ed7562a23e4363e8f0fd889b92c7653d5f/.travis.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/22b6c4ed7562a23e4363e8f0fd889b92c7653d5f/.travis.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis.yml?ref=22b6c4ed7562a23e4363e8f0fd889b92c7653d5f",
        "patch": "@@ -1,188 +0,0 @@\n-# The test build matrix (stage: test) is constructed to test a wide range of\n-# configurations, rather than a single pass/fail. This helps to catch build\n-# failures and logic errors that present on platforms other than the ones the\n-# author has tested.\n-#\n-# Some builders use the dependency-generator in `./depends`, rather than using\n-# apt-get to install build dependencies. This guarantees that the tester is\n-# using the same versions as Gitian, so the build results are nearly identical\n-# to what would be found in a final release.\n-#\n-# In order to avoid rebuilding all dependencies for each build, the binaries\n-# are cached and re-used when possible. Changes in the dependency-generator\n-# will trigger cache-invalidation and rebuilds as necessary.\n-#\n-# These caches can be manually removed if necessary. This is one of the very\n-# few manual operations that is possible with Travis, and it can be done by a\n-# Bitcoin Core GitHub member via the Travis web interface [0].\n-#\n-# Travis CI uploads the cache after the script phase of the build [1].\n-# However, the build is terminated without saving the chache if it takes over\n-# 50 minutes [2]. Thus, if we spent too much time in early build stages, fail\n-# with an error and save the cache.\n-#\n-# [0] https://travis-ci.org/bitcoin/bitcoin/caches\n-# [1] https://docs.travis-ci.com/user/caching/#build-phases\n-# [2] https://docs.travis-ci.com/user/customizing-the-build#build-timeouts\n-\n-dist: xenial\n-os: linux\n-language: minimal\n-cache:\n-  ccache: true\n-  directories:\n-    - $TRAVIS_BUILD_DIR/depends/built\n-    - $TRAVIS_BUILD_DIR/depends/sdk-sources\n-    - $HOME/.ccache\n-stages:\n-  - lint\n-  - test\n-env:\n-  global:\n-    - MAKEJOBS=-j3\n-    - RUN_UNIT_TESTS=true\n-    - RUN_FUNCTIONAL_TESTS=true\n-    - RUN_FUZZ_TESTS=false\n-    - DOCKER_NAME_TAG=ubuntu:18.04\n-    - BOOST_TEST_RANDOM=1$TRAVIS_BUILD_ID\n-    - CCACHE_SIZE=100M\n-    - CCACHE_TEMPDIR=/tmp/.ccache-temp\n-    - CCACHE_COMPRESS=1\n-    - CCACHE_DIR=$HOME/.ccache\n-    - BASE_OUTDIR=$TRAVIS_BUILD_DIR/out\n-    - SDK_URL=https://bitcoincore.org/depends-sources/sdks\n-    - WINEDEBUG=fixme-all\n-    - DOCKER_PACKAGES=\"build-essential libtool autotools-dev automake pkg-config bsdmainutils curl git ca-certificates ccache\"\n-    - CACHE_ERR_MSG=\"Error! Initial build successful, but not enough time remains to run later build stages and tests. Please manually re-run this job by using the travis restart button or asking a bitcoin maintainer to restart. The next run should not time out because the build cache has been saved.\"\n-before_install:\n-  - set -o errexit; source .travis/test_03_before_install.sh\n-install:\n-  - set -o errexit; source .travis/test_04_install.sh\n-before_script:\n-  - set -o errexit; source .travis/test_05_before_script.sh\n-script:\n-  - export CONTINUE=1\n-  - if [ $SECONDS -gt 1200 ]; then export CONTINUE=0; fi  # Likely the depends build took very long\n-  - if [ $CONTINUE = \"1\" ]; then set -o errexit; source .travis/test_06_script_a.sh; else set +o errexit; echo \"$CACHE_ERR_MSG\"; false; fi\n-  - if [ $SECONDS -gt 2000 ]; then export CONTINUE=0; fi  # Likely the build took very long; The tests take about 1000s, so we should abort if we have less than 50*60-1000=2000s left\n-  - if [ $CONTINUE = \"1\" ]; then set -o errexit; source .travis/test_06_script_b.sh; else set +o errexit; echo \"$CACHE_ERR_MSG\"; false; fi\n-after_script:\n-  - echo $TRAVIS_COMMIT_RANGE\n-  - echo $TRAVIS_COMMIT_LOG\n-jobs:\n-  include:\n-\n-    - stage: lint\n-      name: 'lint'\n-      env:\n-      cache: false\n-      language: python\n-      python: '3.5' # Oldest supported version according to doc/dependencies.md\n-      install:\n-        - set -o errexit; source .travis/lint_04_install.sh\n-      before_script:\n-        - set -o errexit; source .travis/lint_05_before_script.sh\n-      script:\n-        - set -o errexit; source .travis/lint_06_script.sh\n-\n-    - stage: test\n-      name: 'ARM  [GOAL: install]  [no unit or functional tests]'\n-      env: >-\n-        HOST=arm-linux-gnueabihf\n-        PACKAGES=\"python3 g++-arm-linux-gnueabihf\"\n-        RUN_UNIT_TESTS=false\n-        RUN_FUNCTIONAL_TESTS=false\n-        GOAL=\"install\"\n-        # -Wno-psabi is to disable ABI warnings: \"note: parameter passing for argument of type ... changed in GCC 7.1\"\n-        # This could be removed once the ABI change warning does not show up by default\n-        BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports CXXFLAGS=-Wno-psabi\"\n-\n-    - stage: test\n-      name: 'Win64  [GOAL: deploy]  [no gui or functional tests]'\n-      env: >-\n-        HOST=x86_64-w64-mingw32\n-        PACKAGES=\"python3 nsis g++-mingw-w64-x86-64 wine-binfmt wine64\"\n-        RUN_FUNCTIONAL_TESTS=false\n-        GOAL=\"deploy\"\n-        BITCOIN_CONFIG=\"--enable-reduce-exports --disable-gui-tests\"\n-\n-    - stage: test\n-      name: '32-bit + dash  [GOAL: install]  [GUI: no BIP70]'\n-      env: >-\n-        HOST=i686-pc-linux-gnu\n-        PACKAGES=\"g++-multilib python3-zmq\"\n-        GOAL=\"install\"\n-        BITCOIN_CONFIG=\"--enable-zmq --with-gui=qt5 --disable-bip70 --enable-glibc-back-compat --enable-reduce-exports LDFLAGS=-static-libstdc++\"\n-        CONFIG_SHELL=\"/bin/dash\"\n-\n-    - stage: test\n-      name: 'x86_64 Linux  [GOAL: install]  [bionic]  [uses qt5 dev package instead of depends Qt to speed up build and avoid timeout]'\n-      env: >-\n-        HOST=x86_64-unknown-linux-gnu\n-        PACKAGES=\"python3-zmq qtbase5-dev qttools5-dev-tools protobuf-compiler libdbus-1-dev libharfbuzz-dev libprotobuf-dev\"\n-        DEP_OPTS=\"NO_QT=1 NO_UPNP=1 DEBUG=1 ALLOW_HOST_PACKAGES=1\"\n-        TEST_RUNNER_EXTRA=\"--coverage --extended --exclude feature_dbcrash\"  # Run extended tests so that coverage does not fail, but exclude the very slow dbcrash\n-        GOAL=\"install\"\n-        BITCOIN_CONFIG=\"--enable-zmq --with-gui=qt5 --enable-glibc-back-compat --enable-reduce-exports --enable-debug CXXFLAGS=\\\"-g0 -O2\\\"\"\n-\n-    - stage: test\n-      name: 'x86_64 Linux  [GOAL: install]  [trusty]  [no functional tests, no depends, only system libs]'\n-      env: >-\n-        HOST=x86_64-unknown-linux-gnu\n-        DOCKER_NAME_TAG=ubuntu:14.04\n-        PACKAGES=\"python3-zmq qtbase5-dev qttools5-dev-tools libicu-dev libpng-dev libssl-dev libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev libdb5.1++-dev libminiupnpc-dev libzmq3-dev libprotobuf-dev protobuf-compiler libqrencode-dev\"\n-        NO_DEPENDS=1\n-        RUN_FUNCTIONAL_TESTS=false\n-        GOAL=\"install\"\n-        BITCOIN_CONFIG=\"--enable-zmq --with-incompatible-bdb --with-gui=no\"\n-\n-    - stage: test\n-      name: 'x86_64 Linux  [GOAL: install]  [xenial]  [no depends, only system libs, sanitizers: thread (TSan), no wallet]'\n-      env: >-\n-        HOST=x86_64-unknown-linux-gnu\n-        DOCKER_NAME_TAG=ubuntu:16.04\n-        PACKAGES=\"clang llvm python3-zmq qtbase5-dev qttools5-dev-tools libssl-dev libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev libdb5.3++-dev libminiupnpc-dev libzmq3-dev libprotobuf-dev protobuf-compiler libqrencode-dev\"\n-        NO_DEPENDS=1\n-        GOAL=\"install\"\n-        BITCOIN_CONFIG=\"--enable-zmq --disable-wallet --with-gui=qt5 CPPFLAGS=-DDEBUG_LOCKORDER --with-sanitizers=thread --disable-hardening --disable-asm CC=clang CXX=clang++\"\n-\n-    - stage: test\n-      name: 'x86_64 Linux  [GOAL: install]  [bionic]  [no depends, only system libs, sanitizers: address/leak (ASan + LSan) + undefined (UBSan) + integer]'\n-      env: >-\n-        HOST=x86_64-unknown-linux-gnu\n-        PACKAGES=\"clang llvm python3-zmq qtbase5-dev qttools5-dev-tools libssl1.0-dev libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev libdb5.3++-dev libminiupnpc-dev libzmq3-dev libprotobuf-dev protobuf-compiler libqrencode-dev\"\n-        NO_DEPENDS=1\n-        GOAL=\"install\"\n-        BITCOIN_CONFIG=\"--enable-zmq --with-incompatible-bdb --with-gui=qt5 CPPFLAGS=-DDEBUG_LOCKORDER --with-sanitizers=address,integer,undefined CC=clang CXX=clang++\"\n-\n-    - stage: test\n-      name: 'x86_64 Linux  [GOAL: install]  [bionic]  [no depends, only system libs, sanitizers: fuzzer,address]'\n-      env: >-\n-        HOST=x86_64-unknown-linux-gnu\n-        PACKAGES=\"clang llvm python3 libssl1.0-dev libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev\"\n-        NO_DEPENDS=1\n-        RUN_UNIT_TESTS=false\n-        RUN_FUNCTIONAL_TESTS=false\n-        RUN_FUZZ_TESTS=true\n-        GOAL=\"install\"\n-        BITCOIN_CONFIG=\"--disable-wallet --disable-bench --with-utils=no --with-daemon=no --with-libs=no --with-gui=no --enable-fuzz --with-sanitizers=fuzzer,address CC=clang CXX=clang++\"\n-\n-    - stage: test\n-      name: 'x86_64 Linux  [GOAL: install]  [bionic]  [no wallet]'\n-      env: >-\n-        HOST=x86_64-unknown-linux-gnu\n-        PACKAGES=\"python3-zmq\"\n-        DEP_OPTS=\"NO_WALLET=1\"\n-        GOAL=\"install\"\n-        BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports\"\n-\n-    - stage: test\n-      name: 'macOS 10.10  [GOAL: deploy] [no functional tests]'\n-      env: >-\n-        HOST=x86_64-apple-darwin14\n-        PACKAGES=\"cmake imagemagick libcap-dev librsvg2-bin libz-dev libbz2-dev libtiff-tools python3-dev python3-setuptools\"\n-        OSX_SDK=10.11\n-        RUN_UNIT_TESTS=false\n-        RUN_FUNCTIONAL_TESTS=false\n-        GOAL=\"deploy\"\n-        BITCOIN_CONFIG=\"--enable-gui --enable-reduce-exports --enable-werror\""
      },
      {
        "sha": "21d1b9cc03aea1599db7dd258c945f5bce240067",
        "filename": ".travis/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 8,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/22b6c4ed7562a23e4363e8f0fd889b92c7653d5f/.travis/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/22b6c4ed7562a23e4363e8f0fd889b92c7653d5f/.travis/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis/README.md?ref=22b6c4ed7562a23e4363e8f0fd889b92c7653d5f",
        "patch": "@@ -1,8 +0,0 @@\n-## travis build scripts\n-\n-The `.travis` directory contains scripts for each build step in each build stage.\n-Currently the travis build defines two stages `lint` and `test`. Each stage has\n-it's own [lifecycle](https://docs.travis-ci.com/user/customizing-the-build/#the-build-lifecycle).\n-Every script in here is named and numbered according to which stage and lifecycle\n-step it belongs to.\n-"
      },
      {
        "sha": "62174620f286083d642e9805a1337865ebf99fac",
        "filename": ".travis/lint_04_install.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 15,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/22b6c4ed7562a23e4363e8f0fd889b92c7653d5f/.travis/lint_04_install.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/22b6c4ed7562a23e4363e8f0fd889b92c7653d5f/.travis/lint_04_install.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis/lint_04_install.sh?ref=22b6c4ed7562a23e4363e8f0fd889b92c7653d5f",
        "patch": "@@ -1,15 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-# Copyright (c) 2018 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-export LC_ALL=C\n-\n-travis_retry pip install codespell==1.15.0\n-travis_retry pip install flake8==3.5.0\n-travis_retry pip install vulture==0.29\n-\n-SHELLCHECK_VERSION=v0.6.0\n-curl -s \"https://storage.googleapis.com/shellcheck/shellcheck-${SHELLCHECK_VERSION}.linux.x86_64.tar.xz\" | tar --xz -xf - --directory /tmp/\n-export PATH=\"/tmp/shellcheck-${SHELLCHECK_VERSION}:${PATH}\""
      },
      {
        "sha": "28bcbb47f748986c8e95bb87abd5a45faef75e1b",
        "filename": ".travis/lint_05_before_script.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 9,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/22b6c4ed7562a23e4363e8f0fd889b92c7653d5f/.travis/lint_05_before_script.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/22b6c4ed7562a23e4363e8f0fd889b92c7653d5f/.travis/lint_05_before_script.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis/lint_05_before_script.sh?ref=22b6c4ed7562a23e4363e8f0fd889b92c7653d5f",
        "patch": "@@ -1,9 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-# Copyright (c) 2018 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-export LC_ALL=C\n-\n-git fetch --unshallow"
      },
      {
        "sha": "eeebc80ec0b851dd3c2760ad7a1c0587d18bd998",
        "filename": ".travis/lint_06_script.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 25,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/22b6c4ed7562a23e4363e8f0fd889b92c7653d5f/.travis/lint_06_script.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/22b6c4ed7562a23e4363e8f0fd889b92c7653d5f/.travis/lint_06_script.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis/lint_06_script.sh?ref=22b6c4ed7562a23e4363e8f0fd889b92c7653d5f",
        "patch": "@@ -1,25 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-# Copyright (c) 2018 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-export LC_ALL=C\n-\n-if [ \"$TRAVIS_EVENT_TYPE\" = \"pull_request\" ]; then\n-  test/lint/commit-script-check.sh $TRAVIS_COMMIT_RANGE\n-fi\n-\n-test/lint/git-subtree-check.sh src/crypto/ctaes\n-test/lint/git-subtree-check.sh src/secp256k1\n-test/lint/git-subtree-check.sh src/univalue\n-test/lint/git-subtree-check.sh src/leveldb\n-test/lint/check-doc.py\n-test/lint/check-rpc-mappings.py .\n-test/lint/lint-all.sh\n-\n-if [ \"$TRAVIS_REPO_SLUG\" = \"bitcoin/bitcoin\" -a \"$TRAVIS_EVENT_TYPE\" = \"cron\" ]; then\n-    git log --merges --before=\"2 days ago\" -1 --format='%H' > ./contrib/verify-commits/trusted-sha512-root-commit\n-    travis_retry gpg --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys $(<contrib/verify-commits/trusted-keys) &&\n-    ./contrib/verify-commits/verify-commits.py --clean-merge=2;\n-fi"
      },
      {
        "sha": "3c9fcf3f983ae0cd200bc86a9b10b603ee3e6a4f",
        "filename": ".travis/test_03_before_install.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 27,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/22b6c4ed7562a23e4363e8f0fd889b92c7653d5f/.travis/test_03_before_install.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/22b6c4ed7562a23e4363e8f0fd889b92c7653d5f/.travis/test_03_before_install.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis/test_03_before_install.sh?ref=22b6c4ed7562a23e4363e8f0fd889b92c7653d5f",
        "patch": "@@ -1,27 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-# Copyright (c) 2018 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-export LC_ALL=C.UTF-8\n-\n-PATH=$(echo $PATH | tr ':' \"\\n\" | sed '/\\/opt\\/python/d' | tr \"\\n\" \":\" | sed \"s|::|:|g\")\n-# Add llvm-symbolizer directory to PATH. Needed to get symbolized stack traces from the sanitizers.\n-PATH=$PATH:/usr/lib/llvm-6.0/bin/\n-export PATH\n-\n-BEGIN_FOLD () {\n-  echo \"\"\n-  CURRENT_FOLD_NAME=$1\n-  echo \"travis_fold:start:${CURRENT_FOLD_NAME}\"\n-}\n-\n-END_FOLD () {\n-  RET=$?\n-  echo \"travis_fold:end:${CURRENT_FOLD_NAME}\"\n-  if [ $RET != 0 ]; then\n-    echo \"${CURRENT_FOLD_NAME} failed with status code ${RET}\"\n-  fi\n-}\n-"
      },
      {
        "sha": "b589ee7a161db6c59213daaa2429419d09e188d2",
        "filename": ".travis/test_04_install.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 34,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/22b6c4ed7562a23e4363e8f0fd889b92c7653d5f/.travis/test_04_install.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/22b6c4ed7562a23e4363e8f0fd889b92c7653d5f/.travis/test_04_install.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis/test_04_install.sh?ref=22b6c4ed7562a23e4363e8f0fd889b92c7653d5f",
        "patch": "@@ -1,34 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-# Copyright (c) 2018 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-export LC_ALL=C.UTF-8\n-\n-travis_retry docker pull \"$DOCKER_NAME_TAG\"\n-\n-export DIR_FUZZ_IN=${TRAVIS_BUILD_DIR}/qa-assets\n-git clone https://github.com/bitcoin-core/qa-assets ${DIR_FUZZ_IN}\n-export DIR_FUZZ_IN=${DIR_FUZZ_IN}/fuzz_seed_corpus/\n-\n-mkdir -p \"${TRAVIS_BUILD_DIR}/sanitizer-output/\"\n-export ASAN_OPTIONS=\"\"\n-export LSAN_OPTIONS=\"suppressions=${TRAVIS_BUILD_DIR}/test/sanitizer_suppressions/lsan\"\n-export TSAN_OPTIONS=\"suppressions=${TRAVIS_BUILD_DIR}/test/sanitizer_suppressions/tsan:log_path=${TRAVIS_BUILD_DIR}/sanitizer-output/tsan\"\n-export UBSAN_OPTIONS=\"suppressions=${TRAVIS_BUILD_DIR}/test/sanitizer_suppressions/ubsan:print_stacktrace=1:halt_on_error=1\"\n-env | grep -E '^(BITCOIN_CONFIG|CCACHE_|WINEDEBUG|LC_ALL|BOOST_TEST_RANDOM|CONFIG_SHELL|(ASAN|LSAN|TSAN|UBSAN)_OPTIONS)' | tee /tmp/env\n-if [[ $HOST = *-mingw32 ]]; then\n-  DOCKER_ADMIN=\"--cap-add SYS_ADMIN\"\n-elif [[ $BITCOIN_CONFIG = *--with-sanitizers=*address* ]]; then # If ran with (ASan + LSan), Docker needs access to ptrace (https://github.com/google/sanitizers/issues/764)\n-  DOCKER_ADMIN=\"--cap-add SYS_PTRACE\"\n-fi\n-DOCKER_ID=$(docker run $DOCKER_ADMIN -idt --mount type=bind,src=$TRAVIS_BUILD_DIR,dst=$TRAVIS_BUILD_DIR --mount type=bind,src=$CCACHE_DIR,dst=$CCACHE_DIR -w $TRAVIS_BUILD_DIR --env-file /tmp/env $DOCKER_NAME_TAG)\n-\n-DOCKER_EXEC () {\n-  docker exec $DOCKER_ID bash -c \"cd $PWD && $*\"\n-}\n-\n-travis_retry DOCKER_EXEC apt-get update\n-travis_retry DOCKER_EXEC apt-get install --no-install-recommends --no-upgrade -qq $PACKAGES $DOCKER_PACKAGES\n-"
      },
      {
        "sha": "70caee979c14002d1b58de9814b69289cff6c007",
        "filename": ".travis/test_05_before_script.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 25,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/22b6c4ed7562a23e4363e8f0fd889b92c7653d5f/.travis/test_05_before_script.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/22b6c4ed7562a23e4363e8f0fd889b92c7653d5f/.travis/test_05_before_script.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis/test_05_before_script.sh?ref=22b6c4ed7562a23e4363e8f0fd889b92c7653d5f",
        "patch": "@@ -1,25 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-# Copyright (c) 2018 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-export LC_ALL=C.UTF-8\n-\n-DOCKER_EXEC echo \\> \\$HOME/.bitcoin  # Make sure default datadir does not exist and is never read by creating a dummy file\n-\n-mkdir -p depends/SDKs depends/sdk-sources\n-\n-if [ -n \"$OSX_SDK\" -a ! -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then\n-  curl --location --fail $SDK_URL/MacOSX${OSX_SDK}.sdk.tar.gz -o depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz\n-fi\n-if [ -n \"$OSX_SDK\" -a -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then\n-  tar -C depends/SDKs -xf depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz\n-fi\n-if [[ $HOST = *-mingw32 ]]; then\n-  DOCKER_EXEC update-alternatives --set $HOST-g++ \\$\\(which $HOST-g++-posix\\)\n-fi\n-if [ -z \"$NO_DEPENDS\" ]; then\n-  DOCKER_EXEC CONFIG_SHELL= make $MAKEJOBS -C depends HOST=$HOST $DEP_OPTS\n-fi\n-"
      },
      {
        "sha": "8cc593f936521e92b0a5f82b58955535c9499ce8",
        "filename": ".travis/test_06_script_a.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 50,
        "changes": 50,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/22b6c4ed7562a23e4363e8f0fd889b92c7653d5f/.travis/test_06_script_a.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/22b6c4ed7562a23e4363e8f0fd889b92c7653d5f/.travis/test_06_script_a.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis/test_06_script_a.sh?ref=22b6c4ed7562a23e4363e8f0fd889b92c7653d5f",
        "patch": "@@ -1,50 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-# Copyright (c) 2018 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-export LC_ALL=C.UTF-8\n-\n-TRAVIS_COMMIT_LOG=$(git log --format=fuller -1)\n-export TRAVIS_COMMIT_LOG\n-\n-OUTDIR=$BASE_OUTDIR/$TRAVIS_PULL_REQUEST/$TRAVIS_JOB_NUMBER-$HOST\n-BITCOIN_CONFIG_ALL=\"--disable-dependency-tracking --prefix=$TRAVIS_BUILD_DIR/depends/$HOST --bindir=$OUTDIR/bin --libdir=$OUTDIR/lib\"\n-if [ -z \"$NO_DEPENDS\" ]; then\n-  DOCKER_EXEC ccache --max-size=$CCACHE_SIZE\n-fi\n-\n-BEGIN_FOLD autogen\n-if [ -n \"$CONFIG_SHELL\" ]; then\n-  DOCKER_EXEC \"$CONFIG_SHELL\" -c \"./autogen.sh\"\n-else\n-  DOCKER_EXEC ./autogen.sh\n-fi\n-END_FOLD\n-\n-mkdir build\n-cd build || (echo \"could not enter build directory\"; exit 1)\n-\n-BEGIN_FOLD configure\n-DOCKER_EXEC ../configure --cache-file=config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( cat config.log && false)\n-END_FOLD\n-\n-BEGIN_FOLD distdir\n-DOCKER_EXEC make distdir VERSION=$HOST\n-END_FOLD\n-\n-cd \"bitcoin-$HOST\" || (echo \"could not enter distdir bitcoin-$HOST\"; exit 1)\n-\n-BEGIN_FOLD configure\n-DOCKER_EXEC ./configure --cache-file=../config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( cat config.log && false)\n-END_FOLD\n-\n-set -o errtrace\n-trap 'DOCKER_EXEC \"cat ${TRAVIS_BUILD_DIR}/sanitizer-output/* 2> /dev/null\"' ERR\n-\n-BEGIN_FOLD build\n-DOCKER_EXEC make $MAKEJOBS $GOAL || ( echo \"Build failure. Verbose build follows.\" && DOCKER_EXEC make $GOAL V=1 ; false )\n-END_FOLD\n-\n-cd ${TRAVIS_BUILD_DIR} || (echo \"could not enter travis build dir $TRAVIS_BUILD_DIR\"; exit 1)"
      },
      {
        "sha": "e40055a6ee130fddb135debd2159fc2a2f84d555",
        "filename": ".travis/test_06_script_b.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 29,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/22b6c4ed7562a23e4363e8f0fd889b92c7653d5f/.travis/test_06_script_b.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/22b6c4ed7562a23e4363e8f0fd889b92c7653d5f/.travis/test_06_script_b.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis/test_06_script_b.sh?ref=22b6c4ed7562a23e4363e8f0fd889b92c7653d5f",
        "patch": "@@ -1,29 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-# Copyright (c) 2018 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-export LC_ALL=C.UTF-8\n-\n-cd \"build/bitcoin-$HOST\" || (echo \"could not enter distdir build/bitcoin-$HOST\"; exit 1)\n-\n-if [ \"$RUN_UNIT_TESTS\" = \"true\" ]; then\n-  BEGIN_FOLD unit-tests\n-  DOCKER_EXEC LD_LIBRARY_PATH=$TRAVIS_BUILD_DIR/depends/$HOST/lib make $MAKEJOBS check VERBOSE=1\n-  END_FOLD\n-fi\n-\n-if [ \"$RUN_FUNCTIONAL_TESTS\" = \"true\" ]; then\n-  BEGIN_FOLD functional-tests\n-  DOCKER_EXEC test/functional/test_runner.py --ci --combinedlogslen=4000 ${TEST_RUNNER_EXTRA} --quiet --failfast\n-  END_FOLD\n-fi\n-\n-if [ \"$RUN_FUZZ_TESTS\" = \"true\" ]; then\n-  BEGIN_FOLD fuzz-tests\n-  DOCKER_EXEC test/fuzz/test_runner.py -l DEBUG ${DIR_FUZZ_IN}\n-  END_FOLD\n-fi\n-\n-cd ${TRAVIS_BUILD_DIR} || (echo \"could not enter travis build dir $TRAVIS_BUILD_DIR\"; exit 1)"
      }
    ]
  }
]