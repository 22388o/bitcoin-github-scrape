[
  {
    "sha": "0eeab236416b6ac94cf2476f1b77a434f56e5567",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowZWVhYjIzNjQxNmI2YWM5NGNmMjQ3NmYxYjc3YTQzNGY1NmU1NTY3",
    "commit": {
      "author": {
        "name": "Andrew Toth",
        "email": "andrewstoth@gmail.com",
        "date": "2019-10-02T20:08:07Z"
      },
      "committer": {
        "name": "Andrew Toth",
        "email": "andrewstoth@gmail.com",
        "date": "2019-10-02T20:08:07Z"
      },
      "message": "Include immature coinbase outputs with listunspent",
      "tree": {
        "sha": "5859fe16afa7c05cec2defdd5c57fe8af32af164",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5859fe16afa7c05cec2defdd5c57fe8af32af164"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0eeab236416b6ac94cf2476f1b77a434f56e5567",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0eeab236416b6ac94cf2476f1b77a434f56e5567",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0eeab236416b6ac94cf2476f1b77a434f56e5567",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0eeab236416b6ac94cf2476f1b77a434f56e5567/comments",
    "author": {
      "login": "andrewtoth",
      "id": 237213,
      "node_id": "MDQ6VXNlcjIzNzIxMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andrewtoth",
      "html_url": "https://github.com/andrewtoth",
      "followers_url": "https://api.github.com/users/andrewtoth/followers",
      "following_url": "https://api.github.com/users/andrewtoth/following{/other_user}",
      "gists_url": "https://api.github.com/users/andrewtoth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
      "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
      "repos_url": "https://api.github.com/users/andrewtoth/repos",
      "events_url": "https://api.github.com/users/andrewtoth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "andrewtoth",
      "id": 237213,
      "node_id": "MDQ6VXNlcjIzNzIxMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andrewtoth",
      "html_url": "https://github.com/andrewtoth",
      "followers_url": "https://api.github.com/users/andrewtoth/followers",
      "following_url": "https://api.github.com/users/andrewtoth/following{/other_user}",
      "gists_url": "https://api.github.com/users/andrewtoth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
      "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
      "repos_url": "https://api.github.com/users/andrewtoth/repos",
      "events_url": "https://api.github.com/users/andrewtoth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a689c119076c7b8dc5b4dea4539e4cbf5adfb72f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a689c119076c7b8dc5b4dea4539e4cbf5adfb72f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a689c119076c7b8dc5b4dea4539e4cbf5adfb72f"
      }
    ],
    "stats": {
      "total": 15,
      "additions": 8,
      "deletions": 7
    },
    "files": [
      {
        "sha": "39b3bbd6ea94f63205b99e31d15a27cd297868e5",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0eeab236416b6ac94cf2476f1b77a434f56e5567/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0eeab236416b6ac94cf2476f1b77a434f56e5567/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=0eeab236416b6ac94cf2476f1b77a434f56e5567",
        "patch": "@@ -2830,7 +2830,7 @@ static UniValue listunspent(const JSONRPCRequest& request)\n             \"    \\\"reused\\\" : xxx,           (bool) (only present if avoid_reuse is set) Whether this output is reused/dirty (sent to an address that was previously spent from)\\n\"\n             \"    \\\"desc\\\" : xxx,             (string, only when solvable) A descriptor for spending this output\\n\"\n             \"    \\\"safe\\\" : xxx              (bool) Whether this output is considered safe to spend. Unconfirmed transactions\\n\"\n-            \"                              from outside keys and unconfirmed replacement transactions are considered unsafe\\n\"\n+            \"                              from outside keys, unconfirmed replacement transactions, and immature coinbase transactions are considered unsafe\\n\"\n             \"                              and are not eligible for spending by fundrawtransaction and sendtoaddress.\\n\"\n             \"  }\\n\"\n             \"  ,...\\n\"\n@@ -2904,16 +2904,17 @@ static UniValue listunspent(const JSONRPCRequest& request)\n     // the user could have gotten from another RPC command prior to now\n     pwallet->BlockUntilSyncedToCurrentChain();\n \n+    auto locked_chain = pwallet->chain().lock();\n+\n     UniValue results(UniValue::VARR);\n     std::vector<COutput> vecOutputs;\n     {\n         CCoinControl cctl;\n         cctl.m_avoid_address_reuse = false;\n         cctl.m_min_depth = nMinDepth;\n         cctl.m_max_depth = nMaxDepth;\n-        auto locked_chain = pwallet->chain().lock();\n         LOCK(pwallet->cs_wallet);\n-        pwallet->AvailableCoins(*locked_chain, vecOutputs, !include_unsafe, &cctl, nMinimumAmount, nMaximumAmount, nMinimumSumAmount, nMaximumCount);\n+        pwallet->AvailableCoins(*locked_chain, vecOutputs, !include_unsafe, &cctl, nMinimumAmount, nMaximumAmount, nMinimumSumAmount, nMaximumCount, include_unsafe);\n     }\n \n     LOCK(pwallet->cs_wallet);\n@@ -2982,7 +2983,7 @@ static UniValue listunspent(const JSONRPCRequest& request)\n             entry.pushKV(\"desc\", descriptor->ToString());\n         }\n         if (avoid_reuse) entry.pushKV(\"reused\", reused);\n-        entry.pushKV(\"safe\", out.fSafe);\n+        entry.pushKV(\"safe\", out.fSafe && !out.tx->IsImmatureCoinBase(*locked_chain));\n         results.push_back(entry);\n     }\n "
      },
      {
        "sha": "07ac479576a3947f26e11a33b58e294e6717814f",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0eeab236416b6ac94cf2476f1b77a434f56e5567/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0eeab236416b6ac94cf2476f1b77a434f56e5567/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=0eeab236416b6ac94cf2476f1b77a434f56e5567",
        "patch": "@@ -2447,7 +2447,7 @@ CAmount CWallet::GetAvailableBalance(const CCoinControl* coinControl) const\n     return balance;\n }\n \n-void CWallet::AvailableCoins(interfaces::Chain::Lock& locked_chain, std::vector<COutput>& vCoins, bool fOnlySafe, const CCoinControl* coinControl, const CAmount& nMinimumAmount, const CAmount& nMaximumAmount, const CAmount& nMinimumSumAmount, const uint64_t nMaximumCount) const\n+void CWallet::AvailableCoins(interfaces::Chain::Lock& locked_chain, std::vector<COutput>& vCoins, bool fOnlySafe, const CCoinControl* coinControl, const CAmount& nMinimumAmount, const CAmount& nMaximumAmount, const CAmount& nMinimumSumAmount, const uint64_t nMaximumCount, const bool include_immature) const\n {\n     AssertLockHeld(cs_wallet);\n \n@@ -2468,7 +2468,7 @@ void CWallet::AvailableCoins(interfaces::Chain::Lock& locked_chain, std::vector<\n             continue;\n         }\n \n-        if (wtx.IsImmatureCoinBase(locked_chain))\n+        if (!include_immature && wtx.IsImmatureCoinBase(locked_chain))\n             continue;\n \n         int nDepth = wtx.GetDepthInMainChain(locked_chain);"
      },
      {
        "sha": "8a3eadf92c796f08b003fa2c1758667a49b8460c",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0eeab236416b6ac94cf2476f1b77a434f56e5567/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0eeab236416b6ac94cf2476f1b77a434f56e5567/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=0eeab236416b6ac94cf2476f1b77a434f56e5567",
        "patch": "@@ -978,7 +978,7 @@ class CWallet final : public FillableSigningProvider, private interfaces::Chain:\n     /**\n      * populate vCoins with vector of available COutputs.\n      */\n-    void AvailableCoins(interfaces::Chain::Lock& locked_chain, std::vector<COutput>& vCoins, bool fOnlySafe = true, const CCoinControl* coinControl = nullptr, const CAmount& nMinimumAmount = 1, const CAmount& nMaximumAmount = MAX_MONEY, const CAmount& nMinimumSumAmount = MAX_MONEY, const uint64_t nMaximumCount = 0) const EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n+    void AvailableCoins(interfaces::Chain::Lock& locked_chain, std::vector<COutput>& vCoins, bool fOnlySafe = true, const CCoinControl* coinControl = nullptr, const CAmount& nMinimumAmount = 1, const CAmount& nMaximumAmount = MAX_MONEY, const CAmount& nMinimumSumAmount = MAX_MONEY, const uint64_t nMaximumCount = 0, const bool include_immature = false) const EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n \n     /**\n      * Return list of available coins and locked coins grouped by non-change output address."
      }
    ]
  },
  {
    "sha": "8c0bbe5d09ed032ab5464262d29c9d453a0fdc67",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4YzBiYmU1ZDA5ZWQwMzJhYjU0NjQyNjJkMjljOWQ0NTNhMGZkYzY3",
    "commit": {
      "author": {
        "name": "Andrew Toth",
        "email": "andrewstoth@gmail.com",
        "date": "2019-10-02T20:26:52Z"
      },
      "committer": {
        "name": "Andrew Toth",
        "email": "andrewstoth@gmail.com",
        "date": "2019-10-02T20:26:52Z"
      },
      "message": "Test for immature coinbase outputs with listunspent",
      "tree": {
        "sha": "f7230d927654098838455fbf66ecfe170dabf179",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f7230d927654098838455fbf66ecfe170dabf179"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8c0bbe5d09ed032ab5464262d29c9d453a0fdc67",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8c0bbe5d09ed032ab5464262d29c9d453a0fdc67",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8c0bbe5d09ed032ab5464262d29c9d453a0fdc67",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8c0bbe5d09ed032ab5464262d29c9d453a0fdc67/comments",
    "author": {
      "login": "andrewtoth",
      "id": 237213,
      "node_id": "MDQ6VXNlcjIzNzIxMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andrewtoth",
      "html_url": "https://github.com/andrewtoth",
      "followers_url": "https://api.github.com/users/andrewtoth/followers",
      "following_url": "https://api.github.com/users/andrewtoth/following{/other_user}",
      "gists_url": "https://api.github.com/users/andrewtoth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
      "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
      "repos_url": "https://api.github.com/users/andrewtoth/repos",
      "events_url": "https://api.github.com/users/andrewtoth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "andrewtoth",
      "id": 237213,
      "node_id": "MDQ6VXNlcjIzNzIxMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andrewtoth",
      "html_url": "https://github.com/andrewtoth",
      "followers_url": "https://api.github.com/users/andrewtoth/followers",
      "following_url": "https://api.github.com/users/andrewtoth/following{/other_user}",
      "gists_url": "https://api.github.com/users/andrewtoth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
      "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
      "repos_url": "https://api.github.com/users/andrewtoth/repos",
      "events_url": "https://api.github.com/users/andrewtoth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0eeab236416b6ac94cf2476f1b77a434f56e5567",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0eeab236416b6ac94cf2476f1b77a434f56e5567",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0eeab236416b6ac94cf2476f1b77a434f56e5567"
      }
    ],
    "stats": {
      "total": 46,
      "additions": 46,
      "deletions": 0
    },
    "files": [
      {
        "sha": "4a2fb0314bf71a86d0189b872eadd5fcb7946eec",
        "filename": "test/functional/test_runner.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8c0bbe5d09ed032ab5464262d29c9d453a0fdc67/test/functional/test_runner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8c0bbe5d09ed032ab5464262d29c9d453a0fdc67/test/functional/test_runner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_runner.py?ref=8c0bbe5d09ed032ab5464262d29c9d453a0fdc67",
        "patch": "@@ -196,6 +196,7 @@\n     'p2p_fingerprint.py',\n     'feature_uacomment.py',\n     'wallet_coinbase_category.py',\n+    'wallet_listunspent.py',\n     'feature_filelock.py',\n     'p2p_dos_header_tree.py',\n     'p2p_unrequested_blocks.py',"
      },
      {
        "sha": "b6809b0fafb5b9905eed238caf4e8a7e139e964f",
        "filename": "test/functional/wallet_listunspent.py",
        "status": "added",
        "additions": 45,
        "deletions": 0,
        "changes": 45,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8c0bbe5d09ed032ab5464262d29c9d453a0fdc67/test/functional/wallet_listunspent.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8c0bbe5d09ed032ab5464262d29c9d453a0fdc67/test/functional/wallet_listunspent.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_listunspent.py?ref=8c0bbe5d09ed032ab5464262d29c9d453a0fdc67",
        "patch": "@@ -0,0 +1,45 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the listunspent API.\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_array_result\n+\n+class ListUnspentTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        # Generate one block to an address\n+        address = self.nodes[0].getnewaddress()\n+        self.nodes[0].generatetoaddress(1, address)\n+\n+        # Immature coinbase transactions should not be safe\n+        assert_array_result(self.nodes[0].listunspent(),\n+                    {\"address\": address},\n+                    {\"safe\": False})\n+\n+        assert_array_result(self.nodes[0].listunspent(include_unsafe=False),\n+                    {\"address\": address},\n+                    {}, True)\n+\n+        new_address = self.nodes[0].getnewaddress()\n+        self.nodes[0].generatetoaddress(100, new_address)\n+\n+        # Mature coinbase transactions should be safe\n+        assert_array_result(self.nodes[0].listunspent(),\n+                    {\"address\": address},\n+                    {\"safe\": True})\n+\n+        assert_array_result(self.nodes[0].listunspent(include_unsafe=False),\n+                    {\"address\": address},\n+                    {\"safe\": True})\n+\n+\n+if __name__ == '__main__':\n+    ListUnspentTest().main()"
      }
    ]
  }
]