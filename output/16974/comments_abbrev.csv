DrahtBot,2019-10-03 20:49:10,<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.,https://github.com/bitcoin/bitcoin/pull/16974#issuecomment-538122424,538122424,
sdaftuar,2019-10-30 17:59:02,"utACK, apart from verifying how the GUI will handle the situation of pindexBestHeader going backward.  I can try to take a look at that later.  (One observation that suggests that this ought to be a safe change is that in `LoadBlockIndex()`, we already set `pindexBestHeader` to be the most-work valid header.)",https://github.com/bitcoin/bitcoin/pull/16974#issuecomment-548037467,548037467,
TheBlueMatt,2019-11-09 18:11:43,"A more important scenario than the one you described is:\n```\n    B -> C\n  /\nA\n  \\n    D -> E -> F\n```\n\nIn the current model, if D is found to be invalid, even after we've connected to C, pindexBestHeader will still point to F, which is nonsense.",https://github.com/bitcoin/bitcoin/pull/16974#issuecomment-552123756,552123756,
sipa,2019-11-09 19:59:37,"I see no problem with changing the definition of `pindexBestHeader` from ""best block header"" to ""best not-known-to-be-invalid block header"".\n\nIt feels a bit strange to only implement this as a reset when an invalid block is found, as that does not actually maintain the ""best not-known-to-be-invalid"" invariant at all times. Given the relative unimportance of `pindexBestHeader` maybe this is fin",https://github.com/bitcoin/bitcoin/pull/16974#issuecomment-552132226,552132226,
TheBlueMatt,2019-11-12 02:10:02,"Right, if we ever have a need for definitely-best-header, we can revive #12138 (which I think worked as-is, its just a nontrivial amount of code).",https://github.com/bitcoin/bitcoin/pull/16974#issuecomment-552701583,552701583,
promag,2019-11-24 22:05:58,"Another alternative is to add the best header for each `setBlockIndexCandidates` entry?\n\n@TheBlueMatt how hard is to add a test that would fail without this change?",https://github.com/bitcoin/bitcoin/pull/16974#issuecomment-557932817,557932817,
TheBlueMatt,2019-11-25 16:56:42,"@promag I don't think that helps - setBlockIndexCandidates is only for things for which we have the data, ie not-just-headers.",https://github.com/bitcoin/bitcoin/pull/16974#issuecomment-558245190,558245190,
fjahr,2019-12-20 19:58:34,"ACK 0a50019fde7781263e0c8f041d1d9dcb0dee77e8\n\nThanks for the detailed comments and evaluation on the usages, I also grepped myself to make sure no important usages where missed.\n\nHere is a super simple test for the behavior change in `getblockchaininfo`: https://github.com/fjahr/bitcoin/commit/2e599d86b13e15a2aa25e90690ee72d16e642f5e Feel free to use.",https://github.com/bitcoin/bitcoin/pull/16974#issuecomment-568068614,568068614,
kallewoof,2020-01-10 07:15:12,ACK 0a50019fde7781263e0c8f041d1d9dcb0dee77e8,https://github.com/bitcoin/bitcoin/pull/16974#issuecomment-572905017,572905017,
practicalswift,2019-09-27 12:00:49,"Nit: Should be ""management"" :)",https://github.com/bitcoin/bitcoin/pull/16974#discussion_r329037737,329037737,src/validation.cpp
