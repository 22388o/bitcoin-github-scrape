BitcoinPullTester,2014-08-11T22:32:28Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/p4662_ed6d34baf45a9520043982aea9c97691e51badf7/ for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-te",https://github.com/bitcoin/bitcoin/pull/4662#issuecomment-51850051,51850051,
laanwj,2014-08-21T03:27:16Z,"I know that this is the ""OO-way"", but I'm not sure there is any advantage to regarding CTxOut as an opaque, encapsulated object instead of just a dumb core data structure. We all know very well what is in it, we're fairly sure it won't change (unless the blockchain protocol changes), so the advantage of practising data hiding is uncertain.\n\nHowever, it pretty much a matter of taste and I'm not a",https://github.com/bitcoin/bitcoin/pull/4662#issuecomment-52874426,52874426,
petertodd,2014-08-21T05:35:04Z,"Yeah, I'd lean towards ""dumb core data structure"" myself. Given it's consensus critical, having all the details be directly visible is probably not a bad thing.\n\nOf course, I'm biased as then it'd make python-bitcoinlib be different than the core codebase it's meant to copy; I'd have to at least update the README. ;)\n",https://github.com/bitcoin/bitcoin/pull/4662#issuecomment-52880263,52880263,
TheBlueMatt,2014-08-21T23:25:14Z,"I have to agree with the two above. Keeping it a POD non-OO structure seems cleaner to me, despite the non-OO look.\n",https://github.com/bitcoin/bitcoin/pull/4662#issuecomment-52998639,52998639,
jgarzik,2014-08-22T02:00:27Z,"That's fine.  As noted, this was speculative.  Closing.  POD alive and free.\n",https://github.com/bitcoin/bitcoin/pull/4662#issuecomment-53013344,53013344,
