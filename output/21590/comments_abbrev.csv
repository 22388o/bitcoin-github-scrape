sipa,2021-04-06 23:11:27,"Using libgmp for inverses is 1.5x-2x faster still, which is somewhat expected - there are several optimizations to safegcd that become more relevant for larger input sizes but aren't useful in the 256-bit code which this is adapted from as well.\n\nI think it's fine to leave those for future improvements, as this already gets hash finalization down to ~1 signature check worth, which is probably ",https://github.com/bitcoin/bitcoin/pull/21590#issuecomment-814491750,814491750,
laanwj,2021-05-19 14:01:47,Concept and high-level review ACK. Did not check the algorithm in detail.,https://github.com/bitcoin/bitcoin/pull/21590#issuecomment-844135702,844135702,
theStack,2021-06-22 18:56:40,Concept ACK,https://github.com/bitcoin/bitcoin/pull/21590#issuecomment-866249441,866249441,
DrahtBot,2021-10-15 09:07:10,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#21313](https://github.com/bitcoin/bitcoin/pull/21313) (More robust file/directory syncing and error handling by luke-jr)",https://github.com/bitcoin/bitcoin/pull/21590#issuecomment-944129846,944129846,
sipa,2021-11-15 16:22:45,Rebased.,https://github.com/bitcoin/bitcoin/pull/21590#issuecomment-969078432,969078432,
fanquake,2021-11-15 23:44:03,"Can you use the following here and below. Functionally there's no real difference, but we've settled on this style for consistency across the build system.\n```suggestion\n [ AC_MSG_RESULT([yes]); AC_DEFINE([HAVE_BUILTIN_CTZ], [1], [Define this symbol if you have __builtin_ctz])],\n [ AC_MSG_RESULT([no])]\n```",https://github.com/bitcoin/bitcoin/pull/21590#discussion_r749765025,749765025,configure.ac
