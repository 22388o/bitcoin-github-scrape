[
  {
    "sha": "3e05a57297ddc9c55604a41e50a7a94d220db7ee",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozZTA1YTU3Mjk3ZGRjOWM1NTYwNGE0MWU1MGE3YTk0ZDIyMGRiN2Vl",
    "commit": {
      "author": {
        "name": "Sebastian Falbesoner",
        "email": "sebastian.falbesoner@gmail.com",
        "date": "2021-05-25T12:39:45Z"
      },
      "committer": {
        "name": "Sebastian Falbesoner",
        "email": "sebastian.falbesoner@gmail.com",
        "date": "2021-05-25T12:39:45Z"
      },
      "message": "test: use MiniWallet (P2PK mode) for feature_dersig.py\n\nThis test can now be run even with the Bitcoin Core wallet disabled.",
      "tree": {
        "sha": "feb8ea9aef61628bc9346dd25d483787e7452ace",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/feb8ea9aef61628bc9346dd25d483787e7452ace"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3e05a57297ddc9c55604a41e50a7a94d220db7ee",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3e05a57297ddc9c55604a41e50a7a94d220db7ee",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3e05a57297ddc9c55604a41e50a7a94d220db7ee",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3e05a57297ddc9c55604a41e50a7a94d220db7ee/comments",
    "author": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7041d256e3a951dc7cc8b10db32e6f21d2071806",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7041d256e3a951dc7cc8b10db32e6f21d2071806",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7041d256e3a951dc7cc8b10db32e6f21d2071806"
      }
    ],
    "stats": {
      "total": 26,
      "additions": 16,
      "deletions": 10
    },
    "files": [
      {
        "sha": "eb027c554a08c0621d774e58e7f21b16077ca368",
        "filename": "test/functional/feature_dersig.py",
        "status": "modified",
        "additions": 16,
        "deletions": 10,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3e05a57297ddc9c55604a41e50a7a94d220db7ee/test/functional/feature_dersig.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3e05a57297ddc9c55604a41e50a7a94d220db7ee/test/functional/feature_dersig.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_dersig.py?ref=3e05a57297ddc9c55604a41e50a7a94d220db7ee",
        "patch": "@@ -7,14 +7,21 @@\n Test that the DERSIG soft-fork activates at (regtest) height 1251.\n \"\"\"\n \n-from test_framework.blocktools import create_coinbase, create_block, create_transaction\n+from test_framework.blocktools import (\n+    create_block,\n+    create_coinbase,\n+)\n from test_framework.messages import msg_block\n from test_framework.p2p import P2PInterface\n from test_framework.script import CScript\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import (\n     assert_equal,\n )\n+from test_framework.wallet import (\n+    MiniWallet,\n+    MiniWalletMode,\n+)\n \n DERSIG_HEIGHT = 1251\n \n@@ -46,8 +53,9 @@ def set_test_params(self):\n         self.setup_clean_chain = True\n         self.rpc_timeout = 240\n \n-    def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n+    def create_tx(self, input_txid):\n+        utxo_to_spend = self.miniwallet.get_utxo(txid=input_txid, mark_as_spent=False)\n+        return self.miniwallet.create_self_transfer(from_node=self.nodes[0], utxo_to_spend=utxo_to_spend)['tx']\n \n     def test_dersig_info(self, *, is_active):\n         assert_equal(self.nodes[0].getblockchaininfo()['softforks']['bip66'],\n@@ -60,17 +68,16 @@ def test_dersig_info(self, *, is_active):\n \n     def run_test(self):\n         peer = self.nodes[0].add_p2p_connection(P2PInterface())\n+        self.miniwallet = MiniWallet(self.nodes[0], mode=MiniWalletMode.RAW_P2PK)\n \n         self.test_dersig_info(is_active=False)\n \n         self.log.info(\"Mining %d blocks\", DERSIG_HEIGHT - 2)\n-        self.coinbase_txids = [self.nodes[0].getblock(b)['tx'][0] for b in self.nodes[0].generate(DERSIG_HEIGHT - 2)]\n-        self.nodeaddress = self.nodes[0].getnewaddress()\n+        self.coinbase_txids = [self.nodes[0].getblock(b)['tx'][0] for b in self.miniwallet.generate(DERSIG_HEIGHT - 2)]\n \n         self.log.info(\"Test that a transaction with non-DER signature can still appear in a block\")\n \n-        spendtx = create_transaction(self.nodes[0], self.coinbase_txids[0],\n-                self.nodeaddress, amount=1.0)\n+        spendtx = self.create_tx(self.coinbase_txids[0])\n         unDERify(spendtx)\n         spendtx.rehash()\n \n@@ -104,8 +111,7 @@ def run_test(self):\n         self.log.info(\"Test that transactions with non-DER signatures cannot appear in a block\")\n         block.nVersion = 3\n \n-        spendtx = create_transaction(self.nodes[0], self.coinbase_txids[1],\n-                self.nodeaddress, amount=1.0)\n+        spendtx = self.create_tx(self.coinbase_txids[1])\n         unDERify(spendtx)\n         spendtx.rehash()\n \n@@ -133,7 +139,7 @@ def run_test(self):\n             peer.sync_with_ping()\n \n         self.log.info(\"Test that a version 3 block with a DERSIG-compliant transaction is accepted\")\n-        block.vtx[1] = create_transaction(self.nodes[0], self.coinbase_txids[1], self.nodeaddress, amount=1.0)\n+        block.vtx[1] = self.create_tx(self.coinbase_txids[1])\n         block.hashMerkleRoot = block.calc_merkle_root()\n         block.rehash()\n         block.solve()"
      }
    ]
  }
]