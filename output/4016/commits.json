[
  {
    "sha": "8414cb04949e2b1b6811b338a3c854df577a3b76",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4NDE0Y2IwNDk0OWUyYjFiNjgxMWIzMzhhM2M4NTRkZjU3N2EzYjc2",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-04-07T06:39:31Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-04-07T06:43:27Z"
      },
      "message": "Doxygen-compatible comments in coding style",
      "tree": {
        "sha": "96cc0b70fe48a667800115585f70119b55013c14",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/96cc0b70fe48a667800115585f70119b55013c14"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8414cb04949e2b1b6811b338a3c854df577a3b76",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8414cb04949e2b1b6811b338a3c854df577a3b76",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8414cb04949e2b1b6811b338a3c854df577a3b76",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8414cb04949e2b1b6811b338a3c854df577a3b76/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f4e1c347cf1861595609ba841d35c4a59b50bde2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f4e1c347cf1861595609ba841d35c4a59b50bde2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f4e1c347cf1861595609ba841d35c4a59b50bde2"
      }
    ],
    "stats": {
      "total": 57,
      "additions": 55,
      "deletions": 2
    },
    "files": [
      {
        "sha": "69388c9ce254111ec7fac9acb9cac36f17c811b3",
        "filename": "doc/coding.md",
        "status": "modified",
        "additions": 55,
        "deletions": 2,
        "changes": 57,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8414cb04949e2b1b6811b338a3c854df577a3b76/doc/coding.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8414cb04949e2b1b6811b338a3c854df577a3b76/doc/coding.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/coding.md?ref=8414cb04949e2b1b6811b338a3c854df577a3b76",
        "patch": "@@ -43,8 +43,61 @@ Common types:\n \tset     set or multiset\n \tbn      CBigNum\n \n--------------------------\n+Doxygen comments\n+-----------------\n+\n+To facilitate the generation of documentation, use doxygen-compatible comment blocks for functions, methods and fields.\n+\n+For example, to describe a function use:\n+```c++\n+/**\n+ * ... text ...\n+ * @param[in] arg1    A description\n+ * @param[in] arg2    Another argument description\n+ * @pre Precondition for function...\n+ */\n+bool function(int arg1, const char *arg2)\n+```\n+A complete list of `@xxx` commands can be found at http://www.stack.nl/~dimitri/doxygen/manual/commands.html.\n+As Doxygen recognizes the comments by the delimiters (`/**` and `*/` in this case), you don't\n+*need* to provide any commands for a comment to be valid, just a description text is fine. \n+\n+To describe a class use the same construct above the class definition:\n+```c++\n+/** \n+ * Alerts are for notifying old versions if they become too obsolete and\n+ * need to upgrade. The message is displayed in the status bar.\n+ * @see GetWarnings()\n+ */\n+class CAlert\n+{\n+```\n+\n+To describe a member or variable use:\n+```c++\n+int var; //!< Detailed description after the member\n+```\n+\n+Also OK:\n+```c++\n+///\n+/// ... text ...\n+///\n+bool function2(int arg1, const char *arg2)\n+```\n+\n+Not OK (used plenty in the current source, but not picked up):\n+```c++\n+//\n+// ... text ...\n+//\n+```\n+\n+A full list of comment syntaxes picked up by doxygen can be found at http://www.stack.nl/~dimitri/doxygen/manual/docblocks.html,\n+but if possible use one of the above styles.\n+\n Locking/mutex usage notes\n+-------------------------\n \n The code is multi-threaded, and uses mutexes and the\n LOCK/TRY_LOCK macros to protect data structures.\n@@ -60,8 +113,8 @@ between the various components is a goal, with any necessary locking\n done by the components (e.g. see the self-contained CKeyStore class\n and its cs_KeyStore lock for example).\n \n--------\n Threads\n+-------\n \n - ThreadScriptCheck : Verifies block scripts.\n "
      }
    ]
  }
]