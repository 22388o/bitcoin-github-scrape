jonasschnelli,2015-11-27T07:48:25Z,Concept ACK.\nI think this solution performs much better then #7067.\nHave plans to add tests for this soon.\n,https://github.com/bitcoin/bitcoin/pull/7105#issuecomment-160061475,160061475,
sipa,2015-11-27T14:42:23Z,Seems to have a deadlock or infinite loop.\n,https://github.com/bitcoin/bitcoin/pull/7105#issuecomment-160152667,160152667,
sipa,2015-11-27T16:28:09Z,"Fixed 3 bugs (infinite loop, marking the accepted rather than conflicting tx, and not rebroadcasting), and added some debug output.\n",https://github.com/bitcoin/bitcoin/pull/7105#issuecomment-160170692,160170692,
sipa,2015-11-27T19:38:19Z,"All rpc tests pass now, including the txn-doublespend.py one which tests negative confirmations.\n",https://github.com/bitcoin/bitcoin/pull/7105#issuecomment-160194472,160194472,
gmaxwell,2015-11-27T20:01:37Z,"I tried this on an old wallet that has a number of conflicts in it... they show as 'confirmations"": 0,'.  (On master, they show as -1). ""So much for tests.""\n\nEdit: Reading the code, I think this might be intentional. Bleh. I don't think it's acceptable to silently turn -1 confirmed count transactions to 0s in an upgrade, even if we release note it.  I think we need to either find a way around th",https://github.com/bitcoin/bitcoin/pull/7105#issuecomment-160197667,160197667,
sipa,2015-11-27T20:06:53Z,"@gmaxwell You'll need to rescan for them to be detected.\n\nI don't mind adding some ""fall back"" logic to guess historical conflicts, but it can't be accurate, as we have no guaranteed way of knowing about them.\n",https://github.com/bitcoin/bitcoin/pull/7105#issuecomment-160198667,160198667,
gmaxwell,2015-11-27T20:10:55Z,"@sipa: I'd be okay with it if it was too conservative, e.g. showing an evicted historical transaction as conflicted.\n",https://github.com/bitcoin/bitcoin/pull/7105#issuecomment-160199034,160199034,
sipa,2015-11-27T20:12:31Z,"@gmaxwell It can't work even for spends of outputs that were very recently spent, along with all other outputs of those transactions.\n",https://github.com/bitcoin/bitcoin/pull/7105#issuecomment-160199134,160199134,
gmaxwell,2015-11-27T20:13:14Z,As an aside Concept ACK; I like tracking the conflicts explicitly and knowing the conflict depths will be nice.\n,https://github.com/bitcoin/bitcoin/pull/7105#issuecomment-160199184,160199184,
sipa,2015-11-27T20:13:54Z,"Maybe we just need a separate class like ""limbo"" which means unconfirmed, not known to be conflicted, but also not in the mempool?\n",https://github.com/bitcoin/bitcoin/pull/7105#issuecomment-160199231,160199231,
sipa,2015-11-28T12:22:34Z,Added release notes about this change.\n,https://github.com/bitcoin/bitcoin/pull/7105#issuecomment-160288476,160288476,
gmaxwell,2015-11-28T12:50:45Z,"Limbo sounds useful.  Damn I love this patch, but do not love the inaccurate data on a non-rescanned wallet.\n",https://github.com/bitcoin/bitcoin/pull/7105#issuecomment-160291881,160291881,
sipa,2015-11-28T13:35:17Z,"Added a ""trusted"" field to listtransactions output for unconfirmed transactions.\n",https://github.com/bitcoin/bitcoin/pull/7105#issuecomment-160296311,160296311,
sipa,2015-11-29T12:24:16Z,Rebased.\n,https://github.com/bitcoin/bitcoin/pull/7105#issuecomment-160413293,160413293,
sipa,2015-11-30T11:52:31Z,Tagging as 0.12: this fixes the problem that evicted wallet transaction's inputs are automatically considered respendable.\n,https://github.com/bitcoin/bitcoin/pull/7105#issuecomment-160609039,160609039,
laanwj,2015-11-30T12:22:10Z,"Yes, should definitely be in 0.12, should be mentioned that this a fix for a bug where the wallet silently re-spends old transactions because they've been evicted from the mempool, or if they've never been in the mempool (`-walletbroadcast`).\n\nEdit: The UI regards everything with <0 confirms as 'conflicted', it does not distinguish between different negative values. This is good, it needs no cha",https://github.com/bitcoin/bitcoin/pull/7105#issuecomment-160615362,160615362,
sipa,2015-11-30T12:43:02Z,"@laanwj It may make sense to distinguish in the UI between 'unconfirmed' (meaning in mempool) and something else like 'limbo' (meaning not in mempool)? RPC exposes this via the ""trusted"" field.\n",https://github.com/bitcoin/bitcoin/pull/7105#issuecomment-160618625,160618625,
jonasschnelli,2015-11-30T15:51:29Z,"**Tested ACK.**\n\nExtended the PR with two commits:\nhttps://github.com/jonasschnelli/bitcoin/commits/2015/11/sipa_realconflicts\n(mempool limit / eviction RPC test + GUI transactions details improvement).\n\n<img width=""732"" alt=""bildschirmfoto 2015-11-30 um 16 51 07"" src=""https://cloud.githubusercontent.com/assets/178464/11476349/90def9a4-9782-11e5-9726-6ca9fdf70d89.png"">\n\n<img width=""732"" al",https://github.com/bitcoin/bitcoin/pull/7105#issuecomment-160668542,160668542,
dgenr8,2015-11-30T19:35:04Z,The network is trying to advise wallet immediately of wtx conflicts.  We should not stick our fingers in our ears and sing.  These should be added to the wallet rather than showing up only when confirmed.\n,https://github.com/bitcoin/bitcoin/pull/7105#issuecomment-160735174,160735174,
sipa,2015-11-30T19:50:42Z,"So what do you propose?\n- Pass every mempool rejected transaction to the wallet? That would\n  trivially allow dust attacking your system.\n- Only pass rejected transactions that are not rejected because of validity\n  or policy? Now it's trivial to bypass.\n\nYes, more information about double spends is useful, but using the P2P\nnetwork for it is only useful for cases where it wasn't intented a",https://github.com/bitcoin/bitcoin/pull/7105#issuecomment-160739331,160739331,
dgenr8,2015-11-30T20:23:55Z,"I think this change is good and don't mean to go off topic.  It does move a little toward more historical info and less real-time info, by not marking unconfirmed conflicts as visibly.  There is a lot going on in those few minutes.  It's good to see the wallet providing more information and hopefully soon, more control.\n\nSince you asked, I think the first non-clone conflict of a mempool tx shoul",https://github.com/bitcoin/bitcoin/pull/7105#issuecomment-160750837,160750837,
laanwj,2015-12-01T08:21:59Z,utACK\n,https://github.com/bitcoin/bitcoin/pull/7105#issuecomment-160891863,160891863,
