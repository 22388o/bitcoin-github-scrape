[
  {
    "sha": "fa013664ae23d0682a195b9bded85bc19c99536e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTAxMzY2NGFlMjNkMDY4MmExOTViOWJkZWQ4NWJjMTljOTk1MzZl",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-05-18T21:44:39Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-05-23T18:12:32Z"
      },
      "message": "util: Add type safe GetTime",
      "tree": {
        "sha": "d9b4ecfc48d4f8889498e20d1ffe802cd09c56a3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d9b4ecfc48d4f8889498e20d1ffe802cd09c56a3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa013664ae23d0682a195b9bded85bc19c99536e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUiqEAv7BhN54oWKT6XRU1s8eCXd3piEvGalieK4T/Udo5FjBNDNiSQWkaEXgfMd\nfPUPwGReJTiYRZRmYdC5173VVKNnt8kwzg9IIgtLFvzCwcpSmok2J2mUYpPGCgpe\nLQ97gZD0B1744hlnZMurVBPHZdySkgqaGaKtpee8jITBdmTOXofUrV2r5bBMUKpF\nWE0SA+LO42b6QDxnAr3+V+/HI4IUwkg/RzqNrV5DLy6sT0BcbHLT/OURMcLu29OD\nOJxxEW1IqGjbV4/uGJWzInjmLkwC7aXeNnPErRmShb0OcrrfBiOkwZnFptT0ZI0I\nhBRqqnJSG1iXaF0xgeP6MgDczM3WDVQXyxEihDwUubi2GF805AapCko8726AdjXR\n3m6rAGgNxzBJSEckAuBUnSFinmWvsAi9evDbqHIbrlGarXCV98yK9JfqMP28XrGn\n00ca6NlgUgWTfyTgd2OO+jHC9YqbGYmnXQjB5wZUQ5Yfy6SrTFKCKh5D23zREi3w\n6FwJ7P7g\n=Fx4k\n-----END PGP SIGNATURE-----",
        "payload": "tree d9b4ecfc48d4f8889498e20d1ffe802cd09c56a3\nparent 277abed604a81be8036458573d052eaa293b6cf8\nauthor MarcoFalke <falke.marco@gmail.com> 1558215879 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1558635152 -0400\n\nutil: Add type safe GetTime\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa013664ae23d0682a195b9bded85bc19c99536e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa013664ae23d0682a195b9bded85bc19c99536e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa013664ae23d0682a195b9bded85bc19c99536e/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "277abed604a81be8036458573d052eaa293b6cf8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/277abed604a81be8036458573d052eaa293b6cf8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/277abed604a81be8036458573d052eaa293b6cf8"
      }
    ],
    "stats": {
      "total": 107,
      "additions": 96,
      "deletions": 11
    },
    "files": [
      {
        "sha": "c6162b5caa97056bebb3833c3ef6c5dc4f3880ec",
        "filename": "src/Makefile.bench.include",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa013664ae23d0682a195b9bded85bc19c99536e/src/Makefile.bench.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa013664ae23d0682a195b9bded85bc19c99536e/src/Makefile.bench.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.bench.include?ref=fa013664ae23d0682a195b9bded85bc19c99536e",
        "patch": "@@ -28,6 +28,7 @@ bench_bench_bitcoin_SOURCES = \\\n   bench/merkle_root.cpp \\\n   bench/mempool_eviction.cpp \\\n   bench/rpc_mempool.cpp \\\n+  bench/util_time.cpp \\\n   bench/verify_script.cpp \\\n   bench/base58.cpp \\\n   bench/bech32.cpp \\"
      },
      {
        "sha": "72d97354aa5516faba0ed0684edc3c2a3c60fc88",
        "filename": "src/bench/util_time.cpp",
        "status": "added",
        "additions": 42,
        "deletions": 0,
        "changes": 42,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa013664ae23d0682a195b9bded85bc19c99536e/src/bench/util_time.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa013664ae23d0682a195b9bded85bc19c99536e/src/bench/util_time.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/util_time.cpp?ref=fa013664ae23d0682a195b9bded85bc19c99536e",
        "patch": "@@ -0,0 +1,42 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <bench/bench.h>\n+\n+#include <util/time.h>\n+\n+static void BenchTimeDeprecated(benchmark::State& state)\n+{\n+    while (state.KeepRunning()) {\n+        (void)GetTime();\n+    }\n+}\n+\n+static void BenchTimeMock(benchmark::State& state)\n+{\n+    SetMockTime(111);\n+    while (state.KeepRunning()) {\n+        (void)GetTime<std::chrono::seconds>();\n+    }\n+    SetMockTime(0);\n+}\n+\n+static void BenchTimeMillis(benchmark::State& state)\n+{\n+    while (state.KeepRunning()) {\n+        (void)GetTime<std::chrono::milliseconds>();\n+    }\n+}\n+\n+static void BenchTimeMillisSys(benchmark::State& state)\n+{\n+    while (state.KeepRunning()) {\n+        (void)GetTimeMillis();\n+    }\n+}\n+\n+BENCHMARK(BenchTimeDeprecated, 100000000);\n+BENCHMARK(BenchTimeMillis, 6000000);\n+BENCHMARK(BenchTimeMillisSys, 6000000);\n+BENCHMARK(BenchTimeMock, 300000000);"
      },
      {
        "sha": "8fee66d6c319d2054a25f50a988a1db2a47dbe7e",
        "filename": "src/test/util_tests.cpp",
        "status": "modified",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa013664ae23d0682a195b9bded85bc19c99536e/src/test/util_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa013664ae23d0682a195b9bded85bc19c99536e/src/test/util_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util_tests.cpp?ref=fa013664ae23d0682a195b9bded85bc19c99536e",
        "patch": "@@ -1068,6 +1068,27 @@ BOOST_AUTO_TEST_CASE(gettime)\n     BOOST_CHECK((GetTime() & ~0xFFFFFFFFLL) == 0);\n }\n \n+BOOST_AUTO_TEST_CASE(util_time_GetTime)\n+{\n+    SetMockTime(111);\n+    // Check that mock time does not change after a sleep\n+    for (const auto& num_sleep : {0, 1}) {\n+        MilliSleep(num_sleep);\n+        BOOST_CHECK_EQUAL(111, GetTime()); // Deprecated time getter\n+        BOOST_CHECK_EQUAL(111, GetTime<std::chrono::seconds>().count());\n+        BOOST_CHECK_EQUAL(111000, GetTime<std::chrono::milliseconds>().count());\n+        BOOST_CHECK_EQUAL(111000000, GetTime<std::chrono::microseconds>().count());\n+    }\n+\n+    SetMockTime(0);\n+    // Check that system time changes after a sleep\n+    const auto ms_0 = GetTime<std::chrono::milliseconds>();\n+    const auto us_0 = GetTime<std::chrono::microseconds>();\n+    MilliSleep(1);\n+    BOOST_CHECK(ms_0 < GetTime<std::chrono::milliseconds>());\n+    BOOST_CHECK(us_0 < GetTime<std::chrono::microseconds>());\n+}\n+\n BOOST_AUTO_TEST_CASE(test_IsDigit)\n {\n     BOOST_CHECK_EQUAL(IsDigit('0'), true);"
      },
      {
        "sha": "2b202ae95f61e35594a68d9fcaa56bf819c2e2f2",
        "filename": "src/util/time.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 1,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa013664ae23d0682a195b9bded85bc19c99536e/src/util/time.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa013664ae23d0682a195b9bded85bc19c99536e/src/util/time.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/time.cpp?ref=fa013664ae23d0682a195b9bded85bc19c99536e",
        "patch": "@@ -1,5 +1,5 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2018 The Bitcoin Core developers\n+// Copyright (c) 2009-2019 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -27,6 +27,20 @@ int64_t GetTime()\n     return now;\n }\n \n+template <typename T>\n+T GetTime()\n+{\n+    const std::chrono::seconds mocktime{nMockTime.load(std::memory_order_relaxed)};\n+\n+    return std::chrono::duration_cast<T>(\n+        mocktime.count() ?\n+            mocktime :\n+            std::chrono::microseconds{GetTimeMicros()});\n+}\n+template std::chrono::seconds GetTime();\n+template std::chrono::milliseconds GetTime();\n+template std::chrono::microseconds GetTime();\n+\n void SetMockTime(int64_t nMockTimeIn)\n {\n     nMockTime.store(nMockTimeIn, std::memory_order_relaxed);"
      },
      {
        "sha": "e4f9996777c52765b9652b1f0b38dd170c6450e5",
        "filename": "src/util/time.h",
        "status": "modified",
        "additions": 17,
        "deletions": 10,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa013664ae23d0682a195b9bded85bc19c99536e/src/util/time.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa013664ae23d0682a195b9bded85bc19c99536e/src/util/time.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/time.h?ref=fa013664ae23d0682a195b9bded85bc19c99536e",
        "patch": "@@ -1,5 +1,5 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2018 The Bitcoin Core developers\n+// Copyright (c) 2009-2019 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -8,27 +8,34 @@\n \n #include <stdint.h>\n #include <string>\n+#include <chrono>\n \n /**\n- * GetTimeMicros() and GetTimeMillis() both return the system time, but in\n- * different units. GetTime() returns the system time in seconds, but also\n- * supports mocktime, where the time can be specified by the user, eg for\n- * testing (eg with the setmocktime rpc, or -mocktime argument).\n- *\n- * TODO: Rework these functions to be type-safe (so that we don't inadvertently\n- * compare numbers with different units, or compare a mocktime to system time).\n+ * DEPRECATED\n+ * Use either GetSystemTimeInSeconds (not mockable) or GetTime<T> (mockable)\n  */\n-\n int64_t GetTime();\n+\n+/** Returns the system time (not mockable) */\n int64_t GetTimeMillis();\n+/** Returns the system time (not mockable) */\n int64_t GetTimeMicros();\n+/** Returns the system time (not mockable) */\n int64_t GetSystemTimeInSeconds(); // Like GetTime(), but not mockable\n+\n+/** For testing. Set e.g. with the setmocktime rpc, or -mocktime argument */\n void SetMockTime(int64_t nMockTimeIn);\n+/** For testing */\n int64_t GetMockTime();\n+\n void MilliSleep(int64_t n);\n \n+/** Return system time (or mocked time, if set) */\n+template <typename T>\n+T GetTime();\n+\n /**\n- * ISO 8601 formatting is preferred. Use the FormatISO8601{DateTime,Date,Time}\n+ * ISO 8601 formatting is preferred. Use the FormatISO8601{DateTime,Date}\n  * helper functions if possible.\n  */\n std::string FormatISO8601DateTime(int64_t nTime);"
      }
    ]
  }
]