[
  {
    "sha": "41bf1598f12d546851e509d369783d493bdd7108",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0MWJmMTU5OGYxMmQ1NDY4NTFlNTA5ZDM2OTc4M2Q0OTNiZGQ3MTA4",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2017-07-16T17:42:37Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2017-07-16T17:42:37Z"
      },
      "message": "Remove unreachable code",
      "tree": {
        "sha": "b605908ce37353e641e9f400244d60a3b6eddccf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b605908ce37353e641e9f400244d60a3b6eddccf"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/41bf1598f12d546851e509d369783d493bdd7108",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/41bf1598f12d546851e509d369783d493bdd7108",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/41bf1598f12d546851e509d369783d493bdd7108",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/41bf1598f12d546851e509d369783d493bdd7108/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5cfdda2503c995cdd563b1a2a29162ac298d173d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5cfdda2503c995cdd563b1a2a29162ac298d173d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5cfdda2503c995cdd563b1a2a29162ac298d173d"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 0,
      "deletions": 23
    },
    "files": [
      {
        "sha": "5257458c2376f0938269478ed8e935214d8bf792",
        "filename": "src/rest.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 21,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/41bf1598f12d546851e509d369783d493bdd7108/src/rest.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/41bf1598f12d546851e509d369783d493bdd7108/src/rest.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rest.cpp?ref=41bf1598f12d546851e509d369783d493bdd7108",
        "patch": "@@ -190,9 +190,6 @@ static bool rest_headers(HTTPRequest* req,\n         return RESTERR(req, HTTP_NOT_FOUND, \"output format not found (available: .bin, .hex)\");\n     }\n     }\n-\n-    // not reached\n-    return true; // continue to process further HTTP reqs on this cxn\n }\n \n static bool rest_block(HTTPRequest* req,\n@@ -253,9 +250,6 @@ static bool rest_block(HTTPRequest* req,\n         return RESTERR(req, HTTP_NOT_FOUND, \"output format not found (available: \" + AvailableDataFormatsString() + \")\");\n     }\n     }\n-\n-    // not reached\n-    return true; // continue to process further HTTP reqs on this cxn\n }\n \n static bool rest_block_extended(HTTPRequest* req, const std::string& strURIPart)\n@@ -292,9 +286,6 @@ static bool rest_chaininfo(HTTPRequest* req, const std::string& strURIPart)\n         return RESTERR(req, HTTP_NOT_FOUND, \"output format not found (available: json)\");\n     }\n     }\n-\n-    // not reached\n-    return true; // continue to process further HTTP reqs on this cxn\n }\n \n static bool rest_mempool_info(HTTPRequest* req, const std::string& strURIPart)\n@@ -317,9 +308,6 @@ static bool rest_mempool_info(HTTPRequest* req, const std::string& strURIPart)\n         return RESTERR(req, HTTP_NOT_FOUND, \"output format not found (available: json)\");\n     }\n     }\n-\n-    // not reached\n-    return true; // continue to process further HTTP reqs on this cxn\n }\n \n static bool rest_mempool_contents(HTTPRequest* req, const std::string& strURIPart)\n@@ -342,9 +330,6 @@ static bool rest_mempool_contents(HTTPRequest* req, const std::string& strURIPar\n         return RESTERR(req, HTTP_NOT_FOUND, \"output format not found (available: json)\");\n     }\n     }\n-\n-    // not reached\n-    return true; // continue to process further HTTP reqs on this cxn\n }\n \n static bool rest_tx(HTTPRequest* req, const std::string& strURIPart)\n@@ -394,9 +379,6 @@ static bool rest_tx(HTTPRequest* req, const std::string& strURIPart)\n         return RESTERR(req, HTTP_NOT_FOUND, \"output format not found (available: \" + AvailableDataFormatsString() + \")\");\n     }\n     }\n-\n-    // not reached\n-    return true; // continue to process further HTTP reqs on this cxn\n }\n \n static bool rest_getutxos(HTTPRequest* req, const std::string& strURIPart)\n@@ -581,9 +563,6 @@ static bool rest_getutxos(HTTPRequest* req, const std::string& strURIPart)\n         return RESTERR(req, HTTP_NOT_FOUND, \"output format not found (available: \" + AvailableDataFormatsString() + \")\");\n     }\n     }\n-\n-    // not reached\n-    return true; // continue to process further HTTP reqs on this cxn\n }\n \n static const struct {"
      },
      {
        "sha": "c52fcfe5daca8aa36813c205e7eb3aaf87e1df1e",
        "filename": "src/wallet/db.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/41bf1598f12d546851e509d369783d493bdd7108/src/wallet/db.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/41bf1598f12d546851e509d369783d493bdd7108/src/wallet/db.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/db.cpp?ref=41bf1598f12d546851e509d369783d493bdd7108",
        "patch": "@@ -554,7 +554,6 @@ bool CDB::Rewrite(CWalletDBWrapper& dbw, const char* pszSkip)\n         }\n         MilliSleep(100);\n     }\n-    return false;\n }\n \n \n@@ -680,7 +679,6 @@ bool CWalletDBWrapper::Backup(const std::string& strDest)\n         }\n         MilliSleep(100);\n     }\n-    return false;\n }\n \n void CWalletDBWrapper::Flush(bool shutdown)"
      }
    ]
  }
]