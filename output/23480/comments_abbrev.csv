sipa,2021-11-11 17:39:15,"@apoelstra @real-or-random @jonasnick @sanket1729 Perhaps the documentation here needs some disclaimer at least about the potential pitfalls of using it directly to construct a wallet. It's not intended for that purpose, only for things like representing otherwise incomplete knowledge in e.g. inference, but adding it to the descriptor language does make it available for all purposes. Can you help ",https://github.com/bitcoin/bitcoin/pull/23480#issuecomment-966492957,966492957,
sanket1729,2021-11-12 13:30:28,"Agreed that the documentation needs a disclaimer. The two drawbacks that I can think of.\n\n1) This one is listed in the BIP 341: If people directly use output keys in aggregation using proofs of knowledge.(https://github.com/bitcoin/bips/blob/master/bip-0341.mediawiki#cite_ref-22-0)\n2) In future protocol constructions, it might be desirable to prove that there is no script path given TxOut/Sc",https://github.com/bitcoin/bitcoin/pull/23480#issuecomment-967120006,967120006,
real-or-random,2021-11-12 14:19:13,"The only pitfall I see is the one mentioned by @sanket1729 : `rawtr()` is potentially incomplete information because there could always be another way to spend that you don't know about... But that's exactly its feature, so I guess it's fine. Anyway, I think if you do ""raw"" stuff, you should be know what you're doing. ",https://github.com/bitcoin/bitcoin/pull/23480#issuecomment-967152556,967152556,
Sjors,2021-11-12 15:40:17,"> * is there is any use of `rawtr()` over `raw()`?\n\nI second that question.",https://github.com/bitcoin/bitcoin/pull/23480#issuecomment-967212144,967212144,
sipa,2021-11-12 15:46:46,"Right; I guess the only advantage of rawtr over raw/addr is dealing with cases where the public key is either actually untweaked (and e.g. you need want to provide origin information along with it) or it is tweaked in an unknown way, but you have the tweaked private key.\n\nraw() in those cases cannot represent all information you have, while rawtr can.",https://github.com/bitcoin/bitcoin/pull/23480#issuecomment-967216704,967216704,
apoelstra,2021-11-12 15:55:55,"Agree with Sanket's comments. I also agree that having `raw` in the name should be sufficient warning for users to avoid this, especially since it's not any harder to use `tr`.\n\nRegarding the usefulness, I think it's definitely useful for ""infer-only"" cases like running `scanutxoset`. May also be useful for recovery scenarios ... although it's hard for me to think of a case where you've genera",https://github.com/bitcoin/bitcoin/pull/23480#issuecomment-967223292,967223292,
sipa,2021-11-23 21:35:37,"@apoelstra https://twitter.com/achow101/status/1459617340123926534 may or may not have been related. Arguably, not a good justification, but a use case nonetheless...",https://github.com/bitcoin/bitcoin/pull/23480#issuecomment-977188719,977188719,
benthecarman,2021-11-11 08:17:58,I think saying `tweaked key` could be confusing unless you know what's going on under the hood of taproot. Maybe something like `output key` would be better,https://github.com/bitcoin/bitcoin/pull/23480#discussion_r747288559,747288559,doc/descriptors.md
sipa,2021-11-11 18:51:54,Agree.,https://github.com/bitcoin/bitcoin/pull/23480#discussion_r747741109,747741109,doc/descriptors.md
Sjors,2021-11-12 20:08:29,Or maybe call it pre-tweaked. I can see how that's more useful than a raw descriptor with the tweaked key.,https://github.com/bitcoin/bitcoin/pull/23480#discussion_r748557587,748557587,doc/descriptors.md
