[
  {
    "sha": "af1eb5ec61a893a56e78586efaa8a60711b4e9a1",
    "node_id": "C_kwDOABII59oAKGFmMWViNWVjNjFhODkzYTU2ZTc4NTg2ZWZhYThhNjA3MTFiNGU5YTE",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2021-11-10T04:08:16Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2021-11-10T04:12:17Z"
      },
      "message": "Add rawtr() descriptor for P2TR with unknown tweak",
      "tree": {
        "sha": "10e23b8598f47e083e3e7272222d73c806e5d3f6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/10e23b8598f47e083e3e7272222d73c806e5d3f6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/af1eb5ec61a893a56e78586efaa8a60711b4e9a1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/af1eb5ec61a893a56e78586efaa8a60711b4e9a1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/af1eb5ec61a893a56e78586efaa8a60711b4e9a1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/af1eb5ec61a893a56e78586efaa8a60711b4e9a1/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8ae4ba481ce8f7da173bef24432729c87a36cb70",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8ae4ba481ce8f7da173bef24432729c87a36cb70",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8ae4ba481ce8f7da173bef24432729c87a36cb70"
      }
    ],
    "stats": {
      "total": 36,
      "additions": 36,
      "deletions": 0
    },
    "files": [
      {
        "sha": "d2401b03f922b704c98d918c4a0011233e2e754c",
        "filename": "doc/descriptors.md",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/af1eb5ec61a893a56e78586efaa8a60711b4e9a1/doc/descriptors.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/af1eb5ec61a893a56e78586efaa8a60711b4e9a1/doc/descriptors.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/descriptors.md?ref=af1eb5ec61a893a56e78586efaa8a60711b4e9a1",
        "patch": "@@ -73,6 +73,7 @@ Descriptors consist of several types of expressions. The top level expression is\n - `tr(KEY)` or `tr(KEY,TREE)` (top level only): P2TR output with the specified key as internal key, and optionally a tree of script paths.\n - `addr(ADDR)` (top level only): the script which ADDR expands to.\n - `raw(HEX)` (top level only): the script whose hex encoding is HEX.\n+- `rawtr(KEY)` (top level only): P2TR output with the specified key as tweaked key.\n \n `KEY` expressions:\n - Optionally, key origin information, consisting of:"
      },
      {
        "sha": "a4e3c740d891cf0c0cb81f4dd797454f059b93aa",
        "filename": "src/script/descriptor.cpp",
        "status": "modified",
        "additions": 35,
        "deletions": 0,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/af1eb5ec61a893a56e78586efaa8a60711b4e9a1/src/script/descriptor.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/af1eb5ec61a893a56e78586efaa8a60711b4e9a1/src/script/descriptor.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/descriptor.cpp?ref=af1eb5ec61a893a56e78586efaa8a60711b4e9a1",
        "patch": "@@ -884,6 +884,24 @@ class TRDescriptor final : public DescriptorImpl\n     bool IsSingleType() const final { return true; }\n };\n \n+/** A parsed rawtr(...) descriptor. */\n+class RawTRDescriptor final : public DescriptorImpl\n+{\n+protected:\n+    std::vector<CScript> MakeScripts(const std::vector<CPubKey>& keys, Span<const CScript> scripts, FlatSigningProvider& out) const override\n+    {\n+        assert(keys.size() == 1);\n+        XOnlyPubKey xpk(keys[0]);\n+        if (!xpk.IsFullyValid()) return {};\n+        WitnessV1Taproot output{xpk};\n+        return Vector(GetScriptForDestination(output));\n+    }\n+public:\n+    RawTRDescriptor(std::unique_ptr<PubkeyProvider> internal_key) : DescriptorImpl(Vector(std::move(internal_key)), \"rawtr\") {}\n+    std::optional<OutputType> GetOutputType() const override { return OutputType::BECH32M; }\n+    bool IsSingleType() const final { return true; }\n+};\n+\n ////////////////////////////////////////////////////////////////////////////\n // Parser                                                                 //\n ////////////////////////////////////////////////////////////////////////////\n@@ -1202,6 +1220,16 @@ std::unique_ptr<DescriptorImpl> ParseScript(uint32_t& key_exp_index, Span<const\n         error = \"Can only have tr at top level\";\n         return nullptr;\n     }\n+    if (ctx == ParseScriptContext::TOP && Func(\"rawtr\", expr)) {\n+        auto arg = Expr(expr);\n+        auto internal_key = ParsePubkey(key_exp_index, arg, ParseScriptContext::P2TR, out, error);\n+        if (!internal_key) return nullptr;\n+        ++key_exp_index;\n+        return std::make_unique<RawTRDescriptor>(std::move(internal_key));\n+    } else if (Func(\"rawtr\", expr)) {\n+        error = \"Can only have rawtr at top level\";\n+        return nullptr;\n+    }\n     if (ctx == ParseScriptContext::TOP && Func(\"raw\", expr)) {\n         std::string str(expr.begin(), expr.end());\n         if (!IsHex(str)) {\n@@ -1339,6 +1367,13 @@ std::unique_ptr<DescriptorImpl> InferScript(const CScript& script, ParseScriptCo\n                 }\n             }\n         }\n+        // If the above doesn't work, construct a rawtr() descriptor with just the encoded x-only pubkey.\n+        if (pubkey.IsFullyValid()) {\n+            auto key = InferXOnlyPubkey(pubkey, ParseScriptContext::P2TR, provider);\n+            if (key) {\n+                return std::make_unique<RawTRDescriptor>(std::move(key));\n+            }\n+        }\n     }\n \n     CTxDestination dest;"
      }
    ]
  },
  {
    "sha": "976be04db237d9c3110c84a940841928c4cbb054",
    "node_id": "C_kwDOABII59oAKDk3NmJlMDRkYjIzN2Q5YzMxMTBjODRhOTQwODQxOTI4YzRjYmIwNTQ",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2021-11-10T04:09:00Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2021-11-10T04:12:17Z"
      },
      "message": "If P2TR tweaked key is available, sign with it",
      "tree": {
        "sha": "ed3668cc7bdcaa34050c8203db3340b6bfd6402a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ed3668cc7bdcaa34050c8203db3340b6bfd6402a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/976be04db237d9c3110c84a940841928c4cbb054",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/976be04db237d9c3110c84a940841928c4cbb054",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/976be04db237d9c3110c84a940841928c4cbb054",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/976be04db237d9c3110c84a940841928c4cbb054/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "af1eb5ec61a893a56e78586efaa8a60711b4e9a1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/af1eb5ec61a893a56e78586efaa8a60711b4e9a1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/af1eb5ec61a893a56e78586efaa8a60711b4e9a1"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 5,
      "deletions": 0
    },
    "files": [
      {
        "sha": "978303c9c097394fdf5b58dbd0efae838ec89479",
        "filename": "src/script/sign.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/976be04db237d9c3110c84a940841928c4cbb054/src/script/sign.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/976be04db237d9c3110c84a940841928c4cbb054/src/script/sign.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/sign.cpp?ref=976be04db237d9c3110c84a940841928c4cbb054",
        "patch": "@@ -194,6 +194,11 @@ static bool SignTaproot(const SigningProvider& provider, const BaseSignatureCrea\n                 sigdata.taproot_key_path_sig = sig;\n             }\n         }\n+        if (sigdata.taproot_key_path_sig.size() == 0) {\n+            if (creator.CreateSchnorrSig(provider, sig, output, nullptr, nullptr, SigVersion::TAPROOT)) {\n+                sigdata.taproot_key_path_sig = sig;\n+            }\n+        }\n         if (sigdata.taproot_key_path_sig.size()) {\n             result = Vector(sigdata.taproot_key_path_sig);\n             return true;"
      }
    ]
  },
  {
    "sha": "252a9b832a196f00b383cd4c220e11eb38ad8f85",
    "node_id": "C_kwDOABII59oAKDI1MmE5YjgzMmExOTZmMDBiMzgzY2Q0YzIyMGUxMWViMzhhZDhmODU",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2021-11-10T04:23:49Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2021-11-10T04:23:49Z"
      },
      "message": "Add wallet tests for spending rawtr()",
      "tree": {
        "sha": "734184ba8ca9d33844b929fe5a35130d59baacf3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/734184ba8ca9d33844b929fe5a35130d59baacf3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/252a9b832a196f00b383cd4c220e11eb38ad8f85",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/252a9b832a196f00b383cd4c220e11eb38ad8f85",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/252a9b832a196f00b383cd4c220e11eb38ad8f85",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/252a9b832a196f00b383cd4c220e11eb38ad8f85/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "976be04db237d9c3110c84a940841928c4cbb054",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/976be04db237d9c3110c84a940841928c4cbb054",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/976be04db237d9c3110c84a940841928c4cbb054"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 16,
      "deletions": 1
    },
    "files": [
      {
        "sha": "5cc5c797acac3bb7f4f540050f2b31be3b8ca7b0",
        "filename": "test/functional/wallet_taproot.py",
        "status": "modified",
        "additions": 16,
        "deletions": 1,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/252a9b832a196f00b383cd4c220e11eb38ad8f85/test/functional/wallet_taproot.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/252a9b832a196f00b383cd4c220e11eb38ad8f85/test/functional/wallet_taproot.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_taproot.py?ref=252a9b832a196f00b383cd4c220e11eb38ad8f85",
        "patch": "@@ -169,6 +169,9 @@ def compute_taproot_address(pubkey, scripts):\n     assert tap.scriptPubKey[1] == 0x20\n     return encode_segwit_address(\"bcrt\", 1, tap.scriptPubKey[2:])\n \n+def compute_raw_taproot_address(pubkey):\n+    return encode_segwit_address(\"bcrt\", 1, pubkey)\n+\n class WalletTaprootTest(BitcoinTestFramework):\n     \"\"\"Test generation and spending of P2TR address outputs.\"\"\"\n \n@@ -216,7 +219,12 @@ def make_addr(treefn, keys, i):\n         args = []\n         for j in range(len(keys)):\n             args.append(keys[j]['pubs'][i])\n-        return compute_taproot_address(*treefn(*args))\n+        tree = treefn(*args)\n+        if isinstance(tree, tuple):\n+            return compute_taproot_address(*tree)\n+        if isinstance(tree, bytes):\n+            return compute_raw_taproot_address(tree)\n+        assert False\n \n     def do_test_addr(self, comment, pattern, privmap, treefn, keys):\n         self.log.info(\"Testing %s address derivation\" % comment)\n@@ -408,6 +416,13 @@ def run_test(self):\n             lambda k1, k2: (key(k1), [pk(k2), [[pk(k2), [pk(H_POINT), pk(H_POINT)]], [[pk(H_POINT), pk(H_POINT)], pk(k2)]]]),\n             2\n         )\n+        self.do_test(\n+            \"rawtr(XPRV)\",\n+            \"rawtr($1/*)\",\n+            [True],\n+            lambda k1: key(k1),\n+            1\n+        )\n \n         self.log.info(\"Sending everything back...\")\n "
      }
    ]
  }
]