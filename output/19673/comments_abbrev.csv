DrahtBot,2020-08-06 19:22:22,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #20816 (net: Move RecordBytesSent() call out of cs_vSend lock by jnewbery)\n\nIf you consider this pull request important,",https://github.com/bitcoin/bitcoin/pull/19673#issuecomment-670146507,670146507,
troygiorshev,2020-08-26 14:00:33,"`git range-diff master 59df5d1 e85fb2d`\n\n* Added missing lock annotations\n* Cleaned PushMessage more thoroughly",https://github.com/bitcoin/bitcoin/pull/19673#issuecomment-680898119,680898119,
jnewbery,2020-08-26 15:00:47,utACK e85fb2d34d8515513e404163cf149be61e1ed708,https://github.com/bitcoin/bitcoin/pull/19673#issuecomment-680935329,680935329,
troygiorshev,2020-11-03 17:39:18,"`git range-diff master e85fb2d 9d47d6d`\n\n* Clean commit improved\n* Improved various const initializations\n* Renamed the cleanup commit",https://github.com/bitcoin/bitcoin/pull/19673#issuecomment-721277307,721277307,
troygiorshev,2020-11-03 17:47:38,"Seeing that #18784 is now closed, I've reworded the description of this PR.  This PR didn't end up being related to the bug #18784 was trying to fix, so this PR now stands on its own.",https://github.com/bitcoin/bitcoin/pull/19673#issuecomment-721281582,721281582,
troygiorshev,2020-11-04 06:36:01,Can't replicate CI failure. `mempool_updatefromblock.py` passes in 172 seconds on my machine.  (It was the longest test by a factor of 2x).  Didn't investigate further.,https://github.com/bitcoin/bitcoin/pull/19673#issuecomment-721540814,721540814,
jnewbery,2020-11-04 09:02:49,"utACK 9d47d6da524b78ee4a628119f09636b855e881a2\n\nJustification for the change in commit _Move cs_vSend lock into SocketSendData_ looks good to me.\n\nI'd personally remove the easter egg from the _cleanup: Clean PushMessage_ commit log, but it's fine either way.",https://github.com/bitcoin/bitcoin/pull/19673#issuecomment-721604189,721604189,
troygiorshev,2020-11-04 16:47:15,"Thanks for the review @jnewbery!  I'll leave your suggestions for now, and I'll look at adding them if there are non-stylistic changes needed for this PR.\n\nMy usage of list initialization comes from [this stackoverflow](https://stackoverflow.com/questions/18222926/why-is-list-initialization-using-curly-braces-better-than-the-alternatives). The C++ Core Guidelines talk about this as well, [ES.2",https://github.com/bitcoin/bitcoin/pull/19673#issuecomment-721845882,721845882,
jnewbery,2020-11-04 18:33:40,"> My usage of list initialization comes from this stackoverflow. The C++ Core Guidelines talk about this as well, ES.23.\n\n> Edit: Another article about list initialization for those interested (link)\n\nThanks for the links. I retract my vote for = initialization!",https://github.com/bitcoin/bitcoin/pull/19673#issuecomment-721901765,721901765,
troygiorshev,2020-11-17 15:23:46,"Thanks for the ack hebasto!  I now have an ack from you and jnewbery.  Both of you gave style suggestions (which I agree with).  Since the suggestions are both further improvements to existing code (as opposed to style problems I'm adding myself, with the exception of the spaces before the comment) I'm going to leave them until a functional change is needed. ",https://github.com/bitcoin/bitcoin/pull/19673#issuecomment-729000778,729000778,
jnewbery,2020-12-27 09:39:48,@MarcoFalke would you prefer an approach like https://github.com/jnewbery/bitcoin/tree/pr19673.1 ?,https://github.com/bitcoin/bitcoin/pull/19673#issuecomment-751445893,751445893,
MarcoFalke,2020-12-28 19:00:02,"Yes, if the goal is to avoid a lock when RecordBytesSent, then simply releasing the lock before calling RecordBytesSent seems a good solution.",https://github.com/bitcoin/bitcoin/pull/19673#issuecomment-751829587,751829587,
jnewbery,2020-12-31 11:22:30,@MarcoFalke - I've opened #20816 as an alternative.,https://github.com/bitcoin/bitcoin/pull/19673#issuecomment-752929931,752929931,
troygiorshev,2021-01-06 06:09:08,"I was too preoccupied with whether or not I could, I didn't stop to think whether or not I should :)\n\nClosing this in favor of #20816.",https://github.com/bitcoin/bitcoin/pull/19673#issuecomment-755103626,755103626,
jnewbery,2020-08-18 13:47:05,"Since you're cleaning everything up here, this if block (and the one above) should have braces added.",https://github.com/bitcoin/bitcoin/pull/19673#discussion_r472209797,472209797,src/net.cpp
troygiorshev,2020-08-26 13:04:38,"Good eye, thanks",https://github.com/bitcoin/bitcoin/pull/19673#discussion_r477283580,477283580,src/net.cpp
hebasto,2020-10-14 14:00:42,"d093d261e2df27b2466ffe4e92bd48f22818d326\n```suggestion\n    const size_t message_size = msg.data.size();\n```\n\nbut I think that the code would look better without the `message_size` variable at all.",https://github.com/bitcoin/bitcoin/pull/19673#discussion_r504702103,504702103,src/net.cpp
hebasto,2020-10-14 14:01:23,"d093d261e2df27b2466ffe4e92bd48f22818d326\n```suggestion\n    const size_t total_size = message_size + serialized_header.size();\n```",https://github.com/bitcoin/bitcoin/pull/19673#discussion_r504702588,504702588,src/net.cpp
hebasto,2020-10-14 14:13:42,"9e92f63e2deadbfd7424ce4585f02ad580dcee8c\n\nIs there any reason to keep `mapSendBytesPerMsgCmd` `protected`?",https://github.com/bitcoin/bitcoin/pull/19673#discussion_r504712085,504712085,src/net.h
hebasto,2020-10-14 14:28:02,"e85fb2d34d8515513e404163cf149be61e1ed708\n\n```\n        if (sendSet) {\n            const size_t bytes_sent = SocketSendData(pnode);\n            if (bytes_sent) RecordBytesSent(bytes_sent);\n        }\n```",https://github.com/bitcoin/bitcoin/pull/19673#discussion_r504723413,504723413,src/net.cpp
hebasto,2020-10-14 14:35:05,"e85fb2d34d8515513e404163cf149be61e1ed708\n```suggestion\n    if (optimistic_send) {\n        const size_t bytes_sent = SocketSendData(pnode);\n        if (bytes_sent) RecordBytesSent(bytes_sent);\n    }\n```",https://github.com/bitcoin/bitcoin/pull/19673#discussion_r504729247,504729247,src/net.cpp
troygiorshev,2020-11-03 16:11:34,I don't have a strong opinion on the removal of `message_size` and/or `total_size`.  However such a change is a bit more than I'm looking to do here.,https://github.com/bitcoin/bitcoin/pull/19673#discussion_r516784966,516784966,src/net.cpp
troygiorshev,2020-11-03 16:18:08,"Thanks for catching the `const` on this one.  However, I prefer list initialization whenever possible, so I'm going to keep it unless you feel strongly against it.",https://github.com/bitcoin/bitcoin/pull/19673#discussion_r516789527,516789527,src/net.cpp
troygiorshev,2020-11-03 16:22:34,"~~Yes, it's to keep it consistent with `nSendBytes` for calls to the `getpeerinfo` rpc.~~\n\n~~Edit: Well we can't quite ensure consistency.  But with it locking the way it is now, we can ensure that `mapSendBytesPerMsgCmd` is at least always updated *before* `nSendBytes`.~~\n\nI'm sorry, I completely misread your comment!  I agree with you and jnewbery, there is no reason for these to be kept",https://github.com/bitcoin/bitcoin/pull/19673#discussion_r516792821,516792821,src/net.h
troygiorshev,2020-11-03 16:23:51,Thanks.  Again I've preferred list initialization (see next comment).,https://github.com/bitcoin/bitcoin/pull/19673#discussion_r516793655,516793655,src/net.cpp
jnewbery,2020-11-04 08:19:55,"There's no reason for either of these to be protected, since nothing inherits from `CNode`. However, that's separate from this PR and could be fixed elsewhere.",https://github.com/bitcoin/bitcoin/pull/19673#discussion_r517165153,517165153,src/net.h
jnewbery,2020-11-04 08:29:33,"I have a mild stylistic preference to use `=` when initializing a simple type with the return value of a function, and to use braced initialization for initializing from a literal. That's perhaps inconsistent, but it seems to be the style that most people gravitate towards. No strong preference since they both result in the same thing, but if it's a vote, I'd go for `=` :)",https://github.com/bitcoin/bitcoin/pull/19673#discussion_r517170471,517170471,src/net.cpp
jnewbery,2020-11-04 08:36:46,"If you retouch the branch, you may as well touch _every_ line in this function:\n\n```suggestion\n        // Log total amount of bytes per message type\n```",https://github.com/bitcoin/bitcoin/pull/19673#discussion_r517174404,517174404,src/net.cpp
jnewbery,2020-11-04 08:59:44,"I think this could use a comment. Something like:\n\n```\n//* Guards the send buffer and statistics about data sent on this connection */\n```",https://github.com/bitcoin/bitcoin/pull/19673#discussion_r517187830,517187830,src/net.h
hebasto,2020-11-11 16:19:22,"The `GUARDED_BY` annotation seems quite self-documented; especially, when the mutex and all of the data members protected by it are nicely grouped :)",https://github.com/bitcoin/bitcoin/pull/19673#discussion_r521473161,521473161,src/net.h
hebasto,2020-11-11 16:43:57,"92897d43443db3a7cd68d8655d1bbf4b9b69c427\n\nnit, clang-format suggests:\n```suggestion\n    size_t nSendSize GUARDED_BY(cs_vSend){0};   // total size of all vSendMsg entries\n```",https://github.com/bitcoin/bitcoin/pull/19673#discussion_r521491412,521491412,src/net.h
hebasto,2020-11-11 16:46:14,"9d47d6da524b78ee4a628119f09636b855e881a2\n\nnit, clang-format suggests:\n```suggestion\nsize_t CConnman::SocketSendData(CNode* pnode) const\n```",https://github.com/bitcoin/bitcoin/pull/19673#discussion_r521492913,521492913,src/net.cpp
hebasto,2020-11-11 16:47:25,"9d47d6da524b78ee4a628119f09636b855e881a2, nit:\n```suggestiom\n        if (sendSet) {\n```",https://github.com/bitcoin/bitcoin/pull/19673#discussion_r521493630,521493630,src/net.cpp
MarcoFalke,2020-12-22 12:32:10,"Why is this change needed? Previously we'd optimistically write only one message, now we might write more than one message when other messages have been pushed by other threads.",https://github.com/bitcoin/bitcoin/pull/19673#discussion_r547251686,547251686,src/net.cpp
