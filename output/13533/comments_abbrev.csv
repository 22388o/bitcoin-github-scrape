DrahtBot,2018-06-26T11:17:59Z,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #21702 by JeremyRubin\n\nIf you consider this pull request important, please also help to review the conflicting pull requ",https://github.com/bitcoin/bitcoin/pull/13533#issuecomment-400271612,400271612,
DrahtBot,2019-08-16T13:49:16Z,"<!--5d09a71f8925f3f132321140b44b946d-->The last travis run for this pull request was 312 days ago and is thus outdated. To trigger a fresh travis build, this pull request should be closed and re-opened.",https://github.com/bitcoin/bitcoin/pull/13533#issuecomment-522015281,522015281,
adamjonas,2019-10-30T19:01:19Z,"Concept ACK\n\nI was looking at this before the conflict popped up and the savings on my machine was:\n```\nBefore: 3.7s\nAfter: 2.8s\n------------\nSaved 0.9s (24%).\n```\nMy rebase is [here](https://github.com/adamjonas/bitcoin/tree/10-19-reduce-txvalidationcache-tests) for reference.",https://github.com/bitcoin/bitcoin/pull/13533#issuecomment-548065305,548065305,
lucash-dev,2019-10-30T21:44:18Z,"Thx @adamjonas.\nWill be away for a few days, probably will rebase over the weekend.",https://github.com/bitcoin/bitcoin/pull/13533#issuecomment-548125875,548125875,
lucash-dev,2019-11-05T22:52:47Z,@adamjonas rebased. thx,https://github.com/bitcoin/bitcoin/pull/13533#issuecomment-550059785,550059785,
lucash-dev,2020-02-13T06:05:19Z,"> Concept ACK\n> Though on the current master branch enumerating through all possible script-verify-flags combinations is still feasible (running `tx_validationcache_tests` takes less than 2 seconds on my machine), the execution time for the validation loop would obviously increase exponentially with each script-verify-flag added.\n\nHi, @theStack. Thank you for reviewing this PR. I agree with ",https://github.com/bitcoin/bitcoin/pull/13533#issuecomment-585566944,585566944,
lucash-dev,2020-03-04T19:07:08Z,"hi @theStack. finally implemented the changes you suggested, also rebased -- and test are passing.",https://github.com/bitcoin/bitcoin/pull/13533#issuecomment-594759376,594759376,
adamjonas,2020-06-16T19:09:34Z,"Hi @lucash-dev, pinging for a rebase. Mine is [here](https://github.com/bitcoin/bitcoin/compare/master...adamjonas:06-20-reduce-txvalidationcache-tests) for reference.",https://github.com/bitcoin/bitcoin/pull/13533#issuecomment-644957637,644957637,
lucash-dev,2020-06-23T05:28:34Z,thx @adamjonas. rebased.,https://github.com/bitcoin/bitcoin/pull/13533#issuecomment-647916896,647916896,
lucash-dev,2020-09-15T15:29:58Z,"Hi @fanquake\nWhat’s the reason for closing it now?\nI was meaning to implement the latest round of requested changes and it has concept acks.\nShould I work on this, open a new one or just move on?\nJust looking for clarification— don’t want to waste anyone’s time if maintainers don’t want this change. I know you have plenty on your plate.\nThanks!",https://github.com/bitcoin/bitcoin/pull/13533#issuecomment-692793987,692793987,
fanquake,2020-09-15T22:09:33Z,"Hi @lucash-dev. I closed this because of the length of time it's been open overall, the length of time it's been since comments were left and had been unaddressed, and after looking at your GitHub profile it seemed that you were no-longer active here (hence throwing it up for grabs). However if you are going to address the concerns, I'll re-open this.",https://github.com/bitcoin/bitcoin/pull/13533#issuecomment-693006007,693006007,
lucash-dev,2020-09-16T00:20:27Z,Thanks @fanquake. Sorry for leaving this PR unattended for so long.,https://github.com/bitcoin/bitcoin/pull/13533#issuecomment-693097155,693097155,
lucash-dev,2020-09-16T00:25:30Z,Updated PR to fix @kallewoof's NIT's.,https://github.com/bitcoin/bitcoin/pull/13533#issuecomment-693098466,693098466,
lucash-dev,2020-10-16T18:14:38Z,"Rebased.\n\n@kallewoof would you mind ACK-ing since I addressed your comments (or otherwise make further comments)?\n\nI think this PR has become (more) important after the new taproot flags were introduced -- since none of those flags are tested by this test case in `master`. ",https://github.com/bitcoin/bitcoin/pull/13533#issuecomment-710358244,710358244,
lucash-dev,2021-07-26T19:31:44Z,"Thanks everyone!\n\nI know reviewing PRs is a lot of work, and this one wasn't a priority -- so I'm really glad to see it finally merged. \n\nI learned a lot from writing it and from your feedback!\n",https://github.com/bitcoin/bitcoin/pull/13533#issuecomment-886969574,886969574,
laanwj,2018-07-05T16:40:20Z,"we don't use `rand()` anywhere in the code, would be preferable to use a `FastRandomContext insecure_rand(true);` here, also for determinism - for reproducible it is undesirable for different test runs to test a different subset of flags",https://github.com/bitcoin/bitcoin/pull/13533#discussion_r200417832,200417832,src/test/txvalidationcache_tests.cpp
lucash-dev,2018-07-06T06:43:23Z,Fixed. Thanks for the explanation!,https://github.com/bitcoin/bitcoin/pull/13533#discussion_r200561909,200561909,src/test/txvalidationcache_tests.cpp
practicalswift,2018-10-04T20:37:13Z,Make this implicit conversion from `uint64_t` to `uint32_t` explicit :-),https://github.com/bitcoin/bitcoin/pull/13533#discussion_r222818622,222818622,src/test/txvalidationcache_tests.cpp
lucash-dev,2018-10-07T17:08:40Z,"Actually there's quite a lot of confusion of types around these types. `randrange` return a ` `uint64_t`, but `CheckInputs` accepts a `unsigned int`, while the flags are actually an enum which has an implementation-specific type. I guess the best is to change it here to `unsigned int` (and make the conversion explicit), and maybe open a separate PR for fixing these type inconsistencies.",https://github.com/bitcoin/bitcoin/pull/13533#discussion_r223220782,223220782,src/test/txvalidationcache_tests.cpp
theStack,2020-01-23T20:41:47Z,I'd suggest to prefix those two constants with `SCRIPT_VERIFY_` as well. Otherwise ever single translation unit including `script/interpreter.h` will have a bare `HIGHEST_FLAG` {`_PLUS_ONE`} constant in its global namespace and there isn't any reference in the name to _which_ flags it refers to.,https://github.com/bitcoin/bitcoin/pull/13533#discussion_r370343584,370343584,src/script/interpreter.h
theStack,2020-01-23T20:42:42Z,"Now that the loop variable is a simple counter, not representing a bitfield anymore, I'd change the data type to just a plain `int`.",https://github.com/bitcoin/bitcoin/pull/13533#discussion_r370343977,370343977,src/test/txvalidationcache_tests.cpp
theStack,2020-01-23T20:48:03Z,"nit: The data type was an explicit `uint32_t` before, so I'd also that type here now rather than the more general `unsigned int` (in practice it won't matter though, so feel free to ignore).",https://github.com/bitcoin/bitcoin/pull/13533#discussion_r370346327,370346327,src/test/txvalidationcache_tests.cpp
kallewoof,2020-08-26T01:42:01Z,Nit: extraneous whitespace (1 empty line is usually enough).,https://github.com/bitcoin/bitcoin/pull/13533#discussion_r476960647,476960647,src/script/interpreter.h
kallewoof,2020-08-26T01:43:36Z,"Suggest you call this `SCRIPT_VERIFY_END_MARKER`, and then use `< SCRIPT_VERIFY_END_MARKER` logic instead of this, i.e. only add one.",https://github.com/bitcoin/bitcoin/pull/13533#discussion_r476961718,476961718,src/script/interpreter.h
kallewoof,2020-08-26T01:44:45Z,"Style-nit: spacing, ++ before varname:\n```C++\nfor (int count = 0; count < 10000; ++count) {\n```",https://github.com/bitcoin/bitcoin/pull/13533#discussion_r476962441,476962441,src/test/txvalidationcache_tests.cpp
kallewoof,2020-08-26T01:48:47Z,"Using the marker style, to get the same you'd `randrange((SCRIPT_VERIFY_END_MARKER - 1) << 1)` here.\n\nHowever, I'm not sure why you are doing `<< 1` here (`1U << 17`), as the original code only goes up to `SCRIPT_VERIFY_END_MARKER - 1` (i.e. `(1U << 16)`). To retain the same, this would be `randrange(SCRIPT_VERIFY_END_MARKER - 1);`",https://github.com/bitcoin/bitcoin/pull/13533#discussion_r476965185,476965185,src/test/txvalidationcache_tests.cpp
lucash-dev,2020-09-16T00:12:14Z,"Hi, @kalewoof. Thanks for reviewing.\nThe reason for that is that we want to possibly test all flag combinations (or a random subset thereof). The lowest value possible with all flags off is 0, the highest would be the sum of all constants. So if the highest constant is 1<<16, having the maximum value used for test be 1<<16 would preclude testing combinations of that flag being used. We need to t",https://github.com/bitcoin/bitcoin/pull/13533#discussion_r489086837,489086837,src/test/txvalidationcache_tests.cpp
lucash-dev,2020-09-16T00:19:12Z,The test currently only going to 1<<16 is probably a mistake caused by adding a flag but not updating the test.,https://github.com/bitcoin/bitcoin/pull/13533#discussion_r489088824,489088824,src/test/txvalidationcache_tests.cpp
lucash-dev,2020-09-16T00:38:30Z,Test created in https://github.com/bitcoin/bitcoin/commit/e3f9c05b966622146e090f2a01a913516ccb874a. Not updated after the new flag added in https://github.com/bitcoin/bitcoin/commit/9dabfe49c066301ef75bcfcb089fd308366127c4,https://github.com/bitcoin/bitcoin/pull/13533#discussion_r489094135,489094135,src/test/txvalidationcache_tests.cpp
kallewoof,2020-09-16T05:21:45Z,"You want to swap the - and <<; right now you get `111...0`, i.e.\n```suggestion\n        uint32_t test_flags = (uint32_t) insecure_rand.randrange((SCRIPT_VERIFY_END_MARKER << 1) - 1);\n```",https://github.com/bitcoin/bitcoin/pull/13533#discussion_r489169645,489169645,src/test/txvalidationcache_tests.cpp
lucash-dev,2020-09-16T06:43:53Z,"Not really.\nRight now the last flag is 1<<16.\nBc of the way the enum works my new constant becomes (1<<16)+1. That’s why I used the “...PLUS_ONE” constant before.\nSo the argument to the range is (((1<<16)+1)-1)<<1 = (1<<16)<<1 = 1<<17\nBecause the range is exclusive, the highest possible value is (1<<17)-1 = 1111111111111111b\n",https://github.com/bitcoin/bitcoin/pull/13533#discussion_r489199484,489199484,src/test/txvalidationcache_tests.cpp
kallewoof,2020-09-16T07:06:16Z,"Ahh, I misread it as a mask for some reason.",https://github.com/bitcoin/bitcoin/pull/13533#discussion_r489210082,489210082,src/test/txvalidationcache_tests.cpp
