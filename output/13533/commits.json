[
  {
    "sha": "c3e111a7daf5800026dda4455c737de0412528f1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjM2UxMTFhN2RhZjU4MDAwMjZkZGE0NDU1YzczN2RlMDQxMjUyOGYx",
    "commit": {
      "author": {
        "name": "lucash-dev",
        "email": "lucash.dev@gmail.com",
        "date": "2018-06-25T01:11:41Z"
      },
      "committer": {
        "name": "lucash-dev",
        "email": "lucash.dev@gmail.com",
        "date": "2020-10-15T20:45:30Z"
      },
      "message": "Reduced number of validations in `tx_validationcache_tests` to keep the run time reasonable.\n\nFollowing a suggestion in the comments, changed `ValidateCheckInputsForAllFlags` from testing all possible flag combinations to testing a random subset. Also created a new enum constant for the highest flag, so that this test doesn\u2019t keep testing an incomplete subset in case a new flag is added.",
      "tree": {
        "sha": "44597b1f1511f941206751b7ec915b457ac44ff8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/44597b1f1511f941206751b7ec915b457ac44ff8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c3e111a7daf5800026dda4455c737de0412528f1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c3e111a7daf5800026dda4455c737de0412528f1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c3e111a7daf5800026dda4455c737de0412528f1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c3e111a7daf5800026dda4455c737de0412528f1/comments",
    "author": {
      "login": "lucash-dev",
      "id": 31627588,
      "node_id": "MDQ6VXNlcjMxNjI3NTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/31627588?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lucash-dev",
      "html_url": "https://github.com/lucash-dev",
      "followers_url": "https://api.github.com/users/lucash-dev/followers",
      "following_url": "https://api.github.com/users/lucash-dev/following{/other_user}",
      "gists_url": "https://api.github.com/users/lucash-dev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lucash-dev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lucash-dev/subscriptions",
      "organizations_url": "https://api.github.com/users/lucash-dev/orgs",
      "repos_url": "https://api.github.com/users/lucash-dev/repos",
      "events_url": "https://api.github.com/users/lucash-dev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lucash-dev/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "lucash-dev",
      "id": 31627588,
      "node_id": "MDQ6VXNlcjMxNjI3NTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/31627588?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lucash-dev",
      "html_url": "https://github.com/lucash-dev",
      "followers_url": "https://api.github.com/users/lucash-dev/followers",
      "following_url": "https://api.github.com/users/lucash-dev/following{/other_user}",
      "gists_url": "https://api.github.com/users/lucash-dev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lucash-dev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lucash-dev/subscriptions",
      "organizations_url": "https://api.github.com/users/lucash-dev/orgs",
      "repos_url": "https://api.github.com/users/lucash-dev/repos",
      "events_url": "https://api.github.com/users/lucash-dev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lucash-dev/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9ad7cd2887abf5f91495337a2458560de10b4f69",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9ad7cd2887abf5f91495337a2458560de10b4f69",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9ad7cd2887abf5f91495337a2458560de10b4f69"
      }
    ],
    "stats": {
      "total": 15,
      "additions": 12,
      "deletions": 3
    },
    "files": [
      {
        "sha": "db4ebc49da47185a94ee4edb664d1d8377e94925",
        "filename": "src/script/interpreter.h",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c3e111a7daf5800026dda4455c737de0412528f1/src/script/interpreter.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c3e111a7daf5800026dda4455c737de0412528f1/src/script/interpreter.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/interpreter.h?ref=c3e111a7daf5800026dda4455c737de0412528f1",
        "patch": "@@ -139,6 +139,10 @@ enum\n \n     // Making unknown public key versions (in BIP 342 scripts) non-standard\n     SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_PUBKEYTYPE = (1U << 20),\n+\n+    // Constants to point to the highest flag in use. Add new flags above this line.\n+    //\n+    SCRIPT_VERIFY_END_MARKER\n };\n \n bool CheckSignatureEncoding(const std::vector<unsigned char> &vchSig, unsigned int flags, ScriptError* serror);"
      },
      {
        "sha": "a0d33304593459f70e8c81e57f10d3eca48b87eb",
        "filename": "src/test/txvalidationcache_tests.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 3,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c3e111a7daf5800026dda4455c737de0412528f1/src/test/txvalidationcache_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c3e111a7daf5800026dda4455c737de0412528f1/src/test/txvalidationcache_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/txvalidationcache_tests.cpp?ref=c3e111a7daf5800026dda4455c737de0412528f1",
        "patch": "@@ -109,10 +109,15 @@ BOOST_FIXTURE_TEST_CASE(tx_mempool_block_doublespend, TestChain100Setup)\n static void ValidateCheckInputsForAllFlags(const CTransaction &tx, uint32_t failing_flags, bool add_to_cache) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n {\n     PrecomputedTransactionData txdata;\n-    // If we add many more flags, this loop can get too expensive, but we can\n-    // rewrite in the future to randomly pick a set of flags to evaluate.\n-    for (uint32_t test_flags=0; test_flags < (1U << 16); test_flags += 1) {\n+\n+    FastRandomContext insecure_rand(true);\n+\n+    for (int count = 0; count < 10000; ++count) {\n         TxValidationState state;\n+\n+        // Randomly selects flag combinations\n+        uint32_t test_flags = (uint32_t) insecure_rand.randrange((SCRIPT_VERIFY_END_MARKER - 1) << 1);\n+\n         // Filter out incompatible flag choices\n         if ((test_flags & SCRIPT_VERIFY_CLEANSTACK)) {\n             // CLEANSTACK requires P2SH and WITNESS, see VerifyScript() in"
      }
    ]
  }
]