[
  {
    "sha": "faec0638872798b58b9882ee079014555bc8393e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWVjMDYzODg3Mjc5OGI1OGI5ODgyZWUwNzkwMTQ1NTViYzgzOTNl",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-04-16T15:12:14Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-04-16T15:08:46Z"
      },
      "message": "log: Use Join() helper when listing log categories",
      "tree": {
        "sha": "5b38946bd9cde28d4b7844f9409d64b4772ce480",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5b38946bd9cde28d4b7844f9409d64b4772ce480"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/faec0638872798b58b9882ee079014555bc8393e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUj4IQv+M9vz8sW5o91UvpnqaayeoBlRH/1WI9LRalW7iPwG1Eds6GQvsGkllP3U\n/cJki3WDWjXW0ibaogwaVejqPYzkoC5kXYMJwIFZg67knu+cJ9TwJoRojAyzz69K\n8u3XQemO/dThCsWWUJNSe43ZzhXb9AJyoK0cwj+0uim4/roYA3SXWVdj/RpQGeqt\n7sR7GBdiW7ptBhHCGRt9OT9BBroMYgSKK0xzZj1aUnnNaAkXH7Okr6nLjMRCX4mx\nifaZH+xRPYCA6eH+raFPb6sr4383Qmc5E7w0yMvlDURDWXnFSCYlABIvFh21mbbZ\nE+JuF5nTMh1ciW0j6f/860/aBKYgTPOXvLs35Ms4D17reFuLMIC3ObCqrz+06GIP\nUS1GMOLBk3yWIDzX15pCgM0/YVkyTpoF8fxL6SDv8QTTOWahU5vwqsiQ/WvRxOpE\nO+m5Q2u2FqblHAz/Rw4iP+A1mHykmki7D1RjgC2unB5lVzfq1TPcHw2hhXzua3v9\n4gxWof4D\n=MU+Q\n-----END PGP SIGNATURE-----",
        "payload": "tree 5b38946bd9cde28d4b7844f9409d64b4772ce480\nparent 79b0459648e33307edcefc358d9bfdd0ed5ff844\nauthor MarcoFalke <falke.marco@gmail.com> 1587049934 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1587049726 -0400\n\nlog: Use Join() helper when listing log categories\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faec0638872798b58b9882ee079014555bc8393e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/faec0638872798b58b9882ee079014555bc8393e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faec0638872798b58b9882ee079014555bc8393e/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "79b0459648e33307edcefc358d9bfdd0ed5ff844",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/79b0459648e33307edcefc358d9bfdd0ed5ff844",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/79b0459648e33307edcefc358d9bfdd0ed5ff844"
      }
    ],
    "stats": {
      "total": 48,
      "additions": 17,
      "deletions": 31
    },
    "files": [
      {
        "sha": "41c066affe058ddaed9af70ba271e0f5753a6a3b",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faec0638872798b58b9882ee079014555bc8393e/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faec0638872798b58b9882ee079014555bc8393e/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=faec0638872798b58b9882ee079014555bc8393e",
        "patch": "@@ -520,7 +520,8 @@ void SetupServerArgs(NodeContext& node)\n     gArgs.AddArg(\"-limitdescendantsize=<n>\", strprintf(\"Do not accept transactions if any ancestor would have more than <n> kilobytes of in-mempool descendants (default: %u).\", DEFAULT_DESCENDANT_SIZE_LIMIT), ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-addrmantest\", \"Allows to test address relay on localhost\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-debug=<category>\", \"Output debugging information (default: -nodebug, supplying <category> is optional). \"\n-        \"If <category> is not supplied or if <category> = 1, output all debugging information. <category> can be: \" + ListLogCategories() + \".\", ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n+        \"If <category> is not supplied or if <category> = 1, output all debugging information. <category> can be: \" + LogInstance().LogCategoriesString() + \".\",\n+        ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-debugexclude=<category>\", strprintf(\"Exclude debugging information for a category. Can be used in conjunction with -debug=1 to output debug logs for all categories except one or more specified categories.\"), ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-logips\", strprintf(\"Include IP addresses in debug output (default: %u)\", DEFAULT_LOGIPS), ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-logtimestamps\", strprintf(\"Prepend debug output with timestamp (default: %u)\", DEFAULT_LOGTIMESTAMPS), ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);"
      },
      {
        "sha": "eb9da06d9ba87146bdced94d7ea59ad806105e59",
        "filename": "src/logging.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 19,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faec0638872798b58b9882ee079014555bc8393e/src/logging.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faec0638872798b58b9882ee079014555bc8393e/src/logging.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/logging.cpp?ref=faec0638872798b58b9882ee079014555bc8393e",
        "patch": "@@ -182,30 +182,15 @@ bool GetLogCategory(BCLog::LogFlags& flag, const std::string& str)\n     return false;\n }\n \n-std::string ListLogCategories()\n+std::vector<LogCategory> BCLog::Logger::LogCategoriesList()\n {\n-    std::string ret;\n-    int outcount = 0;\n+    std::vector<LogCategory> ret;\n     for (const CLogCategoryDesc& category_desc : LogCategories) {\n         // Omit the special cases.\n         if (category_desc.flag != BCLog::NONE && category_desc.flag != BCLog::ALL) {\n-            if (outcount != 0) ret += \", \";\n-            ret += category_desc.category;\n-            outcount++;\n-        }\n-    }\n-    return ret;\n-}\n-\n-std::vector<CLogCategoryActive> ListActiveLogCategories()\n-{\n-    std::vector<CLogCategoryActive> ret;\n-    for (const CLogCategoryDesc& category_desc : LogCategories) {\n-        // Omit the special cases.\n-        if (category_desc.flag != BCLog::NONE && category_desc.flag != BCLog::ALL) {\n-            CLogCategoryActive catActive;\n+            LogCategory catActive;\n             catActive.category = category_desc.category;\n-            catActive.active = LogAcceptCategory(category_desc.flag);\n+            catActive.active = WillLogCategory(category_desc.flag);\n             ret.push_back(catActive);\n         }\n     }"
      },
      {
        "sha": "ab07010316bb0d8867542dc876a92a21be759260",
        "filename": "src/logging.h",
        "status": "modified",
        "additions": 9,
        "deletions": 8,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faec0638872798b58b9882ee079014555bc8393e/src/logging.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faec0638872798b58b9882ee079014555bc8393e/src/logging.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/logging.h?ref=faec0638872798b58b9882ee079014555bc8393e",
        "patch": "@@ -8,6 +8,7 @@\n \n #include <fs.h>\n #include <tinyformat.h>\n+#include <util/string.h>\n \n #include <atomic>\n #include <cstdint>\n@@ -24,8 +25,7 @@ extern const char * const DEFAULT_DEBUGLOGFILE;\n \n extern bool fLogIPs;\n \n-struct CLogCategoryActive\n-{\n+struct LogCategory {\n     std::string category;\n     bool active;\n };\n@@ -132,6 +132,13 @@ namespace BCLog {\n         bool DisableCategory(const std::string& str);\n \n         bool WillLogCategory(LogFlags category) const;\n+        /** Returns a vector of the log categories */\n+        std::vector<LogCategory> LogCategoriesList();\n+        /** Returns a string with the log categories */\n+        std::string LogCategoriesString()\n+        {\n+            return Join(LogCategoriesList(), \", \", [&](const LogCategory& i) { return i.category; });\n+        };\n \n         bool DefaultShrinkDebugFile() const;\n     };\n@@ -146,12 +153,6 @@ static inline bool LogAcceptCategory(BCLog::LogFlags category)\n     return LogInstance().WillLogCategory(category);\n }\n \n-/** Returns a string with the log categories. */\n-std::string ListLogCategories();\n-\n-/** Returns a vector of the active log categories. */\n-std::vector<CLogCategoryActive> ListActiveLogCategories();\n-\n /** Return true if str parses as a log category and set the flag */\n bool GetLogCategory(BCLog::LogFlags& flag, const std::string& str);\n "
      },
      {
        "sha": "721bee40da6377030c910b6f1bf01580f4c326a4",
        "filename": "src/rpc/misc.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faec0638872798b58b9882ee079014555bc8393e/src/rpc/misc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faec0638872798b58b9882ee079014555bc8393e/src/rpc/misc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/misc.cpp?ref=faec0638872798b58b9882ee079014555bc8393e",
        "patch": "@@ -516,7 +516,7 @@ UniValue logging(const JSONRPCRequest& request)\n             \"When called with arguments, adds or removes categories from debug logging and return the lists above.\\n\"\n             \"The arguments are evaluated in order \\\"include\\\", \\\"exclude\\\".\\n\"\n             \"If an item is both included and excluded, it will thus end up being excluded.\\n\"\n-            \"The valid logging categories are: \" + ListLogCategories() + \"\\n\"\n+            \"The valid logging categories are: \" + LogInstance().LogCategoriesString() + \"\\n\"\n             \"In addition, the following are available as category names with special meanings:\\n\"\n             \"  - \\\"all\\\",  \\\"1\\\" : represent all logging categories.\\n\"\n             \"  - \\\"none\\\", \\\"0\\\" : even if other logging categories are specified, ignore all of them.\\n\"\n@@ -568,8 +568,7 @@ UniValue logging(const JSONRPCRequest& request)\n     }\n \n     UniValue result(UniValue::VOBJ);\n-    std::vector<CLogCategoryActive> vLogCatActive = ListActiveLogCategories();\n-    for (const auto& logCatActive : vLogCatActive) {\n+    for (const auto& logCatActive : LogInstance().LogCategoriesList()) {\n         result.pushKV(logCatActive.category, logCatActive.active);\n     }\n "
      }
    ]
  }
]