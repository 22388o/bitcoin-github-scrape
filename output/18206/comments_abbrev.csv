DrahtBot,2020-02-25 13:01:59,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #18190 (tests: Add fuzzing harness for Golomb-Rice coding (GolombRiceEncode/GolombRiceDecode) by practicalswift)\n* #18176",https://github.com/bitcoin/bitcoin/pull/18206#issuecomment-590855144,590855144,
practicalswift,2020-02-25 17:11:07,@MarcoFalke Thanks for reviewing. Good feedback! All points addressed - please re-review :),https://github.com/bitcoin/bitcoin/pull/18206#issuecomment-590968969,590968969,
MarcoFalke,2020-02-25 19:37:28,"ACK eabbbe409f397e97b1e6fad7385d9d1813ae2880 ðŸ¤ž\n\n<details><summary>Show signature and timestamp</summary>\n\nSignature:\n\n```\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\nACK eabbbe409f397e97b1e6fad7385d9d1813ae2880 ðŸ¤ž\n-----BEGIN PGP SIGNATURE-----\n\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUjMAAwAon5Oa4NRYASpbv3ahHtb4uOLNZJZq/Grjzc8/XyogORj0+Lsz7",https://github.com/bitcoin/bitcoin/pull/18206#issuecomment-591030625,591030625,
MarcoFalke,2020-02-25 14:56:11,Why does this need to be a different fuzzer-instructed path? I'd guess it would be simpler and more efficient to call this as the first step in `case 1`,https://github.com/bitcoin/bitcoin/pull/18206#discussion_r383930058,383930058,src/test/fuzz/bloom_filter.cpp
MarcoFalke,2020-02-25 14:56:32,Same,https://github.com/bitcoin/bitcoin/pull/18206#discussion_r383930308,383930308,src/test/fuzz/bloom_filter.cpp
MarcoFalke,2020-02-25 14:56:38,Same,https://github.com/bitcoin/bitcoin/pull/18206#discussion_r383930383,383930383,src/test/fuzz/bloom_filter.cpp
MarcoFalke,2020-02-25 14:57:41,"I know that our clang-format allows infinite length lines. But in editors that don't line-wrap this is really hard to read. Maybe add a newline after each `,`?",https://github.com/bitcoin/bitcoin/pull/18206#discussion_r383931147,383931147,src/test/fuzz/bloom_filter.cpp
MarcoFalke,2020-02-25 14:59:04,Why does this need to be fuzzer-instructed? More coverage can be achieved by calling it unconditionally.,https://github.com/bitcoin/bitcoin/pull/18206#discussion_r383932139,383932139,src/test/fuzz/bloom_filter.cpp
MarcoFalke,2020-02-25 15:02:22,Why include itself?,https://github.com/bitcoin/bitcoin/pull/18206#discussion_r383934449,383934449,src/test/fuzz/fuzz.h
MarcoFalke,2020-02-25 15:03:54,"This header takes a long time to parse, but not every fuzz target is using it. It might reduce compile time to put the fuzzedDataProvider helpers in a new module (header) and keep this header the raw and minimal ""main fuzz header""",https://github.com/bitcoin/bitcoin/pull/18206#discussion_r383935504,383935504,src/test/fuzz/fuzz.h
MarcoFalke,2020-02-25 15:05:45,"\n\nWhy does this need to be a different fuzzer-instructed path? I'd guess it would be simpler and more efficient to call this as the first step in case 1\n",https://github.com/bitcoin/bitcoin/pull/18206#discussion_r383936633,383936633,src/test/fuzz/rolling_bloom_filter.cpp
MarcoFalke,2020-02-25 15:05:49,Same,https://github.com/bitcoin/bitcoin/pull/18206#discussion_r383936709,383936709,src/test/fuzz/rolling_bloom_filter.cpp
practicalswift,2020-02-25 16:53:06,Good point. Fixed!,https://github.com/bitcoin/bitcoin/pull/18206#discussion_r383996964,383996964,src/test/fuzz/bloom_filter.cpp
practicalswift,2020-02-25 17:06:09,Good point. Now fixed.,https://github.com/bitcoin/bitcoin/pull/18206#discussion_r384005428,384005428,src/test/fuzz/fuzz.h
