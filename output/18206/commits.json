[
  {
    "sha": "2a6a6ea0f5b97cba95b5678268d638c81764b9b1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyYTZhNmVhMGY1Yjk3Y2JhOTViNTY3ODI2OGQ2MzhjODE3NjRiOWIx",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-02-24T20:35:10Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-02-25T17:04:03Z"
      },
      "message": "tests: Add fuzzing harness for bloom filter class CBloomFilter",
      "tree": {
        "sha": "cb2d6869bedae84f96f7b91a0f62ae9a3026ff12",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cb2d6869bedae84f96f7b91a0f62ae9a3026ff12"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2a6a6ea0f5b97cba95b5678268d638c81764b9b1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2a6a6ea0f5b97cba95b5678268d638c81764b9b1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2a6a6ea0f5b97cba95b5678268d638c81764b9b1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2a6a6ea0f5b97cba95b5678268d638c81764b9b1/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ab9de435880c9d77e4137b65050591ef2d14f809",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ab9de435880c9d77e4137b65050591ef2d14f809",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ab9de435880c9d77e4137b65050591ef2d14f809"
      }
    ],
    "stats": {
      "total": 130,
      "additions": 129,
      "deletions": 1
    },
    "files": [
      {
        "sha": "561abffc264d1462748ba3e940bca7df260fe507",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 9,
        "deletions": 1,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2a6a6ea0f5b97cba95b5678268d638c81764b9b1/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2a6a6ea0f5b97cba95b5678268d638c81764b9b1/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=2a6a6ea0f5b97cba95b5678268d638c81764b9b1",
        "patch": "@@ -22,6 +22,7 @@ FUZZ_TARGETS = \\\n   test/fuzz/blocktransactions_deserialize \\\n   test/fuzz/blocktransactionsrequest_deserialize \\\n   test/fuzz/blockundo_deserialize \\\n+  test/fuzz/bloom_filter \\\n   test/fuzz/bloomfilter_deserialize \\\n   test/fuzz/coins_deserialize \\\n   test/fuzz/decode_tx \\\n@@ -96,7 +97,8 @@ BITCOIN_TEST_SUITE = \\\n FUZZ_SUITE = \\\n   test/fuzz/fuzz.cpp \\\n   test/fuzz/fuzz.h \\\n-  test/fuzz/FuzzedDataProvider.h\n+  test/fuzz/FuzzedDataProvider.h \\\n+  test/fuzz/util.h\n \n FUZZ_SUITE_LD_COMMON = \\\n  $(LIBBITCOIN_SERVER) \\\n@@ -347,6 +349,12 @@ test_fuzz_blockundo_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n test_fuzz_blockundo_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n test_fuzz_blockundo_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp\n \n+test_fuzz_bloom_filter_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n+test_fuzz_bloom_filter_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_fuzz_bloom_filter_LDADD = $(FUZZ_SUITE_LD_COMMON)\n+test_fuzz_bloom_filter_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_bloom_filter_SOURCES = $(FUZZ_SUITE) test/fuzz/bloom_filter.cpp\n+\n test_fuzz_bloomfilter_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DBLOOMFILTER_DESERIALIZE=1\n test_fuzz_bloomfilter_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_bloomfilter_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)"
      },
      {
        "sha": "b78744d9df02f05acfbcd6d97a3f611c541a911b",
        "filename": "src/test/fuzz/bloom_filter.cpp",
        "status": "added",
        "additions": 80,
        "deletions": 0,
        "changes": 80,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2a6a6ea0f5b97cba95b5678268d638c81764b9b1/src/test/fuzz/bloom_filter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2a6a6ea0f5b97cba95b5678268d638c81764b9b1/src/test/fuzz/bloom_filter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/bloom_filter.cpp?ref=2a6a6ea0f5b97cba95b5678268d638c81764b9b1",
        "patch": "@@ -0,0 +1,80 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <bloom.h>\n+#include <optional.h>\n+#include <primitives/transaction.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <uint256.h>\n+\n+#include <cassert>\n+#include <cstdint>\n+#include <string>\n+#include <vector>\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+\n+    CBloomFilter bloom_filter{\n+        fuzzed_data_provider.ConsumeIntegralInRange<unsigned int>(1, 10000000),\n+        1.0 / fuzzed_data_provider.ConsumeIntegralInRange<unsigned int>(1, std::numeric_limits<unsigned int>::max()),\n+        fuzzed_data_provider.ConsumeIntegral<unsigned int>(),\n+        static_cast<unsigned char>(fuzzed_data_provider.PickValueInArray({BLOOM_UPDATE_NONE, BLOOM_UPDATE_ALL, BLOOM_UPDATE_P2PUBKEY_ONLY, BLOOM_UPDATE_MASK}))};\n+    while (fuzzed_data_provider.remaining_bytes() > 0) {\n+        switch (fuzzed_data_provider.ConsumeIntegralInRange(0, 6)) {\n+        case 0: {\n+            const std::vector<unsigned char>& b = ConsumeRandomLengthByteVector(fuzzed_data_provider);\n+            (void)bloom_filter.contains(b);\n+            bloom_filter.insert(b);\n+            const bool present = bloom_filter.contains(b);\n+            assert(present);\n+            break;\n+        }\n+        case 1: {\n+            const Optional<COutPoint> out_point = ConsumeDeserializable<COutPoint>(fuzzed_data_provider);\n+            if (!out_point) {\n+                break;\n+            }\n+            (void)bloom_filter.contains(*out_point);\n+            bloom_filter.insert(*out_point);\n+            const bool present = bloom_filter.contains(*out_point);\n+            assert(present);\n+            break;\n+        }\n+        case 2: {\n+            const Optional<uint256> u256 = ConsumeDeserializable<uint256>(fuzzed_data_provider);\n+            if (!u256) {\n+                break;\n+            }\n+            (void)bloom_filter.contains(*u256);\n+            bloom_filter.insert(*u256);\n+            const bool present = bloom_filter.contains(*u256);\n+            assert(present);\n+            break;\n+        }\n+        case 3:\n+            bloom_filter.clear();\n+            break;\n+        case 4:\n+            bloom_filter.reset(fuzzed_data_provider.ConsumeIntegral<unsigned int>());\n+            break;\n+        case 5: {\n+            const Optional<CMutableTransaction> mut_tx = ConsumeDeserializable<CMutableTransaction>(fuzzed_data_provider);\n+            if (!mut_tx) {\n+                break;\n+            }\n+            const CTransaction tx{*mut_tx};\n+            (void)bloom_filter.IsRelevantAndUpdate(tx);\n+            break;\n+        }\n+        case 6:\n+            bloom_filter.UpdateEmptyFull();\n+            break;\n+        }\n+        (void)bloom_filter.IsWithinSizeConstraints();\n+    }\n+}"
      },
      {
        "sha": "62907c7e0b916bb3cfd6c123403fff70bfc6ca58",
        "filename": "src/test/fuzz/util.h",
        "status": "added",
        "additions": 39,
        "deletions": 0,
        "changes": 39,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2a6a6ea0f5b97cba95b5678268d638c81764b9b1/src/test/fuzz/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2a6a6ea0f5b97cba95b5678268d638c81764b9b1/src/test/fuzz/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/util.h?ref=2a6a6ea0f5b97cba95b5678268d638c81764b9b1",
        "patch": "@@ -0,0 +1,39 @@\n+// Copyright (c) 2009-2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_TEST_FUZZ_UTIL_H\n+#define BITCOIN_TEST_FUZZ_UTIL_H\n+\n+#include <attributes.h>\n+#include <optional.h>\n+#include <serialize.h>\n+#include <streams.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <version.h>\n+\n+#include <cstdint>\n+#include <string>\n+#include <vector>\n+\n+NODISCARD inline std::vector<uint8_t> ConsumeRandomLengthByteVector(FuzzedDataProvider& fuzzed_data_provider, size_t max_length = 4096) noexcept\n+{\n+    const std::string s = fuzzed_data_provider.ConsumeRandomLengthString(max_length);\n+    return {s.begin(), s.end()};\n+}\n+\n+template <typename T>\n+NODISCARD inline Optional<T> ConsumeDeserializable(FuzzedDataProvider& fuzzed_data_provider, size_t max_length = 4096) noexcept\n+{\n+    const std::vector<uint8_t>& buffer = ConsumeRandomLengthByteVector(fuzzed_data_provider, max_length);\n+    CDataStream ds{buffer, SER_NETWORK, INIT_PROTO_VERSION};\n+    T obj;\n+    try {\n+        ds >> obj;\n+    } catch (const std::ios_base::failure&) {\n+        return nullopt;\n+    }\n+    return obj;\n+}\n+\n+#endif // BITCOIN_TEST_FUZZ_UTIL_H"
      },
      {
        "sha": "152efae5263de2cee30b93e0ac6029d560c09f5d",
        "filename": "test/fuzz/test_runner.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2a6a6ea0f5b97cba95b5678268d638c81764b9b1/test/fuzz/test_runner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2a6a6ea0f5b97cba95b5678268d638c81764b9b1/test/fuzz/test_runner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/fuzz/test_runner.py?ref=2a6a6ea0f5b97cba95b5678268d638c81764b9b1",
        "patch": "@@ -21,6 +21,7 @@\n     \"block_file_info_deserialize\",\n     \"block_filter_deserialize\",\n     \"block_header_and_short_txids_deserialize\",\n+    \"bloom_filter\",\n     \"decode_tx\",\n     \"fee_rate_deserialize\",\n     \"flat_file_pos_deserialize\","
      }
    ]
  },
  {
    "sha": "eabbbe409f397e97b1e6fad7385d9d1813ae2880",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplYWJiYmU0MDlmMzk3ZTk3YjFlNmZhZDczODVkOWQxODEzYWUyODgw",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-02-24T20:48:22Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-02-25T17:04:03Z"
      },
      "message": "tests: Add fuzzing harness for rolling bloom filter class CRollingBloomFilter",
      "tree": {
        "sha": "ebbabfe419c3ab328c25635bee2e75d059336f27",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ebbabfe419c3ab328c25635bee2e75d059336f27"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/eabbbe409f397e97b1e6fad7385d9d1813ae2880",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eabbbe409f397e97b1e6fad7385d9d1813ae2880",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/eabbbe409f397e97b1e6fad7385d9d1813ae2880",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eabbbe409f397e97b1e6fad7385d9d1813ae2880/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2a6a6ea0f5b97cba95b5678268d638c81764b9b1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2a6a6ea0f5b97cba95b5678268d638c81764b9b1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2a6a6ea0f5b97cba95b5678268d638c81764b9b1"
      }
    ],
    "stats": {
      "total": 58,
      "additions": 58,
      "deletions": 0
    },
    "files": [
      {
        "sha": "7b4a6ae9f27d1ee7926617ef4fd391ef0e931de4",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eabbbe409f397e97b1e6fad7385d9d1813ae2880/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eabbbe409f397e97b1e6fad7385d9d1813ae2880/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=eabbbe409f397e97b1e6fad7385d9d1813ae2880",
        "patch": "@@ -51,6 +51,7 @@ FUZZ_TARGETS = \\\n   test/fuzz/psbt_input_deserialize \\\n   test/fuzz/psbt_output_deserialize \\\n   test/fuzz/pub_key_deserialize \\\n+  test/fuzz/rolling_bloom_filter \\\n   test/fuzz/script \\\n   test/fuzz/script_deserialize \\\n   test/fuzz/script_flags \\\n@@ -523,6 +524,12 @@ test_fuzz_pub_key_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n test_fuzz_pub_key_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n test_fuzz_pub_key_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp\n \n+test_fuzz_rolling_bloom_filter_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n+test_fuzz_rolling_bloom_filter_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_fuzz_rolling_bloom_filter_LDADD = $(FUZZ_SUITE_LD_COMMON)\n+test_fuzz_rolling_bloom_filter_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_rolling_bloom_filter_SOURCES = $(FUZZ_SUITE) test/fuzz/rolling_bloom_filter.cpp\n+\n test_fuzz_script_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_script_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_script_LDADD = $(FUZZ_SUITE_LD_COMMON)"
      },
      {
        "sha": "ce69c4e8da38d98d80cd7060a0a026f1fcc3b33c",
        "filename": "src/test/fuzz/rolling_bloom_filter.cpp",
        "status": "added",
        "additions": 50,
        "deletions": 0,
        "changes": 50,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eabbbe409f397e97b1e6fad7385d9d1813ae2880/src/test/fuzz/rolling_bloom_filter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eabbbe409f397e97b1e6fad7385d9d1813ae2880/src/test/fuzz/rolling_bloom_filter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/rolling_bloom_filter.cpp?ref=eabbbe409f397e97b1e6fad7385d9d1813ae2880",
        "patch": "@@ -0,0 +1,50 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <bloom.h>\n+#include <optional.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <uint256.h>\n+\n+#include <cassert>\n+#include <cstdint>\n+#include <string>\n+#include <vector>\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+\n+    CRollingBloomFilter rolling_bloom_filter{\n+        fuzzed_data_provider.ConsumeIntegralInRange<unsigned int>(1, 1000),\n+        0.999 / fuzzed_data_provider.ConsumeIntegralInRange<unsigned int>(1, std::numeric_limits<unsigned int>::max())};\n+    while (fuzzed_data_provider.remaining_bytes() > 0) {\n+        switch (fuzzed_data_provider.ConsumeIntegralInRange(0, 2)) {\n+        case 0: {\n+            const std::vector<unsigned char>& b = ConsumeRandomLengthByteVector(fuzzed_data_provider);\n+            (void)rolling_bloom_filter.contains(b);\n+            rolling_bloom_filter.insert(b);\n+            const bool present = rolling_bloom_filter.contains(b);\n+            assert(present);\n+            break;\n+        }\n+        case 1: {\n+            const Optional<uint256> u256 = ConsumeDeserializable<uint256>(fuzzed_data_provider);\n+            if (!u256) {\n+                break;\n+            }\n+            (void)rolling_bloom_filter.contains(*u256);\n+            rolling_bloom_filter.insert(*u256);\n+            const bool present = rolling_bloom_filter.contains(*u256);\n+            assert(present);\n+            break;\n+        }\n+        case 2:\n+            rolling_bloom_filter.reset();\n+            break;\n+        }\n+    }\n+}"
      },
      {
        "sha": "dafb5d9806554b97382d5794669632247e023022",
        "filename": "test/fuzz/test_runner.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eabbbe409f397e97b1e6fad7385d9d1813ae2880/test/fuzz/test_runner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eabbbe409f397e97b1e6fad7385d9d1813ae2880/test/fuzz/test_runner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/fuzz/test_runner.py?ref=eabbbe409f397e97b1e6fad7385d9d1813ae2880",
        "patch": "@@ -40,6 +40,7 @@\n     \"psbt_input_deserialize\",\n     \"psbt_output_deserialize\",\n     \"pub_key_deserialize\",\n+    \"rolling_bloom_filter\",\n     \"script_deserialize\",\n     \"strprintf\",\n     \"sub_net_deserialize\","
      }
    ]
  }
]