promag,2019-02-06T00:37:09Z,@jnewbery @sdaftuar ,https://github.com/bitcoin/bitcoin/pull/15350#issuecomment-460860586,460860586,
MarcoFalke,2019-02-06T15:07:12Z,"Concept ACK. It makes no sense to persist the bitcoin-cli connection, since a new process has to be spun up for each call anyway.",https://github.com/bitcoin/bitcoin/pull/15350#issuecomment-461056512,461056512,
MarcoFalke,2019-02-06T15:09:20Z,"The travis output:\n\n```\n...\nwallet_multiwallet.py                 | ✓ Passed  | 20 s\nwallet_multiwallet.py --usecli        | ✓ Passed  | 80 s\n...\n```\n\n:thinking: ",https://github.com/bitcoin/bitcoin/pull/15350#issuecomment-461057377,461057377,
laanwj,2019-02-06T18:44:01Z,"> The travis output:\n\nOh crap that's still four time slower, better than five admittedly, but not by much.",https://github.com/bitcoin/bitcoin/pull/15350#issuecomment-461138942,461138942,
promag,2019-02-06T19:19:21Z,"@MarcoFalke where did you get that?\n\nCompare these (same travis job):\n\nmaster (fa2a69fcb9) - https://travis-ci.org/bitcoin/bitcoin/jobs/489678103\n```\nwallet_multiwallet.py                 | ✓ Passed  | 16 s\nwallet_multiwallet.py --usecli        | ✓ Passed  | 282 s\n```\n\nthis branch - https://travis-ci.org/bitcoin/bitcoin/jobs/489313879\n```\nwallet_multiwallet.py              ",https://github.com/bitcoin/bitcoin/pull/15350#issuecomment-461151542,461151542,
promag,2019-02-06T19:24:28Z,"BTW, locally, with or without `--usecli` the time isn's very different.\n\nAnd suppose this doesn't fix the slow down, it's still a valid change.",https://github.com/bitcoin/bitcoin/pull/15350#issuecomment-461153428,461153428,
MarcoFalke,2019-02-06T19:30:27Z,"From here: https://travis-ci.org/bitcoin/bitcoin/jobs/489313883#L3812\n\nAgree that this change should probably be fine",https://github.com/bitcoin/bitcoin/pull/15350#issuecomment-461155558,461155558,
promag,2019-02-06T19:53:15Z,"> From here: https://travis-ci.org/bitcoin/bitcoin/jobs/489313883#L3812\n\n@MarcoFalke on master, the same job (.9) gives:\n```\nwallet_multiwallet.py                 | ✓ Passed  | 50 s\nwallet_multiwallet.py --usecli        | ✓ Passed  | 319 s\n```",https://github.com/bitcoin/bitcoin/pull/15350#issuecomment-461163542,461163542,
MarcoFalke,2019-02-06T20:01:54Z,"Hmm, so this could be due to the sanitizer overhead per process.",https://github.com/bitcoin/bitcoin/pull/15350#issuecomment-461166501,461166501,
promag,2019-02-06T20:05:26Z,"@MarcoFalke I think there are lots of things that can make execution times drift, travis machine, load, etc..\n\nLocally, with `--usecli` I always get a lot of time on master, and with this change it's always similar to run without `--usecli`.",https://github.com/bitcoin/bitcoin/pull/15350#issuecomment-461167619,461167619,
sdaftuar,2019-02-06T23:51:49Z,"I think we should be closing all http/rpc connections when shutting down, rather than waiting for the client to close.  This seems like a workaround for the narrow case that a client has initiated a `stop` rpc command -- but if the node shuts down due to configuration error, hardware error, etc we should similarly not be waiting for connections to time out before shutting down, I think.\n\nFYI I",https://github.com/bitcoin/bitcoin/pull/15350#issuecomment-461235178,461235178,
promag,2019-02-07T14:46:01Z,Removed `Fixes #15309` from OP.,https://github.com/bitcoin/bitcoin/pull/15350#issuecomment-461449306,461449306,
jnewbery,2019-02-07T15:39:22Z,"I've had a look at the code change here, and it seems to be a reasonable workaround.\n\nHowever, I think the problem that @sdaftuar talks about here: https://github.com/bitcoin/bitcoin/pull/15350#issuecomment-461235178 needs to be addressed. It seems a shame to 'fix' the test that revealed this problem before fixing the underlying issue in bitcoind.",https://github.com/bitcoin/bitcoin/pull/15350#issuecomment-461474909,461474909,
promag,2019-02-07T15:48:49Z,@jnewbery this doesn't fix the test introduced by @sdaftuar.,https://github.com/bitcoin/bitcoin/pull/15350#issuecomment-461479518,461479518,
MarcoFalke,2019-02-07T15:49:58Z,"I don't care enough about the underlying issue to have an opinion on it, but this test fix makes sense regardless of any Bitcoin Core changes. I think there is no use in setting `self.rpc` to non-null when we are supposed to run with the cli. The code this way looks slightly cleaner.",https://github.com/bitcoin/bitcoin/pull/15350#issuecomment-461480007,461480007,
promag,2019-02-11T18:39:55Z,"> It seems a shame to 'fix' the test that revealed this problem before fixing the underlying issue in bitcoind\n\nFor reference, #15363 is an attempt to fix the shutdown problem found in #15350.",https://github.com/bitcoin/bitcoin/pull/15350#issuecomment-462443509,462443509,
