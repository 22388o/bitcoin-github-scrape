jgarzik,2014-11-06T18:48:43Z,"The value of removing -testnet and -regtest is unclear.\n\nAlso, please test and make sure bitcoin-cli and bitcoin-tx utilities remain consistent with bitcoind.\n",https://github.com/bitcoin/bitcoin/pull/5229#issuecomment-62029814,62029814,
jtimon,2014-11-06T23:02:00Z,"@jgarzik -testnet and -regtest still work, I'm just logging a warning to discourage its use.\nI thought that we can remove them later.\nAbout the errors, I will catch them (like in the qt case) and return false for consistency.\n",https://github.com/bitcoin/bitcoin/pull/5229#issuecomment-62067723,62067723,
laanwj,2014-11-07T09:44:21Z,"NACK on removing/deprecating -testnet and -regtest. Selecting the network is a primary function of the client, so it can be a top-level option.\n",https://github.com/bitcoin/bitcoin/pull/5229#issuecomment-62119743,62119743,
jtimon,2014-11-07T09:54:30Z,"I think it has been a misunderstanding. This PR doesn't disable -testnet and -regtest, just allows using -network instead. #5238 does disable them.\nMaybe I should replace ""is deprecated"" with ""will be deprecated"" (maybe that only makes sense after we have at least one more network [since unitest is unlikely to be selected on startup]).\nAs said in #5238, we cannot disable these flags without firs",https://github.com/bitcoin/bitcoin/pull/5229#issuecomment-62120790,62120790,
laanwj,2014-11-07T10:04:50Z,"I just don't want them to be deprecated. People rely on them, and they work fine. Forcing people to use another option seems like a boondoggle.\n\nI'm not against _also_ adding `-network=` - but do we really plan on adding more networks in the future? What is the use-case here for Bitcoin?\n",https://github.com/bitcoin/bitcoin/pull/5229#issuecomment-62121941,62121941,
jtimon,2014-11-07T10:10:54Z,"So are you against the warning messages?\nFor bitcoin, right now it only adds the ability to select ""unittest"" which I admit may not be very useful.\nI don't know if we will add another mode anytime soon, but it makes it easier to do so in the future.\nIt also simplifies things for people maintaining their own custom modes locally.\nFinally, If the final goal is to load chainparams from files I th",https://github.com/bitcoin/bitcoin/pull/5229#issuecomment-62122579,62122579,
laanwj,2014-11-07T10:22:14Z,"Indeed, remove the warning messages. It makes sense to keep those quick shortcut option to select regtest and testnet (but not for more obscure networks like unittest).\n",https://github.com/bitcoin/bitcoin/pull/5229#issuecomment-62123765,62123765,
jtimon,2014-11-07T14:07:15Z,Warnings removed. I'm fine just not adding new network shortcuts from now on.\n,https://github.com/bitcoin/bitcoin/pull/5229#issuecomment-62148878,62148878,
jtimon,2014-11-08T11:08:01Z,Should I squash already?\n,https://github.com/bitcoin/bitcoin/pull/5229#issuecomment-62254066,62254066,
petertodd,2014-11-10T15:46:31Z,NACK on removing/deprecating -testnet and -regtest.\n,https://github.com/bitcoin/bitcoin/pull/5229#issuecomment-62403078,62403078,
jtimon,2014-11-10T19:17:45Z,"@petertodd I told @jgarzik and then @Diapolo that this does not disable -testnet or -regtest.\nThen @laanwj complained about the warnings saying they are deprecated and I removed the warnings too. Please, read the code, or at least the thread.\nMaybe it is less clear due to all the ""squashme"" commits, I'll squash now...\n",https://github.com/bitcoin/bitcoin/pull/5229#issuecomment-62438027,62438027,
jtimon,2015-01-04T19:20:01Z,Closing until #5598 gets merged.\n,https://github.com/bitcoin/bitcoin/pull/5229#issuecomment-68644981,68644981,
jtimon,2015-01-07T23:47:36Z,Reopened and rebased after #5598 has been merged. Now it's easier to review.\n,https://github.com/bitcoin/bitcoin/pull/5229#issuecomment-69113620,69113620,
petertodd,2015-01-08T00:00:23Z,"Rather that having the argument be ""-network"" why don't we rename it to ""-chain""?\n\nNetwork is a term that's already overloaded in multiple contexts. After all, we called it _chain_ params rather than network params.\n\nOn 7 January 2015 18:48:08 GMT-05:00, ""Jorge TimÃ³n"" notifications@github.com wrote:\n\n> Reopened and rebased after #5598 has been merged. Now it's easier to\n> review.\n> \n> ---",https://github.com/bitcoin/bitcoin/pull/5229#issuecomment-69114956,69114956,
jtimon,2015-01-10T17:34:26Z,"Yes, I also thought about ""mode"" and ""chain"". Technically main and unittest are the same chain, since they share the same genesis block and all, so I decided for ""network"". But that's the only exception so probably ""chain"" still makes sense.\nLet's wait for other people to decide the color of the bike shed and I'll make the change to whatever is more popular.\n",https://github.com/bitcoin/bitcoin/pull/5229#issuecomment-69464021,69464021,
jtimon,2015-03-26T16:07:03Z,Needed rebase so I squashed the nits.\n,https://github.com/bitcoin/bitcoin/pull/5229#issuecomment-86594818,86594818,
laanwj,2015-03-30T14:34:11Z,"I'm still not convinced that this is necessary. The reason for this change seems very academic; `-testnet` `-regtest` versus `-network=testnet` `-network=regtest`, meh.\n",https://github.com/bitcoin/bitcoin/pull/5229#issuecomment-87703524,87703524,
petertodd,2015-04-01T03:56:41Z,@laanwj FWIW I always use --testnet and --regtest in my command-line tools.\n,https://github.com/bitcoin/bitcoin/pull/5229#issuecomment-88342341,88342341,
laanwj,2015-04-02T09:10:59Z,"This also needs changes to the qt autostart functionality, #5793, which relies on passing through -regtest/-testnet at the moment. But at least that is a simplification, you could just pass `-chain=%s` with %s the current chain name.\n",https://github.com/bitcoin/bitcoin/pull/5229#issuecomment-88836819,88836819,
jtimon,2015-04-08T23:17:01Z,@laanwj could you give a line number link on where is that passed?\n,https://github.com/bitcoin/bitcoin/pull/5229#issuecomment-91064752,91064752,
jtimon,2015-04-08T23:52:23Z,"@petertodd as discussed those options will remain usable and not deprecated.\nGiven that unittestnet has disappeared, it's really mainly an extensibility and altchain friendly patch so I understand if it remains in limbo until it is more directly useful for bitcoin.\nIt won't be hard to maintain unmerged anyway. Whenever somebody thinks about adding a third --harforktestnet or whatever this PR wil",https://github.com/bitcoin/bitcoin/pull/5229#issuecomment-91071027,91071027,
jtimon,2015-04-14T18:44:32Z,"Updated with @laanwj 's suggestion for replacing the enum with strings, and added a new GetParamsHelpMessages() function. Note that it could be used in src/bitcoin-cli.cpp too but I wasn't sure if we wanted that depending on ui_interface.\n",https://github.com/bitcoin/bitcoin/pull/5229#issuecomment-93015315,93015315,
jtimon,2015-04-15T11:50:47Z,"Sorry, I forgot to deal with the qt autostart functionality as pointed out by@laanwj.\nIt is done now.\n\nI also stopped using the bip70 nomenclature for the string constants since that changes ""testnet"" for just ""test"", which wouldn't have worked very well with the qt part.\nIs there any possibility to correct bip70 in that sense?\n",https://github.com/bitcoin/bitcoin/pull/5229#issuecomment-93348751,93348751,
jtimon,2015-04-16T13:15:41Z,"Oopss, thanks @laanwj , fixed.\nAlso adding a commit in which src/bitcoin-cli.cpp also uses GetParamsHelpMessages() [and also ui_interface].\nThoughts on that commit? @theuni is there an specific reason for bitcoin-cli not to use ui_interface that I'm missing?\n",https://github.com/bitcoin/bitcoin/pull/5229#issuecomment-93731335,93731335,
jtimon,2015-04-16T13:22:12Z,"I mean, the last commit would be kind of undoing https://github.com/bitcoin/bitcoin/commit/73ac7abd08a70adf22e24d0f5f7631e7f8b7c5bb\n\nThat's why I'm assuming people may not lie the idea.\n",https://github.com/bitcoin/bitcoin/pull/5229#issuecomment-93732555,93732555,
jtimon,2015-04-16T15:53:39Z,"Never mind about the SQUASHME commits, I rebased on top of #6022, which is what I think makes most sense.\n",https://github.com/bitcoin/bitcoin/pull/5229#issuecomment-93769911,93769911,
jtimon,2015-04-24T10:00:44Z,Closing until #6022 is merged.\n,https://github.com/bitcoin/bitcoin/pull/5229#issuecomment-95879751,95879751,
jtimon,2015-05-01T08:40:06Z,Rebased after https://github.com/jtimon/bitcoin/commit/b74dcb3b4aa29958d22135f2d6c015578069e83c ( #6022  )\n,https://github.com/bitcoin/bitcoin/pull/5229#issuecomment-98077779,98077779,
jtimon,2015-05-06T11:14:14Z,Needed rebase\n,https://github.com/bitcoin/bitcoin/pull/5229#issuecomment-99420524,99420524,
jtimon,2015-05-22T04:33:41Z,"Added 3 commits to hopefully make it more interesting.\nThe added tests are kind of redundant, but won't hurt.\nI'm specially interested on @theuni 's opinion on (~~https://github.com/jtimon/bitcoin/commit/65e2a722d64454378bb481afab154e4c9e1178d9~~) commit named ""Chainparams: Use a regular factory for creating chainparams""] (since I know he wants to eventually separate the state-related functions ",https://github.com/bitcoin/bitcoin/pull/5229#issuecomment-104504708,104504708,
jtimon,2015-05-22T09:38:28Z,"Removed https://github.com/jtimon/bitcoin/commit/ac1c555f275109582974ab0245a0d81854cf1ddd since is now a proposal for the trivial branch (https://github.com/theuni/bitcoin/pull/27).\n\nTo better read commit ""Chainparams: The hash of the genesis block it's the genesis checkpoint and chain id"", please rgrep hashGenesisBlock\n\nAll mentions of it are whether to:\n- Its own asignments, of course.\n- M",https://github.com/bitcoin/bitcoin/pull/5229#issuecomment-104595832,104595832,
jtimon,2015-05-23T09:48:31Z,"Sorry, pushed too fast. Now I use containers instead of those ugly ClearSelectedParams functions, and the first commit actually compiles (now all of them do).\n",https://github.com/bitcoin/bitcoin/pull/5229#issuecomment-104876372,104876372,
jtimon,2015-05-27T12:22:28Z,"Closing for now, I will open a version with some of the changes but without adding the new option.\n",https://github.com/bitcoin/bitcoin/pull/5229#issuecomment-105888128,105888128,
jtimon,2015-06-04T10:11:58Z,This is the promised version with some of the improvements but without adding the new option: #6229\nOpened for discussion.\n,https://github.com/bitcoin/bitcoin/pull/5229#issuecomment-108824435,108824435,
sipa,2014-11-06T17:59:16Z,It doesn't actually return anything.\n,https://github.com/bitcoin/bitcoin/pull/5229#discussion_r19961645,19961645,src/chainparams.h
Diapolo,2014-11-06T18:50:03Z,"2 times ""testnet""? Guess this should read ""regtest"".\n",https://github.com/bitcoin/bitcoin/pull/5229#discussion_r19965129,19965129,src/chainparamsbase.cpp
Diapolo,2014-11-06T18:51:33Z,"An empty network should also be mainnet, or?\n",https://github.com/bitcoin/bitcoin/pull/5229#discussion_r19965249,19965249,src/chainparamsbase.cpp
Diapolo,2014-11-06T18:52:02Z,I think unknown or invalid sounds more common. Same for the usages below.\n,https://github.com/bitcoin/bitcoin/pull/5229#discussion_r19965278,19965278,src/chainparams.cpp
Diapolo,2014-11-06T18:54:40Z,"Mind using the same phrase or form as we already have in init.cpp, e.g. `Warning: Unsupported argument -debugnet ignored, use -debug=net.`.\n",https://github.com/bitcoin/bitcoin/pull/5229#discussion_r19965455,19965455,src/chainparamsbase.cpp
Diapolo,2014-11-06T18:54:50Z,Same here...\n,https://github.com/bitcoin/bitcoin/pull/5229#discussion_r19965467,19965467,src/chainparamsbase.cpp
jtimon,2014-11-06T22:51:43Z,"I just copied the message that we had, but I actually prefer unknown or not supported.\nI will change it to unknown.\n",https://github.com/bitcoin/bitcoin/pull/5229#discussion_r19982620,19982620,src/chainparams.cpp
jtimon,2014-11-06T22:52:44Z,I will correct it.\n,https://github.com/bitcoin/bitcoin/pull/5229#discussion_r19982667,19982667,src/chainparams.h
jtimon,2014-11-06T22:56:04Z,"That's what it does, look at the last return.\nI use """" as the default for the later (network != """") check to throw an error.\n",https://github.com/bitcoin/bitcoin/pull/5229#discussion_r19982875,19982875,src/chainparamsbase.cpp
jtimon,2014-11-06T22:56:23Z,"Ops, I will correct it.\n",https://github.com/bitcoin/bitcoin/pull/5229#discussion_r19982895,19982895,src/chainparamsbase.cpp
jtimon,2014-11-06T22:57:47Z,"But -testnet and -regtest are still supported, I'm just warning that their use is not recommended since they may dissappear in the future.\n",https://github.com/bitcoin/bitcoin/pull/5229#discussion_r19982967,19982967,src/chainparamsbase.cpp
Diapolo,2014-11-07T06:19:06Z,"I'd use `if (network.empty() || network == ""main"")` that way the code is much easier to read IMHO. Or even better, make the default in GetArg ""main""?\n",https://github.com/bitcoin/bitcoin/pull/5229#discussion_r19996176,19996176,src/chainparamsbase.cpp
jtimon,2014-11-07T09:24:42Z,"When the user doesn't provide a -network you don't want to default to main yet, you want to check the -testnet and -regtest flags first.\nWhen we stop supporting -testnet and -regtest, the function can be as simple as this:\n\n```\nCBaseChainParams::Network NetworkIdFromCommandLine()\n{\n    std::string network = GetArg(""-network"", ""main"");\n    if (network == ""main"")\n        return CBaseChainPar",https://github.com/bitcoin/bitcoin/pull/5229#discussion_r20000961,20000961,src/chainparamsbase.cpp
jtimon,2014-11-07T09:33:23Z,"Actually I wanted to check network before checking testnet/regtest so that if you provide both network=""regtest"" and -testnet, the network arg has preference and the -testnet arg is ignored. But doing it in the other order allows this simplification now and produces less changes when those flags are disabled so I'll change it.\n",https://github.com/bitcoin/bitcoin/pull/5229#discussion_r20001279,20001279,src/chainparamsbase.cpp
laanwj,2015-04-02T09:07:34Z,"What if these would be defined as string constants, e.g.:\n\n```\n    const std::string CBaseChainParams::MAIN = ""main"";\n    const std::string CBaseChainParams::TESTNET = ""testnet"";\n    const std::string CBaseChainParams::REGTEST = ""regtest"";\n```\n\n... I guess we could get rid of the `CBaseChainParams::Network` enumeration type completely, making `SelectParams` take a string. This kind of swit",https://github.com/bitcoin/bitcoin/pull/5229#discussion_r27641885,27641885,src/chainparamsbase.cpp
jtimon,2015-04-08T23:14:22Z,"Well, we can get rid of the enumeration even if the strings aren't declared as constants. I won't opposed to it but working at big java projects were those type of constants are abundant I have always wondered if the gain in readability that CBaseChainParams::TESTNET provides compared to ""testnet"".\nYes, yes, developers could type ""testtnet"" and have some fun getting an ""unkown chain 'testtnet'"" e",https://github.com/bitcoin/bitcoin/pull/5229#discussion_r28023148,28023148,src/chainparamsbase.cpp
laanwj,2015-04-15T12:04:11Z,Spurious `-regtest=%d`\n,https://github.com/bitcoin/bitcoin/pull/5229#discussion_r28413336,28413336,src/qt/guiutil.cpp
