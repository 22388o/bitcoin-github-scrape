[
  {
    "sha": "15cabcdb12ad03f49f950fc39cdc8e6f3926a391",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxNWNhYmNkYjEyYWQwM2Y0OWY5NTBmYzM5Y2RjOGU2ZjM5MjZhMzkx",
    "commit": {
      "author": {
        "name": "jtimon",
        "email": "jtimon@jtimon.cc",
        "date": "2014-11-06T18:31:40Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2015-06-04T08:54:01Z"
      },
      "message": "Chainparams: The hash of the genesis block it's the genesis checkpoint and chain id",
      "tree": {
        "sha": "7173a29ee2a6d038ad8b8454c49d2b6183bc2094",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7173a29ee2a6d038ad8b8454c49d2b6183bc2094"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/15cabcdb12ad03f49f950fc39cdc8e6f3926a391",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/15cabcdb12ad03f49f950fc39cdc8e6f3926a391",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/15cabcdb12ad03f49f950fc39cdc8e6f3926a391",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/15cabcdb12ad03f49f950fc39cdc8e6f3926a391/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f00b62391b9317bf4c83676520fede1fb4027c43",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f00b62391b9317bf4c83676520fede1fb4027c43",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f00b62391b9317bf4c83676520fede1fb4027c43"
      }
    ],
    "stats": {
      "total": 45,
      "additions": 33,
      "deletions": 12
    },
    "files": [
      {
        "sha": "cbb1ae1dd6793cf11ceb56ebf98a67186fccc4d4",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 5,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/15cabcdb12ad03f49f950fc39cdc8e6f3926a391/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/15cabcdb12ad03f49f950fc39cdc8e6f3926a391/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=15cabcdb12ad03f49f950fc39cdc8e6f3926a391",
        "patch": "@@ -16,6 +16,13 @@ using namespace std;\n \n #include \"chainparamsseeds.h\"\n \n+const std::map<std::string, uint256> CChainParams::supportedChains =\n+    boost::assign::map_list_of\n+    ( \"main\", uint256S(\"0x000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f\"))\n+    ( \"test\", uint256S(\"0x000000000933ea01ad0ee984209779baaec3ced90fa3f408719526f8d77f4943\"))\n+    ( \"regtest\", uint256S(\"0x0f9188f13cb7b2c71f2a335e3a4fc328bf5beb436012afca590b1a11466e2206\"))\n+    ;\n+\n /**\n  * Main network\n  */\n@@ -80,8 +87,7 @@ class CMainParams : public CChainParams {\n         genesis.nNonce   = 2083236893;\n \n         consensus.hashGenesisBlock = genesis.GetHash();\n-        assert(consensus.hashGenesisBlock == uint256S(\"0x000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f\"));\n-        assert(genesis.hashMerkleRoot == uint256S(\"0x4a5e1e4baab89f3a32518a88c31bc87f618f76673e2cc77ab2127b7afdeda33b\"));\n+        assert(consensus.hashGenesisBlock == supportedChains.find(strNetworkID)->second);\n \n         vSeeds.push_back(CDNSSeedData(\"bitcoin.sipa.be\", \"seed.bitcoin.sipa.be\")); // Pieter Wuille\n         vSeeds.push_back(CDNSSeedData(\"bluematt.me\", \"dnsseed.bluematt.me\")); // Matt Corallo\n@@ -107,6 +113,7 @@ class CMainParams : public CChainParams {\n \n         checkpointData = (Checkpoints::CCheckpointData) {\n             boost::assign::map_list_of\n+            (     0, consensus.hashGenesisBlock)\n             ( 11111, uint256S(\"0x0000000069e244f73d78e8fd29ba2fd2ed618bd6fa2ee92559f542fdb26e7c1d\"))\n             ( 33333, uint256S(\"0x000000002dd5588a74784eaa7ab0507a18ad16a236e7b1ce69f00d7ddfb5d0a6\"))\n             ( 74000, uint256S(\"0x0000000000573993a3c9e41ce34471c079dcf5f52a0e824a81e7f953b8661a20\"))\n@@ -153,7 +160,7 @@ class CTestNetParams : public CMainParams {\n         genesis.nTime = 1296688602;\n         genesis.nNonce = 414098458;\n         consensus.hashGenesisBlock = genesis.GetHash();\n-        assert(consensus.hashGenesisBlock == uint256S(\"0x000000000933ea01ad0ee984209779baaec3ced90fa3f408719526f8d77f4943\"));\n+        assert(consensus.hashGenesisBlock == supportedChains.find(strNetworkID)->second);\n \n         vFixedSeeds.clear();\n         vSeeds.clear();\n@@ -179,6 +186,7 @@ class CTestNetParams : public CMainParams {\n \n         checkpointData = (Checkpoints::CCheckpointData) {\n             boost::assign::map_list_of\n+            (     0, consensus.hashGenesisBlock)\n             ( 546, uint256S(\"000000002a936ca763904c3c35fce2f3556c559c0214345d31b1bcebf76acb70\")),\n             1337966069,\n             1488,\n@@ -210,8 +218,8 @@ class CRegTestParams : public CTestNetParams {\n         genesis.nBits = 0x207fffff;\n         genesis.nNonce = 2;\n         consensus.hashGenesisBlock = genesis.GetHash();\n+        assert(consensus.hashGenesisBlock == supportedChains.find(strNetworkID)->second);\n         nDefaultPort = 18444;\n-        assert(consensus.hashGenesisBlock == uint256S(\"0x0f9188f13cb7b2c71f2a335e3a4fc328bf5beb436012afca590b1a11466e2206\"));\n         nPruneAfterHeight = 1000;\n \n         vFixedSeeds.clear(); //! Regtest mode doesn't have any fixed seeds.\n@@ -226,7 +234,7 @@ class CRegTestParams : public CTestNetParams {\n \n         checkpointData = (Checkpoints::CCheckpointData){\n             boost::assign::map_list_of\n-            ( 0, uint256S(\"0f9188f13cb7b2c71f2a335e3a4fc328bf5beb436012afca590b1a11466e2206\")),\n+            (     0, consensus.hashGenesisBlock),\n             0,\n             0,\n             0"
      },
      {
        "sha": "903f0f29fe73c059c0dc0f9047a8dbe72a76128f",
        "filename": "src/chainparams.h",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/15cabcdb12ad03f49f950fc39cdc8e6f3926a391/src/chainparams.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/15cabcdb12ad03f49f950fc39cdc8e6f3926a391/src/chainparams.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.h?ref=15cabcdb12ad03f49f950fc39cdc8e6f3926a391",
        "patch": "@@ -45,6 +45,11 @@ class CChainParams\n         MAX_BASE58_TYPES\n     };\n \n+    /**\n+     * Maps strNetworkID [see BIP70] to chainID (hashGenesisBlock and genesis checkpoint)\n+     */\n+    static const std::map<std::string, uint256> supportedChains;\n+\n     const Consensus::Params& GetConsensus() const { return consensus; }\n     const CMessageHeader::MessageStartChars& MessageStart() const { return pchMessageStart; }\n     const std::vector<unsigned char>& AlertKey() const { return vAlertPubKey; }"
      },
      {
        "sha": "ce9bd40a497ee04f536405ee773a094801fcbb87",
        "filename": "src/test/Checkpoints_tests.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 7,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/15cabcdb12ad03f49f950fc39cdc8e6f3926a391/src/test/Checkpoints_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/15cabcdb12ad03f49f950fc39cdc8e6f3926a391/src/test/Checkpoints_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/Checkpoints_tests.cpp?ref=15cabcdb12ad03f49f950fc39cdc8e6f3926a391",
        "patch": "@@ -2,22 +2,30 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-//\n-// Unit tests for block-chain checkpoints\n-//\n-\n #include \"checkpoints.h\"\n-\n #include \"uint256.h\"\n #include \"test/test_bitcoin.h\"\n #include \"chainparams.h\"\n \n+#include <boost/assign/list_of.hpp>\n #include <boost/test/unit_test.hpp>\n \n-using namespace std;\n-\n BOOST_FIXTURE_TEST_SUITE(Checkpoints_tests, BasicTestingSetup)\n \n+// The hash of the genesis block it's the genesis checkpoint and chain id\n+BOOST_AUTO_TEST_CASE(genesisblockhash_test)\n+{\n+    std::map<std::string, uint256>::const_iterator iter;\n+    for (iter = CChainParams::supportedChains.begin(); iter != CChainParams::supportedChains.end(); ++iter) {\n+        const CChainParams& chainparams = Params(iter->first);\n+        std::string hashStr = chainparams.GenesisBlock().GetHash().GetHex();\n+        BOOST_CHECK_EQUAL(hashStr, iter->second.GetHex());\n+        BOOST_CHECK_EQUAL(hashStr, chainparams.GetConsensus().hashGenesisBlock.GetHex());\n+        const uint256& genesisCheckpoint = chainparams.Checkpoints().mapCheckpoints.find(0)->second;\n+        BOOST_CHECK_EQUAL(hashStr, genesisCheckpoint.GetHex());\n+    }\n+}    \n+\n BOOST_AUTO_TEST_CASE(sanity)\n {\n     const Checkpoints::CCheckpointData& checkpoints = Params(CBaseChainParams::MAIN).Checkpoints();"
      }
    ]
  },
  {
    "sha": "5cd9cd822c68e12bd9d69f00c83a5eefdeef86f4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1Y2Q5Y2Q4MjJjNjhlMTJiZDlkNjlmMDBjODNhNWVlZmRlZWY4NmY0",
    "commit": {
      "author": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2015-05-25T05:52:16Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2015-06-04T09:47:14Z"
      },
      "message": "Chainparams: Replace CBaseChainParams::Network enum with string constants (suggested by Wladimir)",
      "tree": {
        "sha": "814e497a0ef46fe722093aaaf604275eb385a75a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/814e497a0ef46fe722093aaaf604275eb385a75a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5cd9cd822c68e12bd9d69f00c83a5eefdeef86f4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5cd9cd822c68e12bd9d69f00c83a5eefdeef86f4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5cd9cd822c68e12bd9d69f00c83a5eefdeef86f4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5cd9cd822c68e12bd9d69f00c83a5eefdeef86f4/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "15cabcdb12ad03f49f950fc39cdc8e6f3926a391",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/15cabcdb12ad03f49f950fc39cdc8e6f3926a391",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/15cabcdb12ad03f49f950fc39cdc8e6f3926a391"
      }
    ],
    "stats": {
      "total": 108,
      "additions": 56,
      "deletions": 52
    },
    "files": [
      {
        "sha": "ce40a0b1795ca7821fe2a9b7f264fafbda7af07c",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 15,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5cd9cd822c68e12bd9d69f00c83a5eefdeef86f4/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5cd9cd822c68e12bd9d69f00c83a5eefdeef86f4/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=5cd9cd822c68e12bd9d69f00c83a5eefdeef86f4",
        "patch": "@@ -5,6 +5,7 @@\n \n #include \"chainparams.h\"\n \n+#include \"tinyformat.h\"\n #include \"util.h\"\n #include \"utilstrencodings.h\"\n \n@@ -250,31 +251,29 @@ const CChainParams &Params() {\n     return *pCurrentParams;\n }\n \n-CChainParams &Params(CBaseChainParams::Network network) {\n-    switch (network) {\n-        case CBaseChainParams::MAIN:\n+CChainParams& Params(std::string chain)\n+{\n+    if (chain == CBaseChainParams::MAIN)\n             return mainParams;\n-        case CBaseChainParams::TESTNET:\n+    else if (chain == CBaseChainParams::TESTNET)\n             return testNetParams;\n-        case CBaseChainParams::REGTEST:\n+    else if (chain == CBaseChainParams::REGTEST)\n             return regTestParams;\n-        default:\n-            assert(false && \"Unimplemented network\");\n-            return mainParams;\n-    }\n+    throw std::runtime_error(strprintf(_(\"%s: Unknown chain %s.\"), __func__, chain));\n }\n \n-void SelectParams(CBaseChainParams::Network network) {\n-    SelectBaseParams(network);\n-    pCurrentParams = &Params(network);\n+void SelectParams(std::string chain)\n+{\n+    SelectBaseParams(chain);\n+    pCurrentParams = &Params(chain);\n }\n \n bool SelectParamsFromCommandLine()\n {\n-    CBaseChainParams::Network network = NetworkIdFromCommandLine();\n-    if (network == CBaseChainParams::MAX_NETWORK_TYPES)\n+    std::string chain = ChainNameFromCommandLine();\n+    if (chain == CBaseChainParams::MAX_NETWORK_TYPES)\n         return false;\n \n-    SelectParams(network);\n+    SelectParams(chain);\n     return true;\n }"
      },
      {
        "sha": "99797877e7dde5556e7a7a592be56d460a54886b",
        "filename": "src/chainparams.h",
        "status": "modified",
        "additions": 9,
        "deletions": 5,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5cd9cd822c68e12bd9d69f00c83a5eefdeef86f4/src/chainparams.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5cd9cd822c68e12bd9d69f00c83a5eefdeef86f4/src/chainparams.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.h?ref=5cd9cd822c68e12bd9d69f00c83a5eefdeef86f4",
        "patch": "@@ -70,7 +70,7 @@ class CChainParams\n     bool MineBlocksOnDemand() const { return fMineBlocksOnDemand; }\n     /** In the future use NetworkIDString() for RPC fields */\n     bool TestnetToBeDeprecatedFieldRPC() const { return fTestnetToBeDeprecatedFieldRPC; }\n-    /** Return the BIP70 network string (main, test or regtest) */\n+    /** Returns the BIP70 chain name string (main, test or regtest) */\n     std::string NetworkIDString() const { return strNetworkID; }\n     const std::vector<CDNSSeedData>& DNSSeeds() const { return vSeeds; }\n     const std::vector<unsigned char>& Base58Prefix(Base58Type type) const { return base58Prefixes[type]; }\n@@ -106,11 +106,15 @@ class CChainParams\n  */\n const CChainParams &Params();\n \n-/** Return parameters for the given network. */\n-CChainParams &Params(CBaseChainParams::Network network);\n+/**\n+ * Returns parameters for the given BIP70 chain name.\n+ */\n+CChainParams& Params(std::string chain);\n \n-/** Sets the params returned by Params() to those for the given network. */\n-void SelectParams(CBaseChainParams::Network network);\n+/**\n+ * Sets the params returned by Params() to those for the given BIP70 chain name.\n+ */\n+void SelectParams(std::string chain);\n \n /**\n  * Looks for -regtest or -testnet and then calls SelectParams as appropriate."
      },
      {
        "sha": "4d4bdea600dc75504d8209e57e0f55cff3af342c",
        "filename": "src/chainparamsbase.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 16,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5cd9cd822c68e12bd9d69f00c83a5eefdeef86f4/src/chainparamsbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5cd9cd822c68e12bd9d69f00c83a5eefdeef86f4/src/chainparamsbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparamsbase.cpp?ref=5cd9cd822c68e12bd9d69f00c83a5eefdeef86f4",
        "patch": "@@ -5,10 +5,16 @@\n \n #include \"chainparamsbase.h\"\n \n+#include \"tinyformat.h\"\n #include \"util.h\"\n \n #include <assert.h>\n \n+const std::string CBaseChainParams::MAIN = \"main\";\n+const std::string CBaseChainParams::TESTNET = \"test\";\n+const std::string CBaseChainParams::REGTEST = \"regtest\";\n+const std::string CBaseChainParams::MAX_NETWORK_TYPES = \"unknown_chain\";\n+\n /**\n  * Main network\n  */\n@@ -70,25 +76,19 @@ const CBaseChainParams& BaseParams()\n     return *pCurrentBaseParams;\n }\n \n-void SelectBaseParams(CBaseChainParams::Network network)\n+void SelectBaseParams(std::string chain)\n {\n-    switch (network) {\n-    case CBaseChainParams::MAIN:\n+    if (chain == CBaseChainParams::MAIN)\n         pCurrentBaseParams = &mainParams;\n-        break;\n-    case CBaseChainParams::TESTNET:\n+    else if (chain == CBaseChainParams::TESTNET)\n         pCurrentBaseParams = &testNetParams;\n-        break;\n-    case CBaseChainParams::REGTEST:\n+    else if (chain == CBaseChainParams::REGTEST)\n         pCurrentBaseParams = &regTestParams;\n-        break;\n-    default:\n-        assert(false && \"Unimplemented network\");\n-        return;\n-    }\n+    else\n+        throw std::runtime_error(strprintf(_(\"%s: Unknown chain %s.\"), __func__, chain));\n }\n \n-CBaseChainParams::Network NetworkIdFromCommandLine()\n+std::string ChainNameFromCommandLine()\n {\n     bool fRegTest = GetBoolArg(\"-regtest\", false);\n     bool fTestNet = GetBoolArg(\"-testnet\", false);\n@@ -104,11 +104,11 @@ CBaseChainParams::Network NetworkIdFromCommandLine()\n \n bool SelectBaseParamsFromCommandLine()\n {\n-    CBaseChainParams::Network network = NetworkIdFromCommandLine();\n-    if (network == CBaseChainParams::MAX_NETWORK_TYPES)\n+    std::string chain = ChainNameFromCommandLine();\n+    if (chain == CBaseChainParams::MAX_NETWORK_TYPES)\n         return false;\n \n-    SelectBaseParams(network);\n+    SelectBaseParams(chain);\n     return true;\n }\n "
      },
      {
        "sha": "220d3800a61b0113a459c0b5a6dc37d8d4bca0e5",
        "filename": "src/chainparamsbase.h",
        "status": "modified",
        "additions": 16,
        "deletions": 15,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5cd9cd822c68e12bd9d69f00c83a5eefdeef86f4/src/chainparamsbase.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5cd9cd822c68e12bd9d69f00c83a5eefdeef86f4/src/chainparamsbase.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparamsbase.h?ref=5cd9cd822c68e12bd9d69f00c83a5eefdeef86f4",
        "patch": "@@ -15,13 +15,11 @@\n class CBaseChainParams\n {\n public:\n-    enum Network {\n-        MAIN,\n-        TESTNET,\n-        REGTEST,\n-\n-        MAX_NETWORK_TYPES\n-    };\n+    /** BIP70 chain name strings (main, test or regtest) */\n+    static const std::string MAIN;\n+    static const std::string TESTNET;\n+    static const std::string REGTEST;\n+    static const std::string MAX_NETWORK_TYPES;\n \n     const std::string& DataDir() const { return strDataDir; }\n     int RPCPort() const { return nRPCPort; }\n@@ -33,20 +31,24 @@ class CBaseChainParams\n     std::string strDataDir;\n };\n \n+/**\n+ * Looks for -regtest, -testnet and returns the appropriate BIP70 chain name.\n+ * Returns CBaseChainParams::MAIN by default.\n+ * Returns CBaseChainParams::MAX_NETWORK_TYPES if an invalid combination is given.\n+ */\n+std::string ChainNameFromCommandLine();\n+\n /**\n  * Return the currently selected parameters. This won't change after app\n  * startup, except for unit tests.\n  */\n const CBaseChainParams& BaseParams();\n \n-/** Sets the params returned by Params() to those for the given network. */\n-void SelectBaseParams(CBaseChainParams::Network network);\n-\n /**\n- * Looks for -regtest or -testnet and returns the appropriate Network ID.\n- * Returns MAX_NETWORK_TYPES if an invalid combination is given.\n+ * Sets the params returned by BaseParams() to those for the appropriate chain returned by ChainNameFromCommandLine().\n+ * Raises a std::runtime_error if an unsupported chain name is given.\n  */\n-CBaseChainParams::Network NetworkIdFromCommandLine();\n+void SelectBaseParams(std::string chain);\n \n /**\n  * Calls NetworkIdFromCommandLine() and then calls SelectParams as appropriate.\n@@ -55,8 +57,7 @@ CBaseChainParams::Network NetworkIdFromCommandLine();\n bool SelectBaseParamsFromCommandLine();\n \n /**\n- * Return true if SelectBaseParamsFromCommandLine() has been called to select\n- * a network.\n+ * Return true if SelectBaseParamsFromCommandLine() has been called to select a chain.\n  */\n bool AreBaseParamsConfigured();\n "
      },
      {
        "sha": "b3813e2f75eed51e29a736084c2eab22c3b965c6",
        "filename": "src/qt/test/paymentservertests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5cd9cd822c68e12bd9d69f00c83a5eefdeef86f4/src/qt/test/paymentservertests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5cd9cd822c68e12bd9d69f00c83a5eefdeef86f4/src/qt/test/paymentservertests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/paymentservertests.cpp?ref=5cd9cd822c68e12bd9d69f00c83a5eefdeef86f4",
        "patch": "@@ -141,7 +141,7 @@ void PaymentServerTests::paymentServerTests()\n     data = DecodeBase64(paymentrequest1_cert2_BASE64);\n     byteArray = QByteArray((const char*)&data[0], data.size());\n     r.paymentRequest.parse(byteArray);\n-    // Ensure the request is initialized, because network \"main\" is default, even for\n+    // Ensure the request is initialized, because network CBaseChainParams::MAIN is default, even for\n     // uninizialized payment requests and that will fail our test here.\n     QVERIFY(r.paymentRequest.IsInitialized());\n     QCOMPARE(PaymentServer::verifyNetwork(r.paymentRequest.getDetails()), false);"
      }
    ]
  },
  {
    "sha": "3e03bb78835c6155403d1db67694137bc8b9e40c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozZTAzYmI3ODgzNWM2MTU1NDAzZDFkYjY3Njk0MTM3YmM4YjllNDBj",
    "commit": {
      "author": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2015-05-25T07:41:26Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2015-06-04T09:49:39Z"
      },
      "message": "fixup! RENAME: strNetworkID = CBaseChainParams::REGTEST, strDataDir = CBaseChainParams::REGTEST\n\ns/\"regtest\"/CBaseChainParams::REGTEST\ns/\"main\"/CBaseChainParams::MAIN\ns/\"testnet\"/CBaseChainParams::TESTNET",
      "tree": {
        "sha": "4ebe0610a200e67448cadba3915adc18df57284f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4ebe0610a200e67448cadba3915adc18df57284f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3e03bb78835c6155403d1db67694137bc8b9e40c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3e03bb78835c6155403d1db67694137bc8b9e40c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3e03bb78835c6155403d1db67694137bc8b9e40c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3e03bb78835c6155403d1db67694137bc8b9e40c/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5cd9cd822c68e12bd9d69f00c83a5eefdeef86f4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5cd9cd822c68e12bd9d69f00c83a5eefdeef86f4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5cd9cd822c68e12bd9d69f00c83a5eefdeef86f4"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "f50926643924e6968a3e25189c2e0d921684cae9",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3e03bb78835c6155403d1db67694137bc8b9e40c/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3e03bb78835c6155403d1db67694137bc8b9e40c/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=3e03bb78835c6155403d1db67694137bc8b9e40c",
        "patch": "@@ -38,7 +38,7 @@ const std::map<std::string, uint256> CChainParams::supportedChains =\n class CMainParams : public CChainParams {\n public:\n     CMainParams() {\n-        strNetworkID = \"main\";\n+        strNetworkID = CBaseChainParams::MAIN;\n         consensus.nSubsidyHalvingInterval = 210000;\n         consensus.nMajorityEnforceBlockUpgrade = 750;\n         consensus.nMajorityRejectBlockOutdated = 950;\n@@ -143,7 +143,7 @@ static CMainParams mainParams;\n class CTestNetParams : public CMainParams {\n public:\n     CTestNetParams() {\n-        strNetworkID = \"test\";\n+        strNetworkID = CBaseChainParams::TESTNET;\n         consensus.nMajorityEnforceBlockUpgrade = 51;\n         consensus.nMajorityRejectBlockOutdated = 75;\n         consensus.nMajorityWindow = 100;\n@@ -204,7 +204,7 @@ static CTestNetParams testNetParams;\n class CRegTestParams : public CTestNetParams {\n public:\n     CRegTestParams() {\n-        strNetworkID = \"regtest\";\n+        strNetworkID = CBaseChainParams::REGTEST;\n         consensus.nSubsidyHalvingInterval = 150;\n         consensus.nMajorityEnforceBlockUpgrade = 750;\n         consensus.nMajorityRejectBlockOutdated = 950;"
      },
      {
        "sha": "d14afd73db509e94a12a259943617d9a2a610e84",
        "filename": "src/chainparamsbase.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3e03bb78835c6155403d1db67694137bc8b9e40c/src/chainparamsbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3e03bb78835c6155403d1db67694137bc8b9e40c/src/chainparamsbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparamsbase.cpp?ref=3e03bb78835c6155403d1db67694137bc8b9e40c",
        "patch": "@@ -50,7 +50,7 @@ class CBaseRegTestParams : public CBaseTestNetParams\n public:\n     CBaseRegTestParams()\n     {\n-        strDataDir = \"regtest\";\n+        strDataDir = CBaseChainParams::REGTEST;\n     }\n };\n static CBaseRegTestParams regTestParams;"
      }
    ]
  },
  {
    "sha": "e477f2d3b21c9636a3871adbb0f3c462e178e1ec",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplNDc3ZjJkM2IyMWM5NjM2YTM4NzFhZGJiMGYzYzQ2MmUxNzhlMWVj",
    "commit": {
      "author": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2015-05-25T07:00:17Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2015-06-04T09:49:45Z"
      },
      "message": "Chainparams: Translations: DRY: options strings",
      "tree": {
        "sha": "bcf788c595fc612f94f0e0b00f93ffbce0a9f8cb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bcf788c595fc612f94f0e0b00f93ffbce0a9f8cb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e477f2d3b21c9636a3871adbb0f3c462e178e1ec",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e477f2d3b21c9636a3871adbb0f3c462e178e1ec",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e477f2d3b21c9636a3871adbb0f3c462e178e1ec",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e477f2d3b21c9636a3871adbb0f3c462e178e1ec/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3e03bb78835c6155403d1db67694137bc8b9e40c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3e03bb78835c6155403d1db67694137bc8b9e40c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3e03bb78835c6155403d1db67694137bc8b9e40c"
      }
    ],
    "stats": {
      "total": 26,
      "additions": 17,
      "deletions": 9
    },
    "files": [
      {
        "sha": "7cc3c63312b1c87a2432a43d81c08a9e7a417cb2",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e477f2d3b21c9636a3871adbb0f3c462e178e1ec/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e477f2d3b21c9636a3871adbb0f3c462e178e1ec/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=e477f2d3b21c9636a3871adbb0f3c462e178e1ec",
        "patch": "@@ -22,9 +22,7 @@ std::string HelpMessageCli()\n     strUsage += HelpMessageOpt(\"-?\", _(\"This help message\"));\n     strUsage += HelpMessageOpt(\"-conf=<file>\", strprintf(_(\"Specify configuration file (default: %s)\"), \"bitcoin.conf\"));\n     strUsage += HelpMessageOpt(\"-datadir=<dir>\", _(\"Specify data directory\"));\n-    strUsage += HelpMessageOpt(\"-testnet\", _(\"Use the test network\"));\n-    strUsage += HelpMessageOpt(\"-regtest\", _(\"Enter regression test mode, which uses a special chain in which blocks can be \"\n-                                             \"solved instantly. This is intended for regression testing tools and app development.\"));\n+    strUsage += GetParamsHelpMessages();\n     strUsage += HelpMessageOpt(\"-rpcconnect=<ip>\", strprintf(_(\"Send commands to node running on <ip> (default: %s)\"), \"127.0.0.1\"));\n     strUsage += HelpMessageOpt(\"-rpcport=<port>\", strprintf(_(\"Connect to JSON-RPC on <port> (default: %u or testnet: %u)\"), 8332, 18332));\n     strUsage += HelpMessageOpt(\"-rpcwait\", _(\"Wait for RPC server to start\"));"
      },
      {
        "sha": "73c7ce9884988c68bac4382d45ff2fd48c2dbc1c",
        "filename": "src/bitcoin-tx.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e477f2d3b21c9636a3871adbb0f3c462e178e1ec/src/bitcoin-tx.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e477f2d3b21c9636a3871adbb0f3c462e178e1ec/src/bitcoin-tx.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-tx.cpp?ref=e477f2d3b21c9636a3871adbb0f3c462e178e1ec",
        "patch": "@@ -57,8 +57,7 @@ static bool AppInitRawTx(int argc, char* argv[])\n         strUsage += HelpMessageOpt(\"-create\", _(\"Create new, empty TX.\"));\n         strUsage += HelpMessageOpt(\"-json\", _(\"Select JSON output\"));\n         strUsage += HelpMessageOpt(\"-txid\", _(\"Output only the hex-encoded transaction id of the resultant transaction.\"));\n-        strUsage += HelpMessageOpt(\"-regtest\", _(\"Enter regression test mode, which uses a special chain in which blocks can be solved instantly.\"));\n-        strUsage += HelpMessageOpt(\"-testnet\", _(\"Use the test network\"));\n+        strUsage += GetParamsHelpMessages();\n \n         fprintf(stdout, \"%s\", strUsage.c_str());\n "
      },
      {
        "sha": "1a534789deaf83cfead05c62991f0b8251ebfc17",
        "filename": "src/chainparamsbase.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e477f2d3b21c9636a3871adbb0f3c462e178e1ec/src/chainparamsbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e477f2d3b21c9636a3871adbb0f3c462e178e1ec/src/chainparamsbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparamsbase.cpp?ref=e477f2d3b21c9636a3871adbb0f3c462e178e1ec",
        "patch": "@@ -15,6 +15,16 @@ const std::string CBaseChainParams::TESTNET = \"test\";\n const std::string CBaseChainParams::REGTEST = \"regtest\";\n const std::string CBaseChainParams::MAX_NETWORK_TYPES = \"unknown_chain\";\n \n+std::string GetParamsHelpMessages()\n+{\n+    std::string strUsage = \"\";\n+    strUsage += HelpMessageOpt(\"-testnet\", _(\"Use the test chain\"));\n+    strUsage += HelpMessageOpt(\"-regtest\", _(\"Enter regression test mode, which uses a special chain in which blocks can be solved instantly.\") + \" \" +\n+        _(\"This is intended for regression testing tools and app development.\") + \" \" +\n+        _(\"In this mode -genproclimit controls how many blocks are generated immediately.\"));\n+    return strUsage;\n+}\n+\n /**\n  * Main network\n  */"
      },
      {
        "sha": "9fdacbb1a01705c9d4121c6d1a64b19055065ead",
        "filename": "src/chainparamsbase.h",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e477f2d3b21c9636a3871adbb0f3c462e178e1ec/src/chainparamsbase.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e477f2d3b21c9636a3871adbb0f3c462e178e1ec/src/chainparamsbase.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparamsbase.h?ref=e477f2d3b21c9636a3871adbb0f3c462e178e1ec",
        "patch": "@@ -31,6 +31,10 @@ class CBaseChainParams\n     std::string strDataDir;\n };\n \n+/**\n+ * Returns a string with the help messages for the chainparams options. \n+ */\n+std::string GetParamsHelpMessages();\n /**\n  * Looks for -regtest, -testnet and returns the appropriate BIP70 chain name.\n  * Returns CBaseChainParams::MAIN by default."
      },
      {
        "sha": "50600d9e3763851737a11fd6c506daf05e23318b",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 4,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e477f2d3b21c9636a3871adbb0f3c462e178e1ec/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e477f2d3b21c9636a3871adbb0f3c462e178e1ec/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=e477f2d3b21c9636a3871adbb0f3c462e178e1ec",
        "patch": "@@ -388,12 +388,9 @@ std::string HelpMessage(HelpMessageMode mode)\n     {\n         strUsage += HelpMessageOpt(\"-printpriority\", strprintf(_(\"Log transaction priority and fee per kB when mining blocks (default: %u)\"), 0));\n         strUsage += HelpMessageOpt(\"-privdb\", strprintf(_(\"Sets the DB_PRIVATE flag in the wallet db environment (default: %u)\"), 1));\n-        strUsage += HelpMessageOpt(\"-regtest\", _(\"Enter regression test mode, which uses a special chain in which blocks can be solved instantly.\") + \" \" +\n-            _(\"This is intended for regression testing tools and app development.\") + \" \" +\n-            _(\"In this mode -genproclimit controls how many blocks are generated immediately.\"));\n     }\n     strUsage += HelpMessageOpt(\"-shrinkdebugfile\", _(\"Shrink debug.log file on client startup (default: 1 when no -debug)\"));\n-    strUsage += HelpMessageOpt(\"-testnet\", _(\"Use the test network\"));\n+    strUsage += GetParamsHelpMessages();\n \n     strUsage += HelpMessageGroup(_(\"Node relay options:\"));\n     strUsage += HelpMessageOpt(\"-datacarrier\", strprintf(_(\"Relay and mine data carrier transactions (default: %u)\"), 1));"
      }
    ]
  },
  {
    "sha": "9cccb278202951d3295d677629239858eda2e56b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5Y2NjYjI3ODIwMjk1MWQzMjk1ZDY3NzYyOTIzOTg1OGVkYTJlNTZi",
    "commit": {
      "author": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2015-05-25T07:00:53Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2015-06-04T09:50:02Z"
      },
      "message": "fixup! Chainparams: Translations: DRY: error strings",
      "tree": {
        "sha": "aa0580e72608743a3cffc6ec0f4689280de2d1e0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/aa0580e72608743a3cffc6ec0f4689280de2d1e0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9cccb278202951d3295d677629239858eda2e56b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9cccb278202951d3295d677629239858eda2e56b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9cccb278202951d3295d677629239858eda2e56b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9cccb278202951d3295d677629239858eda2e56b/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e477f2d3b21c9636a3871adbb0f3c462e178e1ec",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e477f2d3b21c9636a3871adbb0f3c462e178e1ec",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e477f2d3b21c9636a3871adbb0f3c462e178e1ec"
      }
    ],
    "stats": {
      "total": 54,
      "additions": 26,
      "deletions": 28
    },
    "files": [
      {
        "sha": "403b42c95cb2839d07d44d1022900cdd2dc7f2e3",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9cccb278202951d3295d677629239858eda2e56b/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9cccb278202951d3295d677629239858eda2e56b/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=9cccb278202951d3295d677629239858eda2e56b",
        "patch": "@@ -85,8 +85,10 @@ static bool AppInitRPC(int argc, char* argv[])\n         return false;\n     }\n     // Check for -testnet or -regtest parameter (BaseParams() calls are only valid after this clause)\n-    if (!SelectBaseParamsFromCommandLine()) {\n-        fprintf(stderr, \"Error: Invalid combination of -regtest and -testnet.\\n\");\n+    try {\n+        SelectBaseParamsFromCommandLine();\n+    } catch(std::exception &e) {\n+        fprintf(stderr, \"Error: %s\\n\", e.what());\n         return false;\n     }\n     return true;"
      },
      {
        "sha": "368fa510e46d07c1a9ca642a4df3d3d134775ecc",
        "filename": "src/bitcoin-tx.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9cccb278202951d3295d677629239858eda2e56b/src/bitcoin-tx.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9cccb278202951d3295d677629239858eda2e56b/src/bitcoin-tx.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-tx.cpp?ref=9cccb278202951d3295d677629239858eda2e56b",
        "patch": "@@ -34,8 +34,10 @@ static bool AppInitRawTx(int argc, char* argv[])\n     ParseParameters(argc, argv);\n \n     // Check for -testnet or -regtest parameter (Params() calls are only valid after this clause)\n-    if (!SelectParamsFromCommandLine()) {\n-        fprintf(stderr, \"Error: Invalid combination of -regtest and -testnet.\\n\");\n+    try {\n+        SelectParamsFromCommandLine();\n+    } catch(std::exception &e) {\n+        fprintf(stderr, \"Error: %s\\n\", e.what());\n         return false;\n     }\n "
      },
      {
        "sha": "7eb5154d4d76bc836768feec078945122993cfed",
        "filename": "src/bitcoind.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9cccb278202951d3295d677629239858eda2e56b/src/bitcoind.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9cccb278202951d3295d677629239858eda2e56b/src/bitcoind.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoind.cpp?ref=9cccb278202951d3295d677629239858eda2e56b",
        "patch": "@@ -102,8 +102,10 @@ bool AppInit(int argc, char* argv[])\n             return false;\n         }\n         // Check for -testnet or -regtest parameter (Params() calls are only valid after this clause)\n-        if (!SelectParamsFromCommandLine()) {\n-            fprintf(stderr, \"Error: Invalid combination of -regtest and -testnet.\\n\");\n+        try {\n+            SelectParamsFromCommandLine();\n+        } catch(std::exception &e) {\n+            fprintf(stderr, \"Error: %s\\n\", e.what());\n             return false;\n         }\n "
      },
      {
        "sha": "4e5b943ddf2c52d1dd9b00ddb7f78935c8e5b295",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 7,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9cccb278202951d3295d677629239858eda2e56b/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9cccb278202951d3295d677629239858eda2e56b/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=9cccb278202951d3295d677629239858eda2e56b",
        "patch": "@@ -268,12 +268,7 @@ void SelectParams(std::string chain)\n     pCurrentParams = &Params(chain);\n }\n \n-bool SelectParamsFromCommandLine()\n+void SelectParamsFromCommandLine()\n {\n-    std::string chain = ChainNameFromCommandLine();\n-    if (chain == CBaseChainParams::MAX_NETWORK_TYPES)\n-        return false;\n-\n-    SelectParams(chain);\n-    return true;\n+    SelectParams(ChainNameFromCommandLine());\n }"
      },
      {
        "sha": "9e174894ef9aad9e02f9d42784d056c612ab72cb",
        "filename": "src/chainparams.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9cccb278202951d3295d677629239858eda2e56b/src/chainparams.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9cccb278202951d3295d677629239858eda2e56b/src/chainparams.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.h?ref=9cccb278202951d3295d677629239858eda2e56b",
        "patch": "@@ -117,9 +117,9 @@ CChainParams& Params(std::string chain);\n void SelectParams(std::string chain);\n \n /**\n- * Looks for -regtest or -testnet and then calls SelectParams as appropriate.\n- * Returns false if an invalid combination is given.\n+ * Calls NetworkIdFromCommandLine() and then calls SelectParams as appropriate.\n+ * Raises a std::runtime_error if an invalid combination is given or if the chain is not supported.\n  */\n-bool SelectParamsFromCommandLine();\n+void SelectParamsFromCommandLine();\n \n #endif // BITCOIN_CHAINPARAMS_H"
      },
      {
        "sha": "e8344ed6a2b866233390b6006abdeba2524c1500",
        "filename": "src/chainparamsbase.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 8,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9cccb278202951d3295d677629239858eda2e56b/src/chainparamsbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9cccb278202951d3295d677629239858eda2e56b/src/chainparamsbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparamsbase.cpp?ref=9cccb278202951d3295d677629239858eda2e56b",
        "patch": "@@ -104,22 +104,17 @@ std::string ChainNameFromCommandLine()\n     bool fTestNet = GetBoolArg(\"-testnet\", false);\n \n     if (fTestNet && fRegTest)\n-        return CBaseChainParams::MAX_NETWORK_TYPES;\n+        throw std::runtime_error(_(\"Invalid combination of -regtest and -testnet.\"));\n     if (fRegTest)\n         return CBaseChainParams::REGTEST;\n     if (fTestNet)\n         return CBaseChainParams::TESTNET;\n     return CBaseChainParams::MAIN;\n }\n \n-bool SelectBaseParamsFromCommandLine()\n+void SelectBaseParamsFromCommandLine()\n {\n-    std::string chain = ChainNameFromCommandLine();\n-    if (chain == CBaseChainParams::MAX_NETWORK_TYPES)\n-        return false;\n-\n-    SelectBaseParams(chain);\n-    return true;\n+    SelectBaseParams(ChainNameFromCommandLine());\n }\n \n bool AreBaseParamsConfigured()"
      },
      {
        "sha": "c61a5a251546adb78c61224458d8ad8f8bc32416",
        "filename": "src/chainparamsbase.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9cccb278202951d3295d677629239858eda2e56b/src/chainparamsbase.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9cccb278202951d3295d677629239858eda2e56b/src/chainparamsbase.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparamsbase.h?ref=9cccb278202951d3295d677629239858eda2e56b",
        "patch": "@@ -56,9 +56,9 @@ void SelectBaseParams(std::string chain);\n \n /**\n  * Calls NetworkIdFromCommandLine() and then calls SelectParams as appropriate.\n- * Returns false if an invalid combination is given.\n+ * Raises a std::runtime_error if an invalid combination is given or if the chain is not supported.\n  */\n-bool SelectBaseParamsFromCommandLine();\n+void SelectBaseParamsFromCommandLine();\n \n /**\n  * Return true if SelectBaseParamsFromCommandLine() has been called to select a chain."
      },
      {
        "sha": "e952e09cb4dfb79919079273a8359df50995ffac",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9cccb278202951d3295d677629239858eda2e56b/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9cccb278202951d3295d677629239858eda2e56b/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=9cccb278202951d3295d677629239858eda2e56b",
        "patch": "@@ -572,8 +572,10 @@ int main(int argc, char *argv[])\n     // - Needs to be done before createOptionsModel\n \n     // Check for -testnet or -regtest parameter (Params() calls are only valid after this clause)\n-    if (!SelectParamsFromCommandLine()) {\n-        QMessageBox::critical(0, QObject::tr(\"Bitcoin Core\"), QObject::tr(\"Error: Invalid combination of -regtest and -testnet.\"));\n+    try {\n+        SelectParamsFromCommandLine();\n+    } catch(std::exception &e) {\n+        QMessageBox::critical(0, QObject::tr(\"Bitcoin Core\"), QObject::tr(\"Error: %1.\").arg(e.what()));\n         return 1;\n     }\n #ifdef ENABLE_WALLET"
      }
    ]
  },
  {
    "sha": "6fa0ef9b2c9fab23eb0c49822a24f4075965d733",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2ZmEwZWY5YjJjOWZhYjIzZWIwYzQ5ODIyYTI0ZjQwNzU5NjVkNzMz",
    "commit": {
      "author": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2015-05-22T01:50:01Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2015-06-04T09:50:46Z"
      },
      "message": "Chainparams: Use a regular factory for creating chainparams",
      "tree": {
        "sha": "df9758794776be8f0c35f32b5b36bb828f85a1ce",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/df9758794776be8f0c35f32b5b36bb828f85a1ce"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6fa0ef9b2c9fab23eb0c49822a24f4075965d733",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6fa0ef9b2c9fab23eb0c49822a24f4075965d733",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6fa0ef9b2c9fab23eb0c49822a24f4075965d733",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6fa0ef9b2c9fab23eb0c49822a24f4075965d733/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9cccb278202951d3295d677629239858eda2e56b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9cccb278202951d3295d677629239858eda2e56b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9cccb278202951d3295d677629239858eda2e56b"
      }
    ],
    "stats": {
      "total": 116,
      "additions": 88,
      "deletions": 28
    },
    "files": [
      {
        "sha": "1d45f53af008c67b8f853c2279cd086b4d93bb28",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6fa0ef9b2c9fab23eb0c49822a24f4075965d733/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6fa0ef9b2c9fab23eb0c49822a24f4075965d733/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=6fa0ef9b2c9fab23eb0c49822a24f4075965d733",
        "patch": "@@ -135,6 +135,7 @@ BITCOIN_CORE_H = \\\n   support/pagelocker.h \\\n   sync.h \\\n   threadsafety.h \\\n+  templates.hpp \\\n   timedata.h \\\n   tinyformat.h \\\n   txdb.h \\"
      },
      {
        "sha": "348300747cb9be6e5cd9dc0cba2d567d8671fd6c",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 11,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6fa0ef9b2c9fab23eb0c49822a24f4075965d733/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6fa0ef9b2c9fab23eb0c49822a24f4075965d733/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=6fa0ef9b2c9fab23eb0c49822a24f4075965d733",
        "patch": "@@ -5,6 +5,7 @@\n \n #include \"chainparams.h\"\n \n+#include \"templates.hpp\"\n #include \"tinyformat.h\"\n #include \"util.h\"\n #include \"utilstrencodings.h\"\n@@ -135,7 +136,6 @@ class CMainParams : public CChainParams {\n         };\n     }\n };\n-static CMainParams mainParams;\n \n /**\n  * Testnet (v3)\n@@ -196,7 +196,6 @@ class CTestNetParams : public CMainParams {\n \n     }\n };\n-static CTestNetParams testNetParams;\n \n /**\n  * Regression test\n@@ -242,30 +241,35 @@ class CRegTestParams : public CTestNetParams {\n         };\n     }\n };\n-static CRegTestParams regTestParams;\n \n-static CChainParams *pCurrentParams = 0;\n+static Container<CChainParams> currentParams;\n+static Container<CChainParams> switchingParams;\n \n const CChainParams &Params() {\n-    assert(pCurrentParams);\n-    return *pCurrentParams;\n+    return currentParams.Get();\n }\n \n-CChainParams& Params(std::string chain)\n+CChainParams* ParamsFactory(std::string chain)\n {\n     if (chain == CBaseChainParams::MAIN)\n-            return mainParams;\n+        return new CMainParams();\n     else if (chain == CBaseChainParams::TESTNET)\n-            return testNetParams;\n+        return new CTestNetParams();\n     else if (chain == CBaseChainParams::REGTEST)\n-            return regTestParams;\n+        return new CRegTestParams();\n     throw std::runtime_error(strprintf(_(\"%s: Unknown chain %s.\"), __func__, chain));\n }\n \n+const CChainParams& Params(std::string chain)\n+{\n+    switchingParams.Set(ParamsFactory(chain));\n+    return switchingParams.Get();\n+}\n+\n void SelectParams(std::string chain)\n {\n     SelectBaseParams(chain);\n-    pCurrentParams = &Params(chain);\n+    currentParams.Set(ParamsFactory(chain));\n }\n \n void SelectParamsFromCommandLine()"
      },
      {
        "sha": "e6b2e1a057a99aa351f37f5c8fbdceca17b46437",
        "filename": "src/chainparams.h",
        "status": "modified",
        "additions": 9,
        "deletions": 1,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6fa0ef9b2c9fab23eb0c49822a24f4075965d733/src/chainparams.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6fa0ef9b2c9fab23eb0c49822a24f4075965d733/src/chainparams.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.h?ref=6fa0ef9b2c9fab23eb0c49822a24f4075965d733",
        "patch": "@@ -100,6 +100,14 @@ class CChainParams\n     Checkpoints::CCheckpointData checkpointData;\n };\n \n+/**\n+ * Creates a CChainParams of the chosen chain and returns a\n+ * pointer to it. The caller has to delete the object.\n+ * Raises a std::runtime_error if the chain is not supported.\n+ */\n+CChainParams* ParamsFactory(std::string chain);\n+\n+/** Functions that relay on internal state */\n /**\n  * Return the currently selected parameters. This won't change after app\n  * startup, except for unit tests.\n@@ -109,7 +117,7 @@ const CChainParams &Params();\n /**\n  * Returns parameters for the given BIP70 chain name.\n  */\n-CChainParams& Params(std::string chain);\n+const CChainParams& Params(std::string chain);\n \n /**\n  * Sets the params returned by Params() to those for the given BIP70 chain name."
      },
      {
        "sha": "a565c1b75fc9d3afc59a79292f2b0e0a6e8f0d85",
        "filename": "src/chainparamsbase.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 15,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6fa0ef9b2c9fab23eb0c49822a24f4075965d733/src/chainparamsbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6fa0ef9b2c9fab23eb0c49822a24f4075965d733/src/chainparamsbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparamsbase.cpp?ref=6fa0ef9b2c9fab23eb0c49822a24f4075965d733",
        "patch": "@@ -5,11 +5,10 @@\n \n #include \"chainparamsbase.h\"\n \n+#include \"templates.hpp\"\n #include \"tinyformat.h\"\n #include \"util.h\"\n \n-#include <assert.h>\n-\n const std::string CBaseChainParams::MAIN = \"main\";\n const std::string CBaseChainParams::TESTNET = \"test\";\n const std::string CBaseChainParams::REGTEST = \"regtest\";\n@@ -36,7 +35,6 @@ class CBaseMainParams : public CBaseChainParams\n         nRPCPort = 8332;\n     }\n };\n-static CBaseMainParams mainParams;\n \n /**\n  * Testnet (v3)\n@@ -50,7 +48,6 @@ class CBaseTestNetParams : public CBaseMainParams\n         strDataDir = \"testnet3\";\n     }\n };\n-static CBaseTestNetParams testNetParams;\n \n /*\n  * Regression test\n@@ -63,7 +60,6 @@ class CBaseRegTestParams : public CBaseTestNetParams\n         strDataDir = CBaseChainParams::REGTEST;\n     }\n };\n-static CBaseRegTestParams regTestParams;\n \n /*\n  * Unit test\n@@ -78,24 +74,27 @@ class CBaseUnitTestParams : public CBaseMainParams\n };\n static CBaseUnitTestParams unitTestParams;\n \n-static CBaseChainParams* pCurrentBaseParams = 0;\n+static Container<CBaseChainParams> currentBaseParams;\n \n const CBaseChainParams& BaseParams()\n {\n-    assert(pCurrentBaseParams);\n-    return *pCurrentBaseParams;\n+    return currentBaseParams.Get();\n }\n \n-void SelectBaseParams(std::string chain)\n+CBaseChainParams* FactoryBaseParams(std::string chain)\n {\n     if (chain == CBaseChainParams::MAIN)\n-        pCurrentBaseParams = &mainParams;\n+        return new CBaseMainParams();\n     else if (chain == CBaseChainParams::TESTNET)\n-        pCurrentBaseParams = &testNetParams;\n+        return new CBaseTestNetParams();\n     else if (chain == CBaseChainParams::REGTEST)\n-        pCurrentBaseParams = &regTestParams;\n-    else\n-        throw std::runtime_error(strprintf(_(\"%s: Unknown chain %s.\"), __func__, chain));\n+        return new CBaseRegTestParams();\n+    throw std::runtime_error(strprintf(_(\"%s: Unknown chain %s.\"), __func__, chain));\n+}\n+\n+void SelectBaseParams(std::string chain)\n+{\n+    currentBaseParams.Set(FactoryBaseParams(chain));\n }\n \n std::string ChainNameFromCommandLine()\n@@ -119,5 +118,5 @@ void SelectBaseParamsFromCommandLine()\n \n bool AreBaseParamsConfigured()\n {\n-    return pCurrentBaseParams != NULL;\n+    return !currentBaseParams.IsNull();\n }"
      },
      {
        "sha": "266f7f911822ce60913bcfcd61489dbf7ff45025",
        "filename": "src/chainparamsbase.h",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6fa0ef9b2c9fab23eb0c49822a24f4075965d733/src/chainparamsbase.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6fa0ef9b2c9fab23eb0c49822a24f4075965d733/src/chainparamsbase.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparamsbase.h?ref=6fa0ef9b2c9fab23eb0c49822a24f4075965d733",
        "patch": "@@ -31,6 +31,12 @@ class CBaseChainParams\n     std::string strDataDir;\n };\n \n+/**\n+ * Creates a CBaseChainParams of the chosen chain and returns a\n+ * pointer to it. The caller has to delete the object.\n+ * Raises an error if the chain is not supported.\n+ */\n+CBaseChainParams* FactoryBaseParams(std::string chain);\n /**\n  * Returns a string with the help messages for the chainparams options. \n  */\n@@ -42,6 +48,7 @@ std::string GetParamsHelpMessages();\n  */\n std::string ChainNameFromCommandLine();\n \n+/** Functions that relay on internal state */\n /**\n  * Return the currently selected parameters. This won't change after app\n  * startup, except for unit tests."
      },
      {
        "sha": "817c582d0a8e937db5341c6ca88838689a59e215",
        "filename": "src/templates.hpp",
        "status": "added",
        "additions": 41,
        "deletions": 0,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6fa0ef9b2c9fab23eb0c49822a24f4075965d733/src/templates.hpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6fa0ef9b2c9fab23eb0c49822a24f4075965d733/src/templates.hpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/templates.hpp?ref=6fa0ef9b2c9fab23eb0c49822a24f4075965d733",
        "patch": "@@ -0,0 +1,41 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_TEMPLATES_H\n+#define BITCOIN_TEMPLATES_H\n+\n+#include <assert.h>\n+\n+template<typename T>\n+class Container\n+{\n+    T* pObj;\n+public:\n+    Container() : pObj(NULL) { };\n+\n+    bool IsNull()\n+    {\n+        return pObj == NULL;\n+    }\n+    void Set(T* pObjIn)\n+    {\n+        if (pObj)\n+            delete(pObj);\n+        pObj = pObjIn;\n+    }\n+    const T& Get()\n+    {\n+        assert(pObj);\n+        return *pObj;\n+    }\n+\n+    ~Container()\n+    {\n+        if (pObj)\n+            delete(pObj);\n+    }\n+};\n+\n+#endif // BITCOIN_TEMPLATES_H"
      },
      {
        "sha": "f4b935f355c3754e76d2a40cae1ec03085499997",
        "filename": "src/test/alert_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6fa0ef9b2c9fab23eb0c49822a24f4075965d733/src/test/alert_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6fa0ef9b2c9fab23eb0c49822a24f4075965d733/src/test/alert_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/alert_tests.cpp?ref=6fa0ef9b2c9fab23eb0c49822a24f4075965d733",
        "patch": "@@ -203,7 +203,7 @@ BOOST_AUTO_TEST_CASE(PartitionAlert)\n     CCriticalSection csDummy;\n     CChain chainDummy;\n     CBlockIndex indexDummy[100];\n-    CChainParams& params = Params(CBaseChainParams::MAIN);\n+    const CChainParams& params = Params(CBaseChainParams::MAIN);\n     int64_t nPowTargetSpacing = params.GetConsensus().nPowTargetSpacing;\n \n     // Generate fake blockchain timestamps relative to"
      }
    ]
  },
  {
    "sha": "bab13a914265e3c2022621e08e23f9b6e29cfdf8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiYWIxM2E5MTQyNjVlM2MyMDIyNjIxZTA4ZTIzZjliNmUyOWNmZGY4",
    "commit": {
      "author": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2015-05-25T06:16:15Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2015-06-04T09:50:47Z"
      },
      "message": "DRY: TODO find out why this excludes regtest",
      "tree": {
        "sha": "0dc84630ad414c2b7dff0149ebd721a3de824498",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0dc84630ad414c2b7dff0149ebd721a3de824498"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bab13a914265e3c2022621e08e23f9b6e29cfdf8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bab13a914265e3c2022621e08e23f9b6e29cfdf8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bab13a914265e3c2022621e08e23f9b6e29cfdf8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bab13a914265e3c2022621e08e23f9b6e29cfdf8/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6fa0ef9b2c9fab23eb0c49822a24f4075965d733",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6fa0ef9b2c9fab23eb0c49822a24f4075965d733",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6fa0ef9b2c9fab23eb0c49822a24f4075965d733"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 4,
      "deletions": 8
    },
    "files": [
      {
        "sha": "a76d5a0a94f25bee968c204e5afe541ae6d8c8c9",
        "filename": "src/qt/paymentserver.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 8,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bab13a914265e3c2022621e08e23f9b6e29cfdf8/src/qt/paymentserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bab13a914265e3c2022621e08e23f9b6e29cfdf8/src/qt/paymentserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/paymentserver.cpp?ref=bab13a914265e3c2022621e08e23f9b6e29cfdf8",
        "patch": "@@ -241,14 +241,10 @@ void PaymentServer::ipcParseCommandLine(int argc, char* argv[])\n             PaymentRequestPlus request;\n             if (readPaymentRequestFromFile(arg, request))\n             {\n-                if (request.getDetails().network() == \"main\")\n-                {\n-                    SelectParams(CBaseChainParams::MAIN);\n-                }\n-                else if (request.getDetails().network() == \"test\")\n-                {\n-                    SelectParams(CBaseChainParams::TESTNET);\n-                }\n+                // TODO find out why this excludes regtest\n+                std::string chainStr = request.getDetails().network();\n+                if (chainStr == CBaseChainParams::MAIN || chainStr == CBaseChainParams::TESTNET)\n+                    SelectParams(chainStr);\n             }\n         }\n         else"
      }
    ]
  },
  {
    "sha": "5a9dd942e4fc5886f3b127f2dc3dfbed8c83b6f3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1YTlkZDk0MmU0ZmM1ODg2ZjNiMTI3ZjJkYzNkZmJlZDhjODNiNmYz",
    "commit": {
      "author": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2015-05-25T03:41:00Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2015-06-04T09:52:01Z"
      },
      "message": "Change?: Chainparams: DRY: Make qt/guiutil.cpp fit BIP70 chain name strings",
      "tree": {
        "sha": "a480eb77773279b59d97d4e5414d6052729067c5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a480eb77773279b59d97d4e5414d6052729067c5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5a9dd942e4fc5886f3b127f2dc3dfbed8c83b6f3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5a9dd942e4fc5886f3b127f2dc3dfbed8c83b6f3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5a9dd942e4fc5886f3b127f2dc3dfbed8c83b6f3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5a9dd942e4fc5886f3b127f2dc3dfbed8c83b6f3/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bab13a914265e3c2022621e08e23f9b6e29cfdf8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bab13a914265e3c2022621e08e23f9b6e29cfdf8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bab13a914265e3c2022621e08e23f9b6e29cfdf8"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 8,
      "deletions": 11
    },
    "files": [
      {
        "sha": "2b8e6f62635e26578acddb2efd3286215b5a6be0",
        "filename": "src/qt/guiutil.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 11,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5a9dd942e4fc5886f3b127f2dc3dfbed8c83b6f3/src/qt/guiutil.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5a9dd942e4fc5886f3b127f2dc3dfbed8c83b6f3/src/qt/guiutil.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiutil.cpp?ref=5a9dd942e4fc5886f3b127f2dc3dfbed8c83b6f3",
        "patch": "@@ -568,12 +568,10 @@ TableViewLastColumnResizingFixer::TableViewLastColumnResizingFixer(QTableView* t\n #ifdef WIN32\n boost::filesystem::path static StartupShortcutPath()\n {\n-    if (GetBoolArg(\"-testnet\", false))\n-        return GetSpecialFolderPath(CSIDL_STARTUP) / \"Bitcoin (testnet).lnk\";\n-    else if (GetBoolArg(\"-regtest\", false))\n-        return GetSpecialFolderPath(CSIDL_STARTUP) / \"Bitcoin (regtest).lnk\";\n-\n-    return GetSpecialFolderPath(CSIDL_STARTUP) / \"Bitcoin.lnk\";\n+    std::string chain = ChainNameFromCommandLine();\n+    if (chain == CBaseChainParams::MAIN)\n+        return GetSpecialFolderPath(CSIDL_STARTUP) / \"Bitcoin.lnk\";\n+    return GetSpecialFolderPath(CSIDL_STARTUP) / strprintf(\"Bitcoin (%s).lnk\", chain);\n }\n \n bool GetStartOnSystemStartup()\n@@ -706,15 +704,14 @@ bool SetStartOnSystemStartup(bool fAutoStart)\n         boost::filesystem::ofstream optionFile(GetAutostartFilePath(), std::ios_base::out|std::ios_base::trunc);\n         if (!optionFile.good())\n             return false;\n+        std::string chain = ChainNameFromCommandLine();\n         // Write a bitcoin.desktop file to the autostart directory:\n         optionFile << \"[Desktop Entry]\\n\";\n         optionFile << \"Type=Application\\n\";\n-        if (GetBoolArg(\"-testnet\", false))\n-            optionFile << \"Name=Bitcoin (testnet)\\n\";\n-        else if (GetBoolArg(\"-regtest\", false))\n-            optionFile << \"Name=Bitcoin (regtest)\\n\";\n-        else\n+        if (chain == CBaseChainParams::MAIN)\n             optionFile << \"Name=Bitcoin\\n\";\n+        else\n+            optionFile << strprintf(\"Name=Bitcoin (%s)\\n\", chain);\n         optionFile << \"Exec=\" << pszExePath << strprintf(\" -min -testnet=%d -regtest=%d\\n\", GetBoolArg(\"-testnet\", false), GetBoolArg(\"-regtest\", false));\n         optionFile << \"Terminal=false\\n\";\n         optionFile << \"Hidden=false\\n\";"
      }
    ]
  },
  {
    "sha": "f61c8f4c4370d424301739ce1dca840b193c0ce1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmNjFjOGY0YzQzNzBkNDI0MzAxNzM5Y2UxZGNhODQwYjE5M2MwY2Ux",
    "commit": {
      "author": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2015-05-25T06:11:14Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2015-06-04T09:52:07Z"
      },
      "message": "Change?: bip70 CBaseChainParams::TESTNET = from \"test\" to \"testnet3\" (and user-facing testnet to \"testnet3\")",
      "tree": {
        "sha": "ed2b60be09c7c30c0d69f2a4f812e89990881706",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ed2b60be09c7c30c0d69f2a4f812e89990881706"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f61c8f4c4370d424301739ce1dca840b193c0ce1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f61c8f4c4370d424301739ce1dca840b193c0ce1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f61c8f4c4370d424301739ce1dca840b193c0ce1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f61c8f4c4370d424301739ce1dca840b193c0ce1/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5a9dd942e4fc5886f3b127f2dc3dfbed8c83b6f3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5a9dd942e4fc5886f3b127f2dc3dfbed8c83b6f3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5a9dd942e4fc5886f3b127f2dc3dfbed8c83b6f3"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 5,
      "deletions": 5
    },
    "files": [
      {
        "sha": "8610225791a235bc56cff1d10e1d9b321164eee0",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f61c8f4c4370d424301739ce1dca840b193c0ce1/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f61c8f4c4370d424301739ce1dca840b193c0ce1/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=f61c8f4c4370d424301739ce1dca840b193c0ce1",
        "patch": "@@ -21,7 +21,7 @@ using namespace std;\n const std::map<std::string, uint256> CChainParams::supportedChains =\n     boost::assign::map_list_of\n     ( \"main\", uint256S(\"0x000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f\"))\n-    ( \"test\", uint256S(\"0x000000000933ea01ad0ee984209779baaec3ced90fa3f408719526f8d77f4943\"))\n+    ( \"testnet3\", uint256S(\"0x000000000933ea01ad0ee984209779baaec3ced90fa3f408719526f8d77f4943\"))\n     ( \"regtest\", uint256S(\"0x0f9188f13cb7b2c71f2a335e3a4fc328bf5beb436012afca590b1a11466e2206\"))\n     ;\n "
      },
      {
        "sha": "9bbeeed84b437882bd79e4736c7f023b7237e76e",
        "filename": "src/chainparams.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f61c8f4c4370d424301739ce1dca840b193c0ce1/src/chainparams.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f61c8f4c4370d424301739ce1dca840b193c0ce1/src/chainparams.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.h?ref=f61c8f4c4370d424301739ce1dca840b193c0ce1",
        "patch": "@@ -70,7 +70,7 @@ class CChainParams\n     bool MineBlocksOnDemand() const { return fMineBlocksOnDemand; }\n     /** In the future use NetworkIDString() for RPC fields */\n     bool TestnetToBeDeprecatedFieldRPC() const { return fTestnetToBeDeprecatedFieldRPC; }\n-    /** Returns the BIP70 chain name string (main, test or regtest) */\n+    /** Returns the BIP70 chain name string (main, testnet3 or regtest) */\n     std::string NetworkIDString() const { return strNetworkID; }\n     const std::vector<CDNSSeedData>& DNSSeeds() const { return vSeeds; }\n     const std::vector<unsigned char>& Base58Prefix(Base58Type type) const { return base58Prefixes[type]; }"
      },
      {
        "sha": "4e9b380f0bf7f7ba5bb3ada4abb404eb22136167",
        "filename": "src/chainparamsbase.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f61c8f4c4370d424301739ce1dca840b193c0ce1/src/chainparamsbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f61c8f4c4370d424301739ce1dca840b193c0ce1/src/chainparamsbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparamsbase.cpp?ref=f61c8f4c4370d424301739ce1dca840b193c0ce1",
        "patch": "@@ -10,7 +10,7 @@\n #include \"util.h\"\n \n const std::string CBaseChainParams::MAIN = \"main\";\n-const std::string CBaseChainParams::TESTNET = \"test\";\n+const std::string CBaseChainParams::TESTNET = \"testnet3\";\n const std::string CBaseChainParams::REGTEST = \"regtest\";\n const std::string CBaseChainParams::MAX_NETWORK_TYPES = \"unknown_chain\";\n \n@@ -45,7 +45,7 @@ class CBaseTestNetParams : public CBaseMainParams\n     CBaseTestNetParams()\n     {\n         nRPCPort = 18332;\n-        strDataDir = \"testnet3\";\n+        strDataDir = CBaseChainParams::TESTNET;\n     }\n };\n "
      },
      {
        "sha": "6c3108890ddfe3d5a6fcb7caa9bd1680b021daa3",
        "filename": "src/qt/networkstyle.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f61c8f4c4370d424301739ce1dca840b193c0ce1/src/qt/networkstyle.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f61c8f4c4370d424301739ce1dca840b193c0ce1/src/qt/networkstyle.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/networkstyle.cpp?ref=f61c8f4c4370d424301739ce1dca840b193c0ce1",
        "patch": "@@ -17,7 +17,7 @@ static const struct {\n     const char *titleAddText;\n } network_styles[] = {\n     {\"main\", QAPP_APP_NAME_DEFAULT, 0, 0, \"\"},\n-    {\"test\", QAPP_APP_NAME_TESTNET, 70, 30, QT_TRANSLATE_NOOP(\"SplashScreen\", \"[testnet]\")},\n+    {\"testnet3\", QAPP_APP_NAME_TESTNET, 70, 30, QT_TRANSLATE_NOOP(\"SplashScreen\", \"[testnet3]\")},\n     {\"regtest\", QAPP_APP_NAME_TESTNET, 160, 30, \"[regtest]\"}\n };\n static const unsigned network_styles_count = sizeof(network_styles)/sizeof(*network_styles);"
      }
    ]
  },
  {
    "sha": "0c70392c0d4de8e7a64337444b02caec93111416",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowYzcwMzkyYzBkNGRlOGU3YTY0MzM3NDQ0YjAyY2FlYzkzMTExNDE2",
    "commit": {
      "author": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2015-05-24T21:35:55Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2015-06-04T09:52:07Z"
      },
      "message": "Chainparams: Generic selection with -chain=<chainString> in addition of -testnet and -regtest",
      "tree": {
        "sha": "5c13e746ade0b80a06a693aed62886427f20de71",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5c13e746ade0b80a06a693aed62886427f20de71"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0c70392c0d4de8e7a64337444b02caec93111416",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0c70392c0d4de8e7a64337444b02caec93111416",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0c70392c0d4de8e7a64337444b02caec93111416",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0c70392c0d4de8e7a64337444b02caec93111416/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f61c8f4c4370d424301739ce1dca840b193c0ce1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f61c8f4c4370d424301739ce1dca840b193c0ce1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f61c8f4c4370d424301739ce1dca840b193c0ce1"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 8,
      "deletions": 8
    },
    "files": [
      {
        "sha": "ef8fa77f6b495255f1f3155744b1c8cf0fb725e4",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0c70392c0d4de8e7a64337444b02caec93111416/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0c70392c0d4de8e7a64337444b02caec93111416/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=0c70392c0d4de8e7a64337444b02caec93111416",
        "patch": "@@ -84,7 +84,7 @@ static bool AppInitRPC(int argc, char* argv[])\n         fprintf(stderr,\"Error reading configuration file: %s\\n\", e.what());\n         return false;\n     }\n-    // Check for -testnet or -regtest parameter (BaseParams() calls are only valid after this clause)\n+    // Check for -chain, -testnet or -regtest parameter (BaseParams() calls are only valid after this clause)\n     try {\n         SelectBaseParamsFromCommandLine();\n     } catch(std::exception &e) {"
      },
      {
        "sha": "75400c7fd44a4913e4d325004804d5310f3949b0",
        "filename": "src/bitcoin-tx.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0c70392c0d4de8e7a64337444b02caec93111416/src/bitcoin-tx.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0c70392c0d4de8e7a64337444b02caec93111416/src/bitcoin-tx.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-tx.cpp?ref=0c70392c0d4de8e7a64337444b02caec93111416",
        "patch": "@@ -33,7 +33,7 @@ static bool AppInitRawTx(int argc, char* argv[])\n     //\n     ParseParameters(argc, argv);\n \n-    // Check for -testnet or -regtest parameter (Params() calls are only valid after this clause)\n+    // Check for -chain, -testnet or -regtest parameter (Params() calls are only valid after this clause)\n     try {\n         SelectParamsFromCommandLine();\n     } catch(std::exception &e) {"
      },
      {
        "sha": "d80f9cb7fd684667412e55a51965384780b81fe4",
        "filename": "src/bitcoind.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0c70392c0d4de8e7a64337444b02caec93111416/src/bitcoind.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0c70392c0d4de8e7a64337444b02caec93111416/src/bitcoind.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoind.cpp?ref=0c70392c0d4de8e7a64337444b02caec93111416",
        "patch": "@@ -101,7 +101,7 @@ bool AppInit(int argc, char* argv[])\n             fprintf(stderr,\"Error reading configuration file: %s\\n\", e.what());\n             return false;\n         }\n-        // Check for -testnet or -regtest parameter (Params() calls are only valid after this clause)\n+        // Check for -chain, -testnet or -regtest parameter (Params() calls are only valid after this clause)\n         try {\n             SelectParamsFromCommandLine();\n         } catch(std::exception &e) {"
      },
      {
        "sha": "7a2b71a4a8edab17eeab20498eb00712c87078f8",
        "filename": "src/chainparamsbase.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0c70392c0d4de8e7a64337444b02caec93111416/src/chainparamsbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0c70392c0d4de8e7a64337444b02caec93111416/src/chainparamsbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparamsbase.cpp?ref=0c70392c0d4de8e7a64337444b02caec93111416",
        "patch": "@@ -16,7 +16,7 @@ const std::string CBaseChainParams::MAX_NETWORK_TYPES = \"unknown_chain\";\n \n std::string GetParamsHelpMessages()\n {\n-    std::string strUsage = \"\";\n+    std::string strUsage = HelpMessageOpt(\"-chain=<chain>\", _(\"Use the chain <chain> (default: main). Allowed values: main, testnet, regtest\"));\n     strUsage += HelpMessageOpt(\"-testnet\", _(\"Use the test chain\"));\n     strUsage += HelpMessageOpt(\"-regtest\", _(\"Enter regression test mode, which uses a special chain in which blocks can be solved instantly.\") + \" \" +\n         _(\"This is intended for regression testing tools and app development.\") + \" \" +\n@@ -108,7 +108,7 @@ std::string ChainNameFromCommandLine()\n         return CBaseChainParams::REGTEST;\n     if (fTestNet)\n         return CBaseChainParams::TESTNET;\n-    return CBaseChainParams::MAIN;\n+    return GetArg(\"-chain\", CBaseChainParams::MAIN);\n }\n \n void SelectBaseParamsFromCommandLine()"
      },
      {
        "sha": "3b977a9935d8a60834feef879be359143aa24287",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0c70392c0d4de8e7a64337444b02caec93111416/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0c70392c0d4de8e7a64337444b02caec93111416/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=0c70392c0d4de8e7a64337444b02caec93111416",
        "patch": "@@ -571,7 +571,7 @@ int main(int argc, char *argv[])\n     // - QSettings() will use the new application name after this, resulting in network-specific settings\n     // - Needs to be done before createOptionsModel\n \n-    // Check for -testnet or -regtest parameter (Params() calls are only valid after this clause)\n+    // Check for -chain, -testnet or -regtest parameter (Params() calls are only valid after this clause)\n     try {\n         SelectParamsFromCommandLine();\n     } catch(std::exception &e) {"
      },
      {
        "sha": "4ce1b776388def0eb47109d731931ff233f6b758",
        "filename": "src/qt/guiutil.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0c70392c0d4de8e7a64337444b02caec93111416/src/qt/guiutil.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0c70392c0d4de8e7a64337444b02caec93111416/src/qt/guiutil.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiutil.cpp?ref=0c70392c0d4de8e7a64337444b02caec93111416",
        "patch": "@@ -604,7 +604,7 @@ bool SetStartOnSystemStartup(bool fAutoStart)\n             // Start client minimized\n             QString strArgs = \"-min\";\n             // Set -testnet /-regtest options\n-            strArgs += QString::fromStdString(strprintf(\" -testnet=%d -regtest=%d\", GetBoolArg(\"-testnet\", false), GetBoolArg(\"-regtest\", false)));\n+            strArgs += QString::fromStdString(strprintf(\" -chain=%s\", ChainNameFromCommandLine()));\n \n #ifdef UNICODE\n             boost::scoped_array<TCHAR> args(new TCHAR[strArgs.length() + 1]);\n@@ -712,7 +712,7 @@ bool SetStartOnSystemStartup(bool fAutoStart)\n             optionFile << \"Name=Bitcoin\\n\";\n         else\n             optionFile << strprintf(\"Name=Bitcoin (%s)\\n\", chain);\n-        optionFile << \"Exec=\" << pszExePath << strprintf(\" -min -testnet=%d -regtest=%d\\n\", GetBoolArg(\"-testnet\", false), GetBoolArg(\"-regtest\", false));\n+        optionFile << \"Exec=\" << pszExePath << strprintf(\" -min -chain=%s\\n\", chain);\n         optionFile << \"Terminal=false\\n\";\n         optionFile << \"Hidden=false\\n\";\n         optionFile.close();"
      }
    ]
  }
]