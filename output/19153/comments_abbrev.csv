practicalswift,2020-06-03 19:13:20,"Concept ACK\n\nWhat a nice first-time contribution!\n\nWarm welcome as a contributor @S3RK - I hope to see more great contributions from you in the future :)",https://github.com/bitcoin/bitcoin/pull/19153#issuecomment-638405045,638405045,
laanwj,2020-06-04 14:59:51,"Concept ACK. I don't think we can always guarantee that the mempool file will be backwards compatible, but it's good to have a test to be sure that compatibility at least isn't accidentally broken.",https://github.com/bitcoin/bitcoin/pull/19153#issuecomment-638906121,638906121,
S3RK,2020-06-09 08:10:21,"@Sjors thanks for the review. I've pushed a fixup commit to address your suggestions. Once the PR is ready to be merged I will squash it into the original commit.\n\n> Suggest making a separate PR for [cd58338](https://github.com/bitcoin/bitcoin/commit/cd583385b76eed7192c5d3078d7945d7848a5162), ideally with a test.\n\nI'm not sure this tiny change deserves a PR and a separate discussion on its",https://github.com/bitcoin/bitcoin/pull/19153#issuecomment-641111771,641111771,
Sjors,2020-06-09 15:00:52,"The new changes look good.\n\nLog chattiness could be one concern, e.g. when loading a 1 GB mempool with broken entries, but also there's no test. Touching validation.cpp generally instills fear :-)\n",https://github.com/bitcoin/bitcoin/pull/19153#issuecomment-641354624,641354624,
S3RK,2020-06-10 04:06:42,"Squashed the changes, removed log commit",https://github.com/bitcoin/bitcoin/pull/19153#issuecomment-641707429,641707429,
MarcoFalke,2020-06-03 11:19:10,"If you remove this line, you can also remove the whole ""Generate some coins on both wallets"" part",https://github.com/bitcoin/bitcoin/pull/19153#discussion_r434492868,434492868,test/functional/mempool_compatibility.py
S3RK,2020-06-03 12:20:46,"It didn't work for me for some reason, though I don't fully understand yet how chain generation works in tests. I'll try this again tomorrow and will get back with an update",https://github.com/bitcoin/bitcoin/pull/19153#discussion_r434524436,434524436,test/functional/mempool_compatibility.py
S3RK,2020-06-04 08:12:27,"I figured it out. I forgot to manually import coinbase keys in setup_nodes(), it works now.\nThanks for the suggestion.",https://github.com/bitcoin/bitcoin/pull/19153#discussion_r435071695,435071695,test/functional/mempool_compatibility.py
Sjors,2020-06-08 11:03:36,"nit: I prefer to have the same instruction in all test files that require previous releases, because otherwise other tests fail when they have some versions but not all. Try:\n```\ncontrib/devtools/previous_release.sh -b v0.19.1 v0.18.1 v0.17.1 v0.16.3 v0.15.2\n\nOnly v0.19.1 is required by this test. The rest is used in other backwards compatibility tests.\n```",https://github.com/bitcoin/bitcoin/pull/19153#discussion_r436616252,436616252,test/functional/mempool_compatibility.py
Sjors,2020-06-08 11:05:58,"Suggest documenting what's interesting about that version, could be a link to Github issue.",https://github.com/bitcoin/bitcoin/pull/19153#discussion_r436617268,436617268,test/functional/mempool_compatibility.py
Sjors,2020-06-08 11:07:07,"Suggest adding a comment like what @laanwj said:\n\n> I don't think we can always guarantee that the mempool file will be backwards compatible, but it's good to have a test to be sure that compatibility at least isn't accidentally broken.",https://github.com/bitcoin/bitcoin/pull/19153#discussion_r436617847,436617847,test/functional/mempool_compatibility.py
adamjonas,2020-06-11 14:12:22,It looks like [other](https://github.com/bitcoin/bitcoin/blob/16d4b3fd6d5aad18ebb731a5006a15180d3661ef/test/functional/wallet_upgradewallet.py#L49) [instances](https://github.com/bitcoin/bitcoin/blob/16d4b3fd6d5aad18ebb731a5006a15180d3661ef/test/functional/feature_backwards_compatibility.py#L63) of `adjust_bitcoin_conf_for_pre_17` have left comments as to why it's used. I think it'd be helpful to ,https://github.com/bitcoin/bitcoin/pull/19153#discussion_r438817234,438817234,test/functional/mempool_compatibility.py
S3RK,2020-06-12 13:33:19,"If you believe the code is unclear, we need to think of a better way to fix it rather than putting the same comment before each function call. For example: give this function a better name. But as for me, I think the function name speaks for itself and it doesn't need any clarifying comment.",https://github.com/bitcoin/bitcoin/pull/19153#discussion_r439420712,439420712,test/functional/mempool_compatibility.py
Sjors,2020-06-16 10:37:06,I think it's fine to call this without comment; it's always necessary for nodes before 0.17. Ideally the test framework (`add_nodes`) takes care of it automagically.,https://github.com/bitcoin/bitcoin/pull/19153#discussion_r440753310,440753310,test/functional/mempool_compatibility.py
