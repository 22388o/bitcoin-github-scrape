practicalswift,2020-03-10 19:46:41,@hebasto Try passing in `boost_toolset_linux='clang' boost_cxx='clang++'` :)  See usage example in #18288.,https://github.com/bitcoin/bitcoin/pull/18308#issuecomment-597279393,597279393,
hebasto,2020-03-10 20:40:09,"@practicalswift \n> Try passing in `boost_toolset_linux='clang' boost_cxx='clang++'` :) See usage example in #18288.\n\nThank you. Now it works.\n\nBut, from my understanding, this PR couldn't claim to be a fix of #15914 as the case was with usage of `CC` and `CXX` variables.\n",https://github.com/bitcoin/bitcoin/pull/18308#issuecomment-597303394,597303394,
practicalswift,2020-03-11 10:52:09,"> But, from my understanding, this PR couldn't claim to be a fix of #15914 as the case was with usage of `CC` and `CXX` variables.\n\nI see your point. I opened #15914 and my issue is fixed as long as I have a way to build Boost using Clang by setting environment variables :)  I've now updated #15914 to clarify that.\n\nI don't know enough about how the depends build system is supposed to work",https://github.com/bitcoin/bitcoin/pull/18308#issuecomment-597565430,597565430,
MarcoFalke,2020-03-11 11:45:53,"cc @fanquake , @dongcarl ",https://github.com/bitcoin/bitcoin/pull/18308#issuecomment-597586564,597586564,
laanwj,2020-03-11 14:04:13,"Concept ACK.\n\nI understand that this solves your immediate problem, but also think that heeding CXX/CC instead of needing boost-specific environment magic (please document this!) would be more consistent.",https://github.com/bitcoin/bitcoin/pull/18308#issuecomment-597653422,597653422,
MarcoFalke,2020-03-11 14:07:40,"This seems reasonable to do if it doesn't break anything like our gitian or guix builds, which is why I pinged fanquake and dongcarl.\n\nFor the next release, 0.21, there won't be any boost hopefully.",https://github.com/bitcoin/bitcoin/pull/18308#issuecomment-597655238,597655238,
practicalswift,2020-03-11 16:14:47,"@hebasto @laanwj Pushed another commit. The following should now work:\n\n```\n$ make -C depends/ clean\n$ make -C depends/ NO_QT=1 NO_UPNP=1 NO_WALLET=1 NO_QR=1 NO_ZMQ=1 V=1 CXX=clang++-8\n```\n\nPlease note that `clang` is special-cased due to `b2` wanting `toolset=clang` (and not `toolset=clang-8`, `toolset=clang++-8`, etc.). Leaving the `gcc` handling as-is.",https://github.com/bitcoin/bitcoin/pull/18308#issuecomment-597726508,597726508,
Sjors,2020-03-12 14:41:38,"On macOS 10.15.3 I don't see any difference with 0f111aaa8d8dd6cf9714518d59f64eb06de16971, which I assume is good news, because it always uses clang. `src/bitcoind` also still compiles.\n\n```\ncd depends\nmake\n....\n/Users/sjors/dev/bitcoin-depends/depends/work/download/boost-1_70_0/boost_1_70_0.tar.bz2.temp: OK\nExtracting boost...\n/Users/sjors/dev/bitcoin-depends/depends/sources/boost",https://github.com/bitcoin/bitcoin/pull/18308#issuecomment-598225973,598225973,
dongcarl,2020-03-12 17:02:15,Going to look into fixing this at a more fundamental level... The `depends/hosts` files need some tuneup.,https://github.com/bitcoin/bitcoin/pull/18308#issuecomment-598301117,598301117,
practicalswift,2020-03-12 17:05:53,@dongcarl Excellent news! I'd be glad to close this PR as soon as we have a better alternative. Don't hesitate to ping me for review :),https://github.com/bitcoin/bitcoin/pull/18308#issuecomment-598303416,598303416,
