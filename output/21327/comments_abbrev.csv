DrahtBot,2021-03-01 22:24:01,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#20277](https://github.com/bitcoin/bitcoin/pull/20277) (test: Extend p2p_ibd_tx_relay.py to verify no-transaction are req",https://github.com/bitcoin/bitcoin/pull/21327#issuecomment-788345340,788345340,
jnewbery,2021-03-03 09:14:16,utACK d6314481efa4ff054dc036e980b4923ee5d1d736,https://github.com/bitcoin/bitcoin/pull/21327#issuecomment-789562105,789562105,
sdaftuar,2021-03-09 23:49:51,"Issues like those being explored in #21106 — where IBD may kick in at unintuitive times, complicating our understanding of the network due to special-case interactions throughout our codebase — are why I think we should hesitate before adding more checks gated on IBD and ensure we have a good reason for doing so.\n\nIn this case, I think our code is simpler to understand if we either always or n",https://github.com/bitcoin/bitcoin/pull/21327#issuecomment-794620032,794620032,
DrahtBot,2021-03-15 16:49:26,<!--4a62be1de6b64f3ed646cdc7932c8cf5-->\n🕵️ @sipa has been requested to review this pull request as specified in the REVIEWERS file.,https://github.com/bitcoin/bitcoin/pull/21327#issuecomment-799574190,799574190,
glozow,2021-03-24 22:05:05,"Just pushed some changes addressing @ariard’s review comment and clarifying the comment about “not a protocol violation.”\n\nOn why add a gate for unsolicited transactions in IBD but not the general case:\n\nThere can perhaps be an observable difference if we stop processing unsolicited transactions in the general case - someone mentioned in #21224 that there are clients that wouldn’t be able ",https://github.com/bitcoin/bitcoin/pull/21327#issuecomment-806215485,806215485,
jnewbery,2021-06-09 12:32:09,Code review ACK 89ebd01de2,https://github.com/bitcoin/bitcoin/pull/21327#issuecomment-857654498,857654498,
jnewbery,2021-06-11 12:31:02,ACK 648c5c73aef8785e49b7f23622f9d6e87b72f013,https://github.com/bitcoin/bitcoin/pull/21327#issuecomment-859548111,859548111,
naumenkogs,2021-09-29 10:28:27,"The code 648c5c73aef8785e49b7f23622f9d6e87b72f013 looks correct, but I share the hesitation suhas [expressed above](https://github.com/bitcoin/bitcoin/pull/21327#issuecomment-794620032).",https://github.com/bitcoin/bitcoin/pull/21327#issuecomment-930050728,930050728,
jnewbery,2021-11-02 13:05:47,reACK 6aed8b7e9b,https://github.com/bitcoin/bitcoin/pull/21327#issuecomment-957527251,957527251,
laanwj,2021-11-30 18:05:39,"Code review ACK 6aed8b7e9b206e728367fee9edfeb85b536bba69\nI've always shared Suhas' hesitation with regard to gating things on some (pretty arbitrary) ""initial block download"" criterion. But in this specific case, without an up-to-date view of blocks it's not that useful to process transactions, so I think it makes sense.",https://github.com/bitcoin/bitcoin/pull/21327#issuecomment-982886722,982886722,
MarcoFalke,2021-03-02 10:11:35,Any reason to add a silent merge conflict with dongcarl's work? Could simply use `m_chainman.ActiveChainstate().IsInitialBlockDownload()`,https://github.com/bitcoin/bitcoin/pull/21327#discussion_r585433607,585433607,src/net_processing.cpp
MarcoFalke,2021-03-02 10:14:33,Using the member also mirrors the check used in `NetMsgType::INV` processing.,https://github.com/bitcoin/bitcoin/pull/21327#discussion_r585435567,585435567,src/net_processing.cpp
MarcoFalke,2021-03-02 10:16:04,Could log the rejection to the debug NET category?,https://github.com/bitcoin/bitcoin/pull/21327#discussion_r585436728,585436728,src/net_processing.cpp
jnewbery,2021-03-02 17:51:20,"Perhaps remove ""Also"". Comments have a habit of migrating around and not getting updated, so the ""also"" that this is referring to may no longer make sense in future.",https://github.com/bitcoin/bitcoin/pull/21327#discussion_r585781532,585781532,src/net_processing.cpp
jnewbery,2021-03-02 17:51:38,"Maybe update this, since the test is now testing more.",https://github.com/bitcoin/bitcoin/pull/21327#discussion_r585781699,585781699,test/functional/p2p_ibd_txrelay.py
jnewbery,2021-03-02 17:53:18,"I don't think this is testing anything. If a node receives an INV for a transaction from an inbound connection, it won't request it for at least two seconds (see `AddTxAnnouncement()`), so this assert would pass even if the node wasn't in IBD.",https://github.com/bitcoin/bitcoin/pull/21327#discussion_r585782939,585782939,test/functional/p2p_ibd_txrelay.py
amitiuttarwar,2021-03-02 18:05:40,"> Could log the rejection to the debug NET category?\n\nwe considered adding logging, but it seemed like it could be annoying if you're connected to a client who keeps sending TXs? seems like if you get 1 you might get many?",https://github.com/bitcoin/bitcoin/pull/21327#discussion_r585791701,585791701,src/net_processing.cpp
MarcoFalke,2021-03-02 19:10:08,"I think you will already log that a message of type `tx` has been received, so adding another line wouldn't make things worse than they are now?\n\nMy thinking is that this code path should rarely be hit, because outbound connections generally don't announce txs via raw `tx` messages and inbound connections would only connect to you once your address is well propagated on the network, in which c",https://github.com/bitcoin/bitcoin/pull/21327#discussion_r585835092,585835092,src/net_processing.cpp
glozow,2021-03-02 19:17:39,I also thought we'd go by this [comment](https://github.com/bitcoin/bitcoin/blob/master/src/logging.h#L164-L166) that says not to log too much unnecessarily? My goal here is to do as little as possible when there's peers sending us unsolicited transactions we have no use for (which apparently does happen - there's a bit of discussion [here](https://bitcoincore.reviews/21224#l-173)).,https://github.com/bitcoin/bitcoin/pull/21327#discussion_r585839634,585839634,src/net_processing.cpp
glozow,2021-03-02 19:18:46,Done!,https://github.com/bitcoin/bitcoin/pull/21327#discussion_r585840437,585840437,src/net_processing.cpp
glozow,2021-03-02 19:18:54,Done!,https://github.com/bitcoin/bitcoin/pull/21327#discussion_r585840544,585840544,test/functional/p2p_ibd_txrelay.py
glozow,2021-03-02 19:19:43,Oopsie! Added a sleep + sync with ping,https://github.com/bitcoin/bitcoin/pull/21327#discussion_r585841061,585841061,test/functional/p2p_ibd_txrelay.py
MarcoFalke,2021-03-02 19:35:11,"Ah, that comment is about the unconditional log, which probably shouldn't be used in net at all. The conditional NET log doesn't have that concern. (If it did, we already have a massive problem, because on a medium activity node the NET log category eats up about 1TB of disk every 6 months)",https://github.com/bitcoin/bitcoin/pull/21327#discussion_r585851015,585851015,src/net_processing.cpp
amitiuttarwar,2021-03-02 19:51:25,"@MarcoFalke seems like you think this information useful to surface to the user, can you share why? what could a node operator do with this information? ",https://github.com/bitcoin/bitcoin/pull/21327#discussion_r585862863,585862863,src/net_processing.cpp
ariard,2021-03-02 21:21:27,"As a transaction received during IBD is necessary unsolicited, you might want to `setban` the faultive peer because that's a hint of a peer non-compliant with the inv-getdata sequence ?",https://github.com/bitcoin/bitcoin/pull/21327#discussion_r585918460,585918460,src/net_processing.cpp
ariard,2021-03-02 21:40:38,"Note this is also used in p2p_tx_download.py, can you move this in p2p.py ? If we update the production `NONPREF_PEER_TX_DELAY`, it's easier to have corresponding test constants in one place.",https://github.com/bitcoin/bitcoin/pull/21327#discussion_r585929777,585929777,test/functional/p2p_ibd_txrelay.py
glozow,2021-03-02 22:20:38,"You could use the ""received: tx (x bytes) peer=x"" [log](https://github.com/bitcoin/bitcoin/blob/b9f41df1ead4b6a83a51fc41966b111c8459c313/src/net_processing.cpp#L2527) if you wanted to look for tx messages in IBD",https://github.com/bitcoin/bitcoin/pull/21327#discussion_r585952117,585952117,src/net_processing.cpp
MarcoFalke,2021-03-03 08:53:44,"Fair enough. The existing debug log statements are sufficient to determine whether this code path was hit. Though, for an easy `grep` I'd still prefer a specific log statement, but I guess I can add this myself.",https://github.com/bitcoin/bitcoin/pull/21327#discussion_r586227564,586227564,src/net_processing.cpp
jnewbery,2021-03-03 09:33:08,Thanks. Looks good.,https://github.com/bitcoin/bitcoin/pull/21327#discussion_r586256865,586256865,test/functional/p2p_ibd_txrelay.py
sdaftuar,2021-03-04 16:27:25,"This comment is confusing to me -- have we decided whether it's protocol-violating to not process unrequested transactions?  That was exactly what I proposed we do elsewhere, in general, but there was debate over whether such a change would be breaking or whether it was useful.\n\nIf it's not useful for our software to do this in general, I don't know why it's useful to do in this smaller specif",https://github.com/bitcoin/bitcoin/pull/21327#discussion_r587618759,587618759,src/net_processing.cpp
glozow,2021-03-04 16:51:02,"For some context, the comment is meant to convey that sending us unsolicited transactions is not a protocol violation, and I wanted to distinguish from the case above in which we disconnect the peer in addition to ignoring the transaction for violating no-tx-relay. Something like ""since the peer has not violated protocol, don't punish"" is what I meant. The comment could definitely be clearer.\n\",https://github.com/bitcoin/bitcoin/pull/21327#discussion_r587639359,587639359,src/net_processing.cpp
sdaftuar,2021-03-04 16:59:08,"Ah, yes I completely misparsed that protocol violation comment, thanks for explaining that.\n\nI'm still looking to understand why this change is beneficial, but a broader change that includes IBD as a subset and also allows for PF_RELAY peers to bypass it, would not be.",https://github.com/bitcoin/bitcoin/pull/21327#discussion_r587646500,587646500,src/net_processing.cpp
ariard,2021-03-04 20:37:48,"I think we can consider this change as beneficial as it's a small resources saving during IBD, a period during which our resources should be allocated on a more prioritized task. W.r.t to a broader change adopting this behavior beyond IBD (e.g #21224) we have an explicit concern about silently harming other bitcoin softwares deployed on the tx-relay network. As it's a reasonable assumption to expe",https://github.com/bitcoin/bitcoin/pull/21327#discussion_r587808317,587808317,src/net_processing.cpp
naumenkogs,2021-03-08 08:07:26,">Ah, yes I completely misparsed that protocol violation comment, thanks for explaining that.\n\nI just had the same confusion.",https://github.com/bitcoin/bitcoin/pull/21327#discussion_r589233570,589233570,src/net_processing.cpp
glozow,2021-03-24 22:05:18,Done!,https://github.com/bitcoin/bitcoin/pull/21327#discussion_r600905035,600905035,test/functional/p2p_ibd_txrelay.py
MarcoFalke,2021-06-09 17:37:39,Can mocktime be used here?,https://github.com/bitcoin/bitcoin/pull/21327#discussion_r648528881,648528881,test/functional/p2p_ibd_txrelay.py
MarcoFalke,2021-06-11 09:10:07,"```suggestion\n        tx = FromHex(CTransaction(), rawhex)\n```",https://github.com/bitcoin/bitcoin/pull/21327#discussion_r649820311,649820311,test/functional/p2p_ibd_txrelay.py
glozow,2021-06-11 09:47:41,"Right, fixed",https://github.com/bitcoin/bitcoin/pull/21327#discussion_r649845401,649845401,test/functional/p2p_ibd_txrelay.py
glozow,2021-06-11 09:47:51,Done,https://github.com/bitcoin/bitcoin/pull/21327#discussion_r649845490,649845490,test/functional/p2p_ibd_txrelay.py
MarcoFalke,2021-06-11 09:56:04,"```suggestion\n        peer_inver.sync_send_with_ping()\n```\n\nTo account for the possibility that pongs are sent before getdata?",https://github.com/bitcoin/bitcoin/pull/21327#discussion_r649850761,649850761,test/functional/p2p_ibd_txrelay.py
glozow,2021-06-11 10:04:22,Yes :brain:,https://github.com/bitcoin/bitcoin/pull/21327#discussion_r649855931,649855931,test/functional/p2p_ibd_txrelay.py
glozow,2021-06-11 10:05:11,"Wait, isn't there a ping after the inv? since we're calling `send_and_ping()`?",https://github.com/bitcoin/bitcoin/pull/21327#discussion_r649856390,649856390,test/functional/p2p_ibd_txrelay.py
MarcoFalke,2021-06-11 10:16:12,"There is, but it doesn't matter. The pong in this line (after mocktime) will be sent out here:\n\n```\n            // Receive messages\n            bool fMoreNodeWork = m_msgproc->ProcessMessages(pnode, flagInterruptMsgProc);\n```\n\nAt this point no messages have been sent out (no getdata etc). Sending will happen right after, but may take a long time if the thread is put aside or the buff",https://github.com/bitcoin/bitcoin/pull/21327#discussion_r649862838,649862838,test/functional/p2p_ibd_txrelay.py
glozow,2021-06-11 10:24:29,Rebased for #21785 and added this,https://github.com/bitcoin/bitcoin/pull/21327#discussion_r649867691,649867691,test/functional/p2p_ibd_txrelay.py
luke-jr,2021-10-10 21:31:21,Silent conflict. This needs to get renamed to `from_hex`,https://github.com/bitcoin/bitcoin/pull/21327#discussion_r725701309,725701309,test/functional/p2p_ibd_txrelay.py
glozow,2021-10-28 15:37:50,"thanks, rebased",https://github.com/bitcoin/bitcoin/pull/21327#discussion_r738518717,738518717,test/functional/p2p_ibd_txrelay.py
