[
  {
    "sha": "b9e105b6643bada4c80f8d521394be4d55e8e4fc",
    "node_id": "C_kwDOABII59oAKGI5ZTEwNWI2NjQzYmFkYTRjODBmOGQ1MjEzOTRiZTRkNTVlOGU0ZmM",
    "commit": {
      "author": {
        "name": "glozow",
        "email": "gzhao408@berkeley.edu",
        "date": "2021-02-26T21:44:40Z"
      },
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2021-10-28T15:31:22Z"
      },
      "message": "[net_processing] ignore all transactions during ibd\n\nCo-authored-by: Amiti Uttarwar <amiti@uttarwar.org>",
      "tree": {
        "sha": "3f88fd7a998b095e46bc6f5043e4010f843fdc55",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3f88fd7a998b095e46bc6f5043e4010f843fdc55"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b9e105b6643bada4c80f8d521394be4d55e8e4fc",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b9e105b6643bada4c80f8d521394be4d55e8e4fc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b9e105b6643bada4c80f8d521394be4d55e8e4fc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b9e105b6643bada4c80f8d521394be4d55e8e4fc/comments",
    "author": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following{/other_user}",
      "gists_url": "https://api.github.com/users/glozow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glozow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following{/other_user}",
      "gists_url": "https://api.github.com/users/glozow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glozow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ab25ef8c7f767258d5fe44f53b35ad8bd51ed5cd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ab25ef8c7f767258d5fe44f53b35ad8bd51ed5cd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ab25ef8c7f767258d5fe44f53b35ad8bd51ed5cd"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 5,
      "deletions": 0
    },
    "files": [
      {
        "sha": "e205030749013a947fa3df2bd95a26b912a874d1",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b9e105b6643bada4c80f8d521394be4d55e8e4fc/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b9e105b6643bada4c80f8d521394be4d55e8e4fc/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=b9e105b6643bada4c80f8d521394be4d55e8e4fc",
        "patch": "@@ -3207,6 +3207,11 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n             return;\n         }\n \n+        // Stop processing the transaction early if we are still in IBD since we don't\n+        // have enough information to validate it yet. Sending unsolicited transactions\n+        // is not considered a protocol violation, so don't punish the peer.\n+        if (m_chainman.ActiveChainstate().IsInitialBlockDownload()) return;\n+\n         CTransactionRef ptx;\n         vRecv >> ptx;\n         const CTransaction& tx = *ptx;"
      }
    ]
  },
  {
    "sha": "6aed8b7e9b206e728367fee9edfeb85b536bba69",
    "node_id": "C_kwDOABII59oAKDZhZWQ4YjdlOWIyMDZlNzI4MzY3ZmVlOWVkZmViODViNTM2YmJhNjk",
    "commit": {
      "author": {
        "name": "glozow",
        "email": "gzhao408@berkeley.edu",
        "date": "2021-02-26T20:53:40Z"
      },
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2021-10-28T15:32:41Z"
      },
      "message": "[test] tx processing before and after ibd\n\nCo-authored-by: Amiti Uttarwar <amiti@uttarwar.org>",
      "tree": {
        "sha": "875776382a7a039a4e7bde4867a506ae8e6b79ac",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/875776382a7a039a4e7bde4867a506ae8e6b79ac"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6aed8b7e9b206e728367fee9edfeb85b536bba69",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6aed8b7e9b206e728367fee9edfeb85b536bba69",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6aed8b7e9b206e728367fee9edfeb85b536bba69",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6aed8b7e9b206e728367fee9edfeb85b536bba69/comments",
    "author": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following{/other_user}",
      "gists_url": "https://api.github.com/users/glozow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glozow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following{/other_user}",
      "gists_url": "https://api.github.com/users/glozow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glozow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b9e105b6643bada4c80f8d521394be4d55e8e4fc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b9e105b6643bada4c80f8d521394be4d55e8e4fc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b9e105b6643bada4c80f8d521394be4d55e8e4fc"
      }
    ],
    "stats": {
      "total": 54,
      "additions": 52,
      "deletions": 2
    },
    "files": [
      {
        "sha": "cbe40c98d0c15499db2e227f7ea9ee2be9a1199f",
        "filename": "test/functional/p2p_ibd_txrelay.py",
        "status": "modified",
        "additions": 50,
        "deletions": 2,
        "changes": 52,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6aed8b7e9b206e728367fee9edfeb85b536bba69/test/functional/p2p_ibd_txrelay.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6aed8b7e9b206e728367fee9edfeb85b536bba69/test/functional/p2p_ibd_txrelay.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_ibd_txrelay.py?ref=6aed8b7e9b206e728367fee9edfeb85b536bba69",
        "patch": "@@ -2,11 +2,30 @@\n # Copyright (c) 2020 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\"\"\"Test fee filters during and after IBD.\"\"\"\n+\"\"\"Test transaction relay behavior during IBD:\n+- Set fee filters to MAX_MONEY\n+- Don't request transactions\n+- Ignore all transaction messages\n+\"\"\"\n \n from decimal import Decimal\n+import time\n \n-from test_framework.messages import COIN\n+from test_framework.messages import (\n+        CInv,\n+        COIN,\n+        CTransaction,\n+        from_hex,\n+        msg_inv,\n+        msg_tx,\n+        MSG_WTX,\n+)\n+from test_framework.p2p import (\n+        NONPREF_PEER_TX_DELAY,\n+        P2PDataStore,\n+        P2PInterface,\n+        p2p_lock\n+)\n from test_framework.test_framework import BitcoinTestFramework\n \n MAX_FEE_FILTER = Decimal(9170997) / COIN\n@@ -28,6 +47,31 @@ def run_test(self):\n             assert node.getblockchaininfo()['initialblockdownload']\n             self.wait_until(lambda: all(peer['minfeefilter'] == MAX_FEE_FILTER for peer in node.getpeerinfo()))\n \n+        self.log.info(\"Check that nodes don't send getdatas for transactions while still in IBD\")\n+        peer_inver = self.nodes[0].add_p2p_connection(P2PDataStore())\n+        txid = 0xdeadbeef\n+        peer_inver.send_and_ping(msg_inv([CInv(t=MSG_WTX, h=txid)]))\n+        # The node should not send a getdata, but if it did, it would first delay 2 seconds\n+        self.nodes[0].setmocktime(int(time.time() + NONPREF_PEER_TX_DELAY))\n+        peer_inver.sync_send_with_ping()\n+        with p2p_lock:\n+            assert txid not in peer_inver.getdata_requests\n+        self.nodes[0].disconnect_p2ps()\n+\n+        self.log.info(\"Check that nodes don't process unsolicited transactions while still in IBD\")\n+        # A transaction hex pulled from tx_valid.json. There are no valid transactions since no UTXOs\n+        # exist yet, but it should be a well-formed transaction.\n+        rawhex = \"0100000001b14bdcbc3e01bdaad36cc08e81e69c82e1060bc14e518db2b49aa43ad90ba260000000004a01ff473\" + \\\n+            \"04402203f16c6f40162ab686621ef3000b04e75418a0c0cb2d8aebeac894ae360ac1e780220ddc15ecdfc3507ac48e168\" + \\\n+            \"1a33eb60996631bf6bf5bc0a0682c4db743ce7ca2b01ffffffff0140420f00000000001976a914660d4ef3a743e3e696a\" + \\\n+            \"d990364e555c271ad504b88ac00000000\"\n+        assert self.nodes[1].decoderawtransaction(rawhex) # returns a dict, should not throw\n+        tx = from_hex(CTransaction(), rawhex)\n+        peer_txer = self.nodes[0].add_p2p_connection(P2PInterface())\n+        with self.nodes[0].assert_debug_log(expected_msgs=[\"received: tx\"], unexpected_msgs=[\"was not accepted\"]):\n+            peer_txer.send_and_ping(msg_tx(tx))\n+        self.nodes[0].disconnect_p2ps()\n+\n         # Come out of IBD by generating a block\n         self.generate(self.nodes[0], 1)\n         self.sync_all()\n@@ -37,6 +81,10 @@ def run_test(self):\n             assert not node.getblockchaininfo()['initialblockdownload']\n             self.wait_until(lambda: all(peer['minfeefilter'] == NORMAL_FEE_FILTER for peer in node.getpeerinfo()))\n \n+        self.log.info(\"Check that nodes process the same transaction, even when unsolicited, when no longer in IBD\")\n+        peer_txer = self.nodes[0].add_p2p_connection(P2PInterface())\n+        with self.nodes[0].assert_debug_log(expected_msgs=[\"was not accepted\"]):\n+            peer_txer.send_and_ping(msg_tx(tx))\n \n if __name__ == '__main__':\n     P2PIBDTxRelayTest().main()"
      },
      {
        "sha": "cf6689437c9a4a8cab7ce691e69a8f90ad00fc03",
        "filename": "test/functional/test_framework/p2p.py",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6aed8b7e9b206e728367fee9edfeb85b536bba69/test/functional/test_framework/p2p.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6aed8b7e9b206e728367fee9edfeb85b536bba69/test/functional/test_framework/p2p.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/p2p.py?ref=6aed8b7e9b206e728367fee9edfeb85b536bba69",
        "patch": "@@ -89,6 +89,8 @@\n P2P_SUBVERSION = \"/python-p2p-tester:0.0.3/\"\n # Value for relay that this test framework sends in its `version` message\n P2P_VERSION_RELAY = 1\n+# Delay after receiving a tx inv before requesting transactions from non-preferred peers, in seconds\n+NONPREF_PEER_TX_DELAY = 2\n \n MESSAGEMAP = {\n     b\"addr\": msg_addr,"
      }
    ]
  }
]