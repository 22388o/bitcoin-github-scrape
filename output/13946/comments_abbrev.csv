practicalswift,2018-08-12T14:45:06Z,"utACK fa37c5b662f1aeeaa53e60377979156e84d550b4\n\nClarification is good",https://github.com/bitcoin/bitcoin/pull/13946#issuecomment-412347529,412347529,
domob1812,2018-08-12T15:52:32Z,"utACK fa37c5b662f1aeeaa53e60377979156e84d550b4\n\nSeems like a reasonable clarification with minimal changes.",https://github.com/bitcoin/bitcoin/pull/13946#issuecomment-412351982,412351982,
DrahtBot,2018-08-12T17:03:14Z,"<!--e57a25ab6845829454e8d69fc972939a-->Note to reviewers: This pull request conflicts with the following ones:\n\n* #14032 (Add p2p layer encryption with ECDH/ChaCha20Poly1305 by jonasschnelli)\n* #13947 (Dandelion transaction relay (BIP 156) by MarcoFalke)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that sho",https://github.com/bitcoin/bitcoin/pull/13946#issuecomment-412356645,412356645,
sipa,2018-08-12T17:26:57Z,Any reason not to drop all the `else`s in between the different options?,https://github.com/bitcoin/bitcoin/pull/13946#issuecomment-412358353,412358353,
MarcoFalke,2018-08-12T19:13:48Z,Made everything early-return as requested by @sipa,https://github.com/bitcoin/bitcoin/pull/13946#issuecomment-412365170,412365170,
Empact,2018-08-13T01:25:20Z,"utACK fa6c3de\n\nnit: This block would be a bit easier to parse if the returns were one level up:\nhttps://github.com/bitcoin/bitcoin/blob/0df7a6c13ec484f9f31cfe3ed3039098a9bef124/src/net_processing.cpp#L1585-L1594\n\nnit: Not necessarily to be fixed in this PR, but I noticed that due to `!fImporting && !fReindex`, `CMPCTBLOCK`, `BLOCKTXN`, `HEADERS`, and `BLOCK` messages will be treated with",https://github.com/bitcoin/bitcoin/pull/13946#issuecomment-412386725,412386725,
practicalswift,2018-08-13T07:17:21Z,utACK fa6c3dea420b6c50c164ccc34f4e9e8a7d9a8022,https://github.com/bitcoin/bitcoin/pull/13946#issuecomment-412429026,412429026,
laanwj,2018-08-25T16:18:08Z,"I'm not sure this is **much** better with the early returns. though, this does untangle the case and makes it easier to split up the function and move to dispatching based on say, a hash table, in the future, so it's a step in the right direction.\n\nutACK fa6c3dea420b6c50c164ccc34f4e9e8a7d9a8022",https://github.com/bitcoin/bitcoin/pull/13946#issuecomment-415980013,415980013,
JeremyRubin,2018-09-16T18:46:33Z,"post-merge utack, good incremental step.",https://github.com/bitcoin/bitcoin/pull/13946#issuecomment-421811627,421811627,
jnewbery,2018-08-24T17:26:09Z,"May be out of scope for this PR, but I think it'd be better for these conditionals to be nested:\n\n```c++\nif (strCommand == NetMsgType::CMPCTBLOCK) {\n    if (!fImporting && !fReindex) { // Ignore blocks received while importing\n        ...\n    }\n    // could optionally log in an else branch here\n    return true;\n}\n```\n\nfor a couple of reasons:\n\n- it prevents compact bloc",https://github.com/bitcoin/bitcoin/pull/13946#discussion_r212698664,212698664,src/net_processing.cpp
MarcoFalke,2018-08-24T17:30:45Z,"Indeed out of scope, as this is not refactoring, but bugfixing-like territory.",https://github.com/bitcoin/bitcoin/pull/13946#discussion_r212700008,212700008,src/net_processing.cpp
jnewbery,2018-08-24T17:58:29Z,ok,https://github.com/bitcoin/bitcoin/pull/13946#discussion_r212708177,212708177,src/net_processing.cpp
