[
  {
    "sha": "fa609c4f76f215c19ea4021e78c102dee2b8c3d1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTYwOWM0Zjc2ZjIxNWMxOWVhNDAyMWU3OGMxMDJkZWUyYjhjM2Qx",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-05-28T12:04:40Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-05-28T13:00:20Z"
      },
      "message": "scheduler: Remove unused REVERSE_LOCK\n\nNo longer needed after commit d61f2bb076d8f",
      "tree": {
        "sha": "cb739498f6fc9d2246630b70c708952e1cd8c592",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cb739498f6fc9d2246630b70c708952e1cd8c592"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa609c4f76f215c19ea4021e78c102dee2b8c3d1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUiFqQwAtA0630Ni3wM4HTAeLRFMZeFky40DQ5ai9GCl5Hll/9zdMFvfwG5m3T48\nIBP9ZQXaFHxx4CcIHYiibGIFcqF9rzpWkA8iZbKrP0EJgQ8tzJY9yYu7qTtGbw1g\nz1WZuYM/CPkhuyS8PBdv+xXN2PBc21sWgkAe8fu0LADaLUHBPbiwCYcGk7/hNQAi\nI0qw5+rApcOUX7pHA9egcPF7t0wC4XtCHArXuP8MrhRn8a1SYB5KCBD4vDx2inay\nPhaOa2bJiilVMSKohzWBZH8FErDtZgPCahtRELCPo3bTtADdckZqvEwpSz87T45U\navV6pQwFWXYIJi1xA9ebJJTmDcUK5r1NYUBicAUDHgZapFlxMJmUM96NQvDyWIfA\n/7kWLWFCEcoP79Ahy6iVk6abgB0elWHMWm35L3b4s5BBV0CJR6JkBcu2+BDbu+ys\nLnMDTHBAuLpdTMJTkPFsUQmWt8QwNXxYDBzykMEcAltFtwphoGpgJRtBtfsgRg5o\njpqKFpXm\n=Hlnq\n-----END PGP SIGNATURE-----",
        "payload": "tree cb739498f6fc9d2246630b70c708952e1cd8c592\nparent 55b4c65bd1d829e799db7fe75fab88691830de43\nauthor MarcoFalke <falke.marco@gmail.com> 1590667480 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1590670820 -0400\n\nscheduler: Remove unused REVERSE_LOCK\n\nNo longer needed after commit d61f2bb076d8f\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa609c4f76f215c19ea4021e78c102dee2b8c3d1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa609c4f76f215c19ea4021e78c102dee2b8c3d1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa609c4f76f215c19ea4021e78c102dee2b8c3d1/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "55b4c65bd1d829e799db7fe75fab88691830de43",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/55b4c65bd1d829e799db7fe75fab88691830de43",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/55b4c65bd1d829e799db7fe75fab88691830de43"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 0,
      "deletions": 3
    },
    "files": [
      {
        "sha": "8f69bc31bf0d607e5081802734c809715673cffd",
        "filename": "src/scheduler.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa609c4f76f215c19ea4021e78c102dee2b8c3d1/src/scheduler.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa609c4f76f215c19ea4021e78c102dee2b8c3d1/src/scheduler.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/scheduler.cpp?ref=fa609c4f76f215c19ea4021e78c102dee2b8c3d1",
        "patch": "@@ -30,9 +30,6 @@ void CScheduler::serviceQueue()\n     // is called.\n     while (!shouldStop()) {\n         try {\n-            if (!shouldStop() && taskQueue.empty()) {\n-                REVERSE_LOCK(lock);\n-            }\n             while (!shouldStop() && taskQueue.empty()) {\n                 // Wait until there is something to do.\n                 newTaskScheduled.wait(lock);"
      }
    ]
  },
  {
    "sha": "fa9819695aac260be0ba170eb15ecba8cb519843",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTk4MTk2OTVhYWMyNjBiZTBiYTE3MGViMTVlY2JhOGNiNTE5ODQz",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-05-28T12:46:50Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-05-28T13:00:56Z"
      },
      "message": "test: Remove unused scheduler.h include from the common setup\n\nThe common setup is included in virtually all tests, so it should be\nas slim as possible.",
      "tree": {
        "sha": "4faf151c6ebbfb0952d34857320a0f2e5f907f99",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4faf151c6ebbfb0952d34857320a0f2e5f907f99"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa9819695aac260be0ba170eb15ecba8cb519843",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUidygv/e/cse430iIc6/uBX7UoyzQwb2rycT/0gVAHCtqF+fVKvUTT65dbAlrdA\ng0+yxAP1q3cmqkZFY2UxI8gUEj7Rn1iNJFMKo8VT1MTkgcKNhYPLIyZB8PyR8EAn\nnrKt8r5FeoHJaI19KsPy/4u6jb3ayGI2VupB5XfPU9/ZXJV38/sFenkz11Bst9Bi\nAtDyX973ZRN34uKhzeeXG4Urozfc+nNP/dXj4ZhhHNldADU5qX3KXyax1g0EKPjP\nhwqvCp9o678IS6vGahA3Fwo8inmXjONi/WUKh75gyWXJdn8xEVmnjbd273gjHTL1\nZ8AdWgV06LkXywv4LLmM7YR2WWXQJKMyLkkicOIsSilMDSay2llicOGjfvdqGZnL\nqFsqk+akE38TybjNaHXAxqkdUZf2GClZjqS03G6x/GpedC6xwwlhvcBGAZQdKSK5\nel76t3/veWBh8LWyUNcHvSIyjN92kwhHxnKfGQi3ojcggb6U/+Y/kShdyxCm7WR0\nrWTKyO2l\n=PBrb\n-----END PGP SIGNATURE-----",
        "payload": "tree 4faf151c6ebbfb0952d34857320a0f2e5f907f99\nparent fa609c4f76f215c19ea4021e78c102dee2b8c3d1\nauthor MarcoFalke <falke.marco@gmail.com> 1590670010 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1590670856 -0400\n\ntest: Remove unused scheduler.h include from the common setup\n\nThe common setup is included in virtually all tests, so it should be\nas slim as possible.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa9819695aac260be0ba170eb15ecba8cb519843",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa9819695aac260be0ba170eb15ecba8cb519843",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa9819695aac260be0ba170eb15ecba8cb519843/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fa609c4f76f215c19ea4021e78c102dee2b8c3d1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa609c4f76f215c19ea4021e78c102dee2b8c3d1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa609c4f76f215c19ea4021e78c102dee2b8c3d1"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "709d357b8a565d1686ac53a189ba3088bdbe6647",
        "filename": "src/test/util/setup_common.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa9819695aac260be0ba170eb15ecba8cb519843/src/test/util/setup_common.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa9819695aac260be0ba170eb15ecba8cb519843/src/test/util/setup_common.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util/setup_common.cpp?ref=fa9819695aac260be0ba170eb15ecba8cb519843",
        "patch": "@@ -19,6 +19,7 @@\n #include <rpc/blockchain.h>\n #include <rpc/register.h>\n #include <rpc/server.h>\n+#include <scheduler.h>\n #include <script/sigcache.h>\n #include <streams.h>\n #include <txdb.h>"
      },
      {
        "sha": "37cd791f5651ffc1095dae5fa4ec9b5ecbe32a83",
        "filename": "src/test/util/setup_common.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa9819695aac260be0ba170eb15ecba8cb519843/src/test/util/setup_common.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa9819695aac260be0ba170eb15ecba8cb519843/src/test/util/setup_common.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util/setup_common.h?ref=fa9819695aac260be0ba170eb15ecba8cb519843",
        "patch": "@@ -11,7 +11,6 @@\n #include <node/context.h>\n #include <pubkey.h>\n #include <random.h>\n-#include <scheduler.h>\n #include <txmempool.h>\n #include <util/string.h>\n "
      }
    ]
  },
  {
    "sha": "fab2950d703217ec34b27e677e4f33ebbf99ca08",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWIyOTUwZDcwMzIxN2VjMzRiMjdlNjc3ZTRmMzNlYmJmOTljYTA4",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-05-28T12:54:58Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-05-28T14:22:36Z"
      },
      "message": "doc: Switch boost::thread to std::thread in scheduler\n\nAfter commit d0ebd93 the scheduler itself no longer cares if the\nserviceQueue is run in a std::thread or boost::thread. Change the\ndocumentation to std::thread because we switched to C++11.",
      "tree": {
        "sha": "b15599f5c81b5968168f9e6a26c481b66b0896b8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b15599f5c81b5968168f9e6a26c481b66b0896b8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fab2950d703217ec34b27e677e4f33ebbf99ca08",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUgUEwv+IbbqTDJDvC7iy0B1JSRwVzW0Yq3urDG7uLrj5I0AZwovgTXxBwtk4DIK\nSnEnE2j/tJg7tFy8Oz8OPqRhMPHGyU0v1H5kdqqOcO/Phf47ASKpvi647bgVLuV3\nYZInq28wcQCZYVAbpnCvmzsKtvFLoxQd7Lpv9hFVzPA9JvL5dyj9kUDMlv5nJyLD\n+x4P594kWiyILgGYMB/oUJbgiYUa+McpXs6v6IRTUolwBR4W+ZEKmVyrKgX0vzI2\nKH05okJIXKXWinx8kDIJ+LFOW6O1lBxmwr+fqxVlxpTcNtWOOd7FgOgdD096VnQ+\n+S4iMn49pajUrA+4Z0bNhPeDrsTQdQePOdkGyglT9KgSvipDOTTE5BZLQquOABtF\nDfti931KGZfejLtd/FAlMWB3dEtOPOFQiPOyjrcHIzC+UlZYYah31EGD+cuIR8uQ\n89UzURGpFpzmdTWvfFtUO44oYp3hdWI3g+9BSU7vSsZOg0+Sb8PFZlB0Fh9Dv8bX\nsa9DKKYC\n=iaS7\n-----END PGP SIGNATURE-----",
        "payload": "tree b15599f5c81b5968168f9e6a26c481b66b0896b8\nparent fa9819695aac260be0ba170eb15ecba8cb519843\nauthor MarcoFalke <falke.marco@gmail.com> 1590670498 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1590675756 -0400\n\ndoc: Switch boost::thread to std::thread in scheduler\n\nAfter commit d0ebd93 the scheduler itself no longer cares if the\nserviceQueue is run in a std::thread or boost::thread. Change the\ndocumentation to std::thread because we switched to C++11.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fab2950d703217ec34b27e677e4f33ebbf99ca08",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fab2950d703217ec34b27e677e4f33ebbf99ca08",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fab2950d703217ec34b27e677e4f33ebbf99ca08/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fa9819695aac260be0ba170eb15ecba8cb519843",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa9819695aac260be0ba170eb15ecba8cb519843",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa9819695aac260be0ba170eb15ecba8cb519843"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 1,
      "deletions": 6
    },
    "files": [
      {
        "sha": "29f005d49c77758a84f9f9c7916481ac54950857",
        "filename": "src/scheduler.h",
        "status": "modified",
        "additions": 1,
        "deletions": 6,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fab2950d703217ec34b27e677e4f33ebbf99ca08/src/scheduler.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fab2950d703217ec34b27e677e4f33ebbf99ca08/src/scheduler.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/scheduler.h?ref=fab2950d703217ec34b27e677e4f33ebbf99ca08",
        "patch": "@@ -5,11 +5,6 @@\n #ifndef BITCOIN_SCHEDULER_H\n #define BITCOIN_SCHEDULER_H\n \n-//\n-// NOTE:\n-// boost::thread should be ported to std::thread\n-// when we support C++11.\n-//\n #include <condition_variable>\n #include <functional>\n #include <list>\n@@ -26,7 +21,7 @@\n // CScheduler* s = new CScheduler();\n // s->scheduleFromNow(doSomething, std::chrono::milliseconds{11}); // Assuming a: void doSomething() { }\n // s->scheduleFromNow([=] { this->func(argument); }, std::chrono::milliseconds{3});\n-// boost::thread* t = new boost::thread(std::bind(CScheduler::serviceQueue, s));\n+// std::thread* t = new std::thread([&] { s->serviceQueue(); });\n //\n // ... then at program shutdown, make sure to call stop() to clean up the thread(s) running serviceQueue:\n // s->stop();"
      }
    ]
  },
  {
    "sha": "fa9cca0550f3d0ee8c276146f40007f76fbb97c2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTljY2EwNTUwZjNkMGVlOGMyNzYxNDZmNDAwMDdmNzZmYmI5N2My",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-05-28T13:12:34Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-05-28T14:22:57Z"
      },
      "message": "doc: Remove unused documentation about unimplemented features",
      "tree": {
        "sha": "b6522f0448b7449ae3eb333015486273e1bd6507",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b6522f0448b7449ae3eb333015486273e1bd6507"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa9cca0550f3d0ee8c276146f40007f76fbb97c2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUieGgv/Q5nrA8s9yasz8f7vUGw0F4puRMsV8Jh/aKbK7F810mk4FET3WUPJbdNa\nnmT07jAlrON3syHTlCvOQTyJuKLeSj+3jx8oJFEpdFqjXHTQ0c4uoPwcMp+R6egY\ntvLHhNLBU10bKJ6AzMNUV6tnggMcR9/NfO7JkyNCfKem0BtBSSSMFAFWeH0Geahq\naRCC8jcLJJA6QzMZoGM8cNDjkR8DjHIQ4dczhAcJDnuQPQCv+y1jgJNkxac0VjNG\nTuHioD4SgkRyB1cDLSM03aTiW6Zvp7+Z03025mfWJ4Hem3bLgDMf0VhYv7ToqeHN\nsIliFG2tbadx5UoioRflh3OdLf87iTT4q9dvkffZB5RUlDQs7WxUyJeaFLFLeRJz\nxCL3aQLNDH/Ri/fR0tmZJJxi65v1bfVka52eI0jCXaKWX7onE7ReIncUIuMYMpzs\nMdc7wdK/ZfdeD1o7L8gtMIbEYaWIQ6RSBH71UWKjrG8se3VHtfGO1A7RPlG7++Uk\nkJv4WxHM\n=Fv6I\n-----END PGP SIGNATURE-----",
        "payload": "tree b6522f0448b7449ae3eb333015486273e1bd6507\nparent fab2950d703217ec34b27e677e4f33ebbf99ca08\nauthor MarcoFalke <falke.marco@gmail.com> 1590671554 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1590675777 -0400\n\ndoc: Remove unused documentation about unimplemented features\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa9cca0550f3d0ee8c276146f40007f76fbb97c2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa9cca0550f3d0ee8c276146f40007f76fbb97c2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa9cca0550f3d0ee8c276146f40007f76fbb97c2/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fab2950d703217ec34b27e677e4f33ebbf99ca08",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fab2950d703217ec34b27e677e4f33ebbf99ca08",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fab2950d703217ec34b27e677e4f33ebbf99ca08"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 0,
      "deletions": 3
    },
    "files": [
      {
        "sha": "7ebe3df37fd2d9ad7378f14db5f3ababbcdb01bf",
        "filename": "src/scheduler.h",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa9cca0550f3d0ee8c276146f40007f76fbb97c2/src/scheduler.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa9cca0550f3d0ee8c276146f40007f76fbb97c2/src/scheduler.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/scheduler.h?ref=fa9cca0550f3d0ee8c276146f40007f76fbb97c2",
        "patch": "@@ -29,7 +29,6 @@\n // delete t;\n // delete s; // Must be done after thread is interrupted/joined.\n //\n-\n class CScheduler\n {\n public:\n@@ -62,8 +61,6 @@ class CScheduler\n      */\n     void MockForward(std::chrono::seconds delta_seconds);\n \n-    // To keep things as simple as possible, there is no unschedule.\n-\n     // Services the queue 'forever'. Should be run in a thread,\n     // and interrupted using boost::interrupt_thread\n     void serviceQueue();"
      }
    ]
  },
  {
    "sha": "fac43f9889f500bcb62d830c030dec42fe791031",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWM0M2Y5ODg5ZjUwMGJjYjYyZDgzMGMwMzBkZWM0MmZlNzkxMDMx",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-05-28T12:43:25Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-05-28T23:28:21Z"
      },
      "message": "scheduler: Replace stop(true) with StopWhenDrained()\n\nThis helps understanding the code at the call site without having to\nlook up the name of the argument or the default value.",
      "tree": {
        "sha": "143e5cfafa4a2850d16af163559c86da521c5e70",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/143e5cfafa4a2850d16af163559c86da521c5e70"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fac43f9889f500bcb62d830c030dec42fe791031",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUi79wv/WV+BxDFAF7T+wd9fcgnpiN190YsO4KpI0vlRnsBHn2mY8cIhRPA5nDlj\nCGxtrTTkeN3HNwVDwAOY+quUcnc6x5YZ59eLKqAwKEgXWUt4nGtaB3F26l93GGuN\nCoWejxLKNf1yEdKFdSKVAPaDU7IaVS4ohjdpt5DRNLh7fxxT7LqsCJ7xpOPO3Yp8\ngIs55OC7fVg1aeDUfCtNQgKHkY6mTnrIEBzX7YoJoSuVLpEXrnmvYq48w2Rq+jzA\n7ahiwQb+X//ASHlFFNwMp+eP8dyBQH8y15stvETGqbJaKW0t4oUuPfdQY8kInar2\n7PVpxlV99HHFLuVZ4isl9Wni1NkxwOEHNBwvG+pm9gaXq6Ovb7bzuL/tY0KtOYEv\nqWELZphUXeJ+IJiiqH2X7PKaDK/L67OTtuoPNA0vJlEwLOM4dDd43W+UNoHJmjLh\nJesgP/yf87C+9wRkpshKd+WeYBWO53UY2469zCZkNHjB9C15ErfN2k/Rdv+kVZEe\nEAN2PXCh\n=8AP2\n-----END PGP SIGNATURE-----",
        "payload": "tree 143e5cfafa4a2850d16af163559c86da521c5e70\nparent fa9cca0550f3d0ee8c276146f40007f76fbb97c2\nauthor MarcoFalke <falke.marco@gmail.com> 1590669805 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1590708501 -0400\n\nscheduler: Replace stop(true) with StopWhenDrained()\n\nThis helps understanding the code at the call site without having to\nlook up the name of the argument or the default value.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fac43f9889f500bcb62d830c030dec42fe791031",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fac43f9889f500bcb62d830c030dec42fe791031",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fac43f9889f500bcb62d830c030dec42fe791031/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fa9cca0550f3d0ee8c276146f40007f76fbb97c2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa9cca0550f3d0ee8c276146f40007f76fbb97c2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa9cca0550f3d0ee8c276146f40007f76fbb97c2"
      }
    ],
    "stats": {
      "total": 34,
      "additions": 15,
      "deletions": 19
    },
    "files": [
      {
        "sha": "c5d1788f7735476004242b79fee896f5d6b44f78",
        "filename": "src/scheduler.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 12,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac43f9889f500bcb62d830c030dec42fe791031/src/scheduler.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac43f9889f500bcb62d830c030dec42fe791031/src/scheduler.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/scheduler.cpp?ref=fac43f9889f500bcb62d830c030dec42fe791031",
        "patch": "@@ -68,18 +68,6 @@ void CScheduler::serviceQueue()\n     newTaskScheduled.notify_one();\n }\n \n-void CScheduler::stop(bool drain)\n-{\n-    {\n-        LOCK(newTaskMutex);\n-        if (drain)\n-            stopWhenEmpty = true;\n-        else\n-            stopRequested = true;\n-    }\n-    newTaskScheduled.notify_all();\n-}\n-\n void CScheduler::schedule(CScheduler::Function f, std::chrono::system_clock::time_point t)\n {\n     {"
      },
      {
        "sha": "63f20f1335d349a60945c9a6325d1751296de3d9",
        "filename": "src/scheduler.h",
        "status": "modified",
        "additions": 12,
        "deletions": 4,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac43f9889f500bcb62d830c030dec42fe791031/src/scheduler.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac43f9889f500bcb62d830c030dec42fe791031/src/scheduler.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/scheduler.h?ref=fac43f9889f500bcb62d830c030dec42fe791031",
        "patch": "@@ -65,10 +65,18 @@ class CScheduler\n     // and interrupted using boost::interrupt_thread\n     void serviceQueue();\n \n-    // Tell any threads running serviceQueue to stop as soon as they're\n-    // done servicing whatever task they're currently servicing (drain=false)\n-    // or when there is no work left to be done (drain=true)\n-    void stop(bool drain=false);\n+    /** Tell any threads running serviceQueue to stop as soon as the current task is done */\n+    void stop()\n+    {\n+        WITH_LOCK(newTaskMutex, stopRequested = true);\n+        newTaskScheduled.notify_all();\n+    }\n+    /** Tell any threads running serviceQueue to stop when there is no work left to be done */\n+    void StopWhenDrained()\n+    {\n+        WITH_LOCK(newTaskMutex, stopWhenEmpty = true);\n+        newTaskScheduled.notify_all();\n+    }\n \n     // Returns number of tasks waiting to be serviced,\n     // and first and last task times"
      },
      {
        "sha": "eb03caacdd65608bc61957c76fd461eb5c11aee2",
        "filename": "src/test/scheduler_tests.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac43f9889f500bcb62d830c030dec42fe791031/src/test/scheduler_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac43f9889f500bcb62d830c030dec42fe791031/src/test/scheduler_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/scheduler_tests.cpp?ref=fac43f9889f500bcb62d830c030dec42fe791031",
        "patch": "@@ -89,7 +89,7 @@ BOOST_AUTO_TEST_CASE(manythreads)\n     }\n \n     // Drain the task queue then exit threads\n-    microTasks.stop(true);\n+    microTasks.StopWhenDrained();\n     microThreads.join_all(); // ... wait until all the threads are done\n \n     int counterSum = 0;\n@@ -155,7 +155,7 @@ BOOST_AUTO_TEST_CASE(singlethreadedscheduler_ordered)\n     }\n \n     // finish up\n-    scheduler.stop(true);\n+    scheduler.StopWhenDrained();\n     threads.join_all();\n \n     BOOST_CHECK_EQUAL(counter1, 100);\n@@ -186,7 +186,7 @@ BOOST_AUTO_TEST_CASE(mockforward)\n     scheduler.MockForward(std::chrono::minutes{5});\n \n     // ensure scheduler has chance to process all tasks queued for before 1 ms from now.\n-    scheduler.scheduleFromNow([&scheduler] { scheduler.stop(false); }, std::chrono::milliseconds{1});\n+    scheduler.scheduleFromNow([&scheduler] { scheduler.stop(); }, std::chrono::milliseconds{1});\n     scheduler_thread.join();\n \n     // check that the queue only has one job remaining"
      }
    ]
  },
  {
    "sha": "fa3d41b5ab8fe62bc2e36c3e1211aace69e6da65",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTNkNDFiNWFiOGZlNjJiYzJlMzZjM2UxMjExYWFjZTY5ZTZkYTY1",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-05-28T13:03:11Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-05-28T23:28:43Z"
      },
      "message": "doc: Switch scheduler to doxygen comments",
      "tree": {
        "sha": "01720b8b0cd82d6834bc2d44b335616806296f39",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/01720b8b0cd82d6834bc2d44b335616806296f39"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa3d41b5ab8fe62bc2e36c3e1211aace69e6da65",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUiTjgv6A2yhHWyZEb6n4cFw0T5fhZJt0JX5siv0hxp/Jz4f6p+Tr9MHmq7ED18J\nTEXj68K6PXpCybsiqNfverXDyjz/ZX2cMxwxzmqN7gLRNbOXHBQifM4Zl2ynRH2i\nqBpBkOaBBAP3CvlXOs/WhWeh9UeGHhAM3rcMkgzdmNnxxau8njgkCunPDLouVrMS\nGDyPGSKa2xSA1XMnDD9G4r9+V/lX+GD1/hiyMDdvN9zWXeexPukAQLCw29SZIol9\n7R8gE6Iq5p1oAcZEBEQ4MElLlbesPzT16wd6EAiyt6pFr+j/dUEaMQbbwpu0/KlZ\nKkW6MWUzEdU5YMysBJp0+4alv0rI+1dxkzpeLc7ciOwRVpwug0qw1Ipqb7Hj1YFV\nzcTRmBpUvyqwWvXXP4BslWKYLgKc/mRm2b3GKKHn1jq6uG3rR3ZNBj++voNhKPzr\nrb3Km54vB7P0/8K6wxT+aPZYF8ldDoYGGhmEM2Uaumq7/NIkKR7UDB18H6i1+/uG\nDyqfX5kD\n=xkFF\n-----END PGP SIGNATURE-----",
        "payload": "tree 01720b8b0cd82d6834bc2d44b335616806296f39\nparent fac43f9889f500bcb62d830c030dec42fe791031\nauthor MarcoFalke <falke.marco@gmail.com> 1590670991 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1590708523 -0400\n\ndoc: Switch scheduler to doxygen comments\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa3d41b5ab8fe62bc2e36c3e1211aace69e6da65",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa3d41b5ab8fe62bc2e36c3e1211aace69e6da65",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa3d41b5ab8fe62bc2e36c3e1211aace69e6da65/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fac43f9889f500bcb62d830c030dec42fe791031",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fac43f9889f500bcb62d830c030dec42fe791031",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fac43f9889f500bcb62d830c030dec42fe791031"
      }
    ],
    "stats": {
      "total": 56,
      "additions": 31,
      "deletions": 25
    },
    "files": [
      {
        "sha": "ffb2572f207b0b8ccf4f8931b32bd37cdebe3737",
        "filename": "src/scheduler.h",
        "status": "modified",
        "additions": 31,
        "deletions": 25,
        "changes": 56,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa3d41b5ab8fe62bc2e36c3e1211aace69e6da65/src/scheduler.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa3d41b5ab8fe62bc2e36c3e1211aace69e6da65/src/scheduler.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/scheduler.h?ref=fa3d41b5ab8fe62bc2e36c3e1211aace69e6da65",
        "patch": "@@ -12,23 +12,23 @@\n \n #include <sync.h>\n \n-//\n-// Simple class for background tasks that should be run\n-// periodically or once \"after a while\"\n-//\n-// Usage:\n-//\n-// CScheduler* s = new CScheduler();\n-// s->scheduleFromNow(doSomething, std::chrono::milliseconds{11}); // Assuming a: void doSomething() { }\n-// s->scheduleFromNow([=] { this->func(argument); }, std::chrono::milliseconds{3});\n-// std::thread* t = new std::thread([&] { s->serviceQueue(); });\n-//\n-// ... then at program shutdown, make sure to call stop() to clean up the thread(s) running serviceQueue:\n-// s->stop();\n-// t->join();\n-// delete t;\n-// delete s; // Must be done after thread is interrupted/joined.\n-//\n+/**\n+ * Simple class for background tasks that should be run\n+ * periodically or once \"after a while\"\n+ *\n+ * Usage:\n+ *\n+ * CScheduler* s = new CScheduler();\n+ * s->scheduleFromNow(doSomething, std::chrono::milliseconds{11}); // Assuming a: void doSomething() { }\n+ * s->scheduleFromNow([=] { this->func(argument); }, std::chrono::milliseconds{3});\n+ * std::thread* t = new std::thread([&] { s->serviceQueue(); });\n+ *\n+ * ... then at program shutdown, make sure to call stop() to clean up the thread(s) running serviceQueue:\n+ * s->stop();\n+ * t->join();\n+ * delete t;\n+ * delete s; // Must be done after thread is interrupted/joined.\n+ */\n class CScheduler\n {\n public:\n@@ -37,7 +37,7 @@ class CScheduler\n \n     typedef std::function<void()> Function;\n \n-    // Call func at/after time t\n+    /** Call func at/after time t */\n     void schedule(Function f, std::chrono::system_clock::time_point t);\n \n     /** Call f once after the delta has passed */\n@@ -61,8 +61,10 @@ class CScheduler\n      */\n     void MockForward(std::chrono::seconds delta_seconds);\n \n-    // Services the queue 'forever'. Should be run in a thread,\n-    // and interrupted using boost::interrupt_thread\n+    /**\n+     * Services the queue 'forever'. Should be run in a thread,\n+     * and interrupted using boost::interrupt_thread\n+     */\n     void serviceQueue();\n \n     /** Tell any threads running serviceQueue to stop as soon as the current task is done */\n@@ -78,12 +80,14 @@ class CScheduler\n         newTaskScheduled.notify_all();\n     }\n \n-    // Returns number of tasks waiting to be serviced,\n-    // and first and last task times\n+    /**\n+     * Returns number of tasks waiting to be serviced,\n+     * and first and last task times\n+     */\n     size_t getQueueInfo(std::chrono::system_clock::time_point &first,\n                         std::chrono::system_clock::time_point &last) const;\n \n-    // Returns true if there are threads actively running in serviceQueue()\n+    /** Returns true if there are threads actively running in serviceQueue() */\n     bool AreThreadsServicingQueue() const;\n \n private:\n@@ -128,8 +132,10 @@ class SingleThreadedSchedulerClient {\n      */\n     void AddToProcessQueue(std::function<void ()> func);\n \n-    // Processes all remaining queue members on the calling thread, blocking until queue is empty\n-    // Must be called after the CScheduler has no remaining processing threads!\n+    /**\n+     * Processes all remaining queue members on the calling thread, blocking until queue is empty\n+     * Must be called after the CScheduler has no remaining processing threads!\n+     */\n     void EmptyQueue();\n \n     size_t CallbacksPending();"
      }
    ]
  },
  {
    "sha": "fa8337fcdbcab8368d5bf111c4b2e5acf25e6e22",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTgzMzdmY2RiY2FiODM2OGQ1YmYxMTFjNGIyZTVhY2YyNWU2ZTIy",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-05-28T13:16:32Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-06-21T10:02:59Z"
      },
      "message": "clang-format scheduler\n\nCan easily be reviewed with the git options\n--ignore-all-space --word-diff-regex=. -U0",
      "tree": {
        "sha": "f19894bab7c954fe39acec3bee40417f18a1e338",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f19894bab7c954fe39acec3bee40417f18a1e338"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa8337fcdbcab8368d5bf111c4b2e5acf25e6e22",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUgOwgv/Rg6GARNckaO2OwXtQ/he5QbBWmT1WUTTzkUww5G9S5XzMpYCHJl9bk30\n/gL4Rw40x9ueaQHhQNi6biJWGyaHrUHZALjLu/uNoIInkeyy5+9wWa/Bayu9c5km\nWA2VGewuw4A3cbgjxuhHZXEv/DBdVA7i/rusANIyPM3ypw9xT6GqAHe/u+3Nlq0e\n+bbyEJXbN0q/B1Yf8iQfh8OJoOOsczr7drE8kNJ1gjdZNZdjqUBOGUbjGnlv4QvF\nKCIZZwyJ0PO6dOCT0Cjg+A5bWakZggBXZXaUjitUIJVa0LdQ0SQRnc961/Rh1Bo2\nE2XF7Uw6f3/ldYnXT+9Osdo3Mr101usRUVVPShGS0q340peglGK7tTWVsIcR4epB\nRTjfD3IKMKXVeq90e5q/03iDy7JzNfAWbeadcoH5eYHUMHf04Uk//KL728/obWIw\ntuGkQv1s2pfvJJWgsKiqa4oQwKvBnYNSfugR8AZJ7pX0hhaC3QdL4rfLWNoddbJb\nGpy729Mt\n=3wpO\n-----END PGP SIGNATURE-----",
        "payload": "tree f19894bab7c954fe39acec3bee40417f18a1e338\nparent fa3d41b5ab8fe62bc2e36c3e1211aace69e6da65\nauthor MarcoFalke <falke.marco@gmail.com> 1590671792 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1592733779 -0400\n\nclang-format scheduler\n\nCan easily be reviewed with the git options\n--ignore-all-space --word-diff-regex=. -U0\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa8337fcdbcab8368d5bf111c4b2e5acf25e6e22",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa8337fcdbcab8368d5bf111c4b2e5acf25e6e22",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa8337fcdbcab8368d5bf111c4b2e5acf25e6e22/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fa3d41b5ab8fe62bc2e36c3e1211aace69e6da65",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa3d41b5ab8fe62bc2e36c3e1211aace69e6da65",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa3d41b5ab8fe62bc2e36c3e1211aace69e6da65"
      }
    ],
    "stats": {
      "total": 42,
      "additions": 25,
      "deletions": 17
    },
    "files": [
      {
        "sha": "7c361bf26f9fd7142466cc3722b826310f6a71c6",
        "filename": "src/scheduler.cpp",
        "status": "modified",
        "additions": 17,
        "deletions": 10,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa8337fcdbcab8368d5bf111c4b2e5acf25e6e22/src/scheduler.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa8337fcdbcab8368d5bf111c4b2e5acf25e6e22/src/scheduler.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/scheduler.cpp?ref=fa8337fcdbcab8368d5bf111c4b2e5acf25e6e22",
        "patch": "@@ -110,8 +110,8 @@ void CScheduler::scheduleEvery(CScheduler::Function f, std::chrono::milliseconds\n     scheduleFromNow([=] { Repeat(*this, f, delta); }, delta);\n }\n \n-size_t CScheduler::getQueueInfo(std::chrono::system_clock::time_point &first,\n-                             std::chrono::system_clock::time_point &last) const\n+size_t CScheduler::getQueueInfo(std::chrono::system_clock::time_point& first,\n+                                std::chrono::system_clock::time_point& last) const\n {\n     LOCK(newTaskMutex);\n     size_t result = taskQueue.size();\n@@ -122,13 +122,15 @@ size_t CScheduler::getQueueInfo(std::chrono::system_clock::time_point &first,\n     return result;\n }\n \n-bool CScheduler::AreThreadsServicingQueue() const {\n+bool CScheduler::AreThreadsServicingQueue() const\n+{\n     LOCK(newTaskMutex);\n     return nThreadsServicingQueue;\n }\n \n \n-void SingleThreadedSchedulerClient::MaybeScheduleProcessQueue() {\n+void SingleThreadedSchedulerClient::MaybeScheduleProcessQueue()\n+{\n     {\n         LOCK(m_cs_callbacks_pending);\n         // Try to avoid scheduling too many copies here, but if we\n@@ -140,8 +142,9 @@ void SingleThreadedSchedulerClient::MaybeScheduleProcessQueue() {\n     m_pscheduler->schedule(std::bind(&SingleThreadedSchedulerClient::ProcessQueue, this), std::chrono::system_clock::now());\n }\n \n-void SingleThreadedSchedulerClient::ProcessQueue() {\n-    std::function<void ()> callback;\n+void SingleThreadedSchedulerClient::ProcessQueue()\n+{\n+    std::function<void()> callback;\n     {\n         LOCK(m_cs_callbacks_pending);\n         if (m_are_callbacks_running) return;\n@@ -157,7 +160,8 @@ void SingleThreadedSchedulerClient::ProcessQueue() {\n     struct RAIICallbacksRunning {\n         SingleThreadedSchedulerClient* instance;\n         explicit RAIICallbacksRunning(SingleThreadedSchedulerClient* _instance) : instance(_instance) {}\n-        ~RAIICallbacksRunning() {\n+        ~RAIICallbacksRunning()\n+        {\n             {\n                 LOCK(instance->m_cs_callbacks_pending);\n                 instance->m_are_callbacks_running = false;\n@@ -169,7 +173,8 @@ void SingleThreadedSchedulerClient::ProcessQueue() {\n     callback();\n }\n \n-void SingleThreadedSchedulerClient::AddToProcessQueue(std::function<void ()> func) {\n+void SingleThreadedSchedulerClient::AddToProcessQueue(std::function<void()> func)\n+{\n     assert(m_pscheduler);\n \n     {\n@@ -179,7 +184,8 @@ void SingleThreadedSchedulerClient::AddToProcessQueue(std::function<void ()> fun\n     MaybeScheduleProcessQueue();\n }\n \n-void SingleThreadedSchedulerClient::EmptyQueue() {\n+void SingleThreadedSchedulerClient::EmptyQueue()\n+{\n     assert(!m_pscheduler->AreThreadsServicingQueue());\n     bool should_continue = true;\n     while (should_continue) {\n@@ -189,7 +195,8 @@ void SingleThreadedSchedulerClient::EmptyQueue() {\n     }\n }\n \n-size_t SingleThreadedSchedulerClient::CallbacksPending() {\n+size_t SingleThreadedSchedulerClient::CallbacksPending()\n+{\n     LOCK(m_cs_callbacks_pending);\n     return m_callbacks_pending.size();\n }"
      },
      {
        "sha": "d7fe00d1b47bfee569c98c5c78310993ff5c47ca",
        "filename": "src/scheduler.h",
        "status": "modified",
        "additions": 8,
        "deletions": 7,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa8337fcdbcab8368d5bf111c4b2e5acf25e6e22/src/scheduler.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa8337fcdbcab8368d5bf111c4b2e5acf25e6e22/src/scheduler.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/scheduler.h?ref=fa8337fcdbcab8368d5bf111c4b2e5acf25e6e22",
        "patch": "@@ -84,8 +84,8 @@ class CScheduler\n      * Returns number of tasks waiting to be serviced,\n      * and first and last task times\n      */\n-    size_t getQueueInfo(std::chrono::system_clock::time_point &first,\n-                        std::chrono::system_clock::time_point &last) const;\n+    size_t getQueueInfo(std::chrono::system_clock::time_point& first,\n+                        std::chrono::system_clock::time_point& last) const;\n \n     /** Returns true if there are threads actively running in serviceQueue() */\n     bool AreThreadsServicingQueue() const;\n@@ -110,27 +110,28 @@ class CScheduler\n  * B() will be able to observe all of the effects of callback A() which executed\n  * before it.\n  */\n-class SingleThreadedSchedulerClient {\n+class SingleThreadedSchedulerClient\n+{\n private:\n-    CScheduler *m_pscheduler;\n+    CScheduler* m_pscheduler;\n \n     RecursiveMutex m_cs_callbacks_pending;\n-    std::list<std::function<void ()>> m_callbacks_pending GUARDED_BY(m_cs_callbacks_pending);\n+    std::list<std::function<void()>> m_callbacks_pending GUARDED_BY(m_cs_callbacks_pending);\n     bool m_are_callbacks_running GUARDED_BY(m_cs_callbacks_pending) = false;\n \n     void MaybeScheduleProcessQueue();\n     void ProcessQueue();\n \n public:\n-    explicit SingleThreadedSchedulerClient(CScheduler *pschedulerIn) : m_pscheduler(pschedulerIn) {}\n+    explicit SingleThreadedSchedulerClient(CScheduler* pschedulerIn) : m_pscheduler(pschedulerIn) {}\n \n     /**\n      * Add a callback to be executed. Callbacks are executed serially\n      * and memory is release-acquire consistent between callback executions.\n      * Practically, this means that callbacks can behave as if they are executed\n      * in order by a single thread.\n      */\n-    void AddToProcessQueue(std::function<void ()> func);\n+    void AddToProcessQueue(std::function<void()> func);\n \n     /**\n      * Processes all remaining queue members on the calling thread, blocking until queue is empty"
      }
    ]
  }
]