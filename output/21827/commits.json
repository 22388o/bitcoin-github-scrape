[
  {
    "sha": "ff11a7b3d76ebdbb356ecabe91454c4a96b590bd",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmZjExYTdiM2Q3NmViZGJiMzU2ZWNhYmU5MTQ1NGM0YTk2YjU5MGJk",
    "commit": {
      "author": {
        "name": "R E Broadley",
        "email": "rebroad+github@gmail.com",
        "date": "2021-05-01T15:50:43Z"
      },
      "committer": {
        "name": "R E Broadley",
        "email": "rebroad+github@gmail.com",
        "date": "2021-05-01T22:24:06Z"
      },
      "message": "Display progress of LoadBlockDB() on splash screen",
      "tree": {
        "sha": "cb4581d94af6b6fda1adc7747633bd71815448e9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cb4581d94af6b6fda1adc7747633bd71815448e9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ff11a7b3d76ebdbb356ecabe91454c4a96b590bd",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ff11a7b3d76ebdbb356ecabe91454c4a96b590bd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ff11a7b3d76ebdbb356ecabe91454c4a96b590bd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ff11a7b3d76ebdbb356ecabe91454c4a96b590bd/comments",
    "author": {
      "login": "rebroad",
      "id": 1530283,
      "node_id": "MDQ6VXNlcjE1MzAyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1530283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rebroad",
      "html_url": "https://github.com/rebroad",
      "followers_url": "https://api.github.com/users/rebroad/followers",
      "following_url": "https://api.github.com/users/rebroad/following{/other_user}",
      "gists_url": "https://api.github.com/users/rebroad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rebroad/subscriptions",
      "organizations_url": "https://api.github.com/users/rebroad/orgs",
      "repos_url": "https://api.github.com/users/rebroad/repos",
      "events_url": "https://api.github.com/users/rebroad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rebroad/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "rebroad",
      "id": 1530283,
      "node_id": "MDQ6VXNlcjE1MzAyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1530283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rebroad",
      "html_url": "https://github.com/rebroad",
      "followers_url": "https://api.github.com/users/rebroad/followers",
      "following_url": "https://api.github.com/users/rebroad/following{/other_user}",
      "gists_url": "https://api.github.com/users/rebroad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rebroad/subscriptions",
      "organizations_url": "https://api.github.com/users/rebroad/orgs",
      "repos_url": "https://api.github.com/users/rebroad/repos",
      "events_url": "https://api.github.com/users/rebroad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rebroad/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d22e7ee93313b13365bd14a5fffeb055cff4dcd2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d22e7ee93313b13365bd14a5fffeb055cff4dcd2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d22e7ee93313b13365bd14a5fffeb055cff4dcd2"
      }
    ],
    "stats": {
      "total": 39,
      "additions": 34,
      "deletions": 5
    },
    "files": [
      {
        "sha": "43feefe5898a27ab366124daf9cacbd6eb2651ad",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ff11a7b3d76ebdbb356ecabe91454c4a96b590bd/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ff11a7b3d76ebdbb356ecabe91454c4a96b590bd/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=ff11a7b3d76ebdbb356ecabe91454c4a96b590bd",
        "patch": "@@ -1387,8 +1387,6 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n         };\n         bilingual_str strLoadError;\n \n-        uiInterface.InitMessage(_(\"Loading block index...\").translated);\n-\n         do {\n             const int64_t load_block_index_start_time = GetTimeMillis();\n             try {"
      },
      {
        "sha": "ea1c565948e79b3bf08338b6c5c28a2722a6b5ce",
        "filename": "src/txdb.cpp",
        "status": "modified",
        "additions": 17,
        "deletions": 1,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ff11a7b3d76ebdbb356ecabe91454c4a96b590bd/src/txdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ff11a7b3d76ebdbb356ecabe91454c4a96b590bd/src/txdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txdb.cpp?ref=ff11a7b3d76ebdbb356ecabe91454c4a96b590bd",
        "patch": "@@ -246,14 +246,28 @@ bool CBlockTreeDB::ReadFlag(const std::string &name, bool &fValue) {\n     return true;\n }\n \n-bool CBlockTreeDB::LoadBlockIndexGuts(const Consensus::Params& consensusParams, std::function<CBlockIndex*(const uint256&)> insertBlockIndex)\n+bool CBlockTreeDB::LoadBlockIndexGuts(const Consensus::Params& consensusParams, std::function<CBlockIndex*(const uint256&)> insertBlockIndex, int& nHighest)\n {\n     std::unique_ptr<CDBIterator> pcursor(NewIterator());\n \n     pcursor->Seek(std::make_pair(DB_BLOCK_INDEX, uint256()));\n \n+    int64_t nNow;\n+    int64_t nLastNow = 0;\n+    int nCount = 0;\n+    int nLastPercent = -1;\n     // Load m_block_index\n     while (pcursor->Valid()) {\n+        nNow = GetTime();\n+        if (nNow >= nLastNow + 5) {\n+            int nPercent = 100 * nCount / nHighest;\n+            if (nPercent > nLastPercent) {\n+                uiInterface.InitMessage(strprintf(_(\"Loading blocks... %d%%\").translated, (100 * nCount) / nHighest));\n+                nLastPercent = nPercent;\n+            }\n+            nLastNow = nNow;\n+        }\n+        nCount++;\n         if (ShutdownRequested()) return false;\n         std::pair<char, uint256> key;\n         if (pcursor->GetKey(key) && key.first == DB_BLOCK_INDEX) {\n@@ -263,6 +277,8 @@ bool CBlockTreeDB::LoadBlockIndexGuts(const Consensus::Params& consensusParams,\n                 CBlockIndex* pindexNew = insertBlockIndex(diskindex.GetBlockHash());\n                 pindexNew->pprev          = insertBlockIndex(diskindex.hashPrev);\n                 pindexNew->nHeight        = diskindex.nHeight;\n+                if (diskindex.nHeight > nHighest)\n+                    nHighest = diskindex.nHeight;\n                 pindexNew->nFile          = diskindex.nFile;\n                 pindexNew->nDataPos       = diskindex.nDataPos;\n                 pindexNew->nUndoPos       = diskindex.nUndoPos;"
      },
      {
        "sha": "7ba525d4b7f72af00202bb1a092fe036aa749a78",
        "filename": "src/txdb.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ff11a7b3d76ebdbb356ecabe91454c4a96b590bd/src/txdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ff11a7b3d76ebdbb356ecabe91454c4a96b590bd/src/txdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txdb.h?ref=ff11a7b3d76ebdbb356ecabe91454c4a96b590bd",
        "patch": "@@ -105,7 +105,7 @@ class CBlockTreeDB : public CDBWrapper\n     void ReadReindexing(bool &fReindexing);\n     bool WriteFlag(const std::string &name, bool fValue);\n     bool ReadFlag(const std::string &name, bool &fValue);\n-    bool LoadBlockIndexGuts(const Consensus::Params& consensusParams, std::function<CBlockIndex*(const uint256&)> insertBlockIndex);\n+    bool LoadBlockIndexGuts(const Consensus::Params& consensusParams, std::function<CBlockIndex*(const uint256&)> insertBlockIndex, int& nHighest);\n };\n \n #endif // BITCOIN_TXDB_H"
      },
      {
        "sha": "36531b8d1b5d765df32399bdfd360c746cb616af",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 1,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ff11a7b3d76ebdbb356ecabe91454c4a96b590bd/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ff11a7b3d76ebdbb356ecabe91454c4a96b590bd/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=ff11a7b3d76ebdbb356ecabe91454c4a96b590bd",
        "patch": "@@ -3937,7 +3937,8 @@ bool BlockManager::LoadBlockIndex(\n     CBlockTreeDB& blocktree,\n     std::set<CBlockIndex*, CBlockIndexWorkComparator>& block_index_candidates)\n {\n-    if (!blocktree.LoadBlockIndexGuts(consensus_params, [this](const uint256& hash) EXCLUSIVE_LOCKS_REQUIRED(cs_main) { return this->InsertBlockIndex(hash); }))\n+    int nHighest = 1;\n+    if (!blocktree.LoadBlockIndexGuts(consensus_params, [this](const uint256& hash) EXCLUSIVE_LOCKS_REQUIRED(cs_main) { return this->InsertBlockIndex(hash); }, nHighest))\n         return false;\n \n     // Calculate nChainWork\n@@ -3949,10 +3950,24 @@ bool BlockManager::LoadBlockIndex(\n         vSortedByHeight.push_back(std::make_pair(pindex->nHeight, pindex));\n     }\n     sort(vSortedByHeight.begin(), vSortedByHeight.end());\n+    int64_t nNow;\n+    int64_t nLastNow = 0;\n+    int nHeight = 0;\n+    int nLastPercent = -1;\n     for (const std::pair<int, CBlockIndex*>& item : vSortedByHeight)\n     {\n+        nNow = GetTime();\n+        if (nNow >= nLastNow + 5) {\n+            int nPercent = 100 * nHeight / nHighest;\n+            if (nPercent > nLastPercent) {\n+                uiInterface.InitMessage(strprintf(_(\"Indexing blocks... %d%%\").translated, (100 * nHeight) / nHighest));\n+                nLastPercent = nPercent;\n+            }\n+            nLastNow = nNow;\n+        }\n         if (ShutdownRequested()) return false;\n         CBlockIndex* pindex = item.second;\n+        nHeight = pindex->nHeight;\n         pindex->nChainWork = (pindex->pprev ? pindex->pprev->nChainWork : 0) + GetBlockProof(*pindex);\n         pindex->nTimeMax = (pindex->pprev ? std::max(pindex->pprev->nTimeMax, pindex->nTime) : pindex->nTime);\n         // We can link the chain of blocks for which we've received transactions at some point."
      }
    ]
  }
]