jonatack,2020-09-04 20:40:59,"Thanks for looking at this, will review.",https://github.com/bitcoin/bitcoin/pull/19876#issuecomment-687372089,687372089,
achow101,2020-09-04 21:58:44,"We currently track what wallets are currently loading (see `CWallet::LoadWallet`) to avoid a different race condition. I think we could reuse that for the startup wallet loading. Then in the RPC, `GetWalletForJSONRPCRequest` should check that the wallet isn't in the list of loading wallets. If it is, it should raise an exception. I don't think that returning NullUniValue is the correct way to hand",https://github.com/bitcoin/bitcoin/pull/19876#issuecomment-687413170,687413170,
fjahr,2020-09-05 18:09:13,"> Just needs a call to `syncwithvalidationinterfacequeue` before `getbalance`?\n\nYes, this fixes the test. Initially, I was hoping I could fix the test and the underlying race issue in one PR but since the race fix is a bit more complicated I think it makes sense to split it from the test fix, so the CI failures stop as fast as possible. I opened it in #19887 and made you co-author.",https://github.com/bitcoin/bitcoin/pull/19876#issuecomment-687643549,687643549,
promag,2020-09-05 19:53:59,"Is this really a bug? The wallet is just ""catching up"" (?)",https://github.com/bitcoin/bitcoin/pull/19876#issuecomment-687655400,687655400,
fjahr,2020-09-05 20:01:46,"> Is this really a bug? The wallet is just ""catching up"" (?)\n\nYes, it's catching up but while it's doing that it responds with a false balance to a `getbalance` request, which could mean the wallet has been hacked or it's broken. Instead, there should be an actual error that indicates that it's catching up or just anything that does not look like a real balance.",https://github.com/bitcoin/bitcoin/pull/19876#issuecomment-687656316,687656316,
promag,2020-09-05 20:30:44,"The balance is fine I think, the wallet isn't aware of the mempool yet right? So, the wallet itself is loaded, but not synced.",https://github.com/bitcoin/bitcoin/pull/19876#issuecomment-687659313,687659313,
fjahr,2020-09-05 21:21:26,"> The balance is fine I think, the wallet isn't aware of the mempool yet right? So, the wallet itself is loaded, but not synced.\n\nAs a user, I would expect that the wallet would report my own change output in the balance even if the mempool is still syncing. But I will have to review that code and maybe I am off on that. The many reports in the CI failure issue in the span of 2 days suggest th",https://github.com/bitcoin/bitcoin/pull/19876#issuecomment-687664726,687664726,
MarcoFalke,2020-09-06 11:08:25,"When this bug is fixed, it would be good to remove the temporary workarounds. `git grep -W syncwithval test`. Specifically:\n\n```\ntest/functional/mempool_persist.py-        # Verify accounting of mempool transactions after restart is correct\ntest/functional/mempool_persist.py:        self.nodes[2].syncwithvalidationinterfacequeue()  # Flush mempool to wallet\ntest/functional/mempool_persis",https://github.com/bitcoin/bitcoin/pull/19876#issuecomment-687758589,687758589,
fjahr,2020-09-18 21:54:13,I think this is ready for review now. It got harder to reproduce the issue with my script for some reason I can not explain. But through detailed logging I am certain that the issue is that `postInitProcess()` has not run yet after startup and thus the transactions (our own with change) that are in the mempool are not marked as in the mempool. This means they are not trusted and don't get included,https://github.com/bitcoin/bitcoin/pull/19876#issuecomment-695102906,695102906,
DrahtBot,2020-09-20 02:28:23,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #20243 (rpc, wallet: Expose wallet id in getwalletinfo RPC output by hebasto)\n* #20205 (wallet: Properly support a wallet",https://github.com/bitcoin/bitcoin/pull/19876#issuecomment-695528291,695528291,
DrahtBot,2020-12-02 00:33:43,"<!--cf906140f33d8803c4a75a2196329ecb-->\nüêô This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a ""draft"".</sub>",https://github.com/bitcoin/bitcoin/pull/19876#issuecomment-736909553,736909553,
promag,2020-10-13 22:34:32,"d37756f380b27d259a7818078ddf02caa0a4578a\n\nShould be private?",https://github.com/bitcoin/bitcoin/pull/19876#discussion_r504296929,504296929,src/wallet/wallet.h
promag,2020-10-13 22:35:54,"d37756f380b27d259a7818078ddf02caa0a4578a\n\nJust call `pwallet->syncMempool()` and early return there - no need to expose mempool synced flag.",https://github.com/bitcoin/bitcoin/pull/19876#discussion_r504297506,504297506,src/wallet/rpcwallet.cpp
promag,2020-10-13 22:36:11,"d37756f380b27d259a7818078ddf02caa0a4578a\n\nMake it atomic? Currently accessed in multiple threads.",https://github.com/bitcoin/bitcoin/pull/19876#discussion_r504297618,504297618,src/wallet/wallet.h
promag,2020-10-13 22:43:36,"d37756f380b27d259a7818078ddf02caa0a4578a\n\nNAK the dereferencing because the wallet can be destroyed after the call, like\n```cpp\nCWallet* const pwallet = GetReadyWallet(GetWalletForJSONRPCRequest(request));\n```\nAlso it's not clear the function does the dereference.",https://github.com/bitcoin/bitcoin/pull/19876#discussion_r504300118,504300118,src/wallet/rpcwallet.cpp
