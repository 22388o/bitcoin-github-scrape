[
  {
    "sha": "f3552da81393a8e78ce3e2afed0b9c9d1ff5cee0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmMzU1MmRhODEzOTNhOGU3OGNlM2UyYWZlZDBiOWM5ZDFmZjVjZWUw",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2016-09-12T19:04:20Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2016-09-14T17:14:04Z"
      },
      "message": "net: fix maxuploadtarget setting\n\nThis was broken by 63cafa6329e1a.\n\nNote that while this fixes the settings, it doesn't fix the actual usage of\n-maxuploadtarget completely, as there is currently a bug in the\nnOptimisticBytesWritten accounting that causes a delayed response if the target\nis reached. That bug will be addressed separately.",
      "tree": {
        "sha": "84ba797f7f67e1790d156b3425648249c446bcf2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/84ba797f7f67e1790d156b3425648249c446bcf2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f3552da81393a8e78ce3e2afed0b9c9d1ff5cee0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f3552da81393a8e78ce3e2afed0b9c9d1ff5cee0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f3552da81393a8e78ce3e2afed0b9c9d1ff5cee0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f3552da81393a8e78ce3e2afed0b9c9d1ff5cee0/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a82e5d8220bbc8b5d786bed99b0876f530b9b7cc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a82e5d8220bbc8b5d786bed99b0876f530b9b7cc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a82e5d8220bbc8b5d786bed99b0876f530b9b7cc"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 14,
      "deletions": 3
    },
    "files": [
      {
        "sha": "dd3fbf8502602fb69114ad87db0fda8de68be300",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 1,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f3552da81393a8e78ce3e2afed0b9c9d1ff5cee0/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f3552da81393a8e78ce3e2afed0b9c9d1ff5cee0/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=f3552da81393a8e78ce3e2afed0b9c9d1ff5cee0",
        "patch": "@@ -1249,8 +1249,11 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n         RegisterValidationInterface(pzmqNotificationInterface);\n     }\n #endif\n+    uint64_t nMaxOutboundLimit = 0; //unlimited unless -maxuploadtarget is set\n+    uint64_t nMaxOutboundTimeframe = MAX_UPLOAD_TIMEFRAME;\n+\n     if (mapArgs.count(\"-maxuploadtarget\")) {\n-        connman.SetMaxOutboundTarget(GetArg(\"-maxuploadtarget\", DEFAULT_MAX_UPLOAD_TARGET)*1024*1024);\n+        nMaxOutboundLimit = GetArg(\"-maxuploadtarget\", DEFAULT_MAX_UPLOAD_TARGET)*1024*1024;\n     }\n \n     // ********************************************************* Step 7: load block chain\n@@ -1533,6 +1536,9 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n     connOptions.nSendBufferMaxSize = 1000*GetArg(\"-maxsendbuffer\", DEFAULT_MAXSENDBUFFER);\n     connOptions.nReceiveFloodSize = 1000*GetArg(\"-maxreceivebuffer\", DEFAULT_MAXRECEIVEBUFFER);\n \n+    connOptions.nMaxOutboundTimeframe = nMaxOutboundTimeframe;\n+    connOptions.nMaxOutboundLimit = nMaxOutboundLimit;\n+\n     if(!connman.Start(threadGroup, scheduler, strNodeError, connOptions))\n         return InitError(strNodeError);\n "
      },
      {
        "sha": "ac64b28ea86a7e9d511558ebf99653ce4807d8c4",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f3552da81393a8e78ce3e2afed0b9c9d1ff5cee0/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f3552da81393a8e78ce3e2afed0b9c9d1ff5cee0/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=f3552da81393a8e78ce3e2afed0b9c9d1ff5cee0",
        "patch": "@@ -2046,9 +2046,7 @@ bool CConnman::Start(boost::thread_group& threadGroup, CScheduler& scheduler, st\n {\n     nTotalBytesRecv = 0;\n     nTotalBytesSent = 0;\n-    nMaxOutboundLimit = 0;\n     nMaxOutboundTotalBytesSentInCycle = 0;\n-    nMaxOutboundTimeframe = 60*60*24; //1 day\n     nMaxOutboundCycleStartTime = 0;\n \n     nRelevantServices = connOptions.nRelevantServices;\n@@ -2060,6 +2058,9 @@ bool CConnman::Start(boost::thread_group& threadGroup, CScheduler& scheduler, st\n     nSendBufferMaxSize = connOptions.nSendBufferMaxSize;\n     nReceiveFloodSize = connOptions.nSendBufferMaxSize;\n \n+    nMaxOutboundLimit = connOptions.nMaxOutboundLimit;\n+    nMaxOutboundTimeframe = connOptions.nMaxOutboundTimeframe;\n+\n     SetBestHeight(connOptions.nBestHeight);\n \n     clientInterface = connOptions.uiInterface;"
      },
      {
        "sha": "dbed8b3dd5ccbca3f9ec2d928f105a8747f19e44",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f3552da81393a8e78ce3e2afed0b9c9d1ff5cee0/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f3552da81393a8e78ce3e2afed0b9c9d1ff5cee0/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=f3552da81393a8e78ce3e2afed0b9c9d1ff5cee0",
        "patch": "@@ -72,6 +72,8 @@ static const size_t SETASKFOR_MAX_SZ = 2 * MAX_INV_SZ;\n static const unsigned int DEFAULT_MAX_PEER_CONNECTIONS = 125;\n /** The default for -maxuploadtarget. 0 = Unlimited */\n static const uint64_t DEFAULT_MAX_UPLOAD_TARGET = 0;\n+/** The default timeframe for -maxuploadtarget. 1 day. */\n+static const uint64_t MAX_UPLOAD_TIMEFRAME = 60 * 60 * 24;\n /** Default for blocks only*/\n static const bool DEFAULT_BLOCKSONLY = false;\n \n@@ -120,6 +122,8 @@ class CConnman\n         CClientUIInterface* uiInterface = nullptr;\n         unsigned int nSendBufferMaxSize = 0;\n         unsigned int nReceiveFloodSize = 0;\n+        uint64_t nMaxOutboundTimeframe = 0;\n+        uint64_t nMaxOutboundLimit = 0;\n     };\n     CConnman();\n     ~CConnman();"
      }
    ]
  }
]