DrahtBot,2020-05-19 20:20:41,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#23127](https://github.com/bitcoin/bitcoin/pull/23127) (tests: Use test framework utils where possible by vincenzopalazzo",https://github.com/bitcoin/bitcoin/pull/19013#issuecomment-631060398,631060398,
Sjors,2020-07-21 12:41:34,Rebased and dropped the release candidate commit.,https://github.com/bitcoin/bitcoin/pull/19013#issuecomment-661833330,661833330,
MarcoFalke,2020-07-21 13:51:53,"This fails on travis. Presumably because gpg is missing, etc",https://github.com/bitcoin/bitcoin/pull/19013#issuecomment-661874499,661874499,
fjahr,2020-07-22 10:01:18,"Concept ACK, code looks good, just need to fix Travis.\n\nAlso ACK on DRYing up the compatibility test. ",https://github.com/bitcoin/bitcoin/pull/19013#issuecomment-662363133,662363133,
Sjors,2020-07-23 14:00:20,"> This fails on travis. Presumably because gpg is missing, etc\n\nOh, I guess we should have cleared Travis cache before merging #19205. I added a commit to fetch the release PGP key (can be cherry-picked into its own PR if we need it urgently).\n\nWithout `shell=True` I get:\n```\nFile ""/usr/lib/python3.6/subprocess.py"", line 1364, in _execute_child\n1968    raise child_exception_type(errn",https://github.com/bitcoin/bitcoin/pull/19013#issuecomment-663024067,663024067,
Sjors,2020-07-31 12:07:12,"Travis keeps failing the GPG check with a useful log entry, so instead I just added a flag to skip this check.",https://github.com/bitcoin/bitcoin/pull/19013#issuecomment-667087221,667087221,
Sjors,2020-08-31 11:32:08,I'll rebase after #19813,https://github.com/bitcoin/bitcoin/pull/19013#issuecomment-683723933,683723933,
Sjors,2020-10-08 10:32:18,Rebased and switched to v0.20.1,https://github.com/bitcoin/bitcoin/pull/19013#issuecomment-705482333,705482333,
Sjors,2020-11-04 08:07:12,"test/README seems focussed on how to run them, whereas test/functional/README only covers development. It might make sense to move some stuff over from test/README to test/functional/README though, but maybe in another PR?  ",https://github.com/bitcoin/bitcoin/pull/19013#issuecomment-721577087,721577087,
michaelfolkson,2020-12-30 13:52:52,"ACK 0888343b6cc13d7449972345e4f576fd76a43919\n\nReviewed code, downloaded the previous release binaries, ran test, test passed.\n\nPut this up on StackExchange, feel free to suggest improvements to my answer or add your own answer. https://bitcoin.stackexchange.com/questions/100924/what-backward-compatibility-testing-is-done-on-bitcoin-core\n\nI'm also a fan of moving most the functional tes",https://github.com/bitcoin/bitcoin/pull/19013#issuecomment-752629495,752629495,
Sjors,2021-02-24 16:29:24,"Rebased and simplified the code a bit. I dropped a few testing permutations in the process, but I don't think those were important.\n\nI also added v0.21.0",https://github.com/bitcoin/bitcoin/pull/19013#issuecomment-785200473,785200473,
hebasto,2021-02-24 21:13:32,Concept ACK.,https://github.com/bitcoin/bitcoin/pull/19013#issuecomment-785388149,785388149,
Sjors,2021-02-25 14:31:41,@hebasto it doesn't hurt to commit these hashes in the repo though.,https://github.com/bitcoin/bitcoin/pull/19013#issuecomment-785937007,785937007,
Sjors,2021-07-14 13:32:34,"Slightly more complicated rebase after #20354.\n\nNote how short the last commit is. It's now much less involved to add a new version to this test.",https://github.com/bitcoin/bitcoin/pull/19013#issuecomment-879895607,879895607,
Sjors,2021-09-22 11:11:55,Rebased and added v22.0,https://github.com/bitcoin/bitcoin/pull/19013#issuecomment-924829647,924829647,
katesalazar,2021-09-26 09:27:29,"Came by only to add a friendly reminder that\nonce this is merged, it could be interesting\nto replace obsolete minor versions in a subsequent PR.\n\nYou could consider back porting as well.\n\nI think this change could be of help for newcomers.\nThank you very much!\n",https://github.com/bitcoin/bitcoin/pull/19013#issuecomment-927268598,927268598,
Sjors,2021-09-27 09:40:34,"@katesalazar v0.21.0 is very different from v0.21.1 because the latter has taproot enabled. Not upgrading that one is intentional. For the other releases I don't think it matters too much which patch version we use here. The purpose of these tests is to find backwards compatibility issues. Ideally we would run every single patch version for that, but that might make the tests too slow.",https://github.com/bitcoin/bitcoin/pull/19013#issuecomment-927699021,927699021,
Sjors,2021-11-05 14:05:49,Rebased and changed the client version in the test from `22000000` to `220000`.,https://github.com/bitcoin/bitcoin/pull/19013#issuecomment-961923192,961923192,
katesalazar,2021-11-14 19:25:22,"I wonder if 9e03b891af is enough self explanatory\nabout the bugs it fixes.\n\nIt wouldn't hurt me adding a thorough detailed text to it.\n",https://github.com/bitcoin/bitcoin/pull/19013#issuecomment-968349233,968349233,
Sjors,2021-11-15 08:57:40,"@katesalazar that commit ensures that we we add a new version to the list, everything keeps working. It also adds some missing node_master.unloadwallet statements. I wrote it more than a year ago, so that's all I remember :-) \n\nI guess the test [failure](https://cirrus-ci.com/task/5886641505042432) in `feature_backwards_compatibility.py --legacy-wallet` is not spurious, because it happened bef",https://github.com/bitcoin/bitcoin/pull/19013#issuecomment-968669365,968669365,
Sjors,2021-11-15 10:43:52,"The test framework sets `-sandbox=log-and-abort` for version 22.0 and up, but that's not part of the release binary. I added a commit to fix that.\n\nI'll rebase after #23514 is fixed.",https://github.com/bitcoin/bitcoin/pull/19013#issuecomment-968761668,968761668,
Sjors,2021-11-15 16:24:59,Rebased after #23515 and merge conflict.,https://github.com/bitcoin/bitcoin/pull/19013#issuecomment-969080619,969080619,
Sjors,2021-11-18 14:41:24,"Rebased, moved refactoring stuff out of the v0.20 commit into 408e9b4. I improved that commit further by using variables in more places instead of indexes.",https://github.com/bitcoin/bitcoin/pull/19013#issuecomment-972927816,972927816,
Sjors,2021-12-01 05:23:04,Thanks @ryanofsky. I fixed the indentation and added the requested comment.,https://github.com/bitcoin/bitcoin/pull/19013#issuecomment-983300660,983300660,
MarcoFalke,2020-06-16 14:38:55,"instead of updating this in the ci config, as well as all the backward compat tests, why not simply make it the default value in the script?",https://github.com/bitcoin/bitcoin/pull/19013#discussion_r440903045,440903045,test/functional/feature_backwards_compatibility.py
MarcoFalke,2020-06-16 14:39:40,this goes away with #19294,https://github.com/bitcoin/bitcoin/pull/19013#discussion_r440903634,440903634,test/functional/feature_backwards_compatibility.py
MarcoFalke,2020-06-16 14:41:29,not sure if we want to add dead and untested code the the test framework. This can be added when it is actually needed.,https://github.com/bitcoin/bitcoin/pull/19013#discussion_r440905078,440905078,test/functional/test_framework/test_framework.py
MarcoFalke,2020-06-16 14:41:42,same,https://github.com/bitcoin/bitcoin/pull/19013#discussion_r440905224,440905224,test/functional/test_framework/test_node.py
Sjors,2020-06-16 16:05:12,"I need it every time there's a release candidate, but then it never it gets merged...",https://github.com/bitcoin/bitcoin/pull/19013#discussion_r440969085,440969085,test/functional/test_framework/test_framework.py
MarcoFalke,2020-06-16 16:10:18,"Until we will be testing backwards compatibility for rcs, you can keep it as a commit in your local git and then cherry-pick as needed for your own needs.",https://github.com/bitcoin/bitcoin/pull/19013#discussion_r440972527,440972527,test/functional/test_framework/test_framework.py
Sjors,2020-06-17 15:42:32,rebased,https://github.com/bitcoin/bitcoin/pull/19013#discussion_r441644477,441644477,test/functional/feature_backwards_compatibility.py
MarcoFalke,2020-07-23 16:52:41,"```suggestion\n  DOCKER_EXEC gpg --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys $MAINTAINER_KEY\n```\n\nWould be surprising if a vanilla docker image had the key already",https://github.com/bitcoin/bitcoin/pull/19013#discussion_r459590779,459590779,ci/test/05_before_script.sh
Sjors,2020-07-23 17:43:28,Maybe we want to cache it though if there's a DDOS on PGP key servers again.,https://github.com/bitcoin/bitcoin/pull/19013#discussion_r459620464,459620464,ci/test/05_before_script.sh
MarcoFalke,2020-10-26 16:29:52,"I think this can be moved to `test/README.md`, which explains how to run the functional tests",https://github.com/bitcoin/bitcoin/pull/19013#discussion_r512097171,512097171,test/functional/wallet_upgradewallet.py
Sjors,2020-11-03 20:30:34,"Done, and rebased",https://github.com/bitcoin/bitcoin/pull/19013#discussion_r516937970,516937970,test/functional/wallet_upgradewallet.py
MarcoFalke,2020-11-04 07:54:44,"```suggestion\nsee test/README.md.\n```",https://github.com/bitcoin/bitcoin/pull/19013#discussion_r517152746,517152746,test/functional/feature_backwards_compatibility.py
MarcoFalke,2020-11-04 07:55:10,"```suggestion\nThe previous release v0.15.2 is required by this test, see test/README.md.\n```",https://github.com/bitcoin/bitcoin/pull/19013#discussion_r517152994,517152994,test/functional/mempool_compatibility.py
MarcoFalke,2020-11-04 07:55:25,"```suggestion\nRequires previous releases binaries, see test/README.md.\n```",https://github.com/bitcoin/bitcoin/pull/19013#discussion_r517153116,517153116,test/functional/wallet_upgradewallet.py
MarcoFalke,2020-12-29 15:57:32,"nit: Add trailing comma to avoid having to touch this line again for the next release.\n```suggestion\n""376194f06596ecfa40331167c39bc70c355f960280bd2a645fdbf18f66527397"":  ""bitcoin-0.20.1-x86_64-linux-gnu.tar.gz"",\n```",https://github.com/bitcoin/bitcoin/pull/19013#discussion_r549756545,549756545,test/get_previous_releases.py
MarcoFalke,2021-07-14 13:11:55,is the source code tar.gz needed for anything? None of the other versions include it.,https://github.com/bitcoin/bitcoin/pull/19013#discussion_r669601342,669601342,test/get_previous_releases.py
Sjors,2021-07-14 13:13:05,I'll drop it for consistency.,https://github.com/bitcoin/bitcoin/pull/19013#discussion_r669602310,669602310,test/get_previous_releases.py
MarcoFalke,2021-09-22 11:31:50,"It is not possible running the compat tests on `powerpc64`, because the other versions are missing on that arch, but I guess it is fine adding them here nonetheless.",https://github.com/bitcoin/bitcoin/pull/19013#discussion_r713848290,713848290,test/get_previous_releases.py
MarcoFalke,2021-09-22 11:35:51,"Maybe add a commit to remove i686 for that reason?\n\n```diff\ncommit 6fd3fd1ba76831d83a43e9322e78afca70aabbeb (HEAD)\nAuthor: MarcoFalke <falke.marco@gmail.com>\nDate:   Wed Sep 22 13:35:01 2021 +0200\n\n    test: Remove i686 from test/get_previous_releases.py\n    \n    It is not possible to run the compatibility tests on i686 because the\n    releases v20+ are missing for that arch. I",https://github.com/bitcoin/bitcoin/pull/19013#discussion_r713851014,713851014,test/get_previous_releases.py
Sjors,2021-09-22 11:45:10,"When I try to `git am` this patch file it complains ""Patch format detection failed."", odd.",https://github.com/bitcoin/bitcoin/pull/19013#discussion_r713857404,713857404,test/get_previous_releases.py
MarcoFalke,2021-09-22 11:52:22,"Ah, wrong format. See\n[0001-test-Remove-i686-from-test-get_previous_releases.py.patch.txt](https://github.com/bitcoin/bitcoin/files/7210405/0001-test-Remove-i686-from-test-get_previous_releases.py.patch.txt)\n\n\n",https://github.com/bitcoin/bitcoin/pull/19013#discussion_r713862398,713862398,test/get_previous_releases.py
Sjors,2021-09-22 11:59:55,Got it. Pushed.,https://github.com/bitcoin/bitcoin/pull/19013#discussion_r713867774,713867774,test/get_previous_releases.py
achow101,2021-11-02 16:59:55,"In a617b9d3b7ffdd7f36e8574602b182edf9d70100 ""test: previous releases: add v22.0""\n\nPreviously these specifiers matched the client version number, but this does not. 22.0's client version is 220000, but this causes the test framework to search for a directory named 0.22.0 rather than 22.0.\n\nHowever the client version is used in a few places in the test framework to enable features, so it wou",https://github.com/bitcoin/bitcoin/pull/19013#discussion_r741294815,741294815,test/functional/feature_backwards_compatibility.py
Sjors,2021-11-02 19:39:42,"I think I discovered half-way this commit that 22.0 is not expressed as 22000000, but as 220000. I'll look into that.",https://github.com/bitcoin/bitcoin/pull/19013#discussion_r741408654,741408654,test/functional/feature_backwards_compatibility.py
ryanofsky,2021-11-17 18:53:31,"In commit ""test: backwards compatibility: misc fixes"" (f35faefac053ff2eb1aa6c99c24e99796a7b53d9)\n\nAll of the changes in this commit seem innocuous, but also arbitrary, and I don't know what they are doing. It would be great if the commit description had some summary to help reviewers like me, or to help debug in case any of these changes cause problems in the future.",https://github.com/bitcoin/bitcoin/pull/19013#discussion_r751545459,751545459,test/functional/feature_backwards_compatibility.py
ryanofsky,2021-11-17 18:57:23,"In commit ""test: v0.20.1 backwards compatibility"" (94d3989352aba63c86c901269438bfd566dd8632)\n\nDoes this change belong in this commit? Could it be split off or have a rationale mentioned in a commit description?",https://github.com/bitcoin/bitcoin/pull/19013#discussion_r751548214,751548214,test/get_previous_releases.py
ryanofsky,2021-11-17 19:06:50,"In commit ""test: v0.20.1 backwards compatibility"" (94d3989352aba63c86c901269438bfd566dd8632)\n\nThe deduplication here is great but the `nodes[2:]` references are more obscure and maybe fragile. Could this use `for node in legacy_nodes`? And\n\nlegacy_nodes = [node_v19, node_v18, node_v17]\nor\nlegacy_nodes = nodes[2:]\nor\nlegacy_nodes = [node for node in nodes if node.version <= 190000]",https://github.com/bitcoin/bitcoin/pull/19013#discussion_r751554717,751554717,test/functional/feature_backwards_compatibility.py
ryanofsky,2021-11-17 19:12:05,"In commit ""test: v0.20.1 backwards compatibility"" (94d3989352aba63c86c901269438bfd566dd8632)\n\nLooking at all the test changes here it seems like no test coverage is lost, but it would be nice if commit message could say whether this is the case.\n\nIMO, it would also be nicer if this commit were split into a refactoring commit that did not change coverage and just deduped code, and a smaller",https://github.com/bitcoin/bitcoin/pull/19013#discussion_r751558418,751558418,test/functional/feature_backwards_compatibility.py
ryanofsky,2021-11-17 19:15:03,"In commit ""test: previous releases: add v22.0"" (62b22de69dabfb86eaabb6a685e3989ce525d0e3)\n\nThis seems a little strange. Could you add a code comment here explaining this? It seems like this code could not have a special 219999 case and just multiply by 100 for all versions and strip .0.0 for all versions.",https://github.com/bitcoin/bitcoin/pull/19013#discussion_r751560437,751560437,test/functional/test_framework/test_framework.py
katesalazar,2021-11-17 20:08:12,"What I [was trying to tell][0], clearly expressed.\n\n[0]: https://github.com/bitcoin/bitcoin/pull/19013#issuecomment-968349233\n",https://github.com/bitcoin/bitcoin/pull/19013#discussion_r751597510,751597510,test/functional/feature_backwards_compatibility.py
Sjors,2021-11-18 13:55:16,"I'll add a note. When we changed the numbering in version v22.0, the client version wasn't bumped to 22000000, but to 220000. Without this change it would expect the binary to live in v0.22.0. Conversely if we multiplied all versions by 100 then it would look for v21.0 for the 0.21.0 release.",https://github.com/bitcoin/bitcoin/pull/19013#discussion_r752263657,752263657,test/functional/test_framework/test_framework.py
Sjors,2021-11-18 14:10:14,I moved the refactoring stuff into the misc changes commit. Adding a note that perhaps coverage changed in the process of this cleanup.,https://github.com/bitcoin/bitcoin/pull/19013#discussion_r752277305,752277305,test/functional/feature_backwards_compatibility.py
Sjors,2021-11-18 14:13:07,"I've now restricted `self.nodes[...]` to the top of the test, using more human readable names in the rest of the test.",https://github.com/bitcoin/bitcoin/pull/19013#discussion_r752279984,752279984,test/functional/feature_backwards_compatibility.py
Sjors,2021-11-18 14:13:57,"Yes, the DMG was added in an earlier PR, but shouldn't have. I'll add a note.",https://github.com/bitcoin/bitcoin/pull/19013#discussion_r752280762,752280762,test/get_previous_releases.py
Sjors,2021-11-18 14:39:54,"I added a bit more clarification. In particular I point out that coverage may have changed, which I think is worth it for the increased readability.",https://github.com/bitcoin/bitcoin/pull/19013#discussion_r752305982,752305982,test/functional/feature_backwards_compatibility.py
ryanofsky,2021-11-30 17:50:58,"In commit ""test: backwards compatibility: misc fixes"" (408e9b48765dee164578c97b6006c525c70a14f4)\n\nMinor: indentation is inconsistent here (2 spaces instead of usual 4)",https://github.com/bitcoin/bitcoin/pull/19013#discussion_r759524253,759524253,test/functional/feature_backwards_compatibility.py
ryanofsky,2021-11-30 18:45:10,"In commit ""test: backwards compatibility: misc fixes"" (408e9b48765dee164578c97b6006c525c70a14f4)\n\nNote: Dropping these `node_v18.rpc.createwallet` and `node_v19.rpc.createwallet` calls seems to lose test coverage creating these wallets. But the wallets are never used later, and this would only be testing create code in frozen releases, so losing these is probably good.",https://github.com/bitcoin/bitcoin/pull/19013#discussion_r759564861,759564861,test/functional/feature_backwards_compatibility.py
ryanofsky,2021-11-30 18:53:08,"In commit ""test: previous releases: add v22.0"" (7124899057a351a3491b288d96426f91ef1fd040)\n\nIt would be helpful to say why this condition is needed in code comment like `# The -sandbox argument is not present in the v22.0 release.` (from the commit description)",https://github.com/bitcoin/bitcoin/pull/19013#discussion_r759570614,759570614,test/functional/test_framework/test_framework.py
