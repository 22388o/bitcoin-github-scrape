sipa,2014-11-12T14:37:34Z,Added wallet tip updating and block/undo file flushing to the FlushStateToDisk() method. Very preliminary testing on my VPS (with very slow I/O) shows a ~100ms decrease in block processing time.\n,https://github.com/bitcoin/bitcoin/pull/5241#issuecomment-62726468,62726468,
laanwj,2014-11-13T09:36:15Z,"Concept ACK, will test\n",https://github.com/bitcoin/bitcoin/pull/5241#issuecomment-62864587,62864587,
laanwj,2014-11-16T14:50:09Z,"Found a small issue. When AppInit2 exits prematurely, bitcoind will crash in shutdown with the following:\n\n```\n#0  CCoinsViewCache::GetCacheSize (this=0x0) at coins.cpp:196\n#1  0x54afe528 in FlushStateToDisk (state=..., fast=fast@entry=false, forceWrite=forceWrite@entry=true) at main.cpp:1774\n#2  0x54afe906 in FlushStateToDisk () at main.cpp:1811\n#3  0x54ad5c16 in Shutdown () at init.cpp:153",https://github.com/bitcoin/bitcoin/pull/5241#issuecomment-63221467,63221467,
sipa,2014-11-16T15:04:56Z,Fixed.\n,https://github.com/bitcoin/bitcoin/pull/5241#issuecomment-63222013,63222013,
laanwj,2014-11-17T14:52:05Z,What about the `pcoinstip->Flush()` in gettxoutsetinfo https://github.com/bitcoin/bitcoin/blob/master/src/rpcblockchain.cpp#L322 - does this need to be some form of `FlushStateToDisk`?\n,https://github.com/bitcoin/bitcoin/pull/5241#issuecomment-63315244,63315244,
sipa,2014-11-17T14:56:27Z,"@laanwj Ah right, it does. That's sort of inconvienient but inevitable until there's a way to iterate the UTXO entries in a CCoinsView. Writing pcoinsTip to disk means a reference to the tip block hash in the index, so that needs to be written, which on itself refers to disk positions, so blocks need to be written too...\n",https://github.com/bitcoin/bitcoin/pull/5241#issuecomment-63315942,63315942,
sipa,2014-11-17T14:58:43Z,Fixed.\n,https://github.com/bitcoin/bitcoin/pull/5241#issuecomment-63316294,63316294,
sipa,2014-11-20T14:02:39Z,Tested by kill -KILL'ing a node while it was flushing. No problems.\n,https://github.com/bitcoin/bitcoin/pull/5241#issuecomment-63811774,63811774,
gmaxwell,2014-11-23T07:19:10Z,"This seems to greatly improves our handling of unclean shutdowns during the IBD. Previously we'd reliably corrupt the database, requring the user to manually delete things. I've tested this with a bunch of killing while syncing and not been able to break it.\n",https://github.com/bitcoin/bitcoin/pull/5241#issuecomment-64109312,64109312,
rdponticelli,2014-11-23T15:40:57Z,"I performed a thorough synchronization of a testnet node from scratch using this patch, sending term or kill signals randomly every 180-640 seconds. It worked like a charm. Such test easily triggers #5156 without it.\n",https://github.com/bitcoin/bitcoin/pull/5241#issuecomment-64121944,64121944,
gmaxwell,2014-11-23T19:51:48Z,"I think we should seriously consider this for 0.10. It's a big reliablity improvement during the initial sync, beyond its performance implications.\n",https://github.com/bitcoin/bitcoin/pull/5241#issuecomment-64131660,64131660,
laanwj,2014-11-24T09:25:22Z,"I've subjected this to some horrible crashes, and a full sync w/ DEBUG_LOCKORDER. ACK commithash 9dd92a12fe92b4a81e612acf1c6245b85fa12a73 for 0.10.\nhttps://dev.visucore.com/bitcoin/acks/5241\n",https://github.com/bitcoin/bitcoin/pull/5241#issuecomment-64168565,64168565,
sipa,2014-11-24T14:17:25Z,"Sorry, needed to rebase after BIP23 block proposals.\n",https://github.com/bitcoin/bitcoin/pull/5241#issuecomment-64199144,64199144,
gmaxwell,2014-11-24T22:42:22Z,ACK.\n,https://github.com/bitcoin/bitcoin/pull/5241#issuecomment-64278861,64278861,
laanwj,2014-11-13T09:35:42Z,"Parametrization on multiple bool parameters leads to hard-to-read code; I'd prefer to pass an enum, or bit field\n",https://github.com/bitcoin/bitcoin/pull/5241#discussion_r20280114,20280114,src/main.cpp
sipa,2014-11-14T17:12:10Z,"Agree, I'll add a commit for changing it.\n",https://github.com/bitcoin/bitcoin/pull/5241#discussion_r20371848,20371848,src/main.cpp
