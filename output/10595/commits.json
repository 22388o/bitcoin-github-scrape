[
  {
    "sha": "a5464ad1264cae2eb56157e778898336dc7ef1cd",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNTQ2NGFkMTI2NGNhZTJlYjU2MTU3ZTc3ODg5ODMzNmRjN2VmMWNk",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2017-06-15T07:19:07Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2018-10-17T07:40:25Z"
      },
      "message": "Bugfix: RPC/Mining: Use pre-segwit sigops and limits, when working with non-segwit GBT clients",
      "tree": {
        "sha": "ab1ec29243bf16c2f6407a86efae11c928f5e305",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ab1ec29243bf16c2f6407a86efae11c928f5e305"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a5464ad1264cae2eb56157e778898336dc7ef1cd",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a5464ad1264cae2eb56157e778898336dc7ef1cd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a5464ad1264cae2eb56157e778898336dc7ef1cd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a5464ad1264cae2eb56157e778898336dc7ef1cd/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8a9ffec0a257da659ba54c5073bfc820986ae9c1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8a9ffec0a257da659ba54c5073bfc820986ae9c1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8a9ffec0a257da659ba54c5073bfc820986ae9c1"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 8,
      "deletions": 2
    },
    "files": [
      {
        "sha": "fc6c4217b7e60e8fcc14b71be96c739002e4d198",
        "filename": "src/rpc/mining.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a5464ad1264cae2eb56157e778898336dc7ef1cd/src/rpc/mining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a5464ad1264cae2eb56157e778898336dc7ef1cd/src/rpc/mining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/mining.cpp?ref=a5464ad1264cae2eb56157e778898336dc7ef1cd",
        "patch": "@@ -532,8 +532,7 @@ static UniValue getblocktemplate(const JSONRPCRequest& request)\n     UpdateTime(pblock, consensusParams, pindexPrev);\n     pblock->nNonce = 0;\n \n-    // NOTE: If at some point we support pre-segwit miners post-segwit-activation, this needs to take segwit support into consideration\n-    const bool fPreSegWit = (ThresholdState::ACTIVE != VersionBitsState(pindexPrev, consensusParams, Consensus::DEPLOYMENT_SEGWIT, versionbitscache));\n+    const bool fPreSegWit = !(fSupportsSegwit && ThresholdState::ACTIVE == VersionBitsState(pindexPrev, consensusParams, Consensus::DEPLOYMENT_SEGWIT, versionbitscache));\n \n     UniValue aCaps(UniValue::VARR); aCaps.push_back(\"proposal\");\n "
      },
      {
        "sha": "9ea1f29d8566467c980e3d729e270be2a04178ab",
        "filename": "test/functional/feature_segwit.py",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a5464ad1264cae2eb56157e778898336dc7ef1cd/test/functional/feature_segwit.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a5464ad1264cae2eb56157e778898336dc7ef1cd/test/functional/feature_segwit.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_segwit.py?ref=a5464ad1264cae2eb56157e778898336dc7ef1cd",
        "patch": "@@ -225,6 +225,13 @@ def run_test(self):\n         # Now try calling getblocktemplate() without segwit support.\n         template = self.nodes[0].getblocktemplate()\n \n+        # Check that we got a pre-Segwit template\n+        assert_equal(template['sizelimit'], 1000000)\n+        assert 'weightlimit' not in template\n+        assert_equal(template['sigoplimit'], 20000)\n+        # TODO: Would be nice to test for non-zero sigops here\n+        assert_equal(template['transactions'][0]['sigops'], 0)\n+\n         # Check that tx1 is the only transaction of the 3 in the template.\n         template_txids = [ t['txid'] for t in template['transactions'] ]\n         assert(txid2 not in template_txids and txid3 not in template_txids)"
      }
    ]
  }
]