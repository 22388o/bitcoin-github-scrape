[
  {
    "sha": "a410ae8cb09f1b809755316566f9e6bccd41c0c4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNDEwYWU4Y2IwOWYxYjgwOTc1NTMxNjU2NmY5ZTZiY2NkNDFjMGM0",
    "commit": {
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2020-12-17T21:18:28Z"
      },
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2021-01-28T06:04:04Z"
      },
      "message": "net, net_processing: log disconnect reasons with -debug=net",
      "tree": {
        "sha": "21e752aa28ada0bf41a0f752216765db8a1b29b5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/21e752aa28ada0bf41a0f752216765db8a1b29b5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a410ae8cb09f1b809755316566f9e6bccd41c0c4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a410ae8cb09f1b809755316566f9e6bccd41c0c4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a410ae8cb09f1b809755316566f9e6bccd41c0c4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a410ae8cb09f1b809755316566f9e6bccd41c0c4/comments",
    "author": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9deba2de764f0043061d68cc3b984b9df67cf23b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9deba2de764f0043061d68cc3b984b9df67cf23b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9deba2de764f0043061d68cc3b984b9df67cf23b"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 13,
      "deletions": 1
    },
    "files": [
      {
        "sha": "c40d55d08d04806b77da71cdfe28d6841662a42e",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a410ae8cb09f1b809755316566f9e6bccd41c0c4/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a410ae8cb09f1b809755316566f9e6bccd41c0c4/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=a410ae8cb09f1b809755316566f9e6bccd41c0c4",
        "patch": "@@ -1004,6 +1004,7 @@ bool CConnman::AttemptToEvictConnection()\n     LOCK(cs_vNodes);\n     for (CNode* pnode : vNodes) {\n         if (pnode->GetId() == *node_id_to_evict) {\n+            LogPrint(BCLog::NET, \"selected %s connection for eviction peer=%d; disconnecting\\n\", pnode->ConnectionTypeAsString(), pnode->GetId());\n             pnode->fDisconnect = true;\n             return true;\n         }\n@@ -2693,6 +2694,7 @@ bool CConnman::DisconnectNode(const std::string& strNode)\n {\n     LOCK(cs_vNodes);\n     if (CNode* pnode = FindNode(strNode)) {\n+        LogPrint(BCLog::NET, \"disconnect by address%s matched peer=%d; disconnecting\\n\", (fLogIPs ? strprintf(\"=%s\", strNode) : \"\"), pnode->GetId());\n         pnode->fDisconnect = true;\n         return true;\n     }\n@@ -2705,6 +2707,7 @@ bool CConnman::DisconnectNode(const CSubNet& subnet)\n     LOCK(cs_vNodes);\n     for (CNode* pnode : vNodes) {\n         if (subnet.Match(pnode->addr)) {\n+            LogPrint(BCLog::NET, \"disconnect by subnet%s matched peer=%d; disconnecting\\n\", (fLogIPs ? strprintf(\"=%s\", subnet.ToString()) : \"\"), pnode->GetId());\n             pnode->fDisconnect = true;\n             disconnected = true;\n         }\n@@ -2722,6 +2725,7 @@ bool CConnman::DisconnectNode(NodeId id)\n     LOCK(cs_vNodes);\n     for(CNode* pnode : vNodes) {\n         if (id == pnode->GetId()) {\n+            LogPrint(BCLog::NET, \"disconnect by id peer=%d; disconnecting\\n\", pnode->GetId());\n             pnode->fDisconnect = true;\n             return true;\n         }"
      },
      {
        "sha": "3bf0de88e371d31fbb028403e0dc1dbe9c9b5c8c",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 1,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a410ae8cb09f1b809755316566f9e6bccd41c0c4/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a410ae8cb09f1b809755316566f9e6bccd41c0c4/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=a410ae8cb09f1b809755316566f9e6bccd41c0c4",
        "patch": "@@ -2659,6 +2659,7 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n \n         // Feeler connections exist only to verify if address is online.\n         if (pfrom.IsFeelerConn()) {\n+            LogPrint(BCLog::NET, \"feeler connection completed peer=%d; disconnecting\\n\", pfrom.GetId());\n             pfrom.fDisconnect = true;\n         }\n         return;\n@@ -2746,6 +2747,7 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         if (pfrom.fSuccessfullyConnected) {\n             // Disconnect peers that send wtxidrelay message after VERACK; this\n             // must be negotiated between VERSION and VERACK.\n+            LogPrint(BCLog::NET, \"wtxidrelay received after verack from peer=%d; disconnecting\\n\", pfrom.GetId());\n             pfrom.fDisconnect = true;\n             return;\n         }\n@@ -2763,6 +2765,7 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         if (pfrom.fSuccessfullyConnected) {\n             // Disconnect peers that send SENDADDRV2 message after VERACK; this\n             // must be negotiated between VERSION and VERACK.\n+            LogPrint(BCLog::NET, \"sendaddrv2 received after verack from peer=%d; disconnecting\\n\", pfrom.GetId());\n             pfrom.fDisconnect = true;\n             return;\n         }\n@@ -2832,8 +2835,10 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         m_connman.AddNewAddresses(vAddrOk, pfrom.addr, 2 * 60 * 60);\n         if (vAddr.size() < 1000)\n             pfrom.fGetAddr = false;\n-        if (pfrom.IsAddrFetchConn())\n+        if (pfrom.IsAddrFetchConn()) {\n+            LogPrint(BCLog::NET, \"addrfetch connection completed peer=%d; disconnecting\\n\", pfrom.GetId());\n             pfrom.fDisconnect = true;\n+        }\n         return;\n     }\n \n@@ -3840,6 +3845,7 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n \n     if (msg_type == NetMsgType::FILTERLOAD) {\n         if (!(pfrom.GetLocalServices() & NODE_BLOOM)) {\n+            LogPrint(BCLog::NET, \"filterload received despite not offering bloom services from peer=%d; disconnecting\\n\", pfrom.GetId());\n             pfrom.fDisconnect = true;\n             return;\n         }\n@@ -3862,6 +3868,7 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n \n     if (msg_type == NetMsgType::FILTERADD) {\n         if (!(pfrom.GetLocalServices() & NODE_BLOOM)) {\n+            LogPrint(BCLog::NET, \"filteradd received despite not offering bloom services from peer=%d; disconnecting\\n\", pfrom.GetId());\n             pfrom.fDisconnect = true;\n             return;\n         }\n@@ -3889,6 +3896,7 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n \n     if (msg_type == NetMsgType::FILTERCLEAR) {\n         if (!(pfrom.GetLocalServices() & NODE_BLOOM)) {\n+            LogPrint(BCLog::NET, \"filterclear received despite not offering bloom services from peer=%d; disconnecting\\n\", pfrom.GetId());\n             pfrom.fDisconnect = true;\n             return;\n         }"
      }
    ]
  },
  {
    "sha": "f7edea3b7c873d6c9bcd50cf528349ef84961a75",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmN2VkZWEzYjdjODczZDZjOWJjZDUwY2Y1MjgzNDllZjg0OTYxYTc1",
    "commit": {
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2020-12-17T21:40:37Z"
      },
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2021-01-28T06:04:04Z"
      },
      "message": "net: make debug logging conditional on -debug=net",
      "tree": {
        "sha": "0adae3c0a7511ff6320b00f22b483639eb9d83a0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0adae3c0a7511ff6320b00f22b483639eb9d83a0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f7edea3b7c873d6c9bcd50cf528349ef84961a75",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f7edea3b7c873d6c9bcd50cf528349ef84961a75",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f7edea3b7c873d6c9bcd50cf528349ef84961a75",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f7edea3b7c873d6c9bcd50cf528349ef84961a75/comments",
    "author": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a410ae8cb09f1b809755316566f9e6bccd41c0c4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a410ae8cb09f1b809755316566f9e6bccd41c0c4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a410ae8cb09f1b809755316566f9e6bccd41c0c4"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 5,
      "deletions": 5
    },
    "files": [
      {
        "sha": "6f4ab2ee06ea1fa327d6ce800f605190b32d11d9",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f7edea3b7c873d6c9bcd50cf528349ef84961a75/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f7edea3b7c873d6c9bcd50cf528349ef84961a75/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=f7edea3b7c873d6c9bcd50cf528349ef84961a75",
        "patch": "@@ -815,7 +815,7 @@ size_t CConnman::SocketSendData(CNode& node) const\n                 // error\n                 int nErr = WSAGetLastError();\n                 if (nErr != WSAEWOULDBLOCK && nErr != WSAEMSGSIZE && nErr != WSAEINTR && nErr != WSAEINPROGRESS) {\n-                    LogPrintf(\"socket send error %s\\n\", NetworkErrorString(nErr));\n+                    LogPrint(BCLog::NET, \"socket send error for peer=%d: %s\\n\", node.GetId(), NetworkErrorString(nErr));\n                     node.CloseSocketDisconnect();\n                 }\n             }\n@@ -1053,7 +1053,7 @@ void CConnman::AcceptConnection(const ListenSocket& hListenSocket) {\n     }\n \n     if (!fNetworkActive) {\n-        LogPrintf(\"connection from %s dropped: not accepting new connections\\n\", addr.ToString());\n+        LogPrint(BCLog::NET, \"connection from %s dropped: not accepting new connections\\n\", addr.ToString());\n         CloseSocket(hSocket);\n         return;\n     }\n@@ -1236,20 +1236,20 @@ bool CConnman::InactivityCheck(const CNode& node) const\n     }\n \n     if (now > node.nLastSend + TIMEOUT_INTERVAL) {\n-        LogPrintf(\"socket sending timeout: %is\\n\", now - node.nLastSend);\n+        LogPrint(BCLog::NET, \"socket sending timeout: %is peer=%d\\n\", now - node.nLastSend, node.GetId());\n         return true;\n     }\n \n     if (now > node.nLastRecv + TIMEOUT_INTERVAL) {\n-        LogPrintf(\"socket receive timeout: %is\\n\", now - node.nLastRecv);\n+        LogPrint(BCLog::NET, \"socket receive timeout: %is peer=%d\\n\", now - node.nLastRecv, node.GetId());\n         return true;\n     }\n \n     if (node.nPingNonceSent && node.m_ping_start.load() + std::chrono::seconds{TIMEOUT_INTERVAL} < GetTime<std::chrono::microseconds>()) {\n         // We use mockable time for ping timeouts. This means that setmocktime\n         // may cause pings to time out for peers that have been connected for\n         // longer than m_peer_connect_timeout.\n-        LogPrintf(\"ping timeout: %fs\\n\", 0.000001 * count_microseconds(GetTime<std::chrono::microseconds>() - node.m_ping_start.load()));\n+        LogPrint(BCLog::NET, \"ping timeout: %fs peer=%d\\n\", 0.000001 * count_microseconds(GetTime<std::chrono::microseconds>() - node.m_ping_start.load()), node.GetId());\n         return true;\n     }\n "
      }
    ]
  },
  {
    "sha": "12302105bb0bf14721e91b7a3a9d1bf83c8d4154",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxMjMwMjEwNWJiMGJmMTQ3MjFlOTFiN2EzYTlkMWJmODNjOGQ0MTU0",
    "commit": {
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2020-12-17T21:40:56Z"
      },
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2021-01-28T06:04:04Z"
      },
      "message": "net_processing: additional debug logging for ignored messages",
      "tree": {
        "sha": "f019430d9c6cf4c3b141c9e9ff523baccdb52c5c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f019430d9c6cf4c3b141c9e9ff523baccdb52c5c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/12302105bb0bf14721e91b7a3a9d1bf83c8d4154",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/12302105bb0bf14721e91b7a3a9d1bf83c8d4154",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/12302105bb0bf14721e91b7a3a9d1bf83c8d4154",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/12302105bb0bf14721e91b7a3a9d1bf83c8d4154/comments",
    "author": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f7edea3b7c873d6c9bcd50cf528349ef84961a75",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f7edea3b7c873d6c9bcd50cf528349ef84961a75",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f7edea3b7c873d6c9bcd50cf528349ef84961a75"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 9,
      "deletions": 1
    },
    "files": [
      {
        "sha": "872d30b5011b2abe570460af1c4c1b31ea8291ba",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 1,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/12302105bb0bf14721e91b7a3a9d1bf83c8d4154/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/12302105bb0bf14721e91b7a3a9d1bf83c8d4154/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=12302105bb0bf14721e91b7a3a9d1bf83c8d4154",
        "patch": "@@ -2675,7 +2675,10 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n     const CNetMsgMaker msgMaker(pfrom.GetCommonVersion());\n \n     if (msg_type == NetMsgType::VERACK) {\n-        if (pfrom.fSuccessfullyConnected) return;\n+        if (pfrom.fSuccessfullyConnected) {\n+            LogPrint(BCLog::NET, \"ignoring redundant verack message from peer=%d\\n\", pfrom.GetId());\n+            return;\n+        }\n \n         if (!pfrom.IsInboundConn()) {\n             LogPrintf(\"New outbound peer connected: version: %d, blocks=%d, peer=%d%s (%s)\\n\",\n@@ -2756,7 +2759,11 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n             if (!State(pfrom.GetId())->m_wtxid_relay) {\n                 State(pfrom.GetId())->m_wtxid_relay = true;\n                 g_wtxid_relay_peers++;\n+            } else {\n+                LogPrint(BCLog::NET, \"ignoring duplicate wtxidrelay from peer=%d\\n\", pfrom.GetId());\n             }\n+        } else {\n+            LogPrint(BCLog::NET, \"ignoring wtxidrelay due to old common version=%d from peer=%d\\n\", pfrom.GetCommonVersion(), pfrom.GetId());\n         }\n         return;\n     }\n@@ -2792,6 +2799,7 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         s >> vAddr;\n \n         if (!pfrom.RelayAddrsWithConn()) {\n+            LogPrint(BCLog::NET, \"ignoring %s message from %s peer=%d\\n\", msg_type, pfrom.ConnectionTypeAsString(), pfrom.GetId());\n             return;\n         }\n         if (vAddr.size() > MAX_ADDR_TO_SEND)"
      }
    ]
  },
  {
    "sha": "98fab37ca0517bfe58296e47266cd5bd112e90bf",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5OGZhYjM3Y2EwNTE3YmZlNTgyOTZlNDcyNjZjZDViZDExMmU5MGJm",
    "commit": {
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2020-12-17T21:41:34Z"
      },
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2021-01-28T06:04:04Z"
      },
      "message": "net: use peer=N instead of from=N in debug log",
      "tree": {
        "sha": "1f96dfc9201173194d094a317540f4538d2d7976",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1f96dfc9201173194d094a317540f4538d2d7976"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/98fab37ca0517bfe58296e47266cd5bd112e90bf",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/98fab37ca0517bfe58296e47266cd5bd112e90bf",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/98fab37ca0517bfe58296e47266cd5bd112e90bf",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/98fab37ca0517bfe58296e47266cd5bd112e90bf/comments",
    "author": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "12302105bb0bf14721e91b7a3a9d1bf83c8d4154",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/12302105bb0bf14721e91b7a3a9d1bf83c8d4154",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/12302105bb0bf14721e91b7a3a9d1bf83c8d4154"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 5,
      "deletions": 5
    },
    "files": [
      {
        "sha": "76bf7effa47f9abcef60fb1d11f28afeae9f036b",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/98fab37ca0517bfe58296e47266cd5bd112e90bf/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/98fab37ca0517bfe58296e47266cd5bd112e90bf/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=98fab37ca0517bfe58296e47266cd5bd112e90bf",
        "patch": "@@ -1231,7 +1231,7 @@ bool CConnman::InactivityCheck(const CNode& node) const\n     }\n \n     if (node.nLastRecv == 0 || node.nLastSend == 0) {\n-        LogPrint(BCLog::NET, \"socket no message in first %i seconds, %d %d from %d\\n\", m_peer_connect_timeout, node.nLastRecv != 0, node.nLastSend != 0, node.GetId());\n+        LogPrint(BCLog::NET, \"socket no message in first %i seconds, %d %d peer=%d\\n\", m_peer_connect_timeout, node.nLastRecv != 0, node.nLastSend != 0, node.GetId());\n         return true;\n     }\n \n@@ -1254,7 +1254,7 @@ bool CConnman::InactivityCheck(const CNode& node) const\n     }\n \n     if (!node.fSuccessfullyConnected) {\n-        LogPrint(BCLog::NET, \"version handshake timeout from %d\\n\", node.GetId());\n+        LogPrint(BCLog::NET, \"version handshake timeout peer=%d\\n\", node.GetId());\n         return true;\n     }\n "
      },
      {
        "sha": "a7e240dcfab9ad0972694e64daee89b1d41d55d5",
        "filename": "test/functional/p2p_timeouts.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/98fab37ca0517bfe58296e47266cd5bd112e90bf/test/functional/p2p_timeouts.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/98fab37ca0517bfe58296e47266cd5bd112e90bf/test/functional/p2p_timeouts.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_timeouts.py?ref=98fab37ca0517bfe58296e47266cd5bd112e90bf",
        "patch": "@@ -74,9 +74,9 @@ def run_test(self):\n         no_version_node.send_message(msg_ping())\n \n         expected_timeout_logs = [\n-            \"version handshake timeout from 0\",\n-            \"socket no message in first 3 seconds, 1 0 from 1\",\n-            \"socket no message in first 3 seconds, 0 0 from 2\",\n+            \"version handshake timeout peer=0\",\n+            \"socket no message in first 3 seconds, 1 0 peer=1\",\n+            \"socket no message in first 3 seconds, 0 0 peer=2\",\n         ]\n \n         with self.nodes[0].assert_debug_log(expected_msgs=expected_timeout_logs):"
      }
    ]
  },
  {
    "sha": "48c8a9b96453ca429b38fc5d5181a310ae5a93bf",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0OGM4YTliOTY0NTNjYTQyOWIzOGZjNWQ1MTgxYTMxMGFlNWE5M2Jm",
    "commit": {
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2020-12-18T05:17:39Z"
      },
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2021-01-28T06:04:04Z"
      },
      "message": "net_processing: log txrelay flag from version message",
      "tree": {
        "sha": "a0632ff6a6ef69ccec88cbf4b32528f96bae59a4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a0632ff6a6ef69ccec88cbf4b32528f96bae59a4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/48c8a9b96453ca429b38fc5d5181a310ae5a93bf",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/48c8a9b96453ca429b38fc5d5181a310ae5a93bf",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/48c8a9b96453ca429b38fc5d5181a310ae5a93bf",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/48c8a9b96453ca429b38fc5d5181a310ae5a93bf/comments",
    "author": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "98fab37ca0517bfe58296e47266cd5bd112e90bf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/98fab37ca0517bfe58296e47266cd5bd112e90bf",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/98fab37ca0517bfe58296e47266cd5bd112e90bf"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 6,
      "deletions": 5
    },
    "files": [
      {
        "sha": "a4070f5b63377f6524a33f9f28b96069bb4e9801",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 5,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/48c8a9b96453ca429b38fc5d5181a310ae5a93bf/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/48c8a9b96453ca429b38fc5d5181a310ae5a93bf/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=48c8a9b96453ca429b38fc5d5181a310ae5a93bf",
        "patch": "@@ -880,13 +880,14 @@ void PeerManagerImpl::PushNodeVersion(CNode& pnode, int64_t nTime)\n                            CAddress(CService(), addr.nServices);\n     CAddress addrMe = CAddress(CService(), nLocalNodeServices);\n \n+    const bool tx_relay = !m_ignore_incoming_txs && pnode.m_tx_relay != nullptr;\n     m_connman.PushMessage(&pnode, CNetMsgMaker(INIT_PROTO_VERSION).Make(NetMsgType::VERSION, PROTOCOL_VERSION, (uint64_t)nLocalNodeServices, nTime, addrYou, addrMe,\n-            nonce, strSubVersion, nNodeStartingHeight, !m_ignore_incoming_txs && pnode.m_tx_relay != nullptr));\n+            nonce, strSubVersion, nNodeStartingHeight, tx_relay));\n \n     if (fLogIPs) {\n-        LogPrint(BCLog::NET, \"send version message: version %d, blocks=%d, us=%s, them=%s, peer=%d\\n\", PROTOCOL_VERSION, nNodeStartingHeight, addrMe.ToString(), addrYou.ToString(), nodeid);\n+        LogPrint(BCLog::NET, \"send version message: version %d, blocks=%d, us=%s, them=%s, txrelay=%d, peer=%d\\n\", PROTOCOL_VERSION, nNodeStartingHeight, addrMe.ToString(), addrYou.ToString(), tx_relay, nodeid);\n     } else {\n-        LogPrint(BCLog::NET, \"send version message: version %d, blocks=%d, us=%s, peer=%d\\n\", PROTOCOL_VERSION, nNodeStartingHeight, addrMe.ToString(), nodeid);\n+        LogPrint(BCLog::NET, \"send version message: version %d, blocks=%d, us=%s, txrelay=%d, peer=%d\\n\", PROTOCOL_VERSION, nNodeStartingHeight, addrMe.ToString(), tx_relay, nodeid);\n     }\n }\n \n@@ -2642,9 +2643,9 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         if (fLogIPs)\n             remoteAddr = \", peeraddr=\" + pfrom.addr.ToString();\n \n-        LogPrint(BCLog::NET, \"receive version message: %s: version %d, blocks=%d, us=%s, peer=%d%s\\n\",\n+        LogPrint(BCLog::NET, \"receive version message: %s: version %d, blocks=%d, us=%s, txrelay=%d, peer=%d%s\\n\",\n                   cleanSubVer, pfrom.nVersion,\n-                  peer->m_starting_height, addrMe.ToString(), pfrom.GetId(),\n+                  peer->m_starting_height, addrMe.ToString(), fRelay, pfrom.GetId(),\n                   remoteAddr);\n \n         int64_t nTimeOffset = nTime - GetTime();"
      }
    ]
  }
]