[
  {
    "sha": "a16ea051f915eb4c975fe06f89470aa99d99d7e4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphMTZlYTA1MWY5MTVlYjRjOTc1ZmUwNmY4OTQ3MGFhOTlkOTlkN2U0",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-03-27T14:12:11Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-03-29T13:17:04Z"
      },
      "message": "tests: Add fuzzing harness for functions/classes in flatfile.h",
      "tree": {
        "sha": "afe177b87d4507e3fa606186a80aade4f2fed339",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/afe177b87d4507e3fa606186a80aade4f2fed339"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a16ea051f915eb4c975fe06f89470aa99d99d7e4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a16ea051f915eb4c975fe06f89470aa99d99d7e4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a16ea051f915eb4c975fe06f89470aa99d99d7e4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a16ea051f915eb4c975fe06f89470aa99d99d7e4/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bdc2644b72d68b52383bb461ccd6ef8448674cea",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bdc2644b72d68b52383bb461ccd6ef8448674cea",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bdc2644b72d68b52383bb461ccd6ef8448674cea"
      }
    ],
    "stats": {
      "total": 37,
      "additions": 37,
      "deletions": 0
    },
    "files": [
      {
        "sha": "05d3acfb3ebbde79cc45bef856f7ee901242bcdf",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a16ea051f915eb4c975fe06f89470aa99d99d7e4/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a16ea051f915eb4c975fe06f89470aa99d99d7e4/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=a16ea051f915eb4c975fe06f89470aa99d99d7e4",
        "patch": "@@ -35,6 +35,7 @@ FUZZ_TARGETS = \\\n   test/fuzz/fee_rate \\\n   test/fuzz/fee_rate_deserialize \\\n   test/fuzz/flat_file_pos_deserialize \\\n+  test/fuzz/flatfile \\\n   test/fuzz/float \\\n   test/fuzz/hex \\\n   test/fuzz/integer \\\n@@ -480,6 +481,12 @@ test_fuzz_flat_file_pos_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n test_fuzz_flat_file_pos_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n test_fuzz_flat_file_pos_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp\n \n+test_fuzz_flatfile_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n+test_fuzz_flatfile_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_fuzz_flatfile_LDADD = $(FUZZ_SUITE_LD_COMMON)\n+test_fuzz_flatfile_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_flatfile_SOURCES = $(FUZZ_SUITE) test/fuzz/flatfile.cpp\n+\n test_fuzz_float_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_float_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_float_LDADD = $(FUZZ_SUITE_LD_COMMON)"
      },
      {
        "sha": "a55de77df77d3461bb76845dfad49876507d37a4",
        "filename": "src/test/fuzz/flatfile.cpp",
        "status": "added",
        "additions": 30,
        "deletions": 0,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a16ea051f915eb4c975fe06f89470aa99d99d7e4/src/test/fuzz/flatfile.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a16ea051f915eb4c975fe06f89470aa99d99d7e4/src/test/fuzz/flatfile.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/flatfile.cpp?ref=a16ea051f915eb4c975fe06f89470aa99d99d7e4",
        "patch": "@@ -0,0 +1,30 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <flatfile.h>\n+#include <optional.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+\n+#include <cassert>\n+#include <cstdint>\n+#include <string>\n+#include <vector>\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+    Optional<FlatFilePos> flat_file_pos = ConsumeDeserializable<FlatFilePos>(fuzzed_data_provider);\n+    if (!flat_file_pos) {\n+        return;\n+    }\n+    Optional<FlatFilePos> another_flat_file_pos = ConsumeDeserializable<FlatFilePos>(fuzzed_data_provider);\n+    if (another_flat_file_pos) {\n+        assert((*flat_file_pos == *another_flat_file_pos) != (*flat_file_pos != *another_flat_file_pos));\n+    }\n+    (void)flat_file_pos->ToString();\n+    flat_file_pos->SetNull();\n+    assert(flat_file_pos->IsNull());\n+}"
      }
    ]
  },
  {
    "sha": "9718f38f54357f15b8a27e060aed56f91015112d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5NzE4ZjM4ZjU0MzU3ZjE1YjhhMjdlMDYwYWVkNTZmOTEwMTUxMTJk",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-03-27T20:55:47Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-03-29T13:17:04Z"
      },
      "message": "tests: Add fuzzing harness for functions/classes in merkleblock.h",
      "tree": {
        "sha": "83d6a26e44c7e4c9baae20f5455c2fb3486debdd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/83d6a26e44c7e4c9baae20f5455c2fb3486debdd"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9718f38f54357f15b8a27e060aed56f91015112d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9718f38f54357f15b8a27e060aed56f91015112d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9718f38f54357f15b8a27e060aed56f91015112d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9718f38f54357f15b8a27e060aed56f91015112d/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a16ea051f915eb4c975fe06f89470aa99d99d7e4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a16ea051f915eb4c975fe06f89470aa99d99d7e4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a16ea051f915eb4c975fe06f89470aa99d99d7e4"
      }
    ],
    "stats": {
      "total": 34,
      "additions": 34,
      "deletions": 0
    },
    "files": [
      {
        "sha": "16a23a073f5b618a79f7a2b6f05d236a93dfd9ee",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9718f38f54357f15b8a27e060aed56f91015112d/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9718f38f54357f15b8a27e060aed56f91015112d/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=9718f38f54357f15b8a27e060aed56f91015112d",
        "patch": "@@ -45,6 +45,7 @@ FUZZ_TARGETS = \\\n   test/fuzz/key_origin_info_deserialize \\\n   test/fuzz/locale \\\n   test/fuzz/merkle_block_deserialize \\\n+  test/fuzz/merkleblock \\\n   test/fuzz/messageheader_deserialize \\\n   test/fuzz/multiplication_overflow \\\n   test/fuzz/net_permissions \\\n@@ -541,6 +542,12 @@ test_fuzz_merkle_block_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n test_fuzz_merkle_block_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n test_fuzz_merkle_block_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp\n \n+test_fuzz_merkleblock_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n+test_fuzz_merkleblock_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_fuzz_merkleblock_LDADD = $(FUZZ_SUITE_LD_COMMON)\n+test_fuzz_merkleblock_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_merkleblock_SOURCES = $(FUZZ_SUITE) test/fuzz/merkleblock.cpp\n+\n test_fuzz_messageheader_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DMESSAGEHEADER_DESERIALIZE=1\n test_fuzz_messageheader_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_messageheader_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)"
      },
      {
        "sha": "eb8fa1d421d480cb0b1663113f28a5955329717f",
        "filename": "src/test/fuzz/merkleblock.cpp",
        "status": "added",
        "additions": 27,
        "deletions": 0,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9718f38f54357f15b8a27e060aed56f91015112d/src/test/fuzz/merkleblock.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9718f38f54357f15b8a27e060aed56f91015112d/src/test/fuzz/merkleblock.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/merkleblock.cpp?ref=9718f38f54357f15b8a27e060aed56f91015112d",
        "patch": "@@ -0,0 +1,27 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <merkleblock.h>\n+#include <optional.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <uint256.h>\n+\n+#include <cstdint>\n+#include <string>\n+#include <vector>\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+    Optional<CPartialMerkleTree> partial_merkle_tree = ConsumeDeserializable<CPartialMerkleTree>(fuzzed_data_provider);\n+    if (!partial_merkle_tree) {\n+        return;\n+    }\n+    (void)partial_merkle_tree->GetNumTransactions();\n+    std::vector<uint256> matches;\n+    std::vector<unsigned int> indices;\n+    (void)partial_merkle_tree->ExtractMatches(matches, indices);\n+}"
      }
    ]
  },
  {
    "sha": "f205cf7fef5618aaa96f016fda168eedfd9da437",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmMjA1Y2Y3ZmVmNTYxOGFhYTk2ZjAxNmZkYTE2OGVlZGZkOWRhNDM3",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-03-27T21:12:28Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-03-29T13:17:04Z"
      },
      "message": "tests: Add fuzzing harness for functions/classes in span.h",
      "tree": {
        "sha": "7086a7a15fef3e872683042ea85861b9a85ee8df",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7086a7a15fef3e872683042ea85861b9a85ee8df"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f205cf7fef5618aaa96f016fda168eedfd9da437",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f205cf7fef5618aaa96f016fda168eedfd9da437",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f205cf7fef5618aaa96f016fda168eedfd9da437",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f205cf7fef5618aaa96f016fda168eedfd9da437/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9718f38f54357f15b8a27e060aed56f91015112d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9718f38f54357f15b8a27e060aed56f91015112d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9718f38f54357f15b8a27e060aed56f91015112d"
      }
    ],
    "stats": {
      "total": 46,
      "additions": 46,
      "deletions": 0
    },
    "files": [
      {
        "sha": "c01c9fc52ac4a4a407a5d126edfec8752d81955d",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f205cf7fef5618aaa96f016fda168eedfd9da437/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f205cf7fef5618aaa96f016fda168eedfd9da437/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=f205cf7fef5618aaa96f016fda168eedfd9da437",
        "patch": "@@ -100,6 +100,7 @@ FUZZ_TARGETS = \\\n   test/fuzz/service_deserialize \\\n   test/fuzz/signature_checker \\\n   test/fuzz/snapshotmetadata_deserialize \\\n+  test/fuzz/span \\\n   test/fuzz/spanparsing \\\n   test/fuzz/string \\\n   test/fuzz/strprintf \\\n@@ -872,6 +873,12 @@ test_fuzz_snapshotmetadata_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n test_fuzz_snapshotmetadata_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n test_fuzz_snapshotmetadata_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp\n \n+test_fuzz_span_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n+test_fuzz_span_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_fuzz_span_LDADD = $(FUZZ_SUITE_LD_COMMON)\n+test_fuzz_span_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_span_SOURCES = $(FUZZ_SUITE) test/fuzz/span.cpp\n+\n test_fuzz_spanparsing_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_spanparsing_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_spanparsing_LDADD = $(FUZZ_SUITE_LD_COMMON)"
      },
      {
        "sha": "4aea530ef25d663723006b127c63f58fea08679d",
        "filename": "src/test/fuzz/span.cpp",
        "status": "added",
        "additions": 39,
        "deletions": 0,
        "changes": 39,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f205cf7fef5618aaa96f016fda168eedfd9da437/src/test/fuzz/span.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f205cf7fef5618aaa96f016fda168eedfd9da437/src/test/fuzz/span.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/span.cpp?ref=f205cf7fef5618aaa96f016fda168eedfd9da437",
        "patch": "@@ -0,0 +1,39 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <span.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+\n+#include <cassert>\n+#include <cstddef>\n+#include <cstdint>\n+#include <string>\n+#include <vector>\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+\n+    std::string str = fuzzed_data_provider.ConsumeBytesAsString(32);\n+    const Span<const char> span = MakeSpan(str);\n+    (void)span.data();\n+    (void)span.begin();\n+    (void)span.end();\n+    if (span.size() > 0) {\n+        const std::ptrdiff_t idx = fuzzed_data_provider.ConsumeIntegralInRange<std::ptrdiff_t>(0U, span.size() - 1U);\n+        (void)span.first(idx);\n+        (void)span.last(idx);\n+        (void)span.subspan(idx);\n+        (void)span.subspan(idx, span.size() - idx);\n+        (void)span[idx];\n+    }\n+\n+    std::string another_str = fuzzed_data_provider.ConsumeBytesAsString(32);\n+    const Span<const char> another_span = MakeSpan(another_str);\n+    assert((span <= another_span) != (span > another_span));\n+    assert((span == another_span) != (span != another_span));\n+    assert((span >= another_span) != (span < another_span));\n+}"
      }
    ]
  },
  {
    "sha": "64d277bbbcbd464b2a795bae011ee808298a42ca",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2NGQyNzdiYmJjYmQ0NjRiMmE3OTViYWUwMTFlZTgwODI5OGE0MmNh",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-03-28T08:10:41Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-03-29T13:17:04Z"
      },
      "message": "tests: Add fuzzing harness for LimitedString (serialize.h)",
      "tree": {
        "sha": "5a2cb3fe4ca3e8734abfc773d3b8a54a96cc2f58",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5a2cb3fe4ca3e8734abfc773d3b8a54a96cc2f58"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/64d277bbbcbd464b2a795bae011ee808298a42ca",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/64d277bbbcbd464b2a795bae011ee808298a42ca",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/64d277bbbcbd464b2a795bae011ee808298a42ca",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/64d277bbbcbd464b2a795bae011ee808298a42ca/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f205cf7fef5618aaa96f016fda168eedfd9da437",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f205cf7fef5618aaa96f016fda168eedfd9da437",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f205cf7fef5618aaa96f016fda168eedfd9da437"
      }
    ],
    "stats": {
      "total": 29,
      "additions": 29,
      "deletions": 0
    },
    "files": [
      {
        "sha": "3de0cf8db7c10f72d1a9bb338d5b400f73467dbc",
        "filename": "src/test/fuzz/string.cpp",
        "status": "modified",
        "additions": 29,
        "deletions": 0,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/64d277bbbcbd464b2a795bae011ee808298a42ca/src/test/fuzz/string.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/64d277bbbcbd464b2a795bae011ee808298a42ca/src/test/fuzz/string.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/string.cpp?ref=64d277bbbcbd464b2a795bae011ee808298a42ca",
        "patch": "@@ -12,6 +12,8 @@\n #include <rpc/server.h>\n #include <rpc/util.h>\n #include <script/descriptor.h>\n+#include <serialize.h>\n+#include <streams.h>\n #include <test/fuzz/FuzzedDataProvider.h>\n #include <test/fuzz/fuzz.h>\n #include <test/fuzz/util.h>\n@@ -24,6 +26,7 @@\n #include <util/system.h>\n #include <util/translation.h>\n #include <util/url.h>\n+#include <version.h>\n \n #include <cstdint>\n #include <string>\n@@ -86,4 +89,30 @@ void test_one_input(const std::vector<uint8_t>& buffer)\n     (void)urlDecode(random_string_1);\n     (void)ValidAsCString(random_string_1);\n     (void)_(random_string_1.c_str());\n+\n+    {\n+        CDataStream data_stream{SER_NETWORK, INIT_PROTO_VERSION};\n+        std::string s;\n+        LimitedString<10> limited_string = LIMITED_STRING(s, 10);\n+        data_stream << random_string_1;\n+        try {\n+            data_stream >> limited_string;\n+            assert(data_stream.empty());\n+            assert(s.size() <= random_string_1.size());\n+            assert(s.size() <= 10);\n+            if (!random_string_1.empty()) {\n+                assert(!s.empty());\n+            }\n+        } catch (const std::ios_base::failure&) {\n+        }\n+    }\n+    {\n+        CDataStream data_stream{SER_NETWORK, INIT_PROTO_VERSION};\n+        const LimitedString<10> limited_string = LIMITED_STRING(random_string_1, 10);\n+        data_stream << limited_string;\n+        std::string deserialized_string;\n+        data_stream >> deserialized_string;\n+        assert(data_stream.empty());\n+        assert(deserialized_string == random_string_1);\n+    }\n }"
      }
    ]
  },
  {
    "sha": "11a520f6793e21e0a8a9301f5ec4c28a48131b85",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxMWE1MjBmNjc5M2UyMWUwYThhOTMwMWY1ZWM0YzI4YTQ4MTMxYjg1",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-03-28T08:56:38Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-03-29T13:17:04Z"
      },
      "message": "tests: Add fuzzing harness for functions/classes in random.h",
      "tree": {
        "sha": "5b647e835f3a5dd934688fad64043818fde440d2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5b647e835f3a5dd934688fad64043818fde440d2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/11a520f6793e21e0a8a9301f5ec4c28a48131b85",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/11a520f6793e21e0a8a9301f5ec4c28a48131b85",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/11a520f6793e21e0a8a9301f5ec4c28a48131b85",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/11a520f6793e21e0a8a9301f5ec4c28a48131b85/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "64d277bbbcbd464b2a795bae011ee808298a42ca",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/64d277bbbcbd464b2a795bae011ee808298a42ca",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/64d277bbbcbd464b2a795bae011ee808298a42ca"
      }
    ],
    "stats": {
      "total": 71,
      "additions": 62,
      "deletions": 9
    },
    "files": [
      {
        "sha": "059876bec839bce66d9519700e82f89252402623",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/11a520f6793e21e0a8a9301f5ec4c28a48131b85/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/11a520f6793e21e0a8a9301f5ec4c28a48131b85/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=11a520f6793e21e0a8a9301f5ec4c28a48131b85",
        "patch": "@@ -91,6 +91,7 @@ FUZZ_TARGETS = \\\n   test/fuzz/psbt_input_deserialize \\\n   test/fuzz/psbt_output_deserialize \\\n   test/fuzz/pub_key_deserialize \\\n+  test/fuzz/random \\\n   test/fuzz/rolling_bloom_filter \\\n   test/fuzz/script \\\n   test/fuzz/script_deserialize \\\n@@ -819,6 +820,12 @@ test_fuzz_pub_key_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n test_fuzz_pub_key_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n test_fuzz_pub_key_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp\n \n+test_fuzz_random_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n+test_fuzz_random_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_fuzz_random_LDADD = $(FUZZ_SUITE_LD_COMMON)\n+test_fuzz_random_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_random_SOURCES = $(FUZZ_SUITE) test/fuzz/random.cpp\n+\n test_fuzz_rolling_bloom_filter_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_rolling_bloom_filter_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_rolling_bloom_filter_LDADD = $(FUZZ_SUITE_LD_COMMON)"
      },
      {
        "sha": "4e4597cff631662cb03368678957f7b987f892a0",
        "filename": "src/random.h",
        "status": "modified",
        "additions": 9,
        "deletions": 5,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/11a520f6793e21e0a8a9301f5ec4c28a48131b85/src/random.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/11a520f6793e21e0a8a9301f5ec4c28a48131b85/src/random.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/random.h?ref=11a520f6793e21e0a8a9301f5ec4c28a48131b85",
        "patch": "@@ -103,7 +103,8 @@ void RandAddEvent(const uint32_t event_info) noexcept;\n  *\n  * This class is not thread-safe.\n  */\n-class FastRandomContext {\n+class FastRandomContext\n+{\n private:\n     bool requires_seed;\n     ChaCha20 rng;\n@@ -155,7 +156,8 @@ class FastRandomContext {\n     }\n \n     /** Generate a random (bits)-bit integer. */\n-    uint64_t randbits(int bits) noexcept {\n+    uint64_t randbits(int bits) noexcept\n+    {\n         if (bits == 0) {\n             return 0;\n         } else if (bits > 32) {\n@@ -169,7 +171,9 @@ class FastRandomContext {\n         }\n     }\n \n-    /** Generate a random integer in the range [0..range). */\n+    /** Generate a random integer in the range [0..range).\n+     * Precondition: range > 0.\n+     */\n     uint64_t randrange(uint64_t range) noexcept\n     {\n         assert(range);\n@@ -210,7 +214,7 @@ class FastRandomContext {\n  * debug mode detects and panics on. This is a known issue, see\n  * https://stackoverflow.com/questions/22915325/avoiding-self-assignment-in-stdshuffle\n  */\n-template<typename I, typename R>\n+template <typename I, typename R>\n void Shuffle(I first, I last, R&& rng)\n {\n     while (first != last) {\n@@ -233,7 +237,7 @@ static const int NUM_OS_RANDOM_BYTES = 32;\n /** Get 32 bytes of system entropy. Do not use this in application code: use\n  * GetStrongRandBytes instead.\n  */\n-void GetOSRand(unsigned char *ent32);\n+void GetOSRand(unsigned char* ent32);\n \n /** Check that OS randomness is available and returning the requested number\n  * of bytes."
      },
      {
        "sha": "7df6594ad691ac074742ce1f0789e7cbb628b454",
        "filename": "src/test/fuzz/random.cpp",
        "status": "added",
        "additions": 31,
        "deletions": 0,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/11a520f6793e21e0a8a9301f5ec4c28a48131b85/src/test/fuzz/random.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/11a520f6793e21e0a8a9301f5ec4c28a48131b85/src/test/fuzz/random.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/random.cpp?ref=11a520f6793e21e0a8a9301f5ec4c28a48131b85",
        "patch": "@@ -0,0 +1,31 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <random.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+\n+#include <algorithm>\n+#include <cstdint>\n+#include <string>\n+#include <vector>\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+    FastRandomContext fast_random_context{ConsumeUInt256(fuzzed_data_provider)};\n+    (void)fast_random_context.rand64();\n+    (void)fast_random_context.randbits(fuzzed_data_provider.ConsumeIntegralInRange<int>(0, 64));\n+    (void)fast_random_context.randrange(fuzzed_data_provider.ConsumeIntegralInRange<uint64_t>(FastRandomContext::min() + 1, FastRandomContext::max()));\n+    (void)fast_random_context.randbytes(fuzzed_data_provider.ConsumeIntegralInRange<size_t>(0, 1024));\n+    (void)fast_random_context.rand32();\n+    (void)fast_random_context.rand256();\n+    (void)fast_random_context.randbool();\n+    (void)fast_random_context();\n+\n+    std::vector<int64_t> integrals = ConsumeRandomLengthIntegralVector<int64_t>(fuzzed_data_provider);\n+    Shuffle(integrals.begin(), integrals.end(), fast_random_context);\n+    std::shuffle(integrals.begin(), integrals.end(), fast_random_context);\n+}"
      },
      {
        "sha": "7004aff420972d772706023043c9067859f542ff",
        "filename": "src/test/fuzz/util.h",
        "status": "modified",
        "additions": 15,
        "deletions": 4,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/11a520f6793e21e0a8a9301f5ec4c28a48131b85/src/test/fuzz/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/11a520f6793e21e0a8a9301f5ec4c28a48131b85/src/test/fuzz/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/util.h?ref=11a520f6793e21e0a8a9301f5ec4c28a48131b85",
        "patch": "@@ -20,13 +20,13 @@\n #include <string>\n #include <vector>\n \n-NODISCARD inline std::vector<uint8_t> ConsumeRandomLengthByteVector(FuzzedDataProvider& fuzzed_data_provider, size_t max_length = 4096) noexcept\n+NODISCARD inline std::vector<uint8_t> ConsumeRandomLengthByteVector(FuzzedDataProvider& fuzzed_data_provider, const size_t max_length = 4096) noexcept\n {\n     const std::string s = fuzzed_data_provider.ConsumeRandomLengthString(max_length);\n     return {s.begin(), s.end()};\n }\n \n-NODISCARD inline std::vector<std::string> ConsumeRandomLengthStringVector(FuzzedDataProvider& fuzzed_data_provider, size_t max_vector_size = 16, size_t max_string_length = 16) noexcept\n+NODISCARD inline std::vector<std::string> ConsumeRandomLengthStringVector(FuzzedDataProvider& fuzzed_data_provider, const size_t max_vector_size = 16, const size_t max_string_length = 16) noexcept\n {\n     const size_t n_elements = fuzzed_data_provider.ConsumeIntegralInRange<size_t>(0, max_vector_size);\n     std::vector<std::string> r;\n@@ -37,7 +37,18 @@ NODISCARD inline std::vector<std::string> ConsumeRandomLengthStringVector(Fuzzed\n }\n \n template <typename T>\n-NODISCARD inline Optional<T> ConsumeDeserializable(FuzzedDataProvider& fuzzed_data_provider, size_t max_length = 4096) noexcept\n+NODISCARD inline std::vector<T> ConsumeRandomLengthIntegralVector(FuzzedDataProvider& fuzzed_data_provider, const size_t max_vector_size = 16) noexcept\n+{\n+    const size_t n_elements = fuzzed_data_provider.ConsumeIntegralInRange<size_t>(0, max_vector_size);\n+    std::vector<T> r;\n+    for (size_t i = 0; i < n_elements; ++i) {\n+        r.push_back(fuzzed_data_provider.ConsumeIntegral<T>());\n+    }\n+    return r;\n+}\n+\n+template <typename T>\n+NODISCARD inline Optional<T> ConsumeDeserializable(FuzzedDataProvider& fuzzed_data_provider, const size_t max_length = 4096) noexcept\n {\n     const std::vector<uint8_t> buffer = ConsumeRandomLengthByteVector(fuzzed_data_provider, max_length);\n     CDataStream ds{buffer, SER_NETWORK, INIT_PROTO_VERSION};\n@@ -81,7 +92,7 @@ NODISCARD inline uint256 ConsumeUInt256(FuzzedDataProvider& fuzzed_data_provider\n }\n \n template <typename T>\n-bool MultiplicationOverflow(T i, T j)\n+NODISCARD bool MultiplicationOverflow(const T i, const T j) noexcept\n {\n     static_assert(std::is_integral<T>::value, \"Integral required.\");\n     if (std::numeric_limits<T>::is_signed) {"
      }
    ]
  }
]