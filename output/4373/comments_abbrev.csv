jgarzik,2014-06-20T14:31:54Z,"Comments:\n- Agree this wants fixing.\n- Memory exhaustion in RPC is a low priority, since it's an internal control plane, not something that should be exposed to the open Internet.\n- 16k seems small.  It is easy to construct a valid JSON batch request of this size.  Make it 1MB.\n- During review, I noticed we use getline(), which is similarly unbounded input.\n\nSo, increase the limit and consid",https://github.com/bitcoin/bitcoin/pull/4373#issuecomment-46684473,46684473,
gavinandresen,2014-06-20T14:35:23Z,"So with this fix, you actually have to SEND 4GB (or whatever) of data to exhaust 4GB (or whatever) of memory, instead of just sending a header SAYING that you'll send 4GB of data.\n\nACK: better is better. Although did you consider just setting an arbitrary, large limit on nLen? Code would be simpler...\n",https://github.com/bitcoin/bitcoin/pull/4373#issuecomment-46684899,46684899,
jgarzik,2014-06-20T14:42:28Z,"@gavinandresen Actually, very good final point.  Just change the limit here:\n\n```\n    int nLen = ReadHTTPHeaders(stream, mapHeadersRet);\n    if (nLen < 0 || nLen > (int)MAX_SIZE)\n        return HTTP_INTERNAL_SERVER_ERROR;\n```\n\nto 1MB.\n\nCurrently the limit is _not_ infinite, either:\n\n```\nstatic const unsigned int MAX_SIZE = 0x02000000;\n```\n\nSo, that's 32MB.\n",https://github.com/bitcoin/bitcoin/pull/4373#issuecomment-46685824,46685824,
jgarzik,2014-06-20T14:45:00Z,"General comment:  Our RPC code really wants to be smarter in any case.  You can just as easily open a bunch of connections, even with the loop, and exhaust memory.  Or another familiar HTTP attack is opening a bunch of connections, keeping them open for hours or days without making progress.\n\ni.e. send one character per day across 10,000 connections.  Stupid server will not timeout, and sockets ",https://github.com/bitcoin/bitcoin/pull/4373#issuecomment-46686155,46686155,
laanwj,2014-06-20T14:47:20Z,"Yes there is already a limit, and yes this is low priority, I was mislead by the issue description that this happened _before_ the rpcallow check. Closing.\n",https://github.com/bitcoin/bitcoin/pull/4373#issuecomment-46686451,46686451,
laanwj,2014-06-20T14:49:19Z,"Also it's not about unbounded input, but as @gavinandresen remarks correctly that with this change you actually have to send the amount of bytes to get them allocated instead of being able to open 100 connections up-front and specifying 32 mbytes of data and keeping open the connection without actually sending it (which is very cheap to do).\n",https://github.com/bitcoin/bitcoin/pull/4373#issuecomment-46686681,46686681,
jgarzik,2014-06-20T14:55:28Z,"@laanwj Agree, that is why I did not NAK the patch.\n\nAdding a loop is fine with me...  just 16k was _much_ too low.\n",https://github.com/bitcoin/bitcoin/pull/4373#issuecomment-46687393,46687393,
sipa,2014-06-20T22:39:43Z,"Untested ACK; I would raise the 16k too, though.\n",https://github.com/bitcoin/bitcoin/pull/4373#issuecomment-46734007,46734007,
laanwj,2014-06-21T08:03:16Z,"OK, seemingly this fix-on-top-of-a-stack-of-hacks is good enough for now, will change POST_READ_SIZE to 1MiB.\n",https://github.com/bitcoin/bitcoin/pull/4373#issuecomment-46747495,46747495,
laanwj,2014-07-04T07:23:17Z,Rebased and changed POST_READ_SIZE to 256kiB.\n,https://github.com/bitcoin/bitcoin/pull/4373#issuecomment-48015462,48015462,
BitcoinPullTester,2014-07-04T08:05:32Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/p4373_2ec5a3d212ac4b09e6c32d495f34ee3cdedc8c66/ for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-te",https://github.com/bitcoin/bitcoin/pull/4373#issuecomment-48018189,48018189,
