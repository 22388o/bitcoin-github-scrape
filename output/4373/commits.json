[
  {
    "sha": "2ec5a3d212ac4b09e6c32d495f34ee3cdedc8c66",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyZWM1YTNkMjEyYWM0YjA5ZTZjMzJkNDk1ZjM0ZWUzY2RlZGM4YzY2",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-06-20T13:21:30Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-07-04T07:20:39Z"
      },
      "message": "rpc: Prevent easy memory exhaustion attack\n\nAllocate memory for POST message data only as bytes come in, instead of\nall at once at the beginning.\n\nFixes #4343.",
      "tree": {
        "sha": "0e6bc0e598836a18ccbea70fc58968226acd5c28",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0e6bc0e598836a18ccbea70fc58968226acd5c28"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2ec5a3d212ac4b09e6c32d495f34ee3cdedc8c66",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJTtlXIAAoJEHSBCwEjRsmm70cIAMfqTTpfjZwRUnsI/8OxREUh\nDvI2d/GLwS5O4ukG3QmiOS2uUU5CeNct7K9sVNJchU+cKMpEckRldTn3ShRKPLI5\nhslq5+SRb4rXmKfb2rMgqp9EgFeBgGOE21jQjE/n7nVBLf2JQhE6APnqSjocoY28\nse+W1chNzxGNYVU5gxZ3t0JWeQ7To2vKIYt/FKHO22mV1pq8va12bHz0EwXJTnsY\nu6Psig+heuKIJbT4F/z83afVT8BT6SDO8b5vDFgNzSwW55vPBy0cAWqlGo4WRUrY\nZNeItbGFPQs8hllaYO3rVxmXYWkofvxPW0KqVQ3PJTfL9900UNVN/TB+ahgGdt4=\n=ZD2l\n-----END PGP SIGNATURE-----",
        "payload": "tree 0e6bc0e598836a18ccbea70fc58968226acd5c28\nparent e81e2e8f7cdee307227f150a6a2408c01fcafbf2\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1403270490 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1404458439 +0200\n\nrpc: Prevent easy memory exhaustion attack\n\nAllocate memory for POST message data only as bytes come in, instead of\nall at once at the beginning.\n\nFixes #4343.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2ec5a3d212ac4b09e6c32d495f34ee3cdedc8c66",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2ec5a3d212ac4b09e6c32d495f34ee3cdedc8c66",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2ec5a3d212ac4b09e6c32d495f34ee3cdedc8c66/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e81e2e8f7cdee307227f150a6a2408c01fcafbf2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e81e2e8f7cdee307227f150a6a2408c01fcafbf2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e81e2e8f7cdee307227f150a6a2408c01fcafbf2"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 14,
      "deletions": 2
    },
    "files": [
      {
        "sha": "9e18ca847e4ed60901974ddff26abb3056ab0c62",
        "filename": "src/rpcprotocol.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 2,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2ec5a3d212ac4b09e6c32d495f34ee3cdedc8c66/src/rpcprotocol.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2ec5a3d212ac4b09e6c32d495f34ee3cdedc8c66/src/rpcprotocol.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcprotocol.cpp?ref=2ec5a3d212ac4b09e6c32d495f34ee3cdedc8c66",
        "patch": "@@ -25,6 +25,9 @@ using namespace boost;\n using namespace boost::asio;\n using namespace json_spirit;\n \n+// Number of bytes to allocate and read at most at once in post data\n+const size_t POST_READ_SIZE = 256 * 1024;\n+\n //\n // HTTP protocol\n //\n@@ -204,8 +207,17 @@ int ReadHTTPMessage(std::basic_istream<char>& stream, map<string,\n     // Read message\n     if (nLen > 0)\n     {\n-        vector<char> vch(nLen);\n-        stream.read(&vch[0], nLen);\n+        vector<char> vch;\n+        size_t ptr = 0;\n+        while (ptr < (size_t)nLen)\n+        {\n+            size_t bytes_to_read = std::min((size_t)nLen - ptr, POST_READ_SIZE);\n+            vch.resize(ptr + bytes_to_read);\n+            stream.read(&vch[ptr], bytes_to_read);\n+            if (!stream) // Connection lost while reading\n+                return HTTP_INTERNAL_SERVER_ERROR;\n+            ptr += bytes_to_read;\n+        }\n         strMessageRet = string(vch.begin(), vch.end());\n     }\n "
      }
    ]
  }
]