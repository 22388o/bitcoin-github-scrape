[
  {
    "sha": "723cafcbcfe134d02185f3f0079386dac321a32c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3MjNjYWZjYmNmZTEzNGQwMjE4NWYzZjAwNzkzODZkYWMzMjFhMzJj",
    "commit": {
      "author": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2012-04-05T00:56:13Z"
      },
      "committer": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2012-04-05T00:56:13Z"
      },
      "message": "Bug fix listtransactions from/count handling.",
      "tree": {
        "sha": "701d833ebff2446023c4b4f407cb9b45daa583bf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/701d833ebff2446023c4b4f407cb9b45daa583bf"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/723cafcbcfe134d02185f3f0079386dac321a32c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/723cafcbcfe134d02185f3f0079386dac321a32c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/723cafcbcfe134d02185f3f0079386dac321a32c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/723cafcbcfe134d02185f3f0079386dac321a32c/comments",
    "author": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b0a7e05a45a925d78efd00ecca6dce9b7a9530f9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b0a7e05a45a925d78efd00ecca6dce9b7a9530f9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b0a7e05a45a925d78efd00ecca6dce9b7a9530f9"
      }
    ],
    "stats": {
      "total": 38,
      "additions": 23,
      "deletions": 15
    },
    "files": [
      {
        "sha": "115164dc8b48230b29173217c096103c6fb00c1e",
        "filename": "src/bitcoinrpc.cpp",
        "status": "modified",
        "additions": 23,
        "deletions": 15,
        "changes": 38,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/723cafcbcfe134d02185f3f0079386dac321a32c/src/bitcoinrpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/723cafcbcfe134d02185f3f0079386dac321a32c/src/bitcoinrpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoinrpc.cpp?ref=723cafcbcfe134d02185f3f0079386dac321a32c",
        "patch": "@@ -1285,14 +1285,21 @@ Value listtransactions(const Array& params, bool fHelp)\n     if (params.size() > 2)\n         nFrom = params[2].get_int();\n \n+    if (nCount < 0)\n+        throw JSONRPCError(-8, \"Negative count\");\n+    if (nFrom < 0)\n+        throw JSONRPCError(-8, \"Negative from\");\n+\n     Array ret;\n     CWalletDB walletdb(pwalletMain->strWalletFile);\n \n-    // Firs: get all CWalletTx and CAccountingEntry into a sorted-by-time multimap:\n+    // First: get all CWalletTx and CAccountingEntry into a sorted-by-time multimap.\n     typedef pair<CWalletTx*, CAccountingEntry*> TxPair;\n     typedef multimap<int64, TxPair > TxItems;\n     TxItems txByTime;\n \n+    // Note: maintaining indices in the database of (account,time) --> txid and (account, time) --> acentry\n+    // would make this much faster for applications that do this a lot.\n     for (map<uint256, CWalletTx>::iterator it = pwalletMain->mapWallet.begin(); it != pwalletMain->mapWallet.end(); ++it)\n     {\n         CWalletTx* wtx = &((*it).second);\n@@ -1305,10 +1312,8 @@ Value listtransactions(const Array& params, bool fHelp)\n         txByTime.insert(make_pair(entry.nTime, TxPair((CWalletTx*)0, &entry)));\n     }\n \n-    // Now: iterate backwards until we have nCount items to return:\n-    TxItems::reverse_iterator it = txByTime.rbegin();\n-    if (txByTime.size() > nFrom) std::advance(it, nFrom);\n-    for (; it != txByTime.rend(); ++it)\n+    // iterate backwards until we have nCount items to return:\n+    for (TxItems::reverse_iterator it = txByTime.rbegin(); it != txByTime.rend(); ++it)\n     {\n         CWalletTx *const pwtx = (*it).second.first;\n         if (pwtx != 0)\n@@ -1317,18 +1322,21 @@ Value listtransactions(const Array& params, bool fHelp)\n         if (pacentry != 0)\n             AcentryToJSON(*pacentry, strAccount, ret);\n \n-        if (ret.size() >= nCount) break;\n+        if (ret.size() >= (nCount+nFrom)) break;\n     }\n-    // ret is now newest to oldest\n+    // ret is newest to oldest\n     \n-    // Make sure we return only last nCount items (sends-to-self might give us an extra):\n-    if (ret.size() > nCount)\n-    {\n-        Array::iterator last = ret.begin();\n-        std::advance(last, nCount);\n-        ret.erase(last, ret.end());\n-    }\n-    std::reverse(ret.begin(), ret.end()); // oldest to newest\n+    if (nFrom > ret.size()) nFrom = ret.size();\n+    if (nFrom+nCount > ret.size()) nCount = ret.size()-nFrom;\n+    Array::iterator first = ret.begin();\n+    std::advance(first, nFrom);\n+    Array::iterator last = ret.begin();\n+    std::advance(last, nFrom+nCount);\n+\n+    if (last != ret.end()) ret.erase(last, ret.end());\n+    if (first != ret.begin()) ret.erase(ret.begin(), first);\n+\n+    std::reverse(ret.begin(), ret.end()); // Return oldest to newest\n \n     return ret;\n }"
      }
    ]
  }
]