[
  {
    "sha": "131c23d02733c547975844226c1fe0dd4c87211c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxMzFjMjNkMDI3MzNjNTQ3OTc1ODQ0MjI2YzFmZTBkZDRjODcyMTFj",
    "commit": {
      "author": {
        "name": "Alex Morcos",
        "email": "morcos@chaincode.com",
        "date": "2015-09-17T21:43:34Z"
      },
      "committer": {
        "name": "Alex Morcos",
        "email": "morcos@chaincode.com",
        "date": "2015-09-18T00:26:28Z"
      },
      "message": "Fix locking in GetTransaction.\n\nGetTransaction needs to lock cs_main until ReadBlockFromDisk completes, the data inside CBlockIndex's can change since pruning.  This lock was held by all calls to GetTransaction except rest_tx.",
      "tree": {
        "sha": "d1673e355f6c0eb43ff25e279066b24af3f001cf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d1673e355f6c0eb43ff25e279066b24af3f001cf"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/131c23d02733c547975844226c1fe0dd4c87211c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/131c23d02733c547975844226c1fe0dd4c87211c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/131c23d02733c547975844226c1fe0dd4c87211c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/131c23d02733c547975844226c1fe0dd4c87211c/comments",
    "author": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "83f0e2249765520b9f974c45811b53c90b0d0ede",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/83f0e2249765520b9f974c45811b53c90b0d0ede",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/83f0e2249765520b9f974c45811b53c90b0d0ede"
      }
    ],
    "stats": {
      "total": 68,
      "additions": 33,
      "deletions": 35
    },
    "files": [
      {
        "sha": "0b5b52b4999b58b1a1f862b9596f6e5db8b24223",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 33,
        "deletions": 35,
        "changes": 68,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/131c23d02733c547975844226c1fe0dd4c87211c/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/131c23d02733c547975844226c1fe0dd4c87211c/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=131c23d02733c547975844226c1fe0dd4c87211c",
        "patch": "@@ -954,47 +954,45 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n bool GetTransaction(const uint256 &hash, CTransaction &txOut, uint256 &hashBlock, bool fAllowSlow)\n {\n     CBlockIndex *pindexSlow = NULL;\n+\n+    LOCK(cs_main);\n+\n+    if (mempool.lookup(hash, txOut))\n     {\n-        LOCK(cs_main);\n-        {\n-            if (mempool.lookup(hash, txOut))\n-            {\n-                return true;\n-            }\n-        }\n+        return true;\n+    }\n \n-        if (fTxIndex) {\n-            CDiskTxPos postx;\n-            if (pblocktree->ReadTxIndex(hash, postx)) {\n-                CAutoFile file(OpenBlockFile(postx, true), SER_DISK, CLIENT_VERSION);\n-                if (file.IsNull())\n-                    return error(\"%s: OpenBlockFile failed\", __func__);\n-                CBlockHeader header;\n-                try {\n-                    file >> header;\n-                    fseek(file.Get(), postx.nTxOffset, SEEK_CUR);\n-                    file >> txOut;\n-                } catch (const std::exception& e) {\n-                    return error(\"%s: Deserialize or I/O error - %s\", __func__, e.what());\n-                }\n-                hashBlock = header.GetHash();\n-                if (txOut.GetHash() != hash)\n-                    return error(\"%s: txid mismatch\", __func__);\n-                return true;\n+    if (fTxIndex) {\n+        CDiskTxPos postx;\n+        if (pblocktree->ReadTxIndex(hash, postx)) {\n+            CAutoFile file(OpenBlockFile(postx, true), SER_DISK, CLIENT_VERSION);\n+            if (file.IsNull())\n+                return error(\"%s: OpenBlockFile failed\", __func__);\n+            CBlockHeader header;\n+            try {\n+                file >> header;\n+                fseek(file.Get(), postx.nTxOffset, SEEK_CUR);\n+                file >> txOut;\n+            } catch (const std::exception& e) {\n+                return error(\"%s: Deserialize or I/O error - %s\", __func__, e.what());\n             }\n+            hashBlock = header.GetHash();\n+            if (txOut.GetHash() != hash)\n+                return error(\"%s: txid mismatch\", __func__);\n+            return true;\n         }\n+    }\n \n-        if (fAllowSlow) { // use coin database to locate block that contains transaction, and scan it\n-            int nHeight = -1;\n-            {\n-                CCoinsViewCache &view = *pcoinsTip;\n-                const CCoins* coins = view.AccessCoins(hash);\n-                if (coins)\n-                    nHeight = coins->nHeight;\n-            }\n-            if (nHeight > 0)\n-                pindexSlow = chainActive[nHeight];\n+    if (fAllowSlow) { // use coin database to locate block that contains transaction, and scan it\n+        int nHeight = -1;\n+        {\n+            CCoinsViewCache &view = *pcoinsTip;\n+            const CCoins* coins = view.AccessCoins(hash);\n+            if (coins)\n+                nHeight = coins->nHeight;\n         }\n+        if (nHeight > 0)\n+            pindexSlow = chainActive[nHeight];\n     }\n \n     if (pindexSlow) {"
      }
    ]
  }
]