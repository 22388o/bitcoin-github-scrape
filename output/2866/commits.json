[
  {
    "sha": "050d2e953f23db6d818b9cec6b7dc0e52aa7537c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowNTBkMmU5NTNmMjNkYjZkODE4YjljZWM2YjdkYzBlNTJhYTc1Mzdj",
    "commit": {
      "author": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2013-07-31T04:06:44Z"
      },
      "committer": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2013-07-31T04:06:44Z"
      },
      "message": "Remove #define loop from util.h\n\nReplace the loop macro with while (true). The #define caused\nproblems for Qt.",
      "tree": {
        "sha": "2647f444088b18845088a5fac3a6fdabe656eeba",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2647f444088b18845088a5fac3a6fdabe656eeba"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/050d2e953f23db6d818b9cec6b7dc0e52aa7537c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/050d2e953f23db6d818b9cec6b7dc0e52aa7537c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/050d2e953f23db6d818b9cec6b7dc0e52aa7537c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/050d2e953f23db6d818b9cec6b7dc0e52aa7537c/comments",
    "author": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c4316fefa5f56d62eeceb710ee18313bd9be1128",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c4316fefa5f56d62eeceb710ee18313bd9be1128",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c4316fefa5f56d62eeceb710ee18313bd9be1128"
      }
    ],
    "stats": {
      "total": 40,
      "additions": 17,
      "deletions": 23
    },
    "files": [
      {
        "sha": "7a3e6560abbd7d9c70fdc206aae9646dbc2d01bf",
        "filename": "src/bitcoinrpc.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/050d2e953f23db6d818b9cec6b7dc0e52aa7537c/src/bitcoinrpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/050d2e953f23db6d818b9cec6b7dc0e52aa7537c/src/bitcoinrpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoinrpc.cpp?ref=050d2e953f23db6d818b9cec6b7dc0e52aa7537c",
        "patch": "@@ -414,7 +414,7 @@ int ReadHTTPStatus(std::basic_istream<char>& stream, int &proto)\n int ReadHTTPHeaders(std::basic_istream<char>& stream, map<string, string>& mapHeadersRet)\n {\n     int nLen = 0;\n-    loop\n+    while (true)\n     {\n         string str;\n         std::getline(stream, str);"
      },
      {
        "sha": "39e1a51599bae9e78cc02d054a0674fda14f76ee",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/050d2e953f23db6d818b9cec6b7dc0e52aa7537c/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/050d2e953f23db6d818b9cec6b7dc0e52aa7537c/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=050d2e953f23db6d818b9cec6b7dc0e52aa7537c",
        "patch": "@@ -4615,7 +4615,7 @@ void static BitcoinMiner(CWallet *pwallet)\n     CReserveKey reservekey(pwallet);\n     unsigned int nExtraNonce = 0;\n \n-    try { loop {\n+    try { while (true) {\n         if (Params().NetworkID() != CChainParams::REGTEST) {\n             // Busy-wait for the network to come online so we don't waste time mining\n             // on an obsolete chain. In regtest mode we expect to fly solo.\n@@ -4659,7 +4659,7 @@ void static BitcoinMiner(CWallet *pwallet)\n         uint256 hashTarget = CBigNum().SetCompact(pblock->nBits).getuint256();\n         uint256 hashbuf[2];\n         uint256& hash = *alignup<16>(hashbuf);\n-        loop\n+        while (true)\n         {\n             unsigned int nHashesDone = 0;\n             unsigned int nNonceFound;"
      },
      {
        "sha": "4ee1895a80bf8f9b2224b00c0e97a74a0ba003c6",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/050d2e953f23db6d818b9cec6b7dc0e52aa7537c/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/050d2e953f23db6d818b9cec6b7dc0e52aa7537c/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=050d2e953f23db6d818b9cec6b7dc0e52aa7537c",
        "patch": "@@ -129,7 +129,7 @@ CAddress GetLocalAddress(const CNetAddr *paddrPeer)\n bool RecvLine(SOCKET hSocket, string& strLine)\n {\n     strLine = \"\";\n-    loop\n+    while (true)\n     {\n         char c;\n         int nBytes = recv(hSocket, &c, 1, 0);\n@@ -301,7 +301,7 @@ bool GetMyExternalIP2(const CService& addrConnect, const char* pszGet, const cha\n     {\n         if (strLine.empty()) // HTTP response is separated from headers by blank line\n         {\n-            loop\n+            while (true)\n             {\n                 if (!RecvLine(hSocket, strLine))\n                 {\n@@ -741,7 +741,7 @@ static list<CNode*> vNodesDisconnected;\n void ThreadSocketHandler()\n {\n     unsigned int nPrevNodeCount = 0;\n-    loop\n+    while (true)\n     {\n         //\n         // Disconnect nodes\n@@ -1105,7 +1105,7 @@ void ThreadMapPort()\n         string strDesc = \"Bitcoin \" + FormatFullVersion();\n \n         try {\n-            loop {\n+            while (true) {\n #ifndef UPNPDISCOVER_SUCCESS\n                 /* miniupnpc 1.5 */\n                 r = UPNP_AddPortMapping(urls.controlURL, data.first.servicetype,\n@@ -1268,7 +1268,7 @@ void ThreadOpenConnections()\n \n     // Initiate network connections\n     int64 nStart = GetTime();\n-    loop\n+    while (true)\n     {\n         ProcessOneShot();\n \n@@ -1309,7 +1309,7 @@ void ThreadOpenConnections()\n         int64 nANow = GetAdjustedTime();\n \n         int nTries = 0;\n-        loop\n+        while (true)\n         {\n             // use an nUnkBias between 10 (no outgoing connections) and 90 (8 outgoing connections)\n             CAddress addr = addrman.Select(10 + min(nOutbound,8)*10);"
      },
      {
        "sha": "3b98334696a5618987957e21019d95fb7ea0ce13",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/050d2e953f23db6d818b9cec6b7dc0e52aa7537c/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/050d2e953f23db6d818b9cec6b7dc0e52aa7537c/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=050d2e953f23db6d818b9cec6b7dc0e52aa7537c",
        "patch": "@@ -15,7 +15,6 @@\n #include \"splashscreen.h\"\n #include \"intro.h\"\n \n-#undef loop /* Todo: ugh, remove this when the #define loop is gone from util.h */\n #include <QApplication>\n #include <QMessageBox>\n #if QT_VERSION < 0x050000"
      },
      {
        "sha": "4ed734b9c97fb86ab422f06a691883ecef23a59b",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/050d2e953f23db6d818b9cec6b7dc0e52aa7537c/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/050d2e953f23db6d818b9cec6b7dc0e52aa7537c/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=050d2e953f23db6d818b9cec6b7dc0e52aa7537c",
        "patch": "@@ -28,7 +28,6 @@\n #include \"macdockiconhandler.h\"\n #endif\n \n-#undef loop /* Todo: ugh, remove this when the #define loop is gone from util.h */\n #include <QApplication>\n #include <QMenuBar>\n #include <QMenu>"
      },
      {
        "sha": "0ea5060e768ac3f883a2198ac76f315229725ff8",
        "filename": "src/qt/guiutil.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/050d2e953f23db6d818b9cec6b7dc0e52aa7537c/src/qt/guiutil.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/050d2e953f23db6d818b9cec6b7dc0e52aa7537c/src/qt/guiutil.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiutil.cpp?ref=050d2e953f23db6d818b9cec6b7dc0e52aa7537c",
        "patch": "@@ -7,7 +7,6 @@\n #include \"util.h\"\n #include \"init.h\"\n \n-#undef loop /* Todo: ugh, remove this when the #define loop is gone from util.h */\n #include <QApplication>\n #include <QDateTime>\n #include <QDoubleValidator>"
      },
      {
        "sha": "0d31f24a13f6e951972ae5e1b66a98c7ba3c256d",
        "filename": "src/qt/paymentserver.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/050d2e953f23db6d818b9cec6b7dc0e52aa7537c/src/qt/paymentserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/050d2e953f23db6d818b9cec6b7dc0e52aa7537c/src/qt/paymentserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/paymentserver.cpp?ref=050d2e953f23db6d818b9cec6b7dc0e52aa7537c",
        "patch": "@@ -8,7 +8,6 @@\n #include \"ui_interface.h\"\n #include \"util.h\"\n \n-#undef loop /* Todo: ugh, remove this when the #define loop is gone from util.h */\n #include <QApplication>\n #include <QByteArray>\n #include <QDataStream>"
      },
      {
        "sha": "22cf04486b5bb8e8716a53d78d8e345f0b62cd35",
        "filename": "src/qt/splashscreen.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/050d2e953f23db6d818b9cec6b7dc0e52aa7537c/src/qt/splashscreen.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/050d2e953f23db6d818b9cec6b7dc0e52aa7537c/src/qt/splashscreen.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/splashscreen.cpp?ref=050d2e953f23db6d818b9cec6b7dc0e52aa7537c",
        "patch": "@@ -2,7 +2,6 @@\n #include \"clientversion.h\"\n #include \"util.h\"\n \n-#undef loop /* Todo: ugh, remove this when the #define loop is gone from util.h */\n #include <QApplication>\n #include <QPainter>\n "
      },
      {
        "sha": "5699fbfb6a4ad6ec2b0098890c600db4d5f0b300",
        "filename": "src/script.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/050d2e953f23db6d818b9cec6b7dc0e52aa7537c/src/script.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/050d2e953f23db6d818b9cec6b7dc0e52aa7537c/src/script.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script.cpp?ref=050d2e953f23db6d818b9cec6b7dc0e52aa7537c",
        "patch": "@@ -1163,7 +1163,7 @@ bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, vector<vector<unsi\n         // Compare\n         CScript::const_iterator pc1 = script1.begin();\n         CScript::const_iterator pc2 = script2.begin();\n-        loop\n+        while (true)\n         {\n             if (pc1 == script1.end() && pc2 == script2.end())\n             {"
      },
      {
        "sha": "c4212b39845d93e11463e10077b1800073138134",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/050d2e953f23db6d818b9cec6b7dc0e52aa7537c/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/050d2e953f23db6d818b9cec6b7dc0e52aa7537c/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=050d2e953f23db6d818b9cec6b7dc0e52aa7537c",
        "patch": "@@ -311,7 +311,7 @@ string vstrprintf(const char *format, va_list ap)\n     char* p = buffer;\n     int limit = sizeof(buffer);\n     int ret;\n-    loop\n+    while (true)\n     {\n         va_list arg_ptr;\n         va_copy(arg_ptr, ap);\n@@ -371,7 +371,7 @@ void ParseString(const string& str, char c, vector<string>& v)\n         return;\n     string::size_type i1 = 0;\n     string::size_type i2;\n-    loop\n+    while (true)\n     {\n         i2 = str.find(c, i1);\n         if (i2 == str.npos)\n@@ -487,7 +487,7 @@ vector<unsigned char> ParseHex(const char* psz)\n {\n     // convert hex dump to vector\n     vector<unsigned char> vch;\n-    loop\n+    while (true)\n     {\n         while (isspace(*psz))\n             psz++;\n@@ -941,7 +941,7 @@ string DecodeBase32(const string& str)\n \n bool WildcardMatch(const char* psz, const char* mask)\n {\n-    loop\n+    while (true)\n     {\n         switch (*mask)\n         {"
      },
      {
        "sha": "9ca73f3311a5fa2b343b19cb27b683378fedc672",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/050d2e953f23db6d818b9cec6b7dc0e52aa7537c/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/050d2e953f23db6d818b9cec6b7dc0e52aa7537c/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=050d2e953f23db6d818b9cec6b7dc0e52aa7537c",
        "patch": "@@ -35,7 +35,6 @@ typedef unsigned long long  uint64;\n static const int64 COIN = 100000000;\n static const int64 CENT = 1000000;\n \n-#define loop                for (;;)\n #define BEGIN(a)            ((char*)&(a))\n #define END(a)              ((char*)&((&(a))[1]))\n #define UBEGIN(a)           ((unsigned char*)&(a))"
      },
      {
        "sha": "88b07c9d76a50048f2824dbf35a024a829180628",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/050d2e953f23db6d818b9cec6b7dc0e52aa7537c/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/050d2e953f23db6d818b9cec6b7dc0e52aa7537c/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=050d2e953f23db6d818b9cec6b7dc0e52aa7537c",
        "patch": "@@ -1194,7 +1194,7 @@ bool CWallet::CreateTransaction(const vector<pair<CScript, int64> >& vecSend,\n         LOCK2(cs_main, cs_wallet);\n         {\n             nFeeRet = nTransactionFee;\n-            loop\n+            while (true)\n             {\n                 wtxNew.vin.clear();\n                 wtxNew.vout.clear();"
      },
      {
        "sha": "014d8cbe293f933fa884783f876cf06a14316013",
        "filename": "src/walletdb.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/050d2e953f23db6d818b9cec6b7dc0e52aa7537c/src/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/050d2e953f23db6d818b9cec6b7dc0e52aa7537c/src/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/walletdb.cpp?ref=050d2e953f23db6d818b9cec6b7dc0e52aa7537c",
        "patch": "@@ -73,7 +73,7 @@ void CWalletDB::ListAccountCreditDebit(const string& strAccount, list<CAccountin\n     if (!pcursor)\n         throw runtime_error(\"CWalletDB::ListAccountCreditDebit() : cannot create DB cursor\");\n     unsigned int fFlags = DB_SET_RANGE;\n-    loop\n+    while (true)\n     {\n         // Read next record\n         CDataStream ssKey(SER_DISK, CLIENT_VERSION);\n@@ -437,7 +437,7 @@ DBErrors CWalletDB::LoadWallet(CWallet* pwallet)\n             return DB_CORRUPT;\n         }\n \n-        loop\n+        while (true)\n         {\n             // Read next record\n             CDataStream ssKey(SER_DISK, CLIENT_VERSION);"
      }
    ]
  }
]