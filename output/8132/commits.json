[
  {
    "sha": "1d6d3dad68bf2284f17c2507c66de0db6b32b6bd",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxZDZkM2RhZDY4YmYyMjg0ZjE3YzI1MDdjNjZkZTBkYjZiMzJiNmJk",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-03-17T12:57:46Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2015-09-24T14:26:25Z"
      },
      "message": "add key generation type\n\nA encrypted wallet can still hold keys which where created when the wallet was unencrypted.\n\nThis PR will add a 8bit-flags-int to the CKeyMetadata class.\n\n`listreceivedbyaddress` will report whether the key was generated within a enctypted wallet or if it was imported throught `importprivkey`",
      "tree": {
        "sha": "e222ba33f5c77faca89dbf7e64fab8a9761d301a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e222ba33f5c77faca89dbf7e64fab8a9761d301a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1d6d3dad68bf2284f17c2507c66de0db6b32b6bd",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1d6d3dad68bf2284f17c2507c66de0db6b32b6bd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1d6d3dad68bf2284f17c2507c66de0db6b32b6bd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1d6d3dad68bf2284f17c2507c66de0db6b32b6bd/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "999c8be81a00146cc0ee0f6fb49104e906e08835",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/999c8be81a00146cc0ee0f6fb49104e906e08835",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/999c8be81a00146cc0ee0f6fb49104e906e08835"
      }
    ],
    "stats": {
      "total": 37,
      "additions": 35,
      "deletions": 2
    },
    "files": [
      {
        "sha": "94c4050759e18659fa7afb5ce99ce923cbc6d199",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1d6d3dad68bf2284f17c2507c66de0db6b32b6bd/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1d6d3dad68bf2284f17c2507c66de0db6b32b6bd/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=1d6d3dad68bf2284f17c2507c66de0db6b32b6bd",
        "patch": "@@ -134,6 +134,8 @@ UniValue importprivkey(const UniValue& params, bool fHelp)\n             return NullUniValue;\n \n         pwalletMain->mapKeyMetadata[vchAddress].nCreateTime = 1;\n+        pwalletMain->mapKeyMetadata[vchAddress].keyFlags |= CKeyMetadata::KEY_GENERATION_TYPE_IMPORTED;\n+        \n \n         if (!pwalletMain->AddKeyPubKey(key, pubkey))\n             throw JSONRPCError(RPC_WALLET_ERROR, \"Error adding key to wallet\");"
      },
      {
        "sha": "25b7f75439846a46c3c2b29879362d102a9f8ca6",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 17,
        "deletions": 0,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1d6d3dad68bf2284f17c2507c66de0db6b32b6bd/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1d6d3dad68bf2284f17c2507c66de0db6b32b6bd/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=1d6d3dad68bf2284f17c2507c66de0db6b32b6bd",
        "patch": "@@ -1166,6 +1166,22 @@ UniValue ListReceived(const UniValue& params, bool fByAccounts)\n             fIsWatchonly = (*it).second.fIsWatchonly;\n         }\n \n+        // convert keyflags into a string\n+        CKeyID keyID;\n+        uint8_t keyFlags = 0;\n+        if (address.GetKeyID(keyID))\n+            keyFlags = pwalletMain->mapKeyMetadata[keyID].keyFlags;\n+\n+        std::string keyGenerationType;\n+        if (keyFlags & CKeyMetadata::KEY_GENERATION_TYPE_UNKNOWN)\n+            keyGenerationType = \"unknown\";\n+        if (keyFlags & CKeyMetadata::KEY_GENERATION_TYPE_ENC_WALLET)\n+            keyGenerationType = \"encrypted\";\n+        else if (keyFlags & CKeyMetadata::KEY_GENERATION_TYPE_UNENC_WALLET)\n+            keyGenerationType = \"unencrypted\";\n+        if (keyFlags & CKeyMetadata::KEY_GENERATION_TYPE_IMPORTED)\n+            keyGenerationType = \"imported\";\n+        \n         if (fByAccounts)\n         {\n             tallyitem& item = mapAccountTally[strAccount];\n@@ -1181,6 +1197,7 @@ UniValue ListReceived(const UniValue& params, bool fByAccounts)\n             obj.push_back(Pair(\"address\",       address.ToString()));\n             obj.push_back(Pair(\"account\",       strAccount));\n             obj.push_back(Pair(\"amount\",        ValueFromAmount(nAmount)));\n+            obj.push_back(Pair(\"key_generation_type\", keyGenerationType));\n             obj.push_back(Pair(\"confirmations\", (nConf == std::numeric_limits<int>::max() ? 0 : nConf)));\n             UniValue transactions(UniValue::VARR);\n             if (it != mapTally.end())"
      },
      {
        "sha": "8f3f41bbbb19571935263c277f4d8d6889bb8e37",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1d6d3dad68bf2284f17c2507c66de0db6b32b6bd/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1d6d3dad68bf2284f17c2507c66de0db6b32b6bd/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=1d6d3dad68bf2284f17c2507c66de0db6b32b6bd",
        "patch": "@@ -94,7 +94,11 @@ CPubKey CWallet::GenerateNewKey()\n \n     // Create new metadata\n     int64_t nCreationTime = GetTime();\n-    mapKeyMetadata[pubkey.GetID()] = CKeyMetadata(nCreationTime);\n+    \n+    CKeyMetadata metadata = CKeyMetadata(nCreationTime);\n+    metadata.keyFlags |= IsCrypted() ? CKeyMetadata::KEY_GENERATION_TYPE_ENC_WALLET : CKeyMetadata::KEY_GENERATION_TYPE_UNENC_WALLET;\n+    mapKeyMetadata[pubkey.GetID()] = metadata;\n+    \n     if (!nTimeFirstKey || nCreationTime < nTimeFirstKey)\n         nTimeFirstKey = nCreationTime;\n "
      },
      {
        "sha": "232a351a707d3e5da10b219787812e74372afcc4",
        "filename": "src/wallet/walletdb.h",
        "status": "modified",
        "additions": 11,
        "deletions": 1,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1d6d3dad68bf2284f17c2507c66de0db6b32b6bd/src/wallet/walletdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1d6d3dad68bf2284f17c2507c66de0db6b32b6bd/src/wallet/walletdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.h?ref=1d6d3dad68bf2284f17c2507c66de0db6b32b6bd",
        "patch": "@@ -41,9 +41,15 @@ enum DBErrors\n class CKeyMetadata\n {\n public:\n-    static const int CURRENT_VERSION=1;\n+    static const int CURRENT_VERSION=2;\n+    static const uint8_t KEY_GENERATION_TYPE_UNKNOWN       = 0x0001;\n+    static const uint8_t KEY_GENERATION_TYPE_IMPORTED      = 0x0002;\n+    static const uint8_t KEY_GENERATION_TYPE_UNENC_WALLET  = 0x0004;\n+    static const uint8_t KEY_GENERATION_TYPE_ENC_WALLET    = 0x0008;\n+    \n     int nVersion;\n     int64_t nCreateTime; // 0 means unknown\n+    uint8_t keyFlags;\n \n     CKeyMetadata()\n     {\n@@ -53,6 +59,7 @@ class CKeyMetadata\n     {\n         nVersion = CKeyMetadata::CURRENT_VERSION;\n         nCreateTime = nCreateTime_;\n+        keyFlags = KEY_GENERATION_TYPE_UNKNOWN;\n     }\n \n     ADD_SERIALIZE_METHODS;\n@@ -62,12 +69,15 @@ class CKeyMetadata\n         READWRITE(this->nVersion);\n         nVersion = this->nVersion;\n         READWRITE(nCreateTime);\n+        if (nVersion >= 2)\n+            READWRITE(keyFlags);\n     }\n \n     void SetNull()\n     {\n         nVersion = CKeyMetadata::CURRENT_VERSION;\n         nCreateTime = 0;\n+        keyFlags = KEY_GENERATION_TYPE_UNKNOWN;\n     }\n };\n "
      }
    ]
  },
  {
    "sha": "f1fef042df7bc80caf4cea67cafe9eec0ada679c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmMWZlZjA0MmRmN2JjODBjYWY0Y2VhNjdjYWZlOWVlYzBhZGE2Nzlj",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2015-06-24T07:53:05Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2015-09-24T14:26:25Z"
      },
      "message": "renamed keyGenerationType to keyOrigin, added new wallet feature level",
      "tree": {
        "sha": "380e113f0070e77851eb5058536ad40c40359ad0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/380e113f0070e77851eb5058536ad40c40359ad0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f1fef042df7bc80caf4cea67cafe9eec0ada679c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f1fef042df7bc80caf4cea67cafe9eec0ada679c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f1fef042df7bc80caf4cea67cafe9eec0ada679c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f1fef042df7bc80caf4cea67cafe9eec0ada679c/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1d6d3dad68bf2284f17c2507c66de0db6b32b6bd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1d6d3dad68bf2284f17c2507c66de0db6b32b6bd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1d6d3dad68bf2284f17c2507c66de0db6b32b6bd"
      }
    ],
    "stats": {
      "total": 59,
      "additions": 33,
      "deletions": 26
    },
    "files": [
      {
        "sha": "42bf78ec17eb8bce5bc9cb13f66d8672a326fc52",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f1fef042df7bc80caf4cea67cafe9eec0ada679c/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f1fef042df7bc80caf4cea67cafe9eec0ada679c/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=f1fef042df7bc80caf4cea67cafe9eec0ada679c",
        "patch": "@@ -134,8 +134,7 @@ UniValue importprivkey(const UniValue& params, bool fHelp)\n             return NullUniValue;\n \n         pwalletMain->mapKeyMetadata[vchAddress].nCreateTime = 1;\n-        pwalletMain->mapKeyMetadata[vchAddress].keyFlags |= CKeyMetadata::KEY_GENERATION_TYPE_IMPORTED;\n-        \n+        pwalletMain->mapKeyMetadata[vchAddress].keyFlags |= CKeyMetadata::KEY_ORIGIN_IMPORTED;\n \n         if (!pwalletMain->AddKeyPubKey(key, pubkey))\n             throw JSONRPCError(RPC_WALLET_ERROR, \"Error adding key to wallet\");"
      },
      {
        "sha": "1b0b8c853f1e27510fb6eb7c30e3b1667c9c5665",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 11,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f1fef042df7bc80caf4cea67cafe9eec0ada679c/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f1fef042df7bc80caf4cea67cafe9eec0ada679c/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=f1fef042df7bc80caf4cea67cafe9eec0ada679c",
        "patch": "@@ -1172,16 +1172,16 @@ UniValue ListReceived(const UniValue& params, bool fByAccounts)\n         if (address.GetKeyID(keyID))\n             keyFlags = pwalletMain->mapKeyMetadata[keyID].keyFlags;\n \n-        std::string keyGenerationType;\n-        if (keyFlags & CKeyMetadata::KEY_GENERATION_TYPE_UNKNOWN)\n-            keyGenerationType = \"unknown\";\n-        if (keyFlags & CKeyMetadata::KEY_GENERATION_TYPE_ENC_WALLET)\n-            keyGenerationType = \"encrypted\";\n-        else if (keyFlags & CKeyMetadata::KEY_GENERATION_TYPE_UNENC_WALLET)\n-            keyGenerationType = \"unencrypted\";\n-        if (keyFlags & CKeyMetadata::KEY_GENERATION_TYPE_IMPORTED)\n-            keyGenerationType = \"imported\";\n-        \n+        std::string keyOrigin;\n+        if (keyFlags & CKeyMetadata::KEY_ORIGIN_UNKNOWN)\n+            keyOrigin = \"unknown\";\n+        if (keyFlags & CKeyMetadata::KEY_ORIGIN_ENC_WALLET)\n+            keyOrigin = \"encrypted\";\n+        else if (keyFlags & CKeyMetadata::KEY_ORIGIN_UNENC_WALLET)\n+            keyOrigin = \"unencrypted\";\n+        if (keyFlags & CKeyMetadata::KEY_ORIGIN_IMPORTED)\n+            keyOrigin = \"imported\";\n+\n         if (fByAccounts)\n         {\n             tallyitem& item = mapAccountTally[strAccount];\n@@ -1197,7 +1197,7 @@ UniValue ListReceived(const UniValue& params, bool fByAccounts)\n             obj.push_back(Pair(\"address\",       address.ToString()));\n             obj.push_back(Pair(\"account\",       strAccount));\n             obj.push_back(Pair(\"amount\",        ValueFromAmount(nAmount)));\n-            obj.push_back(Pair(\"key_generation_type\", keyGenerationType));\n+            obj.push_back(Pair(\"key_origin\", keyOrigin));\n             obj.push_back(Pair(\"confirmations\", (nConf == std::numeric_limits<int>::max() ? 0 : nConf)));\n             UniValue transactions(UniValue::VARR);\n             if (it != mapTally.end())"
      },
      {
        "sha": "36fe000e1ef45733d693c6f7172f4acdda9f10ed",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 3,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f1fef042df7bc80caf4cea67cafe9eec0ada679c/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f1fef042df7bc80caf4cea67cafe9eec0ada679c/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=f1fef042df7bc80caf4cea67cafe9eec0ada679c",
        "patch": "@@ -94,11 +94,16 @@ CPubKey CWallet::GenerateNewKey()\n \n     // Create new metadata\n     int64_t nCreationTime = GetTime();\n-    \n+\n     CKeyMetadata metadata = CKeyMetadata(nCreationTime);\n-    metadata.keyFlags |= IsCrypted() ? CKeyMetadata::KEY_GENERATION_TYPE_ENC_WALLET : CKeyMetadata::KEY_GENERATION_TYPE_UNENC_WALLET;\n+    //check if the wallet supports keyflags\n+    if (CanSupportFeature(FEATURE_KEYFLAGS))\n+    {\n+        metadata.nVersion = CKeyMetadata::VERSION_SUPPORT_FLAGS;\n+        metadata.keyFlags |= IsCrypted() ? CKeyMetadata::KEY_ORIGIN_ENC_WALLET : CKeyMetadata::KEY_ORIGIN_UNENC_WALLET;\n+    }\n     mapKeyMetadata[pubkey.GetID()] = metadata;\n-    \n+\n     if (!nTimeFirstKey || nCreationTime < nTimeFirstKey)\n         nTimeFirstKey = nCreationTime;\n "
      },
      {
        "sha": "182a0913e940f069567625e41e0aab1fcba10f84",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f1fef042df7bc80caf4cea67cafe9eec0ada679c/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f1fef042df7bc80caf4cea67cafe9eec0ada679c/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=f1fef042df7bc80caf4cea67cafe9eec0ada679c",
        "patch": "@@ -66,8 +66,9 @@ enum WalletFeature\n \n     FEATURE_WALLETCRYPT = 40000, // wallet encryption\n     FEATURE_COMPRPUBKEY = 60000, // compressed public keys\n+    FEATURE_KEYFLAGS    = 70000, // key metadata flags for storing informations like key origin\n \n-    FEATURE_LATEST = 60000\n+    FEATURE_LATEST = 70000\n };\n \n "
      },
      {
        "sha": "bd86b56794a264b57cf1d031a99f1b25df03e38c",
        "filename": "src/wallet/walletdb.h",
        "status": "modified",
        "additions": 11,
        "deletions": 9,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f1fef042df7bc80caf4cea67cafe9eec0ada679c/src/wallet/walletdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f1fef042df7bc80caf4cea67cafe9eec0ada679c/src/wallet/walletdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.h?ref=f1fef042df7bc80caf4cea67cafe9eec0ada679c",
        "patch": "@@ -41,12 +41,14 @@ enum DBErrors\n class CKeyMetadata\n {\n public:\n-    static const int CURRENT_VERSION=2;\n-    static const uint8_t KEY_GENERATION_TYPE_UNKNOWN       = 0x0001;\n-    static const uint8_t KEY_GENERATION_TYPE_IMPORTED      = 0x0002;\n-    static const uint8_t KEY_GENERATION_TYPE_UNENC_WALLET  = 0x0004;\n-    static const uint8_t KEY_GENERATION_TYPE_ENC_WALLET    = 0x0008;\n-    \n+    static const int CURRENT_VERSION=1;\n+    static const int VERSION_SUPPORT_FLAGS=2;\n+    static const uint8_t KEY_ORIGIN_UNSET         = 0x0000;\n+    static const uint8_t KEY_ORIGIN_UNKNOWN       = 0x0001;\n+    static const uint8_t KEY_ORIGIN_IMPORTED      = 0x0002;\n+    static const uint8_t KEY_ORIGIN_UNENC_WALLET  = 0x0004;\n+    static const uint8_t KEY_ORIGIN_ENC_WALLET    = 0x0008;\n+\n     int nVersion;\n     int64_t nCreateTime; // 0 means unknown\n     uint8_t keyFlags;\n@@ -59,7 +61,7 @@ class CKeyMetadata\n     {\n         nVersion = CKeyMetadata::CURRENT_VERSION;\n         nCreateTime = nCreateTime_;\n-        keyFlags = KEY_GENERATION_TYPE_UNKNOWN;\n+        keyFlags = KEY_ORIGIN_UNSET;\n     }\n \n     ADD_SERIALIZE_METHODS;\n@@ -69,15 +71,15 @@ class CKeyMetadata\n         READWRITE(this->nVersion);\n         nVersion = this->nVersion;\n         READWRITE(nCreateTime);\n-        if (nVersion >= 2)\n+        if (nVersion >= VERSION_SUPPORT_FLAGS)\n             READWRITE(keyFlags);\n     }\n \n     void SetNull()\n     {\n         nVersion = CKeyMetadata::CURRENT_VERSION;\n         nCreateTime = 0;\n-        keyFlags = KEY_GENERATION_TYPE_UNKNOWN;\n+        keyFlags = KEY_ORIGIN_UNSET;\n     }\n };\n "
      }
    ]
  },
  {
    "sha": "d4142be47215566cffad0a152ff7337c96278bd6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkNDE0MmJlNDcyMTU1NjZjZmZhZDBhMTUyZmY3MzM3Yzk2Mjc4YmQ2",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2015-09-24T14:49:20Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2015-09-24T14:49:20Z"
      },
      "message": "Use a 32bit bitmask for key generation type, remove unset type",
      "tree": {
        "sha": "8dfcacf2fdbe1d20527620bd5169e90c84d89751",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8dfcacf2fdbe1d20527620bd5169e90c84d89751"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d4142be47215566cffad0a152ff7337c96278bd6",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d4142be47215566cffad0a152ff7337c96278bd6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d4142be47215566cffad0a152ff7337c96278bd6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d4142be47215566cffad0a152ff7337c96278bd6/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f1fef042df7bc80caf4cea67cafe9eec0ada679c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f1fef042df7bc80caf4cea67cafe9eec0ada679c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f1fef042df7bc80caf4cea67cafe9eec0ada679c"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 7,
      "deletions": 9
    },
    "files": [
      {
        "sha": "3c52763223ef14e668a859d91a22f10c50c64682",
        "filename": "src/wallet/walletdb.h",
        "status": "modified",
        "additions": 7,
        "deletions": 9,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d4142be47215566cffad0a152ff7337c96278bd6/src/wallet/walletdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d4142be47215566cffad0a152ff7337c96278bd6/src/wallet/walletdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.h?ref=d4142be47215566cffad0a152ff7337c96278bd6",
        "patch": "@@ -43,25 +43,23 @@ class CKeyMetadata\n public:\n     static const int CURRENT_VERSION=1;\n     static const int VERSION_SUPPORT_FLAGS=2;\n-    static const uint8_t KEY_ORIGIN_UNSET         = 0x0000;\n-    static const uint8_t KEY_ORIGIN_UNKNOWN       = 0x0001;\n-    static const uint8_t KEY_ORIGIN_IMPORTED      = 0x0002;\n-    static const uint8_t KEY_ORIGIN_UNENC_WALLET  = 0x0004;\n-    static const uint8_t KEY_ORIGIN_ENC_WALLET    = 0x0008;\n+    static const uint32_t KEY_ORIGIN_UNKNOWN       = 0x00000000;\n+    static const uint32_t KEY_ORIGIN_IMPORTED      = 0x00000001;\n+    static const uint32_t KEY_ORIGIN_UNENC_WALLET  = 0x00000002;\n+    static const uint32_t KEY_ORIGIN_ENC_WALLET    = 0x00000004;\n \n     int nVersion;\n     int64_t nCreateTime; // 0 means unknown\n-    uint8_t keyFlags;\n+    uint32_t keyFlags;\n \n     CKeyMetadata()\n     {\n         SetNull();\n     }\n     CKeyMetadata(int64_t nCreateTime_)\n     {\n-        nVersion = CKeyMetadata::CURRENT_VERSION;\n+        SetNull();\n         nCreateTime = nCreateTime_;\n-        keyFlags = KEY_ORIGIN_UNSET;\n     }\n \n     ADD_SERIALIZE_METHODS;\n@@ -79,7 +77,7 @@ class CKeyMetadata\n     {\n         nVersion = CKeyMetadata::CURRENT_VERSION;\n         nCreateTime = 0;\n-        keyFlags = KEY_ORIGIN_UNSET;\n+        keyFlags = KEY_ORIGIN_UNKNOWN;\n     }\n };\n "
      }
    ]
  },
  {
    "sha": "104ab313baeac2f909ce1fb10fe8562327b35e01",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxMDRhYjMxM2JhZWFjMmY5MDljZTFmYjEwZmU4NTYyMzI3YjM1ZTAx",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2016-06-01T19:30:29Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2016-06-01T19:31:57Z"
      },
      "message": "wallet: Provide compatibility with existing wallets using 8-bit flags",
      "tree": {
        "sha": "18a629d99233335204fecfa43a9d6ffbc4945e0c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/18a629d99233335204fecfa43a9d6ffbc4945e0c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/104ab313baeac2f909ce1fb10fe8562327b35e01",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/104ab313baeac2f909ce1fb10fe8562327b35e01",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/104ab313baeac2f909ce1fb10fe8562327b35e01",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/104ab313baeac2f909ce1fb10fe8562327b35e01/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d4142be47215566cffad0a152ff7337c96278bd6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d4142be47215566cffad0a152ff7337c96278bd6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d4142be47215566cffad0a152ff7337c96278bd6"
      }
    ],
    "stats": {
      "total": 26,
      "additions": 21,
      "deletions": 5
    },
    "files": [
      {
        "sha": "a6a492d8759c801ec51664dd946a26e825d88cef",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 2,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/104ab313baeac2f909ce1fb10fe8562327b35e01/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/104ab313baeac2f909ce1fb10fe8562327b35e01/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=104ab313baeac2f909ce1fb10fe8562327b35e01",
        "patch": "@@ -97,9 +97,12 @@ CPubKey CWallet::GenerateNewKey()\n \n     CKeyMetadata metadata = CKeyMetadata(nCreationTime);\n     //check if the wallet supports keyflags\n-    if (CanSupportFeature(FEATURE_KEYFLAGS))\n+    if (CanSupportFeature(FEATURE_KEYFLAGS_OLD))\n     {\n-        metadata.nVersion = CKeyMetadata::VERSION_SUPPORT_FLAGS;\n+        if (CanSupportFeature(FEATURE_KEYFLAGS)) {\n+            metadata.nVersion = max(metadata.nVersion, CKeyMetadata::VERSION_SUPPORT_FLAGS);\n+        }\n+        // Will just get discarded if metadata version isn't yet upgraded; we don't ever upgrade to VERSION_SUPPORT_FLAGS_OLD\n         metadata.keyFlags |= IsCrypted() ? CKeyMetadata::KEY_ORIGIN_ENC_WALLET : CKeyMetadata::KEY_ORIGIN_UNENC_WALLET;\n     }\n     mapKeyMetadata[pubkey.GetID()] = metadata;"
      },
      {
        "sha": "9f45401e2112c29077086e4ce256bca26721ad6f",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/104ab313baeac2f909ce1fb10fe8562327b35e01/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/104ab313baeac2f909ce1fb10fe8562327b35e01/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=104ab313baeac2f909ce1fb10fe8562327b35e01",
        "patch": "@@ -66,9 +66,10 @@ enum WalletFeature\n \n     FEATURE_WALLETCRYPT = 40000, // wallet encryption\n     FEATURE_COMPRPUBKEY = 60000, // compressed public keys\n-    FEATURE_KEYFLAGS    = 70000, // key metadata flags for storing informations like key origin\n+    FEATURE_KEYFLAGS_OLD= 70000, // old 8-bit key origin flags\n+    FEATURE_KEYFLAGS    = 70001, // key metadata flags for storing informations like key origin\n \n-    FEATURE_LATEST = 70000\n+    FEATURE_LATEST = 70001\n };\n \n "
      },
      {
        "sha": "12ff6c31cd1a7cd38e739b4bf592c148e9561959",
        "filename": "src/wallet/walletdb.h",
        "status": "modified",
        "additions": 13,
        "deletions": 1,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/104ab313baeac2f909ce1fb10fe8562327b35e01/src/wallet/walletdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/104ab313baeac2f909ce1fb10fe8562327b35e01/src/wallet/walletdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.h?ref=104ab313baeac2f909ce1fb10fe8562327b35e01",
        "patch": "@@ -42,7 +42,8 @@ class CKeyMetadata\n {\n public:\n     static const int CURRENT_VERSION=1;\n-    static const int VERSION_SUPPORT_FLAGS=2;\n+    static const int VERSION_SUPPORT_FLAGS_OLD=2;\n+    static const int VERSION_SUPPORT_FLAGS=3;\n     static const uint32_t KEY_ORIGIN_UNKNOWN       = 0x00000000;\n     static const uint32_t KEY_ORIGIN_IMPORTED      = 0x00000001;\n     static const uint32_t KEY_ORIGIN_UNENC_WALLET  = 0x00000002;\n@@ -71,6 +72,17 @@ class CKeyMetadata\n         READWRITE(nCreateTime);\n         if (nVersion >= VERSION_SUPPORT_FLAGS)\n             READWRITE(keyFlags);\n+        else if (nVersion >= VERSION_SUPPORT_FLAGS_OLD) {\n+            uint8_t nOldFlags;\n+            // NOTE: This is lossy for the \"unknown\" bit in old flags\n+            if (ser_action.ForRead()) {\n+                READWRITE(nOldFlags);\n+                keyFlags = nOldFlags >> 1;\n+            } else {\n+                nOldFlags = keyFlags << 1;\n+                READWRITE(nOldFlags);\n+            }\n+        }\n     }\n \n     void SetNull()"
      }
    ]
  }
]