{
  "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17009",
  "id": 323179533,
  "node_id": "MDExOlB1bGxSZXF1ZXN0MzIzMTc5NTMz",
  "html_url": "https://github.com/bitcoin/bitcoin/pull/17009",
  "diff_url": "https://github.com/bitcoin/bitcoin/pull/17009.diff",
  "patch_url": "https://github.com/bitcoin/bitcoin/pull/17009.patch",
  "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17009",
  "number": 17009,
  "state": "closed",
  "locked": false,
  "title": "tests: Add EvalScript(...) fuzzing harness",
  "user": {
    "login": "practicalswift",
    "id": 7826565,
    "node_id": "MDQ6VXNlcjc4MjY1NjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/practicalswift",
    "html_url": "https://github.com/practicalswift",
    "followers_url": "https://api.github.com/users/practicalswift/followers",
    "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
    "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
    "organizations_url": "https://api.github.com/users/practicalswift/orgs",
    "repos_url": "https://api.github.com/users/practicalswift/repos",
    "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
    "received_events_url": "https://api.github.com/users/practicalswift/received_events",
    "type": "User",
    "site_admin": false
  },
  "body": "Add `EvalScript(...)` fuzzing harness.\r\n\r\nTo test this PR:\r\n\r\nWe can run `contrib/devtools/test_fuzzing_harnesses.sh` (#17000) during five seconds to quickly verify that the newly added  fuzz harness seem to hit relevant code regions, that the fuzzing throughput seems reasonable, etc.\r\n\r\n`test_fuzzing_harnesses.sh eval 5` runs all fuzzers matching the regexp `eval` giving them five seconds of runtime each.\r\n\r\n```\r\n$ CC=clang CXX=clang++ ./configure --enable-fuzz --with-sanitizers=address,fuzzer,undefined\r\n$ make\r\n$ contrib/devtools/test_fuzzing_harnesses.sh eval 5\r\nTesting fuzzer eval_script during 5 second(s)\r\nA subset of reached functions:\r\n        NEW_FUNC[1/24]: 0x557b808742e0 in prevector<28u, unsigned char, unsigned int, int>::indirect_ptr(int) src/./prevector.h:161\r\n        NEW_FUNC[2/24]: 0x557b80875460 in prevector<28u, unsigned char, unsigned int, int>::indirect_ptr(int) const src/./prevector.h:162\r\n        NEW_FUNC[6/9]: 0x557b81acdaa0 in popstack(std::vector<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >&) src/script/interpreter.cpp:57\r\n        NEW_FUNC[5/16]: 0x557b809f1bf0 in CScriptNum::serialize(long const&) src/./script/script.h:326\r\n        NEW_FUNC[4/6]: 0x557b817c93d0 in CScriptNum::CScriptNum(std::vector<unsigned char, std::allocator<unsigned char> > const&, bool, unsigned long) src/./script/script.h:225\r\n        NEW_FUNC[5/6]: 0x557b817cbb80 in CScriptNum::set_vch(std::vector<unsigned char, std::allocator<unsigned char> > const&) src/./script/script.h:360\r\n        NEW_FUNC[0/11]: 0x557b80a88170 in CHash256::Write(unsigned char const*, unsigned long) src/./hash.h:34\r\n        NEW_FUNC[1/11]: 0x557b80a88270 in CHash256::Finalize(unsigned char*) src/./hash.h:28\r\n        NEW_FUNC[5/11]: 0x557b81affdb0 in CSHA256::CSHA256() src/crypto/sha256.cpp:644\r\n        NEW_FUNC[6/11]: 0x557b81affe80 in (anonymous namespace)::sha256::Initialize(unsigned int*) src/crypto/sha256.cpp:66\r\n        NEW_FUNC[7/11]: 0x557b81b00460 in CSHA256::Write(unsigned char const*, unsigned long) src/crypto/sha256.cpp:649\r\n        NEW_FUNC[8/11]: 0x557b81b009a0 in CSHA256::Finalize(unsigned char*) src/crypto/sha256.cpp:675\r\n        NEW_FUNC[9/11]: 0x557b81b015e0 in CSHA256::Reset() src/crypto/sha256.cpp:692\r\n        NEW_FUNC[10/11]: 0x557b81b01d90 in (anonymous namespace)::sha256::Transform(unsigned int*, unsigned char const*, unsigned long) src/crypto/sha256.cpp:79\r\n        NEW_FUNC[0/1]: 0x557b808cc180 in BaseSignatureChecker::CheckLockTime(CScriptNum const&) const src/./script/interpreter.h:153\r\n        NEW_FUNC[0/2]: 0x557b81ab5640 in CastToBool(std::vector<unsigned char, std::allocator<unsigned char> > const&) src/script/interpreter.cpp:36\r\n        NEW_FUNC[0/1]: 0x557b817c9c30 in CScriptNum::getint() const src/./script/script.h:312\r\n        NEW_FUNC[0/1]: 0x557b81ae1df0 in CScriptNum::operator-=(long const&) src/./script/script.h:298\r\n        NEW_FUNC[0/5]: 0x557b81af5670 in CRIPEMD160::CRIPEMD160() src/crypto/ripemd160.cpp:243\r\n        NEW_FUNC[1/5]: 0x557b81af5740 in (anonymous namespace)::ripemd160::Initialize(unsigned int*) src/crypto/ripemd160.cpp:25\r\n        NEW_FUNC[2/5]: 0x557b81af5b00 in CRIPEMD160::Write(unsigned char const*, unsigned long) src/crypto/ripemd160.cpp:248\r\n        NEW_FUNC[3/5]: 0x557b81af5fa0 in (anonymous namespace)::ripemd160::Transform(unsigned int*, unsigned char const*) src/crypto/ripemd160.cpp:55\r\n        NEW_FUNC[4/5]: 0x557b81af8d60 in CRIPEMD160::Finalize(unsigned char*) src/crypto/ripemd160.cpp:274\r\n        NEW_FUNC[0/16]: 0x557b80857a30 in CScript::operator<<(std::vector<unsigned char, std::allocator<unsigned char> > const&) src/./script/script.h:462\r\n        NEW_FUNC[1/16]: 0x557b80872670 in prevector<28u, unsigned char, unsigned int, int>::insert(prevector<28u, unsigned char, unsigned int, int>::iterator, unsigned char const&) src/./prevector.h:342\r\n        NEW_FUNC[2/16]: 0x557b80872e00 in void prevector<28u, unsigned char, unsigned int, int>::insert<__gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > > >(prevector<28u, unsigned char, unsigned int, int>::iterator, __gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, __gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >) src/./prevector.h:368\r\n        NEW_FUNC[3/16]: 0x557b80873630 in prevector<28u, unsigned char, unsigned int, int>::capacity() const src/./prevector.h:295\r\n        NEW_FUNC[4/16]: 0x557b80874ed0 in void prevector<28u, unsigned char, unsigned int, int>::fill<prevector<28u, unsigned char, unsigned int, int>::const_iterator>(unsigned char*, prevector<28u, unsigned char, unsigned int, int>::const_iterator, prevector<28u, unsigned char, unsigned int, int>::const_iterator) src/./prevector.h:204\r\n        NEW_FUNC[5/16]: 0x557b808cc0f0 in BaseSignatureChecker::CheckSig(std::vector<unsigned char, std::allocator<unsigned char> > const&, std::vector<unsigned char, std::allocator<unsigned char> > const&, CScript const&, SigVersion) const src/./script/interpreter.h:148\r\n        NEW_FUNC[6/16]: 0x557b809edb10 in CScript::operator=(CScript&&) src/./script/script.h:390\r\n        NEW_FUNC[7/16]: 0x557b809f8ec0 in void prevector<28u, unsigned char, unsigned int, int>::insert<prevector<28u, unsigned char, unsigned int, int>::const_iterator>(prevector<28u, unsigned char, unsigned int, int>::iterator, prevector<28u, unsigned char, unsigned int, int>::const_iterator, prevector<28u, unsigned char, unsigned int, int>::const_iterator) src/./prevector.h:368\r\n        NEW_FUNC[8/16]: 0x557b809f9260 in prevector<28u, unsigned char, unsigned int, int>::swap(prevector<28u, unsigned char, unsigned int, int>&) src/./prevector.h:451\r\n        NEW_FUNC[9/16]: 0x557b81ab58c0 in CheckSignatureEncoding(std::vector<unsigned char, std::allocator<unsigned char> > const&, unsigned int, ScriptError_t*) src/script/interpreter.cpp:200\r\n        NEW_FUNC[10/16]: 0x557b81ab6f30 in FindAndDelete(CScript&, CScript const&) src/script/interpreter.cpp:254\r\n        NEW_FUNC[11/16]: 0x557b81acdc20 in CheckPubKeyEncoding(std::vector<unsigned char, std::allocator<unsigned char> > const&, unsigned int, SigVersion const&, ScriptError_t*) src/script/interpreter.cpp:217\r\n        NEW_FUNC[12/16]: 0x557b81ad3890 in IsCompressedOrUncompressedPubKey(std::vector<unsigned char, std::allocator<unsigned char> > const&) src/script/interpreter.cpp:63\r\n        NEW_FUNC[13/16]: 0x557b81ad8830 in CScript::GetOp(prevector<28u, unsigned char, unsigned int, int>::const_iterator&, opcodetype&) const src/./script/script.h:505\r\n        NEW_FUNC[14/16]: 0x557b81ae21a0 in prevector<28u, unsigned char, unsigned int, int>::prevector<prevector<28u, unsigned char, unsigned int, int>::const_iterator>(prevector<28u, unsigned char, unsigned int, int>::const_iterator, prevector<28u, unsigned char, unsigned int, int>::const_iterator) src/./prevector.h:246\r\n        NEW_FUNC[0/1]: 0x557b81ae1a40 in CScriptNum::operator+=(long const&) src/./script/script.h:290\r\n        NEW_FUNC[0/5]: 0x557b81af9760 in CSHA1::CSHA1() src/crypto/sha1.cpp:150\r\n        NEW_FUNC[1/5]: 0x557b81af9830 in (anonymous namespace)::sha1::Initialize(unsigned int*) src/crypto/sha1.cpp:32\r\n        NEW_FUNC[2/5]: 0x557b81af9bf0 in CSHA1::Write(unsigned char const*, unsigned long) src/crypto/sha1.cpp:155\r\n        NEW_FUNC[3/5]: 0x557b81afa090 in (anonymous namespace)::sha1::Transform(unsigned int*, unsigned char const*) src/crypto/sha1.cpp:47\r\n        NEW_FUNC[4/5]: 0x557b81afc5e0 in CSHA1::Finalize(unsigned char*) src/crypto/sha1.cpp:181\r\n        NEW_FUNC[0/1]: 0x557b81ada4f0 in CScriptNum::operator-() const src/./script/script.h:278\r\n        NEW_FUNC[0/1]: 0x557b808cc210 in BaseSignatureChecker::CheckSequence(CScriptNum const&) const src/./script/interpreter.h:158\r\n        NEW_FUNC[0/1]: 0x557b81ab5c00 in IsValidSignatureEncoding(std::vector<unsigned char, std::allocator<unsigned char> > const&) src/script/interpreter.cpp:107\r\nstat::number_of_executed_units: 9728\r\nstat::average_exec_per_sec:     1621\r\nstat::new_units_added:          844\r\nstat::slowest_unit_time_sec:    0\r\nstat::peak_rss_mb:              326\r\nNumber of unique code paths taken during fuzzing round: 583\r\n\r\nTested fuzz harnesses seem to work as expected.\r\n```",
  "created_at": "2019-10-01T09:43:14Z",
  "updated_at": "2021-04-10T19:38:56Z",
  "closed_at": "2019-10-14T13:30:13Z",
  "merged_at": "2019-10-14T13:30:13Z",
  "merge_commit_sha": "7e50abcc29dc5fde24a1b3e57c6316eabda35e2e",
  "assignee": null,
  "assignees": [],
  "requested_reviewers": [],
  "requested_teams": [],
  "labels": [
    {
      "id": 62963516,
      "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
      "name": "Tests",
      "color": "d4c5f9",
      "default": false,
      "description": null
    }
  ],
  "milestone": null,
  "draft": false,
  "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17009/commits",
  "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17009/comments",
  "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments{/number}",
  "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17009/comments",
  "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/7e50abcc29dc5fde24a1b3e57c6316eabda35e2e",
  "head": {
    "label": "practicalswift:eval_script",
    "ref": "eval_script",
    "sha": "7e50abcc29dc5fde24a1b3e57c6316eabda35e2e",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "repo": {
      "id": 78569642,
      "node_id": "MDEwOlJlcG9zaXRvcnk3ODU2OTY0Mg==",
      "name": "bitcoin",
      "full_name": "practicalswift/bitcoin",
      "private": false,
      "owner": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
        "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/practicalswift/bitcoin",
      "description": "Bitcoin Core integration/staging tree",
      "fork": true,
      "url": "https://api.github.com/repos/practicalswift/bitcoin",
      "forks_url": "https://api.github.com/repos/practicalswift/bitcoin/forks",
      "keys_url": "https://api.github.com/repos/practicalswift/bitcoin/keys{/key_id}",
      "collaborators_url": "https://api.github.com/repos/practicalswift/bitcoin/collaborators{/collaborator}",
      "teams_url": "https://api.github.com/repos/practicalswift/bitcoin/teams",
      "hooks_url": "https://api.github.com/repos/practicalswift/bitcoin/hooks",
      "issue_events_url": "https://api.github.com/repos/practicalswift/bitcoin/issues/events{/number}",
      "events_url": "https://api.github.com/repos/practicalswift/bitcoin/events",
      "assignees_url": "https://api.github.com/repos/practicalswift/bitcoin/assignees{/user}",
      "branches_url": "https://api.github.com/repos/practicalswift/bitcoin/branches{/branch}",
      "tags_url": "https://api.github.com/repos/practicalswift/bitcoin/tags",
      "blobs_url": "https://api.github.com/repos/practicalswift/bitcoin/git/blobs{/sha}",
      "git_tags_url": "https://api.github.com/repos/practicalswift/bitcoin/git/tags{/sha}",
      "git_refs_url": "https://api.github.com/repos/practicalswift/bitcoin/git/refs{/sha}",
      "trees_url": "https://api.github.com/repos/practicalswift/bitcoin/git/trees{/sha}",
      "statuses_url": "https://api.github.com/repos/practicalswift/bitcoin/statuses/{sha}",
      "languages_url": "https://api.github.com/repos/practicalswift/bitcoin/languages",
      "stargazers_url": "https://api.github.com/repos/practicalswift/bitcoin/stargazers",
      "contributors_url": "https://api.github.com/repos/practicalswift/bitcoin/contributors",
      "subscribers_url": "https://api.github.com/repos/practicalswift/bitcoin/subscribers",
      "subscription_url": "https://api.github.com/repos/practicalswift/bitcoin/subscription",
      "commits_url": "https://api.github.com/repos/practicalswift/bitcoin/commits{/sha}",
      "git_commits_url": "https://api.github.com/repos/practicalswift/bitcoin/git/commits{/sha}",
      "comments_url": "https://api.github.com/repos/practicalswift/bitcoin/comments{/number}",
      "issue_comment_url": "https://api.github.com/repos/practicalswift/bitcoin/issues/comments{/number}",
      "contents_url": "https://api.github.com/repos/practicalswift/bitcoin/contents/{+path}",
      "compare_url": "https://api.github.com/repos/practicalswift/bitcoin/compare/{base}...{head}",
      "merges_url": "https://api.github.com/repos/practicalswift/bitcoin/merges",
      "archive_url": "https://api.github.com/repos/practicalswift/bitcoin/{archive_format}{/ref}",
      "downloads_url": "https://api.github.com/repos/practicalswift/bitcoin/downloads",
      "issues_url": "https://api.github.com/repos/practicalswift/bitcoin/issues{/number}",
      "pulls_url": "https://api.github.com/repos/practicalswift/bitcoin/pulls{/number}",
      "milestones_url": "https://api.github.com/repos/practicalswift/bitcoin/milestones{/number}",
      "notifications_url": "https://api.github.com/repos/practicalswift/bitcoin/notifications{?since,all,participating}",
      "labels_url": "https://api.github.com/repos/practicalswift/bitcoin/labels{/name}",
      "releases_url": "https://api.github.com/repos/practicalswift/bitcoin/releases{/id}",
      "deployments_url": "https://api.github.com/repos/practicalswift/bitcoin/deployments",
      "created_at": "2017-01-10T20:09:24Z",
      "updated_at": "2021-04-26T14:37:37Z",
      "pushed_at": "2021-10-01T13:54:08Z",
      "git_url": "git://github.com/practicalswift/bitcoin.git",
      "ssh_url": "git@github.com:practicalswift/bitcoin.git",
      "clone_url": "https://github.com/practicalswift/bitcoin.git",
      "svn_url": "https://github.com/practicalswift/bitcoin",
      "homepage": "https://bitcoin.org/en/download",
      "size": 164685,
      "stargazers_count": 4,
      "watchers_count": 4,
      "language": "C++",
      "has_issues": false,
      "has_projects": true,
      "has_downloads": false,
      "has_wiki": false,
      "has_pages": false,
      "forks_count": 0,
      "mirror_url": null,
      "archived": false,
      "disabled": false,
      "open_issues_count": 0,
      "license": {
        "key": "mit",
        "name": "MIT License",
        "spdx_id": "MIT",
        "url": "https://api.github.com/licenses/mit",
        "node_id": "MDc6TGljZW5zZTEz"
      },
      "allow_forking": true,
      "is_template": false,
      "topics": [],
      "visibility": "public",
      "forks": 0,
      "open_issues": 0,
      "watchers": 4,
      "default_branch": "master"
    }
  },
  "base": {
    "label": "bitcoin:master",
    "ref": "master",
    "sha": "561a7d30478b82f5d46dcf0f16e864a9608004f4",
    "user": {
      "login": "bitcoin",
      "id": 528860,
      "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bitcoin",
      "html_url": "https://github.com/bitcoin",
      "followers_url": "https://api.github.com/users/bitcoin/followers",
      "following_url": "https://api.github.com/users/bitcoin/following{/other_user}",
      "gists_url": "https://api.github.com/users/bitcoin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bitcoin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
      "organizations_url": "https://api.github.com/users/bitcoin/orgs",
      "repos_url": "https://api.github.com/users/bitcoin/repos",
      "events_url": "https://api.github.com/users/bitcoin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bitcoin/received_events",
      "type": "Organization",
      "site_admin": false
    },
    "repo": {
      "id": 1181927,
      "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
      "name": "bitcoin",
      "full_name": "bitcoin/bitcoin",
      "private": false,
      "owner": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following{/other_user}",
        "gists_url": "https://api.github.com/users/bitcoin/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/bitcoin/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events{/privacy}",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin",
      "description": "Bitcoin Core integration/staging tree",
      "fork": false,
      "url": "https://api.github.com/repos/bitcoin/bitcoin",
      "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
      "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys{/key_id}",
      "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators{/collaborator}",
      "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
      "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
      "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events{/number}",
      "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
      "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees{/user}",
      "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches{/branch}",
      "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
      "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs{/sha}",
      "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags{/sha}",
      "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs{/sha}",
      "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees{/sha}",
      "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/{sha}",
      "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
      "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
      "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
      "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
      "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
      "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits{/sha}",
      "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits{/sha}",
      "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments{/number}",
      "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments{/number}",
      "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/{+path}",
      "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/{base}...{head}",
      "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
      "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/{archive_format}{/ref}",
      "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
      "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues{/number}",
      "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls{/number}",
      "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones{/number}",
      "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications{?since,all,participating}",
      "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels{/name}",
      "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases{/id}",
      "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
      "created_at": "2010-12-19T15:16:43Z",
      "updated_at": "2021-12-02T09:59:34Z",
      "pushed_at": "2021-12-02T09:35:21Z",
      "git_url": "git://github.com/bitcoin/bitcoin.git",
      "ssh_url": "git@github.com:bitcoin/bitcoin.git",
      "clone_url": "https://github.com/bitcoin/bitcoin.git",
      "svn_url": "https://github.com/bitcoin/bitcoin",
      "homepage": "https://bitcoincore.org/en/download",
      "size": 188203,
      "stargazers_count": 59736,
      "watchers_count": 59736,
      "language": "C++",
      "has_issues": true,
      "has_projects": true,
      "has_downloads": false,
      "has_wiki": false,
      "has_pages": false,
      "forks_count": 30710,
      "mirror_url": null,
      "archived": false,
      "disabled": false,
      "open_issues_count": 1020,
      "license": {
        "key": "mit",
        "name": "MIT License",
        "spdx_id": "MIT",
        "url": "https://api.github.com/licenses/mit",
        "node_id": "MDc6TGljZW5zZTEz"
      },
      "allow_forking": true,
      "is_template": false,
      "topics": [
        "bitcoin",
        "c-plus-plus",
        "cryptocurrency",
        "cryptography",
        "p2p"
      ],
      "visibility": "public",
      "forks": 30710,
      "open_issues": 1020,
      "watchers": 59736,
      "default_branch": "master"
    }
  },
  "_links": {
    "self": {
      "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17009"
    },
    "html": {
      "href": "https://github.com/bitcoin/bitcoin/pull/17009"
    },
    "issue": {
      "href": "https://api.github.com/repos/bitcoin/bitcoin/issues/17009"
    },
    "comments": {
      "href": "https://api.github.com/repos/bitcoin/bitcoin/issues/17009/comments"
    },
    "review_comments": {
      "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17009/comments"
    },
    "review_comment": {
      "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments{/number}"
    },
    "commits": {
      "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17009/commits"
    },
    "statuses": {
      "href": "https://api.github.com/repos/bitcoin/bitcoin/statuses/7e50abcc29dc5fde24a1b3e57c6316eabda35e2e"
    }
  },
  "author_association": "CONTRIBUTOR",
  "auto_merge": null,
  "active_lock_reason": null,
  "merged": true,
  "mergeable": null,
  "rebaseable": null,
  "mergeable_state": "unknown",
  "merged_by": {
    "login": "MarcoFalke",
    "id": 6399679,
    "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/MarcoFalke",
    "html_url": "https://github.com/MarcoFalke",
    "followers_url": "https://api.github.com/users/MarcoFalke/followers",
    "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
    "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
    "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
    "repos_url": "https://api.github.com/users/MarcoFalke/repos",
    "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
    "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
    "type": "User",
    "site_admin": false
  },
  "comments": 4,
  "review_comments": 25,
  "maintainer_can_modify": false,
  "commits": 2,
  "additions": 286,
  "deletions": 3,
  "changed_files": 5
}