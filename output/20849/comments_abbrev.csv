vasild,2021-01-04 16:27:50,The problem was discovered by @MarcoFalke.,https://github.com/bitcoin/bitcoin/pull/20849#issuecomment-754075051,754075051,
MarcoFalke,2021-01-04 16:35:58,"tested-only ACK 5fd2cee7fbc38c677d08a1545770156cc061833e did not review the code üîÆ\n\n<details><summary>Show signature and timestamp</summary>\n\nSignature:\n\n```\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\ntested-only ACK 5fd2cee7fbc38c677d08a1545770156cc061833e did not review the code üîÆ\n-----BEGIN PGP SIGNATURE-----\n\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAAC",https://github.com/bitcoin/bitcoin/pull/20849#issuecomment-754079617,754079617,
vasild,2021-01-04 17:57:25,"https://github.com/bitcoin/bitcoin/pull/20852 contains a fix for this issue + it also fixes a similar issue in `BanMan`. If it is merged, then this can be closed without merge. They do not conflict in any way. Both can go in.",https://github.com/bitcoin/bitcoin/pull/20849#issuecomment-754122796,754122796,
jonatack,2021-01-05 12:20:36,Any tips how to test this manually? Disconnecting outbound onion peers with `disconnectnode` works for me on both master and this PR and in #20852.,https://github.com/bitcoin/bitcoin/pull/20849#issuecomment-754602325,754602325,
vasild,2021-01-05 16:21:32,"@jonatack yes, the `disconnectnode` RPC uses either `DisconnectNode(std::string)` or `DisconnectNode(NodeId)` and the problem is in `DisconnectNode(CNetAddr)`.\n\n`bitcoin-cli setban foo.onion add` will do the job.",https://github.com/bitcoin/bitcoin/pull/20849#issuecomment-754740638,754740638,
taurus228,2021-01-05 16:26:58,"–≤—Ç, 5 —è–Ω–≤. 2021 –≥. –≤ 19:24, Vasil Dimov <notifications@github.com>:\n\n> @jonatack <https://github.com/jonatack> yes, the disconnectnode RPC uses\n> either DisconnectNode(std::string) or DisconnectNode(NodeId) and the\n> problem is in DisconnectNode(CNetAddr).\n>\n> bitcoin-cli setban foo.onion add will do the job.\n>\n> ‚Äî\n> You are receiving this because you are subscribed to this thread.\n> Rep",https://github.com/bitcoin/bitcoin/pull/20849#issuecomment-754743895,754743895,
sipa,2021-01-05 18:06:10,"utACK 5fd2cee7fbc38c677d08a1545770156cc061833e\n\nLet's get this merged so the path forward for 0.21 is clear (we can still do #20852, but it's no longer critical then).",https://github.com/bitcoin/bitcoin/pull/20849#issuecomment-754803214,754803214,
jonatack,2021-01-06 12:06:04,"Adding logging to the code path and verified that `setban <onion> add` disconnects peers with this patch and fails to do so on master @ 68196a891056f, with both tor v2 and v3 peers.\n\nLogging added to master and to this patch:\n```diff\n@@ -2805,6 +2805,7 @@ bool CConnman::DisconnectNode(const CSubNet& subnet)\n     LOCK(cs_vNodes);\n     for (CNode* pnode : vNodes) {\n         if (subnet.",https://github.com/bitcoin/bitcoin/pull/20849#issuecomment-755261977,755261977,
vasild,2021-01-06 14:55:17,"Appended an extra commit with unit test that fails on `master` and passes on this PR.\n\nIf it does not get re-ACKs or if it turns out to be problematic I will remove it, restoring the already ACK'ed commit id.",https://github.com/bitcoin/bitcoin/pull/20849#issuecomment-755345783,755345783,
jonatack,2021-01-06 15:33:21,"Nice, will review asap.",https://github.com/bitcoin/bitcoin/pull/20849#issuecomment-755369515,755369515,
DrahtBot,2021-01-06 19:03:27,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #20811 (refactor: move net_processing implementation details out of header by ajtowns)\n* #20228 (addrman: Make addrman a ",https://github.com/bitcoin/bitcoin/pull/20849#issuecomment-755526834,755526834,
vasild,2021-01-08 10:05:18,"Just to elaborate on the relationship between https://github.com/bitcoin/bitcoin/pull/20849 and https://github.com/bitcoin/bitcoin/pull/20852:\n\nThe problem in `master` is that `CSubNet(foo.onion)` creates an invalid subnet which later does not match any address, not even `foo.onion`. In two places in the code we expect that once we create such subnet later it will match `foo.onion`: in `CConnm",https://github.com/bitcoin/bitcoin/pull/20849#issuecomment-756667568,756667568,
MarcoFalke,2021-01-11 10:15:39,"It might be better to wait for #20852 (0.21.1), after which this is not needed.",https://github.com/bitcoin/bitcoin/pull/20849#issuecomment-757852730,757852730,
vasild,2021-01-11 16:39:20,The test is included in https://github.com/bitcoin/bitcoin/pull/20904.,https://github.com/bitcoin/bitcoin/pull/20849#issuecomment-758074471,758074471,
jonatack,2021-01-06 19:58:35,"The new test code fails at the right place on master\n```\ntest/denialofservice_tests.cpp(292): info: check banman->IsDiscouraged(addr1) has passed\ntest/denialofservice_tests.cpp(293): info: check banman->IsDiscouraged(addr2) has passed\ntest/denialofservice_tests.cpp(294): info: check banman->IsDiscouraged(addr3) has passed\ntest/denialofservice_tests.cpp(296): info: check node->fDisconnect",https://github.com/bitcoin/bitcoin/pull/20849#discussion_r552933686,552933686,src/test/denialofservice_tests.cpp
laanwj,2021-01-07 14:49:46,"Is this change still needed with #20852? It seems to me that makes the old, much more compact, construction work?",https://github.com/bitcoin/bitcoin/pull/20849#discussion_r553374275,553374275,src/net.cpp
vasild,2021-01-07 15:13:12,"No, if #20852 is merged, then this PR is not needed, see https://github.com/bitcoin/bitcoin/pull/20849#issuecomment-754122796.\n\nI first opened this PR to fix `DisconnectNode()` and then realized that the same problem exists in `BanMan`, thus opened #20852 which fixes both by modifying `CSubNet`.\n\nMaybe this PR could be preferred as less risky compared to #20852. It is ok if this is merged ",https://github.com/bitcoin/bitcoin/pull/20849#discussion_r553388972,553388972,src/net.cpp
MarcoFalke,2021-01-11 12:40:42,"std::make_unique for new code?\n\nAlso, could split the refactoring changes from the new-test changes?",https://github.com/bitcoin/bitcoin/pull/20849#discussion_r555019312,555019312,src/test/denialofservice_tests.cpp
MarcoFalke,2021-01-11 12:44:07,"Nvm, forget the std::make_unique suggestion. We want to backport the test changes.",https://github.com/bitcoin/bitcoin/pull/20849#discussion_r555021056,555021056,src/test/denialofservice_tests.cpp
