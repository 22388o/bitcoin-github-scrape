jonasschnelli,2018-01-17T07:55:00Z,"utACK 4959aa9a62ded74fcd343d6e402c79e3ebcba241\nNeeds squash.",https://github.com/bitcoin/bitcoin/pull/12208#issuecomment-358225238,358225238,
flack,2018-01-17T09:21:12Z,"Please see this comment https://github.com/bitcoin/bitcoin/pull/11991#issuecomment-358110905 \n\ntl/dr: Maybe ""spend from"" is not correct phrasing, but clicking this checkbox once won't reduce all your future transaction fees either",https://github.com/bitcoin/bitcoin/pull/12208#issuecomment-358244818,358244818,
Sjors,2018-01-17T09:49:32Z,"Although I'm fine with this change, I think #11937 is a better solution for users who launch with `-addresstype=legacy`, because it also lets users select P2SH wrapped SegWit.\n\nIf #11937 is merged, I think it's more clear to hide the checkbox when the user switches to legacy, if only so they don't forget to switch back to p2sh.\n\n\nThere's a certain airdrop coin that just switched to using",https://github.com/bitcoin/bitcoin/pull/12208#issuecomment-358252204,358252204,
gmaxwell,2018-01-17T11:16:17Z,"bcash's thing is not bech32, it's gratuitously incompatible.   I would prefer to call these ""bc1 addresses""  because that's how they're recognize able to users.  Something like ""Use bc1-style addresses. These addresses use segwit natively which  reduces your transaction fees later on and offers better protection against typos, but old wallets don't support them. When unchecked, an address compatib",https://github.com/bitcoin/bitcoin/pull/12208#issuecomment-358274036,358274036,
Sjors,2018-01-17T11:30:37Z,"+1 for ""bc1 address""\n\nI agree the bcash thing is weird, but assuming wallets hide** the `bitcoincash:` part*, users will assume it's the same kind of thing because it looks visually similar, it just doesn't start with `bc1`. Which is another argument in favor of ""bc1 address"".\n\n`*` = the prefix is implied by the URI, whereas in bitcoin:bc1... the prefix is redundant. But bech32 doesn't req",https://github.com/bitcoin/bitcoin/pull/12208#issuecomment-358277376,358277376,
gmaxwell,2018-01-17T15:53:24Z,"""The separator is 1 because using a non-alphanumeric character would complicate copy-pasting of addresses (with no double-click selection in several applications)"" -- BIP173 \n\nThere were _many_ design considerations in BECH32 which we didn't explain in the spec but that wasn't one of them.  \n\nOne of them was the potential for using an invisible magic value instead of or in addition to the ",https://github.com/bitcoin/bitcoin/pull/12208#issuecomment-358348098,358348098,
achow101,2018-01-17T17:31:10Z,utACK 5f5fe406d6e9b5b64c13a76c2d74b0dc7f27c01a,https://github.com/bitcoin/bitcoin/pull/12208#issuecomment-358380404,358380404,
promag,2018-01-18T00:41:55Z,"Maybe I'm alone here, but from previous discussions the goal is to push native segwit addresses forward.\n\nIMO the UI should not give the impression it is optional to not generate native segwit, instead, it should give the option to generate non-native segwit address.\n\nWhen `g_address_type == OUTPUT_TYPE_BECH32`:\n - [ ] Use address compatible with old wallets\n*If checked, use `OUTPUT_TY",https://github.com/bitcoin/bitcoin/pull/12208#issuecomment-358498828,358498828,
Sjors,2018-01-18T09:01:44Z,"> goal is to push native segwit addresses forward\n\nHaving this checkbox already goes a long way in encouraging adoption. Firstly it lets normal (non-RPC) users actually use it. Secondly it raises the bar for other wallets / services and gives them some confidence they're not wasting engineering time. See e.g. [this tweet from Kraken](https://twitter.com/krakensupport/status/949596199006306304)",https://github.com/bitcoin/bitcoin/pull/12208#issuecomment-358581325,358581325,
promag,2018-01-18T14:17:09Z,"> Making it the default now would lead to confusion\n\nI'm not suggesting that.",https://github.com/bitcoin/bitcoin/pull/12208#issuecomment-358659516,358659516,
gmaxwell,2018-01-18T14:21:00Z,"FWIW, my view on deployment is that even having the checkbox is rushing things... but not unacceptably. I think initially software should be made able to send to these addresses, then later made able to receive them.  Having the checkbox allows faster usage, but at a cost of creating a small amount of confusion due to having a somewhat complicated option that often (esp initially) won't work.  I t",https://github.com/bitcoin/bitcoin/pull/12208#issuecomment-358660572,358660572,
Sjors,2018-01-18T14:33:39Z,">> Making it the default now would lead to confusion\n\n> I'm not suggesting that.\n\nI was confused by what you meant with:\n\n> IMO the UI should not give the impression it is optional to not generate native segwit, instead, it should give the option to generate non-native segwit address.\n\nI don't think it's worth changing the text for when a user launches with `-addresstype=bech32` as",https://github.com/bitcoin/bitcoin/pull/12208#issuecomment-358664150,358664150,
promag,2018-01-18T16:00:49Z,"> I don't think it's worth changing the text for when a user launches with -addresstype=bech32\n\n> It does make sense to change the text to what you suggest once we change the default in some future version\n\nThose users would get the ""future"" UI. They won't see a difference when the default is changed.",https://github.com/bitcoin/bitcoin/pull/12208#issuecomment-358692062,358692062,
MarcoFalke,2018-01-18T19:41:30Z,Is this for 0.16?,https://github.com/bitcoin/bitcoin/pull/12208#issuecomment-358759105,358759105,
sipa,2018-01-18T23:03:42Z,"Concept ACK, i think the new text is fine. It's always going to be a bit fuzzy to explain the way in which a new address format influences fees later, but the current text is non-actionable anyway (users don't generally control the coin selection, so the link between transactions and fees is vague at best).",https://github.com/bitcoin/bitcoin/pull/12208#issuecomment-358811801,358811801,
MarcoFalke,2018-01-19T00:44:40Z,Needs rebase,https://github.com/bitcoin/bitcoin/pull/12208#issuecomment-358830742,358830742,
luke-jr,2018-01-23T08:53:31Z,"Rebased. I wouldn't mind ""bc1"", but the existing terminology seems well-established, and listing all 3 seems like a bit much.\n",https://github.com/bitcoin/bitcoin/pull/12208#issuecomment-359722003,359722003,
nopara73,2018-01-25T22:03:36Z,"+1 for ""bc1 addresses.""  \nWhile introducing a new synonymous term is rarely preferable, because of the confusion it creates, ""bc1 address"" doesn't have the usual cons. Advanced users may cringe the first time seeing this dumbed down version, but they will grasp the concept right away. While, for less advanced users, it is orders of magnitude more descriptive, than ""bech32"", ""native segwit"" or ""P",https://github.com/bitcoin/bitcoin/pull/12208#issuecomment-360615657,360615657,
promag,2018-01-27T15:47:23Z,"> Is this for 0.16?\n\nEchoing @MarcoFalke.",https://github.com/bitcoin/bitcoin/pull/12208#issuecomment-360993320,360993320,
Sgt-Miller,2018-01-27T18:35:23Z,"How about ""bravo charlie one"" ?\nhttps://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-December/015477.html",https://github.com/bitcoin/bitcoin/pull/12208#issuecomment-361005339,361005339,
luke-jr,2018-02-14T19:18:01Z,"IMO ""aka X"" is standard English these days...?",https://github.com/bitcoin/bitcoin/pull/12208#issuecomment-365715087,365715087,
randolf,2018-02-15T01:27:42Z,"@luke-jr You make a fair point, especially since English has been changing due to acronyms being used in texting on cellular phones (e.g., ""afaik"" is obviously easier to type than ""a.f.a.i.k.""), and so I don't think that you're wrong.  My thinking was that in many circles ""aka,"" (without the periods) is still regarded as slang, leaving ""a.k.a.,"" (with the periods) as being the more traditional usa",https://github.com/bitcoin/bitcoin/pull/12208#issuecomment-365799924,365799924,
laanwj,2018-03-29T21:06:18Z,Needs rebase.,https://github.com/bitcoin/bitcoin/pull/12208#issuecomment-377372455,377372455,
luke-jr,2018-03-31T16:53:44Z,Rebased,https://github.com/bitcoin/bitcoin/pull/12208#issuecomment-377706999,377706999,
sipa,2018-03-31T17:02:31Z,utACK,https://github.com/bitcoin/bitcoin/pull/12208#issuecomment-377707681,377707681,
jonasschnelli,2018-04-10T18:34:40Z,Needs rebase again (seems merge ready).,https://github.com/bitcoin/bitcoin/pull/12208#issuecomment-380203690,380203690,
TheBlueMatt,2018-05-07T13:55:44Z,"Needs simple rebase, utACK thereafter.",https://github.com/bitcoin/bitcoin/pull/12208#issuecomment-387072496,387072496,
fanquake,2018-05-17T02:03:48Z,I've rebased this in #13251.,https://github.com/bitcoin/bitcoin/pull/12208#issuecomment-389720913,389720913,
jonasschnelli,2018-01-17T07:29:53Z,"I think adding `(bech32)` here would be preferable since it seems to be used by the industry (Electrum, etc.).",https://github.com/bitcoin/bitcoin/pull/12208#discussion_r161973025,161973025,src/qt/forms/receivecoinsdialog.ui
luke-jr,2018-01-17T07:32:02Z,k,https://github.com/bitcoin/bitcoin/pull/12208#discussion_r161973310,161973310,src/qt/forms/receivecoinsdialog.ui
laanwj,2018-02-16T16:59:31Z,I don't understand the logic here: if default address type is BECH32 set it to P2SH_SEGWIT,https://github.com/bitcoin/bitcoin/pull/12208#discussion_r168812736,168812736,src/qt/receivecoinsdialog.cpp
flack,2018-02-16T17:08:22Z,"because `ui->useBech32->isChecked()` is false in line 145, no?",https://github.com/bitcoin/bitcoin/pull/12208#discussion_r168815161,168815161,src/qt/receivecoinsdialog.cpp
luke-jr,2018-02-16T17:21:15Z,"Indeed. The logic is that if useBech32 is unchecked, we don't want to use Bech32 even if that's the user's default. In that case, we use P2SH_SEGWIT instead. But if the default is P2SH_SEGWIT or LEGACY, then we leave it alone.\n\n| Addresstype default | Checkbox | Result |\n|---|----|----|\n| legacy | on | Bech32 |\n| p2sh-segwit | on | Bech32 |\n| bech32 | on | Bech32 |\n| legacy | off | L",https://github.com/bitcoin/bitcoin/pull/12208#discussion_r168818588,168818588,src/qt/receivecoinsdialog.cpp
Sjors,2018-02-16T17:32:57Z,That makes sense.,https://github.com/bitcoin/bitcoin/pull/12208#discussion_r168821543,168821543,src/qt/receivecoinsdialog.cpp
