[
  {
    "sha": "ec2c94ffeac8eb5be3549fc617ce142b57863a64",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplYzJjOTRmZmVhYzhlYjViZTM1NDlmYzYxN2NlMTQyYjU3ODYzYTY0",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2020-05-18T14:29:57Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2020-05-18T14:55:56Z"
      },
      "message": "relax GUI locks: avoid unnecesarry calls to ::ChainstateActive().IsInitialBlockDownload()\n\nIntroduced in #12783 / 1e0f3c44992fb82e6bf36c2ef9277b0759c17c4c",
      "tree": {
        "sha": "2aff2e91be12ff16fb83cdbd26b0cb946eeef1c0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2aff2e91be12ff16fb83cdbd26b0cb946eeef1c0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ec2c94ffeac8eb5be3549fc617ce142b57863a64",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ec2c94ffeac8eb5be3549fc617ce142b57863a64",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ec2c94ffeac8eb5be3549fc617ce142b57863a64",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ec2c94ffeac8eb5be3549fc617ce142b57863a64/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "dc5333d31f280e09bb1e8cdacfbe842f4ab9e69b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dc5333d31f280e09bb1e8cdacfbe842f4ab9e69b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/dc5333d31f280e09bb1e8cdacfbe842f4ab9e69b"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 10,
      "deletions": 9
    },
    "files": [
      {
        "sha": "94bf5cd28a96d8df9676d76c6657cd17e552a3c2",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec2c94ffeac8eb5be3549fc617ce142b57863a64/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec2c94ffeac8eb5be3549fc617ce142b57863a64/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=ec2c94ffeac8eb5be3549fc617ce142b57863a64",
        "patch": "@@ -567,7 +567,7 @@ void BitcoinGUI::setClientModel(ClientModel *_clientModel)\n         connect(_clientModel, &ClientModel::networkActiveChanged, this, &BitcoinGUI::setNetworkActive);\n \n         modalOverlay->setKnownBestHeight(_clientModel->getHeaderTipHeight(), QDateTime::fromTime_t(_clientModel->getHeaderTipTime()));\n-        setNumBlocks(m_node.getNumBlocks(), QDateTime::fromTime_t(m_node.getLastBlockTime()), m_node.getVerificationProgress(), false);\n+        setNumBlocks(m_node.getNumBlocks(), QDateTime::fromTime_t(m_node.getLastBlockTime()), m_node.getVerificationProgress(), false, m_node.isInitialBlockDownload());\n         connect(_clientModel, &ClientModel::numBlocksChanged, this, &BitcoinGUI::setNumBlocks);\n \n         // Receive and report messages from client model\n@@ -926,11 +926,11 @@ void BitcoinGUI::openOptionsDialogWithTab(OptionsDialog::Tab tab)\n     dlg.exec();\n }\n \n-void BitcoinGUI::setNumBlocks(int count, const QDateTime& blockDate, double nVerificationProgress, bool header)\n+void BitcoinGUI::setNumBlocks(int count, const QDateTime& blockDate, double nVerificationProgress, bool header, bool initial_sync)\n {\n // Disabling macOS App Nap on initial sync, disk and reindex operations.\n #ifdef Q_OS_MAC\n-    (m_node.isInitialBlockDownload() || m_node.getReindex() || m_node.getImporting()) ? m_app_nap_inhibitor->disableAppNap() : m_app_nap_inhibitor->enableAppNap();\n+    (initial_sync || m_node.getReindex() || m_node.getImporting()) ? m_app_nap_inhibitor->disableAppNap() : m_app_nap_inhibitor->enableAppNap();\n #endif\n \n     if (modalOverlay)"
      },
      {
        "sha": "10db4e2676e2d78cd954374525aeccd8fb25aeb2",
        "filename": "src/qt/bitcoingui.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec2c94ffeac8eb5be3549fc617ce142b57863a64/src/qt/bitcoingui.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec2c94ffeac8eb5be3549fc617ce142b57863a64/src/qt/bitcoingui.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.h?ref=ec2c94ffeac8eb5be3549fc617ce142b57863a64",
        "patch": "@@ -213,7 +213,7 @@ public Q_SLOTS:\n     /** Set network state shown in the UI */\n     void setNetworkActive(bool networkActive);\n     /** Set number of blocks and last block date shown in the UI */\n-    void setNumBlocks(int count, const QDateTime& blockDate, double nVerificationProgress, bool headers);\n+    void setNumBlocks(int count, const QDateTime& blockDate, double nVerificationProgress, bool headers, bool initial_sync);\n \n     /** Notify the user of an event from the core network or transaction handling code.\n        @param[in] title             the message box / notification title"
      },
      {
        "sha": "ae798d194b97f7a49cef851e502400a84a28338d",
        "filename": "src/qt/clientmodel.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec2c94ffeac8eb5be3549fc617ce142b57863a64/src/qt/clientmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec2c94ffeac8eb5be3549fc617ce142b57863a64/src/qt/clientmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.cpp?ref=ec2c94ffeac8eb5be3549fc617ce142b57863a64",
        "patch": "@@ -260,7 +260,8 @@ static void BlockTipChanged(ClientModel *clientmodel, bool initialSync, int heig\n                                   Q_ARG(int, height),\n                                   Q_ARG(QDateTime, QDateTime::fromTime_t(blockTime)),\n                                   Q_ARG(double, verificationProgress),\n-                                  Q_ARG(bool, fHeader));\n+                                  Q_ARG(bool, fHeader),\n+                                  Q_ARG(bool, initialSync));\n         assert(invoked);\n         nLastUpdateNotification = now;\n     }"
      },
      {
        "sha": "8f39985705d23339a07306097bb50c1400574b97",
        "filename": "src/qt/clientmodel.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec2c94ffeac8eb5be3549fc617ce142b57863a64/src/qt/clientmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec2c94ffeac8eb5be3549fc617ce142b57863a64/src/qt/clientmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.h?ref=ec2c94ffeac8eb5be3549fc617ce142b57863a64",
        "patch": "@@ -100,7 +100,7 @@ class ClientModel : public QObject\n \n Q_SIGNALS:\n     void numConnectionsChanged(int count);\n-    void numBlocksChanged(int count, const QDateTime& blockDate, double nVerificationProgress, bool header);\n+    void numBlocksChanged(int count, const QDateTime& blockDate, double nVerificationProgress, bool header, bool initial_sync);\n     void mempoolSizeChanged(long count, size_t mempoolSizeInBytes);\n     void networkActiveChanged(bool networkActive);\n     void alertsChanged(const QString &warnings);"
      },
      {
        "sha": "acc9c96d09ffa4c1801fcacc2227000656b12ed7",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec2c94ffeac8eb5be3549fc617ce142b57863a64/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec2c94ffeac8eb5be3549fc617ce142b57863a64/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=ec2c94ffeac8eb5be3549fc617ce142b57863a64",
        "patch": "@@ -578,7 +578,7 @@ void RPCConsole::setClientModel(ClientModel *model)\n         connect(model, &ClientModel::numConnectionsChanged, this, &RPCConsole::setNumConnections);\n \n         interfaces::Node& node = clientModel->node();\n-        setNumBlocks(node.getNumBlocks(), QDateTime::fromTime_t(node.getLastBlockTime()), node.getVerificationProgress(), false);\n+        setNumBlocks(node.getNumBlocks(), QDateTime::fromTime_t(node.getLastBlockTime()), node.getVerificationProgress(), false, m_node.isInitialBlockDownload());\n         connect(model, &ClientModel::numBlocksChanged, this, &RPCConsole::setNumBlocks);\n \n         updateNetworkState();\n@@ -868,7 +868,7 @@ void RPCConsole::setNetworkActive(bool networkActive)\n     updateNetworkState();\n }\n \n-void RPCConsole::setNumBlocks(int count, const QDateTime& blockDate, double nVerificationProgress, bool headers)\n+void RPCConsole::setNumBlocks(int count, const QDateTime& blockDate, double nVerificationProgress, bool headers, bool initial_sync)\n {\n     if (!headers) {\n         ui->numberOfBlocks->setText(QString::number(count));"
      },
      {
        "sha": "e1fa31286a3874bb1a1068d3b853e421a6a9f099",
        "filename": "src/qt/rpcconsole.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec2c94ffeac8eb5be3549fc617ce142b57863a64/src/qt/rpcconsole.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec2c94ffeac8eb5be3549fc617ce142b57863a64/src/qt/rpcconsole.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.h?ref=ec2c94ffeac8eb5be3549fc617ce142b57863a64",
        "patch": "@@ -108,7 +108,7 @@ public Q_SLOTS:\n     /** Set network state shown in the UI */\n     void setNetworkActive(bool networkActive);\n     /** Set number of blocks and last block date shown in the UI */\n-    void setNumBlocks(int count, const QDateTime& blockDate, double nVerificationProgress, bool headers);\n+    void setNumBlocks(int count, const QDateTime& blockDate, double nVerificationProgress, bool headers, bool initial_sync);\n     /** Set size (number of transactions and memory usage) of the mempool in the UI */\n     void setMempoolSize(long numberOfTxs, size_t dynUsage);\n     /** Go forward or back in history */"
      }
    ]
  }
]