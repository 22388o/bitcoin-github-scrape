[
  {
    "sha": "c5dfa90aab53832c9ad339360d11d6635a26ba6b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjNWRmYTkwYWFiNTM4MzJjOWFkMzM5MzYwZDExZDY2MzVhMjZiYTZi",
    "commit": {
      "author": {
        "name": "Cristian Mircea Messel",
        "email": "mess110@gmail.com",
        "date": "2017-10-11T19:56:31Z"
      },
      "committer": {
        "name": "Cristian Mircea Messel",
        "email": "mess110@gmail.com",
        "date": "2017-10-11T20:19:16Z"
      },
      "message": "[tests] Add uacomment tests\n\nChecks for setting the value, max length and reserved characters",
      "tree": {
        "sha": "0a037a0d8ff328cf81b04190cedcd29ceb296da3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0a037a0d8ff328cf81b04190cedcd29ceb296da3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c5dfa90aab53832c9ad339360d11d6635a26ba6b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c5dfa90aab53832c9ad339360d11d6635a26ba6b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c5dfa90aab53832c9ad339360d11d6635a26ba6b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c5dfa90aab53832c9ad339360d11d6635a26ba6b/comments",
    "author": {
      "login": "mess110",
      "id": 226170,
      "node_id": "MDQ6VXNlcjIyNjE3MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/226170?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mess110",
      "html_url": "https://github.com/mess110",
      "followers_url": "https://api.github.com/users/mess110/followers",
      "following_url": "https://api.github.com/users/mess110/following{/other_user}",
      "gists_url": "https://api.github.com/users/mess110/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mess110/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mess110/subscriptions",
      "organizations_url": "https://api.github.com/users/mess110/orgs",
      "repos_url": "https://api.github.com/users/mess110/repos",
      "events_url": "https://api.github.com/users/mess110/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mess110/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mess110",
      "id": 226170,
      "node_id": "MDQ6VXNlcjIyNjE3MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/226170?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mess110",
      "html_url": "https://github.com/mess110",
      "followers_url": "https://api.github.com/users/mess110/followers",
      "following_url": "https://api.github.com/users/mess110/following{/other_user}",
      "gists_url": "https://api.github.com/users/mess110/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mess110/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mess110/subscriptions",
      "organizations_url": "https://api.github.com/users/mess110/orgs",
      "repos_url": "https://api.github.com/users/mess110/repos",
      "events_url": "https://api.github.com/users/mess110/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mess110/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "892809309c1bc370677241a715e57a2744f94323",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/892809309c1bc370677241a715e57a2744f94323",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/892809309c1bc370677241a715e57a2744f94323"
      }
    ],
    "stats": {
      "total": 36,
      "additions": 36,
      "deletions": 0
    },
    "files": [
      {
        "sha": "dd82f9513af6a21445a4073c06b288e94d24b889",
        "filename": "test/functional/test_runner.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c5dfa90aab53832c9ad339360d11d6635a26ba6b/test/functional/test_runner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c5dfa90aab53832c9ad339360d11d6635a26ba6b/test/functional/test_runner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_runner.py?ref=c5dfa90aab53832c9ad339360d11d6635a26ba6b",
        "patch": "@@ -124,6 +124,7 @@\n     'resendwallettransactions.py',\n     'minchainwork.py',\n     'p2p-fingerprint.py',\n+    'uacomment.py',\n ]\n \n EXTENDED_SCRIPTS = ["
      },
      {
        "sha": "0b2c64ab697de9f644656b76fb5154e6e525b094",
        "filename": "test/functional/uacomment.py",
        "status": "added",
        "additions": 35,
        "deletions": 0,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c5dfa90aab53832c9ad339360d11d6635a26ba6b/test/functional/uacomment.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c5dfa90aab53832c9ad339360d11d6635a26ba6b/test/functional/uacomment.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/uacomment.py?ref=c5dfa90aab53832c9ad339360d11d6635a26ba6b",
        "patch": "@@ -0,0 +1,35 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the -uacomment option.\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+class UacommentTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+        self.setup_clean_chain = True\n+\n+    def run_test(self):\n+        self.log.info(\"test multiple -uacomment\")\n+        test_uacomment = self.nodes[0].getnetworkinfo()[\"subversion\"][-12:-1]\n+        assert_equal(test_uacomment, \"(testnode0)\")\n+\n+        self.restart_node(0, [\"-uacomment=foo\"])\n+        foo_uacomment = self.nodes[0].getnetworkinfo()[\"subversion\"][-17:-1]\n+        assert_equal(foo_uacomment, \"(testnode0; foo)\")\n+\n+        self.log.info(\"test -uacomment max length\")\n+        self.stop_node(0)\n+        expected = \"Total length of network version string (286) exceeds maximum length (256). Reduce the number or size of uacomments.\"\n+        self.assert_start_raises_init_error(0, [\"-uacomment=\" + 'a' * 256], expected)\n+\n+        self.log.info(\"test -uacomment unsafe characters\")\n+        for unsafe_char in ['/', ':', '(', ')']:\n+            expected = \"User Agent comment (\" + unsafe_char + \") contains unsafe characters\"\n+            self.assert_start_raises_init_error(0, [\"-uacomment=\" + unsafe_char], expected)\n+\n+if __name__ == '__main__':\n+    UacommentTest().main()"
      }
    ]
  }
]