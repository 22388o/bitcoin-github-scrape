MarcoFalke,2021-05-17 07:18:37,"> Look at other tests that could benefit from P2PK (e.g. feature_cltv.py?)\n\nI think that test also uses the mempool, which doesn't like raw scripts. I guess an alternative to that is to wrap all scripts into a hashed output first, which is cumbersome :(. Or ignore specific reject reasons, when available.",https://github.com/bitcoin/bitcoin/pull/21945#issuecomment-842074149,842074149,
michaelfolkson,2021-05-17 09:46:23,Concept ACK. A clear improvement to be able to generate P2PK outputs in the functional tests in addition to anyone-can-spend outputs.,https://github.com/bitcoin/bitcoin/pull/21945#issuecomment-842183818,842183818,
theStack,2021-05-17 14:14:46,"Thanks for the reviews! #20753 looks interesting, though at first glance it seems to be discussed controversially. Will look at it more in detail within the next days. Another example where the MiniWallet with P2PK support helps is `feature_dersig.py`, which used the wallet for creating a DER-signature (i.e. ignoring specific reject reasons doesn't help in this case).",https://github.com/bitcoin/bitcoin/pull/21945#issuecomment-842360577,842360577,
theStack,2021-05-17 18:07:35,"Force-pushed with the following changes:\n* changed `MiniWallet.sign_tx()` method to not return the tx again, as the signing works in-place by directly modifying the first input's `scriptSig` (thanks to @reemuru whose [review comment](https://github.com/bitcoin/bitcoin/pull/21945#discussion_r633181315) inspired me to do this!)\n* changed mode selection structure to be more friendlier w.r.t. chan",https://github.com/bitcoin/bitcoin/pull/21945#issuecomment-842526575,842526575,
laanwj,2021-05-18 19:19:31,Code review ACK 4bea30169218e2f21e0c93a059966b41c8edd205,https://github.com/bitcoin/bitcoin/pull/21945#issuecomment-843466451,843466451,
reemuru,2021-05-17 02:06:52,"Hey, I'm hoping to be new contributor someday. Just taking a peek at some PRs. Could these original tx assignments be removed since it is being re-assigned?\n\n```cpp\ntx = self.create_self_transfer_from_utxo(input)\n```",https://github.com/bitcoin/bitcoin/pull/21945#discussion_r633181315,633181315,test/functional/feature_csv_activation.py
MarcoFalke,2021-05-17 07:16:13,"Nice. Thanks for working on this.\n\nI guess an alternative to consider might be to use the option to ignore specific reject reasons, when it is available. #20753  ",https://github.com/bitcoin/bitcoin/pull/21945#discussion_r633278013,633278013,test/functional/feature_csv_activation.py
theStack,2021-05-17 11:13:27,"Hi reemuru, thanks for taking a look and welcome as new contributor!\nNote that the `tx` instance created in this line is used on the right-hand-side of the re-assignment two lines below, i.e. it serves as input for the `sign_tx` method call: `tx = self.miniwallet.sign_tx(tx)`. The best would probably be if `sign_tx` modifies the tx in-place and doesn't return anything, leading to simply `self.mi",https://github.com/bitcoin/bitcoin/pull/21945#discussion_r633441472,633441472,test/functional/feature_csv_activation.py
MarcoFalke,2021-05-17 17:04:20,would be nice to make this an `elif use_p2pk` to make it easier to switch to an enum,https://github.com/bitcoin/bitcoin/pull/21945#discussion_r633706544,633706544,test/functional/test_framework/wallet.py
theStack,2021-05-17 18:05:23,"Thanks, done.",https://github.com/bitcoin/bitcoin/pull/21945#discussion_r633746676,633746676,test/functional/test_framework/wallet.py
