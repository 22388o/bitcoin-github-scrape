laanwj,2013-09-10T20:34:51Z,"I'm a bit divided on this; on one hand, this is very useful if the tests are to be distributed/installed. On the other hand is that a common use case? I always run them within the build directory.\n\nWhat if one wants to edit the test data while testing? One of the advantages of data-driven testing is not having to recompile every time after changing the test data.\n",https://github.com/bitcoin/bitcoin/pull/2985#issuecomment-24192139,24192139,
theuni,2013-09-10T21:27:11Z,"@laanwj It's common for me, as I'm usually doing cross/gitian builds. This would encourage devs to use tests when interacting with users, as-in: ""please post the output of the tests"", which can now be easily run by users and trusted by the bug-hunter.\n",https://github.com/bitcoin/bitcoin/pull/2985#issuecomment-24196048,24196048,
laanwj,2013-09-11T06:11:56Z,"But you could also do that by making the tests expect the data in a subdirectory of the executable, and then send a package with tests + data together.\n\nIn any case I'm not against this, but in my own projects I usually do testing with a python harness and having to compile as little as possible while designing tests is a great advantage (faster test cycle). So some way I feel this is a step in ",https://github.com/bitcoin/bitcoin/pull/2985#issuecomment-24215422,24215422,
gavinandresen,2013-09-11T06:25:19Z,"I think this is a step in the wrong direction. I have never wanted to give an end-user unit tests, but found it incredibly helpful to be able to rapidly run tests by just editing a .json file and then re-running ./test_bitcoin.\n",https://github.com/bitcoin/bitcoin/pull/2985#issuecomment-24215796,24215796,
theuni,2013-09-12T00:18:48Z,"Fair enough. Different perspectives I suppose, and ease of use by the devs trumps everything else for sure. But just to throw out a data-point from my desktop:\n\n```\n#change the test\ncory@cory-i7:~/dev/bitcoin/src/test(included-tests)$ touch data/base58_encode_decode.json\n\n#make check will rebuild as necessary and run\ncory@cory-i7:~/dev/bitcoin/src/test(included-tests)$ time make check\nGene",https://github.com/bitcoin/bitcoin/pull/2985#issuecomment-24286505,24286505,
sipa,2013-09-13T10:40:03Z,"With such small build times, I don't really care about it. I don't think this is really a problem, but avoiding the absolute paths mess is certainly an advantage.\n",https://github.com/bitcoin/bitcoin/pull/2985#issuecomment-24386363,24386363,
gavinandresen,2013-09-15T00:17:03Z,"Data is a very good way of making me change my mind.\n\nRecompiles are fast enough, so ACK after rebase and making pull-tester happy.\n",https://github.com/bitcoin/bitcoin/pull/2985#issuecomment-24461742,24461742,
theuni,2013-09-16T05:35:53Z,@gavinandresen Could you please install 'bsdmainutils' in the pull-tester? After that i'll rebase on master and push for a new test.\n,https://github.com/bitcoin/bitcoin/pull/2985#issuecomment-24489721,24489721,
gavinandresen,2013-09-16T06:52:45Z,I installed bsdmainutils in the pull-tester's chroot environment.\n,https://github.com/bitcoin/bitcoin/pull/2985#issuecomment-24491556,24491556,
BitcoinPullTester,2013-09-16T18:25:18Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/152e51c7af2624831cc4796e06bf3b72787cc85f for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-tester/cu",https://github.com/bitcoin/bitcoin/pull/2985#issuecomment-24532388,24532388,
gavinandresen,2013-09-16T23:20:05Z,Where are we on updating documentation for autotools?  The new bsdmainutils apt-get dependency needs to be documented.\n\nFYI: /usr/bin/hexdump seems to be standard on OSX.\n,https://github.com/bitcoin/bitcoin/pull/2985#issuecomment-24552854,24552854,
theuni,2013-09-16T23:23:39Z,"I think after the debug/release stuff gets fixed up, that marks a good time to do the thorough docs overhaul.\n\nAck on OSX, it seems to be standard (and compliant for once, woohoo!) from at least 10.6-10.8.\n",https://github.com/bitcoin/bitcoin/pull/2985#issuecomment-24553019,24553019,
sipa,2013-09-17T00:43:37Z,ACK; seems to build and run fine.\n,https://github.com/bitcoin/bitcoin/pull/2985#issuecomment-24556530,24556530,
