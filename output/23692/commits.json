[
  {
    "sha": "275e9390e1c84ac021b3c781ee239ad9ba7b78d4",
    "node_id": "C_kwDOABII59oAKDI3NWU5MzkwZTFjODRhYzAyMWIzYzc4MWVlMjM5YWQ5YmE3Yjc4ZDQ",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-12-06T17:53:36Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-12-07T14:01:43Z"
      },
      "message": "mining, refactor: add m_mempool.cs thread safety lock assertions\n\nin src/node/miner to:\n\n- BlockAssembler::addPackageTxs()\n- BlockAssembler::SkipMapTxEntry()\n- BlockAssembler::UpdatePackagesForAdded()\n\nThese functions have thread safety lock annotations in\ntheir declarations but are missing the corresponding\nrun-time lock assertions in their definitions.\n\nPer doc/developer-notes.md: \"Combine annotations in function\ndeclarations with run-time asserts in function definitions.\"",
      "tree": {
        "sha": "042308dc66407cc7a4995383b78e708c521eefa2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/042308dc66407cc7a4995383b78e708c521eefa2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/275e9390e1c84ac021b3c781ee239ad9ba7b78d4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/275e9390e1c84ac021b3c781ee239ad9ba7b78d4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/275e9390e1c84ac021b3c781ee239ad9ba7b78d4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/275e9390e1c84ac021b3c781ee239ad9ba7b78d4/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "95fe477fd189ae30e76050b95280086d913e78c2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/95fe477fd189ae30e76050b95280086d913e78c2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/95fe477fd189ae30e76050b95280086d913e78c2"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 6,
      "deletions": 0
    },
    "files": [
      {
        "sha": "6e9bde84d8eba131e20b7fdb0739420d030b5b0c",
        "filename": "src/node/miner.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/275e9390e1c84ac021b3c781ee239ad9ba7b78d4/src/node/miner.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/275e9390e1c84ac021b3c781ee239ad9ba7b78d4/src/node/miner.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/node/miner.cpp?ref=275e9390e1c84ac021b3c781ee239ad9ba7b78d4",
        "patch": "@@ -251,6 +251,8 @@ void BlockAssembler::AddToBlock(CTxMemPool::txiter iter)\n int BlockAssembler::UpdatePackagesForAdded(const CTxMemPool::setEntries& alreadyAdded,\n         indexed_modified_transaction_set &mapModifiedTx)\n {\n+    AssertLockHeld(m_mempool.cs);\n+\n     int nDescendantsUpdated = 0;\n     for (CTxMemPool::txiter it : alreadyAdded) {\n         CTxMemPool::setEntries descendants;\n@@ -287,6 +289,8 @@ int BlockAssembler::UpdatePackagesForAdded(const CTxMemPool::setEntries& already\n // cached size/sigops/fee values that are not actually correct.\n bool BlockAssembler::SkipMapTxEntry(CTxMemPool::txiter it, indexed_modified_transaction_set& mapModifiedTx, CTxMemPool::setEntries& failedTx)\n {\n+    AssertLockHeld(m_mempool.cs);\n+\n     assert(it != m_mempool.mapTx.end());\n     return mapModifiedTx.count(it) || inBlock.count(it) || failedTx.count(it);\n }\n@@ -314,6 +318,8 @@ void BlockAssembler::SortForBlock(const CTxMemPool::setEntries& package, std::ve\n // transaction package to work on next.\n void BlockAssembler::addPackageTxs(int& nPackagesSelected, int& nDescendantsUpdated)\n {\n+    AssertLockHeld(m_mempool.cs);\n+\n     // mapModifiedTx will store sorted packages after they are modified\n     // because some of their txs are already in the block\n     indexed_modified_transaction_set mapModifiedTx;"
      }
    ]
  }
]