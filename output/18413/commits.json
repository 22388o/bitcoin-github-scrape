[
  {
    "sha": "2748e8793267126c5b40621d75d1930e358f057e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyNzQ4ZTg3OTMyNjcxMjZjNWI0MDYyMWQ3NWQxOTMwZTM1OGYwNTdl",
    "commit": {
      "author": {
        "name": "pierrenn",
        "email": "git@pnn.sh",
        "date": "2020-04-08T06:10:28Z"
      },
      "committer": {
        "name": "pierrenn",
        "email": "git@pnn.sh",
        "date": "2020-04-08T23:32:00Z"
      },
      "message": "script: prevent UB when computing abs value for num opcode serialize",
      "tree": {
        "sha": "2c60aea1c57f44cab3b835ed33b3ccae2e40b950",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2c60aea1c57f44cab3b835ed33b3ccae2e40b950"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2748e8793267126c5b40621d75d1930e358f057e",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEWCV6LlmGs/fLm2z1iQdEWv5Fu/oFAl6OXvAACgkQiQdEWv5F\nu/qaTQ//X2ubGfVktSLH/QesTPs16Ue65f5cgPBC+QWA8X0AFia+IVZYGJ3Ar5nB\n5e5HRuBgAT6Qly4jEoc1YMYhDzw/4RPSySSW/ZhkW3+e/ouacGQCagtGVi26he5Q\nlSzhQHWmly4avjKZDaqLJGAdLVqeEKwSUcbYf0SY7VlgN+ozKlGKbOe6aHSLYu3X\nuM9Z/SX/dEArbeJdvWGMtElSh9siq//kEzQyVGXVHRhrBcJTZN1eKuPxs1KGttT5\ny84Q1Dj5My2DVPXGfLr+VUWULLgvhZ1lLeZfgTKeNRTMhmaGp4l3DiNm9edoPDZS\n9GElcT7wP+0iPP4cd+TjEsx86Q6EyvLJlfTw+3nSGjx7fApb7cpLxX0XGALLJRnW\n3rWtxyDP2eI6ico4bc/3CeyaajS7uHR/owYhUNjECJuFsa1Aa3QG5njoeJ8XBw1m\nTMkj+kka4Fq+G1329BIlQ49iPu+nq6+CSkF+PXSH7nqaik06ZvMPO5OJser2egAf\nYdk8Jhv+Eih6NPFF6KbCg1f7g2qcZ2L5jK7JiARw+LP9SsNmIBhUWt5u+yC+UWPa\ncqCWvf8PQIJIslIFGKzpdkTdIYzEicjD+ROahNPSMJZL1zSfNJxOfflBO6mHHWa3\nYtPc0VxRLrBN7H2pblY45V7gzcQ6CA1y+ORFDkvOXoEepSoaykA=\n=HmEm\n-----END PGP SIGNATURE-----",
        "payload": "tree 2c60aea1c57f44cab3b835ed33b3ccae2e40b950\nparent 1b151e3ffce7c1a2ee46bf280cc1d96775d1f91e\nauthor pierrenn <git@pnn.sh> 1586326228 +0900\ncommitter pierrenn <git@pnn.sh> 1586388720 +0900\n\nscript: prevent UB when computing abs value for num opcode serialize\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2748e8793267126c5b40621d75d1930e358f057e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2748e8793267126c5b40621d75d1930e358f057e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2748e8793267126c5b40621d75d1930e358f057e/comments",
    "author": {
      "login": "pierreN",
      "id": 946757,
      "node_id": "MDQ6VXNlcjk0Njc1Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/946757?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pierreN",
      "html_url": "https://github.com/pierreN",
      "followers_url": "https://api.github.com/users/pierreN/followers",
      "following_url": "https://api.github.com/users/pierreN/following{/other_user}",
      "gists_url": "https://api.github.com/users/pierreN/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pierreN/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pierreN/subscriptions",
      "organizations_url": "https://api.github.com/users/pierreN/orgs",
      "repos_url": "https://api.github.com/users/pierreN/repos",
      "events_url": "https://api.github.com/users/pierreN/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pierreN/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "pierreN",
      "id": 946757,
      "node_id": "MDQ6VXNlcjk0Njc1Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/946757?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pierreN",
      "html_url": "https://github.com/pierreN",
      "followers_url": "https://api.github.com/users/pierreN/followers",
      "following_url": "https://api.github.com/users/pierreN/following{/other_user}",
      "gists_url": "https://api.github.com/users/pierreN/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pierreN/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pierreN/subscriptions",
      "organizations_url": "https://api.github.com/users/pierreN/orgs",
      "repos_url": "https://api.github.com/users/pierreN/repos",
      "events_url": "https://api.github.com/users/pierreN/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pierreN/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1b151e3ffce7c1a2ee46bf280cc1d96775d1f91e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1b151e3ffce7c1a2ee46bf280cc1d96775d1f91e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1b151e3ffce7c1a2ee46bf280cc1d96775d1f91e"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 3,
      "deletions": 11
    },
    "files": [
      {
        "sha": "866517ba2d27797be1dc413f64ea94bad9abfda4",
        "filename": "src/script/script.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2748e8793267126c5b40621d75d1930e358f057e/src/script/script.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2748e8793267126c5b40621d75d1930e358f057e/src/script/script.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/script.h?ref=2748e8793267126c5b40621d75d1930e358f057e",
        "patch": "@@ -329,7 +329,7 @@ class CScriptNum\n \n         std::vector<unsigned char> result;\n         const bool neg = value < 0;\n-        uint64_t absvalue = neg ? -value : value;\n+        uint64_t absvalue = neg ? ~static_cast<uint64_t>(value) + 1 : static_cast<uint64_t>(value);\n \n         while(absvalue)\n         {"
      },
      {
        "sha": "78ecc4766307df706cee590f340ba798f0217eb8",
        "filename": "src/test/fuzz/integer.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 5,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2748e8793267126c5b40621d75d1930e358f057e/src/test/fuzz/integer.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2748e8793267126c5b40621d75d1930e358f057e/src/test/fuzz/integer.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/integer.cpp?ref=2748e8793267126c5b40621d75d1930e358f057e",
        "patch": "@@ -135,11 +135,7 @@ void test_one_input(const std::vector<uint8_t>& buffer)\n \n     const CScriptNum script_num{i64};\n     (void)script_num.getint();\n-    // Avoid negation failure:\n-    // script/script.h:332:35: runtime error: negation of -9223372036854775808 cannot be represented in type 'int64_t' (aka 'long'); cast to an unsigned type to negate this value to itself\n-    if (script_num != CScriptNum{std::numeric_limits<int64_t>::min()}) {\n-        (void)script_num.getvch();\n-    }\n+    (void)script_num.getvch();\n \n     const arith_uint256 au256 = UintToArith256(u256);\n     assert(ArithToUint256(au256) == u256);"
      },
      {
        "sha": "f4e079fb89b22e84870fb4654a99960f516cb9c1",
        "filename": "src/test/fuzz/scriptnum_ops.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 5,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2748e8793267126c5b40621d75d1930e358f057e/src/test/fuzz/scriptnum_ops.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2748e8793267126c5b40621d75d1930e358f057e/src/test/fuzz/scriptnum_ops.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/scriptnum_ops.cpp?ref=2748e8793267126c5b40621d75d1930e358f057e",
        "patch": "@@ -129,10 +129,6 @@ void test_one_input(const std::vector<uint8_t>& buffer)\n             break;\n         }\n         (void)script_num.getint();\n-        // Avoid negation failure:\n-        // script/script.h:332:35: runtime error: negation of -9223372036854775808 cannot be represented in type 'int64_t' (aka 'long'); cast to an unsigned type to negate this value to itself\n-        if (script_num != CScriptNum{std::numeric_limits<int64_t>::min()}) {\n-            (void)script_num.getvch();\n-        }\n+        (void)script_num.getvch();\n     }\n }"
      }
    ]
  }
]