[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/750852490",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20752#issuecomment-750852490",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20752",
    "id": 750852490,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1MDg1MjQ5MA==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-24T11:18:35Z",
    "updated_at": "2020-12-24T11:18:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #20759 (doc: [test] Remove outdated comment in fuzz runner by MarcoFalke)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/750852490/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/751526957",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20752#issuecomment-751526957",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20752",
    "id": 751526957,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1MTUyNjk1Nw==",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-27T23:11:34Z",
    "updated_at": "2020-12-27T23:11:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "Concept ACK",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/751526957/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/547756550",
    "pull_request_review_id": 557690298,
    "id": 547756550,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Nzc1NjU1MA==",
    "diff_hunk": "@@ -178,21 +178,32 @@ def generate_corpus_seeds(*, max_jobs, build_dir, seed_dir, targets):\n     \"\"\"\n     logging.info(\"Generating corpus seeds to {}\".format(seed_dir))\n \n-    jobs = []\n-    for target in targets:\n+    def generate_job():\n+        target = random.choice(targets)\n+        mutate_depth = random.randint(1, 15)\n+        use_value_profile = 0\n+        if random.randint(1, 10) == 1:\n+            use_value_profile = 1\n+        max_len = 2**random.randint(6, 12)\n+        if random.randint(1, 20) == 1:\n+            max_len = 0\n         target_seed_dir = os.path.join(seed_dir, target)\n         os.makedirs(target_seed_dir, exist_ok=True)\n         args = [\n             os.path.join(build_dir, 'src', 'test', 'fuzz', 'fuzz'),\n-            \"-runs=100000\",\n+            \"-max_total_time=1800\",\n+            \"-reload=0\",\n+            \"-mutate_depth={}\".format(mutate_depth),\n+            \"-use_value_profile={}\".format(use_value_profile),\n+            \"-max_len={}\".format(max_len),\n             target_seed_dir,\n         ]\n-        jobs.append([target, args])\n+        return [target, args]\n \n     running_jobs = set()\n-    while len(jobs) > 0 or len(running_jobs) > 0:\n-        if len(running_jobs) < max_jobs and len(jobs) > 0:\n-            target, args = jobs.pop()\n+    while True:",
    "path": "test/fuzz/test_runner.py",
    "position": 125,
    "original_position": 43,
    "commit_id": "1ff0dc525f051bbc7a93312dd622340ca8f4f52c",
    "original_commit_id": "ff804c0392e7f8bc10cf4740f6d06ab4bd204f77",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "It was nice to be able to put the `while true` outside the script. The benefit was that the outside could update this script, the code repo, as well as the seeds repo. This allows continuous fuzzing of the master branch with the latest code and seeds while atomically updating the build system and this script.",
    "created_at": "2020-12-23T07:35:10Z",
    "updated_at": "2020-12-23T18:07:42Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20752#discussion_r547756550",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20752",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/547756550"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20752#discussion_r547756550"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20752"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/547756550/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 204,
    "original_line": 204,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549175324",
    "pull_request_review_id": 558964043,
    "id": 549175324,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTE3NTMyNA==",
    "diff_hunk": "@@ -178,21 +178,32 @@ def generate_corpus_seeds(*, max_jobs, build_dir, seed_dir, targets):\n     \"\"\"\n     logging.info(\"Generating corpus seeds to {}\".format(seed_dir))\n \n-    jobs = []\n-    for target in targets:\n+    def generate_job():\n+        target = random.choice(targets)\n+        mutate_depth = random.randint(1, 15)\n+        use_value_profile = 0\n+        if random.randint(1, 10) == 1:\n+            use_value_profile = 1\n+        max_len = 2**random.randint(6, 12)\n+        if random.randint(1, 20) == 1:\n+            max_len = 0\n         target_seed_dir = os.path.join(seed_dir, target)\n         os.makedirs(target_seed_dir, exist_ok=True)\n         args = [\n             os.path.join(build_dir, 'src', 'test', 'fuzz', 'fuzz'),\n-            \"-runs=100000\",\n+            \"-max_total_time=1800\",\n+            \"-reload=0\",\n+            \"-mutate_depth={}\".format(mutate_depth),\n+            \"-use_value_profile={}\".format(use_value_profile),\n+            \"-max_len={}\".format(max_len),\n             target_seed_dir,\n         ]\n-        jobs.append([target, args])\n+        return [target, args]\n \n     running_jobs = set()\n-    while len(jobs) > 0 or len(running_jobs) > 0:\n-        if len(running_jobs) < max_jobs and len(jobs) > 0:\n-            target, args = jobs.pop()\n+    while True:",
    "path": "test/fuzz/test_runner.py",
    "position": 125,
    "original_position": 43,
    "commit_id": "1ff0dc525f051bbc7a93312dd622340ca8f4f52c",
    "original_commit_id": "ff804c0392e7f8bc10cf4740f6d06ab4bd204f77",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "@MarcoFalke I don't think there is a problem with that really, as no progress is lost by interrupting. Just stop the test_runner at any point, update/recompile, and run again.",
    "created_at": "2020-12-27T23:17:42Z",
    "updated_at": "2020-12-27T23:17:43Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20752#discussion_r549175324",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20752",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549175324"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20752#discussion_r549175324"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20752"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549175324/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 204,
    "original_line": 204,
    "side": "RIGHT",
    "in_reply_to_id": 547756550
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549247521",
    "pull_request_review_id": 559029773,
    "id": 549247521,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTI0NzUyMQ==",
    "diff_hunk": "@@ -178,21 +178,32 @@ def generate_corpus_seeds(*, max_jobs, build_dir, seed_dir, targets):\n     \"\"\"\n     logging.info(\"Generating corpus seeds to {}\".format(seed_dir))\n \n-    jobs = []\n-    for target in targets:\n+    def generate_job():\n+        target = random.choice(targets)\n+        mutate_depth = random.randint(1, 15)\n+        use_value_profile = 0\n+        if random.randint(1, 10) == 1:\n+            use_value_profile = 1\n+        max_len = 2**random.randint(6, 12)\n+        if random.randint(1, 20) == 1:\n+            max_len = 0\n         target_seed_dir = os.path.join(seed_dir, target)\n         os.makedirs(target_seed_dir, exist_ok=True)\n         args = [\n             os.path.join(build_dir, 'src', 'test', 'fuzz', 'fuzz'),\n-            \"-runs=100000\",\n+            \"-max_total_time=1800\",\n+            \"-reload=0\",\n+            \"-mutate_depth={}\".format(mutate_depth),\n+            \"-use_value_profile={}\".format(use_value_profile),\n+            \"-max_len={}\".format(max_len),\n             target_seed_dir,\n         ]\n-        jobs.append([target, args])\n+        return [target, args]\n \n     running_jobs = set()\n-    while len(jobs) > 0 or len(running_jobs) > 0:\n-        if len(running_jobs) < max_jobs and len(jobs) > 0:\n-            target, args = jobs.pop()\n+    while True:",
    "path": "test/fuzz/test_runner.py",
    "position": 125,
    "original_position": 43,
    "commit_id": "1ff0dc525f051bbc7a93312dd622340ca8f4f52c",
    "original_commit_id": "ff804c0392e7f8bc10cf4740f6d06ab4bd204f77",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "That would complicate the outside script because it had to poll for changes in the repo, while running the fuzzer script. As soon as there are changes, interrupt and rerun.\r\n\r\n",
    "created_at": "2020-12-28T07:44:28Z",
    "updated_at": "2020-12-28T07:44:28Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20752#discussion_r549247521",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20752",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549247521"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20752#discussion_r549247521"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20752"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549247521/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 204,
    "original_line": 204,
    "side": "RIGHT",
    "in_reply_to_id": 547756550
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549247826",
    "pull_request_review_id": 559030136,
    "id": 549247826,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTI0NzgyNg==",
    "diff_hunk": "@@ -178,21 +178,32 @@ def generate_corpus_seeds(*, max_jobs, build_dir, seed_dir, targets):\n     \"\"\"\n     logging.info(\"Generating corpus seeds to {}\".format(seed_dir))\n \n-    jobs = []\n-    for target in targets:\n+    def generate_job():\n+        target = random.choice(targets)\n+        mutate_depth = random.randint(1, 15)\n+        use_value_profile = 0\n+        if random.randint(1, 10) == 1:\n+            use_value_profile = 1\n+        max_len = 2**random.randint(6, 12)\n+        if random.randint(1, 20) == 1:\n+            max_len = 0\n         target_seed_dir = os.path.join(seed_dir, target)\n         os.makedirs(target_seed_dir, exist_ok=True)\n         args = [\n             os.path.join(build_dir, 'src', 'test', 'fuzz', 'fuzz'),\n-            \"-runs=100000\",\n+            \"-max_total_time=1800\",\n+            \"-reload=0\",\n+            \"-mutate_depth={}\".format(mutate_depth),\n+            \"-use_value_profile={}\".format(use_value_profile),\n+            \"-max_len={}\".format(max_len),\n             target_seed_dir,\n         ]\n-        jobs.append([target, args])\n+        return [target, args]\n \n     running_jobs = set()\n-    while len(jobs) > 0 or len(running_jobs) > 0:\n-        if len(running_jobs) < max_jobs and len(jobs) > 0:\n-            target, args = jobs.pop()\n+    while True:",
    "path": "test/fuzz/test_runner.py",
    "position": 125,
    "original_position": 43,
    "commit_id": "1ff0dc525f051bbc7a93312dd622340ca8f4f52c",
    "original_commit_id": "ff804c0392e7f8bc10cf4740f6d06ab4bd204f77",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "If y'all like the `while True`, maybe expose it via some kind of option?",
    "created_at": "2020-12-28T07:45:38Z",
    "updated_at": "2020-12-28T15:49:13Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20752#discussion_r549247826",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20752",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549247826"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20752#discussion_r549247826"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20752"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549247826/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 204,
    "original_line": 204,
    "side": "RIGHT",
    "in_reply_to_id": 547756550
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549248791",
    "pull_request_review_id": 559031126,
    "id": 549248791,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTI0ODc5MQ==",
    "diff_hunk": "@@ -178,21 +178,32 @@ def generate_corpus_seeds(*, max_jobs, build_dir, seed_dir, targets):\n     \"\"\"\n     logging.info(\"Generating corpus seeds to {}\".format(seed_dir))\n \n-    jobs = []\n-    for target in targets:\n+    def generate_job():\n+        target = random.choice(targets)\n+        mutate_depth = random.randint(1, 15)\n+        use_value_profile = 0\n+        if random.randint(1, 10) == 1:\n+            use_value_profile = 1\n+        max_len = 2**random.randint(6, 12)\n+        if random.randint(1, 20) == 1:\n+            max_len = 0\n         target_seed_dir = os.path.join(seed_dir, target)\n         os.makedirs(target_seed_dir, exist_ok=True)\n         args = [\n             os.path.join(build_dir, 'src', 'test', 'fuzz', 'fuzz'),\n-            \"-runs=100000\",\n+            \"-max_total_time=1800\",\n+            \"-reload=0\",\n+            \"-mutate_depth={}\".format(mutate_depth),\n+            \"-use_value_profile={}\".format(use_value_profile),\n+            \"-max_len={}\".format(max_len),\n             target_seed_dir,\n         ]\n-        jobs.append([target, args])\n+        return [target, args]\n \n     running_jobs = set()\n-    while len(jobs) > 0 or len(running_jobs) > 0:\n-        if len(running_jobs) < max_jobs and len(jobs) > 0:\n-            target, args = jobs.pop()\n+    while True:",
    "path": "test/fuzz/test_runner.py",
    "position": 125,
    "original_position": 43,
    "commit_id": "1ff0dc525f051bbc7a93312dd622340ca8f4f52c",
    "original_commit_id": "ff804c0392e7f8bc10cf4740f6d06ab4bd204f77",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "It's not so much the while True I like, but the fact that this doesn't leave cores unused after most of the jobs are done. Doing it randomly also more easily accommodates adding more configurations (which presumably would hurt your workflow equally much, as every new combination would multiply the time between checks by some factor).\n\nWhat about adding an option to make this automatically exit after some specified wall clock time?",
    "created_at": "2020-12-28T07:49:24Z",
    "updated_at": "2020-12-28T07:49:24Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20752#discussion_r549248791",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20752",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549248791"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20752#discussion_r549248791"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20752"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/549248791/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 204,
    "original_line": 204,
    "side": "RIGHT",
    "in_reply_to_id": 547756550
  }
]