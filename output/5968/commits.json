[
  {
    "sha": "51aa24927e6be7d5dd9855bf485989483fef13bb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1MWFhMjQ5MjdlNmJlN2Q1ZGQ5ODU1YmY0ODU5ODk0ODNmZWYxM2Ji",
    "commit": {
      "author": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2015-04-01T14:10:37Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2015-05-06T14:39:15Z"
      },
      "message": "Chainparams: Refactor: Decouple IsSuperMajority from Params()",
      "tree": {
        "sha": "3036b959447d76c0346ff367b8168ed09b0e3740",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3036b959447d76c0346ff367b8168ed09b0e3740"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/51aa24927e6be7d5dd9855bf485989483fef13bb",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/51aa24927e6be7d5dd9855bf485989483fef13bb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/51aa24927e6be7d5dd9855bf485989483fef13bb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/51aa24927e6be7d5dd9855bf485989483fef13bb/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "00820f921d8fcaa031e561ee641c50e77a909670",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/00820f921d8fcaa031e561ee641c50e77a909670",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/00820f921d8fcaa031e561ee641c50e77a909670"
      }
    ],
    "stats": {
      "total": 26,
      "additions": 9,
      "deletions": 17
    },
    "files": [
      {
        "sha": "6274bf3eb43886aa7031378333cc07d8e31ec7c5",
        "filename": "src/chainparams.h",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/51aa24927e6be7d5dd9855bf485989483fef13bb/src/chainparams.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/51aa24927e6be7d5dd9855bf485989483fef13bb/src/chainparams.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.h?ref=51aa24927e6be7d5dd9855bf485989483fef13bb",
        "patch": "@@ -50,9 +50,6 @@ class CChainParams\n     const std::vector<unsigned char>& AlertKey() const { return vAlertPubKey; }\n     int GetDefaultPort() const { return nDefaultPort; }\n     int SubsidyHalvingInterval() const { return consensus.nSubsidyHalvingInterval; }\n-    int EnforceBlockUpgradeMajority() const { return consensus.nMajorityEnforceBlockUpgrade; }\n-    int RejectBlockOutdatedMajority() const { return consensus.nMajorityRejectBlockOutdated; }\n-    int ToCheckBlockUpgradeMajority() const { return consensus.nMajorityWindow; }\n \n     /** Used if GenerateBitcoins is called with a negative number of threads */\n     int DefaultMinerThreads() const { return nMinerThreads; }"
      },
      {
        "sha": "7bd2bdd447ca14266da0fd94e041192f760a331f",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 14,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/51aa24927e6be7d5dd9855bf485989483fef13bb/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/51aa24927e6be7d5dd9855bf485989483fef13bb/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=51aa24927e6be7d5dd9855bf485989483fef13bb",
        "patch": "@@ -75,10 +75,9 @@ void EraseOrphansFor(NodeId peer);\n \n /**\n  * Returns true if there are nRequired or more blocks of minVersion or above\n- * in the last Params().ToCheckBlockUpgradeMajority() blocks, starting at pstart \n- * and going backwards.\n+ * in the last Consensus::Params::nMajorityWindow blocks, starting at pstart and going backwards.\n  */\n-static bool IsSuperMajority(int minVersion, const CBlockIndex* pstart, unsigned int nRequired);\n+static bool IsSuperMajority(int minVersion, const CBlockIndex* pstart, unsigned nRequired, const Consensus::Params& consensusParams);\n static void CheckBlockIndex();\n \n /** Constant stuff for coinbase transactions we create: */\n@@ -1747,7 +1746,7 @@ bool ConnectBlock(const CBlock& block, CValidationState& state, CBlockIndex* pin\n     unsigned int flags = fStrictPayToScriptHash ? SCRIPT_VERIFY_P2SH : SCRIPT_VERIFY_NONE;\n \n     // Start enforcing the DERSIG (BIP66) rules, for block.nVersion=3 blocks, when 75% of the network has upgraded:\n-    if (block.nVersion >= 3 && IsSuperMajority(3, pindex->pprev, Params().EnforceBlockUpgradeMajority())) {\n+    if (block.nVersion >= 3 && IsSuperMajority(3, pindex->pprev, chainparams.GetConsensus().nMajorityEnforceBlockUpgrade, chainparams.GetConsensus())) {\n         flags |= SCRIPT_VERIFY_DERSIG;\n     }\n \n@@ -2644,25 +2643,22 @@ bool ContextualCheckBlockHeader(const CBlockHeader& block, CValidationState& sta\n     }\n \n     // Reject block.nVersion=1 blocks when 95% (75% on testnet) of the network has upgraded:\n-    if (block.nVersion < 2 && IsSuperMajority(2, pindexPrev, consensusParams.nMajorityRejectBlockOutdated))\n-    {\n+    if (block.nVersion < 2 && IsSuperMajority(2, pindexPrev, consensusParams.nMajorityRejectBlockOutdated, consensusParams))\n         return state.Invalid(error(\"%s: rejected nVersion=1 block\", __func__),\n                              REJECT_OBSOLETE, \"bad-version\");\n-    }\n \n     // Reject block.nVersion=2 blocks when 95% (75% on testnet) of the network has upgraded:\n-    if (block.nVersion < 3 && IsSuperMajority(3, pindexPrev, consensusParams.nMajorityRejectBlockOutdated))\n-    {\n+    if (block.nVersion < 3 && IsSuperMajority(3, pindexPrev, consensusParams.nMajorityRejectBlockOutdated, consensusParams))\n         return state.Invalid(error(\"%s : rejected nVersion=2 block\", __func__),\n                              REJECT_OBSOLETE, \"bad-version\");\n-    }\n \n     return true;\n }\n \n bool ContextualCheckBlock(const CBlock& block, CValidationState& state, CBlockIndex * const pindexPrev)\n {\n     const int nHeight = pindexPrev == NULL ? 0 : pindexPrev->nHeight + 1;\n+    const Consensus::Params& consensusParams = Params().GetConsensus();\n \n     // Check that all transactions are finalized\n     BOOST_FOREACH(const CTransaction& tx, block.vtx)\n@@ -2672,7 +2668,7 @@ bool ContextualCheckBlock(const CBlock& block, CValidationState& state, CBlockIn\n \n     // Enforce block.nVersion=2 rule that the coinbase starts with serialized block height\n     // if 750 of the last 1,000 blocks are version 2 or greater (51/100 if testnet):\n-    if (block.nVersion >= 2 && IsSuperMajority(2, pindexPrev, Params().EnforceBlockUpgradeMajority()))\n+    if (block.nVersion >= 2 && IsSuperMajority(2, pindexPrev, consensusParams.nMajorityEnforceBlockUpgrade, consensusParams))\n     {\n         CScript expect = CScript() << nHeight;\n         if (block.vtx[0].vin[0].scriptSig.size() < expect.size() ||\n@@ -2779,11 +2775,10 @@ bool AcceptBlock(CBlock& block, CValidationState& state, CBlockIndex** ppindex,\n     return true;\n }\n \n-static bool IsSuperMajority(int minVersion, const CBlockIndex* pstart, unsigned int nRequired)\n+static bool IsSuperMajority(int minVersion, const CBlockIndex* pstart, unsigned nRequired, const Consensus::Params& consensusParams)\n {\n-    unsigned int nToCheck = Params().ToCheckBlockUpgradeMajority();\n     unsigned int nFound = 0;\n-    for (unsigned int i = 0; i < nToCheck && nFound < nRequired && pstart != NULL; i++)\n+    for (int i = 0; i < consensusParams.nMajorityWindow && nFound < nRequired && pstart != NULL; i++)\n     {\n         if (pstart->nVersion >= minVersion)\n             ++nFound;"
      }
    ]
  }
]