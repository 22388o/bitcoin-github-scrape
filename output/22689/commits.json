[
  {
    "sha": "35d928c63237e31c99215e2d9d84782befd618d5",
    "node_id": "C_kwDOABII59oAKDM1ZDkyOGM2MzIzN2UzMWM5OTIxNWUyZDlkODQ3ODJiZWZkNjE4ZDU",
    "commit": {
      "author": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2021-08-12T13:37:06Z"
      },
      "committer": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2021-11-02T09:05:37Z"
      },
      "message": "rpc: deprecate fee fields from mempool entries\n\nUnless `-deprecatedrpc=fees` is passed, top level\nfee fields are no longer returned for mempool entries.\n\nAdd instructions to field help on how to access\ndeprecated fields, update help text for readability,\nand include units. This is important to help\navoid any confusion as users move from deprecated\nfields to the fee fields object (credit: jonatack).\n\nThis affects `getmempoolentry`, `getrawmempool`,\n`getmempoolancestors`, and `getmempooldescendants`\n\nModify `test/functional/mempool_packages.py` and\n`test/functional/rpc_fundrawtransaction.py` tests\nto no longer use deprecated fields.\n\nCo-authored-by: jonatack <jon@atack.com>",
      "tree": {
        "sha": "609095dfdf454901b5254cf0ccfb4389f2869ef8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/609095dfdf454901b5254cf0ccfb4389f2869ef8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/35d928c63237e31c99215e2d9d84782befd618d5",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEYWUWuOtu0CiC/Ep6ity1WMTzPWUFAmGA/2EACgkQity1WMTz\nPWWUEQ//eFJstjAVKEydfzX0Hakb7wvdT/HHQHASe5qIinNlNtiFOn8xkjKOUTZL\ndojeUw5209uEHR+SW+6Blo+4HbuUl09Q8FolaUQPW/B/nWsEhkvYiCxpEMTpVkQm\ncrrULaC4dfd7p4KLwxyKbBDbLqQSKRlNi4kfnvvHx28TrCVy3whjziK0j6ekIeug\nFltH412U8WubHqq/oBaJP+NiA5oE5Qc5Ec05Uy82hqUcDmlh581OmzFEjW14Vjio\nSv7bmTLrxmY1zLyp7GaWMdYM2Cvr3vOLc5CnOZmz8yedmAl/4VlkjBsiFkp2emO3\ngvTEeqMGdbdDIQis3Z2nAJIl0onMcEGh4geC/k8km38OFEtgWxhv/czc0wsesomF\nMzZzTX7KwTXug7aGzEZdZZKTKehrl+l8fQRklGJ1iDuY4cYYe+oabTzQuP+G+KCc\nlYL36c2sX+IPU5qixJbnUuo64gR9SHC+cJrugBUD/I5WyvOCSMfI3ljgGOtqFH26\n/lEOhm3x44fmbfF8EH8DO0nPNVCwyXSPClYlqsMUpDplc0lJ9wcVC7MsKWLiDUAJ\nTf1Jz+76a4huc2Ot8AvnnWzy0vM1oCkPtrOms9LLz9H9JvJUW9HOO8zl0Sk6MvEZ\nlVBOSQLRzqFNU0f0srJT0KKZkiHgts6nK4fH299r5e2DMCzDXjI=\n=ZPCl\n-----END PGP SIGNATURE-----",
        "payload": "tree 609095dfdf454901b5254cf0ccfb4389f2869ef8\nparent 5adc5c02800f00d1e6e8812a2b0559b1800e82e9\nauthor josibake <josibake@protonmail.com> 1628775426 +0200\ncommitter josibake <josibake@protonmail.com> 1635843937 +0100\n\nrpc: deprecate fee fields from mempool entries\n\nUnless `-deprecatedrpc=fees` is passed, top level\nfee fields are no longer returned for mempool entries.\n\nAdd instructions to field help on how to access\ndeprecated fields, update help text for readability,\nand include units. This is important to help\navoid any confusion as users move from deprecated\nfields to the fee fields object (credit: jonatack).\n\nThis affects `getmempoolentry`, `getrawmempool`,\n`getmempoolancestors`, and `getmempooldescendants`\n\nModify `test/functional/mempool_packages.py` and\n`test/functional/rpc_fundrawtransaction.py` tests\nto no longer use deprecated fields.\n\nCo-authored-by: jonatack <jon@atack.com>\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/35d928c63237e31c99215e2d9d84782befd618d5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/35d928c63237e31c99215e2d9d84782befd618d5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/35d928c63237e31c99215e2d9d84782befd618d5/comments",
    "author": {
      "login": "josibake",
      "id": 7444140,
      "node_id": "MDQ6VXNlcjc0NDQxNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/josibake",
      "html_url": "https://github.com/josibake",
      "followers_url": "https://api.github.com/users/josibake/followers",
      "following_url": "https://api.github.com/users/josibake/following{/other_user}",
      "gists_url": "https://api.github.com/users/josibake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/josibake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
      "organizations_url": "https://api.github.com/users/josibake/orgs",
      "repos_url": "https://api.github.com/users/josibake/repos",
      "events_url": "https://api.github.com/users/josibake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/josibake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "josibake",
      "id": 7444140,
      "node_id": "MDQ6VXNlcjc0NDQxNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/josibake",
      "html_url": "https://github.com/josibake",
      "followers_url": "https://api.github.com/users/josibake/followers",
      "following_url": "https://api.github.com/users/josibake/following{/other_user}",
      "gists_url": "https://api.github.com/users/josibake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/josibake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
      "organizations_url": "https://api.github.com/users/josibake/orgs",
      "repos_url": "https://api.github.com/users/josibake/repos",
      "events_url": "https://api.github.com/users/josibake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/josibake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5adc5c02800f00d1e6e8812a2b0559b1800e82e9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5adc5c02800f00d1e6e8812a2b0559b1800e82e9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5adc5c02800f00d1e6e8812a2b0559b1800e82e9"
      }
    ],
    "stats": {
      "total": 68,
      "additions": 34,
      "deletions": 34
    },
    "files": [
      {
        "sha": "2c7f1a70ae31c75e2ca3bdb2e1df4b838c274c8e",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 20,
        "deletions": 13,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35d928c63237e31c99215e2d9d84782befd618d5/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35d928c63237e31c99215e2d9d84782befd618d5/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=35d928c63237e31c99215e2d9d84782befd618d5",
        "patch": "@@ -462,23 +462,23 @@ static RPCHelpMan getdifficulty()\n static std::vector<RPCResult> MempoolEntryDescription() { return {\n     RPCResult{RPCResult::Type::NUM, \"vsize\", \"virtual transaction size as defined in BIP 141. This is different from actual serialized size for witness transactions as witness data is discounted.\"},\n     RPCResult{RPCResult::Type::NUM, \"weight\", \"transaction weight as defined in BIP 141.\"},\n-    RPCResult{RPCResult::Type::STR_AMOUNT, \"fee\", \"transaction fee in \" + CURRENCY_UNIT + \" (DEPRECATED)\"},\n-    RPCResult{RPCResult::Type::STR_AMOUNT, \"modifiedfee\", \"transaction fee with fee deltas used for mining priority (DEPRECATED)\"},\n+    RPCResult{RPCResult::Type::STR_AMOUNT, \"fee\", \"transaction fee, denominated in \" + CURRENCY_UNIT + \" (DEPRECATED, returned only if config option -deprecatedrpc=fees is passed)\"},\n+    RPCResult{RPCResult::Type::STR_AMOUNT, \"modifiedfee\", \"transaction fee with fee deltas used for mining priority, denominated in \" + CURRENCY_UNIT + \" (DEPRECATED, returned only if config option -deprecatedrpc=fees is passed)\"},\n     RPCResult{RPCResult::Type::NUM_TIME, \"time\", \"local time transaction entered pool in seconds since 1 Jan 1970 GMT\"},\n     RPCResult{RPCResult::Type::NUM, \"height\", \"block height when transaction entered pool\"},\n     RPCResult{RPCResult::Type::NUM, \"descendantcount\", \"number of in-mempool descendant transactions (including this one)\"},\n     RPCResult{RPCResult::Type::NUM, \"descendantsize\", \"virtual transaction size of in-mempool descendants (including this one)\"},\n-    RPCResult{RPCResult::Type::STR_AMOUNT, \"descendantfees\", \"modified fees (see above) of in-mempool descendants (including this one) (DEPRECATED)\"},\n+    RPCResult{RPCResult::Type::STR_AMOUNT, \"descendantfees\", \"transaction fees of in-mempool descendants (including this one) with fee deltas used for mining priority, denominated in \" + CURRENCY_ATOM + \"s (DEPRECATED, returned only if config option -deprecatedrpc=fees is passed)\"},\n     RPCResult{RPCResult::Type::NUM, \"ancestorcount\", \"number of in-mempool ancestor transactions (including this one)\"},\n     RPCResult{RPCResult::Type::NUM, \"ancestorsize\", \"virtual transaction size of in-mempool ancestors (including this one)\"},\n-    RPCResult{RPCResult::Type::STR_AMOUNT, \"ancestorfees\", \"modified fees (see above) of in-mempool ancestors (including this one) (DEPRECATED)\"},\n+    RPCResult{RPCResult::Type::STR_AMOUNT, \"ancestorfees\", \"transaction fees of in-mempool ancestors (including this one) with fee deltas used for mining priority, denominated in \" + CURRENCY_ATOM + \"s (DEPRECATED, returned only if config option -deprecatedrpc=fees is passed)\"},\n     RPCResult{RPCResult::Type::STR_HEX, \"wtxid\", \"hash of serialized transaction, including witness data\"},\n     RPCResult{RPCResult::Type::OBJ, \"fees\", \"\",\n         {\n-            RPCResult{RPCResult::Type::STR_AMOUNT, \"base\", \"transaction fee in \" + CURRENCY_UNIT},\n-            RPCResult{RPCResult::Type::STR_AMOUNT, \"modified\", \"transaction fee with fee deltas used for mining priority in \" + CURRENCY_UNIT},\n-            RPCResult{RPCResult::Type::STR_AMOUNT, \"ancestor\", \"modified fees (see above) of in-mempool ancestors (including this one) in \" + CURRENCY_UNIT},\n-            RPCResult{RPCResult::Type::STR_AMOUNT, \"descendant\", \"modified fees (see above) of in-mempool descendants (including this one) in \" + CURRENCY_UNIT},\n+            RPCResult{RPCResult::Type::STR_AMOUNT, \"base\", \"transaction fee, denominated in \" + CURRENCY_UNIT},\n+            RPCResult{RPCResult::Type::STR_AMOUNT, \"modified\", \"transaction fee with fee deltas used for mining priority, denominated in \" + CURRENCY_UNIT},\n+            RPCResult{RPCResult::Type::STR_AMOUNT, \"ancestor\", \"transaction fees of in-mempool ancestors (including this one) with fee deltas used for mining priority, denominated in \" + CURRENCY_UNIT},\n+            RPCResult{RPCResult::Type::STR_AMOUNT, \"descendant\", \"transaction fees of in-mempool descendants (including this one) with fee deltas used for mining priority, denominated in \" + CURRENCY_UNIT},\n         }},\n     RPCResult{RPCResult::Type::ARR, \"depends\", \"unconfirmed transactions used as inputs for this transaction\",\n         {RPCResult{RPCResult::Type::STR_HEX, \"transactionid\", \"parent transaction id\"}}},\n@@ -498,19 +498,26 @@ static void entryToJSON(const CTxMemPool& pool, UniValue& info, const CTxMemPool\n     fees.pushKV(\"ancestor\", ValueFromAmount(e.GetModFeesWithAncestors()));\n     fees.pushKV(\"descendant\", ValueFromAmount(e.GetModFeesWithDescendants()));\n     info.pushKV(\"fees\", fees);\n-\n     info.pushKV(\"vsize\", (int)e.GetTxSize());\n     info.pushKV(\"weight\", (int)e.GetTxWeight());\n-    info.pushKV(\"fee\", ValueFromAmount(e.GetFee()));\n-    info.pushKV(\"modifiedfee\", ValueFromAmount(e.GetModifiedFee()));\n+    // TODO: top-level fee fields are deprecated. deprecated_fee_fields_enabled blocks should be removed in v24\n+    const bool deprecated_fee_fields_enabled{IsDeprecatedRPCEnabled(\"fees\")};\n+    if (deprecated_fee_fields_enabled) {\n+        info.pushKV(\"fee\", ValueFromAmount(e.GetFee()));\n+        info.pushKV(\"modifiedfee\", ValueFromAmount(e.GetModifiedFee()));\n+    }\n     info.pushKV(\"time\", count_seconds(e.GetTime()));\n     info.pushKV(\"height\", (int)e.GetHeight());\n     info.pushKV(\"descendantcount\", e.GetCountWithDescendants());\n     info.pushKV(\"descendantsize\", e.GetSizeWithDescendants());\n-    info.pushKV(\"descendantfees\", e.GetModFeesWithDescendants());\n+    if (deprecated_fee_fields_enabled) {\n+        info.pushKV(\"descendantfees\", e.GetModFeesWithDescendants());\n+    }\n     info.pushKV(\"ancestorcount\", e.GetCountWithAncestors());\n     info.pushKV(\"ancestorsize\", e.GetSizeWithAncestors());\n-    info.pushKV(\"ancestorfees\", e.GetModFeesWithAncestors());\n+    if (deprecated_fee_fields_enabled) {\n+        info.pushKV(\"ancestorfees\", e.GetModFeesWithAncestors());\n+    }\n     info.pushKV(\"wtxid\", pool.vTxHashes[e.vTxHashesIdx].first.ToString());\n     const CTransaction& tx = e.GetTx();\n     std::set<std::string> setDepends;"
      },
      {
        "sha": "872c178103d06227230b476d9e44058c8da322e4",
        "filename": "test/functional/mempool_packages.py",
        "status": "modified",
        "additions": 9,
        "deletions": 16,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35d928c63237e31c99215e2d9d84782befd618d5/test/functional/mempool_packages.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35d928c63237e31c99215e2d9d84782befd618d5/test/functional/mempool_packages.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/mempool_packages.py?ref=35d928c63237e31c99215e2d9d84782befd618d5",
        "patch": "@@ -91,7 +91,7 @@ def run_test(self):\n \n         assert_equal(ancestor_vsize, sum([mempool[tx]['vsize'] for tx in mempool]))\n         ancestor_count = MAX_ANCESTORS\n-        assert_equal(ancestor_fees, sum([mempool[tx]['fee'] for tx in mempool]))\n+        assert_equal(ancestor_fees, sum([mempool[tx]['fees']['base'] for tx in mempool]))\n \n         descendants = []\n         ancestors = list(chain)\n@@ -102,22 +102,19 @@ def run_test(self):\n \n             # Check that the descendant calculations are correct\n             assert_equal(entry['descendantcount'], descendant_count)\n-            descendant_fees += entry['fee']\n-            assert_equal(entry['modifiedfee'], entry['fee'])\n-            assert_equal(entry['fees']['base'], entry['fee'])\n-            assert_equal(entry['fees']['modified'], entry['modifiedfee'])\n-            assert_equal(entry['descendantfees'], descendant_fees * COIN)\n+            descendant_fees += entry['fees']['base']\n+            assert_equal(entry['fees']['modified'], entry['fees']['base'])\n             assert_equal(entry['fees']['descendant'], descendant_fees)\n             descendant_vsize += entry['vsize']\n             assert_equal(entry['descendantsize'], descendant_vsize)\n             descendant_count += 1\n \n             # Check that ancestor calculations are correct\n             assert_equal(entry['ancestorcount'], ancestor_count)\n-            assert_equal(entry['ancestorfees'], ancestor_fees * COIN)\n+            assert_equal(entry['fees']['ancestor'], ancestor_fees)\n             assert_equal(entry['ancestorsize'], ancestor_vsize)\n             ancestor_vsize -= entry['vsize']\n-            ancestor_fees -= entry['fee']\n+            ancestor_fees -= entry['fees']['base']\n             ancestor_count -= 1\n \n             # Check that parent/child list is correct\n@@ -168,9 +165,8 @@ def run_test(self):\n         ancestor_fees = 0\n         for x in chain:\n             entry = self.nodes[0].getmempoolentry(x)\n-            ancestor_fees += entry['fee']\n+            ancestor_fees += entry['fees']['base']\n             assert_equal(entry['fees']['ancestor'], ancestor_fees + Decimal('0.00001'))\n-            assert_equal(entry['ancestorfees'], ancestor_fees * COIN + 1000)\n \n         # Undo the prioritisetransaction for later tests\n         self.nodes[0].prioritisetransaction(txid=chain[0], fee_delta=-1000)\n@@ -182,9 +178,8 @@ def run_test(self):\n         descendant_fees = 0\n         for x in reversed(chain):\n             entry = self.nodes[0].getmempoolentry(x)\n-            descendant_fees += entry['fee']\n+            descendant_fees += entry['fees']['base']\n             assert_equal(entry['fees']['descendant'], descendant_fees + Decimal('0.00001'))\n-            assert_equal(entry['descendantfees'], descendant_fees * COIN + 1000)\n \n         # Adding one more transaction on to the chain should fail.\n         assert_raises_rpc_error(-26, \"too-long-mempool-chain\", chain_transaction, self.nodes[0], [txid], [vout], value, fee, 1)\n@@ -205,11 +200,9 @@ def run_test(self):\n         descendant_fees = 0\n         for x in reversed(chain):\n             entry = self.nodes[0].getmempoolentry(x)\n-            descendant_fees += entry['fee']\n+            descendant_fees += entry['fees']['base']\n             if (x == chain[-1]):\n-                assert_equal(entry['modifiedfee'], entry['fee'] + Decimal(\"0.00002\"))\n-                assert_equal(entry['fees']['modified'], entry['fee'] + Decimal(\"0.00002\"))\n-            assert_equal(entry['descendantfees'], descendant_fees * COIN + 2000)\n+                assert_equal(entry['fees']['modified'], entry['fees']['base'] + Decimal(\"0.00002\"))\n             assert_equal(entry['fees']['descendant'], descendant_fees + Decimal(\"0.00002\"))\n \n         # Check that node1's mempool is as expected (-> custom ancestor limit)"
      },
      {
        "sha": "98f91221ea071d270cd0efc27e0a5a77279e76a2",
        "filename": "test/functional/rpc_fundrawtransaction.py",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35d928c63237e31c99215e2d9d84782befd618d5/test/functional/rpc_fundrawtransaction.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35d928c63237e31c99215e2d9d84782befd618d5/test/functional/rpc_fundrawtransaction.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_fundrawtransaction.py?ref=35d928c63237e31c99215e2d9d84782befd618d5",
        "patch": "@@ -417,7 +417,7 @@ def test_fee_p2pkh(self):\n \n         # Create same transaction over sendtoaddress.\n         txId = self.nodes[0].sendtoaddress(self.nodes[1].getnewaddress(), 1.1)\n-        signedFee = self.nodes[0].getmempoolentry(txId)['fee']\n+        signedFee = self.nodes[0].getmempoolentry(txId)['fees']['base']\n \n         # Compare fee.\n         feeDelta = Decimal(fundedTx['fee']) - Decimal(signedFee)\n@@ -443,7 +443,7 @@ def test_fee_p2pkh_multi_out(self):\n \n         # Create same transaction over sendtoaddress.\n         txId = self.nodes[0].sendmany(\"\", outputs)\n-        signedFee = self.nodes[0].getmempoolentry(txId)['fee']\n+        signedFee = self.nodes[0].getmempoolentry(txId)['fees']['base']\n \n         # Compare fee.\n         feeDelta = Decimal(fundedTx['fee']) - Decimal(signedFee)\n@@ -470,7 +470,7 @@ def test_fee_p2sh(self):\n \n         # Create same transaction over sendtoaddress.\n         txId = self.nodes[0].sendtoaddress(mSigObj, 1.1)\n-        signedFee = self.nodes[0].getmempoolentry(txId)['fee']\n+        signedFee = self.nodes[0].getmempoolentry(txId)['fees']['base']\n \n         # Compare fee.\n         feeDelta = Decimal(fundedTx['fee']) - Decimal(signedFee)\n@@ -514,7 +514,7 @@ def test_fee_4of5(self):\n \n         # Create same transaction over sendtoaddress.\n         txId = self.nodes[0].sendtoaddress(mSigObj, 1.1)\n-        signedFee = self.nodes[0].getmempoolentry(txId)['fee']\n+        signedFee = self.nodes[0].getmempoolentry(txId)['fees']['base']\n \n         # Compare fee.\n         feeDelta = Decimal(fundedTx['fee']) - Decimal(signedFee)\n@@ -651,7 +651,7 @@ def test_many_inputs_fee(self):\n \n         # Create same transaction over sendtoaddress.\n         txId = self.nodes[1].sendmany(\"\", outputs)\n-        signedFee = self.nodes[1].getmempoolentry(txId)['fee']\n+        signedFee = self.nodes[1].getmempoolentry(txId)['fees']['base']\n \n         # Compare fee.\n         feeDelta = Decimal(fundedTx['fee']) - Decimal(signedFee)"
      }
    ]
  },
  {
    "sha": "2ee406ce3e9c252734cb391d85044ac389c34279",
    "node_id": "C_kwDOABII59oAKDJlZTQwNmNlM2U5YzI1MjczNGNiMzkxZDg1MDQ0YWMzODljMzQyNzk",
    "commit": {
      "author": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2021-08-12T13:38:28Z"
      },
      "committer": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2021-11-02T09:05:38Z"
      },
      "message": "test: add functional test for deprecatedrpc=fees\n\nTest for old fields when `-deprecatedrpc=fees`\nflag is passed and verify values in the deprecated\nfields match values in the fees sub-object.",
      "tree": {
        "sha": "e3c4dcda509da701bd70280a49e0d4965eab9c0d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e3c4dcda509da701bd70280a49e0d4965eab9c0d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2ee406ce3e9c252734cb391d85044ac389c34279",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEYWUWuOtu0CiC/Ep6ity1WMTzPWUFAmGA/2oACgkQity1WMTz\nPWWQIw/+P95wlm5fsv1NEx/mcK8vp4g58Be7k5AVoZm+e/4L/xrMwzfUb8GFgu3O\nnOttECv3zrzHkufIOE+xeRQ50avjnzrRA85iQHFl3GToXtayrT76uoC8bEm2Ntpj\nFuRLNq7iZEa3yhHUx+P/L1Wx7C//17WYy5n3P3vEqtMtwmppF5LyQu41mfzc9q4Z\n1472PhU0U5sbwdG3Bw97G0DVyKpT5K78PaIdmxCWa+wJ//uL2/KzE6WnPosIFjo/\nqmN0cLaurvW/zkBL32k71HsQfyDmTl+ixe01MquxWuiEnBNE+icHg5V/9pppdvlG\nuX7e5JmFwfz5Oe8Ov0egoJxYmiy0ylOp2DXgsoJNlN5GzO+UGZXLdNQ9rz5NtrdT\nWm6OTiwvXwqRUthGNCUfmB1t5PhAKQ1+XH8z1SiQU9e2ARrx9B/OZl3rtjVeED3K\n8ZPoKGciWkqDX5SlG7GXqPhqqAaKYxkWzt7e2llTP9HgvIqWeD9vgWjmodfah354\nAhTRfH5Qwf4vjWZn7kJy8clmwqnvZJoB/5YmpJU25uJpJHFvedyMNXUZHCBsmNry\nNREWrVTWgHN+/qpoZX+jHjnR9X2V9ZRJJOEjQ096NS0MfvQ2iPnWiR2b7VHBgoQu\nDSYp3LB87MfvItEnj/pIWM1S+erQMbKyF3SF0xT+1yLPkkrz2VM=\n=1zrP\n-----END PGP SIGNATURE-----",
        "payload": "tree e3c4dcda509da701bd70280a49e0d4965eab9c0d\nparent 35d928c63237e31c99215e2d9d84782befd618d5\nauthor josibake <josibake@protonmail.com> 1628775508 +0200\ncommitter josibake <josibake@protonmail.com> 1635843938 +0100\n\ntest: add functional test for deprecatedrpc=fees\n\nTest for old fields when `-deprecatedrpc=fees`\nflag is passed and verify values in the deprecated\nfields match values in the fees sub-object.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2ee406ce3e9c252734cb391d85044ac389c34279",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2ee406ce3e9c252734cb391d85044ac389c34279",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2ee406ce3e9c252734cb391d85044ac389c34279/comments",
    "author": {
      "login": "josibake",
      "id": 7444140,
      "node_id": "MDQ6VXNlcjc0NDQxNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/josibake",
      "html_url": "https://github.com/josibake",
      "followers_url": "https://api.github.com/users/josibake/followers",
      "following_url": "https://api.github.com/users/josibake/following{/other_user}",
      "gists_url": "https://api.github.com/users/josibake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/josibake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
      "organizations_url": "https://api.github.com/users/josibake/orgs",
      "repos_url": "https://api.github.com/users/josibake/repos",
      "events_url": "https://api.github.com/users/josibake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/josibake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "josibake",
      "id": 7444140,
      "node_id": "MDQ6VXNlcjc0NDQxNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/josibake",
      "html_url": "https://github.com/josibake",
      "followers_url": "https://api.github.com/users/josibake/followers",
      "following_url": "https://api.github.com/users/josibake/following{/other_user}",
      "gists_url": "https://api.github.com/users/josibake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/josibake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
      "organizations_url": "https://api.github.com/users/josibake/orgs",
      "repos_url": "https://api.github.com/users/josibake/repos",
      "events_url": "https://api.github.com/users/josibake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/josibake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "35d928c63237e31c99215e2d9d84782befd618d5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/35d928c63237e31c99215e2d9d84782befd618d5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/35d928c63237e31c99215e2d9d84782befd618d5"
      }
    ],
    "stats": {
      "total": 68,
      "additions": 68,
      "deletions": 0
    },
    "files": [
      {
        "sha": "82761ff7c8c3d6de9120bd1beb649595ada195b9",
        "filename": "test/functional/rpc_mempool_entry_fee_fields_deprecation.py",
        "status": "added",
        "additions": 67,
        "deletions": 0,
        "changes": 67,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2ee406ce3e9c252734cb391d85044ac389c34279/test/functional/rpc_mempool_entry_fee_fields_deprecation.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2ee406ce3e9c252734cb391d85044ac389c34279/test/functional/rpc_mempool_entry_fee_fields_deprecation.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_mempool_entry_fee_fields_deprecation.py?ref=2ee406ce3e9c252734cb391d85044ac389c34279",
        "patch": "@@ -0,0 +1,67 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test deprecation of fee fields from top level mempool entry object\"\"\"\n+\n+from test_framework.blocktools import COIN\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+from test_framework.wallet import MiniWallet\n+\n+\n+def assertions_helper(new_object, deprecated_object, deprecated_fields):\n+    for field in deprecated_fields:\n+        assert field in deprecated_object\n+        assert field not in new_object\n+\n+\n+class MempoolFeeFieldsDeprecationTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 2\n+        self.extra_args = [[], [\"-deprecatedrpc=fees\"]]\n+\n+    def run_test(self):\n+        # we get spendable outputs from the premined chain starting\n+        # at block 76. see BitcoinTestFramework._initialize_chain() for details\n+        self.wallet = MiniWallet(self.nodes[0])\n+        self.wallet.rescan_utxos()\n+\n+        # we create the tx on the first node and wait until it syncs to node_deprecated\n+        # thus, any differences must be coming from getmempoolentry or getrawmempool\n+        tx = self.wallet.send_self_transfer(from_node=self.nodes[0])\n+        self.nodes[1].sendrawtransaction(tx[\"hex\"])\n+\n+        deprecated_fields = [\"ancestorfees\", \"descendantfees\", \"modifiedfee\", \"fee\"]\n+        self.test_getmempoolentry(tx[\"txid\"], deprecated_fields)\n+        self.test_getrawmempool(tx[\"txid\"], deprecated_fields)\n+        self.test_deprecated_fields_match(tx[\"txid\"])\n+\n+    def test_getmempoolentry(self, txid, deprecated_fields):\n+\n+        self.log.info(\"Test getmempoolentry rpc\")\n+        entry = self.nodes[0].getmempoolentry(txid)\n+        deprecated_entry = self.nodes[1].getmempoolentry(txid)\n+        assertions_helper(entry, deprecated_entry, deprecated_fields)\n+\n+    def test_getrawmempool(self, txid, deprecated_fields):\n+\n+        self.log.info(\"Test getrawmempool rpc\")\n+        entry = self.nodes[0].getrawmempool(verbose=True)[txid]\n+        deprecated_entry = self.nodes[1].getrawmempool(verbose=True)[txid]\n+        assertions_helper(entry, deprecated_entry, deprecated_fields)\n+\n+    def test_deprecated_fields_match(self, txid):\n+\n+        self.log.info(\"Test deprecated fee fields match new fees object\")\n+        entry = self.nodes[0].getmempoolentry(txid)\n+        deprecated_entry = self.nodes[1].getmempoolentry(txid)\n+\n+        assert_equal(deprecated_entry[\"fee\"], entry[\"fees\"][\"base\"])\n+        assert_equal(deprecated_entry[\"modifiedfee\"], entry[\"fees\"][\"modified\"])\n+        assert_equal(deprecated_entry[\"descendantfees\"], entry[\"fees\"][\"descendant\"] * COIN)\n+        assert_equal(deprecated_entry[\"ancestorfees\"], entry[\"fees\"][\"ancestor\"] * COIN)\n+\n+\n+if __name__ == \"__main__\":\n+    MempoolFeeFieldsDeprecationTest().main()"
      },
      {
        "sha": "2fc5d2c56e7b57639721d23198b0f3e944e4a0aa",
        "filename": "test/functional/test_runner.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2ee406ce3e9c252734cb391d85044ac389c34279/test/functional/test_runner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2ee406ce3e9c252734cb391d85044ac389c34279/test/functional/test_runner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_runner.py?ref=2ee406ce3e9c252734cb391d85044ac389c34279",
        "patch": "@@ -309,6 +309,7 @@\n     'feature_presegwit_node_upgrade.py',\n     'feature_settings.py',\n     'rpc_getdescriptorinfo.py',\n+    'rpc_mempool_entry_fee_fields_deprecation.py',\n     'rpc_help.py',\n     'feature_help.py',\n     'feature_shutdown.py',"
      }
    ]
  },
  {
    "sha": "07ade7db8f919826c5e69bdaf7d54a6ae653175e",
    "node_id": "C_kwDOABII59oAKDA3YWRlN2RiOGY5MTk4MjZjNWU2OWJkYWY3ZDU0YTZhZTY1MzE3NWU",
    "commit": {
      "author": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2021-08-16T15:41:47Z"
      },
      "committer": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2021-11-02T09:05:46Z"
      },
      "message": "doc: add release note for fee field deprecation",
      "tree": {
        "sha": "86e95b7cdcef89761d8b5d51c1ced3f8f2fa038d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/86e95b7cdcef89761d8b5d51c1ced3f8f2fa038d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/07ade7db8f919826c5e69bdaf7d54a6ae653175e",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEYWUWuOtu0CiC/Ep6ity1WMTzPWUFAmGA/2oACgkQity1WMTz\nPWXcag//XXZh2Y19FVreXyYJCM9UwIbJgWlTOpH3F0538Jj2djgr1HUJeukJjfY4\n+hswkUqmhuSMI/xyF5uzShwpbG+eURQBXvJ7tV9X96brSpVSgDjws9zMI3JAji19\nEfsga2wliXW/O5dePylkGn2kx4pCbOTtmy4YfgDDiMkSMyWOh++7MGbDT8/WnfUp\nOOxOSjVryQmlw03PwFmtrQCcDXmOnf/B/idzRxcufUMKFuLLFCgLGG0zyGsxN1Ut\n9JBuV0rbcAw/OuVztcs7lzXLMyhiqbhfFO94VSD8BIJnATcPVKxrOWtkV24Vr0V6\nzK2G/UlZWGJa0EAhPkxgqm39iI72uMzAXdnn+tpKp24Ty4K9TcHHOvZm+PjgD8Wp\nSe5JbNnOAHp5BfBDUmzyQ//xNg16M5BmaNmiy5xL/P7RPNTqrIg88AW4ZmuOTGQt\nsz8mVaLa9KBRlEHwDA3XfugnDCiOi/SHM8tcSxbWA+lsm+Ygkj59dfHTF/MHjvK8\nt7uTatM5xx+jt/BIYJxrX1jxhfcm45wOjUJTxD/yhEdJdriXg9RYWDtr3e0LUpz1\nkCGrTlvlY2tYPopZYnv4ZpkRSbFW/NytCxuR0HNB0DGyRPHM8NYiAlCszIXg+VBP\nh2fHwCr+ZJyOlTQq1bWJkrfJL70NQdUwWa67NjRvj2HVGfSXh+0=\n=ufxv\n-----END PGP SIGNATURE-----",
        "payload": "tree 86e95b7cdcef89761d8b5d51c1ced3f8f2fa038d\nparent 2ee406ce3e9c252734cb391d85044ac389c34279\nauthor josibake <josibake@protonmail.com> 1629128507 +0200\ncommitter josibake <josibake@protonmail.com> 1635843946 +0100\n\ndoc: add release note for fee field deprecation\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/07ade7db8f919826c5e69bdaf7d54a6ae653175e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/07ade7db8f919826c5e69bdaf7d54a6ae653175e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/07ade7db8f919826c5e69bdaf7d54a6ae653175e/comments",
    "author": {
      "login": "josibake",
      "id": 7444140,
      "node_id": "MDQ6VXNlcjc0NDQxNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/josibake",
      "html_url": "https://github.com/josibake",
      "followers_url": "https://api.github.com/users/josibake/followers",
      "following_url": "https://api.github.com/users/josibake/following{/other_user}",
      "gists_url": "https://api.github.com/users/josibake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/josibake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
      "organizations_url": "https://api.github.com/users/josibake/orgs",
      "repos_url": "https://api.github.com/users/josibake/repos",
      "events_url": "https://api.github.com/users/josibake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/josibake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "josibake",
      "id": 7444140,
      "node_id": "MDQ6VXNlcjc0NDQxNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/josibake",
      "html_url": "https://github.com/josibake",
      "followers_url": "https://api.github.com/users/josibake/followers",
      "following_url": "https://api.github.com/users/josibake/following{/other_user}",
      "gists_url": "https://api.github.com/users/josibake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/josibake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
      "organizations_url": "https://api.github.com/users/josibake/orgs",
      "repos_url": "https://api.github.com/users/josibake/repos",
      "events_url": "https://api.github.com/users/josibake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/josibake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2ee406ce3e9c252734cb391d85044ac389c34279",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2ee406ce3e9c252734cb391d85044ac389c34279",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2ee406ce3e9c252734cb391d85044ac389c34279"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 9,
      "deletions": 0
    },
    "files": [
      {
        "sha": "231195108b89dd2cffcd3709f642143da67eff84",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07ade7db8f919826c5e69bdaf7d54a6ae653175e/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07ade7db8f919826c5e69bdaf7d54a6ae653175e/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=07ade7db8f919826c5e69bdaf7d54a6ae653175e",
        "patch": "@@ -99,6 +99,15 @@ Updated RPCs\n   causes the lock to be written persistently to the wallet database. This\n   allows UTXOs to remain locked even after node restarts or crashes. (#23065)\n \n+- The top-level fee fields `fee`, `modifiedfee`, `ancestorfees` and `descendantfees`\n+  returned by RPCs `getmempoolentry`,`getrawmempool(verbose=true)`,\n+  `getmempoolancestors(verbose=true)` and `getmempooldescendants(verbose=true)`\n+  are deprecated and will be removed in the next major version (use\n+  `-deprecated=fees` if needed in this version). The same fee fields can be accessed\n+  through the `fees` object in the result. WARNING: deprecated\n+  fields `ancestorfees` and `descendantfees` are denominated in sats, whereas all\n+  fields in the `fees` object are denominated in BTC. (#22689)\n+\n New RPCs\n --------\n "
      }
    ]
  },
  {
    "sha": "2f9515f37addabde84c79926d7a24b2897a21dd1",
    "node_id": "C_kwDOABII59oAKDJmOTUxNWYzN2FkZGFiZGU4NGM3OTkyNmQ3YTI0YjI4OTdhMjFkZDE",
    "commit": {
      "author": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2021-08-19T13:38:58Z"
      },
      "committer": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2021-11-02T09:05:46Z"
      },
      "message": "rpc: move fees object to match help",
      "tree": {
        "sha": "8e9f34a92368f7b1c87de8df58201bdd624b8d1a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8e9f34a92368f7b1c87de8df58201bdd624b8d1a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2f9515f37addabde84c79926d7a24b2897a21dd1",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEYWUWuOtu0CiC/Ep6ity1WMTzPWUFAmGA/2oACgkQity1WMTz\nPWUmvhAAsRq91e/xNUfWGrlYwI8ce0KbS0EruL9gG3m2AsJpcV0M8M/ePIJpdwof\nRJzIwL5n2Bd7cqUcaOXZhtKThWYRMIzXVg8Cm73WHnLzWhbO4zWjYy9sIrAWldvx\n1Xxvt+sbnpLjs6BLBOKneMh967yiCNDmAyUfPtbbi54GqMkm8pov5LoGhYmyrKnG\ntaeCZjCUEQmeIGmFmBrRWa5rG0T2sCc3EvRcm++AwIce9+JDlkJH7jGxSYYEL2Nd\nwQJfGcLSlRluHJ0f+gla2TCA7atVTG817ZICy9OLa8cJ0LcacgZAxAbtADj8pTOK\nVzyAahEdR18ic2cB7azZyl2iUTPfUqyvH4egogJpkbIyRvZno2ONg4lk2mbzuUib\no18Qh46OruFukpLAIfNx1Hvi0EQLis9WLtZCSa4csTHQ6Isqvx05tf62jjVum9GL\n9ewUdJX66N426JoOeiHYr/OpTQZjzLc9rmLfNSlUCysuY77dD4XJmCNNwXcjuMk6\nuUvV+T4rMy6AX4vFRgOAFCzw8+Q90hpJWzYloSHWDOIGmnIzS4juwND+7QRBFHV8\n7dS90xDjDLuyKFCxfzVti/OlzcETkGzxOeeNNUqA5BWCC6W/MzaeIZIkmU2/8HVH\n1YBezFnxy+7qeU7oWtBU457GQgLDrk27VFIKK/hu/rH8usfhF38=\n=Oon4\n-----END PGP SIGNATURE-----",
        "payload": "tree 8e9f34a92368f7b1c87de8df58201bdd624b8d1a\nparent 07ade7db8f919826c5e69bdaf7d54a6ae653175e\nauthor josibake <josibake@protonmail.com> 1629380338 +0200\ncommitter josibake <josibake@protonmail.com> 1635843946 +0100\n\nrpc: move fees object to match help\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2f9515f37addabde84c79926d7a24b2897a21dd1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2f9515f37addabde84c79926d7a24b2897a21dd1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2f9515f37addabde84c79926d7a24b2897a21dd1/comments",
    "author": {
      "login": "josibake",
      "id": 7444140,
      "node_id": "MDQ6VXNlcjc0NDQxNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/josibake",
      "html_url": "https://github.com/josibake",
      "followers_url": "https://api.github.com/users/josibake/followers",
      "following_url": "https://api.github.com/users/josibake/following{/other_user}",
      "gists_url": "https://api.github.com/users/josibake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/josibake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
      "organizations_url": "https://api.github.com/users/josibake/orgs",
      "repos_url": "https://api.github.com/users/josibake/repos",
      "events_url": "https://api.github.com/users/josibake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/josibake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "josibake",
      "id": 7444140,
      "node_id": "MDQ6VXNlcjc0NDQxNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/josibake",
      "html_url": "https://github.com/josibake",
      "followers_url": "https://api.github.com/users/josibake/followers",
      "following_url": "https://api.github.com/users/josibake/following{/other_user}",
      "gists_url": "https://api.github.com/users/josibake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/josibake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
      "organizations_url": "https://api.github.com/users/josibake/orgs",
      "repos_url": "https://api.github.com/users/josibake/repos",
      "events_url": "https://api.github.com/users/josibake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/josibake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "07ade7db8f919826c5e69bdaf7d54a6ae653175e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/07ade7db8f919826c5e69bdaf7d54a6ae653175e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/07ade7db8f919826c5e69bdaf7d54a6ae653175e"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 8,
      "deletions": 6
    },
    "files": [
      {
        "sha": "ccfef3a7c776bf47a78d1e66248c30932706cf27",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 6,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2f9515f37addabde84c79926d7a24b2897a21dd1/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2f9515f37addabde84c79926d7a24b2897a21dd1/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=2f9515f37addabde84c79926d7a24b2897a21dd1",
        "patch": "@@ -492,12 +492,6 @@ static void entryToJSON(const CTxMemPool& pool, UniValue& info, const CTxMemPool\n {\n     AssertLockHeld(pool.cs);\n \n-    UniValue fees(UniValue::VOBJ);\n-    fees.pushKV(\"base\", ValueFromAmount(e.GetFee()));\n-    fees.pushKV(\"modified\", ValueFromAmount(e.GetModifiedFee()));\n-    fees.pushKV(\"ancestor\", ValueFromAmount(e.GetModFeesWithAncestors()));\n-    fees.pushKV(\"descendant\", ValueFromAmount(e.GetModFeesWithDescendants()));\n-    info.pushKV(\"fees\", fees);\n     info.pushKV(\"vsize\", (int)e.GetTxSize());\n     info.pushKV(\"weight\", (int)e.GetTxWeight());\n     // TODO: top-level fee fields are deprecated. deprecated_fee_fields_enabled blocks should be removed in v24\n@@ -519,6 +513,14 @@ static void entryToJSON(const CTxMemPool& pool, UniValue& info, const CTxMemPool\n         info.pushKV(\"ancestorfees\", e.GetModFeesWithAncestors());\n     }\n     info.pushKV(\"wtxid\", pool.vTxHashes[e.vTxHashesIdx].first.ToString());\n+\n+    UniValue fees(UniValue::VOBJ);\n+    fees.pushKV(\"base\", ValueFromAmount(e.GetFee()));\n+    fees.pushKV(\"modified\", ValueFromAmount(e.GetModifiedFee()));\n+    fees.pushKV(\"ancestor\", ValueFromAmount(e.GetModFeesWithAncestors()));\n+    fees.pushKV(\"descendant\", ValueFromAmount(e.GetModFeesWithDescendants()));\n+    info.pushKV(\"fees\", fees);\n+\n     const CTransaction& tx = e.GetTx();\n     std::set<std::string> setDepends;\n     for (const CTxIn& txin : tx.vin)"
      }
    ]
  }
]