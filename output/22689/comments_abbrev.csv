josibake,2021-08-12 15:16:38,force pushed from  084d443 to 251d636 to fix linting and ci errors,https://github.com/bitcoin/bitcoin/pull/22689#issuecomment-897726230,897726230,
DrahtBot,2021-08-12 19:14:53,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#23507](https://github.com/bitcoin/bitcoin/pull/23507) (Refactor: Improve API design of `ScriptToUniv`, `TxToUniv` etc to",https://github.com/bitcoin/bitcoin/pull/22689#issuecomment-897901107,897901107,
theStack,2021-08-13 10:26:11,Concept ACK,https://github.com/bitcoin/bitcoin/pull/22689#issuecomment-898358216,898358216,
Zero-1729,2021-08-13 14:02:40,Concept ACK,https://github.com/bitcoin/bitcoin/pull/22689#issuecomment-898479397,898479397,
josibake,2021-08-13 14:50:57,"thanks for the review, @glozow! I added your suggestions and left a comment on why I think it makes sense to keep `rpc_mempool_entry_fields_deprecation.py` separate from `rpc_deprecated.py`; ultimately, I'm happy to go with whichever option you recommend",https://github.com/bitcoin/bitcoin/pull/22689#issuecomment-898511513,898511513,
josibake,2021-08-16 15:47:03,"> Code review ACK\n> \n> You'll probably need to add release notes, something like [90ae3d8](https://github.com/bitcoin/bitcoin/commit/90ae3d8ca68334ec712d67b21a8d4721c6d79788)\n\nthanks for the review, @mjdietzx ! ive updated the release notes in https://github.com/bitcoin/bitcoin/pull/22689/commits/4df6ffd4dcdfd2b26457c420cdbb4c382bc7a488",https://github.com/bitcoin/bitcoin/pull/22689#issuecomment-899615774,899615774,
fanquake,2021-08-17 11:45:42,"> thanks for the review, @mjdietzx ! ive updated the release notes in 4df6ffd\n\nPlease write more descriptive commit messages than `update release notes`. i.e This could be something like `doc: add release note for fee field deprecation in RPC`. ",https://github.com/bitcoin/bitcoin/pull/22689#issuecomment-900226027,900226027,
josibake,2021-08-17 12:06:17,"> Please write more descriptive commit messages than `update release notes`. i.e This could be something like `doc: add release note for fee field deprecation in RPC`.\n\ngreat callout, @fanquake . ive update all three commit messages with relevant tags (rpc, test, doc) and wrote more descriptive commit messages",https://github.com/bitcoin/bitcoin/pull/22689#issuecomment-900239399,900239399,
josibake,2021-08-18 19:26:27,"> getmempoolancestors and getmempooldescendants are also changed unless I'm misreading the code\n\ngood catch! i verified by grepping for `entryToJSON` and it is used in those RPC's as well. updated the commit message and release docs. thanks for the suggestions on the release doc; it reads much better",https://github.com/bitcoin/bitcoin/pull/22689#issuecomment-901371477,901371477,
josibake,2021-08-18 19:33:26,force pushed https://github.com/bitcoin/bitcoin/pull/22689/commits/e5b22ecc858f03be29a8f5aa1802b679a782a593 to fix a failure in the linter,https://github.com/bitcoin/bitcoin/pull/22689#issuecomment-901375745,901375745,
josibake,2021-08-19 11:16:08,force pushed https://github.com/bitcoin/bitcoin/pull/22689/commits/07801c89d6782d404370a52566a55375f36846d7 based on https://github.com/bitcoin/bitcoin/pull/22689#discussion_r689259509,https://github.com/bitcoin/bitcoin/pull/22689#issuecomment-901828858,901828858,
josibake,2021-08-19 11:44:19,"thanks for the review, @MarcoFalke , ive updated based on your suggestions",https://github.com/bitcoin/bitcoin/pull/22689#issuecomment-901846128,901846128,
MarcoFalke,2021-08-19 11:46:49,re-ACK a0a0c7c1c8e41157bb2798ba0d564e78e5217ff9,https://github.com/bitcoin/bitcoin/pull/22689#issuecomment-901847673,901847673,
josibake,2021-08-19 13:49:10,"pushed changes per @jonatack 's suggestion to preserve field order to match rpc help. i also added https://github.com/bitcoin/bitcoin/pull/22689/commits/c1a8a35e89d5b3c889d64562c2e5f042c16a4ae2 to make the fees object also match the help. given the discussion in https://github.com/bitcoin/bitcoin/pull/22689#discussion_r692053229 , this seemed like a good change\n\ni did it in a separate commit b",https://github.com/bitcoin/bitcoin/pull/22689#issuecomment-901931698,901931698,
josibake,2021-08-19 16:14:33,"pushed changes per @jonatack suggestions and @glozow 's recommendation on the release notes. if the release notes need further refinement, i think we can wait until the draft is moved to the wiki. ive made a note for myself to revisit then.\n\n@glozow , regarding your question on missing tests for `getmempoolancestors` and `getmempooldescendants`: i had started to write tests for these, but sinc",https://github.com/bitcoin/bitcoin/pull/22689#issuecomment-902045588,902045588,
josibake,2021-08-23 14:14:47,"rebased to fix conflicts from #22707 \n\n@MarcoFalke @mjdietzx @jonatack @glozow if everything looks good, a re-ack would be much appreciated! thanks!",https://github.com/bitcoin/bitcoin/pull/22689#issuecomment-903813278,903813278,
josibake,2021-08-24 10:49:50,@jonatack thanks for the fix-ups on the field help! i added your suggestions and included you as a co-author in https://github.com/bitcoin/bitcoin/pull/22689/commits/4a6e7b2f0321df876e1d90d06c44325116bf5eec. i also updated the release note docs in https://github.com/bitcoin/bitcoin/pull/22689/commits/61a5b370594b538488dbddc4aadb208c2770d748 to be more clear that `ancestorfees` and `descendantfees`,https://github.com/bitcoin/bitcoin/pull/22689#issuecomment-904532853,904532853,
josibake,2021-08-24 15:19:16,"thanks for the review @jnewbery ! i added your suggestion in https://github.com/bitcoin/bitcoin/pull/22689/commits/0dd79b51a3de0cc618704077f71aa591cdc8c01e\n\nwhile i agree moving the fee object is not directly related to fee field deprecation, my (albeit weak) argument for keeping it in this PR is making sure the descriptions are accurate for the affected RPC's will help avoid confusion on the ",https://github.com/bitcoin/bitcoin/pull/22689#issuecomment-904736280,904736280,
josibake,2021-08-24 19:44:28,force pushed update to release notes fixing wording and a spelling error,https://github.com/bitcoin/bitcoin/pull/22689#issuecomment-904924580,904924580,
josibake,2021-08-25 15:56:39,"as @glozow pointed out, all fee fields returned by `entryToJSON` are absolute amounts (not fee rates). ive update the rpc help and release notes to reflect this (thanks @glozow , sorry for the churn on this).\n\nalso kept the wording changes from @jonatack as i think they really improve the readability of the help and i added in the units for each of the fields so it's more obvious that we are c",https://github.com/bitcoin/bitcoin/pull/22689#issuecomment-905648712,905648712,
josibake,2021-10-28 15:43:47,"rebased and force pushed. the rebase changes can be checked with `git range-diff 4792072...61af49c`\n\nalso removed the extra newlines from the newly added functional test as suggested by @glozow and included the two wording changes from @jonatack in `doc/release-notes.md` as part of the rebase",https://github.com/bitcoin/bitcoin/pull/22689#issuecomment-953970721,953970721,
josibake,2021-10-28 15:55:05,"looking at ci failures, not immediately clear to me what's happening - will take a look tomorrow",https://github.com/bitcoin/bitcoin/pull/22689#issuecomment-953980182,953980182,
josibake,2021-10-29 14:22:20,one-line change to fix the newly added test (`git range-diff 61af49c...285cb3d`),https://github.com/bitcoin/bitcoin/pull/22689#issuecomment-954785832,954785832,
josibake,2021-11-01 12:26:50,"> The set of changes look fine, but there a couple of issues with commits:\n> \n>     * The mempool_packages.py fails after the first commit since you remove the `COIN` import (and then add it back in the second commit). I think you just need to squash the changes to mempool_packages.py in the second commit into the first commit.\n> \n>     * Can you fixup the commit logs with standard punctua",https://github.com/bitcoin/bitcoin/pull/22689#issuecomment-956191610,956191610,
jnewbery,2021-11-02 10:45:51,"reACK 2f9515f37addabde84c79926d7a24b2897a21dd1\n\nOne minor comment above: https://github.com/bitcoin/bitcoin/pull/22689#discussion_r740930133. No need to resolve that unless you need to push again for some other reason.",https://github.com/bitcoin/bitcoin/pull/22689#issuecomment-957323494,957323494,
glozow,2021-08-13 09:37:23,"I agree with this approach of adding a bool similar to address/reqSigs, and think you should add a TODO to remove this in v24\n\nPerhaps naming it `include_old_fee_fields` or something might be better because this could be slightly confusing",https://github.com/bitcoin/bitcoin/pull/22689#discussion_r688382471,688382471,src/rpc/blockchain.cpp
glozow,2021-08-13 09:42:08,"Any reason you didn't use the existing test file, rpc_deprecated.py? I don't personally have an opinion on whether it would be better, but it looks like a good place to put these tests too.",https://github.com/bitcoin/bitcoin/pull/22689#discussion_r688385472,688385472,test/functional/rpc_mempool_entry_fee_fields_deprecation.py
glozow,2021-08-13 09:44:10,"You could also add the assertions to a helper function, and call that helper function with results you get from each RPC",https://github.com/bitcoin/bitcoin/pull/22689#discussion_r688386760,688386760,test/functional/rpc_mempool_entry_fee_fields_deprecation.py
glozow,2021-08-13 09:50:28,nit: sort alphabetically :grin:,https://github.com/bitcoin/bitcoin/pull/22689#discussion_r688390466,688390466,test/functional/rpc_mempool_entry_fee_fields_deprecation.py
glozow,2021-08-13 09:57:11,"To make the commits atomic, rpc_fundrawtransaction.py needs to be updated in 5adcba2562 as well",https://github.com/bitcoin/bitcoin/pull/22689#discussion_r688394470,688394470,test/functional/rpc_fundrawtransaction.py
josibake,2021-08-13 13:00:19,"added the comments and renamed to `include_deprecated_fee_fields` to better associate it with `isDeprecatedRPCEnabled(""fees"")`",https://github.com/bitcoin/bitcoin/pull/22689#discussion_r688494902,688494902,src/rpc/blockchain.cpp
josibake,2021-08-13 13:03:14,"hm, im not sure how you were able to see https://github.com/bitcoin/bitcoin/commit/5adcba25623f35c07e8fe266883a9c21931f3d0d as i thought i force pushed past it. but just to make sure i understand, the changes to `rpc_fundrawtransaction.py` and `mempool_packages.py` should be in the same commit as the changes to `blockchain.cpp`. this ensures the tests still pass for this commit, correct?",https://github.com/bitcoin/bitcoin/pull/22689#discussion_r688496763,688496763,test/functional/rpc_fundrawtransaction.py
josibake,2021-08-13 13:17:52,"i saw `rpc_deprecated.py` and wasn't sure why it was there? right now it doesn't test anything. i then saw `rpc_addresses_deprecation.py` was its own file, so i followed that one as an example.\n\ni guess the advantage of putting tests in `rpc_deprecated.py` is it might help things run faster than running individual test files for each deprecated rpc. i can put my test there and then move `rpc_a",https://github.com/bitcoin/bitcoin/pull/22689#discussion_r688506660,688506660,test/functional/rpc_mempool_entry_fee_fields_deprecation.py
glozow,2021-08-13 13:24:36,I assumed that rpc_deprecated.py is there to test RPC deprecation stuff and address/reqSigs tests are in a separate file because they need the wallet to be built. So they can't be moved to rpc_deprecated.py either.,https://github.com/bitcoin/bitcoin/pull/22689#discussion_r688511555,688511555,test/functional/rpc_mempool_entry_fee_fields_deprecation.py
glozow,2021-08-13 13:26:05,"ah hm, I must have fetched before you pushed.\n\n> just to make sure i understand, the changes to rpc_fundrawtransaction.py and mempool_packages.py should be in the same commit as the changes to blockchain.cpp. this ensures the tests still pass for this commit, correct?\n\ncorrect, yes :)",https://github.com/bitcoin/bitcoin/pull/22689#discussion_r688512570,688512570,test/functional/rpc_fundrawtransaction.py
josibake,2021-08-13 13:26:20,"actually, ive talked myself out of this. if we have individual files, they can run in parallel and if we put all the deprecated tests under the same class it could be really annoying later on as you are adding a new test. you'd have to wait for N deprecation tests to run each time as you're iterating on your test, which starts to impact productivity if it takes 30 ~ 45 seconds to run through all t",https://github.com/bitcoin/bitcoin/pull/22689#discussion_r688512710,688512710,test/functional/rpc_mempool_entry_fee_fields_deprecation.py
josibake,2021-08-13 14:44:31,"> I assumed that rpc_deprecated.py is there to test RPC deprecation stuff and address/reqSigs tests are in a separate file because they need the wallet to be built\n\nmakes sense. i read through the comments on `rpc_deprecated.py` and it seems focused on testing that a whole rpc command is deprecated. i think it works well for that and we can consolidate rpc command deprecation's there.\n\nthi",https://github.com/bitcoin/bitcoin/pull/22689#discussion_r688569469,688569469,test/functional/rpc_mempool_entry_fee_fields_deprecation.py
josibake,2021-08-13 14:50:35,:doh:,https://github.com/bitcoin/bitcoin/pull/22689#discussion_r688573802,688573802,test/functional/rpc_mempool_entry_fee_fields_deprecation.py
mjdietzx,2021-08-16 06:07:07,"Is there a reason you don't do:\n```c++\nif (IsDeprecatedRPCEnabled(""fees"")) {\n```\nhere? And not have to change the function header?",https://github.com/bitcoin/bitcoin/pull/22689#discussion_r689259509,689259509,src/rpc/blockchain.cpp
josibake,2021-08-16 15:29:48,"i was following `ScriptPubKeyToUniv` as an example: https://github.com/bitcoin/bitcoin/blob/42b00a37580a11fbb81a3748d9e834ae8913cdba/src/rpc/blockchain.cpp#L1936-L1939\n\npersonally, i agree with this approach more than using the `IsDeprecatedRPCEnabled` function directly as it it's more clear, imo, what's happening and allows for more flexibility. \n\nfor example, lets say we wanted to only a",https://github.com/bitcoin/bitcoin/pull/22689#discussion_r689639437,689639437,src/rpc/blockchain.cpp
jonatack,2021-08-18 13:37:56,"suggestions\n\n- add the PR number\n- add  `getmempoolancestors` and `getmempooldescendants` that are also changed\n- s/true/verbose=true/ for clarity\n- wrap the lines\n- s/sub-object/JSON object/\n- s/top level/top-level/\n- no need to wrap version numbers in code markup\n\n```diff\n-- `getmempoolentry` and `getrawmempool true` no longer return top level fee fields `fee`, `modifiedfee",https://github.com/bitcoin/bitcoin/pull/22689#discussion_r691246625,691246625,doc/release-notes.md
MarcoFalke,2021-08-18 19:54:47,"As this `entryToJSON` isn't called anywhere, except for `entryToJSON`, I think it is fine to use the suggestion by @mjdietzx . No strong opinion, though.",https://github.com/bitcoin/bitcoin/pull/22689#discussion_r691559569,691559569,src/rpc/blockchain.cpp
jonatack,2021-08-18 20:08:03,"I agree as well, but no big deal so didn't mention it.",https://github.com/bitcoin/bitcoin/pull/22689#discussion_r691567654,691567654,src/rpc/blockchain.cpp
josibake,2021-08-19 10:58:47,"seems like its the more preferred approach, happy to switch",https://github.com/bitcoin/bitcoin/pull/22689#discussion_r692005967,692005967,src/rpc/blockchain.cpp
MarcoFalke,2021-08-19 11:27:43,"nit: It won't be available in v24.0\n\n```suggestion\n  response. This option will only be available in this major version, after which the\n```",https://github.com/bitcoin/bitcoin/pull/22689#discussion_r692023910,692023910,doc/release-notes.md
MarcoFalke,2021-08-19 11:28:31,nit: Could move the comment to the `if IsDeprecatedRPCEnabled`?,https://github.com/bitcoin/bitcoin/pull/22689#discussion_r692024389,692024389,src/rpc/blockchain.cpp
MarcoFalke,2021-08-19 11:31:03,"nit: pep-8\n\n```suggestion\n                assert_equal(mempool[x]['fees']['modified'], mempool[x]['fees']['base'] + satoshi_round(0.00002))\n```",https://github.com/bitcoin/bitcoin/pull/22689#discussion_r692025865,692025865,test/functional/mempool_packages.py
jonatack,2021-08-19 12:13:43,"Might be more user-friendly to not alter the field order here so that it is the same as the help. E.g. insert the IsDeprecated... conditional (or cache the result of the call to a local bool variable) before the fields where they already are. (Sorry, I didn't notice this in my previous review.)",https://github.com/bitcoin/bitcoin/pull/22689#discussion_r692053229,692053229,src/rpc/blockchain.cpp
MarcoFalke,2021-08-19 12:23:01,"The code will go away soon, so I don't think this gives much benefit.",https://github.com/bitcoin/bitcoin/pull/22689#discussion_r692059690,692059690,src/rpc/blockchain.cpp
josibake,2021-08-19 13:05:45,"i noticed that the current order doesn't match the help (fees object is listed after wtxid but is first in the returned object), so didn't worry about re-arranging fields, but i agree that it can be confusing for the user. \n\ni think grouping the fields makes it easier to deprecate them later, so maybe a better solution would be to re-arrange the help to match the actual ordering? or just leave",https://github.com/bitcoin/bitcoin/pull/22689#discussion_r692091265,692091265,src/rpc/blockchain.cpp
jonatack,2021-08-19 13:14:29,"I would say, please don't re-arrange the help to make up for something the code can easily do.\n\nYes, I agree it's not of earth-shattering importance, but I also think it's a more important aspect than in which file to put the deprecation test or which way to check for deprecation. It affects users.",https://github.com/bitcoin/bitcoin/pull/22689#discussion_r692098417,692098417,src/rpc/blockchain.cpp
josibake,2021-08-19 13:21:18,"> I guess it's a question of degree of focus on users\n\ngood point, @jonatack , i'll update based on your suggestion",https://github.com/bitcoin/bitcoin/pull/22689#discussion_r692104195,692104195,src/rpc/blockchain.cpp
jonatack,2021-08-19 13:23:50,Happy to re-review ASAP if you do (it's not a blocker).,https://github.com/bitcoin/bitcoin/pull/22689#discussion_r692106386,692106386,src/rpc/blockchain.cpp
glozow,2021-08-19 14:32:12,"Mostly wording suggestions, but also I think you should warn users about the fact that the fees are denominated slightly differently when they switch to using the `fees` object.\n```suggestion\n- The top-level fee fields `fee`, `modifiedfee`, `ancestorfees` and `descendantfees`\n  returned by RPCs `getmempoolentry`,`getrawmempool(verbose=true)`,\n  `getmempoolancestors(verbose=true)` and `getm",https://github.com/bitcoin/bitcoin/pull/22689#discussion_r692168235,692168235,doc/release-notes.md
glozow,2021-08-19 14:33:24,"Doesn't seem to be an issue here, but for future reference, you might want to put it in a release-notes-22689.md to avoid conflicts with other PRs updating release notes.",https://github.com/bitcoin/bitcoin/pull/22689#discussion_r692169209,692169209,doc/release-notes.md
glozow,2021-08-19 14:41:16,I don't think it matters that much :shrug: either way makes sense to me. I'd imagine that the extra overhead of spinning up test frameworks for separate test files overrides the gains from running them in parallel.,https://github.com/bitcoin/bitcoin/pull/22689#discussion_r692176392,692176392,test/functional/rpc_mempool_entry_fee_fields_deprecation.py
jonatack,2021-08-19 15:13:24,"- brackets per developer-notes.md:\n```\n  - If an `if` only has a single-statement `then`-clause, it can appear\n    on the same line as the `if`, without braces. In every other case,\n    braces are required, and the `then` and `else` clauses must appear\n    correctly indented on a new line.\n```\n- `IsDeprecatedRPCEnabled()` loops through a vector to match strings, so maybe invoke it on",https://github.com/bitcoin/bitcoin/pull/22689#discussion_r692209238,692209238,src/rpc/blockchain.cpp
jonatack,2021-08-19 15:30:24,"> i noticed that the current order doesn't match the help (fees object is listed after wtxid but is first in the returned object)\n\nOh, I see now what you meant. Hm, the fees output/help mismatch was done in 7de1de7da49. ISTM we usually place JSON objects after top-level fields? So your change ~seems correct, unless other reviewers think it's better to change the help to be like the output.",https://github.com/bitcoin/bitcoin/pull/22689#discussion_r692232624,692232624,src/rpc/blockchain.cpp
josibake,2021-08-19 15:51:57,"> slightly differently when they switch to using the fees object\n\njust double checking, the update should read ""denominated in BTC,"" correct?",https://github.com/bitcoin/bitcoin/pull/22689#discussion_r692259805,692259805,doc/release-notes.md
josibake,2021-08-19 16:01:35,"> JSON objects after top-level fields\n\nthat's the convention i'm used to (and much prefer)",https://github.com/bitcoin/bitcoin/pull/22689#discussion_r692267471,692267471,src/rpc/blockchain.cpp
jonatack,2021-08-19 16:36:00,"Seems no need to mention the units if they aren't changed; didn't verify yet.\n\n\nFeel free to ignore (the help prints the wrong unit as well, I believe)\n```suggestion\n  in BTC/kvB, can be accessed through the `fees` object in the result. (#22689)\n```\n",https://github.com/bitcoin/bitcoin/pull/22689#discussion_r692305337,692305337,doc/release-notes.md
josibake,2021-08-19 17:17:18,"yeah, i think the help is incorrect here. i can open a followup RPC cleanup PR. for starters:\n\n- address where argument order doesn't match help order in other rpcs\n- fix fee vs feerate and other small errors",https://github.com/bitcoin/bitcoin/pull/22689#discussion_r692334296,692334296,doc/release-notes.md
jonatack,2021-08-23 16:16:26,"So, `fee` and `modifiedfee` are uniformly in BTC/kvB. OTOH, it looks to me like `ancestorfees` and `descendantfees` are in sat/vB in the deprecated fields and in BTC/kvB in the `fees` object (urgh, we've been moving from BTC/kvB to sat/vB elsewhere).\n\nIf we mention this in the release notes (and I think it's a good idea as @glozow suggested), it may be best to (a) use the correct units of BTC/",https://github.com/bitcoin/bitcoin/pull/22689#discussion_r694117001,694117001,doc/release-notes.md
jnewbery,2021-08-24 13:57:41,"I don't think the last commit needs to be in this PR, since it's not really related to deprecating the legacy fields.\n\nIf you do move this down, then it makes sense to also move the preceding lines down so the `fees` code isn't split up:\n\n```c++\n    UniValue fees(UniValue::VOBJ);\n    fees.pushKV(""base"", ValueFromAmount(e.GetFee()));\n    fees.pushKV(""modified"", ValueFromAmount(e.GetMo",https://github.com/bitcoin/bitcoin/pull/22689#discussion_r694877155,694877155,src/rpc/blockchain.cpp
jonatack,2021-08-24 17:06:04,"```suggestion\n  fields in the `fees` object are denominated in BTC/kvB (#22689)\n```\n(`test/lint/lint-spelling.sh` is helpful for catching some spelling errors, but it doesn't appear to check the release notes)\n\n- perhaps `s/Note:/Warning:` (either it matters enough to warn, or ""note"" is unneeded)\n\n- also, add a blank line between ""Updated RPCs"" and your entry\n",https://github.com/bitcoin/bitcoin/pull/22689#discussion_r695041587,695041587,doc/release-notes.md
josibake,2021-08-24 19:43:27,"oof, good catch. i need to enable spell-check for vim :roll_eyes: ",https://github.com/bitcoin/bitcoin/pull/22689#discussion_r695150301,695150301,doc/release-notes.md
glozow,2021-08-25 10:39:57,"yes, BTC, sorry",https://github.com/bitcoin/bitcoin/pull/22689#discussion_r695624938,695624938,doc/release-notes.md
glozow,2021-08-25 10:51:42,"`CTxMemPoolEntry.GetModifiedFee()`, `CTxMemPoolEntry.GetFee()`, `CTxMemPoolEntry.GetModFeesWithAncestors()`, `CTxMemPoolEntry.GetModFeesWithDescendants()` return `CAmount`s. See their [declarations](https://github.com/bitcoin/bitcoin/blob/3755dea3c502f32048b110a4868daefe9dbe3cc1/src/txmempool.h#L125-L154) in txmempool.h.\n\nWe aren't dividing these fee amounts by sizes, just pushing them directl",https://github.com/bitcoin/bitcoin/pull/22689#discussion_r695632844,695632844,src/rpc/blockchain.cpp
glozow,2021-08-25 10:57:47,"```suggestion\n  `-deprecated=fees` if needed in this version). The same fee, all denominated\n  in BTC, can be accessed through the `fees` object in the result. Warning: deprecated\n```",https://github.com/bitcoin/bitcoin/pull/22689#discussion_r695637160,695637160,doc/release-notes.md
glozow,2021-08-25 10:59:41,Note that the units for ancestor and descendant fees are different - they were in satoshis and are now in BTC,https://github.com/bitcoin/bitcoin/pull/22689#discussion_r695638405,695638405,doc/release-notes.md
jonatack,2021-08-25 15:26:49,"Interesting. In `CTxMemPool::PrioritiseTransaction()`, is `TxMempoolInfo::nFeeDelta` incorrectly described as a fee rate? In BIP22 it's described as a fee. \n```cpp\nLogPrintf(""PrioritiseTransaction: %s feerate += %s\n"", hash.ToString(), FormatMoney(nFeeDelta));\n```\n",https://github.com/bitcoin/bitcoin/pull/22689#discussion_r695866211,695866211,src/rpc/blockchain.cpp
josibake,2021-08-25 15:52:10,"you are correct! my apologies, i should have double-checked the declarations before making the change :grimacing: ",https://github.com/bitcoin/bitcoin/pull/22689#discussion_r695888713,695888713,src/rpc/blockchain.cpp
jnewbery,2021-08-26 15:00:22,"@jonatack Yes, that log is incorrect.\n\nFor historic context, it was added here: https://github.com/bitcoin/bitcoin/commit/f9b9371c6027905f73a2558d6bcaca8a355c28a6#diff-c065d4cd2398ad0dbcef393c5dfc53f465bf44723348892395fffd2fb3bac522R932. I expect the author intended to update a different log which says fee but prints feerate: https://github.com/bitcoin/bitcoin/pull/9602#discussion_r103486800.",https://github.com/bitcoin/bitcoin/pull/22689#discussion_r696717013,696717013,src/rpc/blockchain.cpp
jonatack,2021-08-26 15:23:10,@jnewbery thanks for the context and history! :heart_eyes: ,https://github.com/bitcoin/bitcoin/pull/22689#discussion_r696737617,696737617,src/rpc/blockchain.cpp
glozow,2021-09-01 11:07:00,"nit in e2cada0ce5: these newlines are unnecessary\n```suggestion\n    def test_getmempoolentry(self, txid, deprecated_fields):\n        self.log.info(""Test getmempoolentry rpc"")\n        entry = self.nodes[0].getmempoolentry(txid)\n        deprecated_entry = self.nodes[1].getmempoolentry(txid)\n        assertions_helper(entry, deprecated_entry, deprecated_fields)\n\n    def test_getrawmemp",https://github.com/bitcoin/bitcoin/pull/22689#discussion_r700110397,700110397,test/functional/rpc_mempool_entry_fee_fields_deprecation.py
jonatack,2021-09-02 12:41:55,"```suggestion\n  fields in the `fees` object are denominated in BTC. (#22689)\n```",https://github.com/bitcoin/bitcoin/pull/22689#discussion_r701043565,701043565,doc/release-notes.md
jonatack,2021-09-02 12:42:33,"nit, can omit\n```suggestion\n  are deprecated and will be removed in the next major version (use\n```",https://github.com/bitcoin/bitcoin/pull/22689#discussion_r701044097,701044097,doc/release-notes.md
jonatack,2021-09-02 12:42:57,"```suggestion\n  the `-deprecated=fees` configuration option if needed in this version). The same fee fields can be accessed\n```",https://github.com/bitcoin/bitcoin/pull/22689#discussion_r701044379,701044379,doc/release-notes.md
jonatack,2021-09-02 13:13:30,"only if you retouch, here and line 464\n```suggestion\n    RPCResult{RPCResult::Type::STR_AMOUNT, ""ancestorfees"", ""transaction fees of in-mempool ancestors (including this one) with fee deltas used for mining priority, denominated in satoshis (DEPRECATED, returned only if config option -deprecatedrpc=fees is passed)""},\n```",https://github.com/bitcoin/bitcoin/pull/22689#discussion_r701069546,701069546,src/rpc/blockchain.cpp
josibake,2021-10-28 15:48:46,:+1: ,https://github.com/bitcoin/bitcoin/pull/22689#discussion_r738528408,738528408,test/functional/rpc_mempool_entry_fee_fields_deprecation.py
glozow,2021-10-29 09:53:13,"CI issue is here, silent merge conflict with #23017. `scan_blocks` was removed in fa7e3f1fc114056967963a4ad4863a56e406c57e",https://github.com/bitcoin/bitcoin/pull/22689#discussion_r739096927,739096927,test/functional/rpc_mempool_entry_fee_fields_deprecation.py
josibake,2021-10-29 14:15:43,thanks! forgot to run the new test locally :man_facepalming: ,https://github.com/bitcoin/bitcoin/pull/22689#discussion_r739272115,739272115,test/functional/rpc_mempool_entry_fee_fields_deprecation.py
jnewbery,2021-11-01 10:57:38,"nit: add a blank line after `info.pushKV(""fees"", fees);` since these 6 lines form a logical block.",https://github.com/bitcoin/bitcoin/pull/22689#discussion_r740125647,740125647,src/rpc/blockchain.cpp
jnewbery,2021-11-01 15:46:17,"This sync can take several seconds since bitcoind will add some random delay on transaction relay to improve privacy. Since testing tx relay isn't the point of this test, you could make the test run reliably faster by submitting the transaction directly to node 1 with the `sendrawtransaction` RPC.",https://github.com/bitcoin/bitcoin/pull/22689#discussion_r740317278,740317278,test/functional/rpc_mempool_entry_fee_fields_deprecation.py
josibake,2021-11-02 09:08:12,thanks for the tip! i did notice the new test was taking longer than i expected. fixed!,https://github.com/bitcoin/bitcoin/pull/22689#discussion_r740844170,740844170,test/functional/rpc_mempool_entry_fee_fields_deprecation.py
josibake,2021-11-02 09:10:14,change since your last ACK: `git range-diff  7330beb...2f9515f`,https://github.com/bitcoin/bitcoin/pull/22689#discussion_r740845817,740845817,test/functional/rpc_mempool_entry_fee_fields_deprecation.py
jnewbery,2021-11-02 10:39:04,"Comment above is now inaccurate: ""we create the tx on the first node and wait until it syncs to node_deprecated thus, any differences must be coming from getmempoolentry or getrawmempool"" :eyes: ",https://github.com/bitcoin/bitcoin/pull/22689#discussion_r740930133,740930133,test/functional/rpc_mempool_entry_fee_fields_deprecation.py
