[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/501659119",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16202#issuecomment-501659119",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16202",
    "id": 501659119,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMTY1OTExOQ==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-06-13T11:13:05Z",
    "updated_at": "2019-10-26T16:27:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#16839](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16839.html) (Replace Connman and BanMan globals with Node local by ryanofsky)\n* [#16562](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16562.html) (Refactor message transport packaging by jonasschnelli)\n* [#15197](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15197.html) (Refactor and slightly stricter p2p message processing by jonasschnelli)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/501659119/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/515002359",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16202#issuecomment-515002359",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16202",
    "id": 515002359,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNTAwMjM1OQ==",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?u=eab5d0cdbb6cc25087cb61d4ca4a6f85255f42a7&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-25T11:09:33Z",
    "updated_at": "2019-07-25T11:09:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks @ariard for the review.\r\nFixed those points/nits. Mainly the private declaration of members and methods of the `V1TransportDeserializer` class. ",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/515002359/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/516192751",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16202#issuecomment-516192751",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16202",
    "id": 516192751,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNjE5Mjc1MQ==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-29T22:56:05Z",
    "updated_at": "2019-07-29T22:56:05Z",
    "author_association": "MEMBER",
    "body": "Concept and approach ACK.\r\n\r\nI'll go through the code in more detail soon, but one thing I noticed is that this introduces an unnecessary copy of the message payload in the `GetMessage()` function. It can be avoided by moving the `CDataStream`: https://github.com/sipa/bitcoin/tree/pr16202",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/516192751/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/516441452",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16202#issuecomment-516441452",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16202",
    "id": 516441452,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNjQ0MTQ1Mg==",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?u=eab5d0cdbb6cc25087cb61d4ca4a6f85255f42a7&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-30T14:22:47Z",
    "updated_at": "2019-07-30T14:22:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks @sipa.\r\nAdded sipa's 6e4d18346195310df96f42dcce4e29eec2fcc2eb to this PR",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/516441452/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/518459156",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16202#issuecomment-518459156",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16202",
    "id": 518459156,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxODQ1OTE1Ng==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-06T01:24:59Z",
    "updated_at": "2019-08-06T01:24:59Z",
    "author_association": "MEMBER",
    "body": "Concept ACK, following https://github.com/bitcoin/bitcoin/pull/14046#issuecomment-431528330 does makes sense vs #14046.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/518459156/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/534607497",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16202#issuecomment-534607497",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16202",
    "id": 534607497,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzNDYwNzQ5Nw==",
    "user": {
      "login": "etscrivner",
      "id": 69561,
      "node_id": "MDQ6VXNlcjY5NTYx",
      "avatar_url": "https://avatars.githubusercontent.com/u/69561?u=142b51df1df3f92f6dab0b3058bb496dfb23e9f8&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/etscrivner",
      "html_url": "https://github.com/etscrivner",
      "followers_url": "https://api.github.com/users/etscrivner/followers",
      "following_url": "https://api.github.com/users/etscrivner/following{/other_user}",
      "gists_url": "https://api.github.com/users/etscrivner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/etscrivner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/etscrivner/subscriptions",
      "organizations_url": "https://api.github.com/users/etscrivner/orgs",
      "repos_url": "https://api.github.com/users/etscrivner/repos",
      "events_url": "https://api.github.com/users/etscrivner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/etscrivner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-24T15:17:30Z",
    "updated_at": "2019-09-24T15:17:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "ACK 7370bed970e9455dc686c8088dd3e3afb219bbee\r\n\r\nApproach is very clean. All unit and functional tests pass. Manually tested some P2P functionality to provide additional confidence.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/534607497/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/535152710",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16202#issuecomment-535152710",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16202",
    "id": 535152710,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzNTE1MjcxMA==",
    "user": {
      "login": "jkczyz",
      "id": 4015903,
      "node_id": "MDQ6VXNlcjQwMTU5MDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jkczyz",
      "html_url": "https://github.com/jkczyz",
      "followers_url": "https://api.github.com/users/jkczyz/followers",
      "following_url": "https://api.github.com/users/jkczyz/following{/other_user}",
      "gists_url": "https://api.github.com/users/jkczyz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jkczyz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
      "organizations_url": "https://api.github.com/users/jkczyz/orgs",
      "repos_url": "https://api.github.com/users/jkczyz/repos",
      "events_url": "https://api.github.com/users/jkczyz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jkczyz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-25T18:30:17Z",
    "updated_at": "2019-09-25T18:30:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "Not sure if more refactoring would be first required, but it would be nice if `TransportDeserializer`'s interface could be simplified to a single method. Roughly speaking:\r\n\r\n```c++\r\nStatusOr<CNetMessage> Deserialize(CDataStream& stream);\r\n```\r\n\r\nWhere StatusOr is essentially a variant type of error or result, though I suppose exceptions could be used instead. An output parameter for the result is another possibility. I'm not sure what the project conventions are for the error or result pattern.\r\n\r\nThen `TransportDeserializer` could be stateless. Instead all state would be local to the `Deserialize` method. Additionally, the return value (or exception) could be examined for error status. This could reduce the complexity of the code quite a bit.\r\n\r\nOtherwise, the client is responsible for knowing in which order the methods of `TransportDeserializer` should be called in, whether calling a method is valid at a given point, and in general the inner-workings of the `TransportDeserializer` implementation.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/535152710/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/536660326",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16202#issuecomment-536660326",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16202",
    "id": 536660326,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzNjY2MDMyNg==",
    "user": {
      "login": "fjahr",
      "id": 1322187,
      "node_id": "MDQ6VXNlcjEzMjIxODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1322187?u=348c27f90b6fff8fd72fa27232272651436a2ff0&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjahr",
      "html_url": "https://github.com/fjahr",
      "followers_url": "https://api.github.com/users/fjahr/followers",
      "following_url": "https://api.github.com/users/fjahr/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjahr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
      "organizations_url": "https://api.github.com/users/fjahr/orgs",
      "repos_url": "https://api.github.com/users/fjahr/repos",
      "events_url": "https://api.github.com/users/fjahr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjahr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-30T17:16:36Z",
    "updated_at": "2019-09-30T17:16:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "ACK 7370bed\r\n\r\nSuccessfully ran unit and functional tests, reviewed code. I agree with @jkczyz as in I would prefer a stateless deserializer as well but also with @jonatack that this would be better as a follow-up PR.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/536660326/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/538185974",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16202#issuecomment-538185974",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16202",
    "id": 538185974,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzODE4NTk3NA==",
    "user": {
      "login": "marcinja",
      "id": 12243734,
      "node_id": "MDQ6VXNlcjEyMjQzNzM0",
      "avatar_url": "https://avatars.githubusercontent.com/u/12243734?u=38970c06fa3c115f2caba3def2c99b78d7a48023&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/marcinja",
      "html_url": "https://github.com/marcinja",
      "followers_url": "https://api.github.com/users/marcinja/followers",
      "following_url": "https://api.github.com/users/marcinja/following{/other_user}",
      "gists_url": "https://api.github.com/users/marcinja/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/marcinja/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
      "organizations_url": "https://api.github.com/users/marcinja/orgs",
      "repos_url": "https://api.github.com/users/marcinja/repos",
      "events_url": "https://api.github.com/users/marcinja/events{/privacy}",
      "received_events_url": "https://api.github.com/users/marcinja/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-10-04T01:00:41Z",
    "updated_at": "2019-10-04T01:00:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "ACK 7370bed970e9455dc686c8088dd3e3afb219bbee \r\n\r\nReviewed code and ran tests at each commit. I also agree with other reviewers that a stateless deserializer would be nice for a potential follow-up.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/538185974/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/538232435",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16202#issuecomment-538232435",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16202",
    "id": 538232435,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzODIzMjQzNQ==",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-10-04T04:51:44Z",
    "updated_at": "2019-10-04T04:51:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jonasschnelli Have you considered adding a fuzz harness to test the robustness? What would be a good harness entry point?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/538232435/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/540747501",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16202#issuecomment-540747501",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16202",
    "id": 540747501,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MDc0NzUwMQ==",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?u=eab5d0cdbb6cc25087cb61d4ca4a6f85255f42a7&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-10-10T19:35:31Z",
    "updated_at": "2019-10-10T19:35:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "Rebased",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/540747501/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/541464501",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16202#issuecomment-541464501",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16202",
    "id": 541464501,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MTQ2NDUwMQ==",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-10-13T22:08:39Z",
    "updated_at": "2019-10-13T22:08:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jonasschnelli Friendly ping regarding my fuzzing question :)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/541464501/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/542188571",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16202#issuecomment-542188571",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16202",
    "id": 542188571,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MjE4ODU3MQ==",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?u=eab5d0cdbb6cc25087cb61d4ca4a6f85255f42a7&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-10-15T12:33:28Z",
    "updated_at": "2019-10-15T12:33:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "@practicalswift: this PR doesn't change the behaviour and the way it reads into the buffers is identical. More fuzz tests for the network layer are upcoming (already in my p2p-v2 branch).",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/542188571/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/543553533",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16202#issuecomment-543553533",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16202",
    "id": 543553533,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MzU1MzUzMw==",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?u=eab5d0cdbb6cc25087cb61d4ca4a6f85255f42a7&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-10-18T06:59:07Z",
    "updated_at": "2019-10-18T06:59:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "Fixed all remaining nits and issues.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/543553533/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/543565831",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16202#issuecomment-543565831",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16202",
    "id": 543565831,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MzU2NTgzMQ==",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-10-18T07:25:40Z",
    "updated_at": "2019-10-18T07:25:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jonasschnelli Sounds very good! Are the fuzzers available to look at? I couldn't find the `p2p-v2` branch :)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/543565831/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/543573463",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16202#issuecomment-543573463",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16202",
    "id": 543573463,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MzU3MzQ2Mw==",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?u=eab5d0cdbb6cc25087cb61d4ca4a6f85255f42a7&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-10-18T07:42:21Z",
    "updated_at": "2019-10-18T07:42:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "@practicalswift\r\nThe branch is not yet pushed. Sorry.\r\n\r\nHowever. Fuzzing is not a planed part of this PR.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/543573463/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/543960025",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16202#issuecomment-543960025",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16202",
    "id": 543960025,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0Mzk2MDAyNQ==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-10-18T21:34:42Z",
    "updated_at": "2019-10-18T21:34:59Z",
    "author_association": "MEMBER",
    "body": "ACK efecb74677222f6c70adf7f860c315f430d39ec4\r\n\r\nI have a few suggested improvements at https://github.com/sipa/bitcoin/commits/jonasschnelli_net_refactor_1: getting rid of the special message for oversized messages (strange to deal with that specifically if even larger messages are ignored, and the interface is cleaner without it), simplifying the interface a bit, and adding final/override.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/543960025/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/545310229",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16202#issuecomment-545310229",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16202",
    "id": 545310229,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NTMxMDIyOQ==",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?u=eab5d0cdbb6cc25087cb61d4ca4a6f85255f42a7&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-10-23T07:31:36Z",
    "updated_at": "2019-10-23T07:31:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "Added one extra commit that fixes wrong `std::move` behaviour for the `CNetMessages:m_recv` (`CDataStream`).\r\n\r\nAlso added @sipa s three commits.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/545310229/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/546709859",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16202#issuecomment-546709859",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16202",
    "id": 546709859,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NjcwOTg1OQ==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-10-27T16:16:51Z",
    "updated_at": "2019-10-27T16:16:51Z",
    "author_association": "MEMBER",
    "body": "Code review ACK ed2dc5e48abed1cde6ab98025dc8212917d47d21.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/546709859/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/546761590",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16202#issuecomment-546761590",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16202",
    "id": 546761590,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0Njc2MTU5MA==",
    "user": {
      "login": "marcinja",
      "id": 12243734,
      "node_id": "MDQ6VXNlcjEyMjQzNzM0",
      "avatar_url": "https://avatars.githubusercontent.com/u/12243734?u=38970c06fa3c115f2caba3def2c99b78d7a48023&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/marcinja",
      "html_url": "https://github.com/marcinja",
      "followers_url": "https://api.github.com/users/marcinja/followers",
      "following_url": "https://api.github.com/users/marcinja/following{/other_user}",
      "gists_url": "https://api.github.com/users/marcinja/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/marcinja/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
      "organizations_url": "https://api.github.com/users/marcinja/orgs",
      "repos_url": "https://api.github.com/users/marcinja/repos",
      "events_url": "https://api.github.com/users/marcinja/events{/privacy}",
      "received_events_url": "https://api.github.com/users/marcinja/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-10-28T01:51:15Z",
    "updated_at": "2019-10-28T01:51:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "Code review ACK ed2dc5e48abed1cde6ab98025dc8212917d47d21",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/546761590/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/306343247",
    "pull_request_review_id": 265439462,
    "id": 306343247,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNjM0MzI0Nw==",
    "diff_hunk": "@@ -647,7 +659,12 @@ class TransportDeserializer {\n         hdrbuf.SetVersion(nVersionIn);\n         vRecv.SetVersion(nVersionIn);\n     }\n-\n+    bool OversizedMessageDetected() const {\n+        return (in_data && hdr.nMessageSize > MAX_PROTOCOL_MESSAGE_LENGTH);\n+    }\n+    int Read(const char *pch, unsigned int nBytes) {\n+        return in_data ? readData(pch, nBytes) : readHeader(pch, nBytes);\n+    }\n     int readHeader(const char *pch, unsigned int nBytes);",
    "path": "src/net.h",
    "position": null,
    "original_position": 48,
    "commit_id": "ed2dc5e48abed1cde6ab98025dc8212917d47d21",
    "original_commit_id": "7bd4dd216094729a69f53a1916d66350f1099892",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Shouldn't these both methods be part of the private interface given they are version-message specific ?",
    "created_at": "2019-07-23T14:15:41Z",
    "updated_at": "2019-10-23T07:29:33Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16202#discussion_r306343247",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16202",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/306343247"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16202#discussion_r306343247"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16202"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/306343247/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 668,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/306343873",
    "pull_request_review_id": 265439462,
    "id": 306343873,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNjM0Mzg3Mw==",
    "diff_hunk": "@@ -605,6 +605,18 @@ class CNetMessage {\n  * transport protocol agnostic CNetMessage (command & payload)\n  */\n class TransportDeserializer {\n+public:\n+    virtual void Reset() = 0;",
    "path": "src/net.h",
    "position": null,
    "original_position": 5,
    "commit_id": "ed2dc5e48abed1cde6ab98025dc8212917d47d21",
    "original_commit_id": "7bd4dd216094729a69f53a1916d66350f1099892",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: if it's a public interface maybe add a short line of comment on what is expected for every method",
    "created_at": "2019-07-23T14:16:47Z",
    "updated_at": "2019-10-23T07:29:33Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16202#discussion_r306343873",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16202",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/306343873"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16202#discussion_r306343873"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16202"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/306343873/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 642,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/306352424",
    "pull_request_review_id": 265439462,
    "id": 306352424,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNjM1MjQyNA==",
    "diff_hunk": "@@ -605,6 +605,18 @@ class CNetMessage {\n  * transport protocol agnostic CNetMessage (command & payload)\n  */\n class TransportDeserializer {\n+public:\n+    virtual void Reset() = 0;\n+    virtual bool Complete() const = 0;\n+    virtual bool OversizedMessageDetected() const = 0;\n+    virtual void SetVersion(int nVersionIn) = 0;\n+    virtual int Read(const char *pch, unsigned int nBytes) = 0;\n+    virtual CNetMessage GetMessage(const CMessageHeader::MessageStartChars& message_start, int64_t time) = 0;\n+    virtual ~TransportDeserializer() {}\n+};\n+\n+class V1TransportDeserializer : public TransportDeserializer\n+{",
    "path": "src/net.h",
    "position": 46,
    "original_position": 15,
    "commit_id": "ed2dc5e48abed1cde6ab98025dc8212917d47d21",
    "original_commit_id": "7bd4dd216094729a69f53a1916d66350f1099892",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "IMO, you may also move more members in the private interface, what's the reason to have `in_data` as public ?",
    "created_at": "2019-07-23T14:31:29Z",
    "updated_at": "2019-10-23T07:29:33Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16202#discussion_r306352424",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16202",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/306352424"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16202#discussion_r306352424"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16202"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/306352424/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 653,
    "original_line": 657,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/306364952",
    "pull_request_review_id": 265439462,
    "id": 306364952,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNjM2NDk1Mg==",
    "diff_hunk": "@@ -581,13 +576,13 @@ bool CNode::ReceiveMsgBytes(const char *pch, unsigned int nBytes, bool& complete\n         pch += handled;\n         nBytes -= handled;\n \n-        if (m_deserializer->complete()) {\n+        if (m_deserializer->Complete()) {\n             // decompose a transport agnostic CNetMessage from the deserializer\n             CNetMessage msg = m_deserializer->GetMessage(Params().MessageStart(), nTimeMicros);\n \n             //store received bytes per message command\n             //to prevent a memory DOS, only allow valid commands\n-            mapMsgCmdSize::iterator i = mapRecvBytesPerMsgCmd.find(m_deserializer->hdr.pchCommand);\n+            mapMsgCmdSize::iterator i = mapRecvBytesPerMsgCmd.find(msg.m_command);",
    "path": "src/net.cpp",
    "position": 40,
    "original_position": 33,
    "commit_id": "ed2dc5e48abed1cde6ab98025dc8212917d47d21",
    "original_commit_id": "7bd4dd216094729a69f53a1916d66350f1099892",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit : wonder if this change shouldn't be part of first commit",
    "created_at": "2019-07-23T14:52:29Z",
    "updated_at": "2019-10-23T07:29:33Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16202#discussion_r306364952",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16202",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/306364952"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16202#discussion_r306364952"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16202"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/306364952/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 586,
    "original_line": 595,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/306382732",
    "pull_request_review_id": 265439462,
    "id": 306382732,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNjM4MjczMg==",
    "diff_hunk": "@@ -678,14 +679,40 @@ int CNetMessage::readData(const char *pch, unsigned int nBytes)\n     return nCopy;\n }\n \n-const uint256& CNetMessage::GetMessageHash() const\n+const uint256& TransportDeserializer::GetMessageHash() const\n {\n     assert(complete());\n     if (data_hash.IsNull())\n         hasher.Finalize(data_hash.begin());\n     return data_hash;\n }\n \n+CNetMessage TransportDeserializer::GetMessage(const CMessageHeader::MessageStartChars& message_start, int64_t time) {\n+    // decompose a single CNetMessage from the TransportDeserializer\n+    CNetMessage msg(vRecv);\n+\n+    // store state about valid header, netmagic and checksum\n+    msg.m_valid_header = hdr.IsValid(message_start);\n+    msg.m_valid_netmagic = (memcmp(hdr.pchMessageStart, message_start, CMessageHeader::MESSAGE_START_SIZE) == 0);",
    "path": "src/net.cpp",
    "position": 106,
    "original_position": 100,
    "commit_id": "ed2dc5e48abed1cde6ab98025dc8212917d47d21",
    "original_commit_id": "2cd45b2f4e8cfdb2eac3c886bec10653b4a066b5",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Isn't this check redundant with first check in `IsValid` ? Furthermore isn't netmagic validity a subset of header one,  and so you may remove it completely and only rely on `m_valid_header` ?",
    "created_at": "2019-07-23T15:23:22Z",
    "updated_at": "2019-10-23T07:29:33Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16202#discussion_r306382732",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16202",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/306382732"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16202#discussion_r306382732"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16202"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/306382732/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 691,
    "original_line": 699,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/306388229",
    "pull_request_review_id": 265439462,
    "id": 306388229,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNjM4ODIyOQ==",
    "diff_hunk": "@@ -570,8 +570,39 @@ class CNodeStats\n \n \n \n-\n+/** Transport protocol agnostic message container.\n+ * Ideally it should only contain receive time, payload,\n+ * command and size.\n+ */\n class CNetMessage {\n+public:\n+    CDataStream m_recv;              // received message data\n+    int64_t m_time;                  // time (in microseconds) of message receipt.\n+    bool m_valid_netmagic;",
    "path": "src/net.h",
    "position": null,
    "original_position": 13,
    "commit_id": "ed2dc5e48abed1cde6ab98025dc8212917d47d21",
    "original_commit_id": "2cd45b2f4e8cfdb2eac3c886bec10653b4a066b5",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "So next step would be to move these transport-protocol-specific fields in the Transport Deserializer ? If a `CNetMessage` doesn't have a valid_header it shouldn't succeed deserialization right ?",
    "created_at": "2019-07-23T15:33:24Z",
    "updated_at": "2019-10-23T07:29:33Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16202#discussion_r306388229",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16202",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/306388229"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16202#discussion_r306388229"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16202"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/306388229/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 620,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/306396755",
    "pull_request_review_id": 265439462,
    "id": 306396755,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNjM5Njc1NQ==",
    "diff_hunk": "@@ -3274,49 +3274,45 @@ bool PeerLogicValidation::ProcessMessages(CNode* pfrom, std::atomic<bool>& inter\n             return false;\n         // Just take one message\n         msgs.splice(msgs.begin(), pfrom->vProcessMsg, pfrom->vProcessMsg.begin());\n-        pfrom->nProcessQueueSize -= msgs.front().vRecv.size() + CMessageHeader::HEADER_SIZE;\n+        pfrom->nProcessQueueSize -= msgs.front().m_recv.size() + CMessageHeader::HEADER_SIZE;\n         pfrom->fPauseRecv = pfrom->nProcessQueueSize > connman->GetReceiveFloodSize();\n         fMoreWork = !pfrom->vProcessMsg.empty();\n     }\n     CNetMessage& msg(msgs.front());\n \n     msg.SetVersion(pfrom->GetRecvVersion());\n     // Scan for message start\n-    if (memcmp(msg.hdr.pchMessageStart, chainparams.MessageStart(), CMessageHeader::MESSAGE_START_SIZE) != 0) {\n-        LogPrint(BCLog::NET, \"PROCESSMESSAGE: INVALID MESSAGESTART %s peer=%d\\n\", SanitizeString(msg.hdr.GetCommand()), pfrom->GetId());\n+    if (!msg.m_valid_netmagic) {\n+        LogPrint(BCLog::NET, \"PROCESSMESSAGE: INVALID MESSAGESTART %s peer=%d\\n\", SanitizeString(msg.m_command), pfrom->GetId());\n         pfrom->fDisconnect = true;\n         return false;\n     }\n \n     // Read header",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 21,
    "commit_id": "ed2dc5e48abed1cde6ab98025dc8212917d47d21",
    "original_commit_id": "2cd45b2f4e8cfdb2eac3c886bec10653b4a066b5",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: \"check header\"",
    "created_at": "2019-07-23T15:49:38Z",
    "updated_at": "2019-10-23T07:29:33Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16202#discussion_r306396755",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16202",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/306396755"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16202#discussion_r306396755"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16202"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/306396755/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3297,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/306397371",
    "pull_request_review_id": 265439462,
    "id": 306397371,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNjM5NzM3MQ==",
    "diff_hunk": "@@ -647,7 +659,12 @@ class TransportDeserializer {\n         hdrbuf.SetVersion(nVersionIn);\n         vRecv.SetVersion(nVersionIn);\n     }\n-\n+    bool OversizedMessageDetected() const {\n+        return (in_data && hdr.nMessageSize > MAX_PROTOCOL_MESSAGE_LENGTH);\n+    }\n+    int Read(const char *pch, unsigned int nBytes) {\n+        return in_data ? readData(pch, nBytes) : readHeader(pch, nBytes);\n+    }\n     int readHeader(const char *pch, unsigned int nBytes);",
    "path": "src/net.h",
    "position": null,
    "original_position": 48,
    "commit_id": "ed2dc5e48abed1cde6ab98025dc8212917d47d21",
    "original_commit_id": "7bd4dd216094729a69f53a1916d66350f1099892",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "And if yes, I think checks in `ProcessMessages` won't have anymore a reason to exist?",
    "created_at": "2019-07-23T15:50:45Z",
    "updated_at": "2019-10-23T07:29:33Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16202#discussion_r306397371",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16202",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/306397371"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16202#discussion_r306397371"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16202"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/306397371/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 668,
    "side": "RIGHT",
    "in_reply_to_id": 306343247
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/306648411",
    "pull_request_review_id": 265817301,
    "id": 306648411,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNjY0ODQxMQ==",
    "diff_hunk": "@@ -647,7 +659,12 @@ class TransportDeserializer {\n         hdrbuf.SetVersion(nVersionIn);\n         vRecv.SetVersion(nVersionIn);\n     }\n-\n+    bool OversizedMessageDetected() const {\n+        return (in_data && hdr.nMessageSize > MAX_PROTOCOL_MESSAGE_LENGTH);\n+    }\n+    int Read(const char *pch, unsigned int nBytes) {\n+        return in_data ? readData(pch, nBytes) : readHeader(pch, nBytes);\n+    }\n     int readHeader(const char *pch, unsigned int nBytes);",
    "path": "src/net.h",
    "position": null,
    "original_position": 48,
    "commit_id": "ed2dc5e48abed1cde6ab98025dc8212917d47d21",
    "original_commit_id": "7bd4dd216094729a69f53a1916d66350f1099892",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I agree with that they should be private methods (will fix).\r\nBut I don't think we should make behavioral changes in this PR that's why I tried to not move the checks.\r\nPRs that \"optimize\" those checks are #15206 and #15197.",
    "created_at": "2019-07-24T06:40:48Z",
    "updated_at": "2019-10-23T07:29:33Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16202#discussion_r306648411",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16202",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/306648411"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16202#discussion_r306648411"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16202"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/306648411/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 668,
    "side": "RIGHT",
    "in_reply_to_id": 306343247
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/306650400",
    "pull_request_review_id": 265819896,
    "id": 306650400,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNjY1MDQwMA==",
    "diff_hunk": "@@ -678,14 +679,40 @@ int CNetMessage::readData(const char *pch, unsigned int nBytes)\n     return nCopy;\n }\n \n-const uint256& CNetMessage::GetMessageHash() const\n+const uint256& TransportDeserializer::GetMessageHash() const\n {\n     assert(complete());\n     if (data_hash.IsNull())\n         hasher.Finalize(data_hash.begin());\n     return data_hash;\n }\n \n+CNetMessage TransportDeserializer::GetMessage(const CMessageHeader::MessageStartChars& message_start, int64_t time) {\n+    // decompose a single CNetMessage from the TransportDeserializer\n+    CNetMessage msg(vRecv);\n+\n+    // store state about valid header, netmagic and checksum\n+    msg.m_valid_header = hdr.IsValid(message_start);\n+    msg.m_valid_netmagic = (memcmp(hdr.pchMessageStart, message_start, CMessageHeader::MESSAGE_START_SIZE) == 0);",
    "path": "src/net.cpp",
    "position": 106,
    "original_position": 100,
    "commit_id": "ed2dc5e48abed1cde6ab98025dc8212917d47d21",
    "original_commit_id": "2cd45b2f4e8cfdb2eac3c886bec10653b4a066b5",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yes. It's redundant for the same reason as said above. Further optimizations would change the behavior of v1 decomposing.\r\n\r\n`ProcessMessages()` happens after de-queuing deserialized messages. If we would check during deserialization (and disconnect), we would change the behavior.\r\n\r\nAlso, `ProcessMessages()` differentiates between invalid netmagic and invalid header. It tolerates invalid headers (while not invalid netmagics), thus we need a way to transport those check-states without breaking the current behavior.\r\n\r\nSince this PR aims to do a refactoring, I don't think behavioral changes are ideal here.",
    "created_at": "2019-07-24T06:48:17Z",
    "updated_at": "2019-10-23T07:29:33Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16202#discussion_r306650400",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16202",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/306650400"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16202#discussion_r306650400"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16202"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/306650400/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 691,
    "original_line": 699,
    "side": "RIGHT",
    "in_reply_to_id": 306382732
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/306650745",
    "pull_request_review_id": 265820339,
    "id": 306650745,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNjY1MDc0NQ==",
    "diff_hunk": "@@ -570,8 +570,39 @@ class CNodeStats\n \n \n \n-\n+/** Transport protocol agnostic message container.\n+ * Ideally it should only contain receive time, payload,\n+ * command and size.\n+ */\n class CNetMessage {\n+public:\n+    CDataStream m_recv;              // received message data\n+    int64_t m_time;                  // time (in microseconds) of message receipt.\n+    bool m_valid_netmagic;",
    "path": "src/net.h",
    "position": null,
    "original_position": 13,
    "commit_id": "ed2dc5e48abed1cde6ab98025dc8212917d47d21",
    "original_commit_id": "2cd45b2f4e8cfdb2eac3c886bec10653b4a066b5",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Next step would be to further avoid transport-specific stuff in `ProcessMessages()`. I think  #15206 and #15197 are a good next step (would need rebase after this).",
    "created_at": "2019-07-24T06:49:35Z",
    "updated_at": "2019-10-23T07:29:33Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16202#discussion_r306650745",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16202",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/306650745"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16202#discussion_r306650745"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16202"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/306650745/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 620,
    "side": "RIGHT",
    "in_reply_to_id": 306388229
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/306878168",
    "pull_request_review_id": 266106052,
    "id": 306878168,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNjg3ODE2OA==",
    "diff_hunk": "@@ -570,8 +570,39 @@ class CNodeStats\n \n \n \n-\n+/** Transport protocol agnostic message container.\n+ * Ideally it should only contain receive time, payload,\n+ * command and size.\n+ */\n class CNetMessage {\n+public:\n+    CDataStream m_recv;              // received message data\n+    int64_t m_time;                  // time (in microseconds) of message receipt.\n+    bool m_valid_netmagic;",
    "path": "src/net.h",
    "position": null,
    "original_position": 13,
    "commit_id": "ed2dc5e48abed1cde6ab98025dc8212917d47d21",
    "original_commit_id": "2cd45b2f4e8cfdb2eac3c886bec10653b4a066b5",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Ok thanks, going to check them once they are rebased",
    "created_at": "2019-07-24T15:32:19Z",
    "updated_at": "2019-10-23T07:29:33Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16202#discussion_r306878168",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16202",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/306878168"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16202#discussion_r306878168"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16202"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/306878168/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 620,
    "side": "RIGHT",
    "in_reply_to_id": 306388229
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/306880677",
    "pull_request_review_id": 266109372,
    "id": 306880677,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNjg4MDY3Nw==",
    "diff_hunk": "@@ -678,14 +679,40 @@ int CNetMessage::readData(const char *pch, unsigned int nBytes)\n     return nCopy;\n }\n \n-const uint256& CNetMessage::GetMessageHash() const\n+const uint256& TransportDeserializer::GetMessageHash() const\n {\n     assert(complete());\n     if (data_hash.IsNull())\n         hasher.Finalize(data_hash.begin());\n     return data_hash;\n }\n \n+CNetMessage TransportDeserializer::GetMessage(const CMessageHeader::MessageStartChars& message_start, int64_t time) {\n+    // decompose a single CNetMessage from the TransportDeserializer\n+    CNetMessage msg(vRecv);\n+\n+    // store state about valid header, netmagic and checksum\n+    msg.m_valid_header = hdr.IsValid(message_start);\n+    msg.m_valid_netmagic = (memcmp(hdr.pchMessageStart, message_start, CMessageHeader::MESSAGE_START_SIZE) == 0);",
    "path": "src/net.cpp",
    "position": 106,
    "original_position": 100,
    "commit_id": "ed2dc5e48abed1cde6ab98025dc8212917d47d21",
    "original_commit_id": "2cd45b2f4e8cfdb2eac3c886bec10653b4a066b5",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Ah yes exact, you may have a valid netmagic and an invalid header and get accepted. \r\n\r\nOkay, I agree if these points are addressed later in behavioral changes specific PRs that's better than everything at once. ",
    "created_at": "2019-07-24T15:37:19Z",
    "updated_at": "2019-10-23T07:29:33Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16202#discussion_r306880677",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16202",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/306880677"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16202#discussion_r306880677"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16202"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/306880677/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 691,
    "original_line": 699,
    "side": "RIGHT",
    "in_reply_to_id": 306382732
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/307326085",
    "pull_request_review_id": 266664679,
    "id": 307326085,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNzMyNjA4NQ==",
    "diff_hunk": "@@ -570,56 +570,115 @@ class CNodeStats\n \n \n \n-\n+/** Transport protocol agnostic message container.\n+ * Ideally it should only contain receive time, payload,\n+ * command and size.\n+ */\n class CNetMessage {\n+public:\n+    CDataStream m_recv;              // received message data\n+    int64_t m_time;                  // time (in microseconds) of message receipt.\n+    bool m_valid_netmagic;\n+    bool m_valid_header;\n+    bool m_valid_checksum;\n+    uint32_t m_message_size;         // size of the payload\n+    uint32_t m_raw_message_size;     // used wire size of the message (including header/checksum)\n+    std::string m_command;\n+\n+    CNetMessage(const CDataStream& recv_in) : m_recv(recv_in) {\n+        m_time = 0;\n+        m_valid_netmagic = false;\n+        m_valid_header = false;\n+        m_valid_checksum = false;\n+        m_message_size = 0;\n+        m_raw_message_size = 0;\n+    }\n+\n+    void SetVersion(int nVersionIn)\n+    {\n+        m_recv.SetVersion(nVersionIn);\n+    }\n+};\n+\n+/** The TransportDeserializer takes care of holding and deserializing the\n+ * network receive buffer. It can deserialize the network buffer into a\n+ * transport protocol agnostic CNetMessage (command & payload)\n+ */\n+class TransportDeserializer {\n+public:\n+    // prepare for next message\n+    virtual void Reset() = 0;\n+    // retruns true if the current deserialization is complete",
    "path": "src/net.h",
    "position": null,
    "original_position": 43,
    "commit_id": "ed2dc5e48abed1cde6ab98025dc8212917d47d21",
    "original_commit_id": "e85d88de78a3866119eb10d00e6d74732e300e98",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: s/retruns/returns/",
    "created_at": "2019-07-25T14:28:35Z",
    "updated_at": "2019-10-23T07:29:33Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16202#discussion_r307326085",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16202",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/307326085"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16202#discussion_r307326085"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16202"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/307326085/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 611,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/310567059",
    "pull_request_review_id": 270718787,
    "id": 310567059,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxMDU2NzA1OQ==",
    "diff_hunk": "@@ -570,56 +570,115 @@ class CNodeStats\n \n \n \n-\n+/** Transport protocol agnostic message container.\n+ * Ideally it should only contain receive time, payload,\n+ * command and size.\n+ */\n class CNetMessage {\n+public:\n+    CDataStream m_recv;              // received message data\n+    int64_t m_time;                  // time (in microseconds) of message receipt.\n+    bool m_valid_netmagic;\n+    bool m_valid_header;\n+    bool m_valid_checksum;\n+    uint32_t m_message_size;         // size of the payload\n+    uint32_t m_raw_message_size;     // used wire size of the message (including header/checksum)\n+    std::string m_command;\n+\n+    CNetMessage(const CDataStream& recv_in) : m_recv(recv_in) {\n+        m_time = 0;\n+        m_valid_netmagic = false;\n+        m_valid_header = false;\n+        m_valid_checksum = false;\n+        m_message_size = 0;\n+        m_raw_message_size = 0;\n+    }\n+\n+    void SetVersion(int nVersionIn)\n+    {\n+        m_recv.SetVersion(nVersionIn);\n+    }\n+};\n+\n+/** The TransportDeserializer takes care of holding and deserializing the\n+ * network receive buffer. It can deserialize the network buffer into a\n+ * transport protocol agnostic CNetMessage (command & payload)\n+ */\n+class TransportDeserializer {\n+public:\n+    // prepare for next message\n+    virtual void Reset() = 0;\n+    // retruns true if the current deserialization is complete",
    "path": "src/net.h",
    "position": null,
    "original_position": 43,
    "commit_id": "ed2dc5e48abed1cde6ab98025dc8212917d47d21",
    "original_commit_id": "e85d88de78a3866119eb10d00e6d74732e300e98",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "fixed.",
    "created_at": "2019-08-05T11:54:56Z",
    "updated_at": "2019-10-23T07:29:33Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16202#discussion_r310567059",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16202",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/310567059"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16202#discussion_r310567059"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16202"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/310567059/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 611,
    "side": "RIGHT",
    "in_reply_to_id": 307326085
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/321387249",
    "pull_request_review_id": 284419749,
    "id": 321387249,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyMTM4NzI0OQ==",
    "diff_hunk": "@@ -3280,7 +3280,7 @@ bool PeerLogicValidation::ProcessMessages(CNode* pfrom, std::atomic<bool>& inter\n             return false;\n         // Just take one message\n         msgs.splice(msgs.begin(), pfrom->vProcessMsg, pfrom->vProcessMsg.begin());\n-        pfrom->nProcessQueueSize -= msgs.front().m_recv.size() + CMessageHeader::HEADER_SIZE;\n+        pfrom->nProcessQueueSize -= msgs.front().m_raw_message_size;",
    "path": "src/net_processing.cpp",
    "position": 5,
    "original_position": 5,
    "commit_id": "ed2dc5e48abed1cde6ab98025dc8212917d47d21",
    "original_commit_id": "b830a602b85edb414c5a6add4481b56af19fb628",
    "user": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Had to do a double-take here... But this shouldn't change behaviour as `msgs.front().m_recv.size()` is always equal to `msgs.front().m_message_size` because the `msgs.front().m_recv` hasn't advanced its `nReadPos` yet. Verified by placing an assert and running the unit and functional tests.",
    "created_at": "2019-09-05T17:24:31Z",
    "updated_at": "2019-10-23T07:29:33Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16202#discussion_r321387249",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16202",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/321387249"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16202#discussion_r321387249"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16202"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/321387249/reactions",
      "total_count": 4,
      "+1": 4,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 3263,
    "original_line": 3263,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/328190108",
    "pull_request_review_id": 293166933,
    "id": 328190108,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyODE5MDEwOA==",
    "diff_hunk": "@@ -570,8 +570,39 @@ class CNodeStats\n \n \n \n-\n+/** Transport protocol agnostic message container.\n+ * Ideally it should only contain receive time, payload,\n+ * command and size.\n+ */\n class CNetMessage {\n+public:\n+    CDataStream m_recv;              // received message data\n+    int64_t m_time;                  // time (in microseconds) of message receipt.\n+    bool m_valid_netmagic;\n+    bool m_valid_header;\n+    bool m_valid_checksum;\n+    uint32_t m_message_size;         // size of the payload\n+    std::string m_command;\n+\n+    CNetMessage(const CDataStream& recv_in) : m_recv(std::move(recv_in)) {\n+        m_time = 0;",
    "path": "src/net.h",
    "position": null,
    "original_position": 20,
    "commit_id": "ed2dc5e48abed1cde6ab98025dc8212917d47d21",
    "original_commit_id": "6b18269ca7d5f38d7bffb267e359e982606a9bf4",
    "user": {
      "login": "jkczyz",
      "id": 4015903,
      "node_id": "MDQ6VXNlcjQwMTU5MDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jkczyz",
      "html_url": "https://github.com/jkczyz",
      "followers_url": "https://api.github.com/users/jkczyz/followers",
      "following_url": "https://api.github.com/users/jkczyz/following{/other_user}",
      "gists_url": "https://api.github.com/users/jkczyz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jkczyz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
      "organizations_url": "https://api.github.com/users/jkczyz/orgs",
      "repos_url": "https://api.github.com/users/jkczyz/repos",
      "events_url": "https://api.github.com/users/jkczyz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jkczyz/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Nit: Use default member initializers for these rather than repeating the members in the constructor.",
    "created_at": "2019-09-25T15:26:46Z",
    "updated_at": "2019-10-23T07:29:33Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16202#discussion_r328190108",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16202",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/328190108"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16202#discussion_r328190108"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16202"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/328190108/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 628,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/328198724",
    "pull_request_review_id": 293166933,
    "id": 328198724,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMyODE5ODcyNA==",
    "diff_hunk": "@@ -585,14 +616,19 @@ class CNetMessage {\n     CDataStream vRecv;              // received message data\n     unsigned int nDataPos;\n \n-    int64_t nTime;                  // time (in microseconds) of message receipt.\n+    TransportDeserializer(const CMessageHeader::MessageStartChars& pchMessageStartIn, int nTypeIn, int nVersionIn) : hdrbuf(nTypeIn, nVersionIn), hdr(pchMessageStartIn), vRecv(nTypeIn, nVersionIn) {\n+        Reset();\n+    }\n \n-    CNetMessage(const CMessageHeader::MessageStartChars& pchMessageStartIn, int nTypeIn, int nVersionIn) : hdrbuf(nTypeIn, nVersionIn), hdr(pchMessageStartIn), vRecv(nTypeIn, nVersionIn) {\n+    void Reset() {",
    "path": "src/net.h",
    "position": 67,
    "original_position": 51,
    "commit_id": "ed2dc5e48abed1cde6ab98025dc8212917d47d21",
    "original_commit_id": "6b18269ca7d5f38d7bffb267e359e982606a9bf4",
    "user": {
      "login": "jkczyz",
      "id": 4015903,
      "node_id": "MDQ6VXNlcjQwMTU5MDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jkczyz",
      "html_url": "https://github.com/jkczyz",
      "followers_url": "https://api.github.com/users/jkczyz/followers",
      "following_url": "https://api.github.com/users/jkczyz/following{/other_user}",
      "gists_url": "https://api.github.com/users/jkczyz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jkczyz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
      "organizations_url": "https://api.github.com/users/jkczyz/orgs",
      "repos_url": "https://api.github.com/users/jkczyz/repos",
      "events_url": "https://api.github.com/users/jkczyz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jkczyz/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Rather than implementing a custom `Reset` function, would it be simpler to use `unique_ptr::reset` with a new deserializer in `CNode` whenever a new message is parsed? That is, an instance of `TransportDeserializer` would be responsible for deserializing a single message. Then there is no risk of forgetting to update the `Reset` method as the code changes, which could leave the deserializer in a partially reset state.",
    "created_at": "2019-09-25T15:42:54Z",
    "updated_at": "2019-10-23T07:29:33Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16202#discussion_r328198724",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16202",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/328198724"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16202#discussion_r328198724"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16202"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/328198724/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 668,
    "original_line": 677,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/331308653",
    "pull_request_review_id": 297222003,
    "id": 331308653,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzMTMwODY1Mw==",
    "diff_hunk": "@@ -3280,49 +3280,45 @@ bool PeerLogicValidation::ProcessMessages(CNode* pfrom, std::atomic<bool>& inter\n             return false;\n         // Just take one message\n         msgs.splice(msgs.begin(), pfrom->vProcessMsg, pfrom->vProcessMsg.begin());\n-        pfrom->nProcessQueueSize -= msgs.front().vRecv.size() + CMessageHeader::HEADER_SIZE;\n+        pfrom->nProcessQueueSize -= msgs.front().m_raw_message_size;\n         pfrom->fPauseRecv = pfrom->nProcessQueueSize > connman->GetReceiveFloodSize();\n         fMoreWork = !pfrom->vProcessMsg.empty();\n     }\n     CNetMessage& msg(msgs.front());\n \n     msg.SetVersion(pfrom->GetRecvVersion());\n-    // Scan for message start\n-    if (memcmp(msg.hdr.pchMessageStart, chainparams.MessageStart(), CMessageHeader::MESSAGE_START_SIZE) != 0) {\n-        LogPrint(BCLog::NET, \"PROCESSMESSAGE: INVALID MESSAGESTART %s peer=%d\\n\", SanitizeString(msg.hdr.GetCommand()), pfrom->GetId());\n+    // Check network magic\n+    if (!msg.m_valid_netmagic) {\n+        LogPrint(BCLog::NET, \"PROCESSMESSAGE: INVALID MESSAGESTART %s peer=%d\\n\", SanitizeString(msg.m_command), pfrom->GetId());\n         pfrom->fDisconnect = true;\n         return false;\n     }\n \n-    // Read header\n-    CMessageHeader& hdr = msg.hdr;\n-    if (!hdr.IsValid(chainparams.MessageStart()))\n+    // Check header\n+    if (!msg.m_valid_header)\n     {\n-        LogPrint(BCLog::NET, \"PROCESSMESSAGE: ERRORS IN HEADER %s peer=%d\\n\", SanitizeString(hdr.GetCommand()), pfrom->GetId());\n+        LogPrint(BCLog::NET, \"PROCESSMESSAGE: ERRORS IN HEADER %s peer=%d\\n\", SanitizeString(msg.m_command), pfrom->GetId());\n         return fMoreWork;\n     }\n-    std::string strCommand = hdr.GetCommand();\n+    std::string strCommand = msg.m_command;\n \n     // Message size\n-    unsigned int nMessageSize = hdr.nMessageSize;\n+    unsigned int nMessageSize = msg.m_message_size;\n \n     // Checksum\n-    CDataStream& vRecv = msg.vRecv;\n-    const uint256& hash = msg.GetMessageHash();\n-    if (memcmp(hash.begin(), hdr.pchChecksum, CMessageHeader::CHECKSUM_SIZE) != 0)\n+    CDataStream& vRecv = msg.m_recv;\n+    if (!msg.m_valid_checksum)\n     {\n-        LogPrint(BCLog::NET, \"%s(%s, %u bytes): CHECKSUM ERROR expected %s was %s\\n\", __func__,\n-           SanitizeString(strCommand), nMessageSize,\n-           HexStr(hash.begin(), hash.begin()+CMessageHeader::CHECKSUM_SIZE),\n-           HexStr(hdr.pchChecksum, hdr.pchChecksum+CMessageHeader::CHECKSUM_SIZE));\n+        LogPrint(BCLog::NET, \"%s(%s, %u bytes): CHECKSUM ERROR\\n\", __func__,",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 50,
    "commit_id": "ed2dc5e48abed1cde6ab98025dc8212917d47d21",
    "original_commit_id": "7370bed970e9455dc686c8088dd3e3afb219bbee",
    "user": {
      "login": "marcinja",
      "id": 12243734,
      "node_id": "MDQ6VXNlcjEyMjQzNzM0",
      "avatar_url": "https://avatars.githubusercontent.com/u/12243734?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/marcinja",
      "html_url": "https://github.com/marcinja",
      "followers_url": "https://api.github.com/users/marcinja/followers",
      "following_url": "https://api.github.com/users/marcinja/following{/other_user}",
      "gists_url": "https://api.github.com/users/marcinja/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/marcinja/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
      "organizations_url": "https://api.github.com/users/marcinja/orgs",
      "repos_url": "https://api.github.com/users/marcinja/repos",
      "events_url": "https://api.github.com/users/marcinja/events{/privacy}",
      "received_events_url": "https://api.github.com/users/marcinja/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "It might be useful to  print `pfrom->GetId()` in here also. ",
    "created_at": "2019-10-04T00:56:30Z",
    "updated_at": "2019-10-23T07:29:33Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16202#discussion_r331308653",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16202",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/331308653"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16202#discussion_r331308653"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16202"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/331308653/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3292,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/335215820",
    "pull_request_review_id": 302246053,
    "id": 335215820,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzNTIxNTgyMA==",
    "diff_hunk": "@@ -570,42 +570,42 @@ bool CNode::ReceiveMsgBytes(const char *pch, unsigned int nBytes, bool& complete\n     nLastRecv = nTimeMicros / 1000000;\n     nRecvBytes += nBytes;\n     while (nBytes > 0) {\n-\n-        // get current incomplete message, or create a new one\n-        if (vRecvMsg.empty() ||\n-            vRecvMsg.back().complete())\n-            vRecvMsg.push_back(CNetMessage(Params().MessageStart(), SER_NETWORK, INIT_PROTO_VERSION));\n-\n-        CNetMessage& msg = vRecvMsg.back();\n-\n         // absorb network data\n         int handled;\n-        if (!msg.in_data)\n-            handled = msg.readHeader(pch, nBytes);\n+        if (!m_deserializer->in_data)\n+            handled = m_deserializer->readHeader(pch, nBytes);\n         else\n-            handled = msg.readData(pch, nBytes);\n+            handled = m_deserializer->readData(pch, nBytes);\n \n-        if (handled < 0)\n+        if (handled < 0) {\n+            m_deserializer->Reset();\n             return false;\n+        }\n \n-        if (msg.in_data && msg.hdr.nMessageSize > MAX_PROTOCOL_MESSAGE_LENGTH) {\n+        if (m_deserializer->in_data && m_deserializer->hdr.nMessageSize > MAX_PROTOCOL_MESSAGE_LENGTH) {\n             LogPrint(BCLog::NET, \"Oversized message from peer=%i, disconnecting\\n\", GetId());\n+            m_deserializer->Reset();\n             return false;\n         }\n \n         pch += handled;\n         nBytes -= handled;\n \n-        if (msg.complete()) {\n+        if (m_deserializer->complete()) {\n+            // decompose a transport agnostic CNetMessage from the deserializer\n+            CNetMessage msg = m_deserializer->GetMessage(Params().MessageStart(), nTimeMicros);\n+\n             //store received bytes per message command\n             //to prevent a memory DOS, only allow valid commands\n-            mapMsgCmdSize::iterator i = mapRecvBytesPerMsgCmd.find(msg.hdr.pchCommand);\n+            mapMsgCmdSize::iterator i = mapRecvBytesPerMsgCmd.find(m_deserializer->hdr.pchCommand);",
    "path": "src/net.cpp",
    "position": null,
    "original_position": 46,
    "commit_id": "ed2dc5e48abed1cde6ab98025dc8212917d47d21",
    "original_commit_id": "d8c3e95a443cb581825e0d4456f0b7886960e489",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "d8c3e95a443cb581825e0d4456f0b7886960e489\r\n\r\nJust use `msg`:\r\n```cpp\r\nmapMsgCmdSize::iterator i = mapRecvBytesPerMsgCmd.find(msg.m_command);\r\n```",
    "created_at": "2019-10-15T23:08:18Z",
    "updated_at": "2019-10-23T07:29:33Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16202#discussion_r335215820",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16202",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/335215820"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16202#discussion_r335215820"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16202"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/335215820/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 600,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/335216152",
    "pull_request_review_id": 302246053,
    "id": 335216152,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzNTIxNjE1Mg==",
    "diff_hunk": "@@ -570,42 +570,42 @@ bool CNode::ReceiveMsgBytes(const char *pch, unsigned int nBytes, bool& complete\n     nLastRecv = nTimeMicros / 1000000;\n     nRecvBytes += nBytes;\n     while (nBytes > 0) {\n-\n-        // get current incomplete message, or create a new one\n-        if (vRecvMsg.empty() ||\n-            vRecvMsg.back().complete())\n-            vRecvMsg.push_back(CNetMessage(Params().MessageStart(), SER_NETWORK, INIT_PROTO_VERSION));\n-\n-        CNetMessage& msg = vRecvMsg.back();\n-\n         // absorb network data\n         int handled;\n-        if (!msg.in_data)\n-            handled = msg.readHeader(pch, nBytes);\n+        if (!m_deserializer->in_data)\n+            handled = m_deserializer->readHeader(pch, nBytes);\n         else\n-            handled = msg.readData(pch, nBytes);\n+            handled = m_deserializer->readData(pch, nBytes);\n \n-        if (handled < 0)\n+        if (handled < 0) {\n+            m_deserializer->Reset();\n             return false;\n+        }\n \n-        if (msg.in_data && msg.hdr.nMessageSize > MAX_PROTOCOL_MESSAGE_LENGTH) {\n+        if (m_deserializer->in_data && m_deserializer->hdr.nMessageSize > MAX_PROTOCOL_MESSAGE_LENGTH) {\n             LogPrint(BCLog::NET, \"Oversized message from peer=%i, disconnecting\\n\", GetId());\n+            m_deserializer->Reset();\n             return false;\n         }\n \n         pch += handled;\n         nBytes -= handled;\n \n-        if (msg.complete()) {\n+        if (m_deserializer->complete()) {\n+            // decompose a transport agnostic CNetMessage from the deserializer\n+            CNetMessage msg = m_deserializer->GetMessage(Params().MessageStart(), nTimeMicros);\n+\n             //store received bytes per message command\n             //to prevent a memory DOS, only allow valid commands\n-            mapMsgCmdSize::iterator i = mapRecvBytesPerMsgCmd.find(msg.hdr.pchCommand);\n+            mapMsgCmdSize::iterator i = mapRecvBytesPerMsgCmd.find(m_deserializer->hdr.pchCommand);\n             if (i == mapRecvBytesPerMsgCmd.end())\n                 i = mapRecvBytesPerMsgCmd.find(NET_MESSAGE_COMMAND_OTHER);\n             assert(i != mapRecvBytesPerMsgCmd.end());\n-            i->second += msg.hdr.nMessageSize + CMessageHeader::HEADER_SIZE;\n+            i->second += m_deserializer->hdr.nMessageSize + CMessageHeader::HEADER_SIZE;",
    "path": "src/net.cpp",
    "position": null,
    "original_position": 51,
    "commit_id": "ed2dc5e48abed1cde6ab98025dc8212917d47d21",
    "original_commit_id": "d8c3e95a443cb581825e0d4456f0b7886960e489",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "d8c3e95a443cb581825e0d4456f0b7886960e489\r\n\r\n```cpp\r\ni->second += msg.m_message_size + CMessageHeader::HEADER_SIZE;\r\n```",
    "created_at": "2019-10-15T23:09:44Z",
    "updated_at": "2019-10-23T07:29:33Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16202#discussion_r335216152",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16202",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/335216152"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16202#discussion_r335216152"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16202"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/335216152/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 604,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/335216505",
    "pull_request_review_id": 302246053,
    "id": 335216505,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzNTIxNjUwNQ==",
    "diff_hunk": "@@ -688,14 +687,42 @@ int CNetMessage::readData(const char *pch, unsigned int nBytes)\n     return nCopy;\n }\n \n-const uint256& CNetMessage::GetMessageHash() const\n+const uint256& TransportDeserializer::GetMessageHash() const\n {\n     assert(complete());\n     if (data_hash.IsNull())\n         hasher.Finalize(data_hash.begin());\n     return data_hash;\n }\n \n+CNetMessage TransportDeserializer::GetMessage(const CMessageHeader::MessageStartChars& message_start, int64_t time) {\n+    // decompose a single CNetMessage from the TransportDeserializer\n+    CNetMessage msg(std::move(vRecv));\n+\n+    // store state about valid header, netmagic and checksum\n+    msg.m_valid_header = hdr.IsValid(message_start);\n+    msg.m_valid_netmagic = (memcmp(hdr.pchMessageStart, message_start, CMessageHeader::MESSAGE_START_SIZE) == 0);\n+    uint256 hash = GetMessageHash();\n+    msg.m_valid_checksum = (memcmp(hash.begin(), hdr.pchChecksum, CMessageHeader::CHECKSUM_SIZE) == 0);\n+    if (!msg.m_valid_checksum) {\n+        LogPrint(BCLog::NET, \"CHECKSUM ERROR (%s, %u bytes), expected %s was %s\\n\",\n+                 SanitizeString(hdr.GetCommand()), hdr.nMessageSize,\n+                 HexStr(hash.begin(), hash.begin()+CMessageHeader::CHECKSUM_SIZE),\n+                 HexStr(hdr.pchChecksum, hdr.pchChecksum+CMessageHeader::CHECKSUM_SIZE));\n+    }\n+\n+    // store command string, payload size\n+    msg.m_command = hdr.GetCommand();",
    "path": "src/net.cpp",
    "position": null,
    "original_position": 109,
    "commit_id": "ed2dc5e48abed1cde6ab98025dc8212917d47d21",
    "original_commit_id": "d8c3e95a443cb581825e0d4456f0b7886960e489",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "d8c3e95a443cb581825e0d4456f0b7886960e489\r\n\r\nnit, could move these up before L707 and avoid the duplicate `GetCommand()` in L709.",
    "created_at": "2019-10-15T23:11:14Z",
    "updated_at": "2019-10-23T07:29:33Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16202#discussion_r335216505",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16202",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/335216505"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16202#discussion_r335216505"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16202"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/335216505/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 715,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/335217170",
    "pull_request_review_id": 302246053,
    "id": 335217170,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzNTIxNzE3MA==",
    "diff_hunk": "@@ -570,8 +570,39 @@ class CNodeStats\n \n \n \n-\n+/** Transport protocol agnostic message container.\n+ * Ideally it should only contain receive time, payload,\n+ * command and size.\n+ */\n class CNetMessage {\n+public:\n+    CDataStream m_recv;              // received message data\n+    int64_t m_time;                  // time (in microseconds) of message receipt.\n+    bool m_valid_netmagic;\n+    bool m_valid_header;\n+    bool m_valid_checksum;\n+    uint32_t m_message_size;         // size of the payload\n+    std::string m_command;\n+\n+    CNetMessage(const CDataStream& recv_in) : m_recv(std::move(recv_in)) {\n+        m_time = 0;",
    "path": "src/net.h",
    "position": null,
    "original_position": 20,
    "commit_id": "ed2dc5e48abed1cde6ab98025dc8212917d47d21",
    "original_commit_id": "6b18269ca7d5f38d7bffb267e359e982606a9bf4",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "d8c3e95a443cb581825e0d4456f0b7886960e489\r\n\r\nAgree with @jkczyz.",
    "created_at": "2019-10-15T23:14:11Z",
    "updated_at": "2019-10-23T07:29:33Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16202#discussion_r335217170",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16202",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/335217170"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16202#discussion_r335217170"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16202"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/335217170/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 628,
    "side": "RIGHT",
    "in_reply_to_id": 328190108
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/335218509",
    "pull_request_review_id": 302246053,
    "id": 335218509,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzNTIxODUwOQ==",
    "diff_hunk": "@@ -3260,49 +3260,45 @@ bool PeerLogicValidation::ProcessMessages(CNode* pfrom, std::atomic<bool>& inter\n             return false;\n         // Just take one message\n         msgs.splice(msgs.begin(), pfrom->vProcessMsg, pfrom->vProcessMsg.begin());\n-        pfrom->nProcessQueueSize -= msgs.front().vRecv.size() + CMessageHeader::HEADER_SIZE;\n+        pfrom->nProcessQueueSize -= msgs.front().m_recv.size() + CMessageHeader::HEADER_SIZE;\n         pfrom->fPauseRecv = pfrom->nProcessQueueSize > connman->GetReceiveFloodSize();\n         fMoreWork = !pfrom->vProcessMsg.empty();\n     }\n     CNetMessage& msg(msgs.front());\n \n     msg.SetVersion(pfrom->GetRecvVersion());\n-    // Scan for message start\n-    if (memcmp(msg.hdr.pchMessageStart, chainparams.MessageStart(), CMessageHeader::MESSAGE_START_SIZE) != 0) {\n-        LogPrint(BCLog::NET, \"PROCESSMESSAGE: INVALID MESSAGESTART %s peer=%d\\n\", SanitizeString(msg.hdr.GetCommand()), pfrom->GetId());\n+    // Check network magic\n+    if (!msg.m_valid_netmagic) {\n+        LogPrint(BCLog::NET, \"PROCESSMESSAGE: INVALID MESSAGESTART %s peer=%d\\n\", SanitizeString(msg.m_command), pfrom->GetId());\n         pfrom->fDisconnect = true;\n         return false;\n     }\n \n-    // Read header\n-    CMessageHeader& hdr = msg.hdr;\n-    if (!hdr.IsValid(chainparams.MessageStart()))\n+    // Check header\n+    if (!msg.m_valid_header)\n     {\n-        LogPrint(BCLog::NET, \"PROCESSMESSAGE: ERRORS IN HEADER %s peer=%d\\n\", SanitizeString(hdr.GetCommand()), pfrom->GetId());\n+        LogPrint(BCLog::NET, \"PROCESSMESSAGE: ERRORS IN HEADER %s peer=%d\\n\", SanitizeString(msg.m_command), pfrom->GetId());\n         return fMoreWork;\n     }\n-    std::string strCommand = hdr.GetCommand();\n+    std::string strCommand = msg.m_command;",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 33,
    "commit_id": "ed2dc5e48abed1cde6ab98025dc8212917d47d21",
    "original_commit_id": "d8c3e95a443cb581825e0d4456f0b7886960e489",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "d8c3e95a443cb581825e0d4456f0b7886960e489\r\n\r\nMake this `const std::string&`? Changed locally and looks good.",
    "created_at": "2019-10-15T23:20:03Z",
    "updated_at": "2019-10-23T07:29:33Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16202#discussion_r335218509",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16202",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/335218509"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16202#discussion_r335218509"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16202"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/335218509/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3283,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/335219338",
    "pull_request_review_id": 302246053,
    "id": 335219338,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzNTIxOTMzOA==",
    "diff_hunk": "@@ -644,20 +644,40 @@ class CNetMessage {\n  * transport protocol agnostic CNetMessage (command & payload)\n  */\n class TransportDeserializer {\n+public:\n+    // prepare for next message\n+    virtual void Reset() = 0;\n+    // returns true if the current deserialization is complete\n+    virtual bool Complete() const = 0;\n+    // checks if the potential message in deserialization is oversized\n+    virtual bool OversizedMessageDetected() const = 0;\n+    // set the serialization context version\n+    virtual void SetVersion(int nVersionIn) = 0;",
    "path": "src/net.h",
    "position": null,
    "original_position": 12,
    "commit_id": "ed2dc5e48abed1cde6ab98025dc8212917d47d21",
    "original_commit_id": "b8e9633d127fd1e740b3c9e25a6ed5d480a77f25",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "b8e9633d127fd1e740b3c9e25a6ed5d480a77f25\r\n\r\nnit, use correct style in new code? `int version`.",
    "created_at": "2019-10-15T23:23:34Z",
    "updated_at": "2019-10-23T07:29:33Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16202#discussion_r335219338",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16202",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/335219338"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16202#discussion_r335219338"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16202"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/335219338/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 655,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/335219454",
    "pull_request_review_id": 302246053,
    "id": 335219454,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzNTIxOTQ1NA==",
    "diff_hunk": "@@ -644,20 +644,40 @@ class CNetMessage {\n  * transport protocol agnostic CNetMessage (command & payload)\n  */\n class TransportDeserializer {\n+public:\n+    // prepare for next message\n+    virtual void Reset() = 0;\n+    // returns true if the current deserialization is complete\n+    virtual bool Complete() const = 0;\n+    // checks if the potential message in deserialization is oversized\n+    virtual bool OversizedMessageDetected() const = 0;\n+    // set the serialization context version\n+    virtual void SetVersion(int nVersionIn) = 0;\n+    // read and deserialize data\n+    virtual int Read(const char *pch, unsigned int nBytes) = 0;",
    "path": "src/net.h",
    "position": null,
    "original_position": 14,
    "commit_id": "ed2dc5e48abed1cde6ab98025dc8212917d47d21",
    "original_commit_id": "b8e9633d127fd1e740b3c9e25a6ed5d480a77f25",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "b8e9633d127fd1e740b3c9e25a6ed5d480a77f25\r\n\r\nnit, `virtual int Read(const char* data, unsigned int bytes) = 0`\r\n",
    "created_at": "2019-10-15T23:24:02Z",
    "updated_at": "2019-10-23T07:29:33Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16202#discussion_r335219454",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16202",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/335219454"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16202#discussion_r335219454"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16202"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/335219454/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 657,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/336341668",
    "pull_request_review_id": 303693276,
    "id": 336341668,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzNjM0MTY2OA==",
    "diff_hunk": "@@ -585,14 +616,19 @@ class CNetMessage {\n     CDataStream vRecv;              // received message data\n     unsigned int nDataPos;\n \n-    int64_t nTime;                  // time (in microseconds) of message receipt.\n+    TransportDeserializer(const CMessageHeader::MessageStartChars& pchMessageStartIn, int nTypeIn, int nVersionIn) : hdrbuf(nTypeIn, nVersionIn), hdr(pchMessageStartIn), vRecv(nTypeIn, nVersionIn) {\n+        Reset();\n+    }\n \n-    CNetMessage(const CMessageHeader::MessageStartChars& pchMessageStartIn, int nTypeIn, int nVersionIn) : hdrbuf(nTypeIn, nVersionIn), hdr(pchMessageStartIn), vRecv(nTypeIn, nVersionIn) {\n+    void Reset() {",
    "path": "src/net.h",
    "position": 67,
    "original_position": 51,
    "commit_id": "ed2dc5e48abed1cde6ab98025dc8212917d47d21",
    "original_commit_id": "6b18269ca7d5f38d7bffb267e359e982606a9bf4",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "For the current use case, I find a explicit manual reset better understand- and readable.",
    "created_at": "2019-10-18T06:51:13Z",
    "updated_at": "2019-10-23T07:29:33Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16202#discussion_r336341668",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16202",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/336341668"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16202#discussion_r336341668"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16202"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/336341668/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 668,
    "original_line": 677,
    "side": "RIGHT",
    "in_reply_to_id": 328198724
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/336612138",
    "pull_request_review_id": 304040072,
    "id": 336612138,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzNjYxMjEzOA==",
    "diff_hunk": "@@ -609,8 +609,33 @@ class CNodeStats\n \n \n \n-\n+/** Transport protocol agnostic message container.\n+ * Ideally it should only contain receive time, payload,\n+ * command and size.\n+ */\n class CNetMessage {\n+public:\n+    CDataStream m_recv;                  // received message data\n+    int64_t m_time = 0;                  // time (in microseconds) of message receipt.\n+    bool m_valid_netmagic = false;\n+    bool m_valid_header = false;\n+    bool m_valid_checksum = false;\n+    uint32_t m_message_size = 0;         // size of the payload\n+    std::string m_command;\n+\n+    CNetMessage(const CDataStream& recv_in) : m_recv(std::move(recv_in)) {}",
    "path": "src/net.h",
    "position": null,
    "original_position": 19,
    "commit_id": "ed2dc5e48abed1cde6ab98025dc8212917d47d21",
    "original_commit_id": "6294ecdb8bb4eb7049a18c721ee8cb4a53d80a06",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"Refactor: split network transport deserializing from message container\" (6294ecdb8bb4eb7049a18c721ee8cb4a53d80a06)\r\n\r\nstd::move here is misleading, and will result in a copy because recv_in is const. Would suggest dropping std::move or changing the argument type to non-const `CDataStream recv_in` (if you want to give the caller the option of moving or copying) or `CDataStream&& recv_in` (if you want to force the caller to move).",
    "created_at": "2019-10-18T18:04:19Z",
    "updated_at": "2019-10-23T07:29:33Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16202#discussion_r336612138",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16202",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/336612138"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16202#discussion_r336612138"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16202"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/336612138/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 626,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/336619783",
    "pull_request_review_id": 304040072,
    "id": 336619783,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzNjYxOTc4Mw==",
    "diff_hunk": "@@ -688,14 +687,43 @@ int CNetMessage::readData(const char *pch, unsigned int nBytes)\n     return nCopy;\n }\n \n-const uint256& CNetMessage::GetMessageHash() const\n+const uint256& TransportDeserializer::GetMessageHash() const\n {\n     assert(complete());\n     if (data_hash.IsNull())\n         hasher.Finalize(data_hash.begin());\n     return data_hash;\n }\n \n+CNetMessage TransportDeserializer::GetMessage(const CMessageHeader::MessageStartChars& message_start, int64_t time) {\n+    // decompose a single CNetMessage from the TransportDeserializer\n+    CNetMessage msg(std::move(vRecv));\n+\n+    // store state about valid header, netmagic and checksum\n+    msg.m_valid_header = hdr.IsValid(message_start);\n+    msg.m_valid_netmagic = (memcmp(hdr.pchMessageStart, message_start, CMessageHeader::MESSAGE_START_SIZE) == 0);\n+    uint256 hash = GetMessageHash();\n+\n+    // store command string, payload size\n+    msg.m_command = hdr.GetCommand();\n+    msg.m_message_size = hdr.nMessageSize;\n+\n+    msg.m_valid_checksum = (memcmp(hash.begin(), hdr.pchChecksum, CMessageHeader::CHECKSUM_SIZE) == 0);\n+    if (!msg.m_valid_checksum) {\n+        LogPrint(BCLog::NET, \"CHECKSUM ERROR (%s, %u bytes), expected %s was %s\\n\",",
    "path": "src/net.cpp",
    "position": 116,
    "original_position": 107,
    "commit_id": "ed2dc5e48abed1cde6ab98025dc8212917d47d21",
    "original_commit_id": "6294ecdb8bb4eb7049a18c721ee8cb4a53d80a06",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"Refactor: split network transport deserializing from message container\" (6294ecdb8bb4eb7049a18c721ee8cb4a53d80a06)\r\n\r\nIt seems strange that this commit now logs two slightly different CHECKSUM ERROR line from different code locations instead of definitively logging in one place like the previous code.\r\n\r\nIt is also odd that the checksum error log print was copied here, but the invalid magic and invalid header errors were not copied.\r\n\r\nWould suggest logging errors either here or ProcessMessages, but not both places. Or if there is some reason to log both places, at least being consistent about which errors are logged and which errors are ignored.",
    "created_at": "2019-10-18T18:23:36Z",
    "updated_at": "2019-10-23T07:29:33Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16202#discussion_r336619783",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16202",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/336619783"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16202#discussion_r336619783"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16202"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/336619783/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 701,
    "original_line": 713,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/336638822",
    "pull_request_review_id": 304040072,
    "id": 336638822,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzNjYzODgyMg==",
    "diff_hunk": "@@ -609,8 +609,33 @@ class CNodeStats\n \n \n \n-\n+/** Transport protocol agnostic message container.\n+ * Ideally it should only contain receive time, payload,\n+ * command and size.\n+ */\n class CNetMessage {\n+public:\n+    CDataStream m_recv;                  // received message data\n+    int64_t m_time = 0;                  // time (in microseconds) of message receipt.\n+    bool m_valid_netmagic = false;\n+    bool m_valid_header = false;\n+    bool m_valid_checksum = false;\n+    uint32_t m_message_size = 0;         // size of the payload\n+    std::string m_command;\n+\n+    CNetMessage(const CDataStream& recv_in) : m_recv(std::move(recv_in)) {}\n+\n+    void SetVersion(int nVersionIn)",
    "path": "src/net.h",
    "position": 22,
    "original_position": 21,
    "commit_id": "ed2dc5e48abed1cde6ab98025dc8212917d47d21",
    "original_commit_id": "6294ecdb8bb4eb7049a18c721ee8cb4a53d80a06",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"Refactor: split network transport deserializing from message container\" (6294ecdb8bb4eb7049a18c721ee8cb4a53d80a06)\r\n\r\nWhy do CNetMessage and TransportDeserializer both have SetVersion methods now? It seems like only TransportDeserializer should have a SetVersion method, and it should be responsible for passing it the version on to CNetMessage objects as it constructs them.\r\n\r\nRght now both objects have SetVersion methods and the TransportDeserializer one is never called. I'd would suggest shifting more logic to TransportDeserializer, or at least deleting the SetVersion implementation that is never called.",
    "created_at": "2019-10-18T19:13:41Z",
    "updated_at": "2019-10-23T07:29:33Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16202#discussion_r336638822",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16202",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/336638822"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16202#discussion_r336638822"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16202"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/336638822/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 629,
    "original_line": 628,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/336642836",
    "pull_request_review_id": 304040072,
    "id": 336642836,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzNjY0MjgzNg==",
    "diff_hunk": "@@ -624,14 +649,19 @@ class CNetMessage {\n     CDataStream vRecv;              // received message data\n     unsigned int nDataPos;\n \n-    int64_t nTime;                  // time (in microseconds) of message receipt.\n+    TransportDeserializer(const CMessageHeader::MessageStartChars& pchMessageStartIn, int nTypeIn, int nVersionIn) : hdrbuf(nTypeIn, nVersionIn), hdr(pchMessageStartIn), vRecv(nTypeIn, nVersionIn) {\n+        Reset();\n+    }\n \n-    CNetMessage(const CMessageHeader::MessageStartChars& pchMessageStartIn, int nTypeIn, int nVersionIn) : hdrbuf(nTypeIn, nVersionIn), hdr(pchMessageStartIn), vRecv(nTypeIn, nVersionIn) {\n+    void Reset() {",
    "path": "src/net.h",
    "position": 67,
    "original_position": 45,
    "commit_id": "ed2dc5e48abed1cde6ab98025dc8212917d47d21",
    "original_commit_id": "6294ecdb8bb4eb7049a18c721ee8cb4a53d80a06",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"Refactor: split network transport deserializing from message container\" (6294ecdb8bb4eb7049a18c721ee8cb4a53d80a06)\r\n\r\nReset method seems to reset every member except `hdr`, leaving it untouched. I guess this is because `CMessageHeader` doesn't have a clear method or easily callable constructor, but it would be good to have a comment saying `hdr` is intentionally skipped, because this looks like a bug, and could potentially cause bugs in the future.",
    "created_at": "2019-10-18T19:25:27Z",
    "updated_at": "2019-10-23T07:29:33Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16202#discussion_r336642836",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16202",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/336642836"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16202#discussion_r336642836"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16202"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/336642836/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 668,
    "original_line": 656,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/336648622",
    "pull_request_review_id": 304040072,
    "id": 336648622,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzNjY0ODYyMg==",
    "diff_hunk": "@@ -664,25 +684,23 @@ class TransportDeserializer {\n         data_hash.SetNull();\n         hasher.Reset();\n     }\n-\n-    bool complete() const\n+    bool Complete() const",
    "path": "src/net.h",
    "position": null,
    "original_position": 52,
    "commit_id": "ed2dc5e48abed1cde6ab98025dc8212917d47d21",
    "original_commit_id": "efecb74677222f6c70adf7f860c315f430d39ec4",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"Use adapter pattern for the network deserializer\" (efecb74677222f6c70adf7f860c315f430d39ec4)\r\n\r\nWould be good to add `override` keyword to Complete, Read, and other overridden methods for clarity and compile errors if there are changes to superclass and subclass methods no longer match up.",
    "created_at": "2019-10-18T19:42:42Z",
    "updated_at": "2019-10-23T07:29:33Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16202#discussion_r336648622",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16202",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/336648622"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16202#discussion_r336648622"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16202"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/336648622/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 687,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/338122333",
    "pull_request_review_id": 305987741,
    "id": 338122333,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzODEyMjMzMw==",
    "diff_hunk": "@@ -101,11 +101,10 @@ def run_test(self):\n             msg_over_size = msg_unrecognized(str_data=\"b\" * (valid_data_limit + 1))\n             assert len(msg_over_size.serialize()) == (msg_limit + 1)\n \n-            with node.assert_debug_log([\"Oversized message from peer=4, disconnecting\"]):",
    "path": "test/functional/p2p_invalid_messages.py",
    "position": 4,
    "original_position": 4,
    "commit_id": "ed2dc5e48abed1cde6ab98025dc8212917d47d21",
    "original_commit_id": "6a91499496d76c2b3e84489e9723b60514fb08db",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"Remove oversized message detection from log and interface\" (6a91499496d76c2b3e84489e9723b60514fb08db)\r\n\r\nIs there a different log message this could check for? It would seem better if the test could continue checking the reason for disconnect.",
    "created_at": "2019-10-23T15:32:24Z",
    "updated_at": "2019-10-23T15:46:10Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16202#discussion_r338122333",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16202",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/338122333"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16202#discussion_r338122333"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16202"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/338122333/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 104,
    "original_line": 104,
    "side": "LEFT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/338128482",
    "pull_request_review_id": 305987741,
    "id": 338128482,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzODEyODQ4Mg==",
    "diff_hunk": "@@ -682,23 +682,23 @@ class V1TransportDeserializer : public TransportDeserializer\n         Reset();\n     }\n \n-    bool Complete() const\n+    bool Complete() const override\n     {\n         if (!in_data)\n             return false;\n         return (hdr.nMessageSize == nDataPos);\n     }\n-    void SetVersion(int nVersionIn)\n+    void SetVersion(int nVersionIn) override",
    "path": "src/net.h",
    "position": 96,
    "original_position": 21,
    "commit_id": "ed2dc5e48abed1cde6ab98025dc8212917d47d21",
    "original_commit_id": "ed2dc5e48abed1cde6ab98025dc8212917d47d21",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"Add override/final modifiers to V1TransportDeserializer\" (ed2dc5e48abed1cde6ab98025dc8212917d47d21)\r\n\r\nThis function is still never called. Isn't it pointless for CNetMessage and TransportDeserializer to both have SetVersion methods, instead of just setting the version in a single place? See previous https://github.com/bitcoin/bitcoin/pull/16202#discussion_r336638822",
    "created_at": "2019-10-23T15:43:16Z",
    "updated_at": "2019-10-23T15:46:10Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16202#discussion_r338128482",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16202",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/338128482"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16202#discussion_r338128482"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16202"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/338128482/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 691,
    "original_line": 691,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/338278857",
    "pull_request_review_id": 306191567,
    "id": 338278857,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzODI3ODg1Nw==",
    "diff_hunk": "@@ -707,6 +707,7 @@ CNetMessage TransportDeserializer::GetMessage(const CMessageHeader::MessageStart\n     // store command string, payload size",
    "path": "src/net.cpp",
    "position": 109,
    "original_position": 10,
    "commit_id": "ed2dc5e48abed1cde6ab98025dc8212917d47d21",
    "original_commit_id": "1a5c656c3169ba525f84145d19ce8c64f2cf1efb",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: \"store ... wire message size\" has been dropped",
    "created_at": "2019-10-23T21:06:45Z",
    "updated_at": "2019-10-23T21:41:53Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16202#discussion_r338278857",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16202",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/338278857"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16202#discussion_r338278857"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16202"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/338278857/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 694,
    "original_line": 707,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/338291351",
    "pull_request_review_id": 306191567,
    "id": 338291351,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzODI5MTM1MQ==",
    "diff_hunk": "@@ -3260,49 +3260,45 @@ bool PeerLogicValidation::ProcessMessages(CNode* pfrom, std::atomic<bool>& inter\n             return false;\n         // Just take one message\n         msgs.splice(msgs.begin(), pfrom->vProcessMsg, pfrom->vProcessMsg.begin());\n-        pfrom->nProcessQueueSize -= msgs.front().vRecv.size() + CMessageHeader::HEADER_SIZE;\n+        pfrom->nProcessQueueSize -= msgs.front().m_recv.size() + CMessageHeader::HEADER_SIZE;\n         pfrom->fPauseRecv = pfrom->nProcessQueueSize > connman->GetReceiveFloodSize();\n         fMoreWork = !pfrom->vProcessMsg.empty();\n     }\n     CNetMessage& msg(msgs.front());\n \n     msg.SetVersion(pfrom->GetRecvVersion());\n-    // Scan for message start\n-    if (memcmp(msg.hdr.pchMessageStart, chainparams.MessageStart(), CMessageHeader::MESSAGE_START_SIZE) != 0) {\n-        LogPrint(BCLog::NET, \"PROCESSMESSAGE: INVALID MESSAGESTART %s peer=%d\\n\", SanitizeString(msg.hdr.GetCommand()), pfrom->GetId());\n+    // Check network magic\n+    if (!msg.m_valid_netmagic) {\n+        LogPrint(BCLog::NET, \"PROCESSMESSAGE: INVALID MESSAGESTART %s peer=%d\\n\", SanitizeString(msg.m_command), pfrom->GetId());\n         pfrom->fDisconnect = true;\n         return false;\n     }\n \n-    // Read header\n-    CMessageHeader& hdr = msg.hdr;\n-    if (!hdr.IsValid(chainparams.MessageStart()))\n+    // Check header\n+    if (!msg.m_valid_header)\n     {\n-        LogPrint(BCLog::NET, \"PROCESSMESSAGE: ERRORS IN HEADER %s peer=%d\\n\", SanitizeString(hdr.GetCommand()), pfrom->GetId());\n+        LogPrint(BCLog::NET, \"PROCESSMESSAGE: ERRORS IN HEADER %s peer=%d\\n\", SanitizeString(msg.m_command), pfrom->GetId());\n         return fMoreWork;\n     }\n-    std::string strCommand = hdr.GetCommand();\n+    const std::string& strCommand = msg.m_command;\n \n     // Message size\n-    unsigned int nMessageSize = hdr.nMessageSize;\n+    unsigned int nMessageSize = msg.m_message_size;",
    "path": "src/net_processing.cpp",
    "position": 37,
    "original_position": 37,
    "commit_id": "ed2dc5e48abed1cde6ab98025dc8212917d47d21",
    "original_commit_id": "6294ecdb8bb4eb7049a18c721ee8cb4a53d80a06",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Why define `nMessageSize` and `strCommand` here, can't we use `CNetMessage` members directly ? We don't need to check anything on them",
    "created_at": "2019-10-23T21:37:58Z",
    "updated_at": "2019-10-23T21:41:53Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16202#discussion_r338291351",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16202",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/338291351"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16202#discussion_r338291351"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16202"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/338291351/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 3286,
    "original_line": 3286,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/628718553",
    "pull_request_review_id": 654970732,
    "id": 628718553,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyODcxODU1Mw==",
    "diff_hunk": "@@ -609,56 +609,105 @@ class CNodeStats\n \n \n \n-\n+/** Transport protocol agnostic message container.\n+ * Ideally it should only contain receive time, payload,\n+ * command and size.\n+ */\n class CNetMessage {\n+public:\n+    CDataStream m_recv;                  // received message data\n+    int64_t m_time = 0;                  // time (in microseconds) of message receipt.\n+    bool m_valid_netmagic = false;\n+    bool m_valid_header = false;\n+    bool m_valid_checksum = false;\n+    uint32_t m_message_size = 0;         // size of the payload\n+    uint32_t m_raw_message_size = 0;     // used wire size of the message (including header/checksum)\n+    std::string m_command;\n+\n+    CNetMessage(CDataStream&& recv_in) : m_recv(std::move(recv_in)) {}\n+\n+    void SetVersion(int nVersionIn)\n+    {\n+        m_recv.SetVersion(nVersionIn);\n+    }\n+};\n+\n+/** The TransportDeserializer takes care of holding and deserializing the\n+ * network receive buffer. It can deserialize the network buffer into a\n+ * transport protocol agnostic CNetMessage (command & payload)\n+ */\n+class TransportDeserializer {\n+public:\n+    // returns true if the current deserialization is complete\n+    virtual bool Complete() const = 0;\n+    // set the serialization context version\n+    virtual void SetVersion(int version) = 0;\n+    // read and deserialize data\n+    virtual int Read(const char *data, unsigned int bytes) = 0;\n+    // decomposes a message from the context\n+    virtual CNetMessage GetMessage(const CMessageHeader::MessageStartChars& message_start, int64_t time) = 0;\n+    virtual ~TransportDeserializer() {}\n+};\n+\n+class V1TransportDeserializer final : public TransportDeserializer\n+{\n private:\n     mutable CHash256 hasher;\n     mutable uint256 data_hash;\n-public:\n     bool in_data;                   // parsing header (false) or data (true)\n-\n     CDataStream hdrbuf;             // partially received header\n     CMessageHeader hdr;             // complete header\n-    unsigned int nHdrPos;\n-\n     CDataStream vRecv;              // received message data\n+    unsigned int nHdrPos;\n     unsigned int nDataPos;\n \n-    int64_t nTime;                  // time (in microseconds) of message receipt.\n+    const uint256& GetMessageHash() const;\n+    int readHeader(const char *pch, unsigned int nBytes);\n+    int readData(const char *pch, unsigned int nBytes);\n \n-    CNetMessage(const CMessageHeader::MessageStartChars& pchMessageStartIn, int nTypeIn, int nVersionIn) : hdrbuf(nTypeIn, nVersionIn), hdr(pchMessageStartIn), vRecv(nTypeIn, nVersionIn) {\n+    void Reset() {\n+        vRecv.clear();\n+        hdrbuf.clear();\n         hdrbuf.resize(24);\n         in_data = false;\n         nHdrPos = 0;\n         nDataPos = 0;\n-        nTime = 0;\n+        data_hash.SetNull();\n+        hasher.Reset();\n     }\n \n-    bool complete() const\n+public:\n+\n+    V1TransportDeserializer(const CMessageHeader::MessageStartChars& pchMessageStartIn, int nTypeIn, int nVersionIn) : hdrbuf(nTypeIn, nVersionIn), hdr(pchMessageStartIn), vRecv(nTypeIn, nVersionIn) {\n+        Reset();\n+    }\n+\n+    bool Complete() const override",
    "path": "src/net.h",
    "position": 86,
    "original_position": 86,
    "commit_id": "ed2dc5e48abed1cde6ab98025dc8212917d47d21",
    "original_commit_id": "ed2dc5e48abed1cde6ab98025dc8212917d47d21",
    "user": {
      "login": "rebroad",
      "id": 1530283,
      "node_id": "MDQ6VXNlcjE1MzAyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1530283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rebroad",
      "html_url": "https://github.com/rebroad",
      "followers_url": "https://api.github.com/users/rebroad/followers",
      "following_url": "https://api.github.com/users/rebroad/following{/other_user}",
      "gists_url": "https://api.github.com/users/rebroad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rebroad/subscriptions",
      "organizations_url": "https://api.github.com/users/rebroad/orgs",
      "repos_url": "https://api.github.com/users/rebroad/repos",
      "events_url": "https://api.github.com/users/rebroad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rebroad/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "why is this function in the .h instead of the .cpp?",
    "created_at": "2021-05-08T08:00:48Z",
    "updated_at": "2021-05-08T08:00:48Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16202#discussion_r628718553",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16202",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/628718553"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16202#discussion_r628718553"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16202"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/628718553/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 685,
    "original_line": 685,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/628718578",
    "pull_request_review_id": 654970762,
    "id": 628718578,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYyODcxODU3OA==",
    "diff_hunk": "@@ -609,56 +609,105 @@ class CNodeStats\n \n \n \n-\n+/** Transport protocol agnostic message container.\n+ * Ideally it should only contain receive time, payload,\n+ * command and size.\n+ */\n class CNetMessage {\n+public:\n+    CDataStream m_recv;                  // received message data\n+    int64_t m_time = 0;                  // time (in microseconds) of message receipt.\n+    bool m_valid_netmagic = false;\n+    bool m_valid_header = false;\n+    bool m_valid_checksum = false;\n+    uint32_t m_message_size = 0;         // size of the payload\n+    uint32_t m_raw_message_size = 0;     // used wire size of the message (including header/checksum)\n+    std::string m_command;\n+\n+    CNetMessage(CDataStream&& recv_in) : m_recv(std::move(recv_in)) {}\n+\n+    void SetVersion(int nVersionIn)\n+    {\n+        m_recv.SetVersion(nVersionIn);\n+    }\n+};\n+\n+/** The TransportDeserializer takes care of holding and deserializing the\n+ * network receive buffer. It can deserialize the network buffer into a\n+ * transport protocol agnostic CNetMessage (command & payload)\n+ */\n+class TransportDeserializer {\n+public:\n+    // returns true if the current deserialization is complete\n+    virtual bool Complete() const = 0;\n+    // set the serialization context version\n+    virtual void SetVersion(int version) = 0;\n+    // read and deserialize data\n+    virtual int Read(const char *data, unsigned int bytes) = 0;\n+    // decomposes a message from the context\n+    virtual CNetMessage GetMessage(const CMessageHeader::MessageStartChars& message_start, int64_t time) = 0;\n+    virtual ~TransportDeserializer() {}\n+};\n+\n+class V1TransportDeserializer final : public TransportDeserializer\n+{\n private:\n     mutable CHash256 hasher;\n     mutable uint256 data_hash;\n-public:\n     bool in_data;                   // parsing header (false) or data (true)\n-\n     CDataStream hdrbuf;             // partially received header\n     CMessageHeader hdr;             // complete header\n-    unsigned int nHdrPos;\n-\n     CDataStream vRecv;              // received message data\n+    unsigned int nHdrPos;\n     unsigned int nDataPos;\n \n-    int64_t nTime;                  // time (in microseconds) of message receipt.\n+    const uint256& GetMessageHash() const;\n+    int readHeader(const char *pch, unsigned int nBytes);\n+    int readData(const char *pch, unsigned int nBytes);\n \n-    CNetMessage(const CMessageHeader::MessageStartChars& pchMessageStartIn, int nTypeIn, int nVersionIn) : hdrbuf(nTypeIn, nVersionIn), hdr(pchMessageStartIn), vRecv(nTypeIn, nVersionIn) {\n+    void Reset() {\n+        vRecv.clear();\n+        hdrbuf.clear();\n         hdrbuf.resize(24);\n         in_data = false;\n         nHdrPos = 0;\n         nDataPos = 0;\n-        nTime = 0;\n+        data_hash.SetNull();\n+        hasher.Reset();\n     }\n \n-    bool complete() const\n+public:\n+\n+    V1TransportDeserializer(const CMessageHeader::MessageStartChars& pchMessageStartIn, int nTypeIn, int nVersionIn) : hdrbuf(nTypeIn, nVersionIn), hdr(pchMessageStartIn), vRecv(nTypeIn, nVersionIn) {\n+        Reset();\n+    }\n+\n+    bool Complete() const override\n     {\n         if (!in_data)\n             return false;\n         return (hdr.nMessageSize == nDataPos);\n     }\n-\n-    const uint256& GetMessageHash() const;\n-\n-    void SetVersion(int nVersionIn)\n+    void SetVersion(int nVersionIn) override\n     {\n         hdrbuf.SetVersion(nVersionIn);\n         vRecv.SetVersion(nVersionIn);\n     }\n-\n-    int readHeader(const char *pch, unsigned int nBytes);\n-    int readData(const char *pch, unsigned int nBytes);\n+    int Read(const char *pch, unsigned int nBytes) override {",
    "path": "src/net.h",
    "position": 104,
    "original_position": 104,
    "commit_id": "ed2dc5e48abed1cde6ab98025dc8212917d47d21",
    "original_commit_id": "ed2dc5e48abed1cde6ab98025dc8212917d47d21",
    "user": {
      "login": "rebroad",
      "id": 1530283,
      "node_id": "MDQ6VXNlcjE1MzAyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1530283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rebroad",
      "html_url": "https://github.com/rebroad",
      "followers_url": "https://api.github.com/users/rebroad/followers",
      "following_url": "https://api.github.com/users/rebroad/following{/other_user}",
      "gists_url": "https://api.github.com/users/rebroad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rebroad/subscriptions",
      "organizations_url": "https://api.github.com/users/rebroad/orgs",
      "repos_url": "https://api.github.com/users/rebroad/repos",
      "events_url": "https://api.github.com/users/rebroad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rebroad/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "why is this function in the .h instead of in the .cpp?",
    "created_at": "2021-05-08T08:01:07Z",
    "updated_at": "2021-05-08T08:01:07Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16202#discussion_r628718578",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16202",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/628718578"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16202#discussion_r628718578"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16202"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/628718578/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 696,
    "original_line": 696,
    "side": "RIGHT"
  }
]