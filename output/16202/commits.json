[
  {
    "sha": "6294ecdb8bb4eb7049a18c721ee8cb4a53d80a06",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2Mjk0ZWNkYjhiYjRlYjcwNDlhMThjNzIxZWU4Y2I0YTUzZDgwYTA2",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2019-06-13T08:39:44Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2019-10-18T06:56:06Z"
      },
      "message": "Refactor: split network transport deserializing from message container",
      "tree": {
        "sha": "dfe985b6c23e73e00401a6596beedc0938e66781",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/dfe985b6c23e73e00401a6596beedc0938e66781"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6294ecdb8bb4eb7049a18c721ee8cb4a53d80a06",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAl2pYgcACgkQHrd2uwPH\nki1lhxAAgPaur35RGW44pNhoehnbvp8GS2NZ6cRUPs3KpHQ1kVIusbZdVVI7cR5Z\ntDDHXaJru8dXX3zC5PSgDWEWeWJ/dcza9vJoFy7LWlwKGDVmC8ZloLK7izPncvib\nYPD19MSW0kIC0QwMo9pA5N5gMxYtBVY1yoSkh22nJS+oB1Ij01ELsomh6hyoCKFM\nosC6EiRBdhW0O0PcFmMBtDM9opurlD4dljuaL5/JxaSwEmd3LOrPvltTYgRT1vEE\ndLja8nmOBVLbnERRSH2LakqQ1EAXe/v+mP93KJYJlsFVPJcrWNF8Tca6nHt8IwG2\n4IikosbjpCktd6MpJs33aX1jjzwyNBADuTKsjzHf0Qti7dV1FSSxYyE0TEEh655W\nDXpdgTwJ3adIQ/MKn/IZbgsg2jWB0Q0plp0T8zDRT5utVUL6qLptJFNDmm9bW23G\nRW3Z5HZSCy1k9TkQFy/Z0j45tkzoMFL+wgyYanhrArIhPB/6KxpqaZHuTvx4zmqk\n4KKzSu3ZfjWTITHfbi9TWPO/qpCBSlkK4iDx85Sltaq+F/7Ox++hJyTA4f1/64oJ\n2zBreUCZquLordLk5cdtAnkoy+cWg55dSZS/jfyaO1EIyahJ7aRufMe6slizgRNu\nInNcGfbI/6SsjRKWG42dQ+MH9gm4nCkrppcbs5nyJA7/h6XXItE=\n=W+nZ\n-----END PGP SIGNATURE-----",
        "payload": "tree dfe985b6c23e73e00401a6596beedc0938e66781\nparent d5a770b70d55a5874fbd7796a171de22abbbd342\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1560415184 +0200\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1571381766 +0200\n\nRefactor: split network transport deserializing from message container\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6294ecdb8bb4eb7049a18c721ee8cb4a53d80a06",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6294ecdb8bb4eb7049a18c721ee8cb4a53d80a06",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6294ecdb8bb4eb7049a18c721ee8cb4a53d80a06/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d5a770b70d55a5874fbd7796a171de22abbbd342",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d5a770b70d55a5874fbd7796a171de22abbbd342",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d5a770b70d55a5874fbd7796a171de22abbbd342"
      }
    ],
    "stats": {
      "total": 155,
      "additions": 107,
      "deletions": 48
    },
    "files": [
      {
        "sha": "bd183ce52b22198a9a932bbb08c608e33ba72084",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 54,
        "deletions": 24,
        "changes": 78,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6294ecdb8bb4eb7049a18c721ee8cb4a53d80a06/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6294ecdb8bb4eb7049a18c721ee8cb4a53d80a06/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=6294ecdb8bb4eb7049a18c721ee8cb4a53d80a06",
        "patch": "@@ -570,42 +570,42 @@ bool CNode::ReceiveMsgBytes(const char *pch, unsigned int nBytes, bool& complete\n     nLastRecv = nTimeMicros / 1000000;\n     nRecvBytes += nBytes;\n     while (nBytes > 0) {\n-\n-        // get current incomplete message, or create a new one\n-        if (vRecvMsg.empty() ||\n-            vRecvMsg.back().complete())\n-            vRecvMsg.push_back(CNetMessage(Params().MessageStart(), SER_NETWORK, INIT_PROTO_VERSION));\n-\n-        CNetMessage& msg = vRecvMsg.back();\n-\n         // absorb network data\n         int handled;\n-        if (!msg.in_data)\n-            handled = msg.readHeader(pch, nBytes);\n+        if (!m_deserializer->in_data)\n+            handled = m_deserializer->readHeader(pch, nBytes);\n         else\n-            handled = msg.readData(pch, nBytes);\n+            handled = m_deserializer->readData(pch, nBytes);\n \n-        if (handled < 0)\n+        if (handled < 0) {\n+            m_deserializer->Reset();\n             return false;\n+        }\n \n-        if (msg.in_data && msg.hdr.nMessageSize > MAX_PROTOCOL_MESSAGE_LENGTH) {\n+        if (m_deserializer->in_data && m_deserializer->hdr.nMessageSize > MAX_PROTOCOL_MESSAGE_LENGTH) {\n             LogPrint(BCLog::NET, \"Oversized message from peer=%i, disconnecting\\n\", GetId());\n+            m_deserializer->Reset();\n             return false;\n         }\n \n         pch += handled;\n         nBytes -= handled;\n \n-        if (msg.complete()) {\n+        if (m_deserializer->complete()) {\n+            // decompose a transport agnostic CNetMessage from the deserializer\n+            CNetMessage msg = m_deserializer->GetMessage(Params().MessageStart(), nTimeMicros);\n+\n             //store received bytes per message command\n             //to prevent a memory DOS, only allow valid commands\n-            mapMsgCmdSize::iterator i = mapRecvBytesPerMsgCmd.find(msg.hdr.pchCommand);\n+            mapMsgCmdSize::iterator i = mapRecvBytesPerMsgCmd.find(m_deserializer->hdr.pchCommand);\n             if (i == mapRecvBytesPerMsgCmd.end())\n                 i = mapRecvBytesPerMsgCmd.find(NET_MESSAGE_COMMAND_OTHER);\n             assert(i != mapRecvBytesPerMsgCmd.end());\n-            i->second += msg.hdr.nMessageSize + CMessageHeader::HEADER_SIZE;\n+            i->second += m_deserializer->hdr.nMessageSize + CMessageHeader::HEADER_SIZE;\n+\n+            // push the message to the process queue,\n+            vRecvMsg.push_back(std::move(msg));\n \n-            msg.nTime = nTimeMicros;\n             complete = true;\n         }\n     }\n@@ -639,8 +639,7 @@ int CNode::GetSendVersion() const\n     return nSendVersion;\n }\n \n-\n-int CNetMessage::readHeader(const char *pch, unsigned int nBytes)\n+int TransportDeserializer::readHeader(const char *pch, unsigned int nBytes)\n {\n     // copy data to temporary parsing buffer\n     unsigned int nRemaining = 24 - nHdrPos;\n@@ -671,7 +670,7 @@ int CNetMessage::readHeader(const char *pch, unsigned int nBytes)\n     return nCopy;\n }\n \n-int CNetMessage::readData(const char *pch, unsigned int nBytes)\n+int TransportDeserializer::readData(const char *pch, unsigned int nBytes)\n {\n     unsigned int nRemaining = hdr.nMessageSize - nDataPos;\n     unsigned int nCopy = std::min(nRemaining, nBytes);\n@@ -688,14 +687,43 @@ int CNetMessage::readData(const char *pch, unsigned int nBytes)\n     return nCopy;\n }\n \n-const uint256& CNetMessage::GetMessageHash() const\n+const uint256& TransportDeserializer::GetMessageHash() const\n {\n     assert(complete());\n     if (data_hash.IsNull())\n         hasher.Finalize(data_hash.begin());\n     return data_hash;\n }\n \n+CNetMessage TransportDeserializer::GetMessage(const CMessageHeader::MessageStartChars& message_start, int64_t time) {\n+    // decompose a single CNetMessage from the TransportDeserializer\n+    CNetMessage msg(std::move(vRecv));\n+\n+    // store state about valid header, netmagic and checksum\n+    msg.m_valid_header = hdr.IsValid(message_start);\n+    msg.m_valid_netmagic = (memcmp(hdr.pchMessageStart, message_start, CMessageHeader::MESSAGE_START_SIZE) == 0);\n+    uint256 hash = GetMessageHash();\n+\n+    // store command string, payload size\n+    msg.m_command = hdr.GetCommand();\n+    msg.m_message_size = hdr.nMessageSize;\n+\n+    msg.m_valid_checksum = (memcmp(hash.begin(), hdr.pchChecksum, CMessageHeader::CHECKSUM_SIZE) == 0);\n+    if (!msg.m_valid_checksum) {\n+        LogPrint(BCLog::NET, \"CHECKSUM ERROR (%s, %u bytes), expected %s was %s\\n\",\n+                 SanitizeString(msg.m_command), msg.m_message_size,\n+                 HexStr(hash.begin(), hash.begin()+CMessageHeader::CHECKSUM_SIZE),\n+                 HexStr(hdr.pchChecksum, hdr.pchChecksum+CMessageHeader::CHECKSUM_SIZE));\n+    }\n+\n+    // store receive time\n+    msg.m_time = time;\n+\n+    // reset the network deserializer (prepare for the next message)\n+    Reset();\n+    return msg;\n+}\n+\n size_t CConnman::SocketSendData(CNode *pnode) const EXCLUSIVE_LOCKS_REQUIRED(pnode->cs_vSend)\n {\n     auto it = pnode->vSendMsg.begin();\n@@ -1347,9 +1375,9 @@ void CConnman::SocketHandler()\n                     size_t nSizeAdded = 0;\n                     auto it(pnode->vRecvMsg.begin());\n                     for (; it != pnode->vRecvMsg.end(); ++it) {\n-                        if (!it->complete())\n-                            break;\n-                        nSizeAdded += it->vRecv.size() + CMessageHeader::HEADER_SIZE;\n+                        // vRecvMsg contains only completed CNetMessage\n+                        // the single possible partially deserialized message are held by TransportDeserializer\n+                        nSizeAdded += it->m_recv.size() + CMessageHeader::HEADER_SIZE;\n                     }\n                     {\n                         LOCK(pnode->cs_vProcessMsg);\n@@ -2678,6 +2706,8 @@ CNode::CNode(NodeId idIn, ServiceFlags nLocalServicesIn, int nMyStartingHeightIn\n     } else {\n         LogPrint(BCLog::NET, \"Added connection peer=%d\\n\", id);\n     }\n+\n+    m_deserializer = MakeUnique<TransportDeserializer>(TransportDeserializer(Params().MessageStart(), SER_NETWORK, INIT_PROTO_VERSION));\n }\n \n CNode::~CNode()"
      },
      {
        "sha": "a9ce33957d49499a1468a4ef46bf00e5a2674a19",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 38,
        "deletions": 5,
        "changes": 43,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6294ecdb8bb4eb7049a18c721ee8cb4a53d80a06/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6294ecdb8bb4eb7049a18c721ee8cb4a53d80a06/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=6294ecdb8bb4eb7049a18c721ee8cb4a53d80a06",
        "patch": "@@ -609,8 +609,33 @@ class CNodeStats\n \n \n \n-\n+/** Transport protocol agnostic message container.\n+ * Ideally it should only contain receive time, payload,\n+ * command and size.\n+ */\n class CNetMessage {\n+public:\n+    CDataStream m_recv;                  // received message data\n+    int64_t m_time = 0;                  // time (in microseconds) of message receipt.\n+    bool m_valid_netmagic = false;\n+    bool m_valid_header = false;\n+    bool m_valid_checksum = false;\n+    uint32_t m_message_size = 0;         // size of the payload\n+    std::string m_command;\n+\n+    CNetMessage(const CDataStream& recv_in) : m_recv(std::move(recv_in)) {}\n+\n+    void SetVersion(int nVersionIn)\n+    {\n+        m_recv.SetVersion(nVersionIn);\n+    }\n+};\n+\n+/** The TransportDeserializer takes care of holding and deserializing the\n+ * network receive buffer. It can deserialize the network buffer into a\n+ * transport protocol agnostic CNetMessage (command & payload)\n+ */\n+class TransportDeserializer {\n private:\n     mutable CHash256 hasher;\n     mutable uint256 data_hash;\n@@ -624,14 +649,19 @@ class CNetMessage {\n     CDataStream vRecv;              // received message data\n     unsigned int nDataPos;\n \n-    int64_t nTime;                  // time (in microseconds) of message receipt.\n+    TransportDeserializer(const CMessageHeader::MessageStartChars& pchMessageStartIn, int nTypeIn, int nVersionIn) : hdrbuf(nTypeIn, nVersionIn), hdr(pchMessageStartIn), vRecv(nTypeIn, nVersionIn) {\n+        Reset();\n+    }\n \n-    CNetMessage(const CMessageHeader::MessageStartChars& pchMessageStartIn, int nTypeIn, int nVersionIn) : hdrbuf(nTypeIn, nVersionIn), hdr(pchMessageStartIn), vRecv(nTypeIn, nVersionIn) {\n+    void Reset() {\n+        vRecv.clear();\n+        hdrbuf.clear();\n         hdrbuf.resize(24);\n         in_data = false;\n         nHdrPos = 0;\n         nDataPos = 0;\n-        nTime = 0;\n+        data_hash.SetNull();\n+        hasher.Reset();\n     }\n \n     bool complete() const\n@@ -651,14 +681,17 @@ class CNetMessage {\n \n     int readHeader(const char *pch, unsigned int nBytes);\n     int readData(const char *pch, unsigned int nBytes);\n-};\n \n+    CNetMessage GetMessage(const CMessageHeader::MessageStartChars& message_start, int64_t time);\n+};\n \n /** Information about a peer */\n class CNode\n {\n     friend class CConnman;\n public:\n+    std::unique_ptr<TransportDeserializer> m_deserializer;\n+\n     // socket\n     std::atomic<ServiceFlags> nServices{NODE_NONE};\n     SOCKET hSocket GUARDED_BY(cs_hSocket);"
      },
      {
        "sha": "c8ffbbbe9d73416589cc4a862a5fd6a00f645ef0",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 18,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6294ecdb8bb4eb7049a18c721ee8cb4a53d80a06/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6294ecdb8bb4eb7049a18c721ee8cb4a53d80a06/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=6294ecdb8bb4eb7049a18c721ee8cb4a53d80a06",
        "patch": "@@ -3260,49 +3260,45 @@ bool PeerLogicValidation::ProcessMessages(CNode* pfrom, std::atomic<bool>& inter\n             return false;\n         // Just take one message\n         msgs.splice(msgs.begin(), pfrom->vProcessMsg, pfrom->vProcessMsg.begin());\n-        pfrom->nProcessQueueSize -= msgs.front().vRecv.size() + CMessageHeader::HEADER_SIZE;\n+        pfrom->nProcessQueueSize -= msgs.front().m_recv.size() + CMessageHeader::HEADER_SIZE;\n         pfrom->fPauseRecv = pfrom->nProcessQueueSize > connman->GetReceiveFloodSize();\n         fMoreWork = !pfrom->vProcessMsg.empty();\n     }\n     CNetMessage& msg(msgs.front());\n \n     msg.SetVersion(pfrom->GetRecvVersion());\n-    // Scan for message start\n-    if (memcmp(msg.hdr.pchMessageStart, chainparams.MessageStart(), CMessageHeader::MESSAGE_START_SIZE) != 0) {\n-        LogPrint(BCLog::NET, \"PROCESSMESSAGE: INVALID MESSAGESTART %s peer=%d\\n\", SanitizeString(msg.hdr.GetCommand()), pfrom->GetId());\n+    // Check network magic\n+    if (!msg.m_valid_netmagic) {\n+        LogPrint(BCLog::NET, \"PROCESSMESSAGE: INVALID MESSAGESTART %s peer=%d\\n\", SanitizeString(msg.m_command), pfrom->GetId());\n         pfrom->fDisconnect = true;\n         return false;\n     }\n \n-    // Read header\n-    CMessageHeader& hdr = msg.hdr;\n-    if (!hdr.IsValid(chainparams.MessageStart()))\n+    // Check header\n+    if (!msg.m_valid_header)\n     {\n-        LogPrint(BCLog::NET, \"PROCESSMESSAGE: ERRORS IN HEADER %s peer=%d\\n\", SanitizeString(hdr.GetCommand()), pfrom->GetId());\n+        LogPrint(BCLog::NET, \"PROCESSMESSAGE: ERRORS IN HEADER %s peer=%d\\n\", SanitizeString(msg.m_command), pfrom->GetId());\n         return fMoreWork;\n     }\n-    std::string strCommand = hdr.GetCommand();\n+    const std::string& strCommand = msg.m_command;\n \n     // Message size\n-    unsigned int nMessageSize = hdr.nMessageSize;\n+    unsigned int nMessageSize = msg.m_message_size;\n \n     // Checksum\n-    CDataStream& vRecv = msg.vRecv;\n-    const uint256& hash = msg.GetMessageHash();\n-    if (memcmp(hash.begin(), hdr.pchChecksum, CMessageHeader::CHECKSUM_SIZE) != 0)\n+    CDataStream& vRecv = msg.m_recv;\n+    if (!msg.m_valid_checksum)\n     {\n-        LogPrint(BCLog::NET, \"%s(%s, %u bytes): CHECKSUM ERROR expected %s was %s\\n\", __func__,\n-           SanitizeString(strCommand), nMessageSize,\n-           HexStr(hash.begin(), hash.begin()+CMessageHeader::CHECKSUM_SIZE),\n-           HexStr(hdr.pchChecksum, hdr.pchChecksum+CMessageHeader::CHECKSUM_SIZE));\n+        LogPrint(BCLog::NET, \"%s(%s, %u bytes): CHECKSUM ERROR peer=%d\\n\", __func__,\n+           SanitizeString(strCommand), nMessageSize, pfrom->GetId());\n         return fMoreWork;\n     }\n \n     // Process message\n     bool fRet = false;\n     try\n     {\n-        fRet = ProcessMessage(pfrom, strCommand, vRecv, msg.nTime, chainparams, connman, interruptMsgProc);\n+        fRet = ProcessMessage(pfrom, strCommand, vRecv, msg.m_time, chainparams, connman, interruptMsgProc);\n         if (interruptMsgProc)\n             return false;\n         if (!pfrom->vRecvGetData.empty())"
      },
      {
        "sha": "8fcf5b878f2e8de8c65a92d15ea8d4deaa73f2d4",
        "filename": "test/functional/p2p_invalid_messages.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6294ecdb8bb4eb7049a18c721ee8cb4a53d80a06/test/functional/p2p_invalid_messages.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6294ecdb8bb4eb7049a18c721ee8cb4a53d80a06/test/functional/p2p_invalid_messages.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_invalid_messages.py?ref=6294ecdb8bb4eb7049a18c721ee8cb4a53d80a06",
        "patch": "@@ -168,7 +168,7 @@ def swap_magic_bytes():\n \n     def test_checksum(self):\n         conn = self.nodes[0].add_p2p_connection(P2PDataStore())\n-        with self.nodes[0].assert_debug_log(['ProcessMessages(badmsg, 2 bytes): CHECKSUM ERROR expected 78df0a04 was ffffffff']):\n+        with self.nodes[0].assert_debug_log(['CHECKSUM ERROR (badmsg, 2 bytes), expected 78df0a04 was ffffffff']):\n             msg = conn.build_message(msg_unrecognized(str_data=\"d\"))\n             cut_len = (\n                 4 +  # magic"
      }
    ]
  },
  {
    "sha": "1a5c656c3169ba525f84145d19ce8c64f2cf1efb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxYTVjNjU2YzMxNjliYTUyNWY4NDE0NWQxOWNlOGM2NGYyY2YxZWZi",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2019-06-13T09:07:50Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2019-10-18T06:56:08Z"
      },
      "message": "Remove transport protocol knowhow from CNetMessage / net processing",
      "tree": {
        "sha": "ca8d33a4009c55ce5145482e4af6788966a1fc2f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ca8d33a4009c55ce5145482e4af6788966a1fc2f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1a5c656c3169ba525f84145d19ce8c64f2cf1efb",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAl2pYggACgkQHrd2uwPH\nki3FQBAAgf+k2cxEQe2nBo55m4Cg1dyHLtjPrYFzgfSGiOKA7fejuVWL58PWwHwP\nyA7l+CA+EdiI4e93NAYa3XagXw9ULr9+M0IieFrcV1R1TotVBNUcF90VGXDzgklv\n/eY9kz7XiUOVinlOY4cRWB7kK4MTtkrOKRhU538l+XsgUHExIl/4YVwDAglHvHry\nPEDGjLAP9aOD2X/75kqYdOUE1rDUyEl371wZlVheFaxilZWSQQjibcXNm+H+Qwkg\nrWBMZE7l6qMaQCOwJfWWXs9Rd1Usq7uwRXsdRhYlpCBBfD8wnEnnc1q80L+biA43\nnKILe53ACKTGdtK/CJI1SN6IXemltOIhI4SxJXPALfpnWrHQ7zoZnwmx4aHGXAfX\n5RRfBEGTOZO8Rfabi1m6vncTp+WwrTxDB7dl9RkvkdzzL1AqB4MiKN5QQp9VyOl0\nk7tE4l3XuX45hVu5VEtzHRHMp+OmBlJm3wZODfk8rYj0dbdb5yE0w6fXjOjM6Kp3\narsF4w6WlqzCRJNXG6vDYJy69c+SiAH5nRXv/YfFpUUY1YCcphf4tOVDlyPsBdPZ\nSBN80FnW0gRKh+yNI62uktMN/TU7KKliBEi3P13hl88wlAaInajMY48FXPzYp2Au\ndwBMLJm+tiEVgntwUSjhqJw0DdD4YWqZYoqC8oKRXdcDHFpv0iU=\n=yYlb\n-----END PGP SIGNATURE-----",
        "payload": "tree ca8d33a4009c55ce5145482e4af6788966a1fc2f\nparent 6294ecdb8bb4eb7049a18c721ee8cb4a53d80a06\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1560416870 +0200\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1571381768 +0200\n\nRemove transport protocol knowhow from CNetMessage / net processing\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1a5c656c3169ba525f84145d19ce8c64f2cf1efb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1a5c656c3169ba525f84145d19ce8c64f2cf1efb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1a5c656c3169ba525f84145d19ce8c64f2cf1efb/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6294ecdb8bb4eb7049a18c721ee8cb4a53d80a06",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6294ecdb8bb4eb7049a18c721ee8cb4a53d80a06",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6294ecdb8bb4eb7049a18c721ee8cb4a53d80a06"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 5,
      "deletions": 3
    },
    "files": [
      {
        "sha": "ee9d71786ab82f29886b32a86381d699629b969e",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1a5c656c3169ba525f84145d19ce8c64f2cf1efb/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1a5c656c3169ba525f84145d19ce8c64f2cf1efb/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=1a5c656c3169ba525f84145d19ce8c64f2cf1efb",
        "patch": "@@ -601,7 +601,7 @@ bool CNode::ReceiveMsgBytes(const char *pch, unsigned int nBytes, bool& complete\n             if (i == mapRecvBytesPerMsgCmd.end())\n                 i = mapRecvBytesPerMsgCmd.find(NET_MESSAGE_COMMAND_OTHER);\n             assert(i != mapRecvBytesPerMsgCmd.end());\n-            i->second += m_deserializer->hdr.nMessageSize + CMessageHeader::HEADER_SIZE;\n+            i->second += msg.m_raw_message_size;\n \n             // push the message to the process queue,\n             vRecvMsg.push_back(std::move(msg));\n@@ -707,6 +707,7 @@ CNetMessage TransportDeserializer::GetMessage(const CMessageHeader::MessageStart\n     // store command string, payload size\n     msg.m_command = hdr.GetCommand();\n     msg.m_message_size = hdr.nMessageSize;\n+    msg.m_raw_message_size = hdr.nMessageSize + CMessageHeader::HEADER_SIZE;\n \n     msg.m_valid_checksum = (memcmp(hash.begin(), hdr.pchChecksum, CMessageHeader::CHECKSUM_SIZE) == 0);\n     if (!msg.m_valid_checksum) {\n@@ -1377,7 +1378,7 @@ void CConnman::SocketHandler()\n                     for (; it != pnode->vRecvMsg.end(); ++it) {\n                         // vRecvMsg contains only completed CNetMessage\n                         // the single possible partially deserialized message are held by TransportDeserializer\n-                        nSizeAdded += it->m_recv.size() + CMessageHeader::HEADER_SIZE;\n+                        nSizeAdded += it->m_raw_message_size;\n                     }\n                     {\n                         LOCK(pnode->cs_vProcessMsg);"
      },
      {
        "sha": "15996438c9c3e11fbb1ba74397e75fa3aec47b5d",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1a5c656c3169ba525f84145d19ce8c64f2cf1efb/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1a5c656c3169ba525f84145d19ce8c64f2cf1efb/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=1a5c656c3169ba525f84145d19ce8c64f2cf1efb",
        "patch": "@@ -621,6 +621,7 @@ class CNetMessage {\n     bool m_valid_header = false;\n     bool m_valid_checksum = false;\n     uint32_t m_message_size = 0;         // size of the payload\n+    uint32_t m_raw_message_size = 0;     // used wire size of the message (including header/checksum)\n     std::string m_command;\n \n     CNetMessage(const CDataStream& recv_in) : m_recv(std::move(recv_in)) {}"
      },
      {
        "sha": "9496516c377a23ca06be06baff44f4cc95f9774c",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1a5c656c3169ba525f84145d19ce8c64f2cf1efb/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1a5c656c3169ba525f84145d19ce8c64f2cf1efb/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=1a5c656c3169ba525f84145d19ce8c64f2cf1efb",
        "patch": "@@ -3260,7 +3260,7 @@ bool PeerLogicValidation::ProcessMessages(CNode* pfrom, std::atomic<bool>& inter\n             return false;\n         // Just take one message\n         msgs.splice(msgs.begin(), pfrom->vProcessMsg, pfrom->vProcessMsg.begin());\n-        pfrom->nProcessQueueSize -= msgs.front().m_recv.size() + CMessageHeader::HEADER_SIZE;\n+        pfrom->nProcessQueueSize -= msgs.front().m_raw_message_size;\n         pfrom->fPauseRecv = pfrom->nProcessQueueSize > connman->GetReceiveFloodSize();\n         fMoreWork = !pfrom->vProcessMsg.empty();\n     }"
      }
    ]
  },
  {
    "sha": "efecb74677222f6c70adf7f860c315f430d39ec4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplZmVjYjc0Njc3MjIyZjZjNzBhZGY3Zjg2MGMzMTVmNDMwZDM5ZWM0",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2019-06-13T09:25:54Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2019-10-18T06:56:08Z"
      },
      "message": "Use adapter pattern for the network deserializer",
      "tree": {
        "sha": "68233f63743319b0785bc189cc6d466bb53c5269",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/68233f63743319b0785bc189cc6d466bb53c5269"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/efecb74677222f6c70adf7f860c315f430d39ec4",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAl2pYggACgkQHrd2uwPH\nki0Quw//ZSkbuHYFFznd7kbq4CsdB6GBYkjx8fIDsJxkzbUCnp9BNqbBngKQqF2L\nJJS61HdeXxtgVqFmNVFJMofHH8Ppr9opOjp6sSG1zEQPTK0lKKLGy390Hy/JTkyM\nK7E0GSWQSXV+e98uGrNtfZ5Kp9J/oVFkpZKKnp1q/Ll/j74o3W6xSRT4ylZXic/W\nucJQMR6St2ri1bV5/CkDRgykC5Z9YMtGspAZPi2sgRRgLtM/FI8nzBO2OgTUe8T9\nQv13gr9MN87Ow7SJE8nARpk0UZgJouZUUGYL0cyUZooavpPLh1mtBiqXvMQt3JV1\nxdcCHubBYEGSTnY8pS6LVQLfgadg7JjMuE22G99DVuMrPZ+DNqIftyUYEUZcbFUy\nr493B1vsmq/2LuktvCqidprAx0hRgA3jDcF6EUObEQ4/v1PDYyaeFJWWv3dLZPpk\ncJPd+eHmUqPaLjBAgujEq1dqgYllULPc4RywNNjcLHnS5W09k4KX2gZtlRaGlopP\nlSCiyEkMKW8OfERsZ4XTnPGbDxOfTdfeNHGnwDBOtsNmyATIGdu1oTixb5C17oeU\nZ3f0/75DXTEEewIxxHQHCKPYoP/4B+CJByNmPG1Zd2SKOCurKqzr0OYDfkaIK5aN\nV/e/EWYog1bWMZSGzZsCZ/wpR63dQIg9lKwAEGTgbJ/8DDy36Uc=\n=82xn\n-----END PGP SIGNATURE-----",
        "payload": "tree 68233f63743319b0785bc189cc6d466bb53c5269\nparent 1a5c656c3169ba525f84145d19ce8c64f2cf1efb\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1560417954 +0200\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1571381768 +0200\n\nUse adapter pattern for the network deserializer\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/efecb74677222f6c70adf7f860c315f430d39ec4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/efecb74677222f6c70adf7f860c315f430d39ec4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/efecb74677222f6c70adf7f860c315f430d39ec4/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1a5c656c3169ba525f84145d19ce8c64f2cf1efb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1a5c656c3169ba525f84145d19ce8c64f2cf1efb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1a5c656c3169ba525f84145d19ce8c64f2cf1efb"
      }
    ],
    "stats": {
      "total": 71,
      "additions": 42,
      "deletions": 29
    },
    "files": [
      {
        "sha": "210258c25af93c058cb4ae195e6f9aeee6233c72",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 15,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/efecb74677222f6c70adf7f860c315f430d39ec4/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/efecb74677222f6c70adf7f860c315f430d39ec4/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=efecb74677222f6c70adf7f860c315f430d39ec4",
        "patch": "@@ -571,18 +571,13 @@ bool CNode::ReceiveMsgBytes(const char *pch, unsigned int nBytes, bool& complete\n     nRecvBytes += nBytes;\n     while (nBytes > 0) {\n         // absorb network data\n-        int handled;\n-        if (!m_deserializer->in_data)\n-            handled = m_deserializer->readHeader(pch, nBytes);\n-        else\n-            handled = m_deserializer->readData(pch, nBytes);\n-\n+        int handled = m_deserializer->Read(pch, nBytes);\n         if (handled < 0) {\n             m_deserializer->Reset();\n             return false;\n         }\n \n-        if (m_deserializer->in_data && m_deserializer->hdr.nMessageSize > MAX_PROTOCOL_MESSAGE_LENGTH) {\n+        if (m_deserializer->OversizedMessageDetected()) {\n             LogPrint(BCLog::NET, \"Oversized message from peer=%i, disconnecting\\n\", GetId());\n             m_deserializer->Reset();\n             return false;\n@@ -591,13 +586,13 @@ bool CNode::ReceiveMsgBytes(const char *pch, unsigned int nBytes, bool& complete\n         pch += handled;\n         nBytes -= handled;\n \n-        if (m_deserializer->complete()) {\n+        if (m_deserializer->Complete()) {\n             // decompose a transport agnostic CNetMessage from the deserializer\n             CNetMessage msg = m_deserializer->GetMessage(Params().MessageStart(), nTimeMicros);\n \n             //store received bytes per message command\n             //to prevent a memory DOS, only allow valid commands\n-            mapMsgCmdSize::iterator i = mapRecvBytesPerMsgCmd.find(m_deserializer->hdr.pchCommand);\n+            mapMsgCmdSize::iterator i = mapRecvBytesPerMsgCmd.find(msg.m_command);\n             if (i == mapRecvBytesPerMsgCmd.end())\n                 i = mapRecvBytesPerMsgCmd.find(NET_MESSAGE_COMMAND_OTHER);\n             assert(i != mapRecvBytesPerMsgCmd.end());\n@@ -639,7 +634,7 @@ int CNode::GetSendVersion() const\n     return nSendVersion;\n }\n \n-int TransportDeserializer::readHeader(const char *pch, unsigned int nBytes)\n+int V1TransportDeserializer::readHeader(const char *pch, unsigned int nBytes)\n {\n     // copy data to temporary parsing buffer\n     unsigned int nRemaining = 24 - nHdrPos;\n@@ -670,7 +665,7 @@ int TransportDeserializer::readHeader(const char *pch, unsigned int nBytes)\n     return nCopy;\n }\n \n-int TransportDeserializer::readData(const char *pch, unsigned int nBytes)\n+int V1TransportDeserializer::readData(const char *pch, unsigned int nBytes)\n {\n     unsigned int nRemaining = hdr.nMessageSize - nDataPos;\n     unsigned int nCopy = std::min(nRemaining, nBytes);\n@@ -687,15 +682,15 @@ int TransportDeserializer::readData(const char *pch, unsigned int nBytes)\n     return nCopy;\n }\n \n-const uint256& TransportDeserializer::GetMessageHash() const\n+const uint256& V1TransportDeserializer::GetMessageHash() const\n {\n-    assert(complete());\n+    assert(Complete());\n     if (data_hash.IsNull())\n         hasher.Finalize(data_hash.begin());\n     return data_hash;\n }\n \n-CNetMessage TransportDeserializer::GetMessage(const CMessageHeader::MessageStartChars& message_start, int64_t time) {\n+CNetMessage V1TransportDeserializer::GetMessage(const CMessageHeader::MessageStartChars& message_start, int64_t time) {\n     // decompose a single CNetMessage from the TransportDeserializer\n     CNetMessage msg(std::move(vRecv));\n \n@@ -2708,7 +2703,7 @@ CNode::CNode(NodeId idIn, ServiceFlags nLocalServicesIn, int nMyStartingHeightIn\n         LogPrint(BCLog::NET, \"Added connection peer=%d\\n\", id);\n     }\n \n-    m_deserializer = MakeUnique<TransportDeserializer>(TransportDeserializer(Params().MessageStart(), SER_NETWORK, INIT_PROTO_VERSION));\n+    m_deserializer = MakeUnique<V1TransportDeserializer>(V1TransportDeserializer(Params().MessageStart(), SER_NETWORK, INIT_PROTO_VERSION));\n }\n \n CNode::~CNode()"
      },
      {
        "sha": "16435a3aa1192e625457add3fdd0a93823e2394d",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 32,
        "deletions": 14,
        "changes": 46,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/efecb74677222f6c70adf7f860c315f430d39ec4/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/efecb74677222f6c70adf7f860c315f430d39ec4/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=efecb74677222f6c70adf7f860c315f430d39ec4",
        "patch": "@@ -637,20 +637,40 @@ class CNetMessage {\n  * transport protocol agnostic CNetMessage (command & payload)\n  */\n class TransportDeserializer {\n+public:\n+    // prepare for next message\n+    virtual void Reset() = 0;\n+    // returns true if the current deserialization is complete\n+    virtual bool Complete() const = 0;\n+    // checks if the potential message in deserialization is oversized\n+    virtual bool OversizedMessageDetected() const = 0;\n+    // set the serialization context version\n+    virtual void SetVersion(int version) = 0;\n+    // read and deserialize data\n+    virtual int Read(const char *data, unsigned int bytes) = 0;\n+    // decomposes a message from the context\n+    virtual CNetMessage GetMessage(const CMessageHeader::MessageStartChars& message_start, int64_t time) = 0;\n+    virtual ~TransportDeserializer() {}\n+};\n+\n+class V1TransportDeserializer : public TransportDeserializer\n+{\n private:\n     mutable CHash256 hasher;\n     mutable uint256 data_hash;\n-public:\n     bool in_data;                   // parsing header (false) or data (true)\n-\n     CDataStream hdrbuf;             // partially received header\n     CMessageHeader hdr;             // complete header\n-    unsigned int nHdrPos;\n-\n     CDataStream vRecv;              // received message data\n+    unsigned int nHdrPos;\n     unsigned int nDataPos;\n \n-    TransportDeserializer(const CMessageHeader::MessageStartChars& pchMessageStartIn, int nTypeIn, int nVersionIn) : hdrbuf(nTypeIn, nVersionIn), hdr(pchMessageStartIn), vRecv(nTypeIn, nVersionIn) {\n+    const uint256& GetMessageHash() const;\n+    int readHeader(const char *pch, unsigned int nBytes);\n+    int readData(const char *pch, unsigned int nBytes);\n+public:\n+\n+    V1TransportDeserializer(const CMessageHeader::MessageStartChars& pchMessageStartIn, int nTypeIn, int nVersionIn) : hdrbuf(nTypeIn, nVersionIn), hdr(pchMessageStartIn), vRecv(nTypeIn, nVersionIn) {\n         Reset();\n     }\n \n@@ -664,25 +684,23 @@ class TransportDeserializer {\n         data_hash.SetNull();\n         hasher.Reset();\n     }\n-\n-    bool complete() const\n+    bool Complete() const\n     {\n         if (!in_data)\n             return false;\n         return (hdr.nMessageSize == nDataPos);\n     }\n-\n-    const uint256& GetMessageHash() const;\n-\n     void SetVersion(int nVersionIn)\n     {\n         hdrbuf.SetVersion(nVersionIn);\n         vRecv.SetVersion(nVersionIn);\n     }\n-\n-    int readHeader(const char *pch, unsigned int nBytes);\n-    int readData(const char *pch, unsigned int nBytes);\n-\n+    bool OversizedMessageDetected() const {\n+        return (in_data && hdr.nMessageSize > MAX_PROTOCOL_MESSAGE_LENGTH);\n+    }\n+    int Read(const char *pch, unsigned int nBytes) {\n+        return in_data ? readData(pch, nBytes) : readHeader(pch, nBytes);\n+    }\n     CNetMessage GetMessage(const CMessageHeader::MessageStartChars& message_start, int64_t time);\n };\n "
      }
    ]
  },
  {
    "sha": "b0e10ff4df3d4c70fb172ea8c3128c82e6e368bb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiMGUxMGZmNGRmM2Q0YzcwZmIxNzJlYThjMzEyOGM4MmU2ZTM2OGJi",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2019-10-22T13:28:32Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2019-10-22T13:28:32Z"
      },
      "message": "Force CNetMessage::m_recv to use std::move",
      "tree": {
        "sha": "9a57c2dcaa00f8e21d3ec9ca9840c87b469efc04",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9a57c2dcaa00f8e21d3ec9ca9840c87b469efc04"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b0e10ff4df3d4c70fb172ea8c3128c82e6e368bb",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAl2vBDYACgkQHrd2uwPH\nki08nRAA0YhTsziEK/YK2XffhdfGvV/BC+ArZ6JoAgkpS9PWHZvq42DjQKnmZGEu\nlQSYF227BgTDgBl4UWhTvN0Svrr28Gub8ZLByRNTsuzXQnf0onUHdaPJX4s4BA6h\nr7XNxqVsWagjCWSN9EFe8cCImlis3UF7e/iCttlYe9YAOxO09K9CBn5PTUjr9Mur\nIYyZ0Ed4l0y5KY/Xh9wq9GLWvditNa0P0ma+12SdUmG6PCaPkEr5/XoLh6Z0Yl1F\nUYMqkmkE4QGlQ3P/adUfyG/5Ia4lrs31pXoRdWPOvydijpaXPVhifiMjJh5NDHty\nIZDEWn4q6+y0hEHfLCpnh7fB6YCtra1j3kEjEonRn0PS3hWmK+O4SGfmOOPn2PZq\njW4bP+1o6LvTvJg6GGSQhvSeOmE3twlqDWZsWHfTq0tPQ13ZyruhaeCWrrqPxzoP\nrEpygbY+XHPhdUQWYvn6mnlVjgd/QerT13SJ/y4VsJVk5UVP1oacI0mDGtf700FP\naf4ZWUT89RkOgbvb2x6y0Jc2SSCOojfPxgnXnQbWaDBvR6pGNJdq9ojeJievY/Ft\nbAOy67Ite4Wc17AvRkbx92t0poI/9tDpatYXeuw9oD2/uoxh9eUUaAa8mVplp+5k\ne/+6b4GTJWmqwqWNpTWwxzRo1nypfMXnh04JC4qfz1Xz81ml62E=\n=G/fo\n-----END PGP SIGNATURE-----",
        "payload": "tree 9a57c2dcaa00f8e21d3ec9ca9840c87b469efc04\nparent efecb74677222f6c70adf7f860c315f430d39ec4\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1571750912 +0200\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1571750912 +0200\n\nForce CNetMessage::m_recv to use std::move\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b0e10ff4df3d4c70fb172ea8c3128c82e6e368bb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b0e10ff4df3d4c70fb172ea8c3128c82e6e368bb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b0e10ff4df3d4c70fb172ea8c3128c82e6e368bb/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "efecb74677222f6c70adf7f860c315f430d39ec4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/efecb74677222f6c70adf7f860c315f430d39ec4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/efecb74677222f6c70adf7f860c315f430d39ec4"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "612250847118ef23860b566a412b81d8e48986de",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b0e10ff4df3d4c70fb172ea8c3128c82e6e368bb/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b0e10ff4df3d4c70fb172ea8c3128c82e6e368bb/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=b0e10ff4df3d4c70fb172ea8c3128c82e6e368bb",
        "patch": "@@ -624,7 +624,7 @@ class CNetMessage {\n     uint32_t m_raw_message_size = 0;     // used wire size of the message (including header/checksum)\n     std::string m_command;\n \n-    CNetMessage(const CDataStream& recv_in) : m_recv(std::move(recv_in)) {}\n+    CNetMessage(CDataStream&& recv_in) : m_recv(std::move(recv_in)) {}\n \n     void SetVersion(int nVersionIn)\n     {"
      }
    ]
  },
  {
    "sha": "6a91499496d76c2b3e84489e9723b60514fb08db",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2YTkxNDk5NDk2ZDc2YzJiM2U4NDQ4OWU5NzIzYjYwNTE0ZmIwOGRi",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2019-10-18T18:57:10Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2019-10-23T07:27:25Z"
      },
      "message": "Remove oversized message detection from log and interface",
      "tree": {
        "sha": "4f83d328a4fe9fcab0279a96433b8c04fb577ce1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4f83d328a4fe9fcab0279a96433b8c04fb577ce1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6a91499496d76c2b3e84489e9723b60514fb08db",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAl2wAN0ACgkQHrd2uwPH\nki0F+A/8CGoJZxjiI0FTaWnTWzaJ5F5KIh6u6cp3FDoTzCy8H7KPtikuaz9YtUkR\nZyRRvzqxuSIR4nclBsSMZR1exw6yymdvr30qOJJj0xgwyeR8LXIbZDBFLUvZBxHi\nvVrGxm+nhOyea5vvnRwNb75yv8ZzulfFdzWZ7GhG2GndopE943bU+557/ubREhVK\n8z+smClTXnfo+xQf0JXc8SXVujioerx4l7dE02ZOb+DP57pZG8VIe4HZDaOh32Xk\ns9K43Ok06AJwV9bdsV4pXHRbe7XZO+xldaGvSsE7k66OdSZ7hNcV4Fk4lLcVnXfd\nRLZXg/f5WmehvbMT2HMHYIOnRmoEpK1lzuDI88+pN2nnKYLpbaXTTySWPZb4Zyt1\nivDUuqc745ErlN/LSt866hxxwRQUryVX8EEdmP/h2LBHMGxWvPCwswrPyRXmbvlh\nVqdxskrgCV0U3gzx+gU5QUj1A0+oYN8lDL7N6aEIifND0qRDGVWMMPIsL2sqgRpD\ndrzNxvmKHZnIGgxR0pUldFeo9yh/dsXy5s+DejnRerNcy4um9NPnE92q1mGDwU94\nO/hbJFefe6gP3eEuA1Xs9Xulqwl0noEXcE9Rijd05qPAKxF46MXuUZRVJ87fYhQm\n9ltT0LMlGM4sQZ2GPQkIZgPutLh5KO8irmWRlnbe9UqiQARqSSM=\n=XBeA\n-----END PGP SIGNATURE-----",
        "payload": "tree 4f83d328a4fe9fcab0279a96433b8c04fb577ce1\nparent b0e10ff4df3d4c70fb172ea8c3128c82e6e368bb\nauthor Pieter Wuille <pieter.wuille@gmail.com> 1571425030 -0700\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1571815645 +0200\n\nRemove oversized message detection from log and interface\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6a91499496d76c2b3e84489e9723b60514fb08db",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6a91499496d76c2b3e84489e9723b60514fb08db",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6a91499496d76c2b3e84489e9723b60514fb08db/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b0e10ff4df3d4c70fb172ea8c3128c82e6e368bb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b0e10ff4df3d4c70fb172ea8c3128c82e6e368bb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b0e10ff4df3d4c70fb172ea8c3128c82e6e368bb"
      }
    ],
    "stats": {
      "total": 25,
      "additions": 7,
      "deletions": 18
    },
    "files": [
      {
        "sha": "8b9ef1d0aa09b13297725781c17d578042ed5c63",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 8,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6a91499496d76c2b3e84489e9723b60514fb08db/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6a91499496d76c2b3e84489e9723b60514fb08db/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=6a91499496d76c2b3e84489e9723b60514fb08db",
        "patch": "@@ -577,12 +577,6 @@ bool CNode::ReceiveMsgBytes(const char *pch, unsigned int nBytes, bool& complete\n             return false;\n         }\n \n-        if (m_deserializer->OversizedMessageDetected()) {\n-            LogPrint(BCLog::NET, \"Oversized message from peer=%i, disconnecting\\n\", GetId());\n-            m_deserializer->Reset();\n-            return false;\n-        }\n-\n         pch += handled;\n         nBytes -= handled;\n \n@@ -655,9 +649,10 @@ int V1TransportDeserializer::readHeader(const char *pch, unsigned int nBytes)\n         return -1;\n     }\n \n-    // reject messages larger than MAX_SIZE\n-    if (hdr.nMessageSize > MAX_SIZE)\n+    // reject messages larger than MAX_SIZE or MAX_PROTOCOL_MESSAGE_LENGTH\n+    if (hdr.nMessageSize > MAX_SIZE || hdr.nMessageSize > MAX_PROTOCOL_MESSAGE_LENGTH) {\n         return -1;\n+    }\n \n     // switch state to reading message data\n     in_data = true;"
      },
      {
        "sha": "570ae8346555ec0f1a93ddd9b97659e09c76cb71",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6a91499496d76c2b3e84489e9723b60514fb08db/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6a91499496d76c2b3e84489e9723b60514fb08db/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=6a91499496d76c2b3e84489e9723b60514fb08db",
        "patch": "@@ -642,8 +642,6 @@ class TransportDeserializer {\n     virtual void Reset() = 0;\n     // returns true if the current deserialization is complete\n     virtual bool Complete() const = 0;\n-    // checks if the potential message in deserialization is oversized\n-    virtual bool OversizedMessageDetected() const = 0;\n     // set the serialization context version\n     virtual void SetVersion(int version) = 0;\n     // read and deserialize data\n@@ -695,9 +693,6 @@ class V1TransportDeserializer : public TransportDeserializer\n         hdrbuf.SetVersion(nVersionIn);\n         vRecv.SetVersion(nVersionIn);\n     }\n-    bool OversizedMessageDetected() const {\n-        return (in_data && hdr.nMessageSize > MAX_PROTOCOL_MESSAGE_LENGTH);\n-    }\n     int Read(const char *pch, unsigned int nBytes) {\n         return in_data ? readData(pch, nBytes) : readHeader(pch, nBytes);\n     }"
      },
      {
        "sha": "f0ceb8e6a37ab8aa4890096c10fd0bff89bf4d3d",
        "filename": "test/functional/p2p_invalid_messages.py",
        "status": "modified",
        "additions": 4,
        "deletions": 5,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6a91499496d76c2b3e84489e9723b60514fb08db/test/functional/p2p_invalid_messages.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6a91499496d76c2b3e84489e9723b60514fb08db/test/functional/p2p_invalid_messages.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_invalid_messages.py?ref=6a91499496d76c2b3e84489e9723b60514fb08db",
        "patch": "@@ -101,11 +101,10 @@ def run_test(self):\n             msg_over_size = msg_unrecognized(str_data=\"b\" * (valid_data_limit + 1))\n             assert len(msg_over_size.serialize()) == (msg_limit + 1)\n \n-            with node.assert_debug_log([\"Oversized message from peer=4, disconnecting\"]):\n-                # An unknown message type (or *any* message type) over\n-                # MAX_PROTOCOL_MESSAGE_LENGTH should result in a disconnect.\n-                node.p2p.send_message(msg_over_size)\n-                node.p2p.wait_for_disconnect(timeout=4)\n+            # An unknown message type (or *any* message type) over\n+            # MAX_PROTOCOL_MESSAGE_LENGTH should result in a disconnect.\n+            node.p2p.send_message(msg_over_size)\n+            node.p2p.wait_for_disconnect(timeout=4)\n \n             node.disconnect_p2ps()\n             conn = node.add_p2p_connection(P2PDataStore())"
      }
    ]
  },
  {
    "sha": "f342a5e61a73e1edf389b662d265d20cf26a1d51",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmMzQyYTVlNjFhNzNlMWVkZjM4OWI2NjJkMjY1ZDIwY2YyNmExZDUx",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2019-10-18T19:03:13Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2019-10-23T07:27:32Z"
      },
      "message": "Make resetting implicit in TransportDeserializer::Read()",
      "tree": {
        "sha": "360b936d99f52fe569f12664c68517279001d060",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/360b936d99f52fe569f12664c68517279001d060"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f342a5e61a73e1edf389b662d265d20cf26a1d51",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAl2wAOQACgkQHrd2uwPH\nki1fPg/8CnU9MhVOgqD5IejVazPUGa0etD2N2FlxzenBQPAV6M5ALzagv/BZHiwH\nD4LizUqYmfjMNPAdiO2ThxU1kNLOyrUgP64/DZsF6WZI27XBvmBVBAYC/ia1U1Js\nIkZQZslTYYc6zfq2SXMUSHkM0Bmq7ZabJLTnE/tiv1zQx/vT+mnuCXJZqnGKxjoJ\nnUYUDIvyMKzDpGrEmTWIhWJ3V7wxpe5MKF4aR9fPxk0v666mrybdKrQF7/5fwtsw\nPELkhfXdythaRNx81EX73DFEIWA0pOZQWWClLYU4aupcTgvll0zdahhCnorWZYXP\nHsdGIiWF6O2PqiIg2INrqtRsmspGe5zRv66L9L8meeXdWSW/G3oTSfY3SyD1UaQC\nFFBPczVmMucNvOpjvdjahQlAy69WIwBNmcNkvahvjknccGsvBEJ0CA85iy8JIy09\nz3NjOU5pjpKGLWjmFvNifsSpDXKQVe0wzHBYPNkhqYow0AxagsRQVmbpPehwjHIV\n6BSzklXC6xpEdV3HvCXAsQfkvSU4LrjBlra8c3wurLc58h5CWE1nk2AcB561G1Tt\nJT2K+6aYVOHBNuI8wB8i9jTJBJIwU5TztBwklzjrPjj7kb7VpLIM6vsjXAX8V79G\nbpvfZ9OafTy9L1cOh+lYbjkT5p/s3ScYFlrf3f9cFoeDnHDB9xM=\n=r2r/\n-----END PGP SIGNATURE-----",
        "payload": "tree 360b936d99f52fe569f12664c68517279001d060\nparent 6a91499496d76c2b3e84489e9723b60514fb08db\nauthor Pieter Wuille <pieter.wuille@gmail.com> 1571425393 -0700\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1571815652 +0200\n\nMake resetting implicit in TransportDeserializer::Read()\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f342a5e61a73e1edf389b662d265d20cf26a1d51",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f342a5e61a73e1edf389b662d265d20cf26a1d51",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f342a5e61a73e1edf389b662d265d20cf26a1d51/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6a91499496d76c2b3e84489e9723b60514fb08db",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6a91499496d76c2b3e84489e9723b60514fb08db",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6a91499496d76c2b3e84489e9723b60514fb08db"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 11,
      "deletions": 12
    },
    "files": [
      {
        "sha": "be4427f7931a39c273615595008ea7cb5e4ba156",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 4,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f342a5e61a73e1edf389b662d265d20cf26a1d51/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f342a5e61a73e1edf389b662d265d20cf26a1d51/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=f342a5e61a73e1edf389b662d265d20cf26a1d51",
        "patch": "@@ -572,10 +572,7 @@ bool CNode::ReceiveMsgBytes(const char *pch, unsigned int nBytes, bool& complete\n     while (nBytes > 0) {\n         // absorb network data\n         int handled = m_deserializer->Read(pch, nBytes);\n-        if (handled < 0) {\n-            m_deserializer->Reset();\n-            return false;\n-        }\n+        if (handled < 0) return false;\n \n         pch += handled;\n         nBytes -= handled;"
      },
      {
        "sha": "f6a04f51667f0939d780c8e1c1ebbda3aec9f2ff",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 10,
        "deletions": 8,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f342a5e61a73e1edf389b662d265d20cf26a1d51/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f342a5e61a73e1edf389b662d265d20cf26a1d51/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=f342a5e61a73e1edf389b662d265d20cf26a1d51",
        "patch": "@@ -638,8 +638,6 @@ class CNetMessage {\n  */\n class TransportDeserializer {\n public:\n-    // prepare for next message\n-    virtual void Reset() = 0;\n     // returns true if the current deserialization is complete\n     virtual bool Complete() const = 0;\n     // set the serialization context version\n@@ -666,11 +664,6 @@ class V1TransportDeserializer : public TransportDeserializer\n     const uint256& GetMessageHash() const;\n     int readHeader(const char *pch, unsigned int nBytes);\n     int readData(const char *pch, unsigned int nBytes);\n-public:\n-\n-    V1TransportDeserializer(const CMessageHeader::MessageStartChars& pchMessageStartIn, int nTypeIn, int nVersionIn) : hdrbuf(nTypeIn, nVersionIn), hdr(pchMessageStartIn), vRecv(nTypeIn, nVersionIn) {\n-        Reset();\n-    }\n \n     void Reset() {\n         vRecv.clear();\n@@ -682,6 +675,13 @@ class V1TransportDeserializer : public TransportDeserializer\n         data_hash.SetNull();\n         hasher.Reset();\n     }\n+\n+public:\n+\n+    V1TransportDeserializer(const CMessageHeader::MessageStartChars& pchMessageStartIn, int nTypeIn, int nVersionIn) : hdrbuf(nTypeIn, nVersionIn), hdr(pchMessageStartIn), vRecv(nTypeIn, nVersionIn) {\n+        Reset();\n+    }\n+\n     bool Complete() const\n     {\n         if (!in_data)\n@@ -694,7 +694,9 @@ class V1TransportDeserializer : public TransportDeserializer\n         vRecv.SetVersion(nVersionIn);\n     }\n     int Read(const char *pch, unsigned int nBytes) {\n-        return in_data ? readData(pch, nBytes) : readHeader(pch, nBytes);\n+        int ret = in_data ? readData(pch, nBytes) : readHeader(pch, nBytes);\n+        if (ret < 0) Reset();\n+        return ret;\n     }\n     CNetMessage GetMessage(const CMessageHeader::MessageStartChars& message_start, int64_t time);\n };"
      }
    ]
  },
  {
    "sha": "ed2dc5e48abed1cde6ab98025dc8212917d47d21",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplZDJkYzVlNDhhYmVkMWNkZTZhYjk4MDI1ZGM4MjEyOTE3ZDQ3ZDIx",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2019-10-18T19:09:48Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2019-10-23T07:27:35Z"
      },
      "message": "Add override/final modifiers to V1TransportDeserializer",
      "tree": {
        "sha": "2c9522afbd33477ad31821b2f77f9786e4d7a7af",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2c9522afbd33477ad31821b2f77f9786e4d7a7af"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ed2dc5e48abed1cde6ab98025dc8212917d47d21",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAl2wAOcACgkQHrd2uwPH\nki14GQ//ZM6451Ddvn67c6Jy0IYTZTTwOz59B37NRhcIjnu3HrXrAKXV2/SCs9+y\n2PJDjRxWWQggMFdJfXA4GSWF5bEZAwvLqf+Q0LJzSbIL0BpJYYj5wvYXNqdoZoIf\n30nLz63qlmaVBg6xsA+uHUXJJqFka54rlNTIt9+o+hAoFSRe+Hnzax69MfSMbr3j\nS91k8iB/tTtP90ZuZ6fwydtpHV61rylKWNu0tU080TjtQ2sw+nVvlh157hR1cX5A\nTW2/eR3sMYeEwYBeTZaMKFb+FZcgp8vYg5VqCryIgg7zxzX5z6ULjped2tHOBGwI\naz3NVUo/DR1S7sXqtcY8kWMkS9cdtw0AyDi5KcC8wQieYtLewW28gZy5+MoUrZpB\nBt6SedpX9mM61cbH2EoE6djpmHOKGVqsJAL1kfkOy9bQYERAjo5XZKvzusXh0BfZ\nhEdOAWl7P1M2mwoIeowrCniUaLsxWOR5FAHtklG71GseIsKtv93M6wmpR/0eCrpo\n1b6NQS5qBlrlN3nH5RsvBOnBODuIcKeWFv7aiXfbpZjyAGGHcUas24TkO/P5HqzB\ntA1TFM9krYABgzrTbYNUqWL3cyau69/UmMmQBi8eU23yMVAfSGeOfqGhQwu2lkJK\n1LA+EC61LHk04Vy2pH+kf/eWlcoKyg+TYWbKdP/suUTkLiInClE=\n=yWmG\n-----END PGP SIGNATURE-----",
        "payload": "tree 2c9522afbd33477ad31821b2f77f9786e4d7a7af\nparent f342a5e61a73e1edf389b662d265d20cf26a1d51\nauthor Pieter Wuille <pieter.wuille@gmail.com> 1571425788 -0700\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1571815655 +0200\n\nAdd override/final modifiers to V1TransportDeserializer\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ed2dc5e48abed1cde6ab98025dc8212917d47d21",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ed2dc5e48abed1cde6ab98025dc8212917d47d21",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ed2dc5e48abed1cde6ab98025dc8212917d47d21/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f342a5e61a73e1edf389b662d265d20cf26a1d51",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f342a5e61a73e1edf389b662d265d20cf26a1d51",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f342a5e61a73e1edf389b662d265d20cf26a1d51"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 5,
      "deletions": 5
    },
    "files": [
      {
        "sha": "af73361c0882188244b69ab03e6c56d23bda330d",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ed2dc5e48abed1cde6ab98025dc8212917d47d21/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ed2dc5e48abed1cde6ab98025dc8212917d47d21/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=ed2dc5e48abed1cde6ab98025dc8212917d47d21",
        "patch": "@@ -649,7 +649,7 @@ class TransportDeserializer {\n     virtual ~TransportDeserializer() {}\n };\n \n-class V1TransportDeserializer : public TransportDeserializer\n+class V1TransportDeserializer final : public TransportDeserializer\n {\n private:\n     mutable CHash256 hasher;\n@@ -682,23 +682,23 @@ class V1TransportDeserializer : public TransportDeserializer\n         Reset();\n     }\n \n-    bool Complete() const\n+    bool Complete() const override\n     {\n         if (!in_data)\n             return false;\n         return (hdr.nMessageSize == nDataPos);\n     }\n-    void SetVersion(int nVersionIn)\n+    void SetVersion(int nVersionIn) override\n     {\n         hdrbuf.SetVersion(nVersionIn);\n         vRecv.SetVersion(nVersionIn);\n     }\n-    int Read(const char *pch, unsigned int nBytes) {\n+    int Read(const char *pch, unsigned int nBytes) override {\n         int ret = in_data ? readData(pch, nBytes) : readHeader(pch, nBytes);\n         if (ret < 0) Reset();\n         return ret;\n     }\n-    CNetMessage GetMessage(const CMessageHeader::MessageStartChars& message_start, int64_t time);\n+    CNetMessage GetMessage(const CMessageHeader::MessageStartChars& message_start, int64_t time) override;\n };\n \n /** Information about a peer */"
      }
    ]
  }
]