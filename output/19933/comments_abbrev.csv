Saibato,2020-09-10 18:16:31,"> Liked the first version better...\n\nme 2 , but failed with some standard cases, i guess there are better way's to do this?\nWhat we need is a patch without trailing'/' siggh... \n",https://github.com/bitcoin/bitcoin/pull/19933#issuecomment-690596101,690596101,
Saibato,2020-09-11 11:36:58,"> Could `GetWalletDir()` return a ""clean"" path?\n\nThat would be nice to have.\nIt defaults in the error case we tackle here to `GetDataDir()`  we would need then in `GetWalletDir()` to strip all trailing chars off type fs::path::preferred_separator. there.\nBut that could also tangle deep into other parts where we need `GetWalletDir.`\n    \nTested that a bit, but then I found that path cou",https://github.com/bitcoin/bitcoin/pull/19933#issuecomment-691042398,691042398,
tryphe,2020-09-16 05:25:50,"Concept ACK. Prefer the patch above rather than the active PR. Logic is easier on the eyes and we need it everytime we call `GetWalletDir()`. As promag mentioned, it would be nice to know why the underlying function differs between systems, rather than adding this logic on. If it's necessary, I think this is a good solution, but if other path functions need this logic, would prefer something like ",https://github.com/bitcoin/bitcoin/pull/19933#issuecomment-693178711,693178711,
luke-jr,2020-09-16 12:17:43,"My ""obsolete"" comments above remain unaddressed. Would like a test to reproduce it if possible - I have been unable to do so.",https://github.com/bitcoin/bitcoin/pull/19933#issuecomment-693367244,693367244,
Saibato,2020-09-16 19:22:35,"@tryphe\n> GetCleanPath static function.\n\nhmm,,,, good idea, seams reasonable.\n\nBtw; where u also able to reproduce the bug with current master i.e.\nwith\ncc @luke-jr  \n\n> Would like a test to reproduce it if possible \n\n``` Bash\nmkdir /tmp/wallet_test\nbitcoind -daemon -datadir=/tmp/wallet_test -connect=127.0.0.1\nsleep 2\nbitcoin-cli -datadir=/tmp/wallet_test createwallet",https://github.com/bitcoin/bitcoin/pull/19933#issuecomment-693610281,693610281,
DrahtBot,2020-09-19 13:41:21,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #18095 (Fix crashes and infinite loop in ListWalletDir() by uhliksk)\n\nIf you consider this pull request important, pleas",https://github.com/bitcoin/bitcoin/pull/19933#issuecomment-695214953,695214953,
Saibato,2020-09-21 16:57:56,"TYI: This behavior is AFAICS only with mainnet nodes, what makes it even more annoying since u can not test it easy before it hits u in cli or qt gui with real coins.\n\nMight be not the right place here, but when I see 450Mil inflow in something like this with bold speech;\ni ask myself are they serious not to fund before that 1000 devs that feel a duty to lock at shit like this ( this is core",https://github.com/bitcoin/bitcoin/pull/19933#issuecomment-696241991,696241991,
MarcoFalke,2020-09-22 19:14:59,"> This kind of shit can in my view really scare ppl away from core.\n\nThe bug only exists in the `master` branch, which is known to have bugs and should not be used in production. It is good that this issue was found. There won't be a 0.21 release without this bug fixed, which is why I assigned that milestone. You can find the schedule for the release here: #18947 ",https://github.com/bitcoin/bitcoin/pull/19933#issuecomment-696925491,696925491,
Saibato,2020-09-23 18:54:20,"Thx @MarcoFalke  but tyi, the bug exits in every **release** and some in alt projects that followed core since we have multiple wallets 18,x,19.x,,20.x,  I build for test from source to compare. ",https://github.com/bitcoin/bitcoin/pull/19933#issuecomment-697884209,697884209,
hebasto,2020-10-04 18:04:35,Mind looking into alternative #20080?,https://github.com/bitcoin/bitcoin/pull/19933#issuecomment-703292876,703292876,
Saibato,2020-10-04 19:46:26,"> Mind looking into alternativ\n\n@hebasto tested  #20080 and does pass my simple test bash and in the gui . not sure that fs::canonical is correct for all other instances and all imaginable path and symlinks i can think of where we use getdatadir.so for now i leave this here open as it is boost and make and backwards compatible,\n\nBut i also think that stripping in general the '/' is probabl",https://github.com/bitcoin/bitcoin/pull/19933#issuecomment-703306225,703306225,
meshcollider,2020-10-15 19:16:42,"Saibato, really appreciate you following through with this PR and contributing a fix! I'm sorry to say though that it appears the consensus is in favour of the approach in #20080 over this one, so I'm going to have to close this. But I appreciate your effort :tada: ",https://github.com/bitcoin/bitcoin/pull/19933#issuecomment-709537918,709537918,
hebasto,2020-10-16 09:21:38,@meshcollider @Saibato https://github.com/bitcoin/bitcoin/pull/20080#issuecomment-709931469,https://github.com/bitcoin/bitcoin/pull/19933#issuecomment-709932760,709932760,
jonatack,2020-09-10 18:23:51,"Would it be safer to use `.at()` for bounds checks/no UB?\n\nnit, clang-formatting\n```diff\n-    while(wallet_dir.string()[offset-1] == '\\' || wallet_dir.string()[offset-1] == '/')\n-    {\n+    while (wallet_dir.string()[offset - 1] == '\\' || wallet_dir.string()[offset - 1] == '/') {\n```",https://github.com/bitcoin/bitcoin/pull/19933#discussion_r486547248,486547248,src/wallet/walletutil.cpp
Saibato,2020-09-10 18:27:27,"yup,  draft ugly and no checks, maybe i close it, that PR is now like POC.\nWhat we need is an elegant way with just boost 1.47   to do this. \nIdeas?\nedit:\nwhat would be nice to have />\n const fs::path path = fs::relative(it->path(), wallet_dir)",https://github.com/bitcoin/bitcoin/pull/19933#discussion_r486549932,486549932,src/wallet/walletutil.cpp
luke-jr,2020-09-10 18:44:44,"Maybe try `(wallet_dir / ""dummy"").remove_filename().string().size()`",https://github.com/bitcoin/bitcoin/pull/19933#discussion_r486560730,486560730,src/wallet/walletutil.cpp
luke-jr,2020-09-10 18:46:00,"Suggest we assert substr(0, offset) == what we used for calculating offset above",https://github.com/bitcoin/bitcoin/pull/19933#discussion_r486561426,486561426,src/wallet/walletutil.cpp
hebasto,2020-10-04 10:55:41,Now we have boost 1.58 (#19667).,https://github.com/bitcoin/bitcoin/pull/19933#discussion_r499233142,499233142,src/wallet/walletutil.cpp
luke-jr,2020-10-04 15:25:49,Not in supported stable versions.,https://github.com/bitcoin/bitcoin/pull/19933#discussion_r499258247,499258247,src/wallet/walletutil.cpp
Saibato,2020-10-04 15:42:51,"I guessed it might be backported at least to 0.19 and in 0.18 the bug is only int qt gui so 1.47 might be ok \n \nBut In hindsight and since u both look at this, the comment at line 73  is not changed by the PR and looks to me like a lingering Déjà vu with the GCC bug? \nShould we change or remove that, so that later no one grabs that trap when we change to std fs::?\nline 73:\n// This can be",https://github.com/bitcoin/bitcoin/pull/19933#discussion_r499259905,499259905,src/wallet/walletutil.cpp
hebasto,2020-10-04 15:48:49,"I think backporting pulls should consider boost 1.47, not this one.",https://github.com/bitcoin/bitcoin/pull/19933#discussion_r499260437,499260437,src/wallet/walletutil.cpp
MarcoFalke,2020-10-04 15:50:36,"It might be better if the comment said what version is requried, as opposed to the version that we have right now",https://github.com/bitcoin/bitcoin/pull/19933#discussion_r499260671,499260671,src/wallet/walletutil.cpp
Saibato,2020-10-04 16:22:03,"```suggestion\n    // account for possible trailing backslash,  if we would have bumped to boost 1.60 we could use a simple  fs::relative call\n```",https://github.com/bitcoin/bitcoin/pull/19933#discussion_r499263494,499263494,src/wallet/walletutil.cpp
