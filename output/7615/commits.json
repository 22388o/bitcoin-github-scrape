[
  {
    "sha": "39fa73eebc1725a3af0b581d3f761e7c430f96c7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozOWZhNzNlZWJjMTcyNWEzYWYwYjU4MWQzZjc2MWU3YzQzMGY5NmM3",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2016-01-20T17:49:08Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2016-06-30T11:35:27Z"
      },
      "message": "[wallet] Make minimum change depend on minimum relay fee",
      "tree": {
        "sha": "59b48b5192d81390c745f172accfa3f63a9e0d10",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/59b48b5192d81390c745f172accfa3f63a9e0d10"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/39fa73eebc1725a3af0b581d3f761e7c430f96c7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/39fa73eebc1725a3af0b581d3f761e7c430f96c7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/39fa73eebc1725a3af0b581d3f761e7c430f96c7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/39fa73eebc1725a3af0b581d3f761e7c430f96c7/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3685e0c1da296be533fef4abcf1b1734ed7d85e7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3685e0c1da296be533fef4abcf1b1734ed7d85e7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3685e0c1da296be533fef4abcf1b1734ed7d85e7"
      }
    ],
    "stats": {
      "total": 42,
      "additions": 31,
      "deletions": 11
    },
    "files": [
      {
        "sha": "0cd42bcbfac48b7ce5eb9d04f2109c6ce456ac7c",
        "filename": "src/qt/coincontroldialog.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/39fa73eebc1725a3af0b581d3f761e7c430f96c7/src/qt/coincontroldialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/39fa73eebc1725a3af0b581d3f761e7c430f96c7/src/qt/coincontroldialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/coincontroldialog.cpp?ref=39fa73eebc1725a3af0b581d3f761e7c430f96c7",
        "patch": "@@ -582,8 +582,7 @@ void CoinControlDialog::updateLabels(WalletModel *model, QDialog* dialog)\n                 nChange -= nPayFee;\n \n             // Never create dust outputs; if we would, just add the dust to the fee.\n-            if (nChange > 0 && nChange < MIN_CHANGE)\n-            {\n+            if (nChange > 0 && nChange < model->getMinChange()) {\n                 CTxOut txout(nChange, (CScript)std::vector<unsigned char>(24, 0));\n                 if (txout.IsDust(::minRelayTxFee))\n                 {"
      },
      {
        "sha": "77e767770a5ed2d82c26633bce5985a6b47d5fbe",
        "filename": "src/qt/walletmodel.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/39fa73eebc1725a3af0b581d3f761e7c430f96c7/src/qt/walletmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/39fa73eebc1725a3af0b581d3f761e7c430f96c7/src/qt/walletmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.cpp?ref=39fa73eebc1725a3af0b581d3f761e7c430f96c7",
        "patch": "@@ -55,6 +55,11 @@ WalletModel::~WalletModel()\n     unsubscribeFromCoreSignals();\n }\n \n+CAmount WalletModel::getMinChange() const\n+{\n+    return wallet->GetMinChange();\n+}\n+\n CAmount WalletModel::getBalance(const CCoinControl *coinControl) const\n {\n     if (coinControl)"
      },
      {
        "sha": "8722e1aa5c83aa71b4de572a73d767c0a892d639",
        "filename": "src/qt/walletmodel.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/39fa73eebc1725a3af0b581d3f761e7c430f96c7/src/qt/walletmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/39fa73eebc1725a3af0b581d3f761e7c430f96c7/src/qt/walletmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.h?ref=39fa73eebc1725a3af0b581d3f761e7c430f96c7",
        "patch": "@@ -130,6 +130,7 @@ class WalletModel : public QObject\n     TransactionTableModel *getTransactionTableModel();\n     RecentRequestsTableModel *getRecentRequestsTableModel();\n \n+    CAmount getMinChange() const;\n     CAmount getBalance(const CCoinControl *coinControl = NULL) const;\n     CAmount getUnconfirmedBalance() const;\n     CAmount getImmatureBalance() const;"
      },
      {
        "sha": "a71f2b07c08753f63bfbf6e23bbcb5562a51b6f7",
        "filename": "src/wallet/test/wallet_tests.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/39fa73eebc1725a3af0b581d3f761e7c430f96c7/src/wallet/test/wallet_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/39fa73eebc1725a3af0b581d3f761e7c430f96c7/src/wallet/test/wallet_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/test/wallet_tests.cpp?ref=39fa73eebc1725a3af0b581d3f761e7c430f96c7",
        "patch": "@@ -67,6 +67,9 @@ static bool equal_sets(CoinSet a, CoinSet b)\n \n BOOST_AUTO_TEST_CASE(coin_selection_tests)\n {\n+    const CAmount MIN_CHANGE = wallet.GetMinChange();\n+    BOOST_CHECK(MIN_CHANGE > 0);\n+\n     CoinSet setCoinsRet, setCoinsRet2;\n     CAmount nValueRet;\n "
      },
      {
        "sha": "e21b0b7cf3809c708fe90cfa8b684a3c7b51a1f2",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 19,
        "deletions": 7,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/39fa73eebc1725a3af0b581d3f761e7c430f96c7/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/39fa73eebc1725a3af0b581d3f761e7c430f96c7/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=39fa73eebc1725a3af0b581d3f761e7c430f96c7",
        "patch": "@@ -1792,6 +1792,19 @@ CAmount CWallet::GetImmatureWatchOnlyBalance() const\n     return nTotal;\n }\n \n+CAmount CWallet::GetMinChange() const\n+{\n+    LOCK(cs_main);\n+    // Coupling the minimum change with the minimum relay fee has two reasons:\n+    // A user should be able to create transactions even though their wallet is\n+    //  filled with small inputs: Small change avoidance would otherwise add\n+    //  many unspents, such that the transaction exceeds the maximum allowed\n+    //  size.\n+    // However, creating change too small would instead fragment the user's\n+    //  wallet into small unspents over time.\n+    return ::minRelayTxFee.GetFee(MAX_STANDARD_TX_SIZE);\n+}\n+\n void CWallet::AvailableCoins(vector<COutput>& vCoins, bool fOnlyConfirmed, const CCoinControl *coinControl, bool fIncludeZeroValue) const\n {\n     vCoins.clear();\n@@ -1897,6 +1910,8 @@ bool CWallet::SelectCoinsMinConf(const CAmount& nTargetValue, int nConfMine, int\n     setCoinsRet.clear();\n     nValueRet = 0;\n \n+    const CAmount nMinChange = GetMinChange();\n+\n     // List of values less than target\n     pair<CAmount, pair<const CWalletTx*,unsigned int> > coinLowestLarger;\n     coinLowestLarger.first = std::numeric_limits<CAmount>::max();\n@@ -1926,9 +1941,7 @@ bool CWallet::SelectCoinsMinConf(const CAmount& nTargetValue, int nConfMine, int\n             setCoinsRet.insert(coin.second);\n             nValueRet += coin.first;\n             return true;\n-        }\n-        else if (n < nTargetValue + MIN_CHANGE)\n-        {\n+        } else if (n < nTargetValue + nMinChange) {\n             vValue.push_back(coin);\n             nTotalLower += n;\n         }\n@@ -1964,14 +1977,13 @@ bool CWallet::SelectCoinsMinConf(const CAmount& nTargetValue, int nConfMine, int\n     CAmount nBest;\n \n     ApproximateBestSubset(vValue, nTotalLower, nTargetValue, vfBest, nBest);\n-    if (nBest != nTargetValue && nTotalLower >= nTargetValue + MIN_CHANGE)\n-        ApproximateBestSubset(vValue, nTotalLower, nTargetValue + MIN_CHANGE, vfBest, nBest);\n+    if (nBest != nTargetValue && nTotalLower >= nTargetValue + nMinChange)\n+        ApproximateBestSubset(vValue, nTotalLower, nTargetValue + nMinChange, vfBest, nBest);\n \n     // If we have a bigger coin and (either the stochastic approximation didn't find a good solution,\n     //                                   or the next bigger coin is closer), return the bigger coin\n     if (coinLowestLarger.second.first &&\n-        ((nBest != nTargetValue && nBest < nTargetValue + MIN_CHANGE) || coinLowestLarger.first <= nBest))\n-    {\n+        ((nBest != nTargetValue && nBest < nTargetValue + nMinChange) || coinLowestLarger.first <= nBest)) {\n         setCoinsRet.insert(coinLowestLarger.second);\n         nValueRet += coinLowestLarger.first;\n     }"
      },
      {
        "sha": "1fe04a9e2c591bc8cfa8fcf50b6a2bccdd131ab2",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/39fa73eebc1725a3af0b581d3f761e7c430f96c7/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/39fa73eebc1725a3af0b581d3f761e7c430f96c7/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=39fa73eebc1725a3af0b581d3f761e7c430f96c7",
        "patch": "@@ -45,8 +45,6 @@ static const CAmount DEFAULT_TRANSACTION_FEE = 0;\n static const CAmount DEFAULT_FALLBACK_FEE = 20000;\n //! -mintxfee default\n static const CAmount DEFAULT_TRANSACTION_MINFEE = 1000;\n-//! minimum change amount\n-static const CAmount MIN_CHANGE = CENT;\n //! Default for -spendzeroconfchange\n static const bool DEFAULT_SPEND_ZEROCONF_CHANGE = true;\n //! Default for -sendfreetransactions\n@@ -735,6 +733,8 @@ class CWallet : public CCryptoKeyStore, public CValidationInterface\n     void ReacceptWalletTransactions();\n     void ResendWalletTransactions(int64_t nBestBlockTime);\n     std::vector<uint256> ResendWalletTransactionsBefore(int64_t nTime);\n+\n+    CAmount GetMinChange() const;\n     CAmount GetBalance() const;\n     CAmount GetUnconfirmedBalance() const;\n     CAmount GetImmatureBalance() const;"
      }
    ]
  }
]