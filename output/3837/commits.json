[
  {
    "sha": "75ebced4992aab97b63c1a0842faf7dc37b86768",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3NWViY2VkNDk5MmFhYjk3YjYzYzFhMDg0MmZhZjdkYzM3Yjg2NzY4",
    "commit": {
      "author": {
        "name": "Alon Muroch",
        "email": "alonmuroch@gmail.com",
        "date": "2014-03-10T18:23:19Z"
      },
      "committer": {
        "name": "Alon Muroch",
        "email": "alonmuroch@gmail.com",
        "date": "2014-04-01T14:08:53Z"
      },
      "message": "added many rpc wallet tests\n\ndeleted the empty no throw test in rpc_wallet_tests line 65\n\nfixed some comments\n\nstarting verify tests\n\nfinished verify message tests\n\nchanged some comments",
      "tree": {
        "sha": "422aef83db2729756787deeecf7edd9b3f3bd5b4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/422aef83db2729756787deeecf7edd9b3f3bd5b4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/75ebced4992aab97b63c1a0842faf7dc37b86768",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/75ebced4992aab97b63c1a0842faf7dc37b86768",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/75ebced4992aab97b63c1a0842faf7dc37b86768",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/75ebced4992aab97b63c1a0842faf7dc37b86768/comments",
    "author": {
      "login": "alonmuroch",
      "id": 3773981,
      "node_id": "MDQ6VXNlcjM3NzM5ODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3773981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alonmuroch",
      "html_url": "https://github.com/alonmuroch",
      "followers_url": "https://api.github.com/users/alonmuroch/followers",
      "following_url": "https://api.github.com/users/alonmuroch/following{/other_user}",
      "gists_url": "https://api.github.com/users/alonmuroch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alonmuroch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alonmuroch/subscriptions",
      "organizations_url": "https://api.github.com/users/alonmuroch/orgs",
      "repos_url": "https://api.github.com/users/alonmuroch/repos",
      "events_url": "https://api.github.com/users/alonmuroch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alonmuroch/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "alonmuroch",
      "id": 3773981,
      "node_id": "MDQ6VXNlcjM3NzM5ODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3773981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alonmuroch",
      "html_url": "https://github.com/alonmuroch",
      "followers_url": "https://api.github.com/users/alonmuroch/followers",
      "following_url": "https://api.github.com/users/alonmuroch/following{/other_user}",
      "gists_url": "https://api.github.com/users/alonmuroch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alonmuroch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alonmuroch/subscriptions",
      "organizations_url": "https://api.github.com/users/alonmuroch/orgs",
      "repos_url": "https://api.github.com/users/alonmuroch/repos",
      "events_url": "https://api.github.com/users/alonmuroch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alonmuroch/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d138598f63cc980c1333e7c63a95b19e6b279025",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d138598f63cc980c1333e7c63a95b19e6b279025",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d138598f63cc980c1333e7c63a95b19e6b279025"
      }
    ],
    "stats": {
      "total": 87,
      "additions": 87,
      "deletions": 0
    },
    "files": [
      {
        "sha": "ac6d8ad8f0879e698e39e646c7fbc4cfbaad2f57",
        "filename": "src/test/rpc_wallet_tests.cpp",
        "status": "modified",
        "additions": 87,
        "deletions": 0,
        "changes": 87,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/75ebced4992aab97b63c1a0842faf7dc37b86768/src/test/rpc_wallet_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/75ebced4992aab97b63c1a0842faf7dc37b86768/src/test/rpc_wallet_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/rpc_wallet_tests.cpp?ref=75ebced4992aab97b63c1a0842faf7dc37b86768",
        "patch": "@@ -67,6 +67,31 @@ BOOST_AUTO_TEST_CASE(rpc_wallet)\n \n     LOCK(pwalletMain->cs_wallet);\n \n+    CPubKey demoPubkey = pwalletMain->GenerateNewKey();\n+\tCBitcoinAddress demoAddress = CBitcoinAddress(CTxDestination(demoPubkey.GetID()));\n+\tValue retValue;\n+\tstring strAccount = \"walletDemoAccount\";\n+\tstring strPurpose = \"receive\";\n+\tBOOST_CHECK_NO_THROW({ /*Initialize Wallet with an account */\n+\t\tCWalletDB walletdb(pwalletMain->strWalletFile);\n+\t\tCAccount account;\n+\t\taccount.vchPubKey = demoPubkey;\n+\t\tpwalletMain->SetAddressBook(account.vchPubKey.GetID(), strAccount, strPurpose);\n+\t\twalletdb.WriteAccount(strAccount, account);\n+\t});\n+\n+\n+\t/*********************************\n+\t * \t\t\tsetaccount\n+\t *********************************/\n+\tBOOST_CHECK_NO_THROW(CallRPC(\"setaccount 1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ nullaccount\"));\n+\tBOOST_CHECK_THROW(CallRPC(\"setaccount\"), runtime_error);\n+\t/* 1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4X (33 chars) is an illegal address (should be 34 chars) */\n+\tBOOST_CHECK_THROW(CallRPC(\"setaccount 1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4X nullaccount\"), runtime_error);\n+\n+    /*********************************\n+     * \t\t\tlistunspent\n+     *********************************/\n     BOOST_CHECK_NO_THROW(CallRPC(\"listunspent\"));\n     BOOST_CHECK_THROW(CallRPC(\"listunspent string\"), runtime_error);\n     BOOST_CHECK_THROW(CallRPC(\"listunspent 0 string\"), runtime_error);\n@@ -75,19 +100,81 @@ BOOST_AUTO_TEST_CASE(rpc_wallet)\n     BOOST_CHECK_NO_THROW(r=CallRPC(\"listunspent 0 1 []\"));\n     BOOST_CHECK(r.get_array().empty());\n \n+    /*********************************\n+\t * \t\tlistreceivedbyaddress\n+\t *********************************/\n     BOOST_CHECK_NO_THROW(CallRPC(\"listreceivedbyaddress\"));\n     BOOST_CHECK_NO_THROW(CallRPC(\"listreceivedbyaddress 0\"));\n     BOOST_CHECK_THROW(CallRPC(\"listreceivedbyaddress not_int\"), runtime_error);\n     BOOST_CHECK_THROW(CallRPC(\"listreceivedbyaddress 0 not_bool\"), runtime_error);\n     BOOST_CHECK_NO_THROW(CallRPC(\"listreceivedbyaddress 0 true\"));\n     BOOST_CHECK_THROW(CallRPC(\"listreceivedbyaddress 0 true extra\"), runtime_error);\n \n+    /*********************************\n+\t * \t\tlistreceivedbyaccount\n+\t *********************************/\n     BOOST_CHECK_NO_THROW(CallRPC(\"listreceivedbyaccount\"));\n     BOOST_CHECK_NO_THROW(CallRPC(\"listreceivedbyaccount 0\"));\n     BOOST_CHECK_THROW(CallRPC(\"listreceivedbyaccount not_int\"), runtime_error);\n     BOOST_CHECK_THROW(CallRPC(\"listreceivedbyaccount 0 not_bool\"), runtime_error);\n     BOOST_CHECK_NO_THROW(CallRPC(\"listreceivedbyaccount 0 true\"));\n     BOOST_CHECK_THROW(CallRPC(\"listreceivedbyaccount 0 true extra\"), runtime_error);\n+\n+    /*********************************\n+\t * \t\tgetrawchangeaddress\n+\t *********************************/\n+    BOOST_CHECK_NO_THROW(CallRPC(\"getrawchangeaddress\"));\n+\n+    /*********************************\n+\t * \t\tgetnewaddress\n+\t *********************************/\n+    BOOST_CHECK_NO_THROW(CallRPC(\"getnewaddress\"));\n+    BOOST_CHECK_NO_THROW(CallRPC(\"getnewaddress getnewaddress_demoaccount\"));\n+\n+    /*********************************\n+\t * \t\tgetaccountaddress\n+\t *********************************/\n+    BOOST_CHECK_NO_THROW(CallRPC(\"getaccountaddress \\\"\\\"\"));\n+\tBOOST_CHECK_NO_THROW(CallRPC(\"getaccountaddress accountThatDoesntExists\")); // Should generate a new account\n+\tBOOST_CHECK_NO_THROW(retValue = CallRPC(\"getaccountaddress \" + strAccount));\n+\tBOOST_CHECK(CBitcoinAddress(retValue.get_str()).Get() == demoAddress.Get());\n+\n+\t/*********************************\n+\t * \t\t\tgetaccount\n+\t *********************************/\n+\tBOOST_CHECK_THROW(CallRPC(\"getaccount\"), runtime_error);\n+\tBOOST_CHECK_NO_THROW(CallRPC(\"getaccount \" + demoAddress.ToString()));\n+\n+\t/*********************************\n+\t * \tsignmessage + verifymessage\n+\t *********************************/\n+\tBOOST_CHECK_NO_THROW(retValue = CallRPC(\"signmessage \" + demoAddress.ToString() + \" mymessage\"));\n+\tBOOST_CHECK_THROW(CallRPC(\"signmessage\"), runtime_error);\n+\t/* Should throw error because this address is not loaded in the wallet */\n+\tBOOST_CHECK_THROW(CallRPC(\"signmessage 1QFqqMUD55ZV3PJEJZtaKCsQmjLT6JkjvJ mymessage\"), runtime_error);\n+\n+\t/* missing arguments */\n+\tBOOST_CHECK_THROW(CallRPC(\"verifymessage \"+ demoAddress.ToString()), runtime_error);\n+\tBOOST_CHECK_THROW(CallRPC(\"verifymessage \"+ demoAddress.ToString() + \" \" + retValue.get_str()), runtime_error);\n+\t/* Illegal address */\n+\tBOOST_CHECK_THROW(CallRPC(\"verifymessage 1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4X \" + retValue.get_str() + \" mymessage\"), runtime_error);\n+\t/* wrong address */\n+\tBOOST_CHECK(CallRPC(\"verifymessage 1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ \" + retValue.get_str() + \" mymessage\").get_bool() == false);\n+\t/* Correct address and signature but wrong message */\n+\tBOOST_CHECK(CallRPC(\"verifymessage \"+ demoAddress.ToString() + \" \" + retValue.get_str() + \" wrongmessage\").get_bool() == false);\n+\t/* Correct address, message and signature*/\n+\tBOOST_CHECK(CallRPC(\"verifymessage \"+ demoAddress.ToString() + \" \" + retValue.get_str() + \" mymessage\").get_bool() == true);\n+\n+\t/*********************************\n+\t * \t\tgetaddressesbyaccount\n+\t *********************************/\n+\tBOOST_CHECK_THROW(CallRPC(\"getaddressesbyaccount\"), runtime_error);\n+\tBOOST_CHECK_NO_THROW(retValue = CallRPC(\"getaddressesbyaccount \" + strAccount));\n+\tArray arr = retValue.get_array();\n+\tBOOST_CHECK(arr.size() > 0);\n+\tBOOST_CHECK(CBitcoinAddress(arr[0].get_str()).Get() == demoAddress.Get());\n+\n }\n \n+\n BOOST_AUTO_TEST_SUITE_END()"
      }
    ]
  }
]