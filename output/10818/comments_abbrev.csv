morcos,2017-07-13T21:33:14Z,"This seems right to me and it solved the problem, but I'm not confident enough in understanding startup/shutdown to actually give it an ACK.\n\nThanks!\n",https://github.com/bitcoin/bitcoin/pull/10818#issuecomment-315208268,315208268,
meshcollider,2017-07-13T23:23:11Z,utACK https://github.com/bitcoin/bitcoin/commit/73b6b4e7c0a450bb88074a7d59a9237b4703302b,https://github.com/bitcoin/bitcoin/pull/10818#issuecomment-315228236,315228236,
jonasschnelli,2017-07-14T08:13:46Z,utACK 73b6b4e7c0a450bb88074a7d59a9237b4703302b,https://github.com/bitcoin/bitcoin/pull/10818#issuecomment-315300046,315300046,
achow101,2017-07-14T18:21:11Z,utACK 73b6b4e7c0a450bb88074a7d59a9237b4703302b,https://github.com/bitcoin/bitcoin/pull/10818#issuecomment-315431213,315431213,
TheBlueMatt,2017-07-14T22:34:30Z,"Why not just make AppInitSanityCheck actually take the lock instead of just probing? It seems strange to call the entire shutdown sequence instead when literally none of it is needed when we already have a framework for skipping it (ala if AppinitSanityCheck fails, except for GUI, which really should be fixed in GUI, not by adding a boolean).",https://github.com/bitcoin/bitcoin/pull/10818#issuecomment-315483601,315483601,
sipa,2017-07-14T23:41:56Z,@TheBlueMatt I'm confused how that would help here.,https://github.com/bitcoin/bitcoin/pull/10818#issuecomment-315491817,315491817,
TheBlueMatt,2017-07-14T23:51:18Z,"My point is that this is (effecitlvely) not a problem in bitcoind. The issue in bitcoin-qt is that it calls Shutdown() where it should not (and bitcoind does not). If we want to separately fix the race that is also present in bitcoind, we should stop doing this strange LockDataDirectory(true)...one function return/call later...LockDataDirectory(false) thing.",https://github.com/bitcoin/bitcoin/pull/10818#issuecomment-315492849,315492849,
laanwj,2017-07-15T08:09:25Z,">  when we already have a framework for skipping it (ala if AppinitSanityCheck fails, except for GUI, which really should be fixed in GUI, not by adding a boolean).\n\nThe point, which I explain in https://github.com/bitcoin/bitcoin/issues/10815#issuecomment-315170581, is that that mechanism *ALSO* doesn't work for bitcoind.\n\n> If we want to separately fix the race that is also present in bi",https://github.com/bitcoin/bitcoin/pull/10818#issuecomment-315518308,315518308,
laanwj,2017-07-15T08:49:38Z,Closign in favor of #10832,https://github.com/bitcoin/bitcoin/pull/10818#issuecomment-315520298,315520298,
promag,2017-07-14T23:56:47Z,Should be static and atomic?,https://github.com/bitcoin/bitcoin/pull/10818#discussion_r127569154,127569154,src/init.cpp
laanwj,2017-07-15T08:04:59Z,"static ok, atomic no, there's no concurrent modification as the flag is set from one place in the initialization sequence.",https://github.com/bitcoin/bitcoin/pull/10818#discussion_r127579461,127579461,src/init.cpp
