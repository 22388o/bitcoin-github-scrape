[
  {
    "sha": "73b6b4e7c0a450bb88074a7d59a9237b4703302b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3M2I2YjRlN2MwYTQ1MGJiODgwNzRhN2Q1OWE5MjM3YjQ3MDMzMDJi",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-07-13T18:52:26Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-07-13T18:54:03Z"
      },
      "message": "init: Keep track of whether data directory locked, don't cleanup if not\n\nKeep a flag indicating whether the data directory was locked.\n\nIf not, Interrupt and Shutdown are no-ops. This avoids things from being\ncleaned up if they were created by another instance.",
      "tree": {
        "sha": "ba364d7ea98cbf895ec27d1057ffdbd8ae3c083c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ba364d7ea98cbf895ec27d1057ffdbd8ae3c083c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/73b6b4e7c0a450bb88074a7d59a9237b4703302b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/73b6b4e7c0a450bb88074a7d59a9237b4703302b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/73b6b4e7c0a450bb88074a7d59a9237b4703302b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/73b6b4e7c0a450bb88074a7d59a9237b4703302b/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7666250ffb4e8fc5c98556e2c8e121c72d6fe54c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7666250ffb4e8fc5c98556e2c8e121c72d6fe54c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7666250ffb4e8fc5c98556e2c8e121c72d6fe54c"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 14,
      "deletions": 0
    },
    "files": [
      {
        "sha": "15b5132ac4b59259516a0e13182c92051237b926",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/73b6b4e7c0a450bb88074a7d59a9237b4703302b/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/73b6b4e7c0a450bb88074a7d59a9237b4703302b/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=73b6b4e7c0a450bb88074a7d59a9237b4703302b",
        "patch": "@@ -75,6 +75,9 @@ static const bool DEFAULT_STOPAFTERBLOCKIMPORT = false;\n std::unique_ptr<CConnman> g_connman;\n std::unique_ptr<PeerLogicValidation> peerLogic;\n \n+/** Set at startup if the data directory was succesfully locked */\n+bool g_locked_data_directory = false;\n+\n #if ENABLE_ZMQ\n static CZMQNotificationInterface* pzmqNotificationInterface = NULL;\n #endif\n@@ -158,6 +161,11 @@ static std::unique_ptr<ECCVerifyHandle> globalVerifyHandle;\n \n void Interrupt(boost::thread_group& threadGroup)\n {\n+    if (!g_locked_data_directory) {\n+        // If we never succeeded in locking the data directory, do not interrupt anything.\n+        // Nothing will have been started anyway.\n+        return;\n+    }\n     InterruptHTTPServer();\n     InterruptHTTPRPC();\n     InterruptRPC();\n@@ -170,6 +178,11 @@ void Interrupt(boost::thread_group& threadGroup)\n \n void Shutdown()\n {\n+    if (!g_locked_data_directory) {\n+        // If we never succeeded in locking the data directory, do not clean up anything.\n+        // This avoids deleting RPC cookies of the running instance and worse.\n+        return;\n+    }\n     LogPrintf(\"%s: In progress...\\n\", __func__);\n     static CCriticalSection cs_Shutdown;\n     TRY_LOCK(cs_Shutdown, lockShutdown);\n@@ -1184,6 +1197,7 @@ bool AppInitMain(boost::thread_group& threadGroup, CScheduler& scheduler)\n         // Detailed error printed inside LockDataDirectory\n         return false;\n     }\n+    g_locked_data_directory = true;\n \n #ifndef WIN32\n     CreatePidFile(GetPidFile(), getpid());"
      }
    ]
  }
]