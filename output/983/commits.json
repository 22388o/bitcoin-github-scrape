[
  {
    "sha": "a6aee96c7e25d48aae4bc99b300de795263f0e13",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNmFlZTk2YzdlMjVkNDhhYWU0YmM5OWIzMDBkZTc5NTI2M2YwZTEz",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2012-03-24T20:36:10Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2012-03-25T10:33:30Z"
      },
      "message": "remove unused functions from util.h/util.cpp",
      "tree": {
        "sha": "80f338138284dd211ad8dfff0d2435ee0497a279",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/80f338138284dd211ad8dfff0d2435ee0497a279"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a6aee96c7e25d48aae4bc99b300de795263f0e13",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a6aee96c7e25d48aae4bc99b300de795263f0e13",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a6aee96c7e25d48aae4bc99b300de795263f0e13",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a6aee96c7e25d48aae4bc99b300de795263f0e13/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2e2c04e250fff9a3404b4da2cf0f73c38c126050",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2e2c04e250fff9a3404b4da2cf0f73c38c126050",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2e2c04e250fff9a3404b4da2cf0f73c38c126050"
      }
    ],
    "stats": {
      "total": 51,
      "additions": 0,
      "deletions": 51
    },
    "files": [
      {
        "sha": "08752e693074e87f69a280608b7382b8a5277c36",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 11,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a6aee96c7e25d48aae4bc99b300de795263f0e13/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a6aee96c7e25d48aae4bc99b300de795263f0e13/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=a6aee96c7e25d48aae4bc99b300de795263f0e13",
        "patch": "@@ -767,17 +767,6 @@ void PrintException(std::exception* pex, const char* pszThread)\n     throw;\n }\n \n-void ThreadOneMessageBox(string strMessage)\n-{\n-    // Skip message boxes if one is already open\n-    static bool fMessageBoxOpen;\n-    if (fMessageBoxOpen)\n-        return;\n-    fMessageBoxOpen = true;\n-    ThreadSafeMessageBox(strMessage, \"Bitcoin\", wxOK | wxICON_EXCLAMATION);\n-    fMessageBoxOpen = false;\n-}\n-\n void PrintExceptionContinue(std::exception* pex, const char* pszThread)\n {\n     char pszMessage[10000];"
      },
      {
        "sha": "a2e1419835d39036f5d2ccf5b857728b96529bca",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 0,
        "deletions": 40,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a6aee96c7e25d48aae4bc99b300de795263f0e13/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a6aee96c7e25d48aae4bc99b300de795263f0e13/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=a6aee96c7e25d48aae4bc99b300de795263f0e13",
        "patch": "@@ -85,7 +85,6 @@ T* alignup(T* p)\n #define strlwr(psz)         to_lower(psz)\n #define _strlwr(psz)        to_lower(psz)\n #define MAX_PATH            1024\n-#define Beep(n1,n2)         (0)\n inline void Sleep(int64 n)\n {\n     /*Boost has a year 2038 problem\u2014 if the request sleep time is past epoch+2^31 seconds the sleep returns instantly.\n@@ -335,25 +334,6 @@ inline std::string HexStr(const std::vector<unsigned char>& vch, bool fSpaces=fa\n     return HexStr(vch.begin(), vch.end(), fSpaces);\n }\n \n-template<typename T>\n-std::string HexNumStr(const T itbegin, const T itend, bool f0x=true)\n-{\n-    if (itbegin == itend)\n-        return \"\";\n-    const unsigned char* pbegin = (const unsigned char*)&itbegin[0];\n-    const unsigned char* pend = pbegin + (itend - itbegin) * sizeof(itbegin[0]);\n-    std::string str = (f0x ? \"0x\" : \"\");\n-    str.reserve(str.size() + (pend-pbegin) * 2);\n-    for (const unsigned char* p = pend-1; p >= pbegin; p--)\n-        str += strprintf(\"%02x\", *p);\n-    return str;\n-}\n-\n-inline std::string HexNumStr(const std::vector<unsigned char>& vch, bool f0x=true)\n-{\n-    return HexNumStr(vch.begin(), vch.end(), f0x);\n-}\n-\n template<typename T>\n void PrintHex(const T pbegin, const T pend, const char* pszFormat=\"%s\", bool fSpaces=true)\n {\n@@ -475,21 +455,6 @@ bool SoftSetBoolArg(const std::string& strArg, bool fValue);\n         }                                       \\\n     }\n \n-#define CATCH_PRINT_EXCEPTION(pszFn)     \\\n-    catch (std::exception& e) {          \\\n-        PrintException(&e, (pszFn));     \\\n-    } catch (...) {                      \\\n-        PrintException(NULL, (pszFn));   \\\n-    }\n-\n-\n-\n-\n-\n-\n-\n-\n-\n \n template<typename T1>\n inline uint256 Hash(const T1 pbegin, const T1 pend)\n@@ -689,11 +654,6 @@ inline void SetThreadPriority(int nPriority)\n #endif\n }\n \n-inline bool TerminateThread(pthread_t hthread, unsigned int nExitCode)\n-{\n-    return (pthread_cancel(hthread) == 0);\n-}\n-\n inline void ExitThread(size_t nExitCode)\n {\n     pthread_exit((void*)nExitCode);"
      }
    ]
  }
]