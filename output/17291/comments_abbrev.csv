DrahtBot,2019-10-29 00:33:29,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#17229](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/17229.html) (tests: Add fuzzing harnesses for various Ba",https://github.com/bitcoin/bitcoin/pull/17291#issuecomment-547204969,547204969,
laanwj,2019-10-29 19:32:53,Concept ACK :smile: ,https://github.com/bitcoin/bitcoin/pull/17291#issuecomment-547592784,547592784,
elichai,2019-10-30 12:52:05,"Concept ACK.\n~~Though it might also be nice to fuzz them separately. (specifically the Parse function).\nBecause if Format works correctly than parse here is always checked under sunny day scenario.~~\n\nEDIT: You already do that :)",https://github.com/bitcoin/bitcoin/pull/17291#issuecomment-547886672,547886672,
elichai,2019-10-30 12:50:47,can you explain the rational for this if? shouldn't it always be 20?,https://github.com/bitcoin/bitcoin/pull/17291#discussion_r340593673,340593673,src/test/fuzz/parse_iso8601.cpp
practicalswift,2019-10-30 13:03:00,"Unfortunately not:\n\n```\n$ FormatISO8601DateTime(std::numeric_limits<int64_t>::min())\n-219246529--2134443519-00T08:29:52Z\n\n$ FormatISO8601DateTime(0)\n1970-01-01T00:00:00Z\n\n$ FormatISO8601DateTime(std::numeric_limits<int64_t>::max())\n219250468--2134443519-00T15:30:07Z\n```\n\nThus we're only expecting the round-trip to work in the 20 char case :)",https://github.com/bitcoin/bitcoin/pull/17291#discussion_r340598988,340598988,src/test/fuzz/parse_iso8601.cpp
elichai,2019-10-30 13:11:01,what the heck is that :O ,https://github.com/bitcoin/bitcoin/pull/17291#discussion_r340602644,340602644,src/test/fuzz/parse_iso8601.cpp
MarcoFalke,2019-10-30 13:28:55,"Can remove this?\n\nAlso: (I know it is not related to this pull request), but could you please add `undefined` to `--with-sanitizers=fuzzer,address` in the `doc/fuzzing.md` readme?",https://github.com/bitcoin/bitcoin/pull/17291#discussion_r340611839,340611839,test/fuzz/test_runner.py
MarcoFalke,2019-10-30 13:29:58,"btw, the seeds look rather boring this time: https://github.com/bitcoin-core/qa-assets/commit/0710bfd617ed8cbb337b7be79efba771632e9b1f",https://github.com/bitcoin/bitcoin/pull/17291#discussion_r340612425,340612425,test/fuzz/test_runner.py
practicalswift,2019-10-30 13:34:31,Done! Please re-review :),https://github.com/bitcoin/bitcoin/pull/17291#discussion_r340614810,340614810,test/fuzz/test_runner.py
MarcoFalke,2019-12-18 20:28:15,"This will fail when the year overflows after adding `1900`. E.g.\n\n```\n$ base64 crash-59af3ac3c0a4395f770dbbd0f956cd680aa65a3d \nAAAAALQ3CVA=\n",https://github.com/bitcoin/bitcoin/pull/17291#discussion_r359553608,359553608,src/test/fuzz/parse_iso8601.cpp
practicalswift,2019-12-18 21:48:54,"@MarcoFalke I've seen that case. I'm running with this patch in my local tree:\n\n```diff\ndiff --git a/src/util/time.cpp b/src/util/time.cpp\nindex 2afff2626..c311c6a49 100644\n--- a/src/util/time.cpp\n+++ b/src/util/time.cpp\n@@ -98,6 +98,14 @@ std::string FormatISO8601DateTime(int64_t nTime) {\n #else\n     gmtime_r(&time_val, &ts);\n #endif\n+    if (!((ts.tm_year >= 0 && ts.tm_year",https://github.com/bitcoin/bitcoin/pull/17291#discussion_r359585850,359585850,src/test/fuzz/parse_iso8601.cpp
