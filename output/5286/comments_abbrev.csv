petertodd,2014-11-15T17:07:48Z,There's unit tests that you have to modify as well; try running src/test/test_bitcoin and you'll see them fail.\n,https://github.com/bitcoin/bitcoin/pull/5286#issuecomment-63179561,63179561,
Flavien,2014-11-15T17:23:46Z,"Thanks Peter, I will fix the unit test.\n",https://github.com/bitcoin/bitcoin/pull/5286#issuecomment-63180160,63180160,
luke-jr,2014-11-15T17:28:42Z,Don't-care-ACK once tests are fixed.\n,https://github.com/bitcoin/bitcoin/pull/5286#issuecomment-63180350,63180350,
luke-jr,2014-11-15T17:31:14Z,"Minor idea: Perhaps we should set the default to a random value between 0-80 at startup, to incentivise miners making their own decision without actually forcing it explicitly.\n",https://github.com/bitcoin/bitcoin/pull/5286#issuecomment-63180444,63180444,
TheBlueMatt,2014-11-15T19:55:46Z,"This is semantically similar to #5075, and, as discussed there, this is not something to be discussed in a pull request, please propose this on the ML first, and then come back here.\n",https://github.com/bitcoin/bitcoin/pull/5286#issuecomment-63186847,63186847,
dexX7,2014-11-25T02:07:24Z,"Let me play devil's advocat and ask: why should one use OP_RETURN at all? As long as alternatives are cheaper (and faster at this point), there is not much inceive to do so.\n\nI took a look at cost as transaction size in relation to payload sizes and it turns out [40 byte OP_RETURN isn't really a great choice](http://i.imgur.com/VAGZWBK.png).\n\n80 byte however, assuming one pay-to-pubkey change ",https://github.com/bitcoin/bitcoin/pull/5286#issuecomment-64299492,64299492,
luke-jr,2014-11-25T02:12:32Z,"Well, that sounds like an argument for #5231 since bare multisig is not for data storage.\n",https://github.com/bitcoin/bitcoin/pull/5286#issuecomment-64299888,64299888,
dexX7,2014-11-25T02:43:03Z,"I agree that bare multisig encoding should be discouraged as data carrier, if this PR is accepted.\n\nThough it should be evaluated, if there is still need for #5231 then, or if it would just hurt the remaining other ""legitimate"" use cases.\n",https://github.com/bitcoin/bitcoin/pull/5286#issuecomment-64302186,64302186,
jgarzik,2014-11-25T03:00:16Z,OP_RETURN is pruneable\n,https://github.com/bitcoin/bitcoin/pull/5286#issuecomment-64303375,64303375,
laanwj,2014-12-03T10:01:21Z,"As said on the mailing list, I'm OK with this. It makes OP_RETURN more attractive to use in favor of messier, unprunable approaches.\n",https://github.com/bitcoin/bitcoin/pull/5286#issuecomment-65382605,65382605,
gavinandresen,2014-12-03T14:43:10Z,utACK\n,https://github.com/bitcoin/bitcoin/pull/5286#issuecomment-65417585,65417585,
jgarzik,2014-12-03T14:58:46Z,"ut ACK -- will close my own PR in preference to this one, after this merges, as this seems to have greater consensus.\n",https://github.com/bitcoin/bitcoin/pull/5286#issuecomment-65420432,65420432,
sipa,2014-12-03T15:03:18Z,"I'm in the middle here. If this is because the alternative is people storing data in other non-prunable ways anyway, then it's obviously a win. For some use cases, there is no way around that.\n\nBut for many there is, and this is just providing them with an easier path that may result in an ecosystem with higher costs for everyone. I don't like encouraging that, and I don't think it's in the best",https://github.com/bitcoin/bitcoin/pull/5286#issuecomment-65421296,65421296,
gmaxwell,2014-12-04T17:45:48Z,"I think OP_RETURN has shown itself to be seriously problematic; and we continue to have problems with people beleving that storing non-bitcoin related data in the chain (as opposed, e.g. to simple commitments or things like ECDH nonces) is an approved, correct, non-antisocial use of the system.  We have people selling insane data storage services, etc.  It's a bad place to be.\n\nMeanwhile, many o",https://github.com/bitcoin/bitcoin/pull/5286#issuecomment-65671770,65671770,
jgarzik,2014-12-04T18:10:55Z,@gmaxwell That's what #5075 does\n,https://github.com/bitcoin/bitcoin/pull/5286#issuecomment-65675789,65675789,
luke-jr,2014-12-04T20:56:58Z,"@jgarzik No, #5075 allows multiple outputs. What @gmaxwell is suggesting is still a single output, but with multiple pushdata opcodes.\n\n@gmaxwell Don't-care-ACK I gave this applies to your version as well.\n",https://github.com/bitcoin/bitcoin/pull/5286#issuecomment-65702244,65702244,
petertodd,2014-12-04T21:10:40Z,"-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA256\n\n> @jgarzik No, #5075 allows multiple outputs. What @gmaxwell is\n> suggesting is still a single output, but with multiple pushdata\n> opcodes.\n\nI have a pull-req open to allow that.\n\nAs for this pull-req, utACK\n-----BEGIN PGP SIGNATURE-----\nVersion: APG v1.1.1\n\niQFQBAEBCAA6BQJUgM3EMxxQZXRlciBUb2RkIChsb3cgc2VjdXJpdHkga2V5KSA8\ncGV0ZUBwZXRl",https://github.com/bitcoin/bitcoin/pull/5286#issuecomment-65704246,65704246,
gavinandresen,2014-12-04T21:34:47Z,"untested ACK.\n\nSo we've got three different suggestions for how to do this, and two ""maybe it is a bad idea to do it at all.""\n\nOf the three suggestions: I like this one best, it is simplest conceptually.\n\nAnd I still think the benefits of a prunable 80-byte OP_RETURN (and 40-byte OP_RETURN) outweigh the costs.\n",https://github.com/bitcoin/bitcoin/pull/5286#issuecomment-65707723,65707723,
petertodd,2014-12-04T21:44:04Z,"Removing the single PUSHDATA restriction is orthogonal to how many bytes are allowed, and mostly orthogonal to how many OP_RETURN outputs are allowed.\n\nOn 4 December 2014 21:35:19 GMT+00:00, Gavin Andresen notifications@github.com wrote:\n\n> untested ACK.\n> \n> So we've got three different suggestions for how to do this, and two\n> ""maybe it is a bad idea to do it at all.""\n> \n> Of the three ",https://github.com/bitcoin/bitcoin/pull/5286#issuecomment-65709045,65709045,
petertodd,2014-12-05T07:21:42Z,"@gmaxwell\n\n> this option also is permissive enough that there isn't a that is more permissive option.\n\nCreating unspendable outputs is another option that is more permissive. I'm of course supporting that in the coloured coin standard I'm working on, an approach being taken by many projects. (that particular application has no show-stopper issues even with P2SHÂ²)\n",https://github.com/bitcoin/bitcoin/pull/5286#issuecomment-65755643,65755643,
laanwj,2014-12-05T08:37:01Z,"> I think OP_RETURN has shown itself to be seriously problematic; and we continue to have problems with people beleving that storing non-bitcoin related data in the chain (as opposed, e.g. to simple commitments or things like ECDH nonces) is an approved, correct, non-antisocial use of the system\n\nI fully agree. However, practically, until the time that we have a solution for spam in unspendable ",https://github.com/bitcoin/bitcoin/pull/5286#issuecomment-65760994,65760994,
dexX7,2014-12-05T16:09:18Z,"> cluttering the UTXO set which is so much worse\n\nI believe an increase in OP_RETURN's default size would mainly serve as inceive to move away from bare multisig encoding which is currently [""cheaper""](http://i.imgur.com/VAGZWBK.png). Getting the attention of (ab-) users who create unspendable outputs, such as cryptograffiti.info, appears to be another topic and an increase to 80 byte probably h",https://github.com/bitcoin/bitcoin/pull/5286#issuecomment-65811198,65811198,
gmaxwell,2014-12-05T16:31:30Z,"Fake h160 and checkmultisig stuffing all also are limited to storing <32 bytes per push, which is why I pointed out that the limited OP_RETURN pushes would still be ""prefered"", but still lilmiting the people promoting misuse of the system from claiming that arbritary data storage is a endorsed, supported, and maintained activity.\n",https://github.com/bitcoin/bitcoin/pull/5286#issuecomment-65814751,65814751,
petertodd,2014-12-07T06:40:12Z,"@gmaxwell The relevant metric is cost per byte published; I'd suggest you get the recent P2SH IsStandard() rule removal reverted if you are concerned about sending such a ""message"" and wish to be self-consistent; see https://github.com/petertodd/uniquebits specifically https://github.com/petertodd/uniquebits/blob/master/uniquebits/_unibits.py#L85\n\n@dexX7 How was that graph calculated?\n",https://github.com/bitcoin/bitcoin/pull/5286#issuecomment-65928544,65928544,
dexX7,2014-12-08T15:38:16Z,"Hey @petertodd: the chart was created based on the following assumptions:\n- no unspendable outputs\n- after each message, the state should be similar (means in pracise there might be change)\n- all public keys are compressed\n- if public keys are used to embed, then two bytes are subtracted to form fully valid public keys\n- if the payload size surpasses capacity, then multiple transactions are c",https://github.com/bitcoin/bitcoin/pull/5286#issuecomment-66133027,66133027,
petertodd,2014-12-09T08:23:30Z,"> no unspendable outputs\n\nBetter to determine what the cost for creating them is due to coins lost to the dust limit. Also calculate w/o dust limit, as lots of hashing power doesn't follow it.\n\n> if the payload size surpasses capacity, then multiple transactions are created\n\nWhy multiple transactions? Why not have multiple outputs instead?\n",https://github.com/bitcoin/bitcoin/pull/5286#issuecomment-66248673,66248673,
bharrisau,2014-12-09T08:35:05Z,> Why multiple transactions? Why not have multiple outputs instead?\n\nOnly one OP_RETURN output per transaction?\n,https://github.com/bitcoin/bitcoin/pull/5286#issuecomment-66249680,66249680,
dexX7,2014-12-09T09:45:53Z,"> Also calculate w/o dust limit, ...\n\nI have the impression we're drifting a bit off topic, but since this is about defining new defaults, I think other defaults should be respected, such as the dust rule.\n\n> Why multiple transactions? Why not have multiple outputs instead?\n\nYou're right. It was mentioned in particular for OP_RETURN and this might be misleading. In the case of bare multisig ",https://github.com/bitcoin/bitcoin/pull/5286#issuecomment-66257266,66257266,
petertodd,2014-12-10T00:22:27Z,"> I have the impression we're drifting a bit off topic, but since this is about defining new defaults, I think other defaults should be respected, such as the dust rule.\n\nI'm interested in what the economics are of people doing proof-of-publication, not about ""respecting"" any particular rule.\n\nSimilarly assuming outputs are redeemed is _not_ a good assumption; what's the underlying economics?\",https://github.com/bitcoin/bitcoin/pull/5286#issuecomment-66384360,66384360,
dexX7,2014-12-16T16:27:33Z,"@petertodd: don't get me wrong, I fully agree and think the economics and inceive aspects should dictate the decision whether the size of OP_RETURN should be increased or not. This is also the reason why I created the chart - which might not be 100 % accurate, but close to. One can start to make assumptions about miners who don't ""respect"" the dust rule, but this is difficult to messure and there ",https://github.com/bitcoin/bitcoin/pull/5286#issuecomment-67186830,67186830,
jtimon,2015-01-08T19:05:12Z,"I think it's more important to move this check to policy.o (something similar to https://github.com/luke-jr/bitcoin/commit/581ffd7efe0f1c18f8f986005e4df3f5371fdc36) than to discuss the ""perfect"" defaults when they will always really be arbitrary. There's no guarantee that the people defending 80 won't be defending 120 in the future...\n\nBut it is true that people using bare multisig for data stor",https://github.com/bitcoin/bitcoin/pull/5286#issuecomment-69230588,69230588,
Flavien,2015-01-12T16:57:56Z,Has a decision been made regarding this PR? There seems to be some level of agreement on it.\n,https://github.com/bitcoin/bitcoin/pull/5286#issuecomment-69603327,69603327,
petertodd,2015-01-13T02:37:57Z,"@Flavien I'd be very surprised if a decision gets made that's anything other than ""status quo""\n\nAs I keep saying, design protocols with adaptive encoding.\n",https://github.com/bitcoin/bitcoin/pull/5286#issuecomment-69686637,69686637,
genjix,2015-02-02T23:11:11Z,"If devs are going to make artificial policies to encumber OP_RETURN outputs in a transaction, then eventually people will just go directly to the miners. I personally don't want to see a protocol which is increasingly shaped by influence and money. Therefore it is in your interest to allow multiple OP_RETURN outputs in a transaction each with a limit of 80 bytes. If people feel your authority is u",https://github.com/bitcoin/bitcoin/pull/5286#issuecomment-72558986,72558986,
luke-jr,2015-02-02T23:18:27Z,Going directly to miners is exactly what people _should_ be doing. Mining policy is not something developers should be responsible for.\n,https://github.com/bitcoin/bitcoin/pull/5286#issuecomment-72559966,72559966,
genjix,2015-02-02T23:20:46Z,"I agree but devs also want to shape the process rather than allowing miners to vote. And as stands, they do have some tenuous way of shaping what behaviour is allowed. I'm simply stating they will lose that power if they're too inflexible.\n",https://github.com/bitcoin/bitcoin/pull/5286#issuecomment-72560265,72560265,
luke-jr,2015-02-02T23:23:18Z,"If being too inflexible gets miners to take responsibility for their own policies, that sounds like a good idea...\n",https://github.com/bitcoin/bitcoin/pull/5286#issuecomment-72560609,72560609,
jtimon,2015-02-02T23:24:52Z,In my opinion the underlying problem is that the standard policy is far too important because users and miners don't implement their own policies. It is certainly not easy at this point.\nIn my opinion using bitcoind with a custom policy should be as simple as extending the standard policy class and calling `bitcoind -policy=custom` as shown in https://github.com/jtimon/bitcoin/commit/f71f691a81ff,https://github.com/bitcoin/bitcoin/pull/5286#issuecomment-72560796,72560796,
sipa,2015-02-02T23:25:43Z,There already is -maxdatacarriersize. All this does is change the default.\n,https://github.com/bitcoin/bitcoin/pull/5286#issuecomment-72560933,72560933,
Flavien,2015-02-02T23:28:04Z,"The problem here is that most miners don't care and are fine with whatever the default policy is as long as it doesn't increase their orphan rate.\n\nWe all understand miners should be good citizens and vote, but they just can't be bothered (just like with ""real"" democracy).\n",https://github.com/bitcoin/bitcoin/pull/5286#issuecomment-72561264,72561264,
jtimon,2015-02-02T23:29:58Z,"Sure, in the case of `-datacarriersize` it's specially surprising that the discussions continue.\nSo some people don't want the standard policy to be less important, but rather than it keeps being as important but it is the way they like it. This is very annoying and doesn't scale to many different opinions.\n",https://github.com/bitcoin/bitcoin/pull/5286#issuecomment-72561521,72561521,
Flavien,2015-02-02T23:35:10Z,"If you want `-datacarriersize` to have any practical relevance, you'll have to make it mandatory.\n",https://github.com/bitcoin/bitcoin/pull/5286#issuecomment-72562192,72562192,
gmaxwell,2015-02-02T23:50:55Z,"There is also a matter of driving competent design rather than lazy first thing that works.  E.g. In stealth addresses the early proposals use highly inefficient single ECDH point per output instead of simply pooling them.  Network behavior is one of the few bits of friction driving good technical design rather than ""move fast, break things, and force everyone else onto my way of doing thing rathe",https://github.com/bitcoin/bitcoin/pull/5286#issuecomment-72564175,72564175,
dexX7,2015-02-03T02:33:37Z,"> ... surprising that the discussions continues.\n\nIt's similar to other policy decisions such as default fees or permitting bare multisig. `maxdatacarriersize` is certainly a step in the right direction, but as long as there is a relation between default values and the actual behavior of the network, it continues to have relevance and any decision or non-decision in this context has consequences",https://github.com/bitcoin/bitcoin/pull/5286#issuecomment-72581652,72581652,
genjix,2015-02-03T03:02:38Z,"gmaxwell, your idea doesn't work for coinjoin. txs want multiple stealth outputs so they can be coinjoined.\n",https://github.com/bitcoin/bitcoin/pull/5286#issuecomment-72584269,72584269,
gmaxwell,2015-02-03T03:18:55Z,"@genjix They can be, they just have to share the ephemeral key. An important point is that a lot of the privacy of a coinjoin comes from not being able to tell if its a coinjoin or not and if so how many outputs it has, so it's really preferable to not break that if at all possible.  (See also, http://fc15.ifca.ai/preproceedings/bitcoin/paper_5.pdf )\n",https://github.com/bitcoin/bitcoin/pull/5286#issuecomment-72585713,72585713,
genjix,2015-02-03T03:37:22Z,"That doesn't work. Especially for prefixes or payment IDs. For usability, there's no way getting around needing multiple outputs.\n",https://github.com/bitcoin/bitcoin/pull/5286#issuecomment-72587206,72587206,
jtimon,2015-02-03T04:29:00Z,@dexX7 those are good points but imagine we do both: make bare multisig non-standard and change MAX_OP_RETURN_RELAY from 40 to 80 or 999999. Maybe we can also have different default constants for relay and mining. \nWill that make standard policy discussions end?\nI don't think so. That's why I prefer to focus on making policy code behavior more easily configurable rather than dedicate an unbound ,https://github.com/bitcoin/bitcoin/pull/5286#issuecomment-72590926,72590926,
gmaxwell,2015-02-03T04:42:34Z,"@genjix PeterTodd specced out an alternative that can just put many prefixes in a single output. In any case it isn't a 'free move' adding external non-system related data to transactions has serious (externalized) costs that have be considered thoughtfully, even if some usages are simple and boring.\n",https://github.com/bitcoin/bitcoin/pull/5286#issuecomment-72591893,72591893,
genjix,2015-02-03T09:46:43Z,I will just use normal Bitcoin addresses and avoid all this headache. And I'll be sure to include false positives so they can't be blacklisted or detected with certainty.\n\nAll I hear is blaa blaa about shaping Bitcoin according to how you think it should be used rather than how people are using it driven by their needs. What kind of arbitrary limit is one OP_RETURN per tx for?\n\nBitcoin is not ,https://github.com/bitcoin/bitcoin/pull/5286#issuecomment-72621652,72621652,
dexX7,2015-02-03T11:46:56Z,"@jtimon: I fully agree, moving towards user chosen policies is highly valuable, and I also support a more restrictive approach in general, but it doesn't seem to be an either-or choice. While new default values very likely won't stop similar discussions, I do believe it can encourage or discourage certain behavior.\n\nThe reduction of `OP_RETURN` to 40 byte was based on the assumption [that](http:",https://github.com/bitcoin/bitcoin/pull/5286#issuecomment-72637409,72637409,
laanwj,2015-02-03T12:10:12Z,"> 80, as the standard line length, is almost asking for ""insert your graffiti message here"".\n\nYes, that's a quote from me. I was afraid that OP_RETURN would be used en-masse to send messages. It has been standard for quite a while now and that hasn't happened, so I'm okay with increasing the size to 80 (as I've already posted earlier above).\n\nEdit: Also this has enough ACKs, no clue why this i",https://github.com/bitcoin/bitcoin/pull/5286#issuecomment-72639934,72639934,
petertodd,2015-02-03T21:14:59Z,"On Mon, Feb 02, 2015 at 08:43:08PM -0800, Gregory Maxwell wrote:\n\n> @genjix PeterTodd specced out an alternative that can just put many prefixes in a single output. \n\nThat alternative compromises on privacy for no good reason; I specced it\nonly because you asked me too and said you'd do a pull-req with the\nnecessary op-ret changes to make it work. You haven't done that, so I'm\nassuming you'",https://github.com/bitcoin/bitcoin/pull/5286#issuecomment-72736198,72736198,
btcdrak,2015-02-03T23:04:48Z,Can this be backported to `0.10`?\n,https://github.com/bitcoin/bitcoin/pull/5286#issuecomment-72755468,72755468,
petertodd,2015-02-03T23:28:03Z,@btcdrak You can submit a pull-req directly to the v0.10 branch actually. I could do that in another day or two; time-sensitive so probably better if you do.\n,https://github.com/bitcoin/bitcoin/pull/5286#issuecomment-72759012,72759012,
gidgreen,2015-02-04T10:59:03Z,"Some empirical data from the coinsecrets.org database to contribute to the discussion. So far there have been 16154 OP_RETURNs on mainnet, as of block 341912.\n\nBreakdown by protocol that we can identify:\n4877 Open Assets\n3015 Proof of Existence\n1933 CoinSpark\n600 BlockSign\n5729 (other)\n\nSo for now the two main identifiable use cases are colored coins and hashing a document to timestamp it",https://github.com/bitcoin/bitcoin/pull/5286#issuecomment-72836165,72836165,
laanwj,2015-02-04T11:29:45Z,"@gidgreen Interesting numbers, thanks for the research!\n",https://github.com/bitcoin/bitcoin/pull/5286#issuecomment-72839786,72839786,
jtimon,2015-02-04T15:39:38Z,"Proof of existence doesn't need op_return, seehttps://github.com/Blockstream/contracthashtool . In fact, there's a form of hard to censor colored coins that uses a similar technique instead of putting data in the chain (I believe the most used name is ""committed assets"".\n\nIf this gets into 0.10 I will be jealous. Why this can go in but not my commit removing the miner's hashmeter, for example?\n",https://github.com/bitcoin/bitcoin/pull/5286#issuecomment-72876802,72876802,
petertodd,2015-02-04T16:13:20Z,"On 4 February 2015 07:40:13 GMT-08:00, ""Jorge TimÃ³n"" notifications@github.com wrote:\n\n> Proof of existence doesn't need op_return,\n> seehttps://github.com/Blockstream/contracthashtool .\n\nThat technique is quite dangerous to use, as it creates coins unrecoverable by your wallet seed.\n\n> If this gets into 0.10 I will be jealous. Why this can go in but not my\n> commit removing the miner's has",https://github.com/bitcoin/bitcoin/pull/5286#issuecomment-72883492,72883492,
btcdrak,2015-02-04T16:42:13Z,"@jtimon I think the reasoning for adding this patch to `0.10` is much more straight forward: it limits ""damage"" being done by meta protocols that currently use more wasteful and bloaty encoding. Allowing them to move to `OP_RETURN` encoding sooner is better for everyone. \n\nHaving this go into 0.10 now would mean the eco system moves to relaying 80 opreturns faster than if we wait for `0.11` whic",https://github.com/bitcoin/bitcoin/pull/5286#issuecomment-72889261,72889261,
jtimon,2015-02-04T16:55:05Z,"I just said I will be jealous...\n\n@petertodd when I said ""proof of publication"" I really meant proof of existence/timestamping (the use case @gidgreen was referring to). I don't understand the danger, you can pay to yourself to do this and you have all the information you require to claim your coins once again.\n",https://github.com/bitcoin/bitcoin/pull/5286#issuecomment-72891973,72891973,
gmaxwell,2015-02-04T18:44:21Z,@petertodd The contract hash tool works just as well on DSA nonces.\n,https://github.com/bitcoin/bitcoin/pull/5286#issuecomment-72912971,72912971,
gmaxwell,2015-02-04T18:45:26Z,@btcdrak One of the things requests is actual example applications; which have been in short supply. It's hard to not get the impression that people are not keeping their applications secret in order to game the process here.\n,https://github.com/bitcoin/bitcoin/pull/5286#issuecomment-72913195,72913195,
jgarzik,2015-02-04T18:48:13Z,"This uses proof of publication: https://en.bitcoin.it/wiki/Identity_protocol_v1  Admittedly the proof part is not really used at all today, for limit related reasons.\n",https://github.com/bitcoin/bitcoin/pull/5286#issuecomment-72913726,72913726,
petertodd,2015-02-04T22:16:06Z,"On 4 February 2015 10:44:55 GMT-08:00, Gregory Maxwell notifications@github.com wrote:\n\n> @petertodd The contract hash tool works just as well on DSA nonces.\n\nMind uploading an implementation then? Also last I checked with you that crypto was uncertain; a concern repeated by some non-Bitcoin cryptographers I ran the idea past.\n",https://github.com/bitcoin/bitcoin/pull/5286#issuecomment-72951724,72951724,
