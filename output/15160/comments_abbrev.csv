promag,2019-01-14T23:02:55Z,"Note travis error ""A new circular dependency in the form of ""chain -> validation -> chain"" appears to have been introduced.""",https://github.com/bitcoin/bitcoin/pull/15160#issuecomment-454194688,454194688,
Mr-Leshiy,2019-01-15T12:07:26Z,"I have fixed these places. @practicalswift, thanks for review.\nAnd what about the GetAncestor method. As i understand i cant put locks there and without that we have unsafe code. So it will be preferable to remove these lines ?\n`if (chainActive.Contains(pindexWalk->pprev))`\n`return chainActive[height];`\nBut i think that to get the ancestor from the active chain if we can is sensible idea.",https://github.com/bitcoin/bitcoin/pull/15160#issuecomment-454370511,454370511,
sdaftuar,2019-01-15T13:39:03Z,"NACK\n\n> SetTip method\nThe main idea of this change is if we want to add a new block to our vector and this block can to join to the active chain, we just add it and dont rebuild the whole vector.\n\nThe existing code already does this without rebuilding the whole vector -- after the tip is added, the loop will exit.\n\nAlso @promag is correct that GetAncestor() should not be accessing ch",https://github.com/bitcoin/bitcoin/pull/15160#issuecomment-454394752,454394752,
Mr-Leshiy,2019-01-15T14:29:04Z,"@sdaftuar, thank you for your comment. Maybe i will close this pull request. Thank you everyone for discussion i will keep in mind all remarks in future work.",https://github.com/bitcoin/bitcoin/pull/15160#issuecomment-454410801,454410801,
promag,2019-01-14T11:44:15Z,"Nack, shouldn't access chainActive.",https://github.com/bitcoin/bitcoin/pull/15160#discussion_r247462335,247462335,src/chain.cpp
Mr-Leshiy,2019-01-14T15:32:46Z,"Why not ? It is a global variable that contains the information about active chain, why we cant use it in these place. Or there are some another reasons to not use this variable?",https://github.com/bitcoin/bitcoin/pull/15160#discussion_r247537448,247537448,src/chain.cpp
promag,2019-01-14T15:37:10Z,"But this is not about the active chain, this is about the ancestor of the given block index. The goal is not to get a block at a given height in the active chain. Also, keep in mind that the active chain is shared across multiple threads.",https://github.com/bitcoin/bitcoin/pull/15160#discussion_r247539365,247539365,src/chain.cpp
Mr-Leshiy,2019-01-14T15:48:13Z,"Of course, but if the previous block contains in the active chain an ancestor of the current block will contains in the active chain too.  About the multiple threads, i just read the information from the variable in this case i dont think that will be some problems with it.\n",https://github.com/bitcoin/bitcoin/pull/15160#discussion_r247544018,247544018,src/chain.cpp
promag,2019-01-14T15:59:39Z,"It needs to lock `cs_main` which in some places we want to avoid.\n\nAnyway, this ""optimization"" should be moved to the call sites, if any.",https://github.com/bitcoin/bitcoin/pull/15160#discussion_r247549057,247549057,src/chain.cpp
Mr-Leshiy,2019-01-14T18:54:03Z,You mean that it would be mor preferable to remove it from the GetAncestor method and replace at all places where that method calls ?,https://github.com/bitcoin/bitcoin/pull/15160#discussion_r247613982,247613982,src/chain.cpp
promag,2019-01-14T23:01:56Z,"if i'm not mistaken, if at the call site `cs_main` is locked then `GetAncestor` could be replaced by `CChain::operator[]`.",https://github.com/bitcoin/bitcoin/pull/15160#discussion_r247698067,247698067,src/chain.cpp
Mr-Leshiy,2019-01-15T09:14:32Z,"If the previous of the current block contains in the active chain, yes we can replace.",https://github.com/bitcoin/bitcoin/pull/15160#discussion_r247811131,247811131,src/chain.cpp
practicalswift,2019-01-15T10:23:41Z,Don't use tabs. Applies throughout this PR :-),https://github.com/bitcoin/bitcoin/pull/15160#discussion_r247835420,247835420,src/chain.cpp
practicalswift,2019-01-15T10:23:59Z,Line ends with whitespace. Please remove :-),https://github.com/bitcoin/bitcoin/pull/15160#discussion_r247835531,247835531,src/chain.cpp
practicalswift,2019-01-15T10:24:31Z,If an `else` has a brace on one side it should have it on both sides :-),https://github.com/bitcoin/bitcoin/pull/15160#discussion_r247835711,247835711,src/chain.cpp
