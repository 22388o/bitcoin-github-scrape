[
  {
    "sha": "4668ded6d6ea4299d998abbb57543f37519812e2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0NjY4ZGVkNmQ2ZWE0Mjk5ZDk5OGFiYmI1NzU0M2YzNzUxOTgxMmUy",
    "commit": {
      "author": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2020-09-08T18:36:31Z"
      },
      "committer": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2020-09-14T14:42:45Z"
      },
      "message": "validation: Move ~CMainCleanup logic to ~BlockManager\n\n~CMainCleanup:\n1. Is vestigial\n2. References the g_chainman global (we should minimize g_chainman refs)\n3. Only acts on g_chainman.m_blockman\n4. Does the same thing as BlockManager::Unload",
      "tree": {
        "sha": "40074f54b00208f7e4cdb1a141974040e7bf2cd3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/40074f54b00208f7e4cdb1a141974040e7bf2cd3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4668ded6d6ea4299d998abbb57543f37519812e2",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEECc3SW1JEo3Z49u6oDMUhUxl5kaUFAl9fgbcACgkQDMUhUxl5\nkaUwkQ//f8gppBQZf6NhFEW69AuPbK66gsrbJrWnzqDxk+rxCRN21DYCbWa7aSpc\nnZKy49Rn56WPIbR5NDEh5UMChohHn97sX4iI3RKDPpK73t+DThdleqhznJns7Aen\nRSxZQ8Tb6OyZY79sjm7+g1wBCb4cSQFRNlIASEN/sD5mvVy6tOryNlPr+DeR8eej\njU1csdxbZPhjxdok81tHayEePhfSpswTYT+f9WKFxDN9oebFNppUvoEEGQzIqUsb\nGt9UhyU1RgeBdQ1eEKnq61Ie/BTNn2gmZbBR3yOJW2ybjZnbjMgh8AODlDLcGgWw\na95PMAS8n71LVEqM0x6k67lUcQ7lzmTDNYp0H/vTqGnlIsfugGAl8WTSDSgqUoL8\n4Ti7I4yse9qwkrPegEo4wjnHypRGBeXZRBLA9BRd6aWbPARH8M9jXCDauJjjtDBj\n5Ur0UMU1dVISr++XsYKbvxjseTGIttbfIrPgshs3Y4iYAVIRd8X5xx5QkHkgQ6Vz\note5M145Qmr0f6qsZltvgguMg4ta03NkUGXcW9xkC1jziock2H9j1Ce1BkNVzdiy\nN7Rf86H7ldLhGDF/a3iET5W62vgTKUJPXeEadUZznvOV3V1auqWYH21OtycqBx9o\nDWyk7O4CqyAiguRr+5TaqEqSugIqfGNzajG9VSRgbDG4CNlBhJo=\n=SkXz\n-----END PGP SIGNATURE-----",
        "payload": "tree 40074f54b00208f7e4cdb1a141974040e7bf2cd3\nparent 147d50d63e07f600b414273a9f6b84f9f4ad9696\nauthor Carl Dong <contact@carldong.me> 1599590191 -0400\ncommitter Carl Dong <contact@carldong.me> 1600094565 -0400\n\nvalidation: Move ~CMainCleanup logic to ~BlockManager\n\n~CMainCleanup:\n1. Is vestigial\n2. References the g_chainman global (we should minimize g_chainman refs)\n3. Only acts on g_chainman.m_blockman\n4. Does the same thing as BlockManager::Unload\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4668ded6d6ea4299d998abbb57543f37519812e2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4668ded6d6ea4299d998abbb57543f37519812e2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4668ded6d6ea4299d998abbb57543f37519812e2/comments",
    "author": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "147d50d63e07f600b414273a9f6b84f9f4ad9696",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/147d50d63e07f600b414273a9f6b84f9f4ad9696",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/147d50d63e07f600b414273a9f6b84f9f4ad9696"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 4,
      "deletions": 14
    },
    "files": [
      {
        "sha": "5beff88a01a9d01803d723aae185da8015f755c8",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 14,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4668ded6d6ea4299d998abbb57543f37519812e2/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4668ded6d6ea4299d998abbb57543f37519812e2/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=4668ded6d6ea4299d998abbb57543f37519812e2",
        "patch": "@@ -5226,20 +5226,6 @@ double GuessVerificationProgress(const ChainTxData& data, const CBlockIndex *pin\n     return std::min<double>(pindex->nChainTx / fTxTotal, 1.0);\n }\n \n-class CMainCleanup\n-{\n-public:\n-    CMainCleanup() {}\n-    ~CMainCleanup() {\n-        // block headers\n-        BlockMap::iterator it1 = g_chainman.BlockIndex().begin();\n-        for (; it1 != g_chainman.BlockIndex().end(); it1++)\n-            delete (*it1).second;\n-        g_chainman.BlockIndex().clear();\n-    }\n-};\n-static CMainCleanup instance_of_cmaincleanup;\n-\n Optional<uint256> ChainstateManager::SnapshotBlockhash() const {\n     if (m_active_chainstate != nullptr) {\n         // If a snapshot chainstate exists, it will always be our active."
      },
      {
        "sha": "12d1d4c91f1fdc5ac72d4b8c76f099828e60552a",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4668ded6d6ea4299d998abbb57543f37519812e2/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4668ded6d6ea4299d998abbb57543f37519812e2/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=4668ded6d6ea4299d998abbb57543f37519812e2",
        "patch": "@@ -416,6 +416,10 @@ class BlockManager {\n         BlockValidationState& state,\n         const CChainParams& chainparams,\n         CBlockIndex** ppindex) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n+\n+    ~BlockManager() {\n+        Unload();\n+    }\n };\n \n /**"
      }
    ]
  },
  {
    "sha": "74f73c783d46b012f375d819e2cd09c792820cd5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3NGY3M2M3ODNkNDZiMDEyZjM3NWQ4MTllMmNkMDljNzkyODIwY2Q1",
    "commit": {
      "author": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2020-08-25T19:23:57Z"
      },
      "committer": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2020-09-15T18:11:34Z"
      },
      "message": "validation: Pass in chainman to UnloadBlockIndex",
      "tree": {
        "sha": "9c351abe4519267e6c57ce65b195b819e2ca3e2e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9c351abe4519267e6c57ce65b195b819e2ca3e2e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/74f73c783d46b012f375d819e2cd09c792820cd5",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEECc3SW1JEo3Z49u6oDMUhUxl5kaUFAl9hBFcACgkQDMUhUxl5\nkaVvBhAAvpAaaxCWu7B/dmefdP0mW5FWykHe7J+UvTnJIqTsOUJD728XJzil7Tik\n50eGzPEiDS5oAdnB8mtaD/cNJzzdvGwlwnmxDDqkl+xxreBk4/4tyGqL5uIus59a\nPT+SjkgdofkRP2rRoIe+DLvLEbE8oy4ePVyOErbU2dXr+CIELx9Q+WpO6QNJTBeJ\nEB8xReh0KJWx2oypvqI4pwXKCP06hVCZu6MmXxmYgFYMxUvEfw3gHk2Kh3g09YUz\n0KBRnRsNEFMXSqylXSRyXDncNyNF3BbpWbGbmnmrfDv380VFKOoCQfzkYT5UTPkf\n+WEDuVz53sEHg18GIb3iaYIreZ0wvVqOfE3ArEoUCOb292h3ahlLyDm8I5hAtFQj\nW5tMoazx9AACQIMnWmfzf0Qb1w53AQ3rRlBwZYYqJJbLZzTZEATfJ0Woni96UyVu\nuTqHjS42BcyzLdXiqKRsylxFMiSUuufgdWnEVyiJJyfP3LHxXXwAtpgczQ/mRrmB\n7FKhXv4HE8+9/D6TufhMGb4iU5Roh7ypy8Ue5c8Q1Mjmm96bcRUwKU3fHwwVuhFI\nu4mvLS9zlJwNsRdypbtoEtjJzfJwxWEm//2YifjnAddJUrGZdDvIH/YJGZmfVa7I\nCm0Hafo1Nf86QBpnQfPRIDYN8eHOYwo9J4q2+zQoBvx2rpEDHKA=\n=lgXK\n-----END PGP SIGNATURE-----",
        "payload": "tree 9c351abe4519267e6c57ce65b195b819e2ca3e2e\nparent 4668ded6d6ea4299d998abbb57543f37519812e2\nauthor Carl Dong <contact@carldong.me> 1598383437 -0400\ncommitter Carl Dong <contact@carldong.me> 1600193494 -0400\n\nvalidation: Pass in chainman to UnloadBlockIndex\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/74f73c783d46b012f375d819e2cd09c792820cd5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/74f73c783d46b012f375d819e2cd09c792820cd5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/74f73c783d46b012f375d819e2cd09c792820cd5/comments",
    "author": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4668ded6d6ea4299d998abbb57543f37519812e2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4668ded6d6ea4299d998abbb57543f37519812e2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4668ded6d6ea4299d998abbb57543f37519812e2"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 10,
      "deletions": 7
    },
    "files": [
      {
        "sha": "90bf3c6461f0d6c9464e0a23984f8a2247c68da4",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/74f73c783d46b012f375d819e2cd09c792820cd5/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/74f73c783d46b012f375d819e2cd09c792820cd5/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=74f73c783d46b012f375d819e2cd09c792820cd5",
        "patch": "@@ -1559,7 +1559,7 @@ bool AppInitMain(const util::Ref& context, NodeContext& node, interfaces::BlockA\n                 chainman.m_total_coinstip_cache = nCoinCacheUsage;\n                 chainman.m_total_coinsdb_cache = nCoinDBCache;\n \n-                UnloadBlockIndex(node.mempool.get());\n+                UnloadBlockIndex(node.mempool.get(), chainman);\n \n                 // new CBlockTreeDB tries to delete the existing file, which\n                 // fails if it's still open from the previous loop. Close it first:"
      },
      {
        "sha": "8dffd2f59f1c88544b65deb6a48254169ff72289",
        "filename": "src/qt/test/apptests.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 2,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/74f73c783d46b012f375d819e2cd09c792820cd5/src/qt/test/apptests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/74f73c783d46b012f375d819e2cd09c792820cd5/src/qt/test/apptests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/apptests.cpp?ref=74f73c783d46b012f375d819e2cd09c792820cd5",
        "patch": "@@ -84,8 +84,11 @@ void AppTests::appTests()\n     // Reset global state to avoid interfering with later tests.\n     LogInstance().DisconnectTestLogger();\n     AbortShutdown();\n-    UnloadBlockIndex(/* mempool */ nullptr);\n-    WITH_LOCK(::cs_main, g_chainman.Reset());\n+    {\n+        LOCK(cs_main);\n+        UnloadBlockIndex(/* mempool */ nullptr, g_chainman);\n+        g_chainman.Reset();\n+    }\n }\n \n //! Entry point for BitcoinGUI tests."
      },
      {
        "sha": "2d3137e1e2a089651a5cde276bde27527f5cf899",
        "filename": "src/test/util/setup_common.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/74f73c783d46b012f375d819e2cd09c792820cd5/src/test/util/setup_common.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/74f73c783d46b012f375d819e2cd09c792820cd5/src/test/util/setup_common.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util/setup_common.cpp?ref=74f73c783d46b012f375d819e2cd09c792820cd5",
        "patch": "@@ -187,7 +187,7 @@ TestingSetup::~TestingSetup()\n     m_node.connman.reset();\n     m_node.banman.reset();\n     m_node.args = nullptr;\n-    UnloadBlockIndex(m_node.mempool.get());\n+    UnloadBlockIndex(m_node.mempool.get(), *m_node.chainman);\n     m_node.mempool.reset();\n     m_node.scheduler.reset();\n     m_node.chainman->Reset();"
      },
      {
        "sha": "7478fb5510544e203a743294a0cde56b0cda3235",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/74f73c783d46b012f375d819e2cd09c792820cd5/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/74f73c783d46b012f375d819e2cd09c792820cd5/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=74f73c783d46b012f375d819e2cd09c792820cd5",
        "patch": "@@ -4605,10 +4605,10 @@ void CChainState::UnloadBlockIndex() {\n // May NOT be used after any connections are up as much\n // of the peer-processing logic assumes a consistent\n // block index state\n-void UnloadBlockIndex(CTxMemPool* mempool)\n+void UnloadBlockIndex(CTxMemPool* mempool, ChainstateManager& chainman)\n {\n     LOCK(cs_main);\n-    g_chainman.Unload();\n+    chainman.Unload();\n     pindexBestInvalid = nullptr;\n     pindexBestHeader = nullptr;\n     if (mempool) mempool->clear();"
      },
      {
        "sha": "2d9d2cb918def9f38d5e3283d10777d2949ad058",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/74f73c783d46b012f375d819e2cd09c792820cd5/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/74f73c783d46b012f375d819e2cd09c792820cd5/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=74f73c783d46b012f375d819e2cd09c792820cd5",
        "patch": "@@ -159,7 +159,7 @@ void LoadExternalBlockFile(const CChainParams& chainparams, FILE* fileIn, FlatFi\n /** Ensures we have a genesis block in the block tree, possibly writing one to disk. */\n bool LoadGenesisBlock(const CChainParams& chainparams);\n /** Unload database information */\n-void UnloadBlockIndex(CTxMemPool* mempool);\n+void UnloadBlockIndex(CTxMemPool* mempool, ChainstateManager& chainman);\n /** Run an instance of the script checking thread */\n void ThreadScriptCheck(int worker_num);\n /**"
      }
    ]
  },
  {
    "sha": "f8d4975ab3fcd3553843cf0862251289c88c106b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmOGQ0OTc1YWIzZmNkMzU1Mzg0M2NmMDg2MjI1MTI4OWM4OGMxMDZi",
    "commit": {
      "author": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2020-08-25T23:05:50Z"
      },
      "committer": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2020-09-15T18:13:44Z"
      },
      "message": "validation: Move PruneOneBlockFile to BlockManager\n\n[META] This is a pure refactor commit.\n\nMove PruneBlockFile to BlockManager because:\n1. PruneOneBlockFile only acts on BlockManager\n2. Eliminates the need for callers (FindFilesToPrune{,Manual}) to have a\n   reference to the larger ChainstateManager, just a reference to\n   BlockManager is enough. See following commits.",
      "tree": {
        "sha": "fc52dc628f532971eb04873acd483aa5f19f831d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fc52dc628f532971eb04873acd483aa5f19f831d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f8d4975ab3fcd3553843cf0862251289c88c106b",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEECc3SW1JEo3Z49u6oDMUhUxl5kaUFAl9hBFgACgkQDMUhUxl5\nkaXtFw//VAKKXe0xT91zI3AnNujYwJ9buzf1bKnba+o9+gxn0QplngQ8zTeA9Uf3\nsPepvoyUi8dE987G17SxsY+ef29CxA71MptBOwYGv0xstPJ4PhkYBScrAtwlCF1+\nBMrpifRf6h5hdEHwqANXVpBhoU9eibNcuZtYU5vUf66pm2KdpBvKnFQDIZe7emGq\ndrBLdIHwKGqxCTK96ZyLkHr7zst52rukPhA8BRGtM/r6gUdnm2RiyxAcaNipSz8f\nmNm4EA8iLQqOVnnPNDhF4/6lhhFhRxj9o0JGNTIjPEA2ECmT+G9LWhPtzhbyaQCP\nz/VnyvySaRf3rcISmywnvW/HvPEkeC742sM85AQK9cVcp9pi7PUjDnnKfieL/J6d\nOixXIbBYzuev59UqOvYnYgjLmYSo/aL+Y+qMHh6foUZDzOSexsHyoZFMSxMeP4Hn\nUS8Lrsq/ybZ1nPfaSic2SuO/TY7vaP3PuUP9tT7scno4+mwOixnYu0AcyBON595J\nU40JpdycBBeiL6IiVu0CQK6Y+51o41kHU6LnOy49Xf5/6Y4Rcz9ua2LDwXGFmpQ1\nmk+wwzn6UreAEnLI9r8LUrAtpFer5TnG1F6pEBZa+Qj7vtcuUtIQlaNtUIbK2RXr\nHSei+5E1U4Ox8giIboA8s9wvGjlGGTZ8/Bkbb2VNwdjTyYrnLlk=\n=kKvH\n-----END PGP SIGNATURE-----",
        "payload": "tree fc52dc628f532971eb04873acd483aa5f19f831d\nparent 74f73c783d46b012f375d819e2cd09c792820cd5\nauthor Carl Dong <contact@carldong.me> 1598396750 -0400\ncommitter Carl Dong <contact@carldong.me> 1600193624 -0400\n\nvalidation: Move PruneOneBlockFile to BlockManager\n\n[META] This is a pure refactor commit.\n\nMove PruneBlockFile to BlockManager because:\n1. PruneOneBlockFile only acts on BlockManager\n2. Eliminates the need for callers (FindFilesToPrune{,Manual}) to have a\n   reference to the larger ChainstateManager, just a reference to\n   BlockManager is enough. See following commits.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f8d4975ab3fcd3553843cf0862251289c88c106b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f8d4975ab3fcd3553843cf0862251289c88c106b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f8d4975ab3fcd3553843cf0862251289c88c106b/comments",
    "author": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "74f73c783d46b012f375d819e2cd09c792820cd5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/74f73c783d46b012f375d819e2cd09c792820cd5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/74f73c783d46b012f375d819e2cd09c792820cd5"
      }
    ],
    "stats": {
      "total": 24,
      "additions": 12,
      "deletions": 12
    },
    "files": [
      {
        "sha": "76f8bcba7f0d036f585c056222f092e2baae085f",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8d4975ab3fcd3553843cf0862251289c88c106b/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8d4975ab3fcd3553843cf0862251289c88c106b/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=f8d4975ab3fcd3553843cf0862251289c88c106b",
        "patch": "@@ -3912,12 +3912,12 @@ uint64_t CalculateCurrentUsage()\n     return retval;\n }\n \n-void ChainstateManager::PruneOneBlockFile(const int fileNumber)\n+void BlockManager::PruneOneBlockFile(const int fileNumber)\n {\n     AssertLockHeld(cs_main);\n     LOCK(cs_LastBlockFile);\n \n-    for (const auto& entry : m_blockman.m_block_index) {\n+    for (const auto& entry : m_block_index) {\n         CBlockIndex* pindex = entry.second;\n         if (pindex->nFile == fileNumber) {\n             pindex->nStatus &= ~BLOCK_HAVE_DATA;\n@@ -3931,12 +3931,12 @@ void ChainstateManager::PruneOneBlockFile(const int fileNumber)\n             // to be downloaded again in order to consider its chain, at which\n             // point it would be considered as a candidate for\n             // m_blocks_unlinked or setBlockIndexCandidates.\n-            auto range = m_blockman.m_blocks_unlinked.equal_range(pindex->pprev);\n+            auto range = m_blocks_unlinked.equal_range(pindex->pprev);\n             while (range.first != range.second) {\n                 std::multimap<CBlockIndex *, CBlockIndex *>::iterator _it = range.first;\n                 range.first++;\n                 if (_it->second == pindex) {\n-                    m_blockman.m_blocks_unlinked.erase(_it);\n+                    m_blocks_unlinked.erase(_it);\n                 }\n             }\n         }\n@@ -3972,7 +3972,7 @@ static void FindFilesToPruneManual(ChainstateManager& chainman, std::set<int>& s\n     for (int fileNumber = 0; fileNumber < nLastBlockFile; fileNumber++) {\n         if (vinfoBlockFile[fileNumber].nSize == 0 || vinfoBlockFile[fileNumber].nHeightLast > nLastBlockWeCanPrune)\n             continue;\n-        chainman.PruneOneBlockFile(fileNumber);\n+        chainman.m_blockman.PruneOneBlockFile(fileNumber);\n         setFilesToPrune.insert(fileNumber);\n         count++;\n     }\n@@ -4047,7 +4047,7 @@ static void FindFilesToPrune(ChainstateManager& chainman, std::set<int>& setFile\n             if (vinfoBlockFile[fileNumber].nHeightLast > nLastBlockWeCanPrune)\n                 continue;\n \n-            chainman.PruneOneBlockFile(fileNumber);\n+            chainman.m_blockman.PruneOneBlockFile(fileNumber);\n             // Queue up the files for removal\n             setFilesToPrune.insert(fileNumber);\n             nCurrentUsage -= nBytesToPrune;"
      },
      {
        "sha": "40611fa61f93a25e8055dfe31ecda6c50a7f1a42",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8d4975ab3fcd3553843cf0862251289c88c106b/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8d4975ab3fcd3553843cf0862251289c88c106b/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=f8d4975ab3fcd3553843cf0862251289c88c106b",
        "patch": "@@ -407,6 +407,9 @@ class BlockManager {\n     /** Create a new block index entry for a given block hash */\n     CBlockIndex* InsertBlockIndex(const uint256& hash) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n+    //! Mark one block file as pruned (modify associated database entries)\n+    void PruneOneBlockFile(const int fileNumber) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n+\n     /**\n      * If a block header hasn't already been seen, call CheckBlockHeader on it, ensure\n      * that it doesn't descend from an invalid block, and then add it to m_block_index.\n@@ -903,9 +906,6 @@ class ChainstateManager\n      */\n     bool ProcessNewBlockHeaders(const std::vector<CBlockHeader>& block, BlockValidationState& state, const CChainParams& chainparams, const CBlockIndex** ppindex = nullptr) LOCKS_EXCLUDED(cs_main);\n \n-    //! Mark one block file as pruned (modify associated database entries)\n-    void PruneOneBlockFile(const int fileNumber) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n-\n     //! Load the block tree and coins database from disk, initializing state if we're running with -reindex\n     bool LoadBlockIndex(const CChainParams& chainparams) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n "
      },
      {
        "sha": "4393bb77015714052ad1d643347b4efd0b74e5a8",
        "filename": "src/wallet/test/wallet_tests.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8d4975ab3fcd3553843cf0862251289c88c106b/src/wallet/test/wallet_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8d4975ab3fcd3553843cf0862251289c88c106b/src/wallet/test/wallet_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/test/wallet_tests.cpp?ref=f8d4975ab3fcd3553843cf0862251289c88c106b",
        "patch": "@@ -126,7 +126,7 @@ BOOST_FIXTURE_TEST_CASE(scan_for_wallet_transactions, TestChain100Setup)\n     // Prune the older block file.\n     {\n         LOCK(cs_main);\n-        Assert(m_node.chainman)->PruneOneBlockFile(oldTip->GetBlockPos().nFile);\n+        Assert(m_node.chainman)->m_blockman.PruneOneBlockFile(oldTip->GetBlockPos().nFile);\n     }\n     UnlinkPrunedFiles({oldTip->GetBlockPos().nFile});\n \n@@ -152,7 +152,7 @@ BOOST_FIXTURE_TEST_CASE(scan_for_wallet_transactions, TestChain100Setup)\n     // Prune the remaining block file.\n     {\n         LOCK(cs_main);\n-        Assert(m_node.chainman)->PruneOneBlockFile(newTip->GetBlockPos().nFile);\n+        Assert(m_node.chainman)->m_blockman.PruneOneBlockFile(newTip->GetBlockPos().nFile);\n     }\n     UnlinkPrunedFiles({newTip->GetBlockPos().nFile});\n \n@@ -189,7 +189,7 @@ BOOST_FIXTURE_TEST_CASE(importmulti_rescan, TestChain100Setup)\n     // Prune the older block file.\n     {\n         LOCK(cs_main);\n-        Assert(m_node.chainman)->PruneOneBlockFile(oldTip->GetBlockPos().nFile);\n+        Assert(m_node.chainman)->m_blockman.PruneOneBlockFile(oldTip->GetBlockPos().nFile);\n     }\n     UnlinkPrunedFiles({oldTip->GetBlockPos().nFile});\n "
      }
    ]
  },
  {
    "sha": "3f5b5f3f6db0e5716911b3fba1460ce327e8a845",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozZjViNWYzZjZkYjBlNTcxNjkxMWIzZmJhMTQ2MGNlMzI3ZThhODQ1",
    "commit": {
      "author": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2020-08-25T23:38:23Z"
      },
      "committer": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2020-09-21T17:27:44Z"
      },
      "message": "validation: Move FindFilesToPrune{,Manual} to BlockManager\n\n[META] No behaviour change is intended in this commit.\n[META] This commit should be followed up by removing the comments and\n       assertions meant only to show that the change is correct.\n\nAlso stop FindFilesToPrune{,Manual} from unnecessary reaching for\n::ChainActive() by passing in the necessary information.",
      "tree": {
        "sha": "f8364c75d5a999791fd33847914eecf6014ecbe1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f8364c75d5a999791fd33847914eecf6014ecbe1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3f5b5f3f6db0e5716911b3fba1460ce327e8a845",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEECc3SW1JEo3Z49u6oDMUhUxl5kaUFAl9o4pIACgkQDMUhUxl5\nkaV+qhAAzESZFVrfkgsHNhvX8ofj2aI9XycdEP0uCXDtAyorJOarhepXjo2JUYo0\nj2KaWpu3XCobWPHUvOqFnHAKz6om9WYQto9SApg2nsVoCiSBYrLbI73abOcvbRdQ\n8jtxOnCgAjeXt3OXVr3Xx+6YLPG9FMCDsgB0maNu8h9mp3wDJrYWgG+uDWj+Z4FT\nnG+FxJv5lQopezVTSmL0tbQGUhyf1XOvWwAJbtMYfnAZyAUPGZmNUw04SUx16r6b\nyBXl+/6groc0ecLfT35cdlYU2ZfJbMkhD25O2B6t6hvuYGI9L9SIw7G2xZgD6w0z\nix+X0ECSHTK0Iu72DyG6Ky7GwVaiLYxTyEEC8IuaZHYktlemvVQj95iM17QWl3DD\nF3nnX4iVHJ3QtVoxVw9KuOpNDmQKPJ4yzZtxfC9uJ5raw7nFxfgncvFEwMtmRB2C\nxyWJ4f4qeCCEUiu4lGsrQCFrgSNBYEQmuQHIFAlfoWw0kZlkDg3VCBTkxDjTh0h1\nQdrSzuI/Xbuklsp5VdeNyKXozUJN3yk3x71kEMoK0GWifQzk+5W/Q4PYk/oXQzkx\nWq5TVxuAuQ0YRz9aXBMIJTMHnpyY9VKxxKHhSqYZ2y30MSZ9yz30wvnqWVRHjKlV\nmi8WLRYmpT2pNyjhKBBAmbGzXSmAt27VQK5td95Of7hxYLJUkWo=\n=XWhE\n-----END PGP SIGNATURE-----",
        "payload": "tree f8364c75d5a999791fd33847914eecf6014ecbe1\nparent f8d4975ab3fcd3553843cf0862251289c88c106b\nauthor Carl Dong <contact@carldong.me> 1598398703 -0400\ncommitter Carl Dong <contact@carldong.me> 1600709264 -0400\n\nvalidation: Move FindFilesToPrune{,Manual} to BlockManager\n\n[META] No behaviour change is intended in this commit.\n[META] This commit should be followed up by removing the comments and\n       assertions meant only to show that the change is correct.\n\nAlso stop FindFilesToPrune{,Manual} from unnecessary reaching for\n::ChainActive() by passing in the necessary information.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3f5b5f3f6db0e5716911b3fba1460ce327e8a845",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3f5b5f3f6db0e5716911b3fba1460ce327e8a845",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3f5b5f3f6db0e5716911b3fba1460ce327e8a845/comments",
    "author": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f8d4975ab3fcd3553843cf0862251289c88c106b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f8d4975ab3fcd3553843cf0862251289c88c106b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f8d4975ab3fcd3553843cf0862251289c88c106b"
      }
    ],
    "stats": {
      "total": 76,
      "additions": 60,
      "deletions": 16
    },
    "files": [
      {
        "sha": "389faa99a8dc55e65bbb53d51c84f941316389dd",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 51,
        "deletions": 15,
        "changes": 66,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5b5f3f6db0e5716911b3fba1460ce327e8a845/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5b5f3f6db0e5716911b3fba1460ce327e8a845/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=3f5b5f3f6db0e5716911b3fba1460ce327e8a845",
        "patch": "@@ -197,9 +197,6 @@ CBlockIndex* FindForkInGlobalIndex(const CChain& chain, const CBlockLocator& loc\n \n std::unique_ptr<CBlockTreeDB> pblocktree;\n \n-// See definition for documentation\n-static void FindFilesToPruneManual(ChainstateManager& chainman, std::set<int>& setFilesToPrune, int nManualPruneHeight);\n-static void FindFilesToPrune(ChainstateManager& chainman, std::set<int>& setFilesToPrune, uint64_t nPruneAfterHeight);\n bool CheckInputScripts(const CTransaction& tx, TxValidationState &state, const CCoinsViewCache &inputs, unsigned int flags, bool cacheSigStore, bool cacheFullScriptStore, PrecomputedTransactionData& txdata, std::vector<CScriptCheck> *pvChecks = nullptr);\n static FILE* OpenUndoFile(const FlatFilePos &pos, bool fReadOnly = false);\n static FlatFileSeq BlockFileSeq();\n@@ -2284,14 +2281,53 @@ bool CChainState::FlushStateToDisk(\n         CoinsCacheSizeState cache_state = GetCoinsCacheSizeState(&m_mempool);\n         LOCK(cs_LastBlockFile);\n         if (fPruneMode && (fCheckForPruning || nManualPruneHeight > 0) && !fReindex) {\n+            // Previously, we called the global function ::ChainActive() in\n+            // FindFilesToPrune{,Manual} to get the tip height and to determine\n+            // whether or not a tip even exists. Now, we are simply passing in\n+            // m_chain.Height() (which returns -1 if the tip doesn't exist). To\n+            // make sure we're not changing behaviour, let's check that\n+            // ::ChainActive() is the same object as m_chain (not just\n+            // identical).\n+            //\n+            // This comment and the following assert will be removed in a\n+            // subsequent commit, as they're just meant to demonstrate\n+            // correctness (you can run tests against it and see that nothing\n+            // exit unexpectedly).\n+            assert(std::addressof(::ChainActive()) == std::addressof(m_chain));\n             if (nManualPruneHeight > 0) {\n                 LOG_TIME_MILLIS_WITH_CATEGORY(\"find files to prune (manual)\", BCLog::BENCH);\n \n-                FindFilesToPruneManual(g_chainman, setFilesToPrune, nManualPruneHeight);\n+                m_blockman.FindFilesToPruneManual(setFilesToPrune, nManualPruneHeight, m_chain.Height());\n             } else {\n                 LOG_TIME_MILLIS_WITH_CATEGORY(\"find files to prune\", BCLog::BENCH);\n \n-                FindFilesToPrune(g_chainman, setFilesToPrune, chainparams.PruneAfterHeight());\n+                // Previously, we called the global function\n+                // ::ChainstateActive() in FindFilesToPrune{,Manual} to get the\n+                // IBD status. Now, we are simply passing in\n+                // IsInitialBlockDownload(). To make sure we're not changing\n+                // behaviour, let's check that ::ChainstateActive() is the same\n+                // object as *this (not just identical).\n+                //\n+                // This comment and the following assert will be removed in a\n+                // subsequent commit, as they're just meant to demonstrate\n+                // correctness (you can run tests against it and see that\n+                // nothing exit unexpectedly).\n+                assert(std::addressof(::ChainstateActive()) == std::addressof(*this));\n+\n+                // Previously, we called PruneOneBlockFile on g_chainman's\n+                // m_blockman in FindFilesToPrune{,Manual}. Now, we are instead\n+                // calling PruneOneBlockFile on _our_ m_blockman. To make sure\n+                // we're not changing behaviour, let's check that\n+                // g_chainman.m_blockman is the same object as _our_ m_blockman\n+                // (not just identical).\n+                //\n+                // This comment and the following assert will be removed in a\n+                // subsequent commit, as they're just meant to demonstrate\n+                // correctness (you can run tests against it and see that\n+                // nothing exit unexpectedly).\n+                assert(std::addressof(g_chainman.m_blockman) == std::addressof(m_blockman));\n+\n+                m_blockman.FindFilesToPrune(setFilesToPrune, chainparams.PruneAfterHeight(), m_chain.Height(), IsInitialBlockDownload());\n                 fCheckForPruning = false;\n             }\n             if (!setFilesToPrune.empty()) {\n@@ -3958,21 +3994,21 @@ void UnlinkPrunedFiles(const std::set<int>& setFilesToPrune)\n }\n \n /* Calculate the block/rev files to delete based on height specified by user with RPC command pruneblockchain */\n-static void FindFilesToPruneManual(ChainstateManager& chainman, std::set<int>& setFilesToPrune, int nManualPruneHeight)\n+void BlockManager::FindFilesToPruneManual(std::set<int>& setFilesToPrune, int nManualPruneHeight, int chain_tip_height)\n {\n     assert(fPruneMode && nManualPruneHeight > 0);\n \n     LOCK2(cs_main, cs_LastBlockFile);\n-    if (::ChainActive().Tip() == nullptr)\n+    if (chain_tip_height < 0)\n         return;\n \n     // last block to prune is the lesser of (user-specified height, MIN_BLOCKS_TO_KEEP from the tip)\n-    unsigned int nLastBlockWeCanPrune = std::min((unsigned)nManualPruneHeight, ::ChainActive().Tip()->nHeight - MIN_BLOCKS_TO_KEEP);\n+    unsigned int nLastBlockWeCanPrune = std::min((unsigned)nManualPruneHeight, chain_tip_height - MIN_BLOCKS_TO_KEEP);\n     int count=0;\n     for (int fileNumber = 0; fileNumber < nLastBlockFile; fileNumber++) {\n         if (vinfoBlockFile[fileNumber].nSize == 0 || vinfoBlockFile[fileNumber].nHeightLast > nLastBlockWeCanPrune)\n             continue;\n-        chainman.m_blockman.PruneOneBlockFile(fileNumber);\n+        PruneOneBlockFile(fileNumber);\n         setFilesToPrune.insert(fileNumber);\n         count++;\n     }\n@@ -4005,17 +4041,17 @@ void PruneBlockFilesManual(int nManualPruneHeight)\n  *\n  * @param[out]   setFilesToPrune   The set of file indices that can be unlinked will be returned\n  */\n-static void FindFilesToPrune(ChainstateManager& chainman, std::set<int>& setFilesToPrune, uint64_t nPruneAfterHeight)\n+void BlockManager::FindFilesToPrune(std::set<int>& setFilesToPrune, uint64_t nPruneAfterHeight, int chain_tip_height, bool is_ibd)\n {\n     LOCK2(cs_main, cs_LastBlockFile);\n-    if (::ChainActive().Tip() == nullptr || nPruneTarget == 0) {\n+    if (chain_tip_height < 0 || nPruneTarget == 0) {\n         return;\n     }\n-    if ((uint64_t)::ChainActive().Tip()->nHeight <= nPruneAfterHeight) {\n+    if ((uint64_t)chain_tip_height <= nPruneAfterHeight) {\n         return;\n     }\n \n-    unsigned int nLastBlockWeCanPrune = ::ChainActive().Tip()->nHeight - MIN_BLOCKS_TO_KEEP;\n+    unsigned int nLastBlockWeCanPrune = chain_tip_height - MIN_BLOCKS_TO_KEEP;\n     uint64_t nCurrentUsage = CalculateCurrentUsage();\n     // We don't check to prune until after we've allocated new space for files\n     // So we should leave a buffer under our target to account for another allocation\n@@ -4029,7 +4065,7 @@ static void FindFilesToPrune(ChainstateManager& chainman, std::set<int>& setFile\n         // To avoid excessive prune events negating the benefit of high dbcache\n         // values, we should not prune too rapidly.\n         // So when pruning in IBD, increase the buffer a bit to avoid a re-prune too soon.\n-        if (::ChainstateActive().IsInitialBlockDownload()) {\n+        if (is_ibd) {\n             // Since this is only relevant during IBD, we use a fixed 10%\n             nBuffer += nPruneTarget / 10;\n         }\n@@ -4047,7 +4083,7 @@ static void FindFilesToPrune(ChainstateManager& chainman, std::set<int>& setFile\n             if (vinfoBlockFile[fileNumber].nHeightLast > nLastBlockWeCanPrune)\n                 continue;\n \n-            chainman.m_blockman.PruneOneBlockFile(fileNumber);\n+            PruneOneBlockFile(fileNumber);\n             // Queue up the files for removal\n             setFilesToPrune.insert(fileNumber);\n             nCurrentUsage -= nBytesToPrune;"
      },
      {
        "sha": "94bf16968ab893f941729f2c6b7a1a57f25ff2a0",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 9,
        "deletions": 1,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f5b5f3f6db0e5716911b3fba1460ce327e8a845/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f5b5f3f6db0e5716911b3fba1460ce327e8a845/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=3f5b5f3f6db0e5716911b3fba1460ce327e8a845",
        "patch": "@@ -356,7 +356,15 @@ struct CBlockIndexWorkComparator\n  * This data is used mostly in `CChainState` - information about, e.g.,\n  * candidate tips is not maintained here.\n  */\n-class BlockManager {\n+class BlockManager\n+{\n+    friend CChainState;\n+\n+private:\n+    // See definition for documentation\n+    void FindFilesToPruneManual(std::set<int>& setFilesToPrune, int nManualPruneHeight, int chain_tip_height);\n+    void FindFilesToPrune(std::set<int>& setFilesToPrune, uint64_t nPruneAfterHeight, int chain_tip_height, bool is_ibd);\n+\n public:\n     BlockMap m_block_index GUARDED_BY(cs_main);\n "
      }
    ]
  },
  {
    "sha": "485899a93c6f5fff62090907efb0ac938992e1fb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0ODU4OTlhOTNjNmY1ZmZmNjIwOTA5MDdlZmIwYWM5Mzg5OTJlMWZi",
    "commit": {
      "author": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2020-09-15T18:09:24Z"
      },
      "committer": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2020-09-21T17:28:08Z"
      },
      "message": "style: Make FindFilesToPrune{,Manual} match style guide\n\n[META] This is a pure style commit.",
      "tree": {
        "sha": "5dc94a120b5f367119a6f9d8b3612344eba753c5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5dc94a120b5f367119a6f9d8b3612344eba753c5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/485899a93c6f5fff62090907efb0ac938992e1fb",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEECc3SW1JEo3Z49u6oDMUhUxl5kaUFAl9o4qgACgkQDMUhUxl5\nkaUJ4Q//RW/z1Wg52AeFC4ULQXDT3Cftv7fJ6Oo2QLWaMNHX3iFpGbxoN/flqzzb\n8LkRlhkiLXcKWzOIT9+3mhF/mB1xNzvYHl5IFOWzHvOQdgJ9T0kBbWpnlxbLFIoU\nfamHi++YeOv5Bgf9xpPy80GWQDwQeUiRuK36rJhmbisM9R2f7kAarKVXQfuXo25H\ns6uzvHBcwLmrnDoB+trwXW10Y0599Squvzs6ebXB2qdBmrxhBzUwVCX9D0YDNJ6i\npues1Dqw/+nVzHqYrT5ekqyylK3GuIQ6qBRtddWC5tqIGVou2Gdslu1+2aW80etv\ncxd+c6wqpfGiULpkiMGjhlXtDVcY3Mdk95yPZ9ZL/4naLW3cP3IWkTPuLFsN3GzK\nCrCId9caDIp38vUczq/S20lA/+hlsFT6golptTG7a96A0jdaQR7HCa/SDqGKl/G2\no9tDYokoZfmhUX4+IS344HOqDA4KEbPg6ynnLuz46iX3xAaP0nKL8uHhfJkulAAh\n6l8HLOUnkkvCwYYPDSj7WsVomPtGcfnAavuO5H+nD1ANccTn0TR5qt8ku++iVo2Q\nNROkhmdDAXxYiiyHb3Qjgqq5DPg6ehuwScxLHyEX+SmVwQIEjxD/ZD1Y4N26kONj\nAW0id5OVbMg7UeUpJyyVdD7PyQByj1T7bB3gLmxraTpSyo2Y3Cc=\n=tHNk\n-----END PGP SIGNATURE-----",
        "payload": "tree 5dc94a120b5f367119a6f9d8b3612344eba753c5\nparent 3f5b5f3f6db0e5716911b3fba1460ce327e8a845\nauthor Carl Dong <contact@carldong.me> 1600193364 -0400\ncommitter Carl Dong <contact@carldong.me> 1600709288 -0400\n\nstyle: Make FindFilesToPrune{,Manual} match style guide\n\n[META] This is a pure style commit.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/485899a93c6f5fff62090907efb0ac938992e1fb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/485899a93c6f5fff62090907efb0ac938992e1fb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/485899a93c6f5fff62090907efb0ac938992e1fb/comments",
    "author": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3f5b5f3f6db0e5716911b3fba1460ce327e8a845",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3f5b5f3f6db0e5716911b3fba1460ce327e8a845",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3f5b5f3f6db0e5716911b3fba1460ce327e8a845"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 12,
      "deletions": 7
    },
    "files": [
      {
        "sha": "85bece45456e510e8e22e17a450f7e86310acbda",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 7,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/485899a93c6f5fff62090907efb0ac938992e1fb/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/485899a93c6f5fff62090907efb0ac938992e1fb/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=485899a93c6f5fff62090907efb0ac938992e1fb",
        "patch": "@@ -3999,15 +3999,17 @@ void BlockManager::FindFilesToPruneManual(std::set<int>& setFilesToPrune, int nM\n     assert(fPruneMode && nManualPruneHeight > 0);\n \n     LOCK2(cs_main, cs_LastBlockFile);\n-    if (chain_tip_height < 0)\n+    if (chain_tip_height < 0) {\n         return;\n+    }\n \n     // last block to prune is the lesser of (user-specified height, MIN_BLOCKS_TO_KEEP from the tip)\n     unsigned int nLastBlockWeCanPrune = std::min((unsigned)nManualPruneHeight, chain_tip_height - MIN_BLOCKS_TO_KEEP);\n-    int count=0;\n+    int count = 0;\n     for (int fileNumber = 0; fileNumber < nLastBlockFile; fileNumber++) {\n-        if (vinfoBlockFile[fileNumber].nSize == 0 || vinfoBlockFile[fileNumber].nHeightLast > nLastBlockWeCanPrune)\n+        if (vinfoBlockFile[fileNumber].nSize == 0 || vinfoBlockFile[fileNumber].nHeightLast > nLastBlockWeCanPrune) {\n             continue;\n+        }\n         PruneOneBlockFile(fileNumber);\n         setFilesToPrune.insert(fileNumber);\n         count++;\n@@ -4058,7 +4060,7 @@ void BlockManager::FindFilesToPrune(std::set<int>& setFilesToPrune, uint64_t nPr\n     // before the next pruning.\n     uint64_t nBuffer = BLOCKFILE_CHUNK_SIZE + UNDOFILE_CHUNK_SIZE;\n     uint64_t nBytesToPrune;\n-    int count=0;\n+    int count = 0;\n \n     if (nCurrentUsage + nBuffer >= nPruneTarget) {\n         // On a prune event, the chainstate DB is flushed.\n@@ -4073,15 +4075,18 @@ void BlockManager::FindFilesToPrune(std::set<int>& setFilesToPrune, uint64_t nPr\n         for (int fileNumber = 0; fileNumber < nLastBlockFile; fileNumber++) {\n             nBytesToPrune = vinfoBlockFile[fileNumber].nSize + vinfoBlockFile[fileNumber].nUndoSize;\n \n-            if (vinfoBlockFile[fileNumber].nSize == 0)\n+            if (vinfoBlockFile[fileNumber].nSize == 0) {\n                 continue;\n+            }\n \n-            if (nCurrentUsage + nBuffer < nPruneTarget)  // are we below our target?\n+            if (nCurrentUsage + nBuffer < nPruneTarget) { // are we below our target?\n                 break;\n+            }\n \n             // don't prune files that could have a block within MIN_BLOCKS_TO_KEEP of the main chain's tip but keep scanning\n-            if (vinfoBlockFile[fileNumber].nHeightLast > nLastBlockWeCanPrune)\n+            if (vinfoBlockFile[fileNumber].nHeightLast > nLastBlockWeCanPrune) {\n                 continue;\n+            }\n \n             PruneOneBlockFile(fileNumber);\n             // Queue up the files for removal"
      }
    ]
  },
  {
    "sha": "3756853b15902d63f4b5a3129e8b5d82e84e125b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNzU2ODUzYjE1OTAyZDYzZjRiNWEzMTI5ZThiNWQ4MmU4NGUxMjVi",
    "commit": {
      "author": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2020-09-14T14:19:12Z"
      },
      "committer": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2020-09-21T17:30:21Z"
      },
      "message": "docs: Move FindFilesToPrune{,Manual} doxygen comment\n\n[META] This is a pure comment commit.\n\nThey belong in the member declarations in the header file.",
      "tree": {
        "sha": "cb6874bb607d2459569bc40fb3f5bf5d98bf9616",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cb6874bb607d2459569bc40fb3f5bf5d98bf9616"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3756853b15902d63f4b5a3129e8b5d82e84e125b",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEECc3SW1JEo3Z49u6oDMUhUxl5kaUFAl9o4zIACgkQDMUhUxl5\nkaWdERAAwAy9vlyJ/BtfGaD6X899guGKm5uIFcp2D0FTWupyFcThrgW4S1gDQFDa\nPfrrzsjQ/HYNWDKn2XOEGPgb5Vev/EkksFUNeqTo7zU/ZaxDbgvXtZ72tZsQHaYk\nZTedfLIN9FNoItyXearBTKUc8OCNIOb/32qoAVoPzR589RLRYUnW6/S3yaJGXMuP\nKMZU+Pmp65kfPHs0nV9//rF9iMWSxfS+eN0RePXezxP8E62qC0E9mGxDxbWfG+a5\nGhRaprv3hDeL6N96eYx5+sQMhVSJ20CEr1l9OLvHN22FnA6b+fusAtK7EB0vg/Vj\nxZcH/olF6PKM7PXR22NG31L02KCilc8Uw4RopnDkhXGRGvgdACQuwoDMc7FoiCXH\n0buOBEcSJki0rHNzxqAs3GACLHVKjeq368xzhEhMVtNOyIEaVY9Rx2ALn1A23slS\nYZU0HsYD7dLFqvVmuDSJ1/OMSAL+ZBCW072gSDqM07KU0HqHySZEHSMNfAdNe6wz\n4Z76BEi+Pden9SV664PYIXol4xPbcfI8GjVVQBIKnq0ZFbAD3ncloTp9E4tLTHBc\nNUZD0KMmxsb+V5exEPniYKQ9CSNKUUvWh+HpBLaXvB8CXouhr7I8tVSvt+8J9DlP\n8U/5AiupA8ZT1/IxIbbCACBUdMWW/d0+a9GzFgWBGmDVWliWU+U=\n=/rks\n-----END PGP SIGNATURE-----",
        "payload": "tree cb6874bb607d2459569bc40fb3f5bf5d98bf9616\nparent 485899a93c6f5fff62090907efb0ac938992e1fb\nauthor Carl Dong <contact@carldong.me> 1600093152 -0400\ncommitter Carl Dong <contact@carldong.me> 1600709421 -0400\n\ndocs: Move FindFilesToPrune{,Manual} doxygen comment\n\n[META] This is a pure comment commit.\n\nThey belong in the member declarations in the header file.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3756853b15902d63f4b5a3129e8b5d82e84e125b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3756853b15902d63f4b5a3129e8b5d82e84e125b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3756853b15902d63f4b5a3129e8b5d82e84e125b/comments",
    "author": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "485899a93c6f5fff62090907efb0ac938992e1fb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/485899a93c6f5fff62090907efb0ac938992e1fb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/485899a93c6f5fff62090907efb0ac938992e1fb"
      }
    ],
    "stats": {
      "total": 34,
      "additions": 17,
      "deletions": 17
    },
    "files": [
      {
        "sha": "97b185e9ca9b7a9ab251fc16f1f65c140e9927c8",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 16,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3756853b15902d63f4b5a3129e8b5d82e84e125b/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3756853b15902d63f4b5a3129e8b5d82e84e125b/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=3756853b15902d63f4b5a3129e8b5d82e84e125b",
        "patch": "@@ -3993,7 +3993,6 @@ void UnlinkPrunedFiles(const std::set<int>& setFilesToPrune)\n     }\n }\n \n-/* Calculate the block/rev files to delete based on height specified by user with RPC command pruneblockchain */\n void BlockManager::FindFilesToPruneManual(std::set<int>& setFilesToPrune, int nManualPruneHeight, int chain_tip_height)\n {\n     assert(fPruneMode && nManualPruneHeight > 0);\n@@ -4028,21 +4027,6 @@ void PruneBlockFilesManual(int nManualPruneHeight)\n     }\n }\n \n-/**\n- * Prune block and undo files (blk???.dat and undo???.dat) so that the disk space used is less than a user-defined target.\n- * The user sets the target (in MB) on the command line or in config file.  This will be run on startup and whenever new\n- * space is allocated in a block or undo file, staying below the target. Changing back to unpruned requires a reindex\n- * (which in this case means the blockchain must be re-downloaded.)\n- *\n- * Pruning functions are called from FlushStateToDisk when the global fCheckForPruning flag has been set.\n- * Block and undo files are deleted in lock-step (when blk00003.dat is deleted, so is rev00003.dat.)\n- * Pruning cannot take place until the longest chain is at least a certain length (100000 on mainnet, 1000 on testnet, 1000 on regtest).\n- * Pruning will never delete a block within a defined distance (currently 288) from the active chain's tip.\n- * The block index is updated by unsetting HAVE_DATA and HAVE_UNDO for any blocks that were stored in the deleted files.\n- * A db flag records the fact that at least some block files have been pruned.\n- *\n- * @param[out]   setFilesToPrune   The set of file indices that can be unlinked will be returned\n- */\n void BlockManager::FindFilesToPrune(std::set<int>& setFilesToPrune, uint64_t nPruneAfterHeight, int chain_tip_height, bool is_ibd)\n {\n     LOCK2(cs_main, cs_LastBlockFile);"
      },
      {
        "sha": "9114b24c9463897ec4f3a3bf06b540e70804f773",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 17,
        "deletions": 1,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3756853b15902d63f4b5a3129e8b5d82e84e125b/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3756853b15902d63f4b5a3129e8b5d82e84e125b/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=3756853b15902d63f4b5a3129e8b5d82e84e125b",
        "patch": "@@ -361,8 +361,24 @@ class BlockManager\n     friend CChainState;\n \n private:\n-    // See definition for documentation\n+    /* Calculate the block/rev files to delete based on height specified by user with RPC command pruneblockchain */\n     void FindFilesToPruneManual(std::set<int>& setFilesToPrune, int nManualPruneHeight, int chain_tip_height);\n+\n+    /**\n+     * Prune block and undo files (blk???.dat and undo???.dat) so that the disk space used is less than a user-defined target.\n+     * The user sets the target (in MB) on the command line or in config file.  This will be run on startup and whenever new\n+     * space is allocated in a block or undo file, staying below the target. Changing back to unpruned requires a reindex\n+     * (which in this case means the blockchain must be re-downloaded.)\n+     *\n+     * Pruning functions are called from FlushStateToDisk when the global fCheckForPruning flag has been set.\n+     * Block and undo files are deleted in lock-step (when blk00003.dat is deleted, so is rev00003.dat.)\n+     * Pruning cannot take place until the longest chain is at least a certain length (100000 on mainnet, 1000 on testnet, 1000 on regtest).\n+     * Pruning will never delete a block within a defined distance (currently 288) from the active chain's tip.\n+     * The block index is updated by unsetting HAVE_DATA and HAVE_UNDO for any blocks that were stored in the deleted files.\n+     * A db flag records the fact that at least some block files have been pruned.\n+     *\n+     * @param[out]   setFilesToPrune   The set of file indices that can be unlinked will be returned\n+     */\n     void FindFilesToPrune(std::set<int>& setFilesToPrune, uint64_t nPruneAfterHeight, int chain_tip_height, bool is_ibd);\n \n public:"
      }
    ]
  },
  {
    "sha": "72a1d5c6f3834e206719ee5121df7727aed5b786",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3MmExZDVjNmYzODM0ZTIwNjcxOWVlNTEyMWRmNzcyN2FlZDViNzg2",
    "commit": {
      "author": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2020-09-15T18:16:04Z"
      },
      "committer": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2020-09-21T17:30:27Z"
      },
      "message": "validation: Remove review-only comments + assertions\n\n[META] This is a followup to \"validation: Move FindFilesToPrune{,Manual}\n       to BlockManager\" removing comments and assertions meant only to\n       show that the change is correct.",
      "tree": {
        "sha": "35c0f795a1adc5e1c9dc6b83f1e35f6320ce954f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/35c0f795a1adc5e1c9dc6b83f1e35f6320ce954f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/72a1d5c6f3834e206719ee5121df7727aed5b786",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEECc3SW1JEo3Z49u6oDMUhUxl5kaUFAl9o4zMACgkQDMUhUxl5\nkaVVMBAAk3RtmQUBsvjR9mhIDnDsc1OkmWmIhXlvV2XKpSX4Dz9QN9R6G0BI/JFG\nTDM1Kc8R59nuOPp9IZV1hOanXI91o3GszwGtP03BEZrMadFcMzCzHw3qvWtEguaR\nYfuu4/Y80B5S5hC/UX6l/XvNVaPcgGhIcL+Zmw7nR3B49AdeuLrpBY2GRBbuYM4r\nGn8JA4lNpuas7hwgSHcRMoQiglh3cJY/ulrWpLrS9osxGsYcPuZ9kGWwrji9qzDV\nuzmxr8ZM1M2FNdBaPI3ThM/RXdmzz32n1U9OXcJH3GBXSZNl16u6VJz/w3P7uXqX\nTnBSwnMx90bMwRXDJlLTJqYMi/sIEGFUErxGiXIzFq0pNKhYsdWBNQBQ+OrlAxc6\nB5hTEZqUzUaRM/IY4QuvqHb8otFKq0GpIZQaYEs4+jbV7oB8QLkTYOgJkzJ69DAS\nHBrUdaoQFel7cRPZsgpgraaH5VeyOX6PCPHYQul9555n5wiVBTDKcPGjo+v8NzW5\nWMrLWP21LbUJ9YUdEcOEb8BOJ6K8e5iFq7zFrsgftT3qD9xGE8qYsWaYs1P67Xzb\n9HW2q42uFd7FWx/8soHlpcyZPxQC2Izs4y+kZJLgBCczBE/Umo/rkKyktkM0jTVt\nyJ3x67ra1qKOU7qEjaN2rdgeFSYGEMNoePBmOrFLx2Ioq4S6PT0=\n=OH5Q\n-----END PGP SIGNATURE-----",
        "payload": "tree 35c0f795a1adc5e1c9dc6b83f1e35f6320ce954f\nparent 3756853b15902d63f4b5a3129e8b5d82e84e125b\nauthor Carl Dong <contact@carldong.me> 1600193764 -0400\ncommitter Carl Dong <contact@carldong.me> 1600709427 -0400\n\nvalidation: Remove review-only comments + assertions\n\n[META] This is a followup to \"validation: Move FindFilesToPrune{,Manual}\n       to BlockManager\" removing comments and assertions meant only to\n       show that the change is correct.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/72a1d5c6f3834e206719ee5121df7727aed5b786",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/72a1d5c6f3834e206719ee5121df7727aed5b786",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/72a1d5c6f3834e206719ee5121df7727aed5b786/comments",
    "author": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3756853b15902d63f4b5a3129e8b5d82e84e125b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3756853b15902d63f4b5a3129e8b5d82e84e125b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3756853b15902d63f4b5a3129e8b5d82e84e125b"
      }
    ],
    "stats": {
      "total": 39,
      "additions": 0,
      "deletions": 39
    },
    "files": [
      {
        "sha": "47aed6d0d41b8636ecd9e53c3aadf7723a6483c9",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 39,
        "changes": 39,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/72a1d5c6f3834e206719ee5121df7727aed5b786/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/72a1d5c6f3834e206719ee5121df7727aed5b786/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=72a1d5c6f3834e206719ee5121df7727aed5b786",
        "patch": "@@ -2281,52 +2281,13 @@ bool CChainState::FlushStateToDisk(\n         CoinsCacheSizeState cache_state = GetCoinsCacheSizeState(&m_mempool);\n         LOCK(cs_LastBlockFile);\n         if (fPruneMode && (fCheckForPruning || nManualPruneHeight > 0) && !fReindex) {\n-            // Previously, we called the global function ::ChainActive() in\n-            // FindFilesToPrune{,Manual} to get the tip height and to determine\n-            // whether or not a tip even exists. Now, we are simply passing in\n-            // m_chain.Height() (which returns -1 if the tip doesn't exist). To\n-            // make sure we're not changing behaviour, let's check that\n-            // ::ChainActive() is the same object as m_chain (not just\n-            // identical).\n-            //\n-            // This comment and the following assert will be removed in a\n-            // subsequent commit, as they're just meant to demonstrate\n-            // correctness (you can run tests against it and see that nothing\n-            // exit unexpectedly).\n-            assert(std::addressof(::ChainActive()) == std::addressof(m_chain));\n             if (nManualPruneHeight > 0) {\n                 LOG_TIME_MILLIS_WITH_CATEGORY(\"find files to prune (manual)\", BCLog::BENCH);\n \n                 m_blockman.FindFilesToPruneManual(setFilesToPrune, nManualPruneHeight, m_chain.Height());\n             } else {\n                 LOG_TIME_MILLIS_WITH_CATEGORY(\"find files to prune\", BCLog::BENCH);\n \n-                // Previously, we called the global function\n-                // ::ChainstateActive() in FindFilesToPrune{,Manual} to get the\n-                // IBD status. Now, we are simply passing in\n-                // IsInitialBlockDownload(). To make sure we're not changing\n-                // behaviour, let's check that ::ChainstateActive() is the same\n-                // object as *this (not just identical).\n-                //\n-                // This comment and the following assert will be removed in a\n-                // subsequent commit, as they're just meant to demonstrate\n-                // correctness (you can run tests against it and see that\n-                // nothing exit unexpectedly).\n-                assert(std::addressof(::ChainstateActive()) == std::addressof(*this));\n-\n-                // Previously, we called PruneOneBlockFile on g_chainman's\n-                // m_blockman in FindFilesToPrune{,Manual}. Now, we are instead\n-                // calling PruneOneBlockFile on _our_ m_blockman. To make sure\n-                // we're not changing behaviour, let's check that\n-                // g_chainman.m_blockman is the same object as _our_ m_blockman\n-                // (not just identical).\n-                //\n-                // This comment and the following assert will be removed in a\n-                // subsequent commit, as they're just meant to demonstrate\n-                // correctness (you can run tests against it and see that\n-                // nothing exit unexpectedly).\n-                assert(std::addressof(g_chainman.m_blockman) == std::addressof(m_blockman));\n-\n                 m_blockman.FindFilesToPrune(setFilesToPrune, chainparams.PruneAfterHeight(), m_chain.Height(), IsInitialBlockDownload());\n                 fCheckForPruning = false;\n             }"
      }
    ]
  }
]