jamesob,2020-09-09 19:57:43,"Concept ACK; helps reduce globals, supports fuzzing.",https://github.com/bitcoin/bitcoin/pull/19927#issuecomment-689786686,689786686,
fanquake,2020-09-10 00:55:40,Concept ACK,https://github.com/bitcoin/bitcoin/pull/19927#issuecomment-689904588,689904588,
Empact,2020-09-13 22:57:55,"I get this warning: \n\n```\nqt/test/apptests.cpp:87:45: warning: passing variable 'g_chainman' by reference requires holding mutex 'cs_main' [-Wthread-safety-reference]\n    UnloadBlockIndex(/* mempool */ nullptr, g_chainman);\n                                            ^\n```\n\nAnother proposed change: pass as a ref instead (I see this was discussed above).",https://github.com/bitcoin/bitcoin/pull/19927#issuecomment-691737398,691737398,
dongcarl,2020-09-14 15:22:08,"Thank you MarcoFalke, jnewbery, and Empact for the code review!\n\nMarco: `ChainstateManager` is now passed in as a reference in 577ec184bd47b3e88a1d3e60b4d2045bd51328b4\njnewbery: Thanks for the detailed review! See the review comments for resolutions\nEmpact: Good find. I'm turning on `-Werror=thread-safety` by default now and that particular problem is fixed in 577ec184bd47b3e88a1d3e60b4d20",https://github.com/bitcoin/bitcoin/pull/19927#issuecomment-692129520,692129520,
dongcarl,2020-09-15 18:30:03,"Got a [code review ACK](https://github.com/bitcoin/bitcoin/pull/19927#pullrequestreview-488777314), just pushed a version which:\n1. Has a [last commit](75142a7bd7890f2e14920dbe9701ada2cbc2326f) which removes the review-only comments + assertions\n2. Adds a [style-only commit](597ec8a853df20fc68892b5f1131d27a1f2cf0e5) which makes the code I moved conform to our style guide\n\nThis is now ready",https://github.com/bitcoin/bitcoin/pull/19927#issuecomment-692895586,692895586,
jnewbery,2020-09-16 08:20:31,code review ACK 75142a7bd7890f2e14920dbe9701ada2cbc2326f,https://github.com/bitcoin/bitcoin/pull/19927#issuecomment-693252979,693252979,
DrahtBot,2020-09-19 13:42:13,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19909 (txmempool: Remove unused clear() member function by MarcoFalke)\n* #18731 (refactor: Make CCheckQueue RAII-styled ",https://github.com/bitcoin/bitcoin/pull/19927#issuecomment-695215048,695215048,
MarcoFalke,2020-09-20 08:08:41,"Previously those methods were private (`static` in a cpp file), so I am a bit worried about exposing them as public member functions to all of Bitcoin Core (rpc, net_processing, ...). \n\nWhat do you think about turning them `private` again?\n\nE.g.\n\n```diff\ndiff --git a/src/validation.h b/src/validation.h\nindex cc5e36acfc..bc9b136039 100644\n--- a/src/validation.h\n+++ b/src/validat",https://github.com/bitcoin/bitcoin/pull/19927#issuecomment-695758685,695758685,
MarcoFalke,2020-09-20 08:11:46,"cr ACK 75142a7bd7890f2e14920dbe9701ada2cbc2326f ðŸ˜º\n\n<details><summary>Show signature and timestamp</summary>\n\nSignature:\n\n```\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\ncr ACK 75142a7bd7890f2e14920dbe9701ada2cbc2326f ðŸ˜º\n-----BEGIN PGP SIGNATURE-----\n\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUhyqwv/eNXZQ6DzY+d3CX83lRRCFbjD3zfjQ0o0dT2SBGnP4oaG",https://github.com/bitcoin/bitcoin/pull/19927#issuecomment-695758925,695758925,
dongcarl,2020-09-21 17:35:31,"Made `FindFilesToPrune{,Manual}` private per Marco's [comment](https://github.com/bitcoin/bitcoin/pull/19927#issuecomment-695758685).\n\nPrevious code reviewers: this change can be reviewed with:\n\n```sh\ngit diff 75142a7 72a1d5c\n```",https://github.com/bitcoin/bitcoin/pull/19927#issuecomment-696262568,696262568,
MarcoFalke,2020-09-23 18:34:34,"re-ACK 72a1d5c6f3 ðŸ‘š\n\n<details><summary>Show signature and timestamp</summary>\n\nSignature:\n\n```\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\nre-ACK 72a1d5c6f3 ðŸ‘š\n-----BEGIN PGP SIGNATURE-----\n\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUhTrAv+Ky3GNUn0kO04zX+7dsU23mPYIvAUJ/SRXBtSQID9lNph+93gmf29iMWM\n3eOnDT1KhSINP5mHGRX9j4loYTh2VxUE9Hwqzc/em4bfh",https://github.com/bitcoin/bitcoin/pull/19927#issuecomment-697853851,697853851,
MarcoFalke,2020-09-09 19:36:08,"in commit bc872e44e29f7108720072a7d37ce06fb069ba4f: Doesn't it make more sense to pass it as `this` (i.e. make it a member function)?\n\nI've done that in #19909 (commit facd88a77189f6953d28a6743e0c68175bc18f9e)\n\nConceptually it makes little sense for chainman to be optional. Why would you want to run a node with validation disabled? So, if you don't like to make it a member function, I'd sa",https://github.com/bitcoin/bitcoin/pull/19927#discussion_r485866325,485866325,src/init.cpp
dongcarl,2020-09-10 16:38:34,"I think in this particular instance, I prefer the latter solution of passing `chainman` as a reference, simply because `UnloadBlockIndex` touches so many validation globals that are not owned by `chainman`. Perhaps in the future when we move those globals into `chainman` or some other validation-container class, it would make more sense to do so.\n\nI was worried about callers (to `UnloadBlockIn",https://github.com/bitcoin/bitcoin/pull/19927#discussion_r486483452,486483452,src/init.cpp
jnewbery,2020-09-13 17:42:19,"Move the doxygen comments here (this comment made sense when it was next to a forward declaration, but now that the declaration is in the header file, it should have the doxygen comment)",https://github.com/bitcoin/bitcoin/pull/19927#discussion_r487556665,487556665,src/validation.h
jnewbery,2020-09-13 17:44:02,"Did you consider moving this logic to the `BlockManager` dtor instead of here? There's only ever one `BlockManager` instance (inside `ChainstateManager`), so destruction will happen at the same time. All the logic in this function is on `BlockManager` data.",https://github.com/bitcoin/bitcoin/pull/19927#discussion_r487556828,487556828,src/validation.h
jnewbery,2020-09-13 17:44:24,Remove useless comment.,https://github.com/bitcoin/bitcoin/pull/19927#discussion_r487556868,487556868,src/validation.h
jnewbery,2020-09-13 17:45:07,"```suggestion\n        for (auto it = BlockIndex().begin; it != BlockIndex().end(); ++it) {\n```",https://github.com/bitcoin/bitcoin/pull/19927#discussion_r487556989,487556989,src/validation.h
jnewbery,2020-09-13 21:02:29,"Actually, can't you just call `BlockManager::Unload()` in the `BlockManager` dtor?",https://github.com/bitcoin/bitcoin/pull/19927#discussion_r487577035,487577035,src/validation.h
dongcarl,2020-09-14 15:15:42,Resolved in cdd2063bbe8b8df4db42c81ee7913e2dc0b2387a,https://github.com/bitcoin/bitcoin/pull/19927#discussion_r488013284,488013284,src/validation.h
dongcarl,2020-09-14 15:15:59,Resolved in 4668ded6d6ea4299d998abbb57543f37519812e2,https://github.com/bitcoin/bitcoin/pull/19927#discussion_r488013483,488013483,src/validation.h
jnewbery,2020-09-15 11:42:54,style: no need for extra line break.,https://github.com/bitcoin/bitcoin/pull/19927#discussion_r488599503,488599503,src/validation.cpp
jnewbery,2020-09-15 11:43:23,"style: when touching lines, fix code to match style guide (here, join the line below with this or add braces)",https://github.com/bitcoin/bitcoin/pull/19927#discussion_r488599779,488599779,src/validation.cpp
jnewbery,2020-09-15 11:50:51,"I agree conceptually that UnloadBlockIndex should eventually be a member function of chainman, but also agree that we don't need to do everything in one PR.",https://github.com/bitcoin/bitcoin/pull/19927#discussion_r488604129,488604129,src/init.cpp
ryanofsky,2020-09-15 14:59:46,"In commit ""validation: Pass in chainman to UnloadBlockIndex"" (577ec184bd47b3e88a1d3e60b4d2045bd51328b4)\n\nre: [META] This is a pure refactor commit.\n\nTrivial: I'd call this ""mostly pure refactor"" instead of ""pure refactor"" because cs_main is no longer released between UnloadBlockIndex and chainstate reset (which I think is nontrivial, closing various coin views)\n\nAm also curious about o",https://github.com/bitcoin/bitcoin/pull/19927#discussion_r488737959,488737959,src/qt/test/apptests.cpp
ryanofsky,2020-09-15 15:10:45,"In commit ""validation: Move FindFilesToPrune{,Manual} to BlockManager"" (84d983656f1927955e516a94366b7c216bacded3)\n\nNice way of verifying, and didn't know about std::addressof!",https://github.com/bitcoin/bitcoin/pull/19927#discussion_r488746432,488746432,src/validation.cpp
dongcarl,2020-09-15 18:23:51,Resolved in fe07ba16511bd119b6ed744e68adfb3210a84254,https://github.com/bitcoin/bitcoin/pull/19927#discussion_r488874237,488874237,src/validation.cpp
dongcarl,2020-09-15 18:24:07,Resolved in 597ec8a853df20fc68892b5f1131d27a1f2cf0e5,https://github.com/bitcoin/bitcoin/pull/19927#discussion_r488874403,488874403,src/validation.cpp
dongcarl,2020-09-15 18:27:29,"Resolved in 74f73c783d46b012f375d819e2cd09c792820cd5 (I just removed that comment since ""mostly pure refactor"" isn't too meaningful :smile: \n\nFor the `[META]` tags, I literally just came up with it randomly, mostly to describe high-level things that apply to the entire commit or things that reference other commits.",https://github.com/bitcoin/bitcoin/pull/19927#discussion_r488876301,488876301,src/qt/test/apptests.cpp
jnewbery,2020-09-23 10:26:07,(Only if you retouch the branch again) Make this a doxygen comment (start with `/**`). Also line-wrap this comment and the one below at something sensible :slightly_smiling_face: ,https://github.com/bitcoin/bitcoin/pull/19927#discussion_r493421238,493421238,src/validation.h
