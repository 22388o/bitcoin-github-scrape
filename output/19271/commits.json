[
  {
    "sha": "1e994f27060ca0ec9b483b08ba64472a81b854ab",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxZTk5NGYyNzA2MGNhMGVjOWI0ODNiMDhiYTY0NDcyYTgxYjg1NGFi",
    "commit": {
      "author": {
        "name": "Andrew Toth",
        "email": "andrewstoth@gmail.com",
        "date": "2020-07-18T21:38:09Z"
      },
      "committer": {
        "name": "Andrew Toth",
        "email": "andrewstoth@gmail.com",
        "date": "2020-07-18T21:46:31Z"
      },
      "message": "Make m_cacheview a shared_ptr",
      "tree": {
        "sha": "9bdb0fb8deed764e6c43e8346001f568bf22219a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9bdb0fb8deed764e6c43e8346001f568bf22219a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1e994f27060ca0ec9b483b08ba64472a81b854ab",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1e994f27060ca0ec9b483b08ba64472a81b854ab",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1e994f27060ca0ec9b483b08ba64472a81b854ab",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1e994f27060ca0ec9b483b08ba64472a81b854ab/comments",
    "author": {
      "login": "andrewtoth",
      "id": 237213,
      "node_id": "MDQ6VXNlcjIzNzIxMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andrewtoth",
      "html_url": "https://github.com/andrewtoth",
      "followers_url": "https://api.github.com/users/andrewtoth/followers",
      "following_url": "https://api.github.com/users/andrewtoth/following{/other_user}",
      "gists_url": "https://api.github.com/users/andrewtoth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
      "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
      "repos_url": "https://api.github.com/users/andrewtoth/repos",
      "events_url": "https://api.github.com/users/andrewtoth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "andrewtoth",
      "id": 237213,
      "node_id": "MDQ6VXNlcjIzNzIxMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andrewtoth",
      "html_url": "https://github.com/andrewtoth",
      "followers_url": "https://api.github.com/users/andrewtoth/followers",
      "following_url": "https://api.github.com/users/andrewtoth/following{/other_user}",
      "gists_url": "https://api.github.com/users/andrewtoth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
      "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
      "repos_url": "https://api.github.com/users/andrewtoth/repos",
      "events_url": "https://api.github.com/users/andrewtoth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "090d87716074434bdc6c7656ec44d049197a793a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/090d87716074434bdc6c7656ec44d049197a793a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/090d87716074434bdc6c7656ec44d049197a793a"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "ea6a87e7d7cb661c6c5793a619cad1afac2dea3b",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1e994f27060ca0ec9b483b08ba64472a81b854ab/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1e994f27060ca0ec9b483b08ba64472a81b854ab/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=1e994f27060ca0ec9b483b08ba64472a81b854ab",
        "patch": "@@ -1263,7 +1263,7 @@ CoinsViews::CoinsViews(\n \n void CoinsViews::InitCache()\n {\n-    m_cacheview = MakeUnique<CCoinsViewCache>(&m_catcherview);\n+    m_cacheview = std::make_shared<CCoinsViewCache>(&m_catcherview);\n }\n \n CChainState::CChainState(BlockManager& blockman, uint256 from_snapshot_blockhash)"
      },
      {
        "sha": "3512ff43ae6b1d468099929594c52f2dc3539290",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1e994f27060ca0ec9b483b08ba64472a81b854ab/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1e994f27060ca0ec9b483b08ba64472a81b854ab/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=1e994f27060ca0ec9b483b08ba64472a81b854ab",
        "patch": "@@ -430,7 +430,7 @@ class CoinsViews {\n \n     //! This is the top layer of the cache hierarchy - it keeps as many coins in memory as\n     //! can fit per the dbcache setting.\n-    std::unique_ptr<CCoinsViewCache> m_cacheview GUARDED_BY(cs_main);\n+    std::shared_ptr<CCoinsViewCache> m_cacheview GUARDED_BY(cs_main);\n \n     //! This constructor initializes CCoinsViewDB and CCoinsViewErrorCatcher instances, but it\n     //! *does not* create a CCoinsViewCache instance by default. This is done separately because the"
      }
    ]
  },
  {
    "sha": "c294aa63fb85e4e9394f13541c21648902692315",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjMjk0YWE2M2ZiODVlNGU5Mzk0ZjEzNTQxYzIxNjQ4OTAyNjkyMzE1",
    "commit": {
      "author": {
        "name": "Andrew Toth",
        "email": "andrewstoth@gmail.com",
        "date": "2020-07-18T21:40:37Z"
      },
      "committer": {
        "name": "Andrew Toth",
        "email": "andrewstoth@gmail.com",
        "date": "2020-07-18T21:46:31Z"
      },
      "message": "Move CoinsTip accesses out of critical path",
      "tree": {
        "sha": "87e79b1669d9ad694efae4619865d7431d4e9d9b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/87e79b1669d9ad694efae4619865d7431d4e9d9b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c294aa63fb85e4e9394f13541c21648902692315",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c294aa63fb85e4e9394f13541c21648902692315",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c294aa63fb85e4e9394f13541c21648902692315",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c294aa63fb85e4e9394f13541c21648902692315/comments",
    "author": {
      "login": "andrewtoth",
      "id": 237213,
      "node_id": "MDQ6VXNlcjIzNzIxMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andrewtoth",
      "html_url": "https://github.com/andrewtoth",
      "followers_url": "https://api.github.com/users/andrewtoth/followers",
      "following_url": "https://api.github.com/users/andrewtoth/following{/other_user}",
      "gists_url": "https://api.github.com/users/andrewtoth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
      "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
      "repos_url": "https://api.github.com/users/andrewtoth/repos",
      "events_url": "https://api.github.com/users/andrewtoth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "andrewtoth",
      "id": 237213,
      "node_id": "MDQ6VXNlcjIzNzIxMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andrewtoth",
      "html_url": "https://github.com/andrewtoth",
      "followers_url": "https://api.github.com/users/andrewtoth/followers",
      "following_url": "https://api.github.com/users/andrewtoth/following{/other_user}",
      "gists_url": "https://api.github.com/users/andrewtoth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
      "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
      "repos_url": "https://api.github.com/users/andrewtoth/repos",
      "events_url": "https://api.github.com/users/andrewtoth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1e994f27060ca0ec9b483b08ba64472a81b854ab",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1e994f27060ca0ec9b483b08ba64472a81b854ab",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1e994f27060ca0ec9b483b08ba64472a81b854ab"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 6,
      "deletions": 4
    },
    "files": [
      {
        "sha": "97afcccd2ad4ab3049ce0f61cbcf0c29c0058a0b",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 4,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c294aa63fb85e4e9394f13541c21648902692315/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c294aa63fb85e4e9394f13541c21648902692315/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=c294aa63fb85e4e9394f13541c21648902692315",
        "patch": "@@ -2284,14 +2284,14 @@ bool CChainState::FlushStateToDisk(\n     std::set<int> setFilesToPrune;\n     bool full_flush_completed = false;\n \n-    const size_t coins_count = CoinsTip().GetCacheSize();\n-    const size_t coins_mem_usage = CoinsTip().DynamicMemoryUsage();\n-\n     try {\n     {\n         bool fFlushForPrune = false;\n         bool fDoFullFlush = false;\n-        CoinsCacheSizeState cache_state = GetCoinsCacheSizeState(::mempool);\n+        CoinsCacheSizeState cache_state = CoinsCacheSizeState::OK;\n+        if (mode == FlushStateMode::PERIODIC || mode == FlushStateMode::IF_NEEDED) {\n+            cache_state = GetCoinsCacheSizeState(::mempool);\n+        }\n         LOCK(cs_LastBlockFile);\n         if (fPruneMode && (fCheckForPruning || nManualPruneHeight > 0) && !fReindex) {\n             if (nManualPruneHeight > 0) {\n@@ -2373,6 +2373,8 @@ bool CChainState::FlushStateToDisk(\n         }\n         // Flush best chain related state. This can only be done if the blocks / block index write was also done.\n         if (fDoFullFlush && !CoinsTip().GetBestBlock().IsNull()) {\n+            const size_t coins_count = CoinsTip().GetCacheSize();\n+            const size_t coins_mem_usage = CoinsTip().DynamicMemoryUsage();\n             LOG_TIME_SECONDS(strprintf(\"write coins cache to disk (%d coins, %.2fkB)\",\n                 coins_count, coins_mem_usage / 1000));\n "
      }
    ]
  },
  {
    "sha": "afb9e0b1014d468037581b16b687f8e12657fdc3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphZmI5ZTBiMTAxNGQ0NjgwMzc1ODFiMTZiNjg3ZjhlMTI2NTdmZGMz",
    "commit": {
      "author": {
        "name": "Andrew Toth",
        "email": "andrewstoth@gmail.com",
        "date": "2020-07-18T22:16:19Z"
      },
      "committer": {
        "name": "Andrew Toth",
        "email": "andrewstoth@gmail.com",
        "date": "2020-07-18T22:16:19Z"
      },
      "message": "Add BlockWarmer class",
      "tree": {
        "sha": "c08b024df4511819cb496b4027471c20be727831",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c08b024df4511819cb496b4027471c20be727831"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/afb9e0b1014d468037581b16b687f8e12657fdc3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/afb9e0b1014d468037581b16b687f8e12657fdc3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/afb9e0b1014d468037581b16b687f8e12657fdc3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/afb9e0b1014d468037581b16b687f8e12657fdc3/comments",
    "author": {
      "login": "andrewtoth",
      "id": 237213,
      "node_id": "MDQ6VXNlcjIzNzIxMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andrewtoth",
      "html_url": "https://github.com/andrewtoth",
      "followers_url": "https://api.github.com/users/andrewtoth/followers",
      "following_url": "https://api.github.com/users/andrewtoth/following{/other_user}",
      "gists_url": "https://api.github.com/users/andrewtoth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
      "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
      "repos_url": "https://api.github.com/users/andrewtoth/repos",
      "events_url": "https://api.github.com/users/andrewtoth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "andrewtoth",
      "id": 237213,
      "node_id": "MDQ6VXNlcjIzNzIxMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andrewtoth",
      "html_url": "https://github.com/andrewtoth",
      "followers_url": "https://api.github.com/users/andrewtoth/followers",
      "following_url": "https://api.github.com/users/andrewtoth/following{/other_user}",
      "gists_url": "https://api.github.com/users/andrewtoth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
      "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
      "repos_url": "https://api.github.com/users/andrewtoth/repos",
      "events_url": "https://api.github.com/users/andrewtoth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c294aa63fb85e4e9394f13541c21648902692315",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c294aa63fb85e4e9394f13541c21648902692315",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c294aa63fb85e4e9394f13541c21648902692315"
      }
    ],
    "stats": {
      "total": 164,
      "additions": 164,
      "deletions": 0
    },
    "files": [
      {
        "sha": "5b78e853fb1681b6596b46edd81ae8d479ade57d",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 121,
        "deletions": 0,
        "changes": 121,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/afb9e0b1014d468037581b16b687f8e12657fdc3/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/afb9e0b1014d468037581b16b687f8e12657fdc3/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=afb9e0b1014d468037581b16b687f8e12657fdc3",
        "patch": "@@ -3839,6 +3839,127 @@ bool CChainState::AcceptBlock(const std::shared_ptr<const CBlock>& pblock, Block\n     return true;\n }\n \n+void BlockWarmer::SetCacheView(const std::shared_ptr<const CCoinsViewCache> cacheview)\n+{\n+    AssertLockHeld(cs_main);\n+\n+    StopThread();\n+\n+    m_cacheview = cacheview;\n+\n+    // If we are starting IBD from genesis, then wait for an initial flush to start warming.\n+    // Warming is not useful when performing IBD from genesis and no flush has yet occurred,\n+    // since all coins are already in the cache.\n+    if (cacheview == nullptr || cacheview->GetBestBlock().IsNull()) {\n+        return;\n+    }\n+\n+    StartThread();\n+}\n+\n+void BlockWarmer::StartThread()\n+{\n+    AssertLockHeld(cs_main);\n+\n+    if (m_thread_started) {\n+        return;\n+    }\n+\n+    m_thread_started = true;\n+    m_thread_warm = std::thread(&TraceThread<std::function<void()>>, \"warmcoins\",\n+                                std::bind(&BlockWarmer::WarmCoinsCacheThread, this));\n+}\n+\n+void BlockWarmer::DidFlush()\n+{\n+    AssertLockHeld(cs_main);\n+\n+    if (m_thread_started) {\n+        return;\n+    }\n+    StartThread();\n+}\n+\n+void BlockWarmer::WarmCoinsCacheThread()\n+{\n+    while (!ShutdownRequested() && !m_stop_thread) {\n+        {\n+            WAIT_LOCK(m_cs_warm_block, lock);\n+            while (m_stop_warming_block) {\n+                m_warm_cv.wait(lock);\n+            }\n+        }\n+\n+        {\n+            LOCK(m_cs_warm_block);\n+\n+            if (!m_warm_block) {\n+                m_stop_warming_block = true;\n+                continue;\n+            }\n+\n+            for (const auto& tx : m_warm_block->vtx) {\n+                if (tx->IsCoinBase()) continue;\n+                for (const auto& input : tx->vin) {\n+                    if (m_stop_warming_block) break;\n+                    m_cacheview->AccessCoin(input.prevout);\n+                }\n+                if (m_stop_warming_block) break;\n+            }\n+\n+            m_warm_block = nullptr;\n+            m_stop_warming_block = true;\n+        }\n+    }\n+}\n+\n+void BlockWarmer::WarmBlock(const std::shared_ptr<const CBlock> pblock, const CoinsCacheSizeState& cache_state)\n+{\n+    AssertLockHeld(cs_main);\n+\n+    if (!m_thread_started) {\n+        return;\n+    }\n+\n+    m_stop_warming_block = true;\n+\n+    if (cache_state >= CoinsCacheSizeState::LARGE) {\n+        return;\n+    }\n+\n+    {\n+        LOCK(m_cs_warm_block);\n+        m_warm_block = pblock;\n+        m_stop_warming_block = false;\n+        m_warm_cv.notify_all();\n+    }\n+}\n+\n+void BlockWarmer::CancelWarmingBlock()\n+{\n+    m_stop_warming_block = true;\n+    LOCK(m_cs_warm_block);\n+    m_warm_block = nullptr;\n+}\n+\n+void BlockWarmer::StopThread()\n+{\n+    AssertLockHeld(cs_main);\n+\n+    if (!m_thread_started) return;\n+\n+    m_stop_thread = true;\n+    {\n+        CancelWarmingBlock();\n+        AssertLockHeld(m_cs_warm_block);\n+        // Notify the thread to continue if waiting on lock\n+        m_stop_warming_block = false;\n+        m_warm_cv.notify_all();\n+    }\n+    m_thread_warm.join();\n+    m_thread_started = false;\n+}\n+\n bool ChainstateManager::ProcessNewBlock(const CChainParams& chainparams, const std::shared_ptr<const CBlock> pblock, bool fForceProcessing, bool* fNewBlock)\n {\n     AssertLockNotHeld(cs_main);"
      },
      {
        "sha": "2cf3da576b0977467f89cf9bef7c00ecf21ade65",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 43,
        "deletions": 0,
        "changes": 43,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/afb9e0b1014d468037581b16b687f8e12657fdc3/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/afb9e0b1014d468037581b16b687f8e12657fdc3/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=afb9e0b1014d468037581b16b687f8e12657fdc3",
        "patch": "@@ -33,6 +33,7 @@\n #include <utility>\n #include <vector>\n \n+class BlockWarmer;\n class CChainState;\n class BlockValidationState;\n class CBlockIndex;\n@@ -453,6 +454,48 @@ enum class CoinsCacheSizeState\n     OK = 0\n };\n \n+class BlockWarmer\n+{\n+  private:\n+    /** Lock that is held when accessing the coins cache so coins aren't accessed during warming */\n+    Mutex m_cs_warm_block;\n+\n+    /** The thread where coins are added to the cache */\n+    std::thread m_thread_warm GUARDED_BY(::cs_main);\n+\n+    /** Flag to signal to the thread to abort warming the block */\n+    std::atomic<bool> m_stop_warming_block{true};\n+\n+    /** Flag to signal to the thread to exit */\n+    std::atomic<bool> m_stop_thread{false};\n+\n+    /** The cache view that is warmed */\n+    std::shared_ptr<const CCoinsViewCache> m_cacheview GUARDED_BY(m_cs_warm_block);\n+\n+    /** The block to warm on the warm coins thread */\n+    std::shared_ptr<const CBlock> m_warm_block GUARDED_BY(m_cs_warm_block);\n+\n+    /** Signals to the thread to begin warming the block */\n+    std::condition_variable m_warm_cv GUARDED_BY(m_cs_warm_block);\n+\n+    /** Whether we have started the thread or not */\n+    std::atomic<bool> m_thread_started{false};\n+\n+  public:\n+    /** Sets the cache view. Pass nullptr to reset */\n+    void SetCacheView(const std::shared_ptr<const CCoinsViewCache> cacheview) EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n+    /** Begin adding the inputs of the block to the coins cache on the warm coins thread */\n+    void WarmBlock(const std::shared_ptr<const CBlock> pblock, const CoinsCacheSizeState& cache_state) EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n+    void DidFlush() EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n+    void CancelWarmingBlock();\n+\n+  private:\n+    /** The actual thread function */\n+    void WarmCoinsCacheThread();\n+    void StartThread() EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n+    void StopThread() EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n+};\n+\n /**\n  * CChainState stores and provides an API to update our local knowledge of the\n  * current best chain."
      }
    ]
  },
  {
    "sha": "3cfb3031f875afa636c392454da3e03e95f8f505",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozY2ZiMzAzMWY4NzVhZmE2MzZjMzkyNDU0ZGEzZTAzZTk1ZjhmNTA1",
    "commit": {
      "author": {
        "name": "Andrew Toth",
        "email": "andrewstoth@gmail.com",
        "date": "2020-07-18T22:16:58Z"
      },
      "committer": {
        "name": "Andrew Toth",
        "email": "andrewstoth@gmail.com",
        "date": "2020-07-18T22:16:58Z"
      },
      "message": "Warm new blocks with BlockWarmer",
      "tree": {
        "sha": "8d7ab2077400fbfde8340284115120ffcdced313",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8d7ab2077400fbfde8340284115120ffcdced313"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3cfb3031f875afa636c392454da3e03e95f8f505",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3cfb3031f875afa636c392454da3e03e95f8f505",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3cfb3031f875afa636c392454da3e03e95f8f505",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3cfb3031f875afa636c392454da3e03e95f8f505/comments",
    "author": {
      "login": "andrewtoth",
      "id": 237213,
      "node_id": "MDQ6VXNlcjIzNzIxMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andrewtoth",
      "html_url": "https://github.com/andrewtoth",
      "followers_url": "https://api.github.com/users/andrewtoth/followers",
      "following_url": "https://api.github.com/users/andrewtoth/following{/other_user}",
      "gists_url": "https://api.github.com/users/andrewtoth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
      "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
      "repos_url": "https://api.github.com/users/andrewtoth/repos",
      "events_url": "https://api.github.com/users/andrewtoth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "andrewtoth",
      "id": 237213,
      "node_id": "MDQ6VXNlcjIzNzIxMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andrewtoth",
      "html_url": "https://github.com/andrewtoth",
      "followers_url": "https://api.github.com/users/andrewtoth/followers",
      "following_url": "https://api.github.com/users/andrewtoth/following{/other_user}",
      "gists_url": "https://api.github.com/users/andrewtoth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
      "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
      "repos_url": "https://api.github.com/users/andrewtoth/repos",
      "events_url": "https://api.github.com/users/andrewtoth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "afb9e0b1014d468037581b16b687f8e12657fdc3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/afb9e0b1014d468037581b16b687f8e12657fdc3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/afb9e0b1014d468037581b16b687f8e12657fdc3"
      }
    ],
    "stats": {
      "total": 37,
      "additions": 31,
      "deletions": 6
    },
    "files": [
      {
        "sha": "aa797b19704bae7d3ed43cfe08badbfa3de05558",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 18,
        "deletions": 4,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3cfb3031f875afa636c392454da3e03e95f8f505/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3cfb3031f875afa636c392454da3e03e95f8f505/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=3cfb3031f875afa636c392454da3e03e95f8f505",
        "patch": "@@ -1288,6 +1288,7 @@ void CChainState::InitCoinsCache()\n {\n     assert(m_coins_views != nullptr);\n     m_coins_views->InitCache();\n+    m_block_warmer.SetCacheView(m_coins_views->m_cacheview);\n }\n \n // Note that though this is marked const, we may end up modifying `m_cached_finished_ibd`, which\n@@ -2389,6 +2390,7 @@ bool CChainState::FlushStateToDisk(\n             // Flush the chainstate (which may refer to block index entries).\n             if (!CoinsTip().Flush())\n                 return AbortNode(state, \"Failed to write to coin database\");\n+            m_block_warmer.DidFlush();\n             nLastFlush = nNow;\n             full_flush_completed = true;\n         }\n@@ -3973,14 +3975,24 @@ bool ChainstateManager::ProcessNewBlock(const CChainParams& chainparams, const s\n         // Therefore, the following critical section must include the CheckBlock() call as well.\n         LOCK(cs_main);\n \n-        // Ensure that CheckBlock() passes before calling AcceptBlock, as\n-        // belt-and-suspenders.\n-        bool ret = CheckBlock(*pblock, state, chainparams.GetConsensus());\n+        bool ret = pblock->fChecked || CheckProofOfWork(pblock->GetHash(), pblock->nBits, chainparams.GetConsensus());\n         if (ret) {\n+            // After checking PoW begin warming the cache to connect this block\n+            ::ChainstateActive().m_block_warmer.WarmBlock(pblock, ::ChainstateActive().GetCoinsCacheSizeState(::mempool));\n+\n+            // Ensure that CheckBlock() passes before calling AcceptBlock, as\n+            // belt-and-suspenders.\n+            // No need to recheck POW since it was checked above\n+            ret = CheckBlock(*pblock, state, chainparams.GetConsensus(), /* fCheckPOW */ false);\n+        }\n+        if (ret) {\n+            // Set checked to true since it would not be if fCheckPOW is set to false\n+            pblock->fChecked = true;\n             // Store to disk\n             ret = ::ChainstateActive().AcceptBlock(pblock, state, chainparams, &pindex, fForceProcessing, nullptr, fNewBlock);\n         }\n         if (!ret) {\n+            ::ChainstateActive().m_block_warmer.CancelWarmingBlock();\n             GetMainSignals().BlockChecked(*pblock, state);\n             return error(\"%s: AcceptBlock FAILED (%s)\", __func__, state.ToString());\n         }\n@@ -3989,8 +4001,10 @@ bool ChainstateManager::ProcessNewBlock(const CChainParams& chainparams, const s\n     NotifyHeaderTip();\n \n     BlockValidationState state; // Only used to report errors, not invalidity - ignore it\n-    if (!::ChainstateActive().ActivateBestChain(state, chainparams, pblock))\n+    if (!::ChainstateActive().ActivateBestChain(state, chainparams, pblock)) {\n+        ::ChainstateActive().m_block_warmer.CancelWarmingBlock();\n         return error(\"%s: ActivateBestChain failed (%s)\", __func__, state.ToString());\n+    }\n \n     return true;\n }"
      },
      {
        "sha": "b6a7d615fb35dddd73d43dced1525411292a3119",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 13,
        "deletions": 2,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3cfb3031f875afa636c392454da3e03e95f8f505/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3cfb3031f875afa636c392454da3e03e95f8f505/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=3cfb3031f875afa636c392454da3e03e95f8f505",
        "patch": "@@ -547,6 +547,9 @@ class CChainState {\n     //! Manages the UTXO set, which is a reflection of the contents of `m_chain`.\n     std::unique_ptr<CoinsViews> m_coins_views;\n \n+    /** Warms a yet to be validated block */\n+    BlockWarmer m_block_warmer;\n+\n public:\n     explicit CChainState(BlockManager& blockman, uint256 from_snapshot_blockhash = uint256());\n \n@@ -590,10 +593,15 @@ class CChainState {\n      */\n     std::set<CBlockIndex*, CBlockIndexWorkComparator> setBlockIndexCandidates;\n \n-    //! @returns A reference to the in-memory cache of the UTXO set.\n+    /**\n+     * @returns A reference to the in-memory cache of the UTXO set.\n+     * Don't call this in the critical path from ProcessNewBlock to ConnectTip,\n+     * since it will block warming the cache with the new block's inputs.\n+     */\n     CCoinsViewCache& CoinsTip() EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n     {\n         assert(m_coins_views->m_cacheview);\n+        m_block_warmer.CancelWarmingBlock();\n         return *m_coins_views->m_cacheview.get();\n     }\n \n@@ -611,7 +619,10 @@ class CChainState {\n     }\n \n     //! Destructs all objects related to accessing the UTXO set.\n-    void ResetCoinsViews() { m_coins_views.reset(); }\n+    void ResetCoinsViews() {\n+      m_block_warmer.SetCacheView(nullptr);\n+      m_coins_views.reset();\n+    }\n \n     /**\n      * Update the on-disk chain state."
      }
    ]
  },
  {
    "sha": "0580245dd8274fc601857bfa4305c77ff5349739",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowNTgwMjQ1ZGQ4Mjc0ZmM2MDE4NTdiZmE0MzA1Yzc3ZmY1MzQ5NzM5",
    "commit": {
      "author": {
        "name": "Andrew Toth",
        "email": "andrewstoth@gmail.com",
        "date": "2020-07-18T22:17:07Z"
      },
      "committer": {
        "name": "Andrew Toth",
        "email": "andrewstoth@gmail.com",
        "date": "2020-07-18T22:17:07Z"
      },
      "message": "Add debug bench logs for BlockWarmer",
      "tree": {
        "sha": "3e3739c6f7e8766dd09ddf6332e0628fe8c4470b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3e3739c6f7e8766dd09ddf6332e0628fe8c4470b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0580245dd8274fc601857bfa4305c77ff5349739",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0580245dd8274fc601857bfa4305c77ff5349739",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0580245dd8274fc601857bfa4305c77ff5349739",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0580245dd8274fc601857bfa4305c77ff5349739/comments",
    "author": {
      "login": "andrewtoth",
      "id": 237213,
      "node_id": "MDQ6VXNlcjIzNzIxMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andrewtoth",
      "html_url": "https://github.com/andrewtoth",
      "followers_url": "https://api.github.com/users/andrewtoth/followers",
      "following_url": "https://api.github.com/users/andrewtoth/following{/other_user}",
      "gists_url": "https://api.github.com/users/andrewtoth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
      "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
      "repos_url": "https://api.github.com/users/andrewtoth/repos",
      "events_url": "https://api.github.com/users/andrewtoth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "andrewtoth",
      "id": 237213,
      "node_id": "MDQ6VXNlcjIzNzIxMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andrewtoth",
      "html_url": "https://github.com/andrewtoth",
      "followers_url": "https://api.github.com/users/andrewtoth/followers",
      "following_url": "https://api.github.com/users/andrewtoth/following{/other_user}",
      "gists_url": "https://api.github.com/users/andrewtoth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
      "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
      "repos_url": "https://api.github.com/users/andrewtoth/repos",
      "events_url": "https://api.github.com/users/andrewtoth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3cfb3031f875afa636c392454da3e03e95f8f505",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3cfb3031f875afa636c392454da3e03e95f8f505",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3cfb3031f875afa636c392454da3e03e95f8f505"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 10,
      "deletions": 0
    },
    "files": [
      {
        "sha": "702df99702a396b42960dd240309af59f87edf00",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0580245dd8274fc601857bfa4305c77ff5349739/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0580245dd8274fc601857bfa4305c77ff5349739/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=0580245dd8274fc601857bfa4305c77ff5349739",
        "patch": "@@ -2546,6 +2546,7 @@ bool CChainState::DisconnectTip(BlockValidationState& state, const CChainParams&\n     return true;\n }\n \n+static int64_t nTimeWarmingBlock = 0;\n static int64_t nTimeReadFromDisk = 0;\n static int64_t nTimeConnectTotal = 0;\n static int64_t nTimeFlush = 0;\n@@ -3892,6 +3893,9 @@ void BlockWarmer::WarmCoinsCacheThread()\n             }\n         }\n \n+        const int64_t start_time = GetTimeMicros();\n+        bool did_finish = false;\n+\n         {\n             LOCK(m_cs_warm_block);\n \n@@ -3910,8 +3914,14 @@ void BlockWarmer::WarmCoinsCacheThread()\n             }\n \n             m_warm_block = nullptr;\n+            if (!m_stop_warming_block) {\n+                did_finish = true;\n+            }\n             m_stop_warming_block = true;\n         }\n+\n+        const int64_t end_time = GetTimeMicros(); nTimeWarmingBlock += end_time - start_time;\n+        LogPrint(BCLog::BENCH, \"- Warmed coins cache for: %.2fms [%.2fs], finished %d\\n\", MILLI * (end_time - start_time), nTimeWarmingBlock * MICRO, did_finish);\n     }\n }\n "
      }
    ]
  }
]