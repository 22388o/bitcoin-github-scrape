[
  {
    "sha": "89b7019be884962729784ab326c46be88ed4784c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4OWI3MDE5YmU4ODQ5NjI3Mjk3ODRhYjMyNmM0NmJlODhlZDQ3ODRj",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2012-12-02T20:59:22Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieterw@google.com",
        "date": "2012-12-06T16:00:12Z"
      },
      "message": "Reconstruct coins/ from scratch when missing.",
      "tree": {
        "sha": "73075858986d45fd61276358e21a411d8014f5a5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/73075858986d45fd61276358e21a411d8014f5a5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/89b7019be884962729784ab326c46be88ed4784c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/89b7019be884962729784ab326c46be88ed4784c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/89b7019be884962729784ab326c46be88ed4784c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/89b7019be884962729784ab326c46be88ed4784c/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": null,
    "parents": [
      {
        "sha": "d79775a04d6dfc03dfc71d7811375a33e1e5c833",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d79775a04d6dfc03dfc71d7811375a33e1e5c833",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d79775a04d6dfc03dfc71d7811375a33e1e5c833"
      }
    ],
    "stats": {
      "total": 25,
      "additions": 11,
      "deletions": 14
    },
    "files": [
      {
        "sha": "615e753add848fdb5fd84a484095d39ed0430a49",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/89b7019be884962729784ab326c46be88ed4784c/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/89b7019be884962729784ab326c46be88ed4784c/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=89b7019be884962729784ab326c46be88ed4784c",
        "patch": "@@ -865,7 +865,7 @@ bool AppInit2()\n         if (walletdb.ReadBestBlock(locator))\n             pindexRescan = locator.GetBlockIndex();\n     }\n-    if (pindexBest != pindexRescan)\n+    if (pindexBest && pindexBest != pindexRescan)\n     {\n         uiInterface.InitMessage(_(\"Rescanning...\"));\n         printf(\"Rescanning last %i blocks (from block %i)...\\n\", pindexBest->nHeight - pindexRescan->nHeight, pindexRescan->nHeight);"
      },
      {
        "sha": "c3a6dd04107df77b4d4f58114428aa3abe47484c",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 13,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/89b7019be884962729784ab326c46be88ed4784c/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/89b7019be884962729784ab326c46be88ed4784c/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=89b7019be884962729784ab326c46be88ed4784c",
        "patch": "@@ -1691,7 +1691,7 @@ bool SetBestChain(CBlockIndex* pindexNew)\n     // Find the fork (typically, there is none)\n     CBlockIndex* pfork = view.GetBestBlock();\n     CBlockIndex* plonger = pindexNew;\n-    while (pfork != plonger)\n+    while (pfork && pfork != plonger)\n     {\n         while (plonger->nHeight > pfork->nHeight)\n             if (!(plonger = plonger->pprev))\n@@ -2322,13 +2322,18 @@ bool static LoadBlockIndexDB()\n     if (pblocktree->ReadBlockFileInfo(nLastBlockFile, infoLastBlockFile))\n         printf(\"LoadBlockIndex(): last block file: %s\\n\", infoLastBlockFile.ToString().c_str());\n \n+    // Load bnBestInvalidWork, OK if it doesn't exist\n+    pblocktree->ReadBestInvalidWork(bnBestInvalidWork);\n+\n+    // Check whether we need to continue reindexing\n+    bool fReindexing = false;\n+    pblocktree->ReadReindexing(fReindexing);\n+    fReindex |= fReindexing;\n+\n     // Load hashBestChain pointer to end of best chain\n     pindexBest = pcoinsTip->GetBestBlock();\n     if (pindexBest == NULL)\n-    {\n-        if (pindexGenesisBlock == NULL)\n-            return true;\n-    }\n+        return true;\n     hashBestChain = pindexBest->GetBlockHash();\n     nBestHeight = pindexBest->nHeight;\n     bnBestChainWork = pindexBest->bnChainWork;\n@@ -2344,14 +2349,6 @@ bool static LoadBlockIndexDB()\n         BlockHashStr(hashBestChain).c_str(), nBestHeight,\n         DateTimeStrFormat(\"%x %H:%M:%S\", pindexBest->GetBlockTime()).c_str());\n \n-    // Load bnBestInvalidWork, OK if it doesn't exist\n-    pblocktree->ReadBestInvalidWork(bnBestInvalidWork);\n-\n-    // Check whether we need to continue reindexing\n-    bool fReindexing = false;\n-    pblocktree->ReadReindexing(fReindexing);\n-    fReindex |= fReindexing;\n-\n     // Verify blocks in the best chain\n     int nCheckLevel = GetArg(\"-checklevel\", 1);\n     int nCheckDepth = GetArg( \"-checkblocks\", 2500);"
      }
    ]
  }
]