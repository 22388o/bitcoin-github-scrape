[
  {
    "sha": "0dc5907d0f0490036c50cb7aee19e31075bbf402",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowZGM1OTA3ZDBmMDQ5MDAzNmM1MGNiN2FlZTE5ZTMxMDc1YmJmNDAy",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2019-10-02T08:01:27Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2019-12-10T16:39:40Z"
      },
      "message": "tests: Add corpora suppression (FUZZERS_MISSING_CORPORA) for fuzzers missing in https://github.com/bitcoin-core/qa-assets/tree/master/fuzz_seed_corpus",
      "tree": {
        "sha": "83ccd539a4aed3c5707bc9cb57af2becaf62dc47",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/83ccd539a4aed3c5707bc9cb57af2becaf62dc47"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0dc5907d0f0490036c50cb7aee19e31075bbf402",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0dc5907d0f0490036c50cb7aee19e31075bbf402",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0dc5907d0f0490036c50cb7aee19e31075bbf402",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0dc5907d0f0490036c50cb7aee19e31075bbf402/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1189b6acab115a7fe7bd67f8b4c6e3f55e53274e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1189b6acab115a7fe7bd67f8b4c6e3f55e53274e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1189b6acab115a7fe7bd67f8b4c6e3f55e53274e"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 5,
      "deletions": 1
    },
    "files": [
      {
        "sha": "2d255c0bb44847038daa568c76f3c0ccf4f8c2ba",
        "filename": "test/fuzz/test_runner.py",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0dc5907d0f0490036c50cb7aee19e31075bbf402/test/fuzz/test_runner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0dc5907d0f0490036c50cb7aee19e31075bbf402/test/fuzz/test_runner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/fuzz/test_runner.py?ref=0dc5907d0f0490036c50cb7aee19e31075bbf402",
        "patch": "@@ -24,6 +24,10 @@\n     \"key_origin_info_deserialize\",\n     \"merkle_block_deserialize\",\n     \"out_point_deserialize\",\n+    \"parse_hd_keypath\",\n+    \"parse_numbers\",\n+    \"parse_script\",\n+    \"parse_univalue\",\n     \"partial_merkle_tree_deserialize\",\n     \"partially_signed_transaction_deserialize\",\n     \"prefilled_transaction_deserialize\",\n@@ -32,8 +36,8 @@\n     \"pub_key_deserialize\",\n     \"script_deserialize\",\n     \"sub_net_deserialize\",\n-    \"tx_in_deserialize\",\n     \"tx_in\",\n+    \"tx_in_deserialize\",\n     \"tx_out\",\n ]\n "
      }
    ]
  },
  {
    "sha": "074cb6451b16158589d743488930963bcf4b024c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowNzRjYjY0NTFiMTYxNTg1ODlkNzQzNDg4OTMwOTYzYmNmNGIwMjRj",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2019-10-02T11:20:17Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2019-12-10T16:39:40Z"
      },
      "message": "tests: Add ParseHDKeypath(...) (bip32) fuzzing harness",
      "tree": {
        "sha": "49b47791d44067fa5c9423e947842e5d08b69b83",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/49b47791d44067fa5c9423e947842e5d08b69b83"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/074cb6451b16158589d743488930963bcf4b024c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/074cb6451b16158589d743488930963bcf4b024c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/074cb6451b16158589d743488930963bcf4b024c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/074cb6451b16158589d743488930963bcf4b024c/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0dc5907d0f0490036c50cb7aee19e31075bbf402",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0dc5907d0f0490036c50cb7aee19e31075bbf402",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0dc5907d0f0490036c50cb7aee19e31075bbf402"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 20,
      "deletions": 0
    },
    "files": [
      {
        "sha": "d84daeaf095f6c4212a582ccbd058d1a291cee12",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/074cb6451b16158589d743488930963bcf4b024c/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/074cb6451b16158589d743488930963bcf4b024c/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=074cb6451b16158589d743488930963bcf4b024c",
        "patch": "@@ -33,6 +33,7 @@ FUZZ_TARGETS = \\\n   test/fuzz/messageheader_deserialize \\\n   test/fuzz/netaddr_deserialize \\\n   test/fuzz/out_point_deserialize \\\n+  test/fuzz/parse_hd_keypath \\\n   test/fuzz/parse_iso8601 \\\n   test/fuzz/partial_merkle_tree_deserialize \\\n   test/fuzz/partially_signed_transaction_deserialize \\\n@@ -518,6 +519,12 @@ test_fuzz_tx_out_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_tx_out_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n test_fuzz_tx_out_LDADD = $(FUZZ_SUITE_LD_COMMON)\n \n+test_fuzz_parse_hd_keypath_SOURCES = $(FUZZ_SUITE) test/fuzz/parse_hd_keypath.cpp\n+test_fuzz_parse_hd_keypath_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n+test_fuzz_parse_hd_keypath_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_fuzz_parse_hd_keypath_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_parse_hd_keypath_LDADD = $(FUZZ_SUITE_LD_COMMON)\n+\n endif # ENABLE_FUZZ\n \n nodist_test_test_bitcoin_SOURCES = $(GENERATED_TEST_FILES)"
      },
      {
        "sha": "9a23f4b2d43944e3b119f80238b29f4a0293a4fc",
        "filename": "src/test/fuzz/parse_hd_keypath.cpp",
        "status": "added",
        "additions": 13,
        "deletions": 0,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/074cb6451b16158589d743488930963bcf4b024c/src/test/fuzz/parse_hd_keypath.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/074cb6451b16158589d743488930963bcf4b024c/src/test/fuzz/parse_hd_keypath.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/parse_hd_keypath.cpp?ref=074cb6451b16158589d743488930963bcf4b024c",
        "patch": "@@ -0,0 +1,13 @@\n+// Copyright (c) 2009-2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <test/fuzz/fuzz.h>\n+#include <util/bip32.h>\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    const std::string keypath_str(buffer.begin(), buffer.end());\n+    std::vector<uint32_t> keypath;\n+    (void)ParseHDKeypath(keypath_str, keypath);\n+}"
      }
    ]
  },
  {
    "sha": "fb8c12093aa37f5536a1a4ba341ee8bab4dabe60",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYjhjMTIwOTNhYTM3ZjU1MzZhMWE0YmEzNDFlZThiYWI0ZGFiZTYw",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2019-10-02T11:36:08Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2019-12-10T16:39:40Z"
      },
      "message": "tests: Add ParseScript(...) (core_io) fuzzing harness",
      "tree": {
        "sha": "25cb483e4584171e9d62bf8e4f6e506fb0a53695",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/25cb483e4584171e9d62bf8e4f6e506fb0a53695"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fb8c12093aa37f5536a1a4ba341ee8bab4dabe60",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fb8c12093aa37f5536a1a4ba341ee8bab4dabe60",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fb8c12093aa37f5536a1a4ba341ee8bab4dabe60",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fb8c12093aa37f5536a1a4ba341ee8bab4dabe60/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "074cb6451b16158589d743488930963bcf4b024c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/074cb6451b16158589d743488930963bcf4b024c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/074cb6451b16158589d743488930963bcf4b024c"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 23,
      "deletions": 0
    },
    "files": [
      {
        "sha": "a54ee21910be7432c3d38ee4cf5468832bc7ced4",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fb8c12093aa37f5536a1a4ba341ee8bab4dabe60/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fb8c12093aa37f5536a1a4ba341ee8bab4dabe60/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=fb8c12093aa37f5536a1a4ba341ee8bab4dabe60",
        "patch": "@@ -38,6 +38,7 @@ FUZZ_TARGETS = \\\n   test/fuzz/partial_merkle_tree_deserialize \\\n   test/fuzz/partially_signed_transaction_deserialize \\\n   test/fuzz/prefilled_transaction_deserialize \\\n+  test/fuzz/parse_script \\\n   test/fuzz/psbt \\\n   test/fuzz/psbt_input_deserialize \\\n   test/fuzz/psbt_output_deserialize \\\n@@ -525,6 +526,12 @@ test_fuzz_parse_hd_keypath_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_parse_hd_keypath_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n test_fuzz_parse_hd_keypath_LDADD = $(FUZZ_SUITE_LD_COMMON)\n \n+test_fuzz_parse_script_SOURCES = $(FUZZ_SUITE) test/fuzz/parse_script.cpp\n+test_fuzz_parse_script_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n+test_fuzz_parse_script_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_fuzz_parse_script_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_parse_script_LDADD = $(FUZZ_SUITE_LD_COMMON)\n+\n endif # ENABLE_FUZZ\n \n nodist_test_test_bitcoin_SOURCES = $(GENERATED_TEST_FILES)"
      },
      {
        "sha": "21ac1aecf3a97b605788aef546dce7444bfed855",
        "filename": "src/test/fuzz/parse_script.cpp",
        "status": "added",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fb8c12093aa37f5536a1a4ba341ee8bab4dabe60/src/test/fuzz/parse_script.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fb8c12093aa37f5536a1a4ba341ee8bab4dabe60/src/test/fuzz/parse_script.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/parse_script.cpp?ref=fb8c12093aa37f5536a1a4ba341ee8bab4dabe60",
        "patch": "@@ -0,0 +1,16 @@\n+// Copyright (c) 2009-2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <core_io.h>\n+#include <script/script.h>\n+#include <test/fuzz/fuzz.h>\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    const std::string script_string(buffer.begin(), buffer.end());\n+    try {\n+        (void)ParseScript(script_string);\n+    } catch (const std::runtime_error&) {\n+    }\n+}"
      }
    ]
  },
  {
    "sha": "e3d2bcf5cf7a53e5ca671cfed1fe7b6cf0c191ba",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplM2QyYmNmNWNmN2E1M2U1Y2E2NzFjZmVkMWZlN2I2Y2YwYzE5MWJh",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2019-10-02T12:01:52Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2019-12-10T16:39:40Z"
      },
      "message": "tests: Add fuzzing harnesses for various number parsing functions",
      "tree": {
        "sha": "5cc0081820bbd5b451486131b80769576054d79d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5cc0081820bbd5b451486131b80769576054d79d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e3d2bcf5cf7a53e5ca671cfed1fe7b6cf0c191ba",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e3d2bcf5cf7a53e5ca671cfed1fe7b6cf0c191ba",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e3d2bcf5cf7a53e5ca671cfed1fe7b6cf0c191ba",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e3d2bcf5cf7a53e5ca671cfed1fe7b6cf0c191ba/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fb8c12093aa37f5536a1a4ba341ee8bab4dabe60",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fb8c12093aa37f5536a1a4ba341ee8bab4dabe60",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fb8c12093aa37f5536a1a4ba341ee8bab4dabe60"
      }
    ],
    "stats": {
      "total": 43,
      "additions": 43,
      "deletions": 0
    },
    "files": [
      {
        "sha": "a5f740c5030379b336b0989cb6e33fc692b1fe66",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e3d2bcf5cf7a53e5ca671cfed1fe7b6cf0c191ba/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e3d2bcf5cf7a53e5ca671cfed1fe7b6cf0c191ba/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=e3d2bcf5cf7a53e5ca671cfed1fe7b6cf0c191ba",
        "patch": "@@ -38,6 +38,7 @@ FUZZ_TARGETS = \\\n   test/fuzz/partial_merkle_tree_deserialize \\\n   test/fuzz/partially_signed_transaction_deserialize \\\n   test/fuzz/prefilled_transaction_deserialize \\\n+  test/fuzz/parse_numbers \\\n   test/fuzz/parse_script \\\n   test/fuzz/psbt \\\n   test/fuzz/psbt_input_deserialize \\\n@@ -532,6 +533,12 @@ test_fuzz_parse_script_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_parse_script_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n test_fuzz_parse_script_LDADD = $(FUZZ_SUITE_LD_COMMON)\n \n+test_fuzz_parse_numbers_SOURCES = $(FUZZ_SUITE) test/fuzz/parse_numbers.cpp\n+test_fuzz_parse_numbers_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n+test_fuzz_parse_numbers_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_fuzz_parse_numbers_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_parse_numbers_LDADD = $(FUZZ_SUITE_LD_COMMON)\n+\n endif # ENABLE_FUZZ\n \n nodist_test_test_bitcoin_SOURCES = $(GENERATED_TEST_FILES)"
      },
      {
        "sha": "59f89dc9fbbb99eb49d49b83176d724733c4e03e",
        "filename": "src/test/fuzz/parse_numbers.cpp",
        "status": "added",
        "additions": 35,
        "deletions": 0,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e3d2bcf5cf7a53e5ca671cfed1fe7b6cf0c191ba/src/test/fuzz/parse_numbers.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e3d2bcf5cf7a53e5ca671cfed1fe7b6cf0c191ba/src/test/fuzz/parse_numbers.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/parse_numbers.cpp?ref=e3d2bcf5cf7a53e5ca671cfed1fe7b6cf0c191ba",
        "patch": "@@ -0,0 +1,35 @@\n+// Copyright (c) 2009-2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <test/fuzz/fuzz.h>\n+#include <util/moneystr.h>\n+#include <util/strencodings.h>\n+\n+#include <string>\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    const std::string random_string(buffer.begin(), buffer.end());\n+\n+    CAmount amount;\n+    (void)ParseMoney(random_string, amount);\n+\n+    double d;\n+    (void)ParseDouble(random_string, &d);\n+\n+    int32_t i32;\n+    (void)ParseInt32(random_string, &i32);\n+    (void)atoi(random_string);\n+\n+    uint32_t u32;\n+    (void)ParseUInt32(random_string, &u32);\n+\n+    int64_t i64;\n+    (void)atoi64(random_string);\n+    (void)ParseFixedPoint(random_string, 3, &i64);\n+    (void)ParseInt64(random_string, &i64);\n+\n+    uint64_t u64;\n+    (void)ParseUInt64(random_string, &u64);\n+}"
      },
      {
        "sha": "ea9ea7a58df318e848518ff2a350df4544be88bf",
        "filename": "test/lint/lint-locale-dependence.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e3d2bcf5cf7a53e5ca671cfed1fe7b6cf0c191ba/test/lint/lint-locale-dependence.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e3d2bcf5cf7a53e5ca671cfed1fe7b6cf0c191ba/test/lint/lint-locale-dependence.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/lint/lint-locale-dependence.sh?ref=e3d2bcf5cf7a53e5ca671cfed1fe7b6cf0c191ba",
        "patch": "@@ -11,6 +11,7 @@ KNOWN_VIOLATIONS=(\n     \"src/qt/rpcconsole.cpp:.*atoi\"\n     \"src/rest.cpp:.*strtol\"\n     \"src/test/dbwrapper_tests.cpp:.*snprintf\"\n+    \"src/test/fuzz/parse_numbers.cpp:.*atoi\"\n     \"src/torcontrol.cpp:.*atoi\"\n     \"src/torcontrol.cpp:.*strtol\"\n     \"src/util/strencodings.cpp:.*atoi\""
      }
    ]
  },
  {
    "sha": "a1308b7e12e6af7482954e439f594b771eb62b73",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphMTMwOGI3ZTEyZTZhZjc0ODI5NTRlNDM5ZjU5NGI3NzFlYjYyYjcz",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2019-10-03T09:11:40Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2019-12-10T16:39:40Z"
      },
      "message": "tests: Add fuzzing harnesses for various JSON/univalue parsing functions",
      "tree": {
        "sha": "28132fe7345cb3c673bb25c670ec76ff0a5c5f6e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/28132fe7345cb3c673bb25c670ec76ff0a5c5f6e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a1308b7e12e6af7482954e439f594b771eb62b73",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a1308b7e12e6af7482954e439f594b771eb62b73",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a1308b7e12e6af7482954e439f594b771eb62b73",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a1308b7e12e6af7482954e439f594b771eb62b73/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e3d2bcf5cf7a53e5ca671cfed1fe7b6cf0c191ba",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e3d2bcf5cf7a53e5ca671cfed1fe7b6cf0c191ba",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e3d2bcf5cf7a53e5ca671cfed1fe7b6cf0c191ba"
      }
    ],
    "stats": {
      "total": 99,
      "additions": 99,
      "deletions": 0
    },
    "files": [
      {
        "sha": "0225edf29e59987d004960c2c02672410f32e220",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a1308b7e12e6af7482954e439f594b771eb62b73/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a1308b7e12e6af7482954e439f594b771eb62b73/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=a1308b7e12e6af7482954e439f594b771eb62b73",
        "patch": "@@ -40,6 +40,7 @@ FUZZ_TARGETS = \\\n   test/fuzz/prefilled_transaction_deserialize \\\n   test/fuzz/parse_numbers \\\n   test/fuzz/parse_script \\\n+  test/fuzz/parse_univalue \\\n   test/fuzz/psbt \\\n   test/fuzz/psbt_input_deserialize \\\n   test/fuzz/psbt_output_deserialize \\\n@@ -97,6 +98,7 @@ FUZZ_SUITE_LD_COMMON = \\\n  $(LIBTEST_UTIL) \\\n  $(LIBBITCOIN_CONSENSUS) \\\n  $(LIBBITCOIN_CRYPTO) \\\n+ $(LIBBITCOIN_CLI) \\\n  $(LIBUNIVALUE) \\\n  $(LIBLEVELDB) \\\n  $(LIBLEVELDB_SSE42) \\\n@@ -539,6 +541,12 @@ test_fuzz_parse_numbers_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_parse_numbers_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n test_fuzz_parse_numbers_LDADD = $(FUZZ_SUITE_LD_COMMON)\n \n+test_fuzz_parse_univalue_SOURCES = $(FUZZ_SUITE) test/fuzz/parse_univalue.cpp\n+test_fuzz_parse_univalue_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n+test_fuzz_parse_univalue_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_fuzz_parse_univalue_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_parse_univalue_LDADD = $(FUZZ_SUITE_LD_COMMON)\n+\n endif # ENABLE_FUZZ\n \n nodist_test_test_bitcoin_SOURCES = $(GENERATED_TEST_FILES)"
      },
      {
        "sha": "3ad112dbad59f65225fdc47c66f8ebd64723e569",
        "filename": "src/test/fuzz/parse_univalue.cpp",
        "status": "added",
        "additions": 91,
        "deletions": 0,
        "changes": 91,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a1308b7e12e6af7482954e439f594b771eb62b73/src/test/fuzz/parse_univalue.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a1308b7e12e6af7482954e439f594b771eb62b73/src/test/fuzz/parse_univalue.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/parse_univalue.cpp?ref=a1308b7e12e6af7482954e439f594b771eb62b73",
        "patch": "@@ -0,0 +1,91 @@\n+// Copyright (c) 2009-2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chainparams.h>\n+#include <core_io.h>\n+#include <rpc/client.h>\n+#include <rpc/util.h>\n+#include <test/fuzz/fuzz.h>\n+#include <util/memory.h>\n+\n+#include <limits>\n+#include <string>\n+\n+void initialize()\n+{\n+    static const auto verify_handle = MakeUnique<ECCVerifyHandle>();\n+    SelectParams(CBaseChainParams::REGTEST);\n+}\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    const std::string random_string(buffer.begin(), buffer.end());\n+    bool valid = true;\n+    const UniValue univalue = [&] {\n+        try {\n+            return ParseNonRFCJSONValue(random_string);\n+        } catch (const std::runtime_error&) {\n+            valid = false;\n+            return NullUniValue;\n+        }\n+    }();\n+    if (!valid) {\n+        return;\n+    }\n+    try {\n+        (void)ParseHashO(univalue, \"A\");\n+        (void)ParseHashO(univalue, random_string);\n+    } catch (const UniValue&) {\n+    } catch (const std::runtime_error&) {\n+    }\n+    try {\n+        (void)ParseHashV(univalue, \"A\");\n+        (void)ParseHashV(univalue, random_string);\n+    } catch (const UniValue&) {\n+    } catch (const std::runtime_error&) {\n+    }\n+    try {\n+        (void)ParseHexO(univalue, \"A\");\n+        (void)ParseHexO(univalue, random_string);\n+    } catch (const UniValue&) {\n+    } catch (const std::runtime_error&) {\n+    }\n+    try {\n+        (void)ParseHexUV(univalue, \"A\");\n+        (void)ParseHexUV(univalue, random_string);\n+    } catch (const UniValue&) {\n+    } catch (const std::runtime_error&) {\n+    }\n+    try {\n+        (void)ParseHexV(univalue, \"A\");\n+        (void)ParseHexV(univalue, random_string);\n+    } catch (const UniValue&) {\n+    } catch (const std::runtime_error&) {\n+    }\n+    try {\n+        (void)ParseSighashString(univalue);\n+    } catch (const std::runtime_error&) {\n+    }\n+    try {\n+        (void)AmountFromValue(univalue);\n+    } catch (const UniValue&) {\n+    } catch (const std::runtime_error&) {\n+    }\n+    try {\n+        FlatSigningProvider provider;\n+        (void)EvalDescriptorStringOrObject(univalue, provider);\n+    } catch (const UniValue&) {\n+    } catch (const std::runtime_error&) {\n+    }\n+    try {\n+        (void)ParseConfirmTarget(univalue, std::numeric_limits<unsigned int>::max());\n+    } catch (const UniValue&) {\n+    } catch (const std::runtime_error&) {\n+    }\n+    try {\n+        (void)ParseDescriptorRange(univalue);\n+    } catch (const UniValue&) {\n+    } catch (const std::runtime_error&) {\n+    }\n+}"
      }
    ]
  }
]