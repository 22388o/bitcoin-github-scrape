jonasschnelli,2018-03-26T11:44:21Z,utACK d6771613617e24d964378056919fe4ad6ab049c8,https://github.com/bitcoin/bitcoin/pull/12789#issuecomment-376137728,376137728,
MarcoFalke,2018-03-26T12:48:44Z,"Why?\n\nThe underlying CPubKey is invalid, so nothing bad should happen. (And it seems your fix woulnd't prevent anything bad, if it was happening, either.)",https://github.com/bitcoin/bitcoin/pull/12789#issuecomment-376153783,376153783,
practicalswift,2018-03-26T13:15:45Z,"@MarcoFalke Perhaps I'm misunderstanding you but wouldn't it be better if `DecodeExt{Pub,}Key` was deterministic (in the sense that a given input always produces the same output)? :-)",https://github.com/bitcoin/bitcoin/pull/12789#issuecomment-376161618,376161618,
MarcoFalke,2018-03-26T14:10:55Z,It is a bug elsewhere if it was possible to get non-deterministic results from that.,https://github.com/bitcoin/bitcoin/pull/12789#issuecomment-376179447,376179447,
practicalswift,2018-03-26T14:16:14Z,"@MarcoFalke You mean that the caller guarantees that it is providing input that passes `DecodeBase58Check(…)`? Then we should document this obligation for the caller and/or `assert(false);` in `DecodeExt{Pub,}Key` if the `DecodeBase58Check(…)` fails, shouldn't we? Silently returning a `CExtPubKey ` filled with random garbage in case of invalid input feels really icky.",https://github.com/bitcoin/bitcoin/pull/12789#issuecomment-376181209,376181209,
practicalswift,2018-03-26T15:18:56Z,"Before this patch:\n\n```\n$ cat > test.cpp\n…\nint main(void) {\n  CExtPubKey key = DecodeExtPubKey(""foo"");\n  std::cout << key.nChild << ""\n"";\n}\n^D\n$ g++ -o test test.cpp\n$ ./test\n109452364\n$ ./test\n-1789494196\n$ ./test\n-1568076724\n$ ./test\n1483189324\n$ ./test\n-1168606132\n```\n\nAre we really happy with that? :-)",https://github.com/bitcoin/bitcoin/pull/12789#issuecomment-376203876,376203876,
MarcoFalke,2018-03-26T16:13:36Z,"You should check if `key` is valid before using it, I guess. Your patch doesn't help solve that bug, only makes it always fail in the same way.",https://github.com/bitcoin/bitcoin/pull/12789#issuecomment-376222619,376222619,
practicalswift,2018-03-26T19:44:04Z,"@MarcoFalke Please help me out here :-)  What do you suggest as the proper way to fix this assuming we agree that we don't want to silently return a `CExtPubKey` filled with random data when \n`DecodeExt{Pub,}Key` is given input not passing `DecodeBase58Check(...)`? :-)",https://github.com/bitcoin/bitcoin/pull/12789#issuecomment-376287932,376287932,
sipa,2018-03-26T19:47:50Z,I think the contents of CPubKey/CKey/... for which IsValid is false just has undefined contents. Anything accessing it without checking whether it's valid is violating the contract.,https://github.com/bitcoin/bitcoin/pull/12789#issuecomment-376289035,376289035,
practicalswift,2018-03-26T20:50:57Z,@MarcoFalke @sipa If this is expected behaviour I  should probably document that somewhere. What would be the appropriate place to put it? :-),https://github.com/bitcoin/bitcoin/pull/12789#issuecomment-376307287,376307287,
practicalswift,2018-03-29T14:06:39Z,Seems to be consensus NACK on this one. Closing! :-),https://github.com/bitcoin/bitcoin/pull/12789#issuecomment-377246376,377246376,
