[
  {
    "sha": "b1385852ef2ba45fd6926d75497646debf79e686",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiMTM4NTg1MmVmMmJhNDVmZDY5MjZkNzU0OTc2NDZkZWJmNzllNjg2",
    "commit": {
      "author": {
        "name": "Alex Morcos",
        "email": "morcos@chaincode.com",
        "date": "2017-07-17T10:52:09Z"
      },
      "committer": {
        "name": "Alex Morcos",
        "email": "morcos@chaincode.com",
        "date": "2017-07-17T11:10:03Z"
      },
      "message": "Remove factor of 3 from definition of dust.\n\nThis redefines dust to be the value of an output such that it would\ncost that value in fees to (create and) spend the output at the dust\nrelay rate.  The previous definition was that it would cost 1/3 of the\nvalue.  The default dust relay rate is correspondingly increased to\n3000 sat/kB so the actual default dust output value of 546 satoshis\nfor a non-segwit output remains unchanged.  This commit is a refactor\nonly unless a dustrelayfee is passed on the commandline in which case\nthat number now needs to be increased by a factor of 3 to get the same\nbehavior.  -dustrelayfee is a hidden command line option.\n\nNote: It's not exactly a refactor due to edge case changes in rounding\nas evidenced by the required change to the unit test.",
      "tree": {
        "sha": "b752ab5590661f6a81efbdacb26a67475c42de2c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b752ab5590661f6a81efbdacb26a67475c42de2c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b1385852ef2ba45fd6926d75497646debf79e686",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b1385852ef2ba45fd6926d75497646debf79e686",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b1385852ef2ba45fd6926d75497646debf79e686",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b1385852ef2ba45fd6926d75497646debf79e686/comments",
    "author": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "91edda8f3c81ba5a69f44485f20d74f85ec9cee1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/91edda8f3c81ba5a69f44485f20d74f85ec9cee1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/91edda8f3c81ba5a69f44485f20d74f85ec9cee1"
      }
    ],
    "stats": {
      "total": 26,
      "additions": 14,
      "deletions": 12
    },
    "files": [
      {
        "sha": "bda0e905b3a6f3c89453e958877598d0fdfc8861",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b1385852ef2ba45fd6926d75497646debf79e686/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b1385852ef2ba45fd6926d75497646debf79e686/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=b1385852ef2ba45fd6926d75497646debf79e686",
        "patch": "@@ -479,7 +479,7 @@ std::string HelpMessage(HelpMessageMode mode)\n     if (showDebug) {\n         strUsage += HelpMessageOpt(\"-acceptnonstdtxn\", strprintf(\"Relay and mine \\\"non-standard\\\" transactions (%sdefault: %u)\", \"testnet/regtest only; \", defaultChainParams->RequireStandard()));\n         strUsage += HelpMessageOpt(\"-incrementalrelayfee=<amt>\", strprintf(\"Fee rate (in %s/kB) used to define cost of relay, used for mempool limiting and BIP 125 replacement. (default: %s)\", CURRENCY_UNIT, FormatMoney(DEFAULT_INCREMENTAL_RELAY_FEE)));\n-        strUsage += HelpMessageOpt(\"-dustrelayfee=<amt>\", strprintf(\"Fee rate (in %s/kB) used to defined dust, the value of an output such that it will cost about 1/3 of its value in fees at this fee rate to spend it. (default: %s)\", CURRENCY_UNIT, FormatMoney(DUST_RELAY_TX_FEE)));\n+        strUsage += HelpMessageOpt(\"-dustrelayfee=<amt>\", strprintf(\"Fee rate (in %s/kB) used to defined dust, the value of an output such that it will cost more than its value in fees at this fee rate to spend it. (default: %s)\", CURRENCY_UNIT, FormatMoney(DUST_RELAY_TX_FEE)));\n     }\n     strUsage += HelpMessageOpt(\"-bytespersigop\", strprintf(_(\"Equivalent bytes per sigop in transactions for relay and mining (default: %u)\"), DEFAULT_BYTES_PER_SIGOP));\n     strUsage += HelpMessageOpt(\"-datacarrier\", strprintf(_(\"Relay and mine data carrier transactions (default: %u)\"), DEFAULT_ACCEPT_DATACARRIER));"
      },
      {
        "sha": "605e3e06968eb6741a795edbbc9928c44f7bfa2a",
        "filename": "src/policy/policy.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 4,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b1385852ef2ba45fd6926d75497646debf79e686/src/policy/policy.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b1385852ef2ba45fd6926d75497646debf79e686/src/policy/policy.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/policy.cpp?ref=b1385852ef2ba45fd6926d75497646debf79e686",
        "patch": "@@ -19,16 +19,18 @@ CAmount GetDustThreshold(const CTxOut& txout, const CFeeRate& dustRelayFeeIn)\n {\n     // \"Dust\" is defined in terms of dustRelayFee,\n     // which has units satoshis-per-kilobyte.\n-    // If you'd pay more than 1/3 in fees\n+    // If you'd pay more in fees than the value of the output\n     // to spend something, then we consider it dust.\n     // A typical spendable non-segwit txout is 34 bytes big, and will\n     // need a CTxIn of at least 148 bytes to spend:\n     // so dust is a spendable txout less than\n-    // 546*dustRelayFee/1000 (in satoshis).\n+    // 182*dustRelayFee/1000 (in satoshis).\n+    // 546 satoshis at the default rate of 3000 sat/kB.\n     // A typical spendable segwit txout is 31 bytes big, and will\n     // need a CTxIn of at least 67 bytes to spend:\n     // so dust is a spendable txout less than\n-    // 294*dustRelayFee/1000 (in satoshis).\n+    // 98*dustRelayFee/1000 (in satoshis).\n+    // 294 satoshis at the default rate of 3000 sat/kB.\n     if (txout.scriptPubKey.IsUnspendable())\n         return 0;\n \n@@ -44,7 +46,7 @@ CAmount GetDustThreshold(const CTxOut& txout, const CFeeRate& dustRelayFeeIn)\n         nSize += (32 + 4 + 1 + 107 + 4); // the 148 mentioned above\n     }\n \n-    return 3 * dustRelayFeeIn.GetFee(nSize);\n+    return dustRelayFeeIn.GetFee(nSize);\n }\n \n bool IsDust(const CTxOut& txout, const CFeeRate& dustRelayFeeIn)"
      },
      {
        "sha": "c06820f84e6d067ecf5d6fd4a869dabf79b81b68",
        "filename": "src/policy/policy.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b1385852ef2ba45fd6926d75497646debf79e686/src/policy/policy.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b1385852ef2ba45fd6926d75497646debf79e686/src/policy/policy.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/policy.h?ref=b1385852ef2ba45fd6926d75497646debf79e686",
        "patch": "@@ -40,12 +40,12 @@ static const unsigned int MAX_STANDARD_P2WSH_STACK_ITEMS = 100;\n static const unsigned int MAX_STANDARD_P2WSH_STACK_ITEM_SIZE = 80;\n /** The maximum size of a standard witnessScript */\n static const unsigned int MAX_STANDARD_P2WSH_SCRIPT_SIZE = 3600;\n-/** Min feerate for defining dust. Historically this has been the same as the\n+/** Min feerate for defining dust. Historically this has been based on the\n  * minRelayTxFee, however changing the dust limit changes which transactions are\n  * standard and should be done with care and ideally rarely. It makes sense to\n  * only increase the dust limit after prior releases were already not creating\n  * outputs below the new threshold */\n-static const unsigned int DUST_RELAY_TX_FEE = 1000;\n+static const unsigned int DUST_RELAY_TX_FEE = 3000;\n /**\n  * Standard script verification flags that standard transactions will comply\n  * with. However scripts violating these flags may still be present in valid"
      },
      {
        "sha": "6654634bf1338f1df94cfe1a52af3189ff80a9d9",
        "filename": "src/test/transaction_tests.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b1385852ef2ba45fd6926d75497646debf79e686/src/test/transaction_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b1385852ef2ba45fd6926d75497646debf79e686/src/test/transaction_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/transaction_tests.cpp?ref=b1385852ef2ba45fd6926d75497646debf79e686",
        "patch": "@@ -692,7 +692,7 @@ BOOST_AUTO_TEST_CASE(test_IsStandard)\n     BOOST_CHECK(IsStandardTx(t, reason));\n \n     // Check dust with default relay fee:\n-    CAmount nDustThreshold = 182 * dustRelayFee.GetFeePerK()/1000 * 3;\n+    CAmount nDustThreshold = 182 * dustRelayFee.GetFeePerK()/1000;\n     BOOST_CHECK_EQUAL(nDustThreshold, 546);\n     // dust:\n     t.vout[0].nValue = nDustThreshold - 1;\n@@ -702,13 +702,13 @@ BOOST_AUTO_TEST_CASE(test_IsStandard)\n     BOOST_CHECK(IsStandardTx(t, reason));\n \n     // Check dust with odd relay fee to verify rounding:\n-    // nDustThreshold = 182 * 1234 / 1000 * 3\n-    dustRelayFee = CFeeRate(1234);\n+    // nDustThreshold = 182 * 3702 / 1000\n+    dustRelayFee = CFeeRate(3702);\n     // dust:\n-    t.vout[0].nValue = 672 - 1;\n+    t.vout[0].nValue = 673 - 1;\n     BOOST_CHECK(!IsStandardTx(t, reason));\n     // not dust:\n-    t.vout[0].nValue = 672;\n+    t.vout[0].nValue = 673;\n     BOOST_CHECK(IsStandardTx(t, reason));\n     dustRelayFee = CFeeRate(DUST_RELAY_TX_FEE);\n "
      }
    ]
  },
  {
    "sha": "f4d00e63f7951469c840edede3f675d07249f62a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmNGQwMGU2M2Y3OTUxNDY5Yzg0MGVkZWRlM2Y2NzVkMDcyNDlmNjJh",
    "commit": {
      "author": {
        "name": "Alex Morcos",
        "email": "morcos@chaincode.com",
        "date": "2017-07-06T18:00:46Z"
      },
      "committer": {
        "name": "Alex Morcos",
        "email": "morcos@chaincode.com",
        "date": "2017-07-17T17:40:30Z"
      },
      "message": "Add a discard_rate\n\nAny change output which would be dust at the discard_rate you are\nwilling to discard completely and add to fee (as well as continuing to\npay the fee that would have been needed for creating the change).",
      "tree": {
        "sha": "b18d0d106aa0928780b64c0d3e23425800024537",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b18d0d106aa0928780b64c0d3e23425800024537"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f4d00e63f7951469c840edede3f675d07249f62a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f4d00e63f7951469c840edede3f675d07249f62a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f4d00e63f7951469c840edede3f675d07249f62a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f4d00e63f7951469c840edede3f675d07249f62a/comments",
    "author": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b1385852ef2ba45fd6926d75497646debf79e686",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b1385852ef2ba45fd6926d75497646debf79e686",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b1385852ef2ba45fd6926d75497646debf79e686"
      }
    ],
    "stats": {
      "total": 34,
      "additions": 32,
      "deletions": 2
    },
    "files": [
      {
        "sha": "e230ee0eb0e0d737b00e7d4999f0cffe75a2f61c",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 29,
        "deletions": 2,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f4d00e63f7951469c840edede3f675d07249f62a/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f4d00e63f7951469c840edede3f675d07249f62a/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=f4d00e63f7951469c840edede3f675d07249f62a",
        "patch": "@@ -57,6 +57,8 @@ CFeeRate CWallet::minTxFee = CFeeRate(DEFAULT_TRANSACTION_MINFEE);\n  */\n CFeeRate CWallet::fallbackFee = CFeeRate(DEFAULT_FALLBACK_FEE);\n \n+CFeeRate CWallet::m_discard_rate = CFeeRate(DEFAULT_DISCARD_FEE);\n+\n const uint256 CMerkleTx::ABANDON_HASH(uint256S(\"0000000000000000000000000000000000000000000000000000000000000001\"));\n \n /** @defgroup mapWallet\n@@ -2501,6 +2503,17 @@ bool CWallet::FundTransaction(CMutableTransaction& tx, CAmount& nFeeRet, int& nC\n     return true;\n }\n \n+static CFeeRate GetDiscardRate(const CBlockPolicyEstimator& estimator)\n+{\n+    unsigned int highest_target = estimator.HighestTargetTracked(FeeEstimateHorizon::LONG_HALFLIFE);\n+    CFeeRate discard_rate = estimator.estimateSmartFee(highest_target, nullptr /* FeeCalculation */, false /* conservative */);\n+    // Don't let discard_rate be greater than longest possible fee estimate if we get a valid fee estimate\n+    discard_rate = (discard_rate == CFeeRate(0)) ? CWallet::m_discard_rate : std::min(discard_rate, CWallet::m_discard_rate);\n+    // Discard rate must be at least dustRelayFee\n+    discard_rate = std::max(discard_rate, ::dustRelayFee);\n+    return discard_rate;\n+}\n+\n bool CWallet::CreateTransaction(const std::vector<CRecipient>& vecSend, CWalletTx& wtxNew, CReserveKey& reservekey, CAmount& nFeeRet,\n                                 int& nChangePosInOut, std::string& strFailReason, const CCoinControl& coin_control, bool sign)\n {\n@@ -2600,6 +2613,7 @@ bool CWallet::CreateTransaction(const std::vector<CRecipient>& vecSend, CWalletT\n             CTxOut change_prototype_txout(0, scriptChange);\n             size_t change_prototype_size = GetSerializeSize(change_prototype_txout, SER_DISK, 0);\n \n+            CFeeRate discard_rate = GetDiscardRate(::feeEstimator);\n             nFeeRet = 0;\n             bool pick_new_inputs = true;\n             CAmount nValueIn = 0;\n@@ -2667,7 +2681,7 @@ bool CWallet::CreateTransaction(const std::vector<CRecipient>& vecSend, CWalletT\n \n                     // Never create dust outputs; if we would, just\n                     // add the dust to the fee.\n-                    if (IsDust(newTxOut, ::dustRelayFee))\n+                    if (IsDust(newTxOut, discard_rate))\n                     {\n                         nChangePosInOut = -1;\n                         nFeeRet += nChange;\n@@ -2747,7 +2761,7 @@ bool CWallet::CreateTransaction(const std::vector<CRecipient>& vecSend, CWalletT\n                     // (because of reduced tx size) and so we should add a\n                     // change output. Only try this once.\n                     CAmount fee_needed_for_change = GetMinimumFee(change_prototype_size, coin_control, ::mempool, ::feeEstimator, nullptr);\n-                    CAmount minimum_value_for_change = GetDustThreshold(change_prototype_txout, ::dustRelayFee);\n+                    CAmount minimum_value_for_change = GetDustThreshold(change_prototype_txout, discard_rate);\n                     CAmount max_excess_fee = fee_needed_for_change + minimum_value_for_change;\n                     if (nFeeRet > nFeeNeeded + max_excess_fee && nChangePosInOut == -1 && nSubtractFeeFromAmount == 0 && pick_new_inputs) {\n                         pick_new_inputs = false;\n@@ -3788,6 +3802,9 @@ std::string CWallet::GetWalletHelpString(bool showDebug)\n     strUsage += HelpMessageOpt(\"-keypool=<n>\", strprintf(_(\"Set key pool size to <n> (default: %u)\"), DEFAULT_KEYPOOL_SIZE));\n     strUsage += HelpMessageOpt(\"-fallbackfee=<amt>\", strprintf(_(\"A fee rate (in %s/kB) that will be used when fee estimation has insufficient data (default: %s)\"),\n                                                                CURRENCY_UNIT, FormatMoney(DEFAULT_FALLBACK_FEE)));\n+    strUsage += HelpMessageOpt(\"-discardfee=<amt>\", strprintf(_(\"The fee rate (in %s/kB) used to discard change (to fee) if it would be dust at this fee rate (default: %s) \"\n+                                                                \"Note: We will always discard up to the dust relay fee and a discard fee above that is limited by the longest target fee estimate\"),\n+                                                              CURRENCY_UNIT, FormatMoney(DEFAULT_DISCARD_FEE)));\n     strUsage += HelpMessageOpt(\"-mintxfee=<amt>\", strprintf(_(\"Fees (in %s/kB) smaller than this are considered zero fee for transaction creation (default: %s)\"),\n                                                             CURRENCY_UNIT, FormatMoney(DEFAULT_TRANSACTION_MINFEE)));\n     strUsage += HelpMessageOpt(\"-paytxfee=<amt>\", strprintf(_(\"Fee (in %s/kB) to add to transactions you send (default: %s)\"),\n@@ -4113,6 +4130,16 @@ bool CWallet::ParameterInteraction()\n                         _(\"This is the transaction fee you may pay when fee estimates are not available.\"));\n         CWallet::fallbackFee = CFeeRate(nFeePerK);\n     }\n+    if (IsArgSet(\"-discardfee\"))\n+    {\n+        CAmount nFeePerK = 0;\n+        if (!ParseMoney(GetArg(\"-discardfee\", \"\"), nFeePerK))\n+            return InitError(strprintf(_(\"Invalid amount for -discardfee=<amount>: '%s'\"), GetArg(\"-discardfee\", \"\")));\n+        if (nFeePerK > HIGH_TX_FEE_PER_KB)\n+            InitWarning(AmountHighWarn(\"-discardfee\") + \" \" +\n+                        _(\"This is the transaction fee you may discard if change is smaller than dust at this level\"));\n+        CWallet::m_discard_rate = CFeeRate(nFeePerK);\n+    }\n     if (IsArgSet(\"-paytxfee\"))\n     {\n         CAmount nFeePerK = 0;"
      },
      {
        "sha": "a7fef8a8025268c8c9bbdbb6f4846c8991b99dc5",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f4d00e63f7951469c840edede3f675d07249f62a/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f4d00e63f7951469c840edede3f675d07249f62a/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=f4d00e63f7951469c840edede3f675d07249f62a",
        "patch": "@@ -45,6 +45,8 @@ static const unsigned int DEFAULT_KEYPOOL_SIZE = 100;\n static const CAmount DEFAULT_TRANSACTION_FEE = 0;\n //! -fallbackfee default\n static const CAmount DEFAULT_FALLBACK_FEE = 20000;\n+//! -m_discard_rate default\n+static const CAmount DEFAULT_DISCARD_FEE = 10000;\n //! -mintxfee default\n static const CAmount DEFAULT_TRANSACTION_MINFEE = 1000;\n //! minimum recommended increment for BIP 125 replacement txs\n@@ -965,6 +967,7 @@ class CWallet : public CCryptoKeyStore, public CValidationInterface\n \n     static CFeeRate minTxFee;\n     static CFeeRate fallbackFee;\n+    static CFeeRate m_discard_rate;\n     /**\n      * Estimate the minimum fee considering user set parameters\n      * and the required fee"
      }
    ]
  }
]