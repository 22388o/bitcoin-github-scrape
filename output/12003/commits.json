[
  {
    "sha": "bf9773f313c62b6a2b27adebfd6cd0169f3d76d1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiZjk3NzNmMzEzYzYyYjZhMmIyN2FkZWJmZDZjZDAxNjlmM2Q3NmQx",
    "commit": {
      "author": {
        "name": "xoinproject",
        "email": "xoinproject@gmail.com",
        "date": "2017-12-24T05:37:39Z"
      },
      "committer": {
        "name": "xoinproject",
        "email": "xoinproject@gmail.com",
        "date": "2017-12-24T05:37:39Z"
      },
      "message": "Revert \"doc: Fill in details about miniupnp CVE-2017-8798\"\n\nThis reverts commit 7a643511b474d53f952d3cd403af51aabd104044.",
      "tree": {
        "sha": "ea43572a7e7db837d17e02db2fb002795b60ada4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ea43572a7e7db837d17e02db2fb002795b60ada4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bf9773f313c62b6a2b27adebfd6cd0169f3d76d1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bf9773f313c62b6a2b27adebfd6cd0169f3d76d1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bf9773f313c62b6a2b27adebfd6cd0169f3d76d1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bf9773f313c62b6a2b27adebfd6cd0169f3d76d1/comments",
    "author": {
      "login": "xoinproject",
      "id": 34787953,
      "node_id": "MDQ6VXNlcjM0Nzg3OTUz",
      "avatar_url": "https://avatars.githubusercontent.com/u/34787953?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xoinproject",
      "html_url": "https://github.com/xoinproject",
      "followers_url": "https://api.github.com/users/xoinproject/followers",
      "following_url": "https://api.github.com/users/xoinproject/following{/other_user}",
      "gists_url": "https://api.github.com/users/xoinproject/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xoinproject/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xoinproject/subscriptions",
      "organizations_url": "https://api.github.com/users/xoinproject/orgs",
      "repos_url": "https://api.github.com/users/xoinproject/repos",
      "events_url": "https://api.github.com/users/xoinproject/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xoinproject/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "xoinproject",
      "id": 34787953,
      "node_id": "MDQ6VXNlcjM0Nzg3OTUz",
      "avatar_url": "https://avatars.githubusercontent.com/u/34787953?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xoinproject",
      "html_url": "https://github.com/xoinproject",
      "followers_url": "https://api.github.com/users/xoinproject/followers",
      "following_url": "https://api.github.com/users/xoinproject/following{/other_user}",
      "gists_url": "https://api.github.com/users/xoinproject/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xoinproject/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xoinproject/subscriptions",
      "organizations_url": "https://api.github.com/users/xoinproject/orgs",
      "repos_url": "https://api.github.com/users/xoinproject/repos",
      "events_url": "https://api.github.com/users/xoinproject/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xoinproject/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b9ca77863bb3a814759c0a908f494394d085718b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b9ca77863bb3a814759c0a908f494394d085718b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b9ca77863bb3a814759c0a908f494394d085718b"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 3,
      "deletions": 13
    },
    "files": [
      {
        "sha": "1fd935044c2383651be18c22abf4ed408f94924e",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 3,
        "deletions": 13,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bf9773f313c62b6a2b27adebfd6cd0169f3d76d1/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bf9773f313c62b6a2b27adebfd6cd0169f3d76d1/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=bf9773f313c62b6a2b27adebfd6cd0169f3d76d1",
        "patch": "@@ -82,17 +82,7 @@ Low-level RPC changes\n miniupnp CVE-2017-8798\n ----------------------------\n \n-Bundled miniupnpc was updated to 2.0.20170509. This fixes an integer signedness error\n-(present in MiniUPnPc v1.4.20101221 through v2.0) that allows remote attackers\n-(within the LAN) to cause a denial of service or possibly have unspecified\n-other impact.\n-\n-This only affects users that have explicitly enabled UPnP through the GUI\n-setting or through the `-upnp` option, as since the last UPnP vulnerability\n-(in Bitcoin Core 0.10.3) it has been disabled by default.\n-\n-If you use this option, it is recommended to upgrade to this version as soon as\n-possible.\n+[todo]\n \n Known Bugs\n ==========\n@@ -116,10 +106,10 @@ git merge commit are mentioned.\n \n ### P2P protocol and network code\n - #10424 `37a8fc5` Populate services in GetLocalAddress (morcos)\n-- #10441 `9e3ad50` Only enforce expected services for half of outgoing connections (theuni)\n+- #10441 `9e3ad50` net: only enforce expected services for half of outgoing connections (theuni)\n \n ### Build system\n-- #10414 `ffb0c4b` miniupnpc 2.0.20170509 (fanquake)\n+- #10414 `ffb0c4b` [depends] miniupnpc 2.0.20170509 (fanquake)\n - #10228 `ae479bc` Regenerate bitcoin-config.h as necessary (theuni)\n \n ### Miscellaneous"
      }
    ]
  },
  {
    "sha": "e2ac4af5b66bebbf0f736210b6497367c95c2324",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplMmFjNGFmNWI2NmJlYmJmMGY3MzYyMTBiNjQ5NzM2N2M5NWMyMzI0",
    "commit": {
      "author": {
        "name": "xoinproject",
        "email": "xoinproject@gmail.com",
        "date": "2017-12-24T06:31:12Z"
      },
      "committer": {
        "name": "xoinproject",
        "email": "xoinproject@gmail.com",
        "date": "2017-12-24T06:31:12Z"
      },
      "message": "Blockcash : Branding",
      "tree": {
        "sha": "9862e81e6628448beddcccaab1e9da8fef19546d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9862e81e6628448beddcccaab1e9da8fef19546d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e2ac4af5b66bebbf0f736210b6497367c95c2324",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e2ac4af5b66bebbf0f736210b6497367c95c2324",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e2ac4af5b66bebbf0f736210b6497367c95c2324",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e2ac4af5b66bebbf0f736210b6497367c95c2324/comments",
    "author": {
      "login": "xoinproject",
      "id": 34787953,
      "node_id": "MDQ6VXNlcjM0Nzg3OTUz",
      "avatar_url": "https://avatars.githubusercontent.com/u/34787953?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xoinproject",
      "html_url": "https://github.com/xoinproject",
      "followers_url": "https://api.github.com/users/xoinproject/followers",
      "following_url": "https://api.github.com/users/xoinproject/following{/other_user}",
      "gists_url": "https://api.github.com/users/xoinproject/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xoinproject/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xoinproject/subscriptions",
      "organizations_url": "https://api.github.com/users/xoinproject/orgs",
      "repos_url": "https://api.github.com/users/xoinproject/repos",
      "events_url": "https://api.github.com/users/xoinproject/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xoinproject/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "xoinproject",
      "id": 34787953,
      "node_id": "MDQ6VXNlcjM0Nzg3OTUz",
      "avatar_url": "https://avatars.githubusercontent.com/u/34787953?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xoinproject",
      "html_url": "https://github.com/xoinproject",
      "followers_url": "https://api.github.com/users/xoinproject/followers",
      "following_url": "https://api.github.com/users/xoinproject/following{/other_user}",
      "gists_url": "https://api.github.com/users/xoinproject/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xoinproject/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xoinproject/subscriptions",
      "organizations_url": "https://api.github.com/users/xoinproject/orgs",
      "repos_url": "https://api.github.com/users/xoinproject/repos",
      "events_url": "https://api.github.com/users/xoinproject/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xoinproject/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bf9773f313c62b6a2b27adebfd6cd0169f3d76d1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bf9773f313c62b6a2b27adebfd6cd0169f3d76d1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bf9773f313c62b6a2b27adebfd6cd0169f3d76d1"
      }
    ],
    "stats": {
      "total": 3032,
      "additions": 1088,
      "deletions": 1944
    },
    "files": [
      {
        "sha": "8075184606669645f957639c2d324c1b8821ac60",
        "filename": ".github/ISSUE_TEMPLATE.md",
        "status": "modified",
        "additions": 3,
        "deletions": 5,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/.github/ISSUE_TEMPLATE.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/.github/ISSUE_TEMPLATE.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.github/ISSUE_TEMPLATE.md?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -1,10 +1,8 @@\n <!--- Remove sections that do not apply -->\n \n-This issue tracker is only for technical issues related to bitcoin-core.\n+This issue tracker is only for technical issues related to blockcash-core.\n \n-General bitcoin questions and/or support requests and are best directed to the [Bitcoin StackExchange](https://bitcoin.stackexchange.com).\n-\n-For reporting security issues, please read instructions at [https://bitcoincore.org/en/contact/](https://bitcoincore.org/en/contact/).\n++For reporting security issues, please contact the Blockcash developers on the #Blockcash-dev Freenode IRC channel or alternatively you can email us at blockcashcoin@gmail.com\n \n ### Describe the issue\n \n@@ -23,7 +21,7 @@ Tell us what happens instead\n ### Screenshots.\n If the issue is related to the GUI, screenshots can be added to this issue via drag & drop.\n \n-### What version of bitcoin-core are you using?\n+### What version of blockcash-core are you using?\n List the version number/commit ID, and if it is an official binary, self compiled or a distribution package such as PPA.\n \n ### Machine specs:"
      },
      {
        "sha": "7a7d6ec72b6521565717687632d9d569e839f3d0",
        "filename": ".gitignore",
        "status": "modified",
        "additions": 10,
        "deletions": 10,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.gitignore?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -1,13 +1,13 @@\n *.tar.gz\n \n *.exe\n-src/bitcoin\n-src/bitcoind\n-src/bitcoin-cli\n-src/bitcoin-tx\n-src/test/test_bitcoin\n-src/test/test_bitcoin_fuzzy\n-src/qt/test/test_bitcoin-qt\n+src/blockcash\n+src/blockcashd\n+src/blockcash-cli\n+src/blockcash-tx\n+src/test/blockcash\n+src/test/test_blockcash_fuzzy\n+src/qt/test/test_blockcash-qt\n \n # autoreconf\n Makefile.in\n@@ -74,8 +74,8 @@ src/qt/test/moc*.cpp\n # Compilation and Qt preprocessor part\n *.qm\n Makefile\n-bitcoin-qt\n-Bitcoin-Qt.app\n+blockcash-qt\n+Blockcash-Qt.app\n \n # Unit-tests\n Makefile.test\n@@ -93,7 +93,7 @@ build\n *.gcno\n *.gcda\n /*.info\n-test_bitcoin.coverage/\n+test_blockcash.coverage/\n total.coverage/\n coverage_percent.txt\n "
      },
      {
        "sha": "66590590c5e6af6652bcf94ce1e8f1df50e296ed",
        "filename": ".travis.yml",
        "status": "modified",
        "additions": 11,
        "deletions": 10,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/.travis.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/.travis.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis.yml?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -20,30 +20,31 @@ env:\n     - SDK_URL=https://bitcoincore.org/depends-sources/sdks\n     - PYTHON_DEBUG=1\n     - WINEDEBUG=fixme-all\n+    - BLOCKCASH_SCRYPT=0\n   matrix:\n # ARM\n     - HOST=arm-linux-gnueabihf PACKAGES=\"g++-arm-linux-gnueabihf\" DEP_OPTS=\"NO_QT=1\" CHECK_DOC=1 GOAL=\"install\" BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports\"\n # Win32\n-    - HOST=i686-w64-mingw32 DPKG_ADD_ARCH=\"i386\" DEP_OPTS=\"NO_QT=1\" PACKAGES=\"python3 nsis g++-mingw-w64-i686 wine1.6 bc\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-reduce-exports\"\n+    - HOST=i686-w64-mingw32 DPKG_ADD_ARCH=\"i386\" DEP_OPTS=\"NO_QT=1\" PACKAGES=\"python3 nsis g++-mingw-w64-i686 wine1.6 bc\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-reduce-exports\" BLOCKCASH_SCRYPT=1\n # 32-bit + dash\n-    - HOST=i686-pc-linux-gnu PACKAGES=\"g++-multilib bc python3-zmq\" DEP_OPTS=\"NO_QT=1\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-zmq --enable-glibc-back-compat --enable-reduce-exports LDFLAGS=-static-libstdc++\" USE_SHELL=\"/bin/dash\"\n+    - HOST=i686-pc-linux-gnu PACKAGES=\"g++-multilib bc python3-zmq\" DEP_OPTS=\"NO_QT=1\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-zmq --enable-glibc-back-compat --enable-reduce-exports LDFLAGS=-static-libstdc++\" USE_SHELL=\"/bin/dash\" BLOCKCASH_SCRYPT=1\n # Win64\n-    - HOST=x86_64-w64-mingw32 DPKG_ADD_ARCH=\"i386\" DEP_OPTS=\"NO_QT=1\" PACKAGES=\"python3 nsis g++-mingw-w64-x86-64 wine1.6 bc\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-reduce-exports\"\n+    - HOST=x86_64-w64-mingw32 DPKG_ADD_ARCH=\"i386\" DEP_OPTS=\"NO_QT=1\" PACKAGES=\"python3 nsis g++-mingw-w64-x86-64 wine1.6 bc\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-reduce-exports\" BLOCKCASH_SCRYPT=1\n # bitcoind\n-    - HOST=x86_64-unknown-linux-gnu PACKAGES=\"bc python3-zmq\" DEP_OPTS=\"NO_QT=1 NO_UPNP=1 DEBUG=1\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-zmq --enable-glibc-back-compat --enable-reduce-exports CPPFLAGS=-DDEBUG_LOCKORDER\"\n+    - HOST=x86_64-unknown-linux-gnu PACKAGES=\"bc python3-zmq\" DEP_OPTS=\"NO_QT=1 NO_UPNP=1 DEBUG=1\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-zmq --enable-glibc-back-compat --enable-reduce-exports CPPFLAGS=-DDEBUG_LOCKORDER\" BLOCKCASH_SCRYPT=1\n # No wallet\n-    - HOST=x86_64-unknown-linux-gnu PACKAGES=\"python3\" DEP_OPTS=\"NO_WALLET=1\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports\"\n+    - HOST=x86_64-unknown-linux-gnu PACKAGES=\"python3\" DEP_OPTS=\"NO_WALLET=1\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports\" BLOCKCASH_SCRYPT=1\n # Cross-Mac\n     - HOST=x86_64-apple-darwin11 PACKAGES=\"cmake imagemagick libcap-dev librsvg2-bin libz-dev libbz2-dev libtiff-tools python-dev\" BITCOIN_CONFIG=\"--enable-gui --enable-reduce-exports\" OSX_SDK=10.11 GOAL=\"deploy\"\n \n before_install:\n     - export PATH=$(echo $PATH | tr ':' \"\\n\" | sed '/\\/opt\\/python/d' | tr \"\\n\" \":\" | sed \"s|::|:|g\")\n-    - export PATH=$(echo $PATH | tr ':' \"\\n\" | sed '/\\/opt\\/pyenv/d' | tr \"\\n\" \":\" | sed \"s|::|:|g\")\n install:\n     - if [ -n \"$PPA\" ]; then travis_retry sudo add-apt-repository \"$PPA\" -y; fi\n     - if [ -n \"$DPKG_ADD_ARCH\" ]; then sudo dpkg --add-architecture \"$DPKG_ADD_ARCH\" ; fi\n     - if [ -n \"$PACKAGES\" ]; then travis_retry sudo apt-get update; fi\n     - if [ -n \"$PACKAGES\" ]; then travis_retry sudo apt-get install --no-install-recommends --no-upgrade -qq $PACKAGES; fi\n+    - if [ \"$BLOCKCASH_SCRYPT\" = 1 ]; then travis_retry sudo pip3 install blockcash_scrypt; fi\n before_script:\n     - unset CC; unset CXX\n     - if [ \"$CHECK_DOC\" = 1 ]; then contrib/devtools/check-doc.py; fi\n@@ -52,9 +53,9 @@ before_script:\n     - if [ -n \"$OSX_SDK\" -a -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then tar -C depends/SDKs -xf depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz; fi\n     - make $MAKEJOBS -C depends HOST=$HOST $DEP_OPTS\n script:\n-    - if [ \"$RUN_TESTS\" = \"true\" -a \"$TRAVIS_REPO_SLUG\" = \"bitcoin/bitcoin\" -a \"$TRAVIS_PULL_REQUEST\" = \"false\" ]; then while read LINE; do travis_retry gpg --keyserver hkp://pool.sks-keyservers.net --recv-keys $LINE; done < contrib/verify-commits/trusted-keys; fi\n-    - if [ \"$RUN_TESTS\" = \"true\" -a \"$TRAVIS_REPO_SLUG\" = \"bitcoin/bitcoin\" -a \"$TRAVIS_PULL_REQUEST\" = \"false\" ]; then git fetch --unshallow; fi\n-    - if [ \"$RUN_TESTS\" = \"true\" -a \"$TRAVIS_REPO_SLUG\" = \"bitcoin/bitcoin\" -a \"$TRAVIS_PULL_REQUEST\" = \"false\" ]; then contrib/verify-commits/verify-commits.sh; fi\n+#    - if [ \"$RUN_TESTS\" = \"true\" -a \"$TRAVIS_REPO_SLUG\" = \"blockcash/blockcash\" -a \"$TRAVIS_PULL_REQUEST\" = \"false\" ]; then while read LINE; do travis_retry gpg --keyserver hkp://pool.sks-keyservers.net --recv-keys $LINE; done < contrib/verify-commits/trusted-keys; fi\n+#    - if [ \"$RUN_TESTS\" = \"true\" -a \"$TRAVIS_REPO_SLUG\" = \"blockcash/blockcash\" -a \"$TRAVIS_PULL_REQUEST\" = \"false\" ]; then git fetch --unshallow; fi\n+#    - if [ \"$RUN_TESTS\" = \"true\" -a \"$TRAVIS_REPO_SLUG\" = \"blockcash/blockcash\" -a \"$TRAVIS_PULL_REQUEST\" = \"false\" ]; then contrib/verify-commits/verify-commits.sh; fi\n     - export TRAVIS_COMMIT_LOG=`git log --format=fuller -1`\n     - if [ -n \"$USE_SHELL\" ]; then export CONFIG_SHELL=\"$USE_SHELL\"; fi\n     - OUTDIR=$BASE_OUTDIR/$TRAVIS_PULL_REQUEST/$TRAVIS_JOB_NUMBER-$HOST\n@@ -72,4 +73,4 @@ script:\n     - if [ \"$RUN_TESTS\" = \"true\" ]; then qa/pull-tester/rpc-tests.py --coverage; fi\n after_script:\n     - echo $TRAVIS_COMMIT_RANGE\n-    - echo $TRAVIS_COMMIT_LOG\n+    - echo $TRAVIS_COMMIT_LOG\n\\ No newline at end of file"
      },
      {
        "sha": "d22d07ee0ff74155e611557a144f3edc689c1158",
        "filename": "Makefile.am",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/Makefile.am?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -25,7 +25,7 @@ BITCOIN_WIN_INSTALLER=$(PACKAGE)-$(PACKAGE_VERSION)-win$(WINDOWS_BITS)-setup$(EX\n empty :=\n space := $(empty) $(empty)\n \n-OSX_APP=Bitcoin-Qt.app\n+OSX_APP=Blockcash-Qt.app\n OSX_VOLNAME = $(subst $(space),-,$(PACKAGE_NAME))\n OSX_DMG = $(OSX_VOLNAME).dmg\n OSX_BACKGROUND_SVG=background.svg\n@@ -92,7 +92,7 @@ $(OSX_APP)/Contents/Resources/bitcoin.icns: $(OSX_INSTALLER_ICONS)\n \t$(MKDIR_P) $(@D)\n \t$(INSTALL_DATA) $< $@\n \n-$(OSX_APP)/Contents/MacOS/Bitcoin-Qt: $(BITCOIN_QT_BIN)\n+$(OSX_APP)/Contents/MacOS/Blockcash-Qt: $(BITCOIN_QT_BIN)\n \t$(MKDIR_P) $(@D)\n \tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM)  $< $@\n \n@@ -102,7 +102,7 @@ $(OSX_APP)/Contents/Resources/Base.lproj/InfoPlist.strings:\n \n OSX_APP_BUILT=$(OSX_APP)/Contents/PkgInfo $(OSX_APP)/Contents/Resources/empty.lproj \\\n   $(OSX_APP)/Contents/Resources/bitcoin.icns $(OSX_APP)/Contents/Info.plist \\\n-  $(OSX_APP)/Contents/MacOS/Bitcoin-Qt $(OSX_APP)/Contents/Resources/Base.lproj/InfoPlist.strings\n+  $(OSX_APP)/Contents/MacOS/Blockcash-Qt $(OSX_APP)/Contents/Resources/Base.lproj/InfoPlist.strings\n \n osx_volname:\n \techo $(OSX_VOLNAME) >$@\n@@ -127,7 +127,7 @@ $(APP_DIST_DIR)/Applications:\n \t@rm -f $@\n \t@cd $(@D); $(LN_S) /Applications $(@F)\n \n-$(APP_DIST_EXTRAS): $(APP_DIST_DIR)/$(OSX_APP)/Contents/MacOS/Bitcoin-Qt\n+$(APP_DIST_EXTRAS): $(APP_DIST_DIR)/$(OSX_APP)/Contents/MacOS/Blockcash-Qt\n \n $(OSX_DMG): $(APP_DIST_EXTRAS)\n \t$(GENISOIMAGE) -no-cache-inodes -D -l -probe -V \"$(OSX_VOLNAME)\" -no-pad -r -dir-mode 0755 -apple -o $@ dist\n@@ -142,7 +142,7 @@ $(APP_DIST_DIR)/.background/$(OSX_BACKGROUND_IMAGE): $(OSX_BACKGROUND_IMAGE_DPIF\n $(APP_DIST_DIR)/.DS_Store: $(OSX_DSSTORE_GEN)\n \t$(PYTHON) $< \"$@\" \"$(OSX_VOLNAME)\"\n \n-$(APP_DIST_DIR)/$(OSX_APP)/Contents/MacOS/Bitcoin-Qt: $(OSX_APP_BUILT) $(OSX_PACKAGING)\n+$(APP_DIST_DIR)/$(OSX_APP)/Contents/MacOS/Blockcash-Qt: $(OSX_APP_BUILT) $(OSX_PACKAGING)\n \tINSTALLNAMETOOL=$(INSTALLNAMETOOL)  OTOOL=$(OTOOL) STRIP=$(STRIP) $(PYTHON) $(OSX_DEPLOY_SCRIPT) $(OSX_APP) -translations-dir=$(QT_TRANSLATION_DIR) -add-qt-tr $(OSX_QT_TRANSLATIONS) -verbose 2\n \n deploydir: $(APP_DIST_EXTRAS)"
      },
      {
        "sha": "a869ab7fd533eb516a4a319d3457218afee3c815",
        "filename": "README.md",
        "status": "modified",
        "additions": 17,
        "deletions": 17,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/README.md?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -1,43 +1,43 @@\n-Bitcoin Core integration/staging tree\n+Blockcash Core integration/staging tree\n =====================================\n \n-[![Build Status](https://travis-ci.org/bitcoin/bitcoin.svg?branch=master)](https://travis-ci.org/bitcoin/bitcoin)\n+[![Build Status](https://travis-ci.org/blockcash/blockcash.svg?branch=master)](https://travis-ci.org/blockcash/blockcash)\n \n-https://bitcoincore.org\n \n-What is Bitcoin?\n+\n+What is Blockcash?\n ----------------\n \n-Bitcoin is an experimental digital currency that enables instant payments to\n-anyone, anywhere in the world. Bitcoin uses peer-to-peer technology to operate\n+Blockcash is an experimental digital currency that enables instant payments to\n+anyone, anywhere in the world. Blockcash uses peer-to-peer technology to operate\n with no central authority: managing transactions and issuing money are carried\n-out collectively by the network. Bitcoin Core is the name of open source\n+out collectively by the network. Blockcash Core is the name of open source\n software which enables the use of this currency.\n \n For more information, as well as an immediately useable, binary version of\n-the Bitcoin Core software, see https://bitcoin.org/en/download, or read the\n-[original whitepaper](https://bitcoincore.org/bitcoin.pdf).\n+the Blockcash Core software, see https://Blockcash.org/en/download, or read the\n+[original whitepaper](https://Blockcashcore.org/Blockcash.pdf).\n \n License\n -------\n \n-Bitcoin Core is released under the terms of the MIT license. See [COPYING](COPYING) for more\n+Blockcash Core is released under the terms of the MIT license. See [COPYING](COPYING) for more\n information or see https://opensource.org/licenses/MIT.\n \n Development Process\n -------------------\n \n The `master` branch is regularly built and tested, but is not guaranteed to be\n-completely stable. [Tags](https://github.com/bitcoin/bitcoin/tags) are created\n-regularly to indicate new official, stable release versions of Bitcoin Core.\n+completely stable. [Tags](https://github.com/Blockcash/Blockcash/tags) are created\n+regularly to indicate new official, stable release versions of Blockcash Core.\n \n The contribution workflow is described in [CONTRIBUTING.md](CONTRIBUTING.md).\n \n-The developer [mailing list](https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev)\n+The developer [mailing list](https://lists.linuxfoundation.org/mailman/listinfo/Blockcash-dev)\n should be used to discuss complicated or controversial changes before working\n on a patch set.\n \n-Developer IRC can be found on Freenode at #bitcoin-core-dev.\n+Developer IRC can be found on Freenode at #Blockcash-core-dev.\n \n Testing\n -------\n@@ -70,13 +70,13 @@ not straightforward.\n Translations\n ------------\n \n-Changes to translations as well as new translations can be submitted to\n-[Bitcoin Core's Transifex page](https://www.transifex.com/projects/p/bitcoin/).\n+CWe only accept translation fixes that are submitted through [Bitcoin Core's Transifex page](https://www.transifex.com/projects/p/bitcoin/).\n+ [Bitcoin Core's Transifex page](https://www.transifex.com/projects/p/bitcoin/).\t\t \n+ Translations are converted to Blockcash periodically.\n \n Translations are periodically pulled from Transifex and merged into the git repository. See the\n [translation process](doc/translation_process.md) for details on how this works.\n \n **Important**: We do not accept translation changes as GitHub pull requests because the next\n pull from Transifex would automatically overwrite them again.\n \n-Translators should also subscribe to the [mailing list](https://groups.google.com/forum/#!forum/bitcoin-translators)."
      },
      {
        "sha": "d11207ae24fb62c221eb767cc7cf814bca884f74",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 10,
        "deletions": 10,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -7,17 +7,17 @@ define(_CLIENT_VERSION_BUILD, 0)\n define(_CLIENT_VERSION_IS_RELEASE, true)\n define(_COPYRIGHT_YEAR, 2017)\n define(_COPYRIGHT_HOLDERS,[The %s developers])\n-define(_COPYRIGHT_HOLDERS_SUBSTITUTION,[[Bitcoin Core]])\n-AC_INIT([Bitcoin Core],[_CLIENT_VERSION_MAJOR._CLIENT_VERSION_MINOR._CLIENT_VERSION_REVISION],[https://github.com/bitcoin/bitcoin/issues],[bitcoin],[https://bitcoincore.org/])\n+define(_COPYRIGHT_HOLDERS_SUBSTITUTION,[[Blockcash Core]])\n+AC_INIT([Blockcash Core],[_CLIENT_VERSION_MAJOR._CLIENT_VERSION_MINOR._CLIENT_VERSION_REVISION],[https://github.com/blockcash/blockcash/issues],[blockcash],[https://blockcashcore.org/])\n AC_CONFIG_SRCDIR([src/validation.cpp])\n AC_CONFIG_HEADERS([src/config/bitcoin-config.h])\n AC_CONFIG_AUX_DIR([build-aux])\n AC_CONFIG_MACRO_DIR([build-aux/m4])\n \n-BITCOIN_DAEMON_NAME=bitcoind\n-BITCOIN_GUI_NAME=bitcoin-qt\n-BITCOIN_CLI_NAME=bitcoin-cli\n-BITCOIN_TX_NAME=bitcoin-tx\n+BITCOIN_DAEMON_NAME=blockcashd\n+BITCOIN_GUI_NAME=blockcash-qt\n+BITCOIN_CLI_NAME=blockcash-cli\n+BITCOIN_TX_NAME=blockcash-tx\n \n AC_CANONICAL_HOST\n \n@@ -916,11 +916,11 @@ AC_SUBST(UNIVALUE_LIBS)\n \n BITCOIN_QT_PATH_PROGS([PROTOC], [protoc],$protoc_bin_path)\n \n-AC_MSG_CHECKING([whether to build bitcoind])\n+AC_MSG_CHECKING([whether to build blockcashd])\n AM_CONDITIONAL([BUILD_BITCOIND], [test x$build_bitcoind = xyes])\n AC_MSG_RESULT($build_bitcoind)\n \n-AC_MSG_CHECKING([whether to build utils (bitcoin-cli bitcoin-tx)])\n+AC_MSG_CHECKING([whether to build utils (blockcash-cli blockcash-tx)])\n AM_CONDITIONAL([BUILD_BITCOIN_UTILS], [test x$build_bitcoin_utils = xyes])\n AC_MSG_RESULT($build_bitcoin_utils)\n \n@@ -1021,7 +1021,7 @@ if test x$bitcoin_enable_qt != xno; then\n     AC_MSG_WARN(\"xgettext is required to update qt translations\")\n   fi\n \n-  AC_MSG_CHECKING([whether to build test_bitcoin-qt])\n+  AC_MSG_CHECKING([whether to build test_blockcash-qt])\n   if test x$use_gui_tests$bitcoin_enable_qt_test = xyesyes; then\n     AC_MSG_RESULT([yes])\n     BUILD_TEST_QT=\"yes\"\n@@ -1032,7 +1032,7 @@ fi\n \n AM_CONDITIONAL([ENABLE_ZMQ], [test \"x$use_zmq\" = \"xyes\"])\n \n-AC_MSG_CHECKING([whether to build test_bitcoin])\n+AC_MSG_CHECKING([whether to build test_blockcash])\n if test x$use_tests = xyes; then\n   AC_MSG_RESULT([yes])\n   BUILD_TEST=\"yes\""
      },
      {
        "sha": "5f07cc82f50a754f871a7abe4d3d157e36c1f9a2",
        "filename": "contrib/README.md",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/contrib/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/contrib/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/README.md?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -13,7 +13,7 @@ Construct a linear, no-fork, best version of the blockchain.\n \n ### [Qos](/contrib/qos) ###\n \n-A Linux bash script that will set up traffic control (tc) to limit the outgoing bandwidth for connections to the Bitcoin network. This means one can have an always-on bitcoind instance running, and another local bitcoind/bitcoin-qt instance which connects to this node and receives blocks from it.\n+A Linux bash script that will set up traffic control (tc) to limit the outgoing bandwidth for connections to the Bitcoin network. This means one can have an always-on blockcashd instance running, and another local blockcashd/blockcash-qt instance which connects to this node and receives blocks from it.\n \n ### [Seeds](/contrib/seeds) ###\n Utility to generate the pnSeed[] array that is compiled into the client.\n@@ -22,20 +22,20 @@ Build Tools and Keys\n ---------------------\n \n ### [Debian](/contrib/debian) ###\n-Contains files used to package bitcoind/bitcoin-qt\n-for Debian-based Linux systems. If you compile bitcoind/bitcoin-qt yourself, there are some useful files here.\n+Contains files used to package blockcashd/blockcash-qt\n+for Debian-based Linux systems. If you compile blockcashd/blockcash-qt yourself, there are some useful files here.\n \n ### [Gitian-descriptors](/contrib/gitian-descriptors) ###\n Notes on getting Gitian builds up and running using KVM.\n \n ### [Gitian-keys](/contrib/gitian-keys)\n-PGP keys used for signing Bitcoin Core [Gitian release](/doc/release-process.md) results.\n+PGP keys used for signing Blockcash Core [Gitian release](/doc/release-process.md) results.\n \n ### [MacDeploy](/contrib/macdeploy) ###\n Scripts and notes for Mac builds. \n \n ### [RPM](/contrib/rpm) ###\n-RPM spec file for building bitcoin-core on RPM based distributions\n+RPM spec file for building blockcash-core on RPM based distributions\n \n ### [Gitian-build](/contrib/gitian-build.sh) ###\n Script for running full Gitian builds.\n@@ -44,7 +44,7 @@ Test and Verify Tools\n ---------------------\n \n ### [TestGen](/contrib/testgen) ###\n-Utilities to generate test vectors for the data-driven Bitcoin tests.\n+Utilities to generate test vectors for the data-driven Blockcash tests.\n \n ### [Verify Binaries](/contrib/verifybinaries) ###\n-This script attempts to download and verify the signature file SHA256SUMS.asc from bitcoin.org.\n+This script attempts to download and verify the signature file SHA256SUMS.asc from blockcash.org."
      },
      {
        "sha": "09b45baf679168d15f38ad9d122a7a88846ddf7f",
        "filename": "contrib/devtools/gen-manpages.sh",
        "status": "modified",
        "additions": 10,
        "deletions": 10,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/contrib/devtools/gen-manpages.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/contrib/devtools/gen-manpages.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/gen-manpages.sh?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -4,23 +4,23 @@ TOPDIR=${TOPDIR:-$(git rev-parse --show-toplevel)}\n SRCDIR=${SRCDIR:-$TOPDIR/src}\n MANDIR=${MANDIR:-$TOPDIR/doc/man}\n \n-BITCOIND=${BITCOIND:-$SRCDIR/bitcoind}\n-BITCOINCLI=${BITCOINCLI:-$SRCDIR/bitcoin-cli}\n-BITCOINTX=${BITCOINTX:-$SRCDIR/bitcoin-tx}\n-BITCOINQT=${BITCOINQT:-$SRCDIR/qt/bitcoin-qt}\n+BITCOIND=${BITCOIND:-$SRCDIR/blockcashd}\n+BITCOINCLI=${BITCOINCLI:-$SRCDIR/blockcash-cli}\n+BITCOINTX=${BITCOINTX:-$SRCDIR/blockcash-tx}\n+BITCOINQT=${BITCOINQT:-$SRCDIR/qt/blockcash-qt}\n \n-[ ! -x $BITCOIND ] && echo \"$BITCOIND not found or not executable.\" && exit 1\n+[ ! -x $BLOCKCASHD ] && echo \"$BLOCKCASHD not found or not executable.\" && exit 1\n \n # The autodetected version git tag can screw up manpage output a little bit\n-BTCVER=($($BITCOINCLI --version | head -n1 | awk -F'[ -]' '{ print $6, $7 }'))\n+BTCVER=($($BLOCKCASHCLI --version | head -n1 | awk -F'[ -]' '{ print $6, $7 }'))\n \n # Create a footer file with copyright content.\n-# This gets autodetected fine for bitcoind if --version-string is not set,\n-# but has different outcomes for bitcoin-qt and bitcoin-cli.\n+# This gets autodetected fine for blockcashd if --version-string is not set,\n+# but has different outcomes for blockcash-qt and blockcash-cli.\n echo \"[COPYRIGHT]\" > footer.h2m\n-$BITCOIND --version | sed -n '1!p' >> footer.h2m\n+$BLOCKCASHD --version | sed -n '1!p' >> footer.h2m\n \n-for cmd in $BITCOIND $BITCOINCLI $BITCOINTX $BITCOINQT; do\n+for cmd in $BLOCKCASHD $BLOCKCASHCLI $BLOCKCASHTX $BLOCKCASHDQT; do\n   cmdname=\"${cmd##*/}\"\n   help2man -N --version-string=${BTCVER[0]} --include=footer.h2m -o ${MANDIR}/${cmdname}.1 ${cmd}\n   sed -i \"s/\\\\\\-${BTCVER[1]}//g\" ${MANDIR}/${cmdname}.1"
      },
      {
        "sha": "cc7f2814427c04994c35b3ac4574303589a01d46",
        "filename": "contrib/linearize/README.md",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/contrib/linearize/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/contrib/linearize/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/README.md?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -1,5 +1,5 @@\n # Linearize\n-Construct a linear, no-fork, best version of the Bitcoin blockchain. The scripts\n+Construct a linear, no-fork, best version of the Blockcash blockchain. The scripts\n run using Python 3 but are compatible with Python 2.\n \n ## Step 1: Download hash list\n@@ -11,7 +11,7 @@ Required configuration file settings for linearize-hashes:\n \n Optional config file setting for linearize-hashes:\n * RPC: `host`  (Default: `127.0.0.1`)\n-* RPC: `port`  (Default: `8332`)\n+* RPC: `port`  (Default: `29252`)\n * Blockchain: `min_height`, `max_height`\n * `rev_hash_bytes`: If true, the written block hash list will be\n byte-reversed. (In other words, the hash returned by getblockhash will have its\n@@ -20,7 +20,7 @@ standalone hash lists but safe to use with linearize-data.py, which will output\n the same data no matter which byte format is chosen.\n \n The `linearize-hashes` script requires a connection, local or remote, to a\n-JSON-RPC server. Running `bitcoind` or `bitcoin-qt -server` will be sufficient.\n+JSON-RPC server. Running `blockcashd` or `blockcash-qt -server` will be sufficient.\n \n ## Step 2: Copy local block data\n \n@@ -38,7 +38,7 @@ will be printed.\n respectively, to the current time and to the timestamp of the most recent block\n written to the script's blockchain.\n * `genesis`: The hash of the genesis block in the blockchain.\n-* `input`: bitcoind blocks/ directory containing blkNNNNN.dat\n+* `input`: blockcashd blocks/ directory containing blkNNNNN.dat\n * `hashlist`: text file containing list of block hashes created by\n linearize-hashes.py.\n * `max_out_sz`: Maximum size for files created by the `output_file` option."
      },
      {
        "sha": "1002d90229a8e6524faba29f6f926ec592e70cb0",
        "filename": "contrib/linearize/example-linearize.cfg",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/contrib/linearize/example-linearize.cfg",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/contrib/linearize/example-linearize.cfg",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/example-linearize.cfg?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -1,8 +1,8 @@\n-# bitcoind RPC settings (linearize-hashes)\n+# blockcashd RPC settings (linearize-hashes)\n rpcuser=someuser\n rpcpassword=somepassword\n host=127.0.0.1\n-port=8332\n+port=29252\n #port=18332\n \n # bootstrap.dat hashlist settings (linearize-hashes)\n@@ -11,14 +11,14 @@ max_height=313000\n # bootstrap.dat input/output settings (linearize-data)\n \n # mainnet\n-netmagic=f9beb4d9\n-genesis=000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f\n-input=/home/example/.bitcoin/blocks\n+netmagic=\n+genesis=\n+input=/home/example/.blockcash/blocks\n \n # testnet\n-#netmagic=0b110907\n-#genesis=000000000933ea01ad0ee984209779baaec3ced90fa3f408719526f8d77f4943\n-#input=/home/example/.bitcoin/testnet3/blocks\n+#netmagic=\n+#genesis=\n+#input=/home/example/.blockcash/testnet3/blocks\n \n # \"output\" option causes blockchain files to be written to the given location,\n # with \"output_file\" ignored. If not used, \"output_file\" is used instead."
      },
      {
        "sha": "cadd393c010cc0e4569bcefbaf8fc91ccf1b64aa",
        "filename": "contrib/macdeploy/README.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/contrib/macdeploy/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/contrib/macdeploy/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/README.md?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -11,5 +11,5 @@ This script should not be run manually, instead, after building as usual:\n During the process, the disk image window will pop up briefly where the fancy\n settings are applied. This is normal, please do not interfere.\n \n-When finished, it will produce `Bitcoin-Core.dmg`.\n+When finished, it will produce `Blockcash-Core.dmg`.\n "
      },
      {
        "sha": "7fde1574a7d143b8ae21e2969ec392e7bd920e8f",
        "filename": "contrib/macdeploy/custom_dsstore.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/contrib/macdeploy/custom_dsstore.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/contrib/macdeploy/custom_dsstore.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/custom_dsstore.py?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -45,16 +45,16 @@\n alias.volume.name = package_name_ns\n alias.volume.posix_path = '/Volumes/' + package_name_ns\n alias.volume.disk_image_alias.target.filename = package_name_ns + '.temp.dmg'\n-alias.volume.disk_image_alias.target.carbon_path = 'Macintosh HD:Users:\\x00bitcoinuser:\\x00Documents:\\x00bitcoin:\\x00bitcoin:\\x00' + package_name_ns + '.temp.dmg'\n-alias.volume.disk_image_alias.target.posix_path = 'Users/bitcoinuser/Documents/bitcoin/bitcoin/' + package_name_ns + '.temp.dmg'\n+alias.volume.disk_image_alias.target.carbon_path = 'Macintosh HD:Users:\\x00blockcashuser:\\x00Documents:\\x00bitcoin:\\x00bitcoin:\\x00' + package_name_ns + '.temp.dmg'\n+alias.volume.disk_image_alias.target.posix_path = 'Users/bblockcashuser/Documents/blockcash/blockcash/' + package_name_ns + '.temp.dmg'\n alias.target.carbon_path = package_name_ns + ':.background:\\x00background.tiff'\n icvp['backgroundImageAlias'] = biplist.Data(alias.to_bytes())\n ds['.']['icvp'] = icvp\n \n ds['.']['vSrn'] = ('long', 1)\n \n ds['Applications']['Iloc'] = (370, 156)\n-ds['Bitcoin-Qt.app']['Iloc'] = (128, 156)\n+ds['Blockcash-Qt.app']['Iloc'] = (128, 156)\n \n ds.flush()\n ds.close()"
      },
      {
        "sha": "b3d360d106175d007a22e45c7a71dd436171f367",
        "filename": "contrib/macdeploy/detached-sig-create.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/contrib/macdeploy/detached-sig-create.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/contrib/macdeploy/detached-sig-create.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/detached-sig-create.sh?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -6,7 +6,7 @@\n set -e\n \n ROOTDIR=dist\n-BUNDLE=\"${ROOTDIR}/Bitcoin-Qt.app\"\n+BUNDLE=\"${ROOTDIR}/Blockcash-Qt.app\"\n CODESIGN=codesign\n TEMPDIR=sign.temp\n TEMPLIST=${TEMPDIR}/signatures.txt"
      },
      {
        "sha": "26b5fc6b132ba85173acfe26993c1c20c7a62438",
        "filename": "contrib/macdeploy/fancy.plist",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/contrib/macdeploy/fancy.plist",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/contrib/macdeploy/fancy.plist",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/fancy.plist?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -22,7 +22,7 @@\n \t\t\t<integer>370</integer>\n \t\t\t<integer>156</integer>\n \t\t</array>\n-\t\t<key>Bitcoin-Qt.app</key>\n+\t\t<key>Blockcash-Qt.app</key>\n \t\t<array>\n \t\t\t<integer>128</integer>\n \t\t\t<integer>156</integer>"
      },
      {
        "sha": "7612c2b15244b927d2487058a39bb100c846fc0f",
        "filename": "contrib/macdeploy/macdeployqtplus",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/contrib/macdeploy/macdeployqtplus",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/contrib/macdeploy/macdeployqtplus",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/macdeployqtplus?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -155,7 +155,7 @@ class FrameworkInfo(object):\n class ApplicationBundleInfo(object):\n     def __init__(self, path):\n         self.path = path\n-        appName = \"Bitcoin-Qt\"\n+        appName = \"Blockcash-Qt\"\n         self.binaryPath = os.path.join(path, \"Contents\", \"MacOS\", appName)\n         if not os.path.exists(self.binaryPath):\n             raise RuntimeError(\"Could not find bundle binary for \" + path)\n@@ -604,7 +604,7 @@ else:\n \n # ------------------------------------------------\n \n-target = os.path.join(\"dist\", \"Bitcoin-Qt.app\")\n+target = os.path.join(\"dist\", \"Blockcash-Qt.app\")\n \n if verbose >= 2:\n     print(\"+ Copying source bundle +\")"
      },
      {
        "sha": "c660be977860ffe04775e7e1efe197ed6b1aee30",
        "filename": "contrib/seeds/README.md",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/contrib/seeds/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/contrib/seeds/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/README.md?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -6,9 +6,9 @@ Utility to generate the seeds.txt list that is compiled into the client\n Be sure to update `PATTERN_AGENT` in `makeseeds.py` to include the current version,\n and remove old versions as necessary.\n \n-The seeds compiled into the release are created from sipa's DNS seed data, like this:\n+The seeds compiled into the release are created from poolers's DNS seed data, like this:\n \n-    curl -s http://bitcoin.sipa.be/seeds.txt.gz | gzip -dc > seeds_main.txt\n+    curl -s http://blockcashpool/seeds.txt > seeds_main.txt\n     python3 makeseeds.py < seeds_main.txt > nodes_main.txt\n     python3 generate-seeds.py . > ../../src/chainparamsseeds.h\n "
      },
      {
        "sha": "d64cdfc7ad9d3d5593ad021268d90bf056b42d8d",
        "filename": "contrib/seeds/generate-seeds.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/contrib/seeds/generate-seeds.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/contrib/seeds/generate-seeds.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/generate-seeds.py?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -120,17 +120,17 @@ def main():\n     g.write('#ifndef BITCOIN_CHAINPARAMSSEEDS_H\\n')\n     g.write('#define BITCOIN_CHAINPARAMSSEEDS_H\\n')\n     g.write('/**\\n')\n-    g.write(' * List of fixed seed nodes for the bitcoin network\\n')\n+    g.write(' * List of fixed seed nodes for the blockcash network\\n')\n     g.write(' * AUTOGENERATED by contrib/seeds/generate-seeds.py\\n')\n     g.write(' *\\n')\n     g.write(' * Each line contains a 16-byte IPv6 address and a port.\\n')\n     g.write(' * IPv4 as well as onion addresses are wrapped inside a IPv6 address accordingly.\\n')\n     g.write(' */\\n')\n     with open(os.path.join(indir,'nodes_main.txt'),'r') as f:\n-        process_nodes(g, f, 'pnSeed6_main', 8333)\n+        process_nodes(g, f, 'pnSeed6_main', :29252)\n     g.write('\\n')\n     with open(os.path.join(indir,'nodes_test.txt'),'r') as f:\n-        process_nodes(g, f, 'pnSeed6_test', 18333)\n+        process_nodes(g, f, 'pnSeed6_test', :39252)\n     g.write('#endif // BITCOIN_CHAINPARAMSSEEDS_H\\n')\n             \n if __name__ == '__main__':"
      },
      {
        "sha": "94eab44f695167677a62a557679686651ebfc42f",
        "filename": "contrib/seeds/makeseeds.py",
        "status": "modified",
        "additions": 3,
        "deletions": 5,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/contrib/seeds/makeseeds.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/contrib/seeds/makeseeds.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/makeseeds.py?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -15,11 +15,9 @@\n # These are hosts that have been observed to be behaving strangely (e.g.\n # aggressively connecting to every node).\n SUSPICIOUS_HOSTS = {\n-    \"130.211.129.106\", \"178.63.107.226\",\n-    \"83.81.130.26\", \"88.198.17.7\", \"148.251.238.178\", \"176.9.46.6\",\n-    \"54.173.72.127\", \"54.174.10.182\", \"54.183.64.54\", \"54.194.231.211\",\n-    \"54.66.214.167\", \"54.66.220.137\", \"54.67.33.14\", \"54.77.251.214\",\n-    \"54.94.195.96\", \"54.94.200.247\"\n+    \"31.220.60.129\", \"195.110.59.120\",\n+\t\"node.walletbuilders.com\", \"195.110.59.120\", \"88.198.17.7\"\n+    \n }\n \n import re"
      },
      {
        "sha": "38c0736d1629b82c02cf3fa4739863183d497dbf",
        "filename": "contrib/seeds/nodes_main.txt",
        "status": "modified",
        "additions": 6,
        "deletions": 1168,
        "changes": 1174,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/contrib/seeds/nodes_main.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/contrib/seeds/nodes_main.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/nodes_main.txt?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -1,1168 +1,6 @@\n-2.7.8.12:8333\n-2.228.70.198:8333\n-5.39.64.7:8333\n-5.45.80.34:38333\n-5.51.160.38:8333\n-5.61.33.33:8333\n-5.61.37.12:8333\n-5.95.80.47:8333\n-5.102.164.173:8333\n-5.175.71.130:8333\n-5.189.165.22:8333\n-5.199.130.228:8333\n-5.228.100.222:8333\n-5.255.64.231:8333\n-13.93.6.133:8333\n-18.85.34.10:8333\n-18.241.0.63:8333\n-23.28.128.65:8333\n-23.248.113.52:8333\n-23.253.151.73:8333\n-24.4.96.121:8333\n-24.69.65.191:8333\n-24.87.8.43:8333\n-24.150.224.110:8333\n-24.227.69.146:8333\n-27.0.235.33:8333\n-31.170.106.203:8333\n-31.184.197.96:8333\n-31.214.240.56:8333\n-37.1.202.134:8333\n-37.18.74.232:8333\n-37.34.48.17:8333\n-37.48.64.140:8333\n-37.97.141.116:8333\n-37.120.164.16:8333\n-37.120.169.123:8333\n-37.143.9.128:8333\n-37.153.172.227:8333\n-37.193.227.16:8333\n-37.205.8.78:8333\n-37.220.0.114:8333\n-37.232.218.199:8333\n-38.140.161.53:8333\n-40.87.70.120:8333\n-41.162.163.93:8333\n-42.2.198.48:8333\n-45.20.67.1:8333\n-45.55.197.77:8333\n-45.56.97.63:8333\n-45.58.38.162:8333\n-45.63.1.33:8333\n-45.79.2.70:8333\n-46.16.240.98:8333\n-46.19.137.74:8333\n-46.28.206.146:8333\n-46.32.252.197:8333\n-46.59.13.59:8333\n-46.59.39.195:8333\n-46.148.16.210:8333\n-46.160.195.121:8333\n-46.166.142.21:8333\n-46.166.160.29:8330\n-46.188.44.20:8333\n-46.229.238.187:8333\n-46.231.16.149:8333\n-47.88.100.130:8333\n-47.89.192.134:8333\n-47.185.194.160:8333\n-47.189.129.218:8333\n-49.65.2.140:8333\n-50.3.72.129:8333\n-50.31.99.225:8333\n-51.175.33.95:8333\n-52.1.165.219:8333\n-52.10.170.186:8333\n-52.51.128.216:8333\n-54.197.130.244:8333\n-58.59.2.22:8333\n-58.84.6.81:8333\n-59.125.8.143:8333\n-59.167.130.139:8333\n-61.47.2.20:8333\n-62.43.130.178:8333\n-62.76.96.6:8333\n-62.107.200.30:8333\n-62.133.15.58:8333\n-62.133.194.2:8333\n-62.133.194.156:8333\n-62.138.1.95:8333\n-62.216.238.3:8333\n-62.238.34.125:8333\n-63.137.40.207:8333\n-63.231.96.109:8333\n-64.78.240.150:8333\n-64.83.225.146:8333\n-64.137.236.68:8833\n-64.156.193.120:8333\n-66.79.160.82:8333\n-66.91.230.231:8333\n-66.135.128.121:8333\n-66.172.10.4:8333\n-66.194.38.250:8333\n-66.194.38.253:8333\n-66.215.34.26:8333\n-66.240.237.155:8333\n-67.205.96.108:8333\n-67.205.128.5:8333\n-67.219.233.140:8333\n-67.221.193.55:8333\n-68.100.196.118:8333\n-68.132.193.222:8333\n-68.168.118.234:8333\n-69.11.97.43:8333\n-69.30.229.10:8333\n-69.50.171.205:8333\n-69.125.193.145:8333\n-69.162.139.125:8333\n-70.35.98.39:8333\n-70.112.32.29:8333\n-71.126.181.146:8333\n-72.180.32.105:8333\n-73.226.64.145:8333\n-74.83.140.242:8333\n-74.84.128.158:9333\n-74.122.237.124:8333\n-74.215.133.145:8333\n-75.76.101.169:8333\n-75.85.13.8:8333\n-75.86.168.13:8333\n-75.170.97.25:8333\n-75.177.137.134:8333\n-76.76.227.136:8333\n-77.53.136.6:8333\n-77.110.11.52:8333\n-78.25.32.206:8333\n-78.34.8.120:8333\n-78.46.32.99:8333\n-78.56.9.214:8333\n-78.56.229.177:8333\n-78.129.237.245:8333\n-78.196.172.45:8333\n-79.132.230.144:8333\n-79.169.35.235:8333\n-79.172.194.219:8333\n-80.64.65.87:8333\n-80.89.137.115:8333\n-80.93.36.173:8333\n-80.101.167.100:8333\n-80.114.34.158:8333\n-80.127.136.50:8333\n-80.188.139.82:8333\n-80.222.39.77:8333\n-80.223.105.69:8333\n-80.229.151.187:8333\n-80.240.129.221:8333\n-81.7.10.238:8333\n-81.7.13.84:8333\n-81.27.96.92:8333\n-81.35.143.98:8333\n-81.82.201.5:8333\n-81.83.96.5:8333\n-81.169.227.36:8333\n-81.171.2.119:8333\n-81.171.38.130:8333\n-81.175.255.118:8333\n-81.207.8.49:8333\n-81.228.194.187:8333\n-82.9.1.77:8333\n-82.11.33.229:8333\n-82.102.13.117:8333\n-82.116.203.240:8333\n-82.130.103.16:8333\n-82.136.65.227:8333\n-82.158.227.238:8333\n-82.197.212.25:8333\n-82.199.102.10:8333\n-82.200.204.41:8333\n-82.200.204.119:8333\n-82.221.105.223:8333\n-82.221.108.27:8333\n-82.221.111.136:8333\n-82.221.139.97:8333\n-83.137.41.10:8333\n-83.143.130.19:8333\n-83.150.9.196:8333\n-83.169.2.43:8333\n-83.217.203.130:8333\n-83.249.88.52:8333\n-84.26.162.92:8333\n-84.42.193.6:8333\n-84.134.194.115:8333\n-84.201.32.115:8333\n-84.212.232.71:8333\n-84.238.140.176:8333\n-85.10.104.34:8333\n-85.21.144.226:8333\n-85.25.194.12:8333\n-85.144.79.190:8333\n-85.145.228.192:8333\n-85.194.238.130:8333\n-85.228.201.80:8333\n-85.229.228.174:8333\n-85.236.233.87:8333\n-86.80.204.185:8333\n-86.105.227.190:8333\n-86.135.39.40:8333\n-87.106.139.127:8333\n-87.120.8.5:8333\n-87.120.37.230:8333\n-87.239.101.102:8333\n-87.243.197.82:8333\n-88.112.112.173:8333\n-88.150.192.17:8333\n-88.185.155.134:8333\n-88.202.202.221:8333\n-88.202.230.87:8333\n-88.208.39.182:8333\n-89.34.99.41:8333\n-89.163.224.187:8333\n-89.169.233.150:8333\n-89.184.65.85:8333\n-89.212.91.219:8333\n-89.249.178.36:8333\n-90.149.38.172:8333\n-91.65.97.157:8333\n-91.107.64.143:8333\n-91.114.35.107:8333\n-91.135.0.187:8333\n-91.145.110.95:8333\n-91.157.38.151:8333\n-91.197.44.133:8333\n-91.205.176.54:8333\n-91.206.203.10:8333\n-91.206.203.18:8333\n-91.215.35.130:8333\n-91.219.239.159:8333\n-91.223.133.2:8333\n-91.223.133.40:8333\n-91.226.10.90:8333\n-91.240.141.169:8333\n-92.27.7.209:8333\n-92.89.67.207:8333\n-92.221.201.138:8333\n-93.95.187.122:8333\n-93.103.73.187:8333\n-93.123.80.47:8333\n-93.188.224.253:8333\n-93.190.69.242:8333\n-94.19.12.244:8333\n-94.156.128.116:8333\n-94.177.171.73:8333\n-94.181.44.104:8333\n-94.237.26.173:8333\n-94.242.229.158:8333\n-94.255.128.98:8333\n-95.79.35.50:8333\n-95.91.41.39:8333\n-95.110.234.93:8333\n-95.128.48.209:8333\n-95.183.48.71:8333\n-96.23.67.85:8333\n-97.64.177.10:8333\n-97.104.201.95:8333\n-98.29.197.149:8333\n-98.169.2.107:8333\n-99.232.48.72:8333\n-101.100.141.55:8333\n-103.7.32.40:8333\n-103.53.225.69:8333\n-103.249.106.74:8333\n-104.128.224.13:8333\n-104.128.228.252:8333\n-104.155.1.158:8333\n-104.168.128.50:8333\n-104.199.160.228:8333\n-104.204.109.11:8333\n-104.219.251.118:8333\n-104.223.3.129:8333\n-104.223.3.219:8333\n-104.238.130.182:8333\n-104.245.99.227:8333\n-106.38.234.89:8333\n-106.104.134.218:8333\n-107.136.6.71:8333\n-107.150.45.210:8333\n-107.151.144.103:8333\n-107.170.44.99:8333\n-107.181.137.133:8333\n-107.191.102.13:8333\n-108.58.252.82:8333\n-108.59.9.167:8333\n-108.59.12.163:8333\n-108.162.106.215:8333\n-108.168.133.164:8333\n-108.173.202.101:8333\n-108.180.110.190:8333\n-109.29.75.40:8333\n-109.120.194.136:8333\n-109.230.230.88:8333\n-109.235.67.115:8333\n-109.235.69.120:8333\n-109.236.90.199:8333\n-109.255.0.107:8333\n-110.10.130.12:8333\n-110.10.176.94:8333\n-110.132.172.251:8333\n-111.90.158.17:8333\n-115.66.205.171:8333\n-116.31.123.139:8333\n-118.192.48.46:8333\n-118.193.164.98:8333\n-119.29.156.231:8333\n-119.63.44.133:19980\n-119.81.99.27:8333\n-119.106.12.169:8333\n-119.147.137.155:19980\n-119.185.1.182:8333\n-120.55.193.136:8333\n-121.254.173.23:8333\n-121.254.173.40:8333\n-123.56.129.45:8333\n-123.203.163.128:8333\n-123.206.32.198:8333\n-124.189.160.221:8333\n-124.189.192.232:8333\n-128.140.224.162:8333\n-128.199.68.205:8333\n-130.234.207.115:8333\n-131.113.41.123:8333\n-131.114.72.104:8333\n-132.204.108.155:8333\n-134.119.13.230:8333\n-134.213.133.206:8333\n-134.213.133.207:8333\n-135.23.5.3:8333\n-137.74.0.66:8333\n-138.68.1.45:8333\n-138.68.2.194:8333\n-138.68.64.19:8333\n-138.68.64.28:8333\n-139.59.42.248:8333\n-139.220.240.153:8333\n-140.112.107.118:8333\n-140.186.224.112:8333\n-141.52.64.141:8333\n-142.68.237.107:8333\n-142.217.12.106:8333\n-146.60.204.92:8333\n-146.185.161.209:8333\n-148.103.7.119:8333\n-149.210.133.244:8333\n-150.229.0.143:8333\n-151.231.238.25:8333\n-151.248.160.227:8333\n-153.230.228.15:8333\n-155.133.43.249:8333\n-158.58.238.145:8333\n-158.109.79.13:34821\n-159.203.70.208:8333\n-160.16.206.31:8333\n-162.209.1.233:8333\n-162.209.4.125:8333\n-162.216.192.231:8333\n-162.243.100.111:8333\n-162.246.11.194:8333\n-162.248.102.117:8333\n-162.252.46.83:8333\n-163.172.33.78:8333\n-163.172.194.30:8333\n-169.229.198.106:8333\n-170.75.195.168:8333\n-172.103.205.197:8333\n-172.245.225.126:8333\n-173.179.37.8:8333\n-173.208.203.74:8333\n-173.252.46.16:8333\n-174.117.141.124:8333\n-175.126.38.158:8333\n-175.126.38.177:8333\n-175.139.106.119:8333\n-175.140.232.66:8333\n-176.9.117.100:8333\n-176.36.33.121:8333\n-176.36.99.222:8333\n-176.56.227.36:8333\n-176.100.100.206:8333\n-176.106.144.183:8333\n-176.123.7.148:8333\n-176.126.167.10:8333\n-176.223.201.198:8333\n-178.62.68.62:8333\n-178.62.102.56:8333\n-178.62.203.185:8333\n-178.124.197.101:8333\n-178.170.138.202:8333\n-178.175.129.18:8333\n-178.188.47.62:8333\n-178.199.240.22:8333\n-178.218.209.162:8333\n-178.237.35.34:8333\n-178.238.224.242:8333\n-178.254.34.144:8333\n-178.254.34.161:8333\n-179.43.183.2:8333\n-180.200.128.58:8333\n-182.93.34.130:8333\n-185.8.238.197:8333\n-185.11.139.172:8333\n-185.24.97.11:8333\n-185.24.233.100:8333\n-185.25.48.71:8333\n-185.25.48.114:8333\n-185.28.76.179:8333\n-185.70.105.152:8339\n-185.77.128.69:8333\n-185.77.128.241:8333\n-185.86.79.87:8333\n-185.89.102.2:3333\n-185.89.102.53:3333\n-185.109.144.155:8333\n-185.117.75.50:8333\n-185.121.173.223:8333\n-185.128.41.157:8333\n-185.130.226.106:8333\n-185.145.130.76:8333\n-188.63.192.104:8333\n-188.113.164.231:8333\n-188.166.229.112:8333\n-188.214.128.77:8333\n-190.10.8.211:8333\n-190.81.160.184:8333\n-190.111.231.19:8333\n-192.131.44.93:8333\n-192.206.202.6:8333\n-192.227.245.133:8333\n-192.241.74.123:8333\n-192.241.74.126:8333\n-192.254.71.222:8333\n-193.10.64.85:8333\n-193.46.80.101:8333\n-193.49.43.219:8333\n-193.93.79.215:8333\n-193.183.99.46:8333\n-193.234.224.195:8333\n-193.239.80.155:8333\n-194.63.140.208:8333\n-194.87.1.232:8333\n-194.187.227.18:8333\n-194.247.12.136:8333\n-195.91.176.86:8333\n-196.28.98.20:8333\n-198.44.249.35:8333\n-198.84.172.252:8333\n-198.204.224.106:8333\n-198.211.97.46:8333\n-199.66.64.198:8333\n-199.101.100.58:8333\n-199.101.100.59:8333\n-199.127.224.50:8333\n-200.46.241.71:8333\n-200.116.98.185:8333\n-203.9.225.13:8333\n-203.177.142.37:8333\n-205.200.247.149:8333\n-205.209.131.150:13838\n-206.53.64.74:8333\n-206.72.192.69:8333\n-206.123.112.180:8333\n-208.66.208.153:8333\n-208.68.174.76:8333\n-208.107.97.242:8333\n-208.111.48.132:8333\n-208.118.235.190:8333\n-209.6.205.126:8333\n-209.40.96.121:8333\n-209.58.130.137:8333\n-209.73.142.226:8333\n-209.90.224.4:8333\n-209.126.69.243:8333\n-209.126.108.91:8333\n-209.195.4.18:8333\n-209.250.6.190:8333\n-210.54.37.225:8333\n-210.223.3.44:8333\n-211.149.234.109:8333\n-212.51.140.183:8333\n-212.90.179.206:8333\n-212.93.226.90:8333\n-212.110.171.118:8333\n-212.202.132.17:8333\n-213.91.205.134:8333\n-213.165.68.218:8333\n-213.196.200.213:8333\n-216.59.4.212:8333\n-216.74.32.109:8333\n-216.158.225.70:8333\n-216.164.138.13:8333\n-216.167.236.247:8333\n-216.197.79.74:8333\n-217.11.225.189:8333\n-217.12.199.207:8333\n-217.20.130.72:8333\n-217.23.6.148:8333\n-217.23.140.103:8333\n-217.28.96.180:8333\n-217.35.130.42:8333\n-217.111.66.79:8333\n-217.158.9.102:8333\n-217.168.143.169:8333\n-217.209.32.219:8333\n-218.161.33.165:8333\n-221.121.144.138:8333\n-[2001:0:4137:9e76:2048:3a84:bb91:e846]:8333\n-[2001:0:4137:9e76:2066:e9e:b489:f8b8]:8333\n-[2001:0:4137:9e76:3854:1211:b5ac:a96b]:8333\n-[2001:0:4137:9e76:4e3:1f66:cd4c:829f]:8333\n-[2001:0:4137:9e76:ad:1f4:9ea9:fa2e]:8333\n-[2001:0:4137:9e76:e5:baa:b66f:f418]:8333\n-[2001:0:53aa:64c:20a2:59c4:ad22:93ea]:8333\n-[2001:0:53aa:64c:59:617f:a10d:e0]:8333\n-[2001:0:5ef5:79fb:200f:3ae5:3cbc:74c9]:8333\n-[2001:0:5ef5:79fb:38f2:13b4:b208:5604]:8333\n-[2001:0:5ef5:79fd:200b:22a7:cc50:f52d]:8333\n-[2001:0:5ef5:79fd:24ef:1aef:a994:303d]:8333\n-[2001:0:5ef5:79fd:24fc:b5d:ad4f:4db2]:8333\n-[2001:0:5ef5:79fd:28bf:2d23:e02e:c3ef]:8333\n-[2001:0:5ef5:79fd:3cd0:3c2e:da44:a759]:8333\n-[2001:0:5ef5:79fd:87e:fd7:b1c2:1b4]:8333\n-[2001:0:9d38:6ab8:18db:3bda:ab90:e81e]:8333\n-[2001:0:9d38:6ab8:4e7:1660:862f:a6d7]:8333\n-[2001:0:9d38:6ab8:6:2b:5074:9588]:8333\n-[2001:0:9d38:6abd:10f8:a7d7:bb90:f524]:8333\n-[2001:13d8:1c01:1000::11]:8333\n-[2001:15c0:65ff:610::2]:8333\n-[2001:1608:10:156:ae::4adb]:8333\n-[2001:1620:b1b:8888:20d:b9ff:fe41:6710]:8333\n-[2001:1620:b1b:face:20d:b9ff:fe41:6710]:8333\n-[2001:1620:f00:282::2]:8333\n-[2001:1620:f00:8282::1]:8333\n-[2001:1680:101:1ae::1]:8333\n-[2001:16d8:ff00:85de:20c:29ff:fe52:9594]:8333\n-[2001:19f0:4400:434d:5400:ff:fe42:2678]:8333\n-[2001:19f0:5000:8c8b:5400:ff:fe1f:c023]:8333\n-[2001:19f0:5000:8ce6:5400:ff:fe1b:24a9]:8333\n-[2001:19f0:5:314:5400:ff:fe2c:42e8]:8333\n-[2001:19f0:5:51b:5400:ff:fe49:fe5b]:8333\n-[2001:19f0:5:bc:5400:ff:fe3b:9339]:8333\n-[2001:1af8:4020:a020:5::]:8333\n-[2001:1bc8:1a0:590e:2e0:f4ff:fe16:3a39]:8333\n-[2001:1c04:1401:8f00:f4fe:4fff:fe0c:df40]:8333\n-[2001:4128:6135:10:20c:29ff:fe69:9e81]:8333\n-[2001:4128:6135:2010:21e:bff:fee8:a3c0]:8333\n-[2001:4128:6135:e001:5054:ff:fe37:e9eb]:8333\n-[2001:41d0:1000:1024::]:8333\n-[2001:41d0:1000:1433::]:8333\n-[2001:41d0:1004:22ae::]:8333\n-[2001:41d0:1004:2996::]:8333\n-[2001:41d0:1008:11e0::1a5c:6d9d]:8333\n-[2001:41d0:1008:11e0::b74:baf7]:8333\n-[2001:41d0:1008:237a::]:8333\n-[2001:41d0:1008:2752::]:8333\n-[2001:41d0:1008:494::]:8333\n-[2001:41d0:1:45d8::1]:8333\n-[2001:41d0:1:5630::1]:8333\n-[2001:41d0:1:6f57::1]:8333\n-[2001:41d0:1:801e::1]:8333\n-[2001:41d0:1:8852::1]:8333\n-[2001:41d0:1:8b26::1]:8333\n-[2001:41d0:1:a5b8::1]:8333\n-[2001:41d0:1:b26b::1]:8333\n-[2001:41d0:1:c139::1]:8333\n-[2001:41d0:1:c8d7::1]:8333\n-[2001:41d0:1:d227::]:8333\n-[2001:41d0:1:dbc4::1]:8333\n-[2001:41d0:1:dc5d::1]:8333\n-[2001:41d0:1:e13b::1]:8333\n-[2001:41d0:1:ef5b::1]:8333\n-[2001:41d0:2:16be::1]:8333\n-[2001:41d0:2:203c::1]:8333\n-[2001:41d0:2:38c5::1]:8333\n-[2001:41d0:2:519::]:8333\n-[2001:41d0:2:9c94::1]:8333\n-[2001:41d0:2:b792::]:8333\n-[2001:41d0:2:bf2a::]:8333\n-[2001:41d0:2:c793::]:8333\n-[2001:41d0:2:c9bf::]:8333\n-[2001:41d0:303:4f0::]:8333\n-[2001:41d0:8:1a8a::1]:8333\n-[2001:41d0:8:3fa9::1]:8333\n-[2001:41d0:8:4670::1]:8333\n-[2001:41d0:8:4f48::1]:8333\n-[2001:41d0:8:6728::]:8333\n-[2001:41d0:8:72c2:d:242:ac11:2]:8333\n-[2001:41d0:8:8007::]:8333\n-[2001:41d0:8:a71c::]:8333\n-[2001:41d0:8:bccc::1]:8333\n-[2001:41d0:8:bd45::1]:8333\n-[2001:41d0:8:c67c::]:8333\n-[2001:41d0:8:de3d::1]:8333\n-[2001:41d0:8:e257::1]:8333\n-[2001:41d0:8:e3e4::1]:8333\n-[2001:41d0:a:14cc::1]:8333\n-[2001:41d0:a:15b2::1]:8333\n-[2001:41d0:a:1ac9::1]:8333\n-[2001:41d0:a:2496::1]:8333\n-[2001:41d0:a:308c::]:8333\n-[2001:41d0:a:5879::]:8333\n-[2001:41d0:a:6810::1]:8333\n-[2001:41d0:a:682d::1]:8333\n-[2001:41d0:a:6c29::1]:8333\n-[2001:41d0:a:f52a::1]:8333\n-[2001:41d0:d:111c::]:8333\n-[2001:41d0:e:1388::1]:8333\n-[2001:41d0:e:26b::1]:8333\n-[2001:41d0:e:f73::1]:8333\n-[2001:41d0:fc8c:a200:7a24:afff:fe9d:c69b]:8333\n-[2001:41f0:61:0:72f3:95ff:fe09:7521]:8333\n-[2001:41f0:61::7]:8333\n-[2001:4428:200:8171:db6:2ff4:9c0e:a2da]:8333\n-[2001:470:1f07:151c:baac:6fff:feb7:3ba9]:8333\n-[2001:470:1f0b:ad6:a60:6eff:fec6:2323]:8333\n-[2001:470:1f11:617::10f]:8333\n-[2001:470:1f14:73e::2]:8333\n-[2001:470:1f14:7d::2]:8333\n-[2001:470:1f15:11f8::10]:8333\n-[2001:470:1f15:1b95:2c3e:8a9a:24e1:7084]:8333\n-[2001:470:1f15:e9b::3ef]:8333\n-[2001:470:1f1d:3a9::10]:8333\n-[2001:470:25:482::2]:8333\n-[2001:470:27:19f::2]:8333\n-[2001:470:27:665::2]:8333\n-[2001:470:28:365::4]:8333\n-[2001:470:41:6::2]:8333\n-[2001:470:727b::11:14]:8333\n-[2001:470:7:2f0::2]:8333\n-[2001:470:7:65::2]:8333\n-[2001:470:7f85::2]:8333\n-[2001:470:8:2e1:5825:39df:3e4c:54a8]:8333\n-[2001:470:8:2e1::43]:8333\n-[2001:470:8:2e1:ae2a:e257:4470:6350]:8333\n-[2001:470:a:c13::2]:8333\n-[2001:4801:7819:74:b745:b9d5:ff10:a61a]:8333\n-[2001:4801:7819:74:b745:b9d5:ff10:aaec]:8333\n-[2001:4801:7828:104:be76:4eff:fe10:1325]:8333\n-[2001:4802:7800:2:30d7:1775:ff20:1858]:8333\n-[2001:4ba0:babe:832::]:8333\n-[2001:4ba0:cafe:379::1]:8333\n-[2001:4ba0:ffee:33::10]:8333\n-[2001:4dd0:ff00:9a67::9]:8333\n-[2001:610:1b19::3]:8333\n-[2001:610:600:a41::2]:8333\n-[2001:678:174:4021::2:8333]:8333\n-[2001:67c:16dc:1201:5054:ff:fe17:4dac]:8333\n-[2001:67c:2128:ffff:6062:36ff:fe30:6532]:8333\n-[2001:67c:2564:331:3547:6e28:85a4:fb27]:8333\n-[2001:6a0:200:368::2]:8333\n-[2001:718:801:311:5054:ff:fe19:c483]:8333\n-[2001:7b8:2ff:8f::2]:8333\n-[2001:8d8:8a6:4400::3f:86c]:8333\n-[2001:8d8:923:8400::87:ebd]:8333\n-[2001:960:66d::2]:8333\n-[2001:981:46:1:ba27:ebff:fe5b:edee]:8333\n-[2001:ba8:1f1:f069::2]:8333\n-[2001:bc8:225f:10e:505:6573:7573:d0a]:8333\n-[2001:bc8:2706::1]:8333\n-[2001:bc8:323c:100::53]:8333\n-[2001:bc8:323c:100::80:4]:8333\n-[2001:bc8:323c:100::cafe]:8333\n-[2001:bc8:3680:4242::1]:8333\n-[2001:bc8:399f:f000::1]:8333\n-[2001:bc8:3cbf::5]:8333\n-[2001:bc8:4700:2300::19:807]:8333\n-[2001:e42:102:1805:160:16:206:31]:8333\n-[2002:12f1:3f::12f1:3f]:8333\n-[2002:1e2:5349::1e2:5349]:8333\n-[2002:1e2:5588::1e2:5588]:8333\n-[2002:2501:cf62::2501:cf62]:8333\n-[2002:268c:a135::268c:a135]:8333\n-[2002:2a33:99db::2a33:99db]:8332\n-[2002:2ebc:2c14::7]:8333\n-[2002:2f59:2c9c::2f59:2c9c]:11885\n-[2002:2f5a:3619::2f5a:3619]:8333\n-[2002:2f5a:36a4::2f5a:36a4]:8333\n-[2002:2f5a:429::2f5a:429]:8333\n-[2002:2f5a:562a::2f5a:562a]:8333\n-[2002:3a3b:216::3a3b:216]:8333\n-[2002:3dfa:5d23::3dfa:5d23]:8333\n-[2002:424f:a052::424f:a052]:8333\n-[2002:451e:e922::451e:e922]:8333\n-[2002:4540:4b30::4540:4b30]:8333\n-[2002:51ab:7cc::51ab:7cc]:8333\n-[2002:527:de11::527:de11]:8333\n-[2002:5395:7d01::5395:7d01]:8333\n-[2002:5395:7d2a::5395:7d2a]:8333\n-[2002:5669:e3be::5669:e3be]:8333\n-[2002:566a:5d6d::566a:5d6d]:8333\n-[2002:59b9:f820::59b9:f820]:8333\n-[2002:59f8:ac69::59f8:ac69]:8333\n-[2002:5bd4:b65a::5bd4:b65a]:8333\n-[2002:5c3f:39db::5c3f:39db]:8333\n-[2002:5d33:8d03::5d33:8d03]:8333\n-[2002:5d67:49bb::5d67:49bb]:8333\n-[2002:5dae:5d5f::5dae:5d5f]:8333\n-[2002:5dbe:8cc6::5dbe:8cc6]:8333\n-[2002:5dbe:9503::5dbe:9503]:8333\n-[2002:5fd3:8944::5fd3:8944]:8333\n-[2002:5fd3:9467::5fd3:9467]:8333\n-[2002:67f9:6a48::67f9:6a48]:8333\n-[2002:67f9:6a4a::67f9:6a4a]:8333\n-[2002:67f9:6a95::67f9:6a95]:8333\n-[2002:6a0e:3ea8::6a0e:3ea8]:10011\n-[2002:6b96:375a::6b96:375a]:8333\n-[2002:6ca8:cffb::6ca8:cffb]:8333\n-[2002:6caf:234::6caf:234]:8333\n-[2002:6dec:58f5::6dec:58f5]:8333\n-[2002:6dec:5ac7::6dec:5ac7]:8333\n-[2002:7237:4a02::7237:4a02]:20033\n-[2002:7237:94fd::7237:94fd]:10011\n-[2002:7237:e428::7237:e428]:8333\n-[2002:7237:fcf6::7237:fcf6]:20188\n-[2002:76c0:96e6::76c0:96e6]:8333\n-[2002:7819:7e80::7819:7e80]:7743\n-[2002:781a:ea86::781a:ea86]:8333\n-[2002:781a:f3c2::781a:f3c2]:14475\n-[2002:784c:c2c0::784c:c2c0]:8333\n-[2002:784c:ec97::784c:ec97]:8333\n-[2002:792b:261a::792b:261a]:8333\n-[2002:88f3:8cca::88f3:8cca]:8333\n-[2002:88f3:a83c::88f3:a83c]:8333\n-[2002:8ac9:516f::8ac9:516f]:8333\n-[2002:8b81:6d78::8b81:6d78]:50344\n-[2002:8b81:6e5c::8b81:6e5c]:38176\n-[2002:8bc4:90a6::8bc4:90a6]:8333\n-[2002:ac52:b854::ac52:b854]:8333\n-[2002:add0:c14a::add0:c14a]:8333\n-[2002:b07e:a70a::b07e:a70a]:8333\n-[2002:b27c:c565:1::250]:8333\n-[2002:b27c:c565::1]:8333\n-[2002:b94d:80f1::b94d:80f1]:8333\n-[2002:b982:e26a::b982:e26a]:8333\n-[2002:bcd5:3145::bcd5:3145]:8333\n-[2002:c08a:d22b::c08a:d22b]:8333\n-[2002:c0c7:f8e3::c0c7:f8e3]:32771\n-[2002:c1a9:fc5a::c1a9:fc5a]:8333\n-[2002:c23f:8fc5::c23f:8fc5]:8333\n-[2002:d395:ea6d::d395:ea6d]:8333\n-[2002:d917:ca5::d917:ca5]:8333\n-[2002:d917:e91::d917:e91]:8333\n-[2002:db71:f434::db71:f434]:8333\n-[2400:2651:161:1000:6847:d40f:aaa3:4848]:8333\n-[2400:8901::f03c:91ff:fec8:4280]:8333\n-[2401:1800:7800:102:be76:4eff:fe1c:a7d]:8333\n-[2401:2500:203:10:153:120:156:83]:8333\n-[2401:a400:3200:5600:14ee:f361:4bdc:1f7c]:8333\n-[2403:4200:403:2::ff]:8333\n-[2405:aa00:2::40]:8333\n-[240b:10:ca20:f0:224:e8ff:fe1f:60d9]:8333\n-[240b:250:1e0:2400:b9ef:8fe3:a69a:7378]:8333\n-[240d:1a:302:8600:8876:a36d:12ee:f285]:8333\n-[2600:3c00::f03c:91ff:fe91:3e49]:8333\n-[2600:3c00::f03c:91ff:febb:981e]:8333\n-[2600:3c01::f03c:91ff:fe18:6adf]:8333\n-[2600:3c01::f03c:91ff:fe69:89e9]:8333\n-[2600:3c01::f03c:91ff:fe91:6a29]:8333\n-[2600:3c01::f03c:91ff:fef1:1eaa]:8333\n-[2600:3c03::f03c:91ff:fe18:da80]:8333\n-[2600:3c03::f03c:91ff:fe28:1445]:8333\n-[2600:3c03::f03c:91ff:fe67:d2e]:8333\n-[2600:3c03::f03c:91ff:fe89:116f]:8333\n-[2600:3c03::f03c:91ff:feb0:5fc4]:8333\n-[2600:3c03::f03c:91ff:fee0:233e]:8333\n-[2600:3c03::f03c:91ff:fee0:51]:8333\n-[2600:8805:2400:14e:226:4aff:fe02:2ba4]:8333\n-[2600:8807:5080:3301:1487:83b7:33d7:eb97]:8333\n-[2601:186:c100:6bcd:16bd:cea1:235d:1c19]:8333\n-[2601:18c:4200:28d0:e4d:e9ff:fec5:76d0]:8333\n-[2601:247:8201:6251:30e6:7b95:69bf:9248]:8333\n-[2601:602:9980:f78:211:11ff:fec5:1ae]:8333\n-[2602:ae:1993:de00:2c50:9a44:8f11:77a5]:8333\n-[2602:ff68:0:1:21e:bff:feca:db72]:8333\n-[2602:ff68:0:1:2bd:27ff:feb0:adf8]:8333\n-[2602:ff68:0:1::5]:8333\n-[2602:ff68:0:5:2bd:27ff:feb0:adf8]:8333\n-[2602:ffc5:1f::1f:2d61]:8333\n-[2602:ffc5:1f::1f:9211]:8333\n-[2602:ffc5::9e63:27a2]:8333\n-[2602:ffc5::c30:1c75]:8333\n-[2602:ffc5::ffc5:b844]:8333\n-[2602:ffe8:100:2::457:936b]:8333\n-[2604:180:2:eee::ca46]:8333\n-[2604:880:d:85::be37]:8333\n-[2604:9a00:2100:a009:2::]:8333\n-[2604:a880:2:d0::301:8001]:8333\n-[2604:a880:2:d0::4a9:1001]:8333\n-[2604:a880:2:d0::53a:c001]:8333\n-[2604:a880:400:d0::ad7:e001]:8333\n-[2604:a880:400:d0::dcf:f001]:8333\n-[2605:4d00::50]:8333\n-[2605:6000:edc8:300::ddfe]:8333\n-[2605:6000:ffc0:70:74d5:225c:f553:5bb8]:8333\n-[2606:6000:c148:7003:5054:ff:fe78:66ff]:8333\n-[2606:6000:e6d6:d701:d428:5e44:a2c9:3ff6]:8333\n-[2606:c680:1:4a:2016:d1ff:fe93:52a7]:8333\n-[2607:5300:203:118:3733::1414]:8333\n-[2607:5300:60:13bb::1]:8333\n-[2607:5300:60:1966::1]:8333\n-[2607:5300:60:2218::]:8333\n-[2607:5300:60:3775::]:8333\n-[2607:5300:60:3ddf::]:8333\n-[2607:5300:60:a654::]:8333\n-[2607:5300:60:a7a3::]:8333\n-[2607:5300:60:ac0::1]:8333\n-[2607:5300:60:cf97::]:8333\n-[2607:f0d0:1901:19::6]:8333\n-[2607:f128:40:1202:69:162:139:125]:8333\n-[2607:f128:40:1703::2]:8333\n-[2607:f178:0:8::106]:8333\n-[2607:f1c0:84d:8900::7e:cad]:8333\n-[2607:f948:0:1::1:40]:8333\n-[2607:fcd0:100:2302::6094:635a]:8333\n-[2607:fcd0:100:6a00::3a96:1]:8333\n-[2607:fcd0:100:6a02::7ff0:1]:8333\n-[2607:fcd0:100:8203::8c58:dbc]:8333\n-[2607:fea8:1360:9c2:221a:6ff:fe47:776d]:8333\n-[2607:fea8:4da0:9ce:5114:a8ec:20f5:a50b]:8333\n-[2607:fea8:5df:fda0:feaa:14ff:feda:c79a]:8333\n-[2607:fea8:84c0:163:f42c:baff:fecc:6bbf]:8333\n-[2607:ff10:c5:502:225:90ff:fe32:d446]:8333\n-[2607:ff48:aa81:800::96cf:1]:8333\n-[2620:11c:5001:1118:d267:e5ff:fee9:e673]:8333\n-[2620:b8:4000:1000::93:1]:8333\n-[2800:1a0::9]:8333\n-[2a00:1178:2:43:19fd:d43e:b77:edeb]:8333\n-[2a00:1178:2:43:b4e3:e562:f811:d761]:8333\n-[2a00:14f0:e000:80d2:cd1a::1]:8333\n-[2a00:1630:14::101]:8333\n-[2a00:1630:2:1802:188:122:91:11]:8333\n-[2a00:1630:2:500::4]:8333\n-[2a00:1768:2001:24::148:218]:8333\n-[2a00:1768:2001:27::142:21]:8333\n-[2a00:1a48:7810:101:be76:4eff:fe08:c774]:8333\n-[2a00:1ca8:37::a5fc:40d1]:8333\n-[2a00:1ca8:37::ab6d:ce2c]:8333\n-[2a00:1dc0:2255:10::2]:8333\n-[2a00:7c80:0:71::8]:8333\n-[2a00:7c80:0:97::7]:8333\n-[2a00:bbe0:0:42:222:64ff:fe9a:e206]:8333\n-[2a00:c98:2050:a020:3::110]:8333\n-[2a00:dcc0:eda:98:183:193:1d24:b53a]:8333\n-[2a00:dcc0:eda:98:183:193:c382:6bdb]:8333\n-[2a00:dcc0:eda:98:183:193:f72e:d943]:8333\n-[2a00:f90:ff0:c100:53c4:97a7:8b59:796a]:8333\n-[2a01:238:435c:de00:b110:38cf:192d:b2c]:28333\n-[2a01:348:6:7cf::2]:8333\n-[2a01:368:e012:8888:216:3eff:fe24:1162]:8333\n-[2a01:488:66:1000:53a9:22b:0:1]:8333\n-[2a01:488:67:1000:523:ffa7:0:1]:8333\n-[2a01:488:67:1000:b01c:3379:0:1]:8333\n-[2a01:4f8:100:34ce::2]:8333\n-[2a01:4f8:100:44e7::2]:8333\n-[2a01:4f8:10a:2e4::2]:8333\n-[2a01:4f8:10a:34e::2]:8333\n-[2a01:4f8:10a:51d::2]:8333\n-[2a01:4f8:10a:622::2]:8333\n-[2a01:4f8:10a:85f::2]:8333\n-[2a01:4f8:10a:864::2]:8333\n-[2a01:4f8:10a:d04::2]:8333\n-[2a01:4f8:110:334c::2]:8333\n-[2a01:4f8:110:536e::2]:8333\n-[2a01:4f8:120:43e4::2]:8333\n-[2a01:4f8:120:702e::2]:8333\n-[2a01:4f8:121:4346::2]:8333\n-[2a01:4f8:130:3332::2]:8333\n-[2a01:4f8:131:33ad::2]:8333\n-[2a01:4f8:131:33ad:fea1::666]:8333\n-[2a01:4f8:140:31b0::2]:8333\n-[2a01:4f8:140:4088::2]:8333\n-[2a01:4f8:140:931a::2]:8333\n-[2a01:4f8:140:93b0::2]:8333\n-[2a01:4f8:141:13ad::c451]:8333\n-[2a01:4f8:141:186::2]:8333\n-[2a01:4f8:141:22ae::2]:8333\n-[2a01:4f8:141:322c::2]:8333\n-[2a01:4f8:150:11d4::2]:8333\n-[2a01:4f8:150:440f::2]:8333\n-[2a01:4f8:150:61ee::2]:8333\n-[2a01:4f8:150:726b::2]:8333\n-[2a01:4f8:151:30c9::2]:15000\n-[2a01:4f8:151:41a2::2]:8333\n-[2a01:4f8:151:41cc::2]:8333\n-[2a01:4f8:151:52c6::154]:8333\n-[2a01:4f8:151:600b::1:1]:8333\n-[2a01:4f8:151:7175::2]:8333\n-[2a01:4f8:160:41f0::1:33]:8333\n-[2a01:4f8:160:5328::27f0:187a]:8333\n-[2a01:4f8:160:814f::2]:8333\n-[2a01:4f8:161:21ad::333:30]:8333\n-[2a01:4f8:161:7026::2]:8333\n-[2a01:4f8:162:4110::2]:8333\n-[2a01:4f8:162:4348::2]:8333\n-[2a01:4f8:171:1c1b::2]:8333\n-[2a01:4f8:171:1c3::2]:8333\n-[2a01:4f8:171:2258::2]:8333\n-[2a01:4f8:171:2a70::2]:8333\n-[2a01:4f8:171:2e1b::2]:8333\n-[2a01:4f8:171:2f28::2]:8333\n-[2a01:4f8:171:3248::2]:8333\n-[2a01:4f8:171:380c::2]:8333\n-[2a01:4f8:171:b93::2]:8333\n-[2a01:4f8:171:d0a::2]:8333\n-[2a01:4f8:172:116c::2]:8333\n-[2a01:4f8:172:1287::2]:8333\n-[2a01:4f8:172:17a9::2]:8333\n-[2a01:4f8:172:1ca7::2]:8333\n-[2a01:4f8:172:2159::2]:8333\n-[2a01:4f8:172:3a41::2]:8333\n-[2a01:4f8:172:3b42::2]:8333\n-[2a01:4f8:172:3ec1::2]:8333\n-[2a01:4f8:172:3ec2::2]:8333\n-[2a01:4f8:172:aeb::2]:8333\n-[2a01:4f8:172:aec::2]:8333\n-[2a01:4f8:173:10ab::2]:8333\n-[2a01:4f8:173:1551::2]:8333\n-[2a01:4f8:173:1bca::2]:8333\n-[2a01:4f8:173:1e2e::2]:8333\n-[2a01:4f8:173:2162::2]:8333\n-[2a01:4f8:173:21e6::2]:8333\n-[2a01:4f8:173:42::2]:8333\n-[2a01:4f8:173:cc1::2]:8333\n-[2a01:4f8:190:1253::2]:8333\n-[2a01:4f8:190:24eb::2]:8333\n-[2a01:4f8:190:34f0::2]:8333\n-[2a01:4f8:190:528d::2]:8333\n-[2a01:4f8:190:91ce::2]:8333\n-[2a01:4f8:191:2194::83]:8333\n-[2a01:4f8:191:40e8::2]:8333\n-[2a01:4f8:191:8165::2]:22556\n-[2a01:4f8:191:81b7::2]:8333\n-[2a01:4f8:191:8328::3]:8333\n-[2a01:4f8:192:11b2::2]:8343\n-[2a01:4f8:192:216c::2]:8333\n-[2a01:4f8:192:22af::2]:8333\n-[2a01:4f8:192:2422::2]:8333\n-[2a01:4f8:192:34d0::2]:8333\n-[2a01:4f8:192:440b::2]:8333\n-[2a01:4f8:192:5230::2]:8333\n-[2a01:4f8:192:db::2]:8333\n-[2a01:4f8:200:1012::2]:8333\n-[2a01:4f8:200:414e::2]:8333\n-[2a01:4f8:200:416a::2]:8333\n-[2a01:4f8:201:21a7::2]:8333\n-[2a01:4f8:201:4017::11]:8333\n-[2a01:4f8:201:6011::4]:8333\n-[2a01:4f8:201:60d5::2]:8333\n-[2a01:4f8:202:12d6::2]:8333\n-[2a01:4f8:202:31e3::2]:8333\n-[2a01:4f8:202:32c6::2]:8333\n-[2a01:4f8:202:53c3::2]:8333\n-[2a01:4f8:211:14cf::2]:8333\n-[2a01:4f8:211:1ec5::2]:8333\n-[2a01:4f8:211:483::2]:8333\n-[2a01:4f8:211:d99::8]:8333\n-[2a01:4f8:212:1826::2]:8333\n-[2a01:4f8:212:27a8::2]:8333\n-[2a01:4f8:221:801::2]:8333\n-[2a01:4f8:a0:12cc::2]:8333\n-[2a01:4f8:a0:746a:101:1:1:2]:8333\n-[2a01:4f8:a0:828a::2]:8333\n-[2a01:4f8:c17:2eef::2]:8333\n-[2a01:4f8:c17:2f3c::2]:3333\n-[2a01:4f8:c17:3b02::2]:8333\n-[2a01:4f8:c17:4245::2]:8333\n-[2a01:4f8:c17:464f::2]:8333\n-[2a01:4f8:c17:4a1c::2]:8333\n-[2a01:4f8:c17:4c5d::2]:8333\n-[2a01:4f8:c17:67f8::2]:8333\n-[2a01:4f8:c17:6dd0::2]:8333\n-[2a01:4f8:c17:710b::2]:8333\n-[2a01:4f8:c17:714::2]:8333\n-[2a01:4f8:c17:72c6::2]:8333\n-[2a01:608:ffff:a009:8bf5:879d:e51a:f837]:8333\n-[2a01:680:10:10::1]:8333\n-[2a01:6f0:ffff:120::8dcb]:8333\n-[2a01:79c:cebc:857c:98c1:88ff:fef5:90de]:8333\n-[2a01:79d:7377:2629:7e57:7e57:1:1]:8333\n-[2a01:7c8:aaac:43d:5054:ff:fe4e:3dd4]:8333\n-[2a01:7c8:aab5:3e6:5054:ff:fed7:4e54]:8333\n-[2a01:7c8:aabd:3d5:5054:ff:fe95:f586]:8333\n-[2a01:7c8:aac1:453:d0d2:af96:fa88:5d0e]:8333\n-[2a01:7c8:aac3:663:5054:ff:fe25:8c69]:8333\n-[2a01:7c8:aac3:97:5054:ff:fea7:3780]:8333\n-[2a01:7c8:aac4:567:5054:ff:fedc:518a]:8333\n-[2a01:7e00::f03c:91ff:fe26:8c87]:8333\n-[2a01:7e00::f03c:91ff:fe50:94b8]:8333\n-[2a01:7e00::f03c:91ff:fe55:2c]:8333\n-[2a01:7e00::f03c:91ff:fe89:1143]:8333\n-[2a01:7e00::f03c:91ff:fe89:53fd]:8333\n-[2a01:7e00::f03c:91ff:fedf:b70f]:8333\n-[2a01:b000::4166:515b:ef9e:b3]:8333\n-[2a01:b2e0:2::40]:8333\n-[2a01:e34:ec29:24c0:f3:ddaf:9f59:586f]:8333\n-[2a01:e34:eed7:6670:ec1b:bf7c:b012:6069]:8333\n-[2a01:e35:2ee5:610:21f:d0ff:fe4e:7460]:8333\n-[2a01:e35:8a3f:47c0:c617:feff:fe3c:9fbd]:8333\n-[2a01:e35:8bff:70b0:1e1b:dff:fe0b:236d]:8333\n-[2a02:1205:34c3:a4e0:d63d:7eff:fe98:10c8]:8333\n-[2a02:1205:34da:aa00:5882:249d:ddbf:bc43]:8333\n-[2a02:1205:5051:a640:d6ae:52ff:fea3:ac]:8333\n-[2a02:1205:c689:d980:baae:edff:feea:9445]:8333\n-[2a02:120b:2c2a:5ec0:10dd:31ff:fe42:5079]:8333\n-[2a02:120b:2c35:69d0:219:99ff:fe6b:4ec3]:8333\n-[2a02:120b:c3c2:ff60:21f:5bff:fec3:a7ad]:24312\n-[2a02:13b8:4000:1000:216:e6ff:fe92:8619]:8333\n-[2a02:13b8:4000:1000::27]:8333\n-[2a02:17d0:2a:4400:40f:3dd4:b053:47ad]:8333\n-[2a02:180:1:1::517:afb]:8333\n-[2a02:180:6:1::18]:8333\n-[2a02:1810:1d11:f900:6872:f28e:8126:f635]:8333\n-[2a02:27a8:0:1:52e5:49ff:fee3:3b49]:8333\n-[2a02:348:86:3011::1]:8333\n-[2a02:390:9000:0:218:7dff:fe10:be33]:8333\n-[2a02:582:78c1:7600:2d49:6212:29d3:abb]:8333\n-[2a02:6080::1:190b:69e3]:8333\n-[2a02:750:7:3305::575]:8333\n-[2a02:752:100:3::53]:8333\n-[2a02:7aa0:1201::7501:d950]:8333\n-[2a02:7aa0:1201::deb3:81a2]:8333\n-[2a02:7aa0:1619::a037:69a6]:8333\n-[2a02:810d:14c0:8694:d250:99ff:fe81:23d9]:8333\n-[2a02:a50::dacb:8aff:fe36:8d2d]:8333\n-[2a02:c200:0:10:3:0:2591:1]:8333\n-[2a02:c200:1:10:2:5:9982:1]:8333\n-[2a02:c200:1:10:3:0:9290:1]:8333\n-[2a02:c205:3000:7158::1]:8333\n-[2a02:c205:3001:4522::1]:8333\n-[2a02:c205:3001:6549::1]:8333\n-[2a02:c207:2008:3772::1]:8333\n-[2a02:c207:2008:6519::1]:8333\n-[2a02:c207:2009:213::1]:8333\n-[2a02:c207:2009:7858::1]:8333\n-[2a02:c207:2010:302::1]:8333\n-[2a02:c207:3001:5824::1]:8333\n-[2a02:ce80:0:20::1]:8333\n-[2a03:4000:2:496::8]:8333\n-[2a03:4000:6:416c::53]:8333\n-[2a03:4000:6:8009::1]:8333\n-[2a03:4000:9:8e::1]:8333\n-[2a03:7380:2140:17:51fe:3519:b571:4a13]:8333\n-[2a03:b0c0:0:1010::7a3:1001]:8333\n-[2a03:b0c0:0:1010::7aa:4001]:8333\n-[2a03:b0c0:3:d0::1b99:c001]:8333\n-[2a03:b0c0:3:d0::1b99:e001]:8333\n-[2a03:b0c0:3:d0::1b9a:3001]:8333\n-[2a03:b0c0:3:d0::2208:6001]:8333\n-[2a03:b0c0:3:d0::23f7:1001]:8333\n-[2a03:b0c0:3:d0::23f7:9001]:8333\n-[2a03:b0c0:3:d0::23fb:2001]:8333\n-[2a03:b0c0:3:d0::23fb:3001]:8333\n-[2a03:b0c0:3:d0::23fb:5001]:8333\n-[2a03:b0c0:3:d0::23fb:7001]:8333\n-[2a03:b0c0:3:d0::2400:1]:8333\n-[2a03:b0c0:3:d0::2400:3001]:8333\n-[2a03:b0c0:3:d0::2400:e001]:8333\n-[2a03:b0c0:3:d0::2401:e001]:8333\n-[2a03:b0c0:3:d0::2402:2001]:8333\n-[2a03:b0c0:3:d0::2402:8001]:8333\n-[2a03:b0c0:3:d0::2402:9001]:8333\n-[2a03:b0c0:3:d0::2402:b001]:8333\n-[2a03:b0c0:3:d0::2402:d001]:8333\n-[2a03:b0c0:3:d0::2403:1001]:8333\n-[2a03:b0c0:3:d0::2403:2001]:8333\n-[2a03:b0c0:3:d0::2403:4001]:8333\n-[2a03:b0c0:3:d0::2403:6001]:8333\n-[2a03:b0c0:3:d0::2403:a001]:8333\n-[2a03:b0c0:3:d0::2403:b001]:8333\n-[2a03:b0c0:3:d0::2403:f001]:8333\n-[2a03:b0c0:3:d0::2404:6001]:8333\n-[2a03:b0c0:3:d0::2404:b001]:8333\n-[2a03:f80:ed15:149:154:155:235:1]:8333\n-[2a04:1980:3100:1aac:e61d:2dff:fe29:f241]:8333\n-[2a04:1980:3100:1aac:e61d:2dff:fe29:f251]:8333\n-[2a04:2180:0:1::5a49:3c06]:8333\n-[2a04:2180:1:7::3]:8333\n-[2a04:2e00:5:2e:9a4b:e1ff:fe62:6dc0]:8333\n-[2a04:3542:1000:910:8492:b8ff:fe91:711d]:8333\n-[2a04:dbc3:fffe:0:e61f:13ff:fe95:8401]:8333\n-[2a06:9fc0:2a06:9fc0:2a06:9fc1:67c:e706]:8333\n-[2c0f:f738:2004:82::]:8333\n-2hryb3uh3tzwgnya.onion:8333\n-3nmbbakinewlgdln.onion:8333\n-3qeri3tmhzmpegyv.onion:8333\n-4wdknmecghcmclq5.onion:8333\n-53tsjt6zq3iasv5q.onion:8333\n-5cg7qeywvwo6vxpt.onion:8333\n-5gbcrgqxcbxj253s.onion:8333\n-6cn4ilbwkrkh7gwo.onion:8333\n-6e4jrnn7igeqxmlf.onion:8333\n-6ymgbvnn6d5nfmv4.onion:8333\n-6zsh3bfduhpo7ldl.onion:8333\n-72fq6phv4fg4rhvh.onion:8333\n-7gdqp6npusk4lfwk.onion:8333\n-a7emxol55e623lqc.onion:8333\n-assbiydziq77zaki.onion:8333\n-bafk5ioatlgt7dgl.onion:8333\n-bk7yp6epnmcllq72.onion:8333\n-brwqezn6le54w2bb.onion:8333\n-bs4bq6s6qkvt5hpi.onion:8333\n-bup5n5e3kurvjzf3.onion:8333\n-c2tpqkaz4ihjzwgb.onion:8333\n-cernrmrk5zomzozn.onion:8333\n-cfyegj64ht3jpodr.onion:8333\n-cg5vg54cazzpvoug.onion:8333\n-cgk4u2lxrvml4jvb.onion:8333\n-cjygd7pu5lqkky5j.onion:8333\n-d6wubsdtr46dd5ki.onion:8333\n-dfq6yjc3aelplwr4.onion:8333\n-dqpxwlpnv3z3hznl.onion:8333\n-eamfospuveabaimd.onion:8333\n-ep2mjzox3kvb6ax4.onion:8333\n-fpbxb4wjudiw2w5a.onion:8333\n-fu5hfsbbf5jwsvhv.onion:8333\n-g4freoibsczujle3.onion:8333\n-gb5ypqt63du3wfhn.onion:8333\n-ggdy2pb2avlbtjwq.onion:8333\n-gh2aiddzxmvyrnue.onion:8333\n-gnxgylbgzvaazkq7.onion:8333\n-hnizdxnejel64ubk.onion:8333\n-htvdcmlc3abji2ab.onion:8443\n-hwuboois4gslupgx.onion:8333\n-hxz6gowludlj6d5a.onion:8333\n-j6umo4bnsztpsonc.onion:8333\n-jdunmaocwbbnw565.onion:8333\n-ktv3qlxl7xvmdlf4.onion:8333\n-kvd44sw7skb5folw.onion:8333\n-kwimnzm6vd4zakvl.onion:8333\n-la5xhk3lprxzxmz2.onion:8333\n-lc7cx67end26uutp.onion:8352\n-mwu5og2agcspmgkx.onion:8333\n-mzxkipiyekaoh7my.onion:8333\n-n6rwlrtwpqc7qwo7.onion:8333\n-nj36424yccqph62z.onion:8333\n-o256w7t3vcgktmxk.onion:8333\n-o4sl5na6jeqgi3l6.onion:8333\n-okdzjarwekbshnof.onion:8333\n-oyebydl2pacx6v26.onion:8333\n-p5mx2imj75dpmime.onion:8333\n-psco6bxjewljrczx.onion:8333\n-pxtgswet6tlgrbwj.onion:8333\n-rb4v3fhgx2zr4rre.onion:8333\n-rjlnp3hwvrsmap6e.onion:8333\n-rlafimkctvz63llg.onion:8333\n-rxjvy5eyttep5tts.onion:8333\n-seoskudzk6vn6mqz.onion:8333\n-tpgdufxxsw3jkrdf.onion:8333\n-tuiyvqgi3o675pjb.onion:8333\n-tx4zd7d5exonnblh.onion:8333\n-uokg6avfgbhofls3.onion:8333\n-v3gjphgqy5hygcml.onion:8333\n-vhdoxqq63xr53ol7.onion:8333\n-visevrizz3quyagj.onion:8333\n-vqpye2k5rcqvj5mq.onion:8333\n-wfsx2gi7djhy22hk.onion:8333\n-wg6vwmbrzyyzapun.onion:8333\n-xub4w3w4wwk56xiq.onion:8333\n-ycivnom44dmxx4ob.onion:8333\n-ywskufc62bf2fum4.onion:8333\n-z4fax2vxg23t2ddf.onion:8333\n-zo5dklwelmdrpo5n.onion:8333\n+31.220.60.129:29252\n+195.110.59.120:29252\n+82.221.105.223:29252\n+node.walletbuilders.com:29252\n+195.110.59.120:29252\n+88.198.17.7:29252\n\\ No newline at end of file"
      },
      {
        "sha": "9e9ce39c5178763654109baea66b445f48d261ca",
        "filename": "contrib/spendform/spendform.py",
        "status": "added",
        "additions": 270,
        "deletions": 0,
        "changes": 270,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/contrib/spendform/spendform.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/contrib/spendform/spendform.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/spendform/spendform.py?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -0,0 +1,270 @@\n+#!/usr/bin/env python\n+# Copyright (c) 2013 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#\n+# Use the raw transactions API to spend bitcoins received on particular addresses,\n+# and send any change back to that same address.\n+#\n+# Example usage:\n+#  spendfrom.py  # Lists available funds\n+#  spendfrom.py --from=ADDRESS --to=ADDRESS --amount=11.00\n+#\n+# Assumes it will talk to a blockcashd or Blockcash-Qt running\n+# on localhost.\n+#\n+# Depends on jsonrpc\n+#\n+\n+from decimal import *\n+import getpass\n+import math\n+import os\n+import os.path\n+import platform\n+import sys\n+import time\n+from jsonrpc import ServiceProxy, json\n+\n+BASE_FEE=Decimal(\"0.001\")\n+\n+def check_json_precision():\n+    \"\"\"Make sure json library being used does not lose precision converting BTC values\"\"\"\n+    n = Decimal(\"20000000.00000003\")\n+    satoshis = int(json.loads(json.dumps(float(n)))*1.0e8)\n+    if satoshis != 2000000000000003:\n+        raise RuntimeError(\"JSON encode/decode loses precision\")\n+\n+def determine_db_dir():\n+    \"\"\"Return the default location of the blockcash data directory\"\"\"\n+    if platform.system() == \"Darwin\":\n+        return os.path.expanduser(\"~/Library/Application Support/Blockcash/\")\n+    elif platform.system() == \"Windows\":\n+        return os.path.join(os.environ['APPDATA'], \"Blockcash\")\n+    return os.path.expanduser(\"~/.blockcash\")\n+\n+def read_bitcoin_config(dbdir):\n+    \"\"\"Read the blockcash.conf file from dbdir, returns dictionary of settings\"\"\"\n+    from ConfigParser import SafeConfigParser\n+\n+    class FakeSecHead(object):\n+        def __init__(self, fp):\n+            self.fp = fp\n+            self.sechead = '[all]\\n'\n+        def readline(self):\n+            if self.sechead:\n+                try: return self.sechead\n+                finally: self.sechead = None\n+            else:\n+                s = self.fp.readline()\n+                if s.find('#') != -1:\n+                    s = s[0:s.find('#')].strip() +\"\\n\"\n+                return s\n+\n+    config_parser = SafeConfigParser()\n+    config_parser.readfp(FakeSecHead(open(os.path.join(dbdir, \"blockcash.conf\"))))\n+    return dict(config_parser.items(\"all\"))\n+\n+def connect_JSON(config):\n+    \"\"\"Connect to a blockcash JSON-RPC server\"\"\"\n+    testnet = config.get('testnet', '0')\n+    testnet = (int(testnet) > 0)  # 0/1 in config file, convert to True/False\n+    if not 'rpcport' in config:\n+        config['rpcport'] = 19332 if testnet else 9332\n+    connect = \"http://%s:%s@127.0.0.1:%s\"%(config['rpcuser'], config['rpcpassword'], config['rpcport'])\n+    try:\n+        result = ServiceProxy(connect)\n+        # ServiceProxy is lazy-connect, so send an RPC command mostly to catch connection errors,\n+        # but also make sure the bitcoind we're talking to is/isn't testnet:\n+        if result.getmininginfo()['testnet'] != testnet:\n+            sys.stderr.write(\"RPC server at \"+connect+\" testnet setting mismatch\\n\")\n+            sys.exit(1)\n+        return result\n+    except:\n+        sys.stderr.write(\"Error connecting to RPC server at \"+connect+\"\\n\")\n+        sys.exit(1)\n+\n+def unlock_wallet(bitcoind):\n+    info = bitcoind.getinfo()\n+    if 'unlocked_until' not in info:\n+        return True # wallet is not encrypted\n+    t = int(info['unlocked_until'])\n+    if t <= time.time():\n+        try:\n+            passphrase = getpass.getpass(\"Wallet is locked; enter passphrase: \")\n+            bitcoind.walletpassphrase(passphrase, 5)\n+        except:\n+            sys.stderr.write(\"Wrong passphrase\\n\")\n+\n+    info = bitcoind.getinfo()\n+    return int(info['unlocked_until']) > time.time()\n+\n+def list_available(bitcoind):\n+    address_summary = dict()\n+\n+    address_to_account = dict()\n+    for info in bitcoind.listreceivedbyaddress(0):\n+        address_to_account[info[\"address\"]] = info[\"account\"]\n+\n+    unspent = bitcoind.listunspent(0)\n+    for output in unspent:\n+        # listunspent doesn't give addresses, so:\n+        rawtx = bitcoind.getrawtransaction(output['txid'], 1)\n+        vout = rawtx[\"vout\"][output['vout']]\n+        pk = vout[\"scriptPubKey\"]\n+\n+        # This code only deals with ordinary pay-to-bitcoin-address\n+        # or pay-to-script-hash outputs right now; anything exotic is ignored.\n+        if pk[\"type\"] != \"pubkeyhash\" and pk[\"type\"] != \"scripthash\":\n+            continue\n+        \n+        address = pk[\"addresses\"][0]\n+        if address in address_summary:\n+            address_summary[address][\"total\"] += vout[\"value\"]\n+            address_summary[address][\"outputs\"].append(output)\n+        else:\n+            address_summary[address] = {\n+                \"total\" : vout[\"value\"],\n+                \"outputs\" : [output],\n+                \"account\" : address_to_account.get(address, \"\")\n+                }\n+\n+    return address_summary\n+\n+def select_coins(needed, inputs):\n+    # Feel free to improve this, this is good enough for my simple needs:\n+    outputs = []\n+    have = Decimal(\"0.0\")\n+    n = 0\n+    while have < needed and n < len(inputs):\n+        outputs.append({ \"txid\":inputs[n][\"txid\"], \"vout\":inputs[n][\"vout\"]})\n+        have += inputs[n][\"amount\"]\n+        n += 1\n+    return (outputs, have-needed)\n+\n+def create_tx(bitcoind, fromaddresses, toaddress, amount, fee):\n+    all_coins = list_available(bitcoind)\n+\n+    total_available = Decimal(\"0.0\")\n+    needed = amount+fee\n+    potential_inputs = []\n+    for addr in fromaddresses:\n+        if addr not in all_coins:\n+            continue\n+        potential_inputs.extend(all_coins[addr][\"outputs\"])\n+        total_available += all_coins[addr][\"total\"]\n+\n+    if total_available < needed:\n+        sys.stderr.write(\"Error, only %f BTC available, need %f\\n\"%(total_available, needed));\n+        sys.exit(1)\n+\n+    #\n+    # Note:\n+    # Python's json/jsonrpc modules have inconsistent support for Decimal numbers.\n+    # Instead of wrestling with getting json.dumps() (used by jsonrpc) to encode\n+    # Decimals, I'm casting amounts to float before sending them to bitcoind.\n+    #  \n+    outputs = { toaddress : float(amount) }\n+    (inputs, change_amount) = select_coins(needed, potential_inputs)\n+    if change_amount > BASE_FEE:  # don't bother with zero or tiny change\n+        change_address = fromaddresses[-1]\n+        if change_address in outputs:\n+            outputs[change_address] += float(change_amount)\n+        else:\n+            outputs[change_address] = float(change_amount)\n+\n+    rawtx = bitcoind.createrawtransaction(inputs, outputs)\n+    signed_rawtx = bitcoind.signrawtransaction(rawtx)\n+    if not signed_rawtx[\"complete\"]:\n+        sys.stderr.write(\"signrawtransaction failed\\n\")\n+        sys.exit(1)\n+    txdata = signed_rawtx[\"hex\"]\n+\n+    return txdata\n+\n+def compute_amount_in(bitcoind, txinfo):\n+    result = Decimal(\"0.0\")\n+    for vin in txinfo['vin']:\n+        in_info = bitcoind.getrawtransaction(vin['txid'], 1)\n+        vout = in_info['vout'][vin['vout']]\n+        result = result + vout['value']\n+    return result\n+\n+def compute_amount_out(txinfo):\n+    result = Decimal(\"0.0\")\n+    for vout in txinfo['vout']:\n+        result = result + vout['value']\n+    return result\n+\n+def sanity_test_fee(bitcoind, txdata_hex, max_fee):\n+    class FeeError(RuntimeError):\n+        pass\n+    try:\n+        txinfo = bitcoind.decoderawtransaction(txdata_hex)\n+        total_in = compute_amount_in(bitcoind, txinfo)\n+        total_out = compute_amount_out(txinfo)\n+        if total_in-total_out > max_fee:\n+            raise FeeError(\"Rejecting transaction, unreasonable fee of \"+str(total_in-total_out))\n+\n+        tx_size = len(txdata_hex)/2\n+        kb = tx_size/1000  # integer division rounds down\n+        if kb > 1 and fee < BASE_FEE:\n+            raise FeeError(\"Rejecting no-fee transaction, larger than 1000 bytes\")\n+        if total_in < 0.01 and fee < BASE_FEE:\n+            raise FeeError(\"Rejecting no-fee, tiny-amount transaction\")\n+        # Exercise for the reader: compute transaction priority, and\n+        # warn if this is a very-low-priority transaction\n+\n+    except FeeError as err:\n+        sys.stderr.write((str(err)+\"\\n\"))\n+        sys.exit(1)\n+\n+def main():\n+    import optparse\n+\n+    parser = optparse.OptionParser(usage=\"%prog [options]\")\n+    parser.add_option(\"--from\", dest=\"fromaddresses\", default=None,\n+                      help=\"addresses to get blockcash from\")\n+    parser.add_option(\"--to\", dest=\"to\", default=None,\n+                      help=\"address to get send blockcash to\")\n+    parser.add_option(\"--amount\", dest=\"amount\", default=None,\n+                      help=\"amount to send\")\n+    parser.add_option(\"--fee\", dest=\"fee\", default=\"0.0\",\n+                      help=\"fee to include\")\n+    parser.add_option(\"--datadir\", dest=\"datadir\", default=determine_db_dir(),\n+                      help=\"location of blockcash.conf file with RPC username/password (default: %default)\")\n+    parser.add_option(\"--testnet\", dest=\"testnet\", default=False, action=\"store_true\",\n+                      help=\"Use the test network\")\n+    parser.add_option(\"--dry_run\", dest=\"dry_run\", default=False, action=\"store_true\",\n+                      help=\"Don't broadcast the transaction, just create and print the transaction data\")\n+\n+    (options, args) = parser.parse_args()\n+\n+    check_json_precision()\n+    config = read_bitcoin_config(options.datadir)\n+    if options.testnet: config['testnet'] = True\n+    bitcoind = connect_JSON(config)\n+\n+    if options.amount is None:\n+        address_summary = list_available(bitcoind)\n+        for address,info in address_summary.iteritems():\n+            n_transactions = len(info['outputs'])\n+            if n_transactions > 1:\n+                print(\"%s %.8f %s (%d transactions)\"%(address, info['total'], info['account'], n_transactions))\n+            else:\n+                print(\"%s %.8f %s\"%(address, info['total'], info['account']))\n+    else:\n+        fee = Decimal(options.fee)\n+        amount = Decimal(options.amount)\n+        while unlock_wallet(bitcoind) == False:\n+            pass # Keep asking for passphrase until they get it right\n+        txdata = create_tx(bitcoind, options.fromaddresses.split(\",\"), options.to, amount, fee)\n+        sanity_test_fee(bitcoind, txdata, amount*Decimal(\"0.01\"))\n+        if options.dry_run:\n+            print(txdata)\n+        else:\n+            txid = bitcoind.sendrawtransaction(txdata)\n+            print(txid)\n+\n+if __name__ == '__main__':\n+    main()\n\\ No newline at end of file"
      },
      {
        "sha": "fad904bc94bf947012ae7ad554dc689af09f5d94",
        "filename": "contrib/testgen/README.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/contrib/testgen/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/contrib/testgen/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/testgen/README.md?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -1,6 +1,6 @@\n ### TestGen ###\n \n-Utilities to generate test vectors for the data-driven Bitcoin tests.\n+Utilities to generate test vectors for the data-driven Blockcash tests.\n \n Usage: \n "
      },
      {
        "sha": "a37c95f544fd1a426b36cd1b7fabd84f940e0d61",
        "filename": "contrib/testgen/gen_base58_test_vectors.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/contrib/testgen/gen_base58_test_vectors.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/contrib/testgen/gen_base58_test_vectors.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/testgen/gen_base58_test_vectors.py?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -18,11 +18,11 @@\n from binascii import b2a_hex\n \n # key types\n-PUBKEY_ADDRESS = 0\n+PUBKEY_ADDRESS = 19\n SCRIPT_ADDRESS = 5\n PUBKEY_ADDRESS_TEST = 111\n SCRIPT_ADDRESS_TEST = 196\n-PRIVKEY = 128\n+PRIVKEY = 156\n PRIVKEY_TEST = 239\n \n metadata_keys = ['isPrivkey', 'isTestnet', 'addrType', 'isCompressed']"
      },
      {
        "sha": "88a88db7e47e91312de995f24c22393d48925e91",
        "filename": "contrib/tidy_datadir.sh",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/contrib/tidy_datadir.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/contrib/tidy_datadir.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/tidy_datadir.sh?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -7,7 +7,7 @@ if [ -d \"$1\" ]; then\n   cd \"$1\"\n else\n   echo \"Usage: $0 <datadir>\" >&2\n-  echo \"Removes obsolete Bitcoin database files\" >&2\n+  echo \"Removes obsolete Blockcash database files\" >&2\n   exit 1\n fi\n \n@@ -19,22 +19,22 @@ if [ -f wallet.dat -a -f peers.dat -a -f chainstate/CURRENT -a -f blocks/index/C\n \n case $LEVEL in\n   0)\n-    echo \"Error: no Bitcoin datadir detected.\"\n+    echo \"Error: no Blockcash datadir detected.\"\n     exit 1\n     ;;\n   1)\n-    echo \"Detected old Bitcoin datadir (before 0.7).\"\n+    echo \"Detected old Blockcash datadir (before 0.7).\"\n     echo \"Nothing to do.\"\n     exit 0\n     ;;\n   2)\n-    echo \"Detected Bitcoin 0.7 datadir.\"\n+    echo \"Detected Blockcash 0.7 datadir.\"\n     ;;\n   3)\n-    echo \"Detected Bitcoin pre-0.8 datadir.\"\n+    echo \"Detected Blockcash pre-0.8 datadir.\"\n     ;;\n   4)\n-    echo \"Detected Bitcoin 0.8 datadir.\"\n+    echo \"Detected Blockcash 0.8 datadir.\"\n     ;;\n esac\n "
      },
      {
        "sha": "e2979be2ceb114b73f3a32700f65498ef2cab394",
        "filename": "depends/README.md",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/depends/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/depends/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/README.md?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -12,9 +12,9 @@ For example:\n \n     make HOST=x86_64-w64-mingw32 -j4\n \n-A prefix will be generated that's suitable for plugging into Bitcoin's\n+A prefix will be generated that's suitable for plugging into Blockcash's\n configure. In the above example, a dir named x86_64-w64-mingw32 will be\n-created. To use it for Bitcoin:\n+created. To use it for Blockcash:\n \n     ./configure --prefix=`pwd`/depends/x86_64-w64-mingw32\n \n@@ -43,7 +43,7 @@ The following can be set when running make: make FOO=bar\n     BUILD_ID_SALT: Optional salt to use when generating build package ids\n \n If some packages are not built, for example `make NO_WALLET=1`, the appropriate\n-options will be passed to bitcoin's configure. In this case, `--disable-wallet`.\n+options will be passed to blockcash's configure. In this case, `--disable-wallet`.\n \n Additional targets:\n "
      },
      {
        "sha": "3e37ca1e5d6dccfa0c14ae45d30ff9f834b35fc5",
        "filename": "doc/README.md",
        "status": "modified",
        "additions": 12,
        "deletions": 19,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/doc/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/doc/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README.md?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -1,41 +1,35 @@\n-Bitcoin Core 0.14.2\n+Blockcash Core 0.14.2\n =====================\n \n Setup\n ---------------------\n-Bitcoin Core is the original Bitcoin client and it builds the backbone of the network. However, it downloads and stores the entire history of Bitcoin transactions (which is currently several GBs); depending on the speed of your computer and network connection, the synchronization process can take anywhere from a few hours to a day or more.\n+Blockcash Core is the original Bitcoin client and it builds the backbone of the network. However, it downloads and stores the entire history of Bitcoin transactions (which is currently several GBs); depending on the speed of your computer and network connection, the synchronization process can take anywhere from a few hours to a day or more.\n \n-To download Bitcoin Core, visit [bitcoincore.org](https://bitcoincore.org/en/releases/).\n+To download Blockcash Core, visit [blockcashcore.org](https://blockcashcore.org/en/releases/).\n \n Running\n ---------------------\n-The following are some helpful notes on how to run Bitcoin on your native platform.\n+The following are some helpful notes on how to run Blockcash on your native platform.\n \n ### Unix\n \n Unpack the files into a directory and run:\n \n-- `bin/bitcoin-qt` (GUI) or\n-- `bin/bitcoind` (headless)\n+- `bin/blockcash-qt` (GUI) or\n+- `bin/blockcash` (headless)\n \n ### Windows\n \n-Unpack the files into a directory, and then run bitcoin-qt.exe.\n+Unpack the files into a directory, and then run blockcash-qt.exe.\n \n ### OS X\n \n-Drag Bitcoin-Core to your applications folder, and then run Bitcoin-Core.\n+Drag Blockcash-Core to your applications folder, and then run Blockcash-Core.\n \n-### Need Help?\n-\n-* See the documentation at the [Bitcoin Wiki](https://en.bitcoin.it/wiki/Main_Page)\n-for help and more information.\n-* Ask for help on [#bitcoin](http://webchat.freenode.net?channels=bitcoin) on Freenode. If you don't have an IRC client use [webchat here](http://webchat.freenode.net?channels=bitcoin).\n-* Ask for help on the [BitcoinTalk](https://bitcointalk.org/) forums, in the [Technical Support board](https://bitcointalk.org/index.php?board=4.0).\n \n Building\n ---------------------\n-The following are developer notes on how to build Bitcoin on your native platform. They are not complete guides, but include notes on the necessary libraries, compile flags, etc.\n+The following are developer notes on how to build Blockcash on your native platform. They are not complete guides, but include notes on the necessary libraries, compile flags, etc.\n \n - [OS X Build Notes](build-osx.md)\n - [Unix Build Notes](build-unix.md)\n@@ -45,7 +39,7 @@ The following are developer notes on how to build Bitcoin on your native platfor\n \n Development\n ---------------------\n-The Bitcoin repo's [root README](/README.md) contains relevant information on the development process and automated testing.\n+The Blockcash repo's [root README](/README.md) contains relevant information on the development process and automated testing.\n \n - [Developer Notes](developer-notes.md)\n - [Release Notes](release-notes.md)\n@@ -61,9 +55,8 @@ The Bitcoin repo's [root README](/README.md) contains relevant information on th\n - [Benchmarking](benchmarking.md)\n \n ### Resources\n-* Discuss on the [BitcoinTalk](https://bitcointalk.org/) forums, in the [Development & Technical Discussion board](https://bitcointalk.org/index.php?board=6.0).\n-* Discuss project-specific development on #bitcoin-core-dev on Freenode. If you don't have an IRC client use [webchat here](http://webchat.freenode.net/?channels=bitcoin-core-dev).\n-* Discuss general Bitcoin development on #bitcoin-dev on Freenode. If you don't have an IRC client use [webchat here](http://webchat.freenode.net/?channels=bitcoin-dev).\n+* Discuss project-specific development on #lockcash-core-dev on Freenode. If you don't have an IRC client use [webchat here](http://webchat.freenode.net/?channels=blockcash-core-dev).\n+* Discuss general Blockcash development on #blockcash-dev on Freenode. If you don't have an IRC client use [webchat here](http://webchat.freenode.net/?channels=blockcash-dev).\n \n ### Miscellaneous\n - [Assets Attribution](assets-attribution.md)"
      },
      {
        "sha": "8a73027881041f9a07948425f0006a021bc18e05",
        "filename": "doc/README_osx.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/doc/README_osx.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/doc/README_osx.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README_osx.md?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -92,6 +92,6 @@ build process to remain somewhat deterministic. Here's how it works:\n   that have been previously (deterministically) built in order to create a\n   final dmg.\n - The Apple keyholder uses this unsigned app to create a detached signature,\n-  using the script that is also included there. Detached signatures are available from this [repository](https://github.com/bitcoin-core/bitcoin-detached-sigs).\n+  using the script that is also included there. Detached signatures are available from this [repository](https://github.com/blockcash/blockcash-detached-sigs).\n - Builders feed the unsigned app + detached signature back into Gitian. It\n   uses the pre-built tools to recombine the pieces into a deterministic dmg."
      },
      {
        "sha": "e8dd410b6497b6ac459f0646d92f68e229e7e941",
        "filename": "doc/README_windows.txt",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/doc/README_windows.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/doc/README_windows.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README_windows.txt?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -1,20 +1,20 @@\n-Bitcoin Core 0.14.2\r\n+Blockcash Core 0.14.2\r\n =====================\r\n \r\n Intro\r\n -----\r\n-Bitcoin is a free open source peer-to-peer electronic cash system that is\r\n+Blockcash is a free open source peer-to-peer electronic cash system that is\r\n completely decentralized, without the need for a central server or trusted\r\n parties.  Users hold the crypto keys to their own money and transact directly\r\n with each other, with the help of a P2P network to check for double-spending.\r\n \r\n \r\n Setup\r\n -----\r\n-Unpack the files into a directory and run bitcoin-qt.exe.\r\n+Unpack the files into a directory and run blockcash-qt.exe.\r\n \r\n-Bitcoin Core is the original Bitcoin client and it builds the backbone of the network.\r\n-However, it downloads and stores the entire history of Bitcoin transactions;\r\n+Blockcash Core is the original Blockcash client and it builds the backbone of the network.\r\n+However, it downloads and stores the entire history of Blockcash transactions;\r\n depending on the speed of your computer and network connection, the synchronization\r\n process can take anywhere from a few hours to a day or more.\r\n \r"
      },
      {
        "sha": "97c0538a4e1fee709ba30a0e4692d0e2dab7807d",
        "filename": "doc/REST-interface.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/doc/REST-interface.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/doc/REST-interface.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/REST-interface.md?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -95,4 +95,4 @@ Only supports JSON as output format.\n \n Risks\n -------------\n-Running a web browser on the same node with a REST enabled bitcoind can be a risk. Accessing prepared XSS websites could read out tx/block data of your node by placing links like `<script src=\"http://127.0.0.1:8332/rest/tx/1234567890.json\">` which might break the nodes privacy.\n+Running a web browser on the same node with a REST enabled blockcashd can be a risk. Accessing prepared XSS websites could read out tx/block data of your node by placing links like `<script src=\"http://127.0.0.1:8332/rest/tx/1234567890.json\">` which might break the nodes privacy."
      },
      {
        "sha": "cdd0ea8a9cffd016a782ebac5b0bb53da4c2bbc7",
        "filename": "doc/assets-attribution.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/doc/assets-attribution.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/doc/assets-attribution.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/assets-attribution.md?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -1 +1 @@\n-The list of assets used in the bitcoin source and their attribution can now be found in [contrib/debian/copyright](../contrib/debian/copyright).\n+The list of assets used in the blockcash source and their attribution can now be found in [contrib/debian/copyright](../contrib/debian/copyright)."
      },
      {
        "sha": "f5409cf438b27675cc543a8cea165cf96882a253",
        "filename": "doc/benchmarking.md",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/doc/benchmarking.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/doc/benchmarking.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/benchmarking.md?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -1,11 +1,11 @@\n Benchmarking\n ============\n \n-Bitcoin Core has an internal benchmarking framework, with benchmarks\n+Blockcash Core has an internal benchmarking framework, with benchmarks\n for cryptographic algorithms such as SHA1, SHA256, SHA512 and RIPEMD160. As well as the rolling bloom filter.\n \n-After compiling bitcoin-core, the benchmarks can be run with:\n-`src/bench/bench_bitcoin`\n+After compiling blockcash-core, the benchmarks can be run with:                     \n+`src/bench/bench_blockcash`\n \n The output will look similar to:\n ```"
      },
      {
        "sha": "513367af1db64596ed1f1308e81b9415a51fa578",
        "filename": "doc/build-openbsd.md",
        "status": "modified",
        "additions": 12,
        "deletions": 12,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/doc/build-openbsd.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/doc/build-openbsd.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-openbsd.md?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -2,7 +2,7 @@ OpenBSD build guide\n ======================\n (updated for OpenBSD 6.0)\n \n-This guide describes how to build bitcoind and command-line utilities on OpenBSD.\n+This guide describes how to build blockcashd and command-line utilities on OpenBSD.\n \n As OpenBSD is most common as a server OS, we will not bother with the GUI.\n \n@@ -18,7 +18,7 @@ pkg_add automake # (select highest version, e.g. 1.15)\n pkg_add python # (select highest version, e.g. 3.5)\n ```\n \n-The default C++ compiler that comes with OpenBSD 5.9 is g++ 4.2. This version is old (from 2007), and is not able to compile the current version of Bitcoin Core, primarily as it has no C++11 support, but even before there were issues. So here we will be installing a newer compiler.\n+The default C++ compiler that comes with OpenBSD 5.9 is g++ 4.2. This version is old (from 2007), and is not able to compile the current version of Blockcash Core, primarily as it has no C++11 support, but even before there were issues. So here we will be installing a newer compiler.\n \n GCC\n -------\n@@ -35,16 +35,16 @@ This compiler will not overwrite the system compiler, it will be installed as `e\n \n Do not use `pkg_add boost`! The boost version installed thus is compiled using the `g++` compiler not `eg++`, which will result in a conflict between `/usr/local/lib/libestdc++.so.XX.0` and `/usr/lib/libstdc++.so.XX.0`, resulting in a test crash:\n \n-    test_bitcoin:/usr/lib/libstdc++.so.57.0: /usr/local/lib/libestdc++.so.17.0 : WARNING: symbol(_ZN11__gnu_debug17_S_debug_me ssagesE) size mismatch, relink your program\n+    test_blockcash:/usr/lib/libstdc++.so.57.0: /usr/local/lib/libestdc++.so.17.0 : WARNING: symbol(_ZN11__gnu_debug17_S_debug_me ssagesE) size mismatch, relink your program\n     ...\n     Segmentation fault (core dumped)\n \n-This makes it necessary to build boost, or at least the parts used by Bitcoin Core, manually:\n+This makes it necessary to build boost, or at least the parts used by Blockcash Core, manually:\n \n ```\n-# Pick some path to install boost to, here we create a directory within the bitcoin directory\n-BITCOIN_ROOT=$(pwd)\n-BOOST_PREFIX=\"${BITCOIN_ROOT}/boost\"\n+# Pick some path to install boost to, here we create a directory within the blockcash directory\n+BLOCKCASH_ROOT=$(pwd)\n+BOOST_PREFIX=\"${BLOCKCASH_ROOT}/boost\"\n mkdir -p $BOOST_PREFIX\n \n # Fetch the source and verify that it is not tampered with\n@@ -58,7 +58,7 @@ cd boost_1_61_0\n # Also here: https://gist.githubusercontent.com/laanwj/bf359281dc319b8ff2e1/raw/92250de8404b97bb99d72ab898f4a8cb35ae1ea3/patch-boost_test_impl_execution_monitor_ipp.patch\n patch -p0 < /usr/ports/devel/boost/patches/patch-boost_test_impl_execution_monitor_ipp\n \n-# Build w/ minimum configuration necessary for bitcoin\n+# Build w/ minimum configuration necessary for blockcash\n echo 'using gcc : : eg++ : <cxxflags>\"-fvisibility=hidden -fPIC\" <linkflags>\"\" <archiver>\"ar\" <striper>\"strip\"  <ranlib>\"ranlib\" <rc>\"\" : ;' > user-config.jam\n config_opts=\"runtime-link=shared threadapi=pthread threading=multi link=static variant=release --layout=tagged --build-type=complete --user-config=user-config.jam -sNO_BZIP2=1\"\n ./bootstrap.sh --without-icu --with-libraries=chrono,filesystem,program_options,system,thread,test\n@@ -74,9 +74,9 @@ See \"Berkeley DB\" in [build_unix.md](build_unix.md) for instructions on how to b\n You cannot use the BerkeleyDB library from ports, for the same reason as boost above (g++/libstd++ incompatibility).\n \n ```bash\n-# Pick some path to install BDB to, here we create a directory within the bitcoin directory\n-BITCOIN_ROOT=$(pwd)\n-BDB_PREFIX=\"${BITCOIN_ROOT}/db4\"\n+# Pick some path to install BDB to, here we create a directory within the Blockcash directory\n+BLOCKCASH_ROOT=$(pwd)\n+BDB_PREFIX=\"${BLOCKCASH_ROOT}/db4\"\n mkdir -p $BDB_PREFIX\n \n # Fetch the source and verify that it is not tampered with\n@@ -108,7 +108,7 @@ The change will only affect the current shell and processes spawned by it. To\n make the change system-wide, change `datasize-cur` and `datasize-max` in\n `/etc/login.conf`, and reboot.\n \n-### Building Bitcoin Core\n+### Building Blockcash Core\n \n **Important**: use `gmake`, not `make`. The non-GNU `make` will exit with a horrible error.\n "
      },
      {
        "sha": "b02d484eab267f95372d994cfcb952e2245fa4fc",
        "filename": "doc/build-osx.md",
        "status": "modified",
        "additions": 16,
        "deletions": 16,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/doc/build-osx.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/doc/build-osx.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-osx.md?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -24,17 +24,17 @@ If you want to build the disk image with `make deploy` (.dmg / optional), you ne\n \n NOTE: Building with Qt4 is still supported, however, could result in a broken UI. Building with Qt5 is recommended.\n \n-Build Bitcoin Core\n+Build Blockcash Core\n ------------------------\n \n-1. Clone the bitcoin source code and cd into `bitcoin`\n+1. Clone the blockcash source code and cd into `blockcash`\n \n-        git clone https://github.com/bitcoin/bitcoin\n-        cd bitcoin\n+        git clone https://github.com/blockcash/blockcash\n+        cd blockcash\n \n-2.  Build bitcoin-core:\n+2.  Build blockcash-core:\n \n-    Configure and build the headless bitcoin binaries as well as the GUI (if Qt is found).\n+    Configure and build the headless blockcash binaries as well as the GUI (if Qt is found).\n \n     You can disable the GUI build by passing `--without-gui` to configure.\n \n@@ -53,37 +53,37 @@ Build Bitcoin Core\n Running\n -------\n \n-Bitcoin Core is now available at `./src/bitcoind`\n+Blockcash Core is now available at `./src/blockcashd`\n \n Before running, it's recommended you create an RPC configuration file.\n \n-    echo -e \"rpcuser=bitcoinrpc\\nrpcpassword=$(xxd -l 16 -p /dev/urandom)\" > \"/Users/${USER}/Library/Application Support/Bitcoin/bitcoin.conf\"\n+    echo -e \"rpcuser=blockcashrpc\\nrpcpassword=$(xxd -l 16 -p /dev/urandom)\" > \"/Users/${USER}/Library/Application Support/Bitcoin/bitcoin.conf\"\n \n-    chmod 600 \"/Users/${USER}/Library/Application Support/Bitcoin/bitcoin.conf\"\n+    chmod 600 \"/Users/${USER}/Library/Application Support/Blockcash/blockcash.conf\"\n \n-The first time you run bitcoind, it will start downloading the blockchain. This process could take several hours.\n+The first time you run blockcashd, it will start downloading the blockchain. This process could take several hours.\n \n You can monitor the download process by looking at the debug.log file:\n \n-    tail -f $HOME/Library/Application\\ Support/Bitcoin/debug.log\n+    tail -f $HOME/Library/Application\\ Support/Blockcash/debug.log\n \n Other commands:\n -------\n \n-    ./src/bitcoind -daemon # Starts the bitcoin daemon.\n-    ./src/bitcoin-cli --help # Outputs a list of command-line options.\n-    ./src/bitcoin-cli help # Outputs a list of RPC commands when the daemon is running.\n+    ./src/blockcashd -daemon # Starts the blockcash daemon.\n+    ./src/blockcash-cli --help # Outputs a list of command-line options.\n+    ./src/blockcash-cli help # Outputs a list of RPC commands when the daemon is running.\n \n Using Qt Creator as IDE\n ------------------------\n-You can use Qt Creator as an IDE, for bitcoin development.\n+You can use Qt Creator as an IDE, for blockcash development.\n Download and install the community edition of [Qt Creator](https://www.qt.io/download/).\n Uncheck everything except Qt Creator during the installation process.\n \n 1. Make sure you installed everything through Homebrew mentioned above\n 2. Do a proper ./configure --enable-debug\n 3. In Qt Creator do \"New Project\" -> Import Project -> Import Existing Project\n-4. Enter \"bitcoin-qt\" as project name, enter src/qt as location\n+4. Enter \"blockcash-qt\" as project name, enter src/qt as location\n 5. Leave the file selection as it is\n 6. Confirm the \"summary page\"\n 7. In the \"Projects\" tab select \"Manage Kits...\""
      },
      {
        "sha": "8b76575d7cc377993145ccb62af7c7b35ca03265",
        "filename": "doc/build-unix.md",
        "status": "modified",
        "additions": 22,
        "deletions": 22,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/doc/build-unix.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/doc/build-unix.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-unix.md?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -1,12 +1,12 @@\n UNIX BUILD NOTES\n ====================\n-Some notes on how to build Bitcoin Core in Unix.\n+Some notes on how to build Blockcash Core in Unix.\n \n (for OpenBSD specific instructions, see [build-openbsd.md](build-openbsd.md))\n \n Note\n ---------------------\n-Always use absolute paths to configure and compile bitcoin and the dependencies,\n+Always use absolute paths to configure and compile blockcash and the dependencies,\n for example, when specifying the path of the dependency:\n \n \t../dist/configure --enable-cxx --disable-shared --with-pic --prefix=$BDB_PREFIX\n@@ -24,7 +24,7 @@ make\n make install # optional\n ```\n \n-This will build bitcoin-qt as well if the dependencies are met.\n+This will build blockcash-qt as well if the dependencies are met.\n \n Dependencies\n ---------------------\n@@ -55,7 +55,7 @@ Memory Requirements\n --------------------\n \n C++ compilers are memory-hungry. It is recommended to have at least 1.5 GB of\n-memory available when compiling Bitcoin Core. On systems with less, gcc can be\n+memory available when compiling Blockcash Core. On systems with less, gcc can be\n tuned to conserve memory with additional CXXFLAGS:\n \n \n@@ -94,7 +94,7 @@ BerkeleyDB 5.1 or later, which break binary wallet compatibility with the distri\n are based on BerkeleyDB 4.8. If you do not care about wallet compatibility,\n pass `--with-incompatible-bdb` to configure.\n \n-See the section \"Disable-wallet mode\" to build Bitcoin Core without wallet.\n+See the section \"Disable-wallet mode\" to build Blockcash Core without wallet.\n \n Optional (see --with-miniupnpc and --enable-upnp-default):\n \n@@ -107,7 +107,7 @@ ZMQ dependencies (provides ZMQ API 4.x):\n Dependencies for the GUI: Ubuntu & Debian\n -----------------------------------------\n \n-If you want to build Bitcoin-Qt, make sure that the required packages for Qt development\n+If you want to build Blockcash-Qt, make sure that the required packages for Qt development\n are installed. Either Qt 5 or Qt 4 are necessary to build the GUI.\n If both Qt 4 and Qt 5 are installed, Qt 5 will be used. Pass `--with-gui=qt4` to configure to choose Qt4.\n To build without GUI pass `--without-gui`.\n@@ -124,7 +124,7 @@ libqrencode (optional) can be installed with:\n \n     sudo apt-get install libqrencode-dev\n \n-Once these are installed, they will be found by configure and a bitcoin-qt executable will be\n+Once these are installed, they will be found by configure and a blockcash-qt executable will be\n built by default.\n \n Dependency Build Instructions: Fedora\n@@ -147,7 +147,7 @@ libqrencode (optional) can be installed with:\n \n Notes\n -----\n-The release is built with GCC and then \"strip bitcoind\" to strip the debug\n+The release is built with GCC and then \"strip blockcashd\" to strip the debug\n symbols, which reduces the executable size by about 90%.\n \n \n@@ -168,10 +168,10 @@ Berkeley DB\n It is recommended to use Berkeley DB 4.8. If you have to build it yourself:\n \n ```bash\n-BITCOIN_ROOT=$(pwd)\n+BLOCKCASH_ROOT=$(pwd)\n \n-# Pick some path to install BDB to, here we create a directory within the bitcoin directory\n-BDB_PREFIX=\"${BITCOIN_ROOT}/db4\"\n+# Pick some path to install BDB to, here we create a directory within the blockcash directory\n+BDB_PREFIX=\"${BLOCKCASH_ROOT}/db4\"\n mkdir -p $BDB_PREFIX\n \n # Fetch the source and verify that it is not tampered with\n@@ -186,8 +186,8 @@ cd db-4.8.30.NC/build_unix/\n ../dist/configure --enable-cxx --disable-shared --with-pic --prefix=$BDB_PREFIX\n make install\n \n-# Configure Bitcoin Core to use our own-built instance of BDB\n-cd $BITCOIN_ROOT\n+# Configure lockcash Core to use our own-built instance of BDB\n+cd $BLOCKCASH_ROOT\n ./autogen.sh\n ./configure LDFLAGS=\"-L${BDB_PREFIX}/lib/\" CPPFLAGS=\"-I${BDB_PREFIX}/include/\" # (other args...)\n ```\n@@ -205,7 +205,7 @@ If you need to build Boost yourself:\n \n Security\n --------\n-To help make your bitcoin installation more secure by making certain attacks impossible to\n+To help make your blockcash installation more secure by making certain attacks impossible to\n exploit even if a vulnerability is found, binaries are hardened by default.\n This can be disabled with:\n \n@@ -229,7 +229,7 @@ Hardening enables the following features:\n \n     To test that you have built PIE executable, install scanelf, part of paxutils, and use:\n \n-    \tscanelf -e ./bitcoin\n+    \tscanelf -e ./blockcash\n \n     The output should contain:\n \n@@ -238,13 +238,13 @@ Hardening enables the following features:\n \n * Non-executable Stack\n     If the stack is executable then trivial stack based buffer overflow exploits are possible if\n-    vulnerable buffers are found. By default, bitcoin should be built with a non-executable stack\n+    vulnerable buffers are found. By default, blockcash should be built with a non-executable stack\n     but if one of the libraries it uses asks for an executable stack or someone makes a mistake\n     and uses a compiler extension which requires an executable stack, it will silently build an\n     executable without the non-executable stack protection.\n \n     To verify that the stack is non-executable after compiling use:\n-    `scanelf -e ./bitcoin`\n+    `scanelf -e ./blockcash`\n \n     the output should contain:\n \tSTK/REL/PTL\n@@ -254,7 +254,7 @@ Hardening enables the following features:\n \n Disable-wallet mode\n --------------------\n-When the intention is to run only a P2P node without a wallet, bitcoin may be compiled in\n+When the intention is to run only a P2P node without a wallet, blockcash may be compiled in\n disable-wallet mode with:\n \n     ./configure --disable-wallet\n@@ -276,8 +276,8 @@ Setup and Build Example: Arch Linux\n This example lists the steps necessary to setup and build a command line only, non-wallet distribution of the latest changes on Arch Linux:\n \n     pacman -S git base-devel boost libevent python\n-    git clone https://github.com/bitcoin/bitcoin.git\n-    cd bitcoin/\n+    git clone https://github.com/blockcash/blockcash.git\n+    cd blockcash/\n     ./autogen.sh\n     ./configure --disable-wallet --without-gui --without-miniupnpc\n     make check\n@@ -286,7 +286,7 @@ Note:\n Enabling wallet support requires either compiling against a Berkeley DB newer than 4.8 (package `db`) using `--with-incompatible-bdb`,\n or building and depending on a local version of Berkeley DB 4.8. The readily available Arch Linux packages are currently built using\n `--with-incompatible-bdb` according to the [PKGBUILD](https://projects.archlinux.org/svntogit/community.git/tree/bitcoin/trunk/PKGBUILD).\n-As mentioned above, when maintaining portability of the wallet between the standard Bitcoin Core distributions and independently built\n+As mentioned above, when maintaining portability of the wallet between the standard Blockcash Core distributions and independently built\n node software is desired, Berkeley DB 4.8 must be used.\n \n \n@@ -334,7 +334,7 @@ For the wallet (optional):\n This will give a warning \"configure: WARNING: Found Berkeley DB other\n than 4.8; wallets opened by this build will not be portable!\", but as FreeBSD never\n had a binary release, this may not matter. If backwards compatibility\n-with 4.8-built Bitcoin Core is needed follow the steps under \"Berkeley DB\" above.\n+with 4.8-built Blockcash Core is needed follow the steps under \"Berkeley DB\" above.\n \n Then build using:\n "
      },
      {
        "sha": "b8a085be0b12d473181a506eb251b8bbfabe8929",
        "filename": "doc/build-windows.md",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/doc/build-windows.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/doc/build-windows.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-windows.md?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -1,7 +1,7 @@\n WINDOWS BUILD NOTES\n ====================\n \n-Below are some notes on how to build Bitcoin Core for Windows.\n+Below are some notes on how to build Blockcash Core for Windows.\n \n Most developers use cross-compilation from Ubuntu to build executables for\n Windows. This is also used to build the release binaries.\n@@ -99,6 +99,6 @@ Installation\n After building using the Windows subsystem it can be useful to copy the compiled\n executables to a directory on the windows drive in the same directory structure\n as they appear in the release `.zip` archive. This can be done in the following\n-way. This will install to `c:\\workspace\\bitcoin`, for example:\n+way. This will install to `c:\\workspace\\blockcash`, for example:\n \n-    make install DESTDIR=/mnt/c/workspace/bitcoin\n+    make install DESTDIR=/mnt/c/workspace/blockcash"
      },
      {
        "sha": "61ee5a18a6d491798c982b05a1e61e2e33b1084b",
        "filename": "doc/developer-notes.md",
        "status": "modified",
        "additions": 10,
        "deletions": 10,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/doc/developer-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/doc/developer-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/developer-notes.md?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -128,7 +128,7 @@ to see it.\n \n **testnet and regtest modes**\n \n-Run with the -testnet option to run with \"play bitcoins\" on the test network, if you\n+Run with the -testnet option to run with \"play blockcashs\" on the test network, if you\n are testing multi-machine code that needs to operate across the internet.\n \n If you are testing something that can run on one machine, run with the -regtest option.\n@@ -137,7 +137,7 @@ that run in -regtest mode.\n \n **DEBUG_LOCKORDER**\n \n-Bitcoin Core is a multithreaded application, and deadlocks or other multithreading bugs\n+Blockcash Core is a multithreaded application, and deadlocks or other multithreading bugs\n can be very difficult to track down. Compiling with -DDEBUG_LOCKORDER (configure\n CXXFLAGS=\"-DDEBUG_LOCKORDER -g\") inserts run-time checks to keep track of which locks\n are held, and adds warnings to the debug.log file if inconsistencies are detected.\n@@ -186,7 +186,7 @@ Threads\n \n - ThreadRPCServer : Remote procedure call handler, listens on port 8332 for connections and services them.\n \n-- BitcoinMiner : Generates bitcoins (if wallet is enabled).\n+- BlockcashMiner : Generates blockcashs (if wallet is enabled).\n \n - Shutdown : Does an orderly shutdown of everything.\n \n@@ -196,7 +196,7 @@ Ignoring IDE/editor files\n In closed-source environments in which everyone uses the same IDE it is common\n to add temporary files it produces to the project-wide `.gitignore` file.\n \n-However, in open source software such as Bitcoin Core, where everyone uses\n+However, in open source software such as Blockcash Core, where everyone uses\n their own editors/IDE/tools, it is less common. Only you know what files your\n editor produces and this may change from version to version. The canonical way\n to do this is thus to create your local gitignore. Add this to `~/.gitconfig`:\n@@ -226,9 +226,9 @@ Development guidelines\n ============================\n \n A few non-style-related recommendations for developers, as well as points to\n-pay attention to for reviewers of Bitcoin Core code.\n+pay attention to for reviewers of Blockcash Core code.\n \n-General Bitcoin Core\n+General Blockcash Core\n ----------------------\n \n - New features should be exposed on RPC first, then can be made available in the GUI\n@@ -338,7 +338,7 @@ Strings and formatting\n \n - For `strprintf`, `LogPrint`, `LogPrintf` formatting characters don't need size specifiers\n \n-  - *Rationale*: Bitcoin Core uses tinyformat, which is type safe. Leave them out to avoid confusion\n+  - *Rationale*: Blockcash Core uses tinyformat, which is type safe. Leave them out to avoid confusion\n \n Variable names\n --------------\n@@ -422,12 +422,12 @@ Subtrees\n \n Several parts of the repository are subtrees of software maintained elsewhere.\n \n-Some of these are maintained by active developers of Bitcoin Core, in which case changes should probably go\n+Some of these are maintained by active developers of Blockcash Core, in which case changes should probably go\n directly upstream without being PRed directly against the project.  They will be merged back in the next\n subtree merge.\n \n Others are external projects without a tight relationship with our project.  Changes to these should also\n-be sent upstream but bugfixes may also be prudent to PR against Bitcoin Core so that they can be integrated\n+be sent upstream but bugfixes may also be prudent to PR against Blockcash Core so that they can be integrated\n quickly.  Cosmetic changes should be purely taken upstream.\n \n There is a tool in contrib/devtools/git-subtree-check.sh to check a subtree directory for consistency with\n@@ -490,7 +490,7 @@ Git and GitHub tips\n \n         [remote \"upstream-pull\"]\n                 fetch = +refs/pull/*:refs/remotes/upstream-pull/*\n-                url = git@github.com:bitcoin/bitcoin.git\n+                url = git@github.com:blockcash/blockcash.git\n \n   This will add an `upstream-pull` remote to your git repository, which can be fetched using `git fetch --all`\n   or `git fetch upstream-pull`. Afterwards, you can use `upstream-pull/NUMBER/head` in arguments to `git show`,"
      },
      {
        "sha": "a6b58ed10d01e9f2a070eb134ca93a1aecb382c0",
        "filename": "doc/dnsseed-policy.md",
        "status": "modified",
        "additions": 8,
        "deletions": 9,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/doc/dnsseed-policy.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/doc/dnsseed-policy.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/dnsseed-policy.md?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -1,12 +1,12 @@\n Expectations for DNS Seed operators\n ====================================\n \n-Bitcoin Core attempts to minimize the level of trust in DNS seeds,\n+Blockcash Core attempts to minimize the level of trust in DNS seeds,\n but DNS seeds still pose a small amount of risk for the network.\n As such, DNS seeds must be run by entities which have some minimum\n-level of trust within the Bitcoin community.\n+level of trust within the Blockcash community.\n \n-Other implementations of Bitcoin software may also use the same\n+Other implementations of Blockcash software may also use the same\n seeds and may be more exposed. In light of this exposure, this\n document establishes some basic expectations for operating dnsseeds.\n \n@@ -16,7 +16,7 @@ and not sell or transfer control of the DNS seed. Any hosting services\n contracted by the operator are equally expected to uphold these expectations.\n \n 1. The DNS seed results must consist exclusively of fairly selected and\n-functioning Bitcoin nodes from the public network to the best of the\n+functioning Blockcash nodes from the public network to the best of the\n operator's understanding and capability.\n \n 2. For the avoidance of doubt, the results may be randomized but must not\n@@ -26,7 +26,7 @@ urgent technical necessity and disclosed.\n 3. The results may not be served with a DNS TTL of less than one minute.\n \n 4. Any logging of DNS queries should be only that which is necessary\n-for the operation of the service or urgent health of the Bitcoin\n+for the operation of the service or urgent health of the Blockcash\n network and must not be retained longer than necessary nor disclosed\n to any third party.\n \n@@ -42,13 +42,12 @@ details of their operating practices.\n related to the DNS seed operation.\n \n If these expectations cannot be satisfied the operator should\n-discontinue providing services and contact the active Bitcoin\n-Core development team as well as posting on\n-[bitcoin-dev](https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev).\n+discontinue providing services and contact the active Blockcash\n+\n \n Behavior outside of these expectations may be reasonable in some\n situations but should be discussed in public in advance.\n \n See also\n ----------\n-- [bitcoin-seeder](https://github.com/sipa/bitcoin-seeder) is a reference implementation of a DNS seed.\n+"
      },
      {
        "sha": "e2268ff4535aa70cd14d3cf48e42466cd0b2eac2",
        "filename": "doc/files.md",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/doc/files.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/doc/files.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/files.md?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -1,14 +1,14 @@\n \n * banlist.dat: stores the IPs/Subnets of banned nodes\n-* bitcoin.conf: contains configuration settings for bitcoind or bitcoin-qt\n-* bitcoind.pid: stores the process id of bitcoind while running\n+* blockcash.conf: contains configuration settings for blockcashd or blockcash-qt\n+* blockcashd.pid: stores the process id of blockcashd while running\n * blocks/blk000??.dat: block data (custom, 128 MiB per file); since 0.8.0\n * blocks/rev000??.dat; block undo data (custom); since 0.8.0 (format changed since pre-0.8)\n * blocks/index/*; block index (LevelDB); since 0.8.0\n * chainstate/*; block chain state database (LevelDB); since 0.8.0\n * database/*: BDB database environment; only used for wallet since 0.8.0\n * db.log: wallet database log file\n-* debug.log: contains debug information and general logging generated by bitcoind or bitcoin-qt\n+* debug.log: contains debug information and general logging generated by blockcash or blockcash-qt\n * fee_estimates.dat: stores statistics used to estimate minimum transaction fees and priorities required for confirmation; since 0.10.0\n * mempool.dat: dump of the mempool's transactions; since 0.14.0.\n * peers.dat: peer IP address database (custom format); since 0.7.0"
      },
      {
        "sha": "b124ea1f36d2e53c1f3fa22d693513e7350723cb",
        "filename": "doc/fuzzing.md",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/doc/fuzzing.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/doc/fuzzing.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/fuzzing.md?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -1,7 +1,7 @@\n-Fuzz-testing Bitcoin Core\n+Fuzz-testing Blockcash Core\n ==========================\n \n-A special test harness `test_bitcoin_fuzzy` is provided to provide an easy\n+A special test harness `test_blockcash_fuzzy` is provided to provide an easy\n entry point for fuzzers and the like. In this document we'll describe how to\n use it with AFL.\n \n@@ -20,13 +20,13 @@ export AFLPATH=$PWD\n Instrumentation\n ----------------\n \n-To build Bitcoin Core using AFL instrumentation (this assumes that the\n+To build Blockcash Core using AFL instrumentation (this assumes that the\n `AFLPATH` was set as above):\n ```\n ./configure --disable-ccache --disable-shared --enable-tests CC=${AFLPATH}/afl-gcc CXX=${AFLPATH}/afl-g++\n export AFL_HARDEN=1\n cd src/\n-make test/test_bitcoin_fuzzy\n+make test/test_blockcash_fuzzy\n ```\n We disable ccache because we don't want to pollute the ccache with instrumented\n objects, and similarly don't want to use non-instrumented cached objects linked\n@@ -58,7 +58,7 @@ Fuzzing\n \n To start the actual fuzzing use:\n ```\n-$AFLPATH/afl-fuzz -i ${AFLIN} -o ${AFLOUT} -m52 -- test/test_bitcoin_fuzzy\n+$AFLPATH/afl-fuzz -i ${AFLIN} -o ${AFLOUT} -m52 -- test/test_blockcash_fuzzy\n ```\n \n You may have to change a few kernel parameters to test optimally - `afl-fuzz`"
      },
      {
        "sha": "c0f0f8331c157762525e44b13191d8ea83031785",
        "filename": "doc/gitian-building.md",
        "status": "modified",
        "additions": 27,
        "deletions": 27,
        "changes": 54,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/doc/gitian-building.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/doc/gitian-building.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building.md?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -1,17 +1,17 @@\n Gitian building\n ================\n \n-*Setup instructions for a Gitian build of Bitcoin Core using a Debian VM or physical system.*\n+*Setup instructions for a Gitian build of Blockcash Core using a Debian VM or physical system.*\n \n-Gitian is the deterministic build process that is used to build the Bitcoin\n+Gitian is the deterministic build process that is used to build the Blockcash\n Core executables. It provides a way to be reasonably sure that the\n executables are really built from the source on GitHub. It also makes sure that\n the same, tested dependencies are used and statically built into the executable.\n \n Multiple developers build the source code by following a specific descriptor\n (\"recipe\"), cryptographically sign the result, and upload the resulting signature.\n These results are compared and only if they match, the build is accepted and uploaded\n-to bitcoin.org.\n+to Blockcash.org.\n \n More independent Gitian builders are needed, which is why this guide exists.\n It is preferred you follow these steps yourself instead of using someone else's\n@@ -26,7 +26,7 @@ Table of Contents\n - [Installing Gitian](#installing-gitian)\n - [Setting up the Gitian image](#setting-up-the-gitian-image)\n - [Getting and building the inputs](#getting-and-building-the-inputs)\n-- [Building Bitcoin Core](#building-bitcoin-core)\n+- [Building Blockcash Core](#building-blockcash-core)\n - [Building an alternative repository](#building-an-alternative-repository)\n - [Signing externally](#signing-externally)\n - [Uploading signatures](#uploading-signatures)\n@@ -305,12 +305,12 @@ cd ..\n \n **Note**: When sudo asks for a password, enter the password for the user *debian* not for *root*.\n \n-Clone the git repositories for bitcoin and Gitian.\n+Clone the git repositories for Blockcash and Gitian.\n \n ```bash\n git clone https://github.com/devrandom/gitian-builder.git\n-git clone https://github.com/bitcoin/bitcoin\n-git clone https://github.com/bitcoin-core/gitian.sigs.git\n+git clone https://github.com/blockcash/blockcash\n+git clone https://github.com/blockcash/gitian.sigs.git\n ```\n \n Setting up the Gitian image\n@@ -339,15 +339,15 @@ Getting and building the inputs\n At this point you have two options, you can either use the automated script (found in [contrib/gitian-build.sh](/contrib/gitian-build.sh)) or you could manually do everything by following this guide. If you're using the automated script, then run it with the \"--setup\" command. Afterwards, run it with the \"--build\" command (example: \"contrib/gitian-building.sh -b signer 0.13.0\"). Otherwise ignore this.\n \n Follow the instructions in [doc/release-process.md](release-process.md#fetch-and-create-inputs-first-time-or-when-dependency-versions-change)\n-in the bitcoin repository under 'Fetch and create inputs' to install sources which require\n+in the blockcash repository under 'Fetch and create inputs' to install sources which require\n manual intervention. Also optionally follow the next step: 'Seed the Gitian sources cache\n and offline git repositories' which will fetch the remaining files required for building\n offline.\n \n-Building Bitcoin Core\n+Building Blockcash Core\n ----------------\n \n-To build Bitcoin Core (for Linux, OS X and Windows) just follow the steps under 'perform\n+To build Blockcash Core (for Linux, OS X and Windows) just follow the steps under 'perform\n Gitian builds' in [doc/release-process.md](release-process.md#perform-gitian-builds) in the bitcoin repository.\n \n This may take some time as it will build all the dependencies needed for each descriptor.\n@@ -362,12 +362,12 @@ tail -f var/build.log\n \n Output from `gbuild` will look something like\n \n-    Initialized empty Git repository in /home/debian/gitian-builder/inputs/bitcoin/.git/\n+    Initialized empty Git repository in /home/debian/gitian-builder/inputs/blockcash/.git\n     remote: Counting objects: 57959, done.\n     remote: Total 57959 (delta 0), reused 0 (delta 0), pack-reused 57958\n     Receiving objects: 100% (57959/57959), 53.76 MiB | 484.00 KiB/s, done.\n     Resolving deltas: 100% (41590/41590), done.\n-    From https://github.com/bitcoin/bitcoin\n+    From https://github.com/blockcash/blockcash\n     ... (new tags, new branch etc)\n     --- Building for trusty amd64 ---\n     Stopping target if it is up\n@@ -393,18 +393,18 @@ and inputs.\n \n For example:\n ```bash\n-URL=https://github.com/laanwj/bitcoin.git\n+URL=https://github.com/Xoinproject/blockcash.git\n COMMIT=2014_03_windows_unicode_path\n-./bin/gbuild --commit bitcoin=${COMMIT} --url bitcoin=${URL} ../bitcoin/contrib/gitian-descriptors/gitian-linux.yml\n-./bin/gbuild --commit bitcoin=${COMMIT} --url bitcoin=${URL} ../bitcoin/contrib/gitian-descriptors/gitian-win.yml\n-./bin/gbuild --commit bitcoin=${COMMIT} --url bitcoin=${URL} ../bitcoin/contrib/gitian-descriptors/gitian-osx.yml\n+./bin/gbuild --commit blockcash=${COMMIT} --url blockcash=${URL} ../blockcash/contrib/gitian-descriptors/gitian-linux.yml\n+./bin/gbuild --commit blockcash=${COMMIT} --url blockcash=${URL} ../blockcash/contrib/gitian-descriptors/gitian-win.yml\n+./bin/gbuild --commit blockcash=${COMMIT} --url blockcash=${URL} ../blockcash/contrib/gitian-descriptors/gitian-osx.yml\n ```\n \n Building fully offline\n -----------------------\n \n For building fully offline including attaching signatures to unsigned builds, the detached-sigs repository\n-and the bitcoin git repository with the desired tag must both be available locally, and then gbuild must be\n+and the blockcash git repository with the desired tag must both be available locally, and then gbuild must be\n told where to find them. It also requires an apt-cacher-ng which is fully-populated but set to offline mode, or\n manually disabling gitian-builder's use of apt-get to update the VM build environment.\n \n@@ -423,7 +423,7 @@ cd /path/to/gitian-builder\n LXC_ARCH=amd64 LXC_SUITE=trusty on-target -u root apt-get update\n LXC_ARCH=amd64 LXC_SUITE=trusty on-target -u root \\\n   -e DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends -y install \\\n-  $( sed -ne '/^packages:/,/[^-] .*/ {/^- .*/{s/\"//g;s/- //;p}}' ../bitcoin/contrib/gitian-descriptors/*|sort|uniq )\n+  $( sed -ne '/^packages:/,/[^-] .*/ {/^- .*/{s/\"//g;s/- //;p}}' ../blockcash/contrib/gitian-descriptors/*|sort|uniq )\n LXC_ARCH=amd64 LXC_SUITE=trusty on-target -u root apt-get -q -y purge grub\n LXC_ARCH=amd64 LXC_SUITE=trusty on-target -u root -e DEBIAN_FRONTEND=noninteractive apt-get -y dist-upgrade\n ```\n@@ -443,12 +443,12 @@ Then when building, override the remote URLs that gbuild would otherwise pull fr\n ```bash\n \n cd /some/root/path/\n-git clone https://github.com/bitcoin-core/bitcoin-detached-sigs.git\n+git clone https://github.com/blockcash/blockcash-detached-sigs.git\n \n-BTCPATH=/some/root/path/bitcoin\n-SIGPATH=/some/root/path/bitcoin-detached-sigs\n+BTCPATH=/some/root/path/blockcash\n+SIGPATH=/some/root/path/blockcash-detached-sigs\n \n-./bin/gbuild --url bitcoin=${BTCPATH},signature=${SIGPATH} ../bitcoin/contrib/gitian-descriptors/gitian-win-signer.yml\n+./bin/gbuild --url blockcash=${BTCPATH},signature=${SIGPATH} ../blockcash/contrib/gitian-descriptors/gitian-win-signer.yml\n ```\n \n Signing externally\n@@ -463,9 +463,9 @@ When you execute `gsign` you will get an error from GPG, which can be ignored. C\n in `gitian.sigs` to your signing machine and do\n \n ```bash\n-    gpg --detach-sign ${VERSION}-linux/${SIGNER}/bitcoin-linux-build.assert\n-    gpg --detach-sign ${VERSION}-win/${SIGNER}/bitcoin-win-build.assert\n-    gpg --detach-sign ${VERSION}-osx-unsigned/${SIGNER}/bitcoin-osx-build.assert\n+    gpg --detach-sign ${VERSION}-linux/${SIGNER}/blockcash-linux-build.assert\n+    gpg --detach-sign ${VERSION}-win/${SIGNER}/blockcash-win-build.assert\n+    gpg --detach-sign ${VERSION}-osx-unsigned/${SIGNER}/blockcash-osx-build.assert\n ```\n \n This will create the `.sig` files that can be committed together with the `.assert` files to assert your\n@@ -475,5 +475,5 @@ Uploading signatures\n ---------------------\n \n After building and signing you can push your signatures (both the `.assert` and `.assert.sig` files) to the\n-[bitcoin-core/gitian.sigs](https://github.com/bitcoin-core/gitian.sigs/) repository, or if that's not possible create a pull\n-request. You can also mail the files to Wladimir (laanwj@gmail.com) and he will commit them.\n+[blockcash-core/gitian.sigs](https://github.com/blockcash/gitian..sigs/) repository, or if that's not possible create a pull\n+request. You can also mail the files to Blockcash Dev (blockcashcoin@gmail.com) and he will commit them."
      },
      {
        "sha": "81857070843f05c26f27cf21b7a2b819bf324bd3",
        "filename": "doc/reduce-traffic.md",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/doc/reduce-traffic.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/doc/reduce-traffic.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/reduce-traffic.md?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -3,7 +3,7 @@ Reduce Traffic\n \n Some node operators need to deal with bandwidth caps imposed by their ISPs.\n \n-By default, bitcoin-core allows up to 125 connections to different peers, 8 of\n+By default, blockcash-core allows up to 125 connections to different peers, 8 of\n which are outbound. You can therefore, have at most 117 inbound connections.\n \n The default settings can result in relatively significant traffic consumption.\n@@ -33,5 +33,5 @@ blocks and transactions to fewer nodes.\n ## 3. Reduce maximum connections (`-maxconnections=<num>`)\n \n Reducing the maximum connected nodes to a minimum could be desirable if traffic\n-limits are tiny. Keep in mind that bitcoin's trustless model works best if you are\n+limits are tiny. Keep in mind that blockcash's trustless model works best if you are\n connected to a handful of nodes."
      },
      {
        "sha": "9c8c62d1bd9493ed3a4985867ea76cd280d17ba6",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 13,
        "deletions": 3,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -82,7 +82,17 @@ Low-level RPC changes\n miniupnp CVE-2017-8798\n ----------------------------\n \n-[todo]\n+Bundled miniupnpc was updated to 2.0.20170509. This fixes an integer signedness error\n+(present in MiniUPnPc v1.4.20101221 through v2.0) that allows remote attackers\n+(within the LAN) to cause a denial of service or possibly have unspecified\n+other impact.\n+\n+This only affects users that have explicitly enabled UPnP through the GUI\n+setting or through the `-upnp` option, as since the last UPnP vulnerability\n+(in Bitcoin Core 0.10.3) it has been disabled by default.\n+\n+If you use this option, it is recommended to upgrade to this version as soon as\n+possible.\n \n Known Bugs\n ==========\n@@ -106,10 +116,10 @@ git merge commit are mentioned.\n \n ### P2P protocol and network code\n - #10424 `37a8fc5` Populate services in GetLocalAddress (morcos)\n-- #10441 `9e3ad50` net: only enforce expected services for half of outgoing connections (theuni)\n+- #10441 `9e3ad50` Only enforce expected services for half of outgoing connections (theuni)\n \n ### Build system\n-- #10414 `ffb0c4b` [depends] miniupnpc 2.0.20170509 (fanquake)\n+- #10414 `ffb0c4b` miniupnpc 2.0.20170509 (fanquake)\n - #10228 `ae479bc` Regenerate bitcoin-config.h as necessary (theuni)\n \n ### Miscellaneous"
      },
      {
        "sha": "9b5c6ed1990343b85b795eb408fb3161b98e8b48",
        "filename": "doc/release-process.md",
        "status": "modified",
        "additions": 71,
        "deletions": 71,
        "changes": 142,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/doc/release-process.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/doc/release-process.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-process.md?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -3,9 +3,9 @@ Release Process\n \n Before every release candidate:\n \n-* Update translations (ping wumpus on IRC) see [translation_process.md](https://github.com/bitcoin/bitcoin/blob/master/doc/translation_process.md#synchronising-translations).\n+* Update translations (ping wumpus on IRC) see [translation_process.md](https://github.com/blockcash/blockcash/lob/master/doc/translation_process.md#synchronising-translations).\n \n-* Update manpages, see [gen-manpages.sh](https://github.com/bitcoin/bitcoin/blob/master/contrib/devtools/README.md#gen-manpagessh).\n+* Update manpages, see [gen-manpages.sh](https://github.com/blockcash/blockcash/blob/master/contrib/devtools/README.md#gen-manpagessh).\n \n Before every minor and major release:\n \n@@ -21,7 +21,7 @@ Before every minor and major release:\n \n Before every major release:\n \n-* Update hardcoded [seeds](/contrib/seeds/README.md), see [this pull request](https://github.com/bitcoin/bitcoin/pull/7415) for an example.\n+* Update hardcoded [seeds](/contrib/seeds/README.md), see [this pull request](https://github.com/blockcash/blockcash/pull/7415) for an example.\n * Update [`BLOCK_CHAIN_SIZE`](/src/qt/intro.cpp) to the current size plus some overhead.\n \n ### First time / New builders\n@@ -31,12 +31,12 @@ If you're using the automated script (found in [contrib/gitian-build.sh](/contri\n Check out the source code in the following directory hierarchy.\n \n     cd /path/to/your/toplevel/build\n-    git clone https://github.com/bitcoin-core/gitian.sigs.git\n-    git clone https://github.com/bitcoin-core/bitcoin-detached-sigs.git\n+    git clone https://github.com/blockcash-core/gitian.sigs.git\n+    git clone https://github.com/blockcash-core/blockcash-detached-sigs.git\n     git clone https://github.com/devrandom/gitian-builder.git\n-    git clone https://github.com/bitcoin/bitcoin.git\n+    git clone https://github.com/blockcash/blockcash.git\n \n-### Bitcoin maintainers/release engineers, update version in sources\n+### Blockcash maintainers/release engineers, update version in sources\n \n Update the following:\n \n@@ -75,7 +75,7 @@ If you're using the automated script (found in [contrib/gitian-build.sh](/contri\n \n Setup Gitian descriptors:\n \n-    pushd ./bitcoin\n+    pushd ./blockcash\n     export SIGNER=(your Gitian key, ie bluematt, sipa, etc)\n     export VERSION=(new version, e.g. 0.8.0)\n     git fetch\n@@ -98,7 +98,7 @@ Ensure gitian-builder is up-to-date:\n \n     pushd ./gitian-builder\n     mkdir -p inputs\n-    wget -P inputs https://bitcoincore.org/cfields/osslsigncode-Backports-to-1.7.1.patch\n+    wget -P inputs https://blockcashcore.org/cfields/osslsigncode-Backports-to-1.7.1.patch\n     wget -P inputs http://downloads.sourceforge.net/project/osslsigncode/osslsigncode/osslsigncode-1.7.1.tar.gz\n     popd\n \n@@ -109,58 +109,58 @@ Create the OS X SDK tarball, see the [OS X readme](README_osx.md) for details, a\n By default, Gitian will fetch source files as needed. To cache them ahead of time:\n \n     pushd ./gitian-builder\n-    make -C ../bitcoin/depends download SOURCES_PATH=`pwd`/cache/common\n+    make -C ../blockcash/depends download SOURCES_PATH=`pwd`/cache/common\n     popd\n \n Only missing files will be fetched, so this is safe to re-run for each build.\n \n NOTE: Offline builds must use the --url flag to ensure Gitian fetches only from local URLs. For example:\n \n     pushd ./gitian-builder\n-    ./bin/gbuild --url bitcoin=/path/to/bitcoin,signature=/path/to/sigs {rest of arguments}\n+    ./bin/gbuild --url blockcash=/path/to/blockcash,signature=/path/to/sigs {rest of arguments}\n     popd\n \n The gbuild invocations below <b>DO NOT DO THIS</b> by default.\n \n-### Build and sign Bitcoin Core for Linux, Windows, and OS X:\n+### Build and sign blockcash Core for Linux, Windows, and OS X:\n \n     pushd ./gitian-builder\n-    ./bin/gbuild --memory 3000 --commit bitcoin=v${VERSION} ../bitcoin/contrib/gitian-descriptors/gitian-linux.yml\n-    ./bin/gsign --signer $SIGNER --release ${VERSION}-linux --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-linux.yml\n-    mv build/out/bitcoin-*.tar.gz build/out/src/bitcoin-*.tar.gz ../\n-\n-    ./bin/gbuild --memory 3000 --commit bitcoin=v${VERSION} ../bitcoin/contrib/gitian-descriptors/gitian-win.yml\n-    ./bin/gsign --signer $SIGNER --release ${VERSION}-win-unsigned --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-win.yml\n-    mv build/out/bitcoin-*-win-unsigned.tar.gz inputs/bitcoin-win-unsigned.tar.gz\n-    mv build/out/bitcoin-*.zip build/out/bitcoin-*.exe ../\n-\n-    ./bin/gbuild --memory 3000 --commit bitcoin=v${VERSION} ../bitcoin/contrib/gitian-descriptors/gitian-osx.yml\n-    ./bin/gsign --signer $SIGNER --release ${VERSION}-osx-unsigned --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-osx.yml\n-    mv build/out/bitcoin-*-osx-unsigned.tar.gz inputs/bitcoin-osx-unsigned.tar.gz\n-    mv build/out/bitcoin-*.tar.gz build/out/bitcoin-*.dmg ../\n+    ./bin/gbuild --memory 3000 --commit blockcash=v${VERSION} ../blockcash/contrib/gitian-descriptors/gitian-linux.yml\n+    ./bin/gsign --signer $SIGNER --release ${VERSION}-linux --destination ../gitian.sigs/ ../blockcash/contrib/gitian-descriptors/gitian-linux.yml\n+    mv build/out/blockcash-*.tar.gz build/out/src/blockcash-*.tar.gz ../\n+\n+    ./bin/gbuild --memory 3000 --commit blockcash=v${VERSION} ../blockcash/contrib/gitian-descriptors/gitian-win.yml\n+    ./bin/gsign --signer $SIGNER --release ${VERSION}-win-unsigned --destination ../gitian.sigs/ ../blockcash/contrib/gitian-descriptors/gitian-win.yml\n+    mv build/out/blockcash-*-win-unsigned.tar.gz inputs/blockcash-win-unsigned.tar.gz\n+    mv build/out/blockcash-*.zip build/out/blockcash-*.exe ../\n+\n+    ./bin/gbuild --memory 3000 --commit blockcash=v${VERSION} ../blockcash/contrib/gitian-descriptors/gitian-osx.yml\n+    ./bin/gsign --signer $SIGNER --release ${VERSION}-osx-unsigned --destination ../gitian.sigs/ ../blockcash/contrib/gitian-descriptors/gitian-osx.yml\n+    mv build/out/blockcash-*-osx-unsigned.tar.gz inputs/blockcash-osx-unsigned.tar.gz\n+    mv build/out/blockcash-*.tar.gz build/out/blockcash-*.dmg ../\n     popd\n \n Build output expected:\n \n-  1. source tarball (`bitcoin-${VERSION}.tar.gz`)\n-  2. linux 32-bit and 64-bit dist tarballs (`bitcoin-${VERSION}-linux[32|64].tar.gz`)\n-  3. windows 32-bit and 64-bit unsigned installers and dist zips (`bitcoin-${VERSION}-win[32|64]-setup-unsigned.exe`, `bitcoin-${VERSION}-win[32|64].zip`)\n-  4. OS X unsigned installer and dist tarball (`bitcoin-${VERSION}-osx-unsigned.dmg`, `bitcoin-${VERSION}-osx64.tar.gz`)\n+  1. source tarball (`blockcash-${VERSION}.tar.gz`)\n+  2. linux 32-bit and 64-bit dist tarballs (`blockcash-${VERSION}-linux[32|64].tar.gz`)\n+  3. windows 32-bit and 64-bit unsigned installers and dist zips (`blockcash-${VERSION}-win[32|64]-setup-unsigned.exe`, `blockcash-${VERSION}-win[32|64].zip`)\n+  4. OS X unsigned installer and dist tarball (`blockcash-${VERSION}-osx-unsigned.dmg`, `blockcash-${VERSION}-osx64.tar.gz`)\n   5. Gitian signatures (in `gitian.sigs/${VERSION}-<linux|{win,osx}-unsigned>/(your Gitian key)/`)\n \n ### Verify other gitian builders signatures to your own. (Optional)\n \n Add other gitian builders keys to your gpg keyring, and/or refresh keys.\n \n-    gpg --import bitcoin/contrib/gitian-keys/*.pgp\n+    gpg --import blockcash/contrib/gitian-keys/*.pgp\n     gpg --refresh-keys\n \n Verify the signatures\n \n     pushd ./gitian-builder\n-    ./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-linux ../bitcoin/contrib/gitian-descriptors/gitian-linux.yml\n-    ./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-win-unsigned ../bitcoin/contrib/gitian-descriptors/gitian-win.yml\n-    ./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-osx-unsigned ../bitcoin/contrib/gitian-descriptors/gitian-osx.yml\n+    ./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-linux ../blockcash/contrib/gitian-descriptors/gitian-linux.yml\n+    ./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-win-unsigned ../blockcash/contrib/gitian-descriptors/gitian-win.yml\n+    ./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-osx-unsigned ../blockcash/contrib/gitian-descriptors/gitian-osx.yml\n     popd\n \n ### Next steps:\n@@ -178,25 +178,25 @@ Commit your signature to gitian.sigs:\n Wait for Windows/OS X detached signatures:\n \n - Once the Windows/OS X builds each have 3 matching signatures, they will be signed with their respective release keys.\n-- Detached signatures will then be committed to the [bitcoin-detached-sigs](https://github.com/bitcoin-core/bitcoin-detached-sigs) repository, which can be combined with the unsigned apps to create signed binaries.\n+- Detached signatures will then be committed to the [blockcash-detached-sigs](https://github.com/blockcash-core/blockcash-detached-sigs) repository, which can be combined with the unsigned apps to create signed binaries.\n \n Create (and optionally verify) the signed OS X binary:\n \n     pushd ./gitian-builder\n-    ./bin/gbuild -i --commit signature=v${VERSION} ../bitcoin/contrib/gitian-descriptors/gitian-osx-signer.yml\n-    ./bin/gsign --signer $SIGNER --release ${VERSION}-osx-signed --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-osx-signer.yml\n-    ./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-osx-signed ../bitcoin/contrib/gitian-descriptors/gitian-osx-signer.yml\n-    mv build/out/bitcoin-osx-signed.dmg ../bitcoin-${VERSION}-osx.dmg\n+    ./bin/gbuild -i --commit signature=v${VERSION} ../blockcash/contrib/gitian-descriptors/gitian-osx-signer.yml\n+    ./bin/gsign --signer $SIGNER --release ${VERSION}-osx-signed --destination ../gitian.sigs/ ../blockcash/contrib/gitian-descriptors/gitian-osx-signer.yml\n+    ./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-osx-signed ../blockcash/contrib/gitian-descriptors/gitian-osx-signer.yml\n+    mv build/out/blockcash-osx-signed.dmg ../blockcash-${VERSION}-osx.dmg\n     popd\n \n Create (and optionally verify) the signed Windows binaries:\n \n     pushd ./gitian-builder\n-    ./bin/gbuild -i --commit signature=v${VERSION} ../bitcoin/contrib/gitian-descriptors/gitian-win-signer.yml\n-    ./bin/gsign --signer $SIGNER --release ${VERSION}-win-signed --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-win-signer.yml\n-    ./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-win-signed ../bitcoin/contrib/gitian-descriptors/gitian-win-signer.yml\n-    mv build/out/bitcoin-*win64-setup.exe ../bitcoin-${VERSION}-win64-setup.exe\n-    mv build/out/bitcoin-*win32-setup.exe ../bitcoin-${VERSION}-win32-setup.exe\n+    ./bin/gbuild -i --commit signature=v${VERSION} ../blockcash/contrib/gitian-descriptors/gitian-win-signer.yml\n+    ./bin/gsign --signer $SIGNER --release ${VERSION}-win-signed --destination ../gitian.sigs/ ../blockcash/contrib/gitian-descriptors/gitian-win-signer.yml\n+    ./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-win-signed ../blockcash/contrib/gitian-descriptors/gitian-win-signer.yml\n+    mv build/out/blockcash-*win64-setup.exe ../blockcash-${VERSION}-win64-setup.exe\n+    mv build/out/blockcash-*win32-setup.exe ../blockcash-${VERSION}-win32-setup.exe\n     popd\n \n Commit your signature for the signed OS X/Windows binaries:\n@@ -218,23 +218,23 @@ sha256sum * > SHA256SUMS\n \n The list of files should be:\n ```\n-bitcoin-${VERSION}-aarch64-linux-gnu.tar.gz\n-bitcoin-${VERSION}-arm-linux-gnueabihf.tar.gz\n-bitcoin-${VERSION}-i686-pc-linux-gnu.tar.gz\n-bitcoin-${VERSION}-x86_64-linux-gnu.tar.gz\n-bitcoin-${VERSION}-osx64.tar.gz\n-bitcoin-${VERSION}-osx.dmg\n-bitcoin-${VERSION}.tar.gz\n-bitcoin-${VERSION}-win32-setup.exe\n-bitcoin-${VERSION}-win32.zip\n-bitcoin-${VERSION}-win64-setup.exe\n-bitcoin-${VERSION}-win64.zip\n+blockcash-${VERSION}-aarch64-linux-gnu.tar.gz\n+blockcash-${VERSION}-arm-linux-gnueabihf.tar.gz\n+blockcash-${VERSION}-i686-pc-linux-gnu.tar.gz\n+blockcash-${VERSION}-x86_64-linux-gnu.tar.gz\n+blockcash-${VERSION}-osx64.tar.gz\n+blockcash-${VERSION}-osx.dmg\n+blockcash-${VERSION}.tar.gz\n+blockcash-${VERSION}-win32-setup.exe\n+blockcash-${VERSION}-win32.zip\n+blockcash-${VERSION}-win64-setup.exe\n+blockcash-${VERSION}-win64.zip\n ```\n The `*-debug*` files generated by the gitian build contain debug symbols\n for troubleshooting by developers. It is assumed that anyone that is interested\n in debugging can run gitian to generate the files for themselves. To avoid\n end-user confusion about which file to pick, as well as save storage\n-space *do not upload these to the bitcoin.org server, nor put them in the torrent*.\n+space *do not upload these to the blockcash.org server, nor put them in the torrent*.\n \n - GPG-sign it, delete the unsigned file:\n ```\n@@ -244,49 +244,49 @@ rm SHA256SUMS\n (the digest algorithm is forced to sha256 to avoid confusion of the `Hash:` header that GPG adds with the SHA256 used for the files)\n Note: check that SHA256SUMS itself doesn't end up in SHA256SUMS, which is a spurious/nonsensical entry.\n \n-- Upload zips and installers, as well as `SHA256SUMS.asc` from last step, to the bitcoin.org server\n-  into `/var/www/bin/bitcoin-core-${VERSION}`\n+- Upload zips and installers, as well as `SHA256SUMS.asc` from last step, to the blockcash.org server\n+  into `/var/www/bin/blockcash-core-${VERSION}`\n \n - A `.torrent` will appear in the directory after a few minutes. Optionally help seed this torrent. To get the `magnet:` URI use:\n ```bash\n transmission-show -m <torrent file>\n ```\n Insert the magnet URI into the announcement sent to mailing lists. This permits\n-people without access to `bitcoin.org` to download the binary distribution.\n+people without access to `blockcash.org` to download the binary distribution.\n Also put it into the `optional_magnetlink:` slot in the YAML file for\n-bitcoin.org (see below for bitcoin.org update instructions).\n+blockcash.org (see below for blockcash.org update instructions).\n \n-- Update bitcoin.org version\n+- Update blockcash.org version\n \n-  - First, check to see if the Bitcoin.org maintainers have prepared a\n-    release: https://github.com/bitcoin-dot-org/bitcoin.org/labels/Releases\n+  - First, check to see if the Blockcash maintainers have prepared a\n+    release: https://github.com/blockcash-dot-org/blockcash.org/labels/Releases\n \n       - If they have, it will have previously failed their Travis CI\n         checks because the final release files weren't uploaded.\n         Trigger a Travis CI rebuild---if it passes, merge.\n \n-  - If they have not prepared a release, follow the Bitcoin.org release\n-    instructions: https://github.com/bitcoin-dot-org/bitcoin.org#release-notes\n+  - If they have not prepared a release, follow the Blockcash.org release\n+    instructions: https://github.com/blockcash-dot-org/blockcash.org#release-notes\n \n   - After the pull request is merged, the website will automatically show the newest version within 15 minutes, as well\n     as update the OS download links. Ping @saivann/@harding (saivann/harding on Freenode) in case anything goes wrong\n \n - Announce the release:\n \n-  - bitcoin-dev and bitcoin-core-dev mailing list\n+  - blockcash-dev and blockcash-core-dev mailing list\n \n-  - Bitcoin Core announcements list https://bitcoincore.org/en/list/announcements/join/\n+  - blockcash Core announcements list https://blockcashcore.org/en/list/announcements/join/\n \n-  - bitcoincore.org blog post\n+  - blockcashcore.org blog post\n \n-  - Update title of #bitcoin on Freenode IRC\n+  - Update title of #blockcash on Freenode IRC\n \n-  - Optionally twitter, reddit /r/Bitcoin, ... but this will usually sort out itself\n+  - Optionally twitter, reddit /r/blockcash, ... but this will usually sort out itself\n \n-  - Notify BlueMatt so that he can start building [the PPAs](https://launchpad.net/~bitcoin/+archive/ubuntu/bitcoin)\n+  - Notify BlueMatt so that he can start building [the PPAs](https://launchpad.net/~blockcash/+archive/ubuntu/blockcash)\n \n   - Archive release notes for the new version to `doc/release-notes/` (branch `master` and branch of the release)\n \n-  - Create a [new GitHub release](https://github.com/bitcoin/bitcoin/releases/new) with a link to the archived release notes.\n+  - Create a [new GitHub release](https://github.com/blockcash/blockcash/releases/new) with a link to the archived release notes.\n \n   - Celebrate"
      },
      {
        "sha": "e59e9c076e84f1f55f66eedeb899c9f6e67fa2c5",
        "filename": "doc/tor.md",
        "status": "modified",
        "additions": 25,
        "deletions": 25,
        "changes": 50,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/doc/tor.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/doc/tor.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/tor.md?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -1,16 +1,16 @@\n-TOR SUPPORT IN BITCOIN\n-======================\n-\n-It is possible to run Bitcoin as a Tor hidden service, and connect to such services.\n+TOR SUPPORT IN BLOCKCASH\n+========================\n+Blockcash\n+It is possible to run Blockcash as a Tor hidden service, and connect to such services.\n \n The following directions assume you have a Tor proxy running on port 9050. Many distributions default to having a SOCKS proxy listening on port 9050, but others may not. In particular, the Tor Browser Bundle defaults to listening on port 9150. See [Tor Project FAQ:TBBSocksPort](https://www.torproject.org/docs/faq.html.en#TBBSocksPort) for how to properly\n configure Tor.\n \n \n-1. Run bitcoin behind a Tor proxy\n+1. Run Blockcash behind a Tor proxy\n ---------------------------------\n \n-The first step is running Bitcoin behind a Tor proxy. This will already make all\n+The first step is running Blockcash behind a Tor proxy. This will already make all\n outgoing connections be anonymized, but more is possible.\n \n \t-proxy=ip:port  Set the proxy server. If SOCKS5 is selected (default), this proxy\n@@ -31,27 +31,27 @@ outgoing connections be anonymized, but more is possible.\n \n In a typical situation, this suffices to run behind a Tor proxy:\n \n-\t./bitcoin -proxy=127.0.0.1:9050\n+\t./blockcash -proxy=127.0.0.1:9050\n \n \n-2. Run a bitcoin hidden server\n+2. Run a blockcash hidden server\n ------------------------------\n \n If you configure your Tor system accordingly, it is possible to make your node also\n reachable from the Tor network. Add these lines to your /etc/tor/torrc (or equivalent\n config file):\n \n-\tHiddenServiceDir /var/lib/tor/bitcoin-service/\n-\tHiddenServicePort 8333 127.0.0.1:8333\n-\tHiddenServicePort 18333 127.0.0.1:18333\n+\tHiddenServiceDir /var/lib/tor/blockcash-service/\n+\tHiddenServicePort 29252 127.0.0.1:29252\n+\tHiddenServicePort 39259 127.0.0.1:39259\n \n The directory can be different of course, but (both) port numbers should be equal to\n-your bitcoind's P2P listen port (8333 by default).\n+your blockcashd's P2P listen port (29251 by default).\n \n-\t-externalip=X   You can tell bitcoin about its publicly reachable address using\n+\t-externalip=X   You can tell blockcash about its publicly reachable address using\n \t                this option, and this can be a .onion address. Given the above\n \t                configuration, you can find your onion address in\n-\t                /var/lib/tor/bitcoin-service/hostname. Onion addresses are given\n+\t                /var/lib/tor/blockcash-service/hostname. Onion addresses are given\n \t                preference for your node to advertise itself with, for connections\n \t                coming from unroutable addresses (such as 127.0.0.1, where the\n \t                Tor proxy typically runs).\n@@ -68,57 +68,57 @@ your bitcoind's P2P listen port (8333 by default).\n \n In a typical situation, where you're only reachable via Tor, this should suffice:\n \n-\t./bitcoind -proxy=127.0.0.1:9050 -externalip=57qr3yd1nyntf5k.onion -listen\n+\t./blockcashd -proxy=127.0.0.1:9050 -externalip=57qr3yd1nyntf5k.onion -listen\n \n (obviously, replace the Onion address with your own). It should be noted that you still\n listen on all devices and another node could establish a clearnet connection, when knowing\n your address. To mitigate this, additionally bind the address of your Tor proxy:\n \n-\t./bitcoind ... -bind=127.0.0.1\n+\t./blockcashd ... -bind=127.0.0.1\n \n If you don't care too much about hiding your node, and want to be reachable on IPv4\n as well, use `discover` instead:\n \n-\t./bitcoind ... -discover\n+\t./blockcashd ... -discover\n \n and open port 8333 on your firewall (or use -upnp).\n \n If you only want to use Tor to reach onion addresses, but not use it as a proxy\n for normal IPv4/IPv6 communication, use:\n \n-\t./bitcoin -onion=127.0.0.1:9050 -externalip=57qr3yd1nyntf5k.onion -discover\n+\t./blockcash -onion=127.0.0.1:9050 -externalip=57qr3yd1nyntf5k.onion -discover\n \n 3. Automatically listen on Tor\n --------------------------------\n \n Starting with Tor version 0.2.7.1 it is possible, through Tor's control socket\n API, to create and destroy 'ephemeral' hidden services programmatically.\n-Bitcoin Core has been updated to make use of this.\n+Blockcash Core has been updated to make use of this.\n \n This means that if Tor is running (and proper authentication has been configured),\n-Bitcoin Core automatically creates a hidden service to listen on. This will positively \n+Blockcash Core automatically creates a hidden service to listen on. This will positively \n affect the number of available .onion nodes.\n \n-This new feature is enabled by default if Bitcoin Core is listening (`-listen`), and\n+This new feature is enabled by default if Blockcash Core is listening (`-listen`), and\n requires a Tor connection to work. It can be explicitly disabled with `-listenonion=0`\n and, if not disabled, configured using the `-torcontrol` and `-torpassword` settings.\n To show verbose debugging information, pass `-debug=tor`.\n \n Connecting to Tor's control socket API requires one of two authentication methods to be \n-configured. For cookie authentication the user running bitcoind must have write access \n+configured. For cookie authentication the user running blockcashd must have write access \n to the `CookieAuthFile` specified in Tor configuration. In some cases this is \n preconfigured and the creation of a hidden service is automatic. If permission problems \n are seen with `-debug=tor` they can be resolved by adding both the user running tor and \n-the user running bitcoind to the same group and setting permissions appropriately. On \n-Debian-based systems the user running bitcoind can be added to the debian-tor group, \n+the user running blockcashd to the same group and setting permissions appropriately. On \n+Debian-based systems the user running blockcashd can be added to the debian-tor group, \n which has the appropriate permissions. An alternative authentication method is the use \n of the `-torpassword` flag and a `hash-password` which can be enabled and specified in \n Tor configuration.\n \n 4. Privacy recommendations\n ---------------------------\n \n-- Do not add anything but bitcoin ports to the hidden service created in section 2.\n+- Do not add anything but blockcash ports to the hidden service created in section 2.\n   If you run a web service too, create a new hidden service for that.\n   Otherwise it is trivial to link them, which may reduce privacy. Hidden\n   services created automatically (as in section 3) always have only one port"
      },
      {
        "sha": "535f23a38dd983ca2e9b700c1dd202cde3902064",
        "filename": "doc/travis-ci.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/doc/travis-ci.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/doc/travis-ci.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/travis-ci.md?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -32,7 +32,7 @@ trigger cache-invalidation and rebuilds as necessary.\n \n These caches can be manually removed if necessary. This is one of the very few\n manual operations that is possible with Travis, and it can be done by the\n-Bitcoin Core committer via the Travis web interface.\n+Blockcash Core committer via the Travis web interface.\n \n In some cases, secure strings may be needed for hiding sensitive info such as\n private keys or URLs. The travis client may be used to create these strings:"
      },
      {
        "sha": "0cf57239130257c95f9235e756fc1d65fabb7a76",
        "filename": "doc/zmq.md",
        "status": "modified",
        "additions": 10,
        "deletions": 10,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/doc/zmq.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/doc/zmq.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/zmq.md?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -5,8 +5,8 @@ connections, inter-process communication, and shared-memory,\n providing various message-oriented semantics such as publish/subscribe,\n request/reply, and push/pull.\n \n-The Bitcoin Core daemon can be configured to act as a trusted \"border\n-router\", implementing the bitcoin wire protocol and relay, making\n+The Blockcash Core daemon can be configured to act as a trusted \"border\n+router\", implementing the blockcash wire protocol and relay, making\n consensus decisions, maintaining the local blockchain database,\n broadcasting locally generated transactions into the network, and\n providing a queryable RPC interface to interact on a polled basis for\n@@ -33,7 +33,7 @@ buffering or reassembly.\n \n ## Prerequisites\n \n-The ZeroMQ feature in Bitcoin Core requires ZeroMQ API version 4.x or\n+The ZeroMQ feature in Blockcash Core requires ZeroMQ API version 4.x or\n newer. Typically, it is packaged by distributions as something like\n *libzmq3-dev*. The C++ wrapper for ZeroMQ is *not* needed.\n \n@@ -45,7 +45,7 @@ operation.\n \n By default, the ZeroMQ feature is automatically compiled in if the\n necessary prerequisites are found.  To disable, use --disable-zmq\n-during the *configure* step of building bitcoind:\n+during the *configure* step of building blockcashd:\n \n     $ ./configure --disable-zmq (other options)\n \n@@ -66,16 +66,16 @@ address. The same address can be used in more than one notification.\n \n For instance:\n \n-    $ bitcoind -zmqpubhashtx=tcp://127.0.0.1:28332 \\\n-               -zmqpubrawtx=ipc:///tmp/bitcoind.tx.raw\n+    $ blockcash -zmqpubhashtx=tcp://127.0.0.1:28332 \\\n+                -zmqpubrawtx=ipc:///tmp/blockcash.tx.raw\n \n Each PUB notification has a topic and body, where the header\n corresponds to the notification type. For instance, for the\n notification `-zmqpubhashtx` the topic is `hashtx` (no null\n terminator) and the body is the hexadecimal transaction hash (32\n bytes).\n \n-These options can also be provided in bitcoin.conf.\n+These options can also be provided in blockcash.conf.\n \n ZeroMQ endpoint specifiers for TCP (and others) are documented in the\n [ZeroMQ API](http://api.zeromq.org/4-0:_start).\n@@ -87,9 +87,9 @@ arriving. Please see `contrib/zmq/zmq_sub.py` for a working example.\n \n ## Remarks\n \n-From the perspective of bitcoind, the ZeroMQ socket is write-only; PUB\n+From the perspective of blockcashd, the ZeroMQ socket is write-only; PUB\n sockets don't even have a read function. Thus, there is no state\n-introduced into bitcoind directly. Furthermore, no information is\n+introduced into blockcashd directly. Furthermore, no information is\n broadcast that wasn't already received from the public P2P network.\n \n No authentication or authorization is done on connecting clients; it\n@@ -102,5 +102,5 @@ retrieve the chain from the last known block to the new tip.\n \n There are several possibilities that ZMQ notification can get lost\n during transmission depending on the communication type your are\n-using. Bitcoind appends an up-counting sequence number to each\n+using. Blockcashd appends an up-counting sequence number to each\n notification which allows listeners to detect lost notifications."
      },
      {
        "sha": "ca92e7a758826c6e689fca94cbaaf55ba80d5fbf",
        "filename": "qa/README.md",
        "status": "modified",
        "additions": 7,
        "deletions": 6,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/qa/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/qa/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/README.md?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -1,7 +1,7 @@\n The [pull-tester](/qa/pull-tester/) folder contains a script to call\n multiple tests from the [rpc-tests](/qa/rpc-tests/) folder.\n \n-Every pull request to the bitcoin repository is built and run through\n+Every pull request to the blockcash/blockcash repository is built and run through\n the regression test suite. You can also run all or only individual\n tests locally.\n \n@@ -11,9 +11,10 @@ Before running the tests, the following must be installed.\n \n Unix\n ----\n-The python3-zmq library is required. On Ubuntu or Debian it can be installed via:\n+python3-zmq` and `litecoin_scrypt` are required. On Ubuntu or Debian they can be installed via:\n ```\n sudo apt-get install python3-zmq\n+pip3 install litecoin_scrypt\n ```\n \n OS X\n@@ -50,9 +51,9 @@ Possible options, which apply to each individual test run:\n \n ```\n   -h, --help            show this help message and exit\n-  --nocleanup           Leave bitcoinds and test.* datadir on exit or error\n-  --noshutdown          Don't stop bitcoinds after the test execution\n-  --srcdir=SRCDIR       Source directory containing bitcoind/bitcoin-cli\n+  --nocleanup           Leave blockcashds and test.* datadir on exit or error\n+  --noshutdown          Don't stop blockcashds after the test execution\n+  --srcdir=SRCDIR       Source directory containing blockcashd/blockcash-cli\n                         (default: ../../src)\n   --tmpdir=TMPDIR       Root directory for datadirs\n   --tracerpc            Print out all RPC calls as they are made\n@@ -77,7 +78,7 @@ to recover with:\n \n ```bash\n rm -rf cache\n-killall bitcoind\n+killall blockcashd\n ```\n \n Writing tests"
      },
      {
        "sha": "a354d980d7dbbe79476cd1a4dcb2e04cc3db6706",
        "filename": "qa/pull-tester/rpc-tests.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/qa/pull-tester/rpc-tests.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/qa/pull-tester/rpc-tests.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/rpc-tests.py?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -76,7 +76,7 @@\n \n #Set env vars\n if \"BITCOIND\" not in os.environ:\n-    os.environ[\"BITCOIND\"] = BUILDDIR + '/src/bitcoind' + EXEEXT\n+    os.environ[\"BITCOIND\"] = BUILDDIR + '/src/blockcashd' + EXEEXT\n \n if EXEEXT == \".exe\" and \"-win\" not in opts:\n     # https://github.com/bitcoin/bitcoin/commit/d52802551752140cf41f0d9a225a43e84404d3e9"
      },
      {
        "sha": "16d1e66132df0404532ddfdb215f09597d4edb89",
        "filename": "qa/rpc-tests/README.md",
        "status": "modified",
        "additions": 10,
        "deletions": 10,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/qa/rpc-tests/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/qa/rpc-tests/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/README.md?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -11,7 +11,7 @@ Base class for new regression tests.\n Generally useful functions.\n \n ### [test_framework/mininode.py](test_framework/mininode.py)\n-Basic code to support p2p connectivity to a bitcoind.\n+Basic code to support p2p connectivity to a Blockcashd.\n \n ### [test_framework/comptool.py](test_framework/comptool.py)\n Framework for comparison-tool style, p2p tests.\n@@ -41,10 +41,10 @@ over the network (```CBlock```, ```CTransaction```, etc, along with the network-\n wrappers for them, ```msg_block```, ```msg_tx```, etc).\n \n * P2P tests have two threads.  One thread handles all network communication\n-with the bitcoind(s) being tested (using python's asyncore package); the other\n+with the blockcashd(s) being tested (using python's asyncore package); the other\n implements the test logic.\n \n-* ```NodeConn``` is the class used to connect to a bitcoind.  If you implement\n+* ```NodeConn``` is the class used to connect to a blockcashd.  If you implement\n a callback class that derives from ```NodeConnCB``` and pass that to the\n ```NodeConn``` object, your code will receive the appropriate callbacks when\n events of interest arrive.\n@@ -64,13 +64,13 @@ is tested.  Examples: ```p2p-accept-block.py```, ```maxblocksinflight.py```.\n ## Comptool\n \n * Testing framework for writing tests that compare the block/tx acceptance\n-behavior of a bitcoind against 1 or more other bitcoind instances, or against\n+behavior of a blockcashd against 1 or more other blockcashd instances, or against\n known outcomes, or both.\n \n * Set the ```num_nodes``` variable (defined in ```ComparisonTestFramework```) to start up\n 1 or more nodes.  If using 1 node, then ```--testbinary``` can be used as a command line\n-option to change the bitcoind binary used by the test.  If using 2 or more nodes,\n-then ```--refbinary``` can be optionally used to change the bitcoind that will be used\n+option to change the blockcashd binary used by the test.  If using 2 or more nodes,\n+then ```--refbinary``` can be optionally used to change the blockcashd that will be used\n on nodes 2 and up.\n \n * Implement a (generator) function called ```get_tests()``` which yields ```TestInstance```s.\n@@ -79,13 +79,13 @@ Each ```TestInstance``` consists of:\n     * ```object``` is a ```CBlock```, ```CTransaction```, or\n     ```CBlockHeader```.  ```CBlock```'s and ```CTransaction```'s are tested for\n     acceptance.  ```CBlockHeader```s can be used so that the test runner can deliver\n-    complete headers-chains when requested from the bitcoind, to allow writing\n+    complete headers-chains when requested from the blockcashd, to allow writing\n     tests where blocks can be delivered out of order but still processed by\n-    headers-first bitcoind's.\n+    headers-first blockcashd's.\n     * ```outcome``` is ```True```, ```False```, or ```None```.  If ```True```\n     or ```False```, the tip is compared with the expected tip -- either the\n     block passed in, or the hash specified as the optional 3rd entry.  If\n-    ```None``` is specified, then the test will compare all the bitcoind's\n+    ```None``` is specified, then the test will compare all the blockcashd's\n     being tested to see if they all agree on what the best tip is.\n     * ```hash``` is the block hash of the tip to compare against. Optional to\n     specify; if left out then the hash of the block passed in will be used as\n@@ -99,7 +99,7 @@ Each ```TestInstance``` consists of:\n     sequence and synced (this is slower when processing many blocks).\n   - ```sync_every_transaction```: ```True/False```.  Analogous to\n     ```sync_every_block```, except if the outcome on the last tx is \"None\",\n-    then the contents of the entire mempool are compared across all bitcoind\n+    then the contents of the entire mempool are compared across all blockcashd\n     connections.  If ```True``` or ```False```, then only the last tx's\n     acceptance is tested against the given outcome.\n "
      },
      {
        "sha": "006b532e670d8b31608826298e1c14e5851a6413",
        "filename": "qa/rpc-tests/fundrawtransaction.py",
        "status": "modified",
        "additions": 35,
        "deletions": 7,
        "changes": 42,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/qa/rpc-tests/fundrawtransaction.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/qa/rpc-tests/fundrawtransaction.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/fundrawtransaction.py?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -186,7 +186,12 @@ def run_test(self):\n         dec_tx  = self.nodes[2].decoderawtransaction(rawtx)\n         assert_equal(utx['txid'], dec_tx['vin'][0]['txid'])\n \n-        assert_raises_jsonrpc(-3, \"Unexpected key foo\", self.nodes[2].fundrawtransaction, rawtx, {'foo':'bar'})\n+        try:\n+            self.nodes[2].fundrawtransaction(rawtx, {'foo': 'bar'})\n+            raise AssertionError(\"Accepted invalid option foo\")\n+        except JSONRPCException as e:\n+            assert(\"Unexpected key foo\" in e.error['message'])\n+\n \n         ############################################################\n         # test a fundrawtransaction with an invalid change address #\n@@ -199,7 +204,12 @@ def run_test(self):\n         dec_tx  = self.nodes[2].decoderawtransaction(rawtx)\n         assert_equal(utx['txid'], dec_tx['vin'][0]['txid'])\n \n-        assert_raises_jsonrpc(-5, \"changeAddress must be a valid bitcoin address\", self.nodes[2].fundrawtransaction, rawtx, {'changeAddress':'foobar'})\n+        try:\n+            self.nodes[2].fundrawtransaction(rawtx, {'changeAddress': 'foobar'})\n+            raise AssertionError(\"Accepted invalid litecoin address\")\n+        except JSONRPCException as e:\n+            assert(\"changeAddress must be a valid litecoin address\" in e.error['message'])\n+\n \n         ############################################################\n         # test a fundrawtransaction with a provided change address #\n@@ -213,7 +223,12 @@ def run_test(self):\n         assert_equal(utx['txid'], dec_tx['vin'][0]['txid'])\n \n         change = self.nodes[2].getnewaddress()\n-        assert_raises_jsonrpc(-8, \"changePosition out of bounds\", self.nodes[2].fundrawtransaction, rawtx, {'changeAddress':change, 'changePosition':2})\n+        try:\n+            rawtxfund = self.nodes[2].fundrawtransaction(rawtx, {'changeAddress': change, 'changePosition': 2})\n+        except JSONRPCException as e:\n+            assert('changePosition out of bounds' == e.error['message'])\n+        else:\n+            assert(False)\n         rawtxfund = self.nodes[2].fundrawtransaction(rawtx, {'changeAddress': change, 'changePosition': 0})\n         dec_tx  = self.nodes[2].decoderawtransaction(rawtxfund['hex'])\n         out = dec_tx['vout'][0]\n@@ -322,7 +337,12 @@ def run_test(self):\n         rawtx   = self.nodes[2].createrawtransaction(inputs, outputs)\n         dec_tx  = self.nodes[2].decoderawtransaction(rawtx)\n \n-        assert_raises_jsonrpc(-4, \"Insufficient funds\", self.nodes[2].fundrawtransaction, rawtx)\n+        try:\n+            rawtxfund = self.nodes[2].fundrawtransaction(rawtx)\n+            raise AssertionError(\"Spent more than available\")\n+        except JSONRPCException as e:\n+            assert(\"Insufficient\" in e.error['message'])\n+\n \n         ############################################################\n         #compare fee of a standard pubkeyhash transaction\n@@ -478,13 +498,21 @@ def run_test(self):\n         rawTx = self.nodes[1].createrawtransaction(inputs, outputs)\n         # fund a transaction that requires a new key for the change output\n         # creating the key must be impossible because the wallet is locked\n-        assert_raises_jsonrpc(-4, \"Insufficient funds\", self.nodes[1].fundrawtransaction, rawtx)\n+        try:\n+            fundedTx = self.nodes[1].fundrawtransaction(rawTx)\n+            raise AssertionError(\"Wallet unlocked without passphrase\")\n+        except JSONRPCException as e:\n+            assert('Keypool ran out' in e.error['message'])\n \n         #refill the keypool\n         self.nodes[1].walletpassphrase(\"test\", 100)\n         self.nodes[1].walletlock()\n \n-        assert_raises_jsonrpc(-13, \"walletpassphrase\", self.nodes[1].sendtoaddress, self.nodes[0].getnewaddress(), 1.2)\n+        try:\n+            self.nodes[1].sendtoaddress(self.nodes[0].getnewaddress(), 1.2)\n+            raise AssertionError(\"Wallet unlocked without passphrase\")\n+        except JSONRPCException as e:\n+            assert('walletpassphrase' in e.error['message'])\n \n         oldBalance = self.nodes[0].getbalance()\n \n@@ -736,4 +764,4 @@ def run_test(self):\n         assert_equal(share[0] + share[2] + share[3], result[0]['fee'])\n \n if __name__ == '__main__':\n-    RawTransactionsTest().main()\n+    RawTransactionsTest().main()\n\\ No newline at end of file"
      },
      {
        "sha": "aa93815dc94882946f19fbc90f5da07c7abb1b25",
        "filename": "qa/rpc-tests/multi_rpc.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/qa/rpc-tests/multi_rpc.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/qa/rpc-tests/multi_rpc.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/multi_rpc.py?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -26,7 +26,7 @@ def setup_chain(self):\n         #Append rpcauth to bitcoin.conf before initialization\n         rpcauth = \"rpcauth=rt:93648e835a54c573682c2eb19f882535$7681e9c5b74bdd85e78166031d2058e1069b3ed7ed967c93fc63abba06f31144\"\n         rpcauth2 = \"rpcauth=rt2:f8607b1a88861fac29dfccf9b52ff9f$ff36a0c23c8c62b4846112e50fa888416e94c17bfd4c42f88fd8f55ec6a3137e\"\n-        with open(os.path.join(self.options.tmpdir+\"/node0\", \"bitcoin.conf\"), 'a', encoding='utf8') as f:\n+        with open(os.path.join(self.options.tmpdir+\"/node0\", \"blockcash.conf\"), 'a', encoding='utf8') as f:\n             f.write(rpcauth+\"\\n\")\n             f.write(rpcauth2+\"\\n\")\n "
      },
      {
        "sha": "f0b9bf29b555829850ddf2cf06f63aace4b40596",
        "filename": "qa/rpc-tests/p2p-compactblocks.py",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/qa/rpc-tests/p2p-compactblocks.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/qa/rpc-tests/p2p-compactblocks.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/p2p-compactblocks.py?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -10,6 +10,8 @@\n from test_framework.siphash import siphash256\n from test_framework.script import CScript, OP_TRUE\n \n+VB_TOP_BITS = 0x20000000\n+\n '''\n CompactBlocksTest -- test compact blocks (BIP 152)\n \n@@ -132,7 +134,7 @@ def build_block_on_tip(self, node, segwit=False):\n         tip = node.getbestblockhash()\n         mtp = node.getblockheader(tip)['mediantime']\n         block = create_block(int(tip, 16), create_coinbase(height + 1), mtp + 1)\n-        block.nVersion = 4\n+        block.nVersion = VB_TOP_BITS\n         if segwit:\n             add_witness_commitment(block)\n         block.solve()\n@@ -968,4 +970,4 @@ def run_test(self):\n \n \n if __name__ == '__main__':\n-    CompactBlocksTest().main()\n+    CompactBlocksTest().main()\n\\ No newline at end of file"
      },
      {
        "sha": "6fbfff7732eeae36a2f3379e8f6051aa9c492ed2",
        "filename": "qa/rpc-tests/p2p-fullblocktest.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/qa/rpc-tests/p2p-fullblocktest.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/qa/rpc-tests/p2p-fullblocktest.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/p2p-fullblocktest.py?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -662,7 +662,7 @@ def update_block(block_number, new_transactions):\n         tip(44)\n         b47 = block(47, solve=False)\n         target = uint256_from_compact(b47.nBits)\n-        while b47.sha256 < target: #changed > to <\n+        while b47.scrypt256 < target: #changed > to <\n             b47.nNonce += 1\n             b47.rehash()\n         yield rejected(RejectResult(16, b'high-hash'))"
      },
      {
        "sha": "ba31f421a00096be7be0427afca74ed2064cc7bd",
        "filename": "qa/rpc-tests/test_framework/mininode.py",
        "status": "modified",
        "additions": 13,
        "deletions": 7,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/qa/rpc-tests/test_framework/mininode.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/qa/rpc-tests/test_framework/mininode.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/mininode.py?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -36,10 +36,11 @@\n from threading import Thread\n import logging\n import copy\n+import litecoin_scrypt\n from test_framework.siphash import siphash256\n \n BIP0031_VERSION = 60000\n-MY_VERSION = 70014  # past bip-31 for ping/pong\n+MY_VERSION = 90014  # past bip-31 for ping/pong\n MY_SUBVERSION = b\"/python-mininode-tester:0.0.3/\"\n MY_RELAY = 1 # from version 70001 onwards, fRelay should be appended to version messages (BIP37)\n \n@@ -536,6 +537,7 @@ def __init__(self, header=None):\n             self.nNonce = header.nNonce\n             self.sha256 = header.sha256\n             self.hash = header.hash\n+            self.scrypt256 = header.scrypt256\n             self.calc_sha256()\n \n     def set_null(self):\n@@ -547,6 +549,7 @@ def set_null(self):\n         self.nNonce = 0\n         self.sha256 = None\n         self.hash = None\n+        self.scrypt256 = None\n \n     def deserialize(self, f):\n         self.nVersion = struct.unpack(\"<i\", f.read(4))[0]\n@@ -557,6 +560,7 @@ def deserialize(self, f):\n         self.nNonce = struct.unpack(\"<I\", f.read(4))[0]\n         self.sha256 = None\n         self.hash = None\n+        self.scrypt256 = None\n \n     def serialize(self):\n         r = b\"\"\n@@ -579,9 +583,11 @@ def calc_sha256(self):\n             r += struct.pack(\"<I\", self.nNonce)\n             self.sha256 = uint256_from_str(hash256(r))\n             self.hash = encode(hash256(r)[::-1], 'hex_codec').decode('ascii')\n+            self.scrypt256 = uint256_from_str(litecoin_scrypt.getPoWHash(r))\n \n     def rehash(self):\n         self.sha256 = None\n+        self.scrypt256 = None\n         self.calc_sha256()\n         return self.sha256\n \n@@ -640,7 +646,7 @@ def calc_witness_merkle_root(self):\n     def is_valid(self):\n         self.calc_sha256()\n         target = uint256_from_compact(self.nBits)\n-        if self.sha256 > target:\n+        if self.scrypt256 > target:\n             return False\n         for tx in self.vtx:\n             if not tx.is_valid():\n@@ -652,7 +658,7 @@ def is_valid(self):\n     def solve(self):\n         self.rehash()\n         target = uint256_from_compact(self.nBits)\n-        while self.sha256 > target:\n+        while self.scrypt256 > target:\n             self.nNonce += 1\n             self.rehash()\n \n@@ -1610,8 +1616,8 @@ class NodeConn(asyncore.dispatcher):\n         b\"blocktxn\": msg_blocktxn\n     }\n     MAGIC_BYTES = {\n-        \"mainnet\": b\"\\xf9\\xbe\\xb4\\xd9\",   # mainnet\n-        \"testnet3\": b\"\\x0b\\x11\\x09\\x07\",  # testnet3\n+        \"mainnet\": b\"\\xfb\\xc0\\xb6\\xdb\",   # mainnet\n+        \"testnet3\": b\"\\xfc\\xc1\\xb7\\xdc\",  # testnet3\n         \"regtest\": b\"\\xfa\\xbf\\xb5\\xda\",   # regtest\n     }\n \n@@ -1642,7 +1648,7 @@ def __init__(self, dstaddr, dstport, rpc, callback, net=\"regtest\", services=NODE\n             vt.addrFrom.port = 0\n             self.send_message(vt, True)\n \n-        print('MiniNode: Connecting to Bitcoin Node IP # ' + dstaddr + ':' \\\n+        print('MiniNode: Connecting to Blockcash Node IP # ' + dstaddr + ':' \\\n             + str(dstport))\n \n         try:\n@@ -1804,4 +1810,4 @@ def __init__(self, value):\n         self.value = value\n \n     def __str__(self):\n-        return repr(self.value)\n+        return repr(self.value)\n\\ No newline at end of file"
      },
      {
        "sha": "8ef6f5dcfaa4962705b7fc56cb9111ef81e222c9",
        "filename": "qa/rpc-tests/test_framework/test_framework.py",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/qa/rpc-tests/test_framework/test_framework.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/qa/rpc-tests/test_framework/test_framework.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/test_framework.py?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -104,11 +104,11 @@ def main(self):\n \n         parser = optparse.OptionParser(usage=\"%prog [options]\")\n         parser.add_option(\"--nocleanup\", dest=\"nocleanup\", default=False, action=\"store_true\",\n-                          help=\"Leave bitcoinds and test.* datadir on exit or error\")\n+                          help=\"Leave blockcashds and test.* datadir on exit or error\")\n         parser.add_option(\"--noshutdown\", dest=\"noshutdown\", default=False, action=\"store_true\",\n-                          help=\"Don't stop bitcoinds after the test execution\")\n+                          help=\"Don't stop blockcashds after the test execution\")\n         parser.add_option(\"--srcdir\", dest=\"srcdir\", default=os.path.normpath(os.path.dirname(os.path.realpath(__file__))+\"/../../../src\"),\n-                          help=\"Source directory containing bitcoind/bitcoin-cli (default: %default)\")\n+                          help=\"Source directory containing blockcashd/blockcash-cli (default: %default)\")\n         parser.add_option(\"--cachedir\", dest=\"cachedir\", default=os.path.normpath(os.path.dirname(os.path.realpath(__file__))+\"/../../cache\"),\n                           help=\"Directory for caching pregenerated datadirs\")\n         parser.add_option(\"--tmpdir\", dest=\"tmpdir\", default=tempfile.mkdtemp(prefix=\"test\"),\n@@ -163,7 +163,7 @@ def main(self):\n             print(\"Stopping nodes\")\n             stop_nodes(self.nodes)\n         else:\n-            print(\"Note: bitcoinds were not stopped and may still be running\")\n+            print(\"Note: blockcashds were not stopped and may still be running\")\n \n         if not self.options.nocleanup and not self.options.noshutdown and success:\n             print(\"Cleaning up\")\n@@ -205,11 +205,11 @@ def __init__(self):\n \n     def add_options(self, parser):\n         parser.add_option(\"--testbinary\", dest=\"testbinary\",\n-                          default=os.getenv(\"BITCOIND\", \"bitcoind\"),\n-                          help=\"bitcoind binary to test\")\n+                          default=os.getenv(\"BLOCKCASH\", \"blockcashd\"),\n+                          help=\"blockcashd binary to test\")\n         parser.add_option(\"--refbinary\", dest=\"refbinary\",\n-                          default=os.getenv(\"BITCOIND\", \"bitcoind\"),\n-                          help=\"bitcoind binary to use for reference nodes (if any)\")\n+                          default=os.getenv(\"BLOCKCASH\", \"blockcashd\"),\n+                          help=\"blockcashd binary to use for reference nodes (if any)\")\n \n     def setup_network(self):\n         self.nodes = start_nodes("
      },
      {
        "sha": "fe62aa4fd29b4f81b195feb8deeaf760fc11e956",
        "filename": "qa/rpc-tests/test_framework/util.py",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/qa/rpc-tests/test_framework/util.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/qa/rpc-tests/test_framework/util.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/util.py?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -182,7 +182,7 @@ def initialize_datadir(dirname, n):\n     if not os.path.isdir(datadir):\n         os.makedirs(datadir)\n     rpc_u, rpc_p = rpc_auth_pair(n)\n-    with open(os.path.join(datadir, \"bitcoin.conf\"), 'w', encoding='utf8') as f:\n+    with open(os.path.join(datadir, \"blockcash.conf\"), 'w', encoding='utf8') as f:\n         f.write(\"regtest=1\\n\")\n         f.write(\"rpcuser=\" + rpc_u + \"\\n\")\n         f.write(\"rpcpassword=\" + rpc_p + \"\\n\")\n@@ -213,7 +213,7 @@ def wait_for_bitcoind_start(process, url, i):\n     '''\n     while True:\n         if process.poll() is not None:\n-            raise Exception('bitcoind exited with status %i during initialization' % process.returncode)\n+            raise Exception('blockcashd exited with status %i during initialization' % process.returncode)\n         try:\n             rpc = get_rpc_proxy(url, i)\n             blocks = rpc.getblockcount()\n@@ -249,12 +249,12 @@ def initialize_chain(test_dir, num_nodes, cachedir):\n         # Create cache directories, run bitcoinds:\n         for i in range(MAX_NODES):\n             datadir=initialize_datadir(cachedir, i)\n-            args = [ os.getenv(\"BITCOIND\", \"bitcoind\"), \"-server\", \"-keypool=1\", \"-datadir=\"+datadir, \"-discover=0\" ]\n+            args = [ os.getenv(\"BLOCKCASHD\", \"blockcash\"), \"-server\", \"-keypool=1\", \"-datadir=\"+datadir, \"-discover=0\" ]\n             if i > 0:\n                 args.append(\"-connect=127.0.0.1:\"+str(p2p_port(0)))\n             bitcoind_processes[i] = subprocess.Popen(args)\n             if os.getenv(\"PYTHON_DEBUG\", \"\"):\n-                print(\"initialize_chain: bitcoind started, waiting for RPC to come up\")\n+                print(\"initialize_chain: blockcash started, waiting for RPC to come up\")\n             wait_for_bitcoind_start(bitcoind_processes[i], rpc_url(i), i)\n             if os.getenv(\"PYTHON_DEBUG\", \"\"):\n                 print(\"initialize_chain: RPC successfully started\")\n@@ -335,12 +335,12 @@ def start_node(i, dirname, extra_args=None, rpchost=None, timewait=None, binary=\n     \"\"\"\n     datadir = os.path.join(dirname, \"node\"+str(i))\n     if binary is None:\n-        binary = os.getenv(\"BITCOIND\", \"bitcoind\")\n+        binary = os.getenv(\"BLOCKCASHD\", \"blockcash\")\n     args = [ binary, \"-datadir=\"+datadir, \"-server\", \"-keypool=1\", \"-discover=0\", \"-rest\", \"-mocktime=\"+str(get_mocktime()) ]\n     if extra_args is not None: args.extend(extra_args)\n     bitcoind_processes[i] = subprocess.Popen(args)\n     if os.getenv(\"PYTHON_DEBUG\", \"\"):\n-        print(\"start_node: bitcoind started, waiting for RPC to come up\")\n+        print(\"start_node: blockcash started, waiting for RPC to come up\")\n     url = rpc_url(i, rpchost)\n     wait_for_bitcoind_start(bitcoind_processes[i], url, i)\n     if os.getenv(\"PYTHON_DEBUG\", \"\"):\n@@ -510,10 +510,10 @@ def assert_fee_amount(fee, tx_size, fee_per_kB):\n     \"\"\"Assert the fee was in range\"\"\"\n     target_fee = tx_size * fee_per_kB / 1000\n     if fee < target_fee:\n-        raise AssertionError(\"Fee of %s BTC too low! (Should be %s BTC)\"%(str(fee), str(target_fee)))\n+        raise AssertionError(\"Fee of %s BSC too low! (Should be %s BSC)\"%(str(fee), str(target_fee)))\n     # allow the wallet's estimation to be at most 2 bytes off\n     if fee > (tx_size + 2) * fee_per_kB / 1000:\n-        raise AssertionError(\"Fee of %s BTC too high! (Should be %s BTC)\"%(str(fee), str(target_fee)))\n+        raise AssertionError(\"Fee of %s BSC too high! (Should be %s BSC)\"%(str(fee), str(target_fee)))\n \n def assert_equal(thing1, thing2, *args):\n     if thing1 != thing2 or any(thing1 != arg for arg in args):"
      },
      {
        "sha": "8b92057800196e44466ce4882ba2956c3b8deb4a",
        "filename": "share/qt/Info.plist.in",
        "status": "modified",
        "additions": 9,
        "deletions": 9,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/share/qt/Info.plist.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/share/qt/Info.plist.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/qt/Info.plist.in?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -29,27 +29,27 @@\n   <string>????</string>\n \n   <key>CFBundleExecutable</key>\n-  <string>Bitcoin-Qt</string>\n+  <string>Blockcash-Qt</string>\n   \n   <key>CFBundleName</key>\n-  <string>Bitcoin-Qt</string>\n+  <string>Blockcash-Qt</string>\n \n   <key>LSHasLocalizedDisplayName</key>\n   <true/>\n \n   <key>CFBundleIdentifier</key>\n-  <string>org.bitcoinfoundation.Bitcoin-Qt</string>\n+  <string>org.blockcash.Blockcash-Qt</string>\n \n   <key>CFBundleURLTypes</key>\n   <array>\n     <dict>\n       <key>CFBundleTypeRole</key>\n       <string>Editor</string>\n       <key>CFBundleURLName</key>\n-      <string>org.bitcoin.BitcoinPayment</string>\n+      <string>org.blockcash.BlockcashPayment</string>\n       <key>CFBundleURLSchemes</key>\n       <array>\n-        <string>bitcoin</string>\n+        <string>blockcash</string>\n       </array>\n     </dict>\n   </array>\n@@ -58,17 +58,17 @@\n   <array>\n     <dict>\n       <key>UTTypeIdentifier</key>\n-      <string>org.bitcoin.paymentrequest</string>\n+      <string>org.blockcash.paymentrequest</string>\n       <key>UTTypeDescription</key>\n-      <string>Bitcoin payment request</string>\n+      <string>Blockcash payment request</string>\n       <key>UTTypeConformsTo</key>\n       <array>\n         <string>public.data</string>\n       </array>\n       <key>UTTypeTagSpecification</key>\n       <dict>\n         <key>public.mime-type</key>\n-        <string>application/x-bitcoin-payment-request</string>\n+        <string>application/x-blockcash-payment-request</string>\n         <key>public.filename-extension</key>\n         <array>\n           <string>bitcoinpaymentrequest</string>\n@@ -84,7 +84,7 @@\n       <string>Editor</string>\n       <key>LSItemContentTypes</key>\n       <array>\n-        <string>org.bitcoin.paymentrequest</string>\n+        <string>org.blockcash.paymentrequest</string>\n       </array>\n       <key>LSHandlerRank</key>\n       <string>Owner</string>"
      },
      {
        "sha": "9c1bdd571f2ccd6763c0851b7319758dbdbdb3b1",
        "filename": "share/rpcuser/rpcuser.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/share/rpcuser/rpcuser.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/share/rpcuser/rpcuser.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/rpcuser/rpcuser.py?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -36,6 +36,6 @@\n m = hmac.new(bytearray(salt, 'utf-8'), bytearray(password, 'utf-8'), digestmod)\n result = m.hexdigest()\n \n-print(\"String to be appended to bitcoin.conf:\")\n+print(\"String to be appended to blockcash.conf:\")\n print(\"rpcauth=\"+username+\":\"+salt+\"$\"+result)\n print(\"Your password:\\n\"+password)"
      },
      {
        "sha": "eb146c099e12bf54cdca5c50b7c932be0158b29b",
        "filename": "share/setup.nsi.in",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/share/setup.nsi.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/share/setup.nsi.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/setup.nsi.in?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -50,9 +50,9 @@ Var StartMenuGroup\n # Installer attributes\n OutFile @abs_top_srcdir@/@PACKAGE_TARNAME@-${VERSION}-win@WINDOWS_BITS@-setup.exe\n !if \"@WINDOWS_BITS@\" == \"64\"\n-InstallDir $PROGRAMFILES64\\Bitcoin\n+InstallDir $PROGRAMFILES64\\Blockcash\n !else\n-InstallDir $PROGRAMFILES\\Bitcoin\n+InstallDir $PROGRAMFILES\\Blockcash\n !endif\n CRCCheck on\n XPStyle on\n@@ -104,7 +104,7 @@ Section -post SEC0001\n     WriteRegDWORD HKCU \"SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\$(^Name)\" NoModify 1\n     WriteRegDWORD HKCU \"SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\$(^Name)\" NoRepair 1\n     WriteRegStr HKCR \"@PACKAGE_TARNAME@\" \"URL Protocol\" \"\"\n-    WriteRegStr HKCR \"@PACKAGE_TARNAME@\" \"\" \"URL:Bitcoin\"\n+    WriteRegStr HKCR \"@PACKAGE_TARNAME@\" \"\" \"URL:Blockcash\"\n     WriteRegStr HKCR \"@PACKAGE_TARNAME@\\DefaultIcon\" \"\" $INSTDIR\\@BITCOIN_GUI_NAME@@EXEEXT@\n     WriteRegStr HKCR \"@PACKAGE_TARNAME@\\shell\\open\\command\" \"\" '\"$INSTDIR\\@BITCOIN_GUI_NAME@@EXEEXT@\" \"%1\"'\n SectionEnd\n@@ -137,7 +137,7 @@ Section -un.post UNSEC0001\n     Delete /REBOOTOK \"$SMPROGRAMS\\$StartMenuGroup\\Uninstall $(^Name).lnk\"\n     Delete /REBOOTOK \"$SMPROGRAMS\\$StartMenuGroup\\$(^Name).lnk\"\n     Delete /REBOOTOK \"$SMPROGRAMS\\$StartMenuGroup\\@PACKAGE_NAME@ (testnet, @WINDOWS_BITS@-bit).lnk\"\n-    Delete /REBOOTOK \"$SMSTARTUP\\Bitcoin.lnk\"\n+    Delete /REBOOTOK \"$SMSTARTUP\\Blockcash.lnk\"\n     Delete /REBOOTOK $INSTDIR\\uninstall.exe\n     Delete /REBOOTOK $INSTDIR\\debug.log\n     Delete /REBOOTOK $INSTDIR\\db.log"
      },
      {
        "sha": "7ddda81159830bb024e2698c1cd8ba94adbea841",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 24,
        "deletions": 24,
        "changes": 48,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -66,15 +66,15 @@ TESTS =\n BENCHMARKS =\n \n if BUILD_BITCOIND\n-  bin_PROGRAMS += bitcoind\n+  bin_PROGRAMS += blockcashd\n endif\n \n if BUILD_BITCOIN_UTILS\n-  bin_PROGRAMS += bitcoin-cli bitcoin-tx\n+  bin_PROGRAMS += blockcash-cli blockcash-tx\n endif\n \n .PHONY: FORCE check-symbols check-security\n-# bitcoin core #\n+# Blockcash core #\n BITCOIN_CORE_H = \\\n   addrdb.h \\\n   addrman.h \\\n@@ -351,16 +351,16 @@ nodist_libbitcoin_util_a_SOURCES = $(srcdir)/obj/build.h\n #\n \n # bitcoind binary #\n-bitcoind_SOURCES = bitcoind.cpp\n-bitcoind_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-bitcoind_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-bitcoind_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+blockcashd_SOURCES = bitcoind.cpp\n+blockcashd_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n+blockcashd_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+blockcashd_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n \n if TARGET_WINDOWS\n-bitcoind_SOURCES += bitcoind-res.rc\n+blockcashd_SOURCES += bitcoind-res.rc\n endif\n \n-bitcoind_LDADD = \\\n+blockcashd_LDADD = \\\n   $(LIBBITCOIN_SERVER) \\\n   $(LIBBITCOIN_COMMON) \\\n   $(LIBUNIVALUE) \\\n@@ -373,46 +373,46 @@ bitcoind_LDADD = \\\n   $(LIBMEMENV) \\\n   $(LIBSECP256K1)\n \n-bitcoind_LDADD += $(BOOST_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS) $(ZMQ_LIBS)\n+blockcashd_LDADD += $(BOOST_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS) $(ZMQ_LIBS)\n \n # bitcoin-cli binary #\n-bitcoin_cli_SOURCES = bitcoin-cli.cpp\n-bitcoin_cli_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(EVENT_CFLAGS)\n-bitcoin_cli_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-bitcoin_cli_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+blockcash_cli_SOURCES = bitcoin-cli.cpp\n+blockcash_cli_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(EVENT_CFLAGS)\n+blockcash_cli_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+blockcash_cli_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n \n if TARGET_WINDOWS\n-bitcoin_cli_SOURCES += bitcoin-cli-res.rc\n+blockcash_cli_SOURCES += bitcoin-cli-res.rc\n endif\n \n-bitcoin_cli_LDADD = \\\n+blockcash_cli_LDADD = \\\n   $(LIBBITCOIN_CLI) \\\n   $(LIBUNIVALUE) \\\n   $(LIBBITCOIN_UTIL) \\\n   $(LIBBITCOIN_CRYPTO)\n \n-bitcoin_cli_LDADD += $(BOOST_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(EVENT_LIBS)\n+blockcash_cli_LDADD += $(BOOST_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(EVENT_LIBS)\n #\n \n # bitcoin-tx binary #\n-bitcoin_tx_SOURCES = bitcoin-tx.cpp\n-bitcoin_tx_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-bitcoin_tx_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-bitcoin_tx_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+blockcash_tx_SOURCES = bitcoin-tx.cpp\n+blockcash_tx_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n+blockcash_tx_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+blockcash_tx_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n \n if TARGET_WINDOWS\n-bitcoin_tx_SOURCES += bitcoin-tx-res.rc\n+blockcash_tx_SOURCES += bitcoin-tx-res.rc\n endif\n \n-bitcoin_tx_LDADD = \\\n+blockcash_tx_LDADD = \\\n   $(LIBUNIVALUE) \\\n   $(LIBBITCOIN_COMMON) \\\n   $(LIBBITCOIN_UTIL) \\\n   $(LIBBITCOIN_CONSENSUS) \\\n   $(LIBBITCOIN_CRYPTO) \\\n   $(LIBSECP256K1)\n \n-bitcoin_tx_LDADD += $(BOOST_LIBS) $(CRYPTO_LIBS)\n+blockcash_tx_LDADD += $(BOOST_LIBS) $(CRYPTO_LIBS)\n #\n \n # bitcoinconsensus library #"
      },
      {
        "sha": "dd38656f0b80fe82e2cc35988e055b88223316a2",
        "filename": "src/Makefile.bench.include",
        "status": "modified",
        "additions": 12,
        "deletions": 12,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/Makefile.bench.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/Makefile.bench.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.bench.include?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -2,15 +2,15 @@\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-bin_PROGRAMS += bench/bench_bitcoin\n+bin_PROGRAMS += bench/bench_blockcash\n BENCH_SRCDIR = bench\n-BENCH_BINARY = bench/bench_bitcoin$(EXEEXT)\n+BENCH_BINARY = bench/bench_blockcash$(EXEEXT)\n \n RAW_TEST_FILES = \\\n   bench/data/block413567.raw\n GENERATED_TEST_FILES = $(RAW_TEST_FILES:.raw=.raw.h)\n \n-bench_bench_bitcoin_SOURCES = \\\n+bench_bench_blockcash_SOURCES = \\\n   bench/bench_bitcoin.cpp \\\n   bench/bench.cpp \\\n   bench/bench.h \\\n@@ -27,11 +27,11 @@ bench_bench_bitcoin_SOURCES = \\\n   bench/perf.cpp \\\n   bench/perf.h\n \n-nodist_bench_bench_bitcoin_SOURCES = $(GENERATED_TEST_FILES)\n+nodist_bench_bench_blockcash_SOURCES = $(GENERATED_TEST_FILES)\n \n-bench_bench_bitcoin_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(EVENT_CLFAGS) $(EVENT_PTHREADS_CFLAGS) -I$(builddir)/bench/\n-bench_bench_bitcoin_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-bench_bench_bitcoin_LDADD = \\\n+bench_bench_blockcash_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(EVENT_CLFAGS) $(EVENT_PTHREADS_CFLAGS) -I$(builddir)/bench/\n+bench_bench_blockcash_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+bench_bench_blockcash_LDADD = \\\n   $(LIBBITCOIN_SERVER) \\\n   $(LIBBITCOIN_COMMON) \\\n   $(LIBBITCOIN_UTIL) \\\n@@ -43,16 +43,16 @@ bench_bench_bitcoin_LDADD = \\\n   $(LIBUNIVALUE)\n \n if ENABLE_ZMQ\n-bench_bench_bitcoin_LDADD += $(LIBBITCOIN_ZMQ) $(ZMQ_LIBS)\n+bench_bench_blockcash_LDADD += $(LIBBITCOIN_ZMQ) $(ZMQ_LIBS)\n endif\n \n if ENABLE_WALLET\n-bench_bench_bitcoin_SOURCES += bench/coin_selection.cpp\n-bench_bench_bitcoin_LDADD += $(LIBBITCOIN_WALLET) $(LIBBITCOIN_CRYPTO)\n+bench_bench_blockcash_SOURCES += bench/coin_selection.cpp\n+bench_bench_blockcash_LDADD += $(LIBBITCOIN_WALLET) $(LIBBITCOIN_CRYPTO)\n endif\n \n-bench_bench_bitcoin_LDADD += $(BOOST_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS)\n-bench_bench_bitcoin_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+bench_bench_blockcash_LDADD += $(BOOST_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS)\n+bench_bench_blockcash_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n \n CLEAN_BITCOIN_BENCH = bench/*.gcda bench/*.gcno $(GENERATED_TEST_FILES)\n "
      },
      {
        "sha": "600ac38525679784b9a36d7f56961a694845963c",
        "filename": "src/Makefile.qt.include",
        "status": "modified",
        "additions": 14,
        "deletions": 14,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/Makefile.qt.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/Makefile.qt.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qt.include?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -2,7 +2,7 @@\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-bin_PROGRAMS += qt/bitcoin-qt\n+bin_PROGRAMS += qt/blockcash-qt\n EXTRA_LIBRARIES += qt/libbitcoinqt.a\n \n # bitcoin qt core #\n@@ -378,37 +378,37 @@ QT_FORMS_H=$(join $(dir $(QT_FORMS_UI)),$(addprefix ui_, $(notdir $(QT_FORMS_UI:\n # Most files will depend on the forms and moc files as includes. Generate them\n # before anything else.\n $(QT_MOC): $(QT_FORMS_H)\n-$(qt_libbitcoinqt_a_OBJECTS) $(qt_bitcoin_qt_OBJECTS) : | $(QT_MOC)\n+$(qt_libbitcoinqt_a_OBJECTS) $(qt_blockcash_qt_OBJECTS) : | $(QT_MOC)\n \n #Generating these with a half-written protobuf header leads to wacky results.\n #This makes sure it's done.\n $(QT_MOC): $(PROTOBUF_H)\n $(QT_MOC_CPP): $(PROTOBUF_H)\n \n # bitcoin-qt binary #\n-qt_bitcoin_qt_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(BITCOIN_QT_INCLUDES) \\\n+qt_blockcash_qt_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(BITCOIN_QT_INCLUDES) \\\n   $(QT_INCLUDES) $(PROTOBUF_CFLAGS) $(QR_CFLAGS)\n-qt_bitcoin_qt_CXXFLAGS = $(AM_CXXFLAGS) $(QT_PIE_FLAGS)\n+qt_blockcash_qt_CXXFLAGS = $(AM_CXXFLAGS) $(QT_PIE_FLAGS)\n \n-qt_bitcoin_qt_SOURCES = qt/bitcoin.cpp\n+qt_blockcash_qt_SOURCES = qt/bitcoin.cpp\n if TARGET_DARWIN\n   qt_bitcoin_qt_SOURCES += $(BITCOIN_MM)\n endif\n if TARGET_WINDOWS\n-  qt_bitcoin_qt_SOURCES += $(BITCOIN_RC)\n+  qt_blockcash_qt_SOURCES += $(BITCOIN_RC)\n endif\n-qt_bitcoin_qt_LDADD = qt/libbitcoinqt.a $(LIBBITCOIN_SERVER)\n+qt_blockcash_qt_LDADD = qt/libbitcoinqt.a $(LIBBITCOIN_SERVER)\n if ENABLE_WALLET\n-qt_bitcoin_qt_LDADD += $(LIBBITCOIN_WALLET)\n+qt_blockcash_qt_LDADD += $(LIBBITCOIN_WALLET)\n endif\n if ENABLE_ZMQ\n-qt_bitcoin_qt_LDADD += $(LIBBITCOIN_ZMQ) $(ZMQ_LIBS)\n+qt_blockcash_qt_LDADD += $(LIBBITCOIN_ZMQ) $(ZMQ_LIBS)\n endif\n-qt_bitcoin_qt_LDADD += $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CONSENSUS) $(LIBBITCOIN_CRYPTO) $(LIBUNIVALUE) $(LIBLEVELDB) $(LIBMEMENV) \\\n+qt_blockcash_qt_LDADD += $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CONSENSUS) $(LIBBITCOIN_CRYPTO) $(LIBUNIVALUE) $(LIBLEVELDB) $(LIBMEMENV) \\\n   $(BOOST_LIBS) $(QT_LIBS) $(QT_DBUS_LIBS) $(QR_LIBS) $(PROTOBUF_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(LIBSECP256K1) \\\n   $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS)\n-qt_bitcoin_qt_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(QT_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n-qt_bitcoin_qt_LIBTOOLFLAGS = --tag CXX\n+qt_blockcash_qt_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(QT_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+qt_blockcash_qt_LIBTOOLFLAGS = --tag CXX\n \n #locale/foo.ts -> locale/foo.qm\n QT_QM=$(QT_TS:.ts=.qm)\n@@ -440,9 +440,9 @@ CLEAN_QT = $(nodist_qt_libbitcoinqt_a_SOURCES) $(QT_QM) $(QT_FORMS_H) qt/*.gcda\n CLEANFILES += $(CLEAN_QT)\n \n bitcoin_qt_clean: FORCE\n-\trm -f $(CLEAN_QT) $(qt_libbitcoinqt_a_OBJECTS) $(qt_bitcoin_qt_OBJECTS) qt/bitcoin-qt$(EXEEXT) $(LIBBITCOINQT)\n+\trm -f $(CLEAN_QT) $(qt_libbitcoinqt_a_OBJECTS) $(qt_bitcoin_qt_OBJECTS) qt/blockcash-qt$(EXEEXT) $(LIBBITCOINQT)\n \n-bitcoin_qt : qt/bitcoin-qt$(EXEEXT)\n+bitcoin_qt : qt/blockcash-qt$(EXEEXT)\n \n ui_%.h: %.ui\n \t@test -f $(UIC)"
      },
      {
        "sha": "8f4e0a476b35461987e274a918ab8b851a9b6a94",
        "filename": "src/Makefile.qttest.include",
        "status": "modified",
        "additions": 15,
        "deletions": 15,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/Makefile.qttest.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/Makefile.qttest.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qttest.include?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -2,8 +2,8 @@\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-bin_PROGRAMS += qt/test/test_bitcoin-qt\n-TESTS += qt/test/test_bitcoin-qt\n+bin_PROGRAMS += qt/test/test_blockcash-qt\n+TESTS += qt/test/test_blockcashn-qt\n \n TEST_QT_MOC_CPP = \\\n   qt/test/moc_compattests.cpp \\\n@@ -21,44 +21,44 @@ TEST_QT_H = \\\n   qt/test/paymentrequestdata.h \\\n   qt/test/paymentservertests.h\n \n-qt_test_test_bitcoin_qt_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(BITCOIN_QT_INCLUDES) \\\n+qt_test_test_blockcash_qt_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(BITCOIN_QT_INCLUDES) \\\n   $(QT_INCLUDES) $(QT_TEST_INCLUDES) $(PROTOBUF_CFLAGS)\n \n-qt_test_test_bitcoin_qt_SOURCES = \\\n+qt_test_test_blockcash_qt_SOURCES = \\\n   qt/test/compattests.cpp \\\n   qt/test/rpcnestedtests.cpp \\\n   qt/test/test_main.cpp \\\n   qt/test/uritests.cpp \\\n   $(TEST_QT_H)\n if ENABLE_WALLET\n-qt_test_test_bitcoin_qt_SOURCES += \\\n+qt_test_test_blockcash_qt_SOURCES += \\\n   qt/test/paymentservertests.cpp\n endif\n \n-nodist_qt_test_test_bitcoin_qt_SOURCES = $(TEST_QT_MOC_CPP)\n+nodist_qt_test_test_blockcash_qt_SOURCES = $(TEST_QT_MOC_CPP)\n \n-qt_test_test_bitcoin_qt_LDADD = $(LIBBITCOINQT) $(LIBBITCOIN_SERVER)\n+qt_test_test_blockcash_qt_LDADD = $(LIBBITCOINQT) $(LIBBITCOIN_SERVER)\n if ENABLE_WALLET\n-qt_test_test_bitcoin_qt_LDADD += $(LIBBITCOIN_WALLET)\n+qt_test_test_blockcash_qt_LDADD += $(LIBBITCOIN_WALLET)\n endif\n if ENABLE_ZMQ\n-qt_test_test_bitcoin_qt_LDADD += $(LIBBITCOIN_ZMQ) $(ZMQ_LIBS)\n+qt_test_test_blockcash_qt_LDADD += $(LIBBITCOIN_ZMQ) $(ZMQ_LIBS)\n endif\n-qt_test_test_bitcoin_qt_LDADD += $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CONSENSUS) $(LIBBITCOIN_CRYPTO) $(LIBUNIVALUE) $(LIBLEVELDB) \\\n+qt_test_test_blockcash_qt_LDADD += $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CONSENSUS) $(LIBBITCOIN_CRYPTO) $(LIBUNIVALUE) $(LIBLEVELDB) \\\n   $(LIBMEMENV) $(BOOST_LIBS) $(QT_DBUS_LIBS) $(QT_TEST_LIBS) $(QT_LIBS) \\\n   $(QR_LIBS) $(PROTOBUF_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(LIBSECP256K1) \\\n   $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS)\n-qt_test_test_bitcoin_qt_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(QT_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n-qt_test_test_bitcoin_qt_CXXFLAGS = $(AM_CXXFLAGS) $(QT_PIE_FLAGS)\n+qt_test_test_blockcash_qt_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(QT_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+qt_test_test_blockcash_qt_CXXFLAGS = $(AM_CXXFLAGS) $(QT_PIE_FLAGS)\n \n CLEAN_BITCOIN_QT_TEST = $(TEST_QT_MOC_CPP) qt/test/*.gcda qt/test/*.gcno\n \n CLEANFILES += $(CLEAN_BITCOIN_QT_TEST)\n \n-test_bitcoin_qt : qt/test/test_bitcoin-qt$(EXEEXT)\n+test_bitcoin_qt : qt/test/test_blockcash-qt$(EXEEXT)\n \n-test_bitcoin_qt_check : qt/test/test_bitcoin-qt$(EXEEXT) FORCE\n+test_bitcoin_qt_check : qt/test/test_blockcash-qt$(EXEEXT) FORCE\n \t$(MAKE) check-TESTS TESTS=$^\n \n test_bitcoin_qt_clean: FORCE\n-\trm -f $(CLEAN_BITCOIN_QT_TEST) $(qt_test_test_bitcoin_qt_OBJECTS)\n+\trm -f $(CLEAN_BITCOIN_QT_TEST) $(qt_test_test_blockcash_qt_OBJECTS)"
      },
      {
        "sha": "7008fba270937659e9fbf94f577a39bb5a3683e5",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 20,
        "deletions": 20,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -2,11 +2,11 @@\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-TESTS += test/test_bitcoin\n-bin_PROGRAMS += test/test_bitcoin\n-noinst_PROGRAMS += test/test_bitcoin_fuzzy\n+TESTS += test/test_blockcash\n+bin_PROGRAMS += test/test_blockcash\n+noinst_PROGRAMS += test/test_blockcash_fuzzy\n TEST_SRCDIR = test\n-TEST_BINARY=test/test_bitcoin$(EXEEXT)\n+TEST_BINARY=test/test_blockcash$(EXEEXT)\n \n \n EXTRA_DIST += \\\n@@ -146,30 +146,30 @@ BITCOIN_TESTS += \\\n   wallet/test/crypto_tests.cpp\n endif\n \n-test_test_bitcoin_SOURCES = $(BITCOIN_TESTS) $(JSON_TEST_FILES) $(RAW_TEST_FILES)\n-test_test_bitcoin_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -I$(builddir)/test/ $(TESTDEFS) $(EVENT_CFLAGS)\n-test_test_bitcoin_LDADD = $(LIBBITCOIN_SERVER) $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CONSENSUS) $(LIBBITCOIN_CRYPTO) $(LIBUNIVALUE) $(LIBLEVELDB) $(LIBMEMENV) \\\n+test_test_blockcash_SOURCES = $(BITCOIN_TESTS) $(JSON_TEST_FILES) $(RAW_TEST_FILES)\n+test_test_blockcash_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -I$(builddir)/test/ $(TESTDEFS) $(EVENT_CFLAGS)\n+test_test_blockcash_LDADD = $(LIBBITCOIN_SERVER) $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CONSENSUS) $(LIBBITCOIN_CRYPTO) $(LIBUNIVALUE) $(LIBLEVELDB) $(LIBMEMENV) \\\n   $(BOOST_LIBS) $(BOOST_UNIT_TEST_FRAMEWORK_LIB) $(LIBSECP256K1) $(EVENT_LIBS)\n-test_test_bitcoin_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_test_blockcash_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n if ENABLE_WALLET\n-test_test_bitcoin_LDADD += $(LIBBITCOIN_WALLET)\n+test_test_blockcash_LDADD += $(LIBBITCOIN_WALLET)\n endif\n \n-test_test_bitcoin_LDADD += $(LIBBITCOIN_CONSENSUS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS)\n-test_test_bitcoin_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS) -static\n+test_test_blockcash_LDADD += $(LIBBITCOIN_CONSENSUS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS)\n+test_test_blockcash_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS) -static\n \n if ENABLE_ZMQ\n-test_test_bitcoin_LDADD += $(ZMQ_LIBS)\n+test_test_blockcash_LDADD += $(ZMQ_LIBS)\n endif\n #\n \n # test_bitcoin_fuzzy binary #\n-test_test_bitcoin_fuzzy_SOURCES = test/test_bitcoin_fuzzy.cpp\n-test_test_bitcoin_fuzzy_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_test_bitcoin_fuzzy_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_test_bitcoin_fuzzy_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_test_blockcash_fuzzy_SOURCES = test/test_blockcash_fuzzy.cpp\n+test_test_blockcash_fuzzy_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n+test_test_blockcash_fuzzy_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_test_blockcash_fuzzy_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n \n-test_test_bitcoin_fuzzy_LDADD = \\\n+test_test_blockcash_fuzzy_LDADD = \\\n   $(LIBUNIVALUE) \\\n   $(LIBBITCOIN_SERVER) \\\n   $(LIBBITCOIN_COMMON) \\\n@@ -178,10 +178,10 @@ test_test_bitcoin_fuzzy_LDADD = \\\n   $(LIBBITCOIN_CRYPTO) \\\n   $(LIBSECP256K1)\n \n-test_test_bitcoin_fuzzy_LDADD += $(BOOST_LIBS) $(CRYPTO_LIBS)\n+test_test_blockcash_fuzzy_LDADD += $(BOOST_LIBS) $(CRYPTO_LIBS)\n #\n \n-nodist_test_test_bitcoin_SOURCES = $(GENERATED_TEST_FILES)\n+nodist_test_test_blockcash_SOURCES = $(GENERATED_TEST_FILES)\n \n $(BITCOIN_TESTS): $(GENERATED_TEST_FILES)\n \n@@ -198,7 +198,7 @@ bitcoin_test_check: $(TEST_BINARY) FORCE\n \t$(MAKE) check-TESTS TESTS=$^\n \n bitcoin_test_clean : FORCE\n-\trm -f $(CLEAN_BITCOIN_TEST) $(test_test_bitcoin_OBJECTS) $(TEST_BINARY)\n+\trm -f $(CLEAN_BITCOIN_TEST) $(test_test_blockcash_OBJECTS) $(TEST_BINARY)\n \n check-local:\n \t@echo \"Running test/bitcoin-util-test.py...\""
      },
      {
        "sha": "f128f79508a296cf03d3a169f3fc5ea7953c01a6",
        "filename": "src/amount.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/amount.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/amount.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/amount.cpp?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -7,7 +7,7 @@\n \n #include \"tinyformat.h\"\n \n-const std::string CURRENCY_UNIT = \"BTC\";\n+const std::string CURRENCY_UNIT = \"BSC\";\n \n CFeeRate::CFeeRate(const CAmount& nFeePaid, size_t nBytes_)\n {"
      },
      {
        "sha": "a5a346a56f624e2c7b3236c0e949cb67ff471f99",
        "filename": "src/bench/.gitignore",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/bench/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/bench/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/.gitignore?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -1 +1 @@\n-bench_bitcoin\n+bench_blockcash"
      },
      {
        "sha": "bb45562f57abfeb2e5e3060b33f5917f56c247ce",
        "filename": "src/bitcoin-cli-res.rc",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/bitcoin-cli-res.rc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/bitcoin-cli-res.rc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli-res.rc?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -16,14 +16,14 @@ BEGIN\n     BEGIN\n         BLOCK \"040904E4\" // U.S. English - multilingual (hex)\n         BEGIN\n-            VALUE \"CompanyName\",        \"Bitcoin\"\n-            VALUE \"FileDescription\",    \"bitcoin-cli (JSON-RPC client for \" PACKAGE_NAME \")\"\n+            VALUE \"CompanyName\",        \"Blockcash\"\n+            VALUE \"FileDescription\",    \"blockcash-cli (JSON-RPC client for \" PACKAGE_NAME \")\"\n             VALUE \"FileVersion\",        VER_FILEVERSION_STR\n-            VALUE \"InternalName\",       \"bitcoin-cli\"\n+            VALUE \"InternalName\",       \"blockcash-cli\"\n             VALUE \"LegalCopyright\",     COPYRIGHT_STR\n             VALUE \"LegalTrademarks1\",   \"Distributed under the MIT software license, see the accompanying file COPYING or http://www.opensource.org/licenses/mit-license.php.\"\n-            VALUE \"OriginalFilename\",   \"bitcoin-cli.exe\"\n-            VALUE \"ProductName\",        \"bitcoin-cli\"\n+            VALUE \"OriginalFilename\",   \"blockcash-cli.exe\"\n+            VALUE \"ProductName\",        \"blockcash-cli\"\n             VALUE \"ProductVersion\",     VER_PRODUCTVERSION_STR\n         END\n     END"
      },
      {
        "sha": "c4858ef5ad1113bfe09c2dab229d68ec4dd8c9b8",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -81,10 +81,10 @@ static int AppInitRPC(int argc, char* argv[])\n         std::string strUsage = strprintf(_(\"%s RPC client version\"), _(PACKAGE_NAME)) + \" \" + FormatFullVersion() + \"\\n\";\n         if (!IsArgSet(\"-version\")) {\n             strUsage += \"\\n\" + _(\"Usage:\") + \"\\n\" +\n-                  \"  bitcoin-cli [options] <command> [params]  \" + strprintf(_(\"Send command to %s\"), _(PACKAGE_NAME)) + \"\\n\" +\n-                  \"  bitcoin-cli [options] -named <command> [name=value] ... \" + strprintf(_(\"Send command to %s (with named arguments)\"), _(PACKAGE_NAME)) + \"\\n\" +\n-                  \"  bitcoin-cli [options] help                \" + _(\"List commands\") + \"\\n\" +\n-                  \"  bitcoin-cli [options] help <command>      \" + _(\"Get help for a command\") + \"\\n\";\n+                  \"  blockcash-cli [options] <command> [params]  \" + strprintf(_(\"Send command to %s\"), _(PACKAGE_NAME)) + \"\\n\" +\n+                  \"  blockcash-cli [options] -named <command> [name=value] ... \" + strprintf(_(\"Send command to %s (with named arguments)\"), _(PACKAGE_NAME)) + \"\\n\" +\n+                  \"  blockcash-cli [options] help                \" + _(\"List commands\") + \"\\n\" +\n+                  \"  blockcash-cli [options] help <command>      \" + _(\"Get help for a command\") + \"\\n\";\n \n             strUsage += \"\\n\" + HelpMessageCli();\n         }"
      },
      {
        "sha": "a61684f2e9a8c96eaf21ed0f61e620fa0f1c54fe",
        "filename": "src/bitcoin-tx-res.rc",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/bitcoin-tx-res.rc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/bitcoin-tx-res.rc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-tx-res.rc?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -16,14 +16,14 @@ BEGIN\n     BEGIN\n         BLOCK \"040904E4\" // U.S. English - multilingual (hex)\n         BEGIN\n-            VALUE \"CompanyName\",        \"Bitcoin\"\n-            VALUE \"FileDescription\",    \"bitcoin-tx (CLI Bitcoin transaction editor utility)\"\n+            VALUE \"CompanyName\",        \"Blockcash\"\n+            VALUE \"FileDescription\",    \"blockcash-tx (CLI Blockcash transaction editor utility)\"\n             VALUE \"FileVersion\",        VER_FILEVERSION_STR\n-            VALUE \"InternalName\",       \"bitcoin-tx\"\n+            VALUE \"InternalName\",       \"blockcash-tx\"\n             VALUE \"LegalCopyright\",     COPYRIGHT_STR\n             VALUE \"LegalTrademarks1\",   \"Distributed under the MIT software license, see the accompanying file COPYING or http://www.opensource.org/licenses/mit-license.php.\"\n-            VALUE \"OriginalFilename\",   \"bitcoin-tx.exe\"\n-            VALUE \"ProductName\",        \"bitcoin-tx\"\n+            VALUE \"OriginalFilename\",   \"blockcash-tx.exe\"\n+            VALUE \"ProductName\",        \"blockcash-tx\"\n             VALUE \"ProductVersion\",     VER_PRODUCTVERSION_STR\n         END\n     END"
      },
      {
        "sha": "110089098d6e2ccccfe9f77ce8a90fdecc959228",
        "filename": "src/bitcoin-tx.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/bitcoin-tx.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/bitcoin-tx.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-tx.cpp?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -54,10 +54,10 @@ static int AppInitRawTx(int argc, char* argv[])\n     if (argc<2 || IsArgSet(\"-?\") || IsArgSet(\"-h\") || IsArgSet(\"-help\"))\n     {\n         // First part of help message is specific to this utility\n-        std::string strUsage = strprintf(_(\"%s bitcoin-tx utility version\"), _(PACKAGE_NAME)) + \" \" + FormatFullVersion() + \"\\n\\n\" +\n+        std::string strUsage = strprintf(_(\"%s blockcash-tx utility version\"), _(PACKAGE_NAME)) + \" \" + FormatFullVersion() + \"\\n\\n\" +\n             _(\"Usage:\") + \"\\n\" +\n-              \"  bitcoin-tx [options] <hex-tx> [commands]  \" + _(\"Update hex-encoded bitcoin transaction\") + \"\\n\" +\n-              \"  bitcoin-tx [options] -create [commands]   \" + _(\"Create hex-encoded bitcoin transaction\") + \"\\n\" +\n+              \"  blockcash-tx [options] <hex-tx> [commands]  \" + _(\"Update hex-encoded blockcash transaction\") + \"\\n\" +\n+              \"  blockcash-tx [options] -create [commands]   \" + _(\"Create hex-encoded blockcash transaction\") + \"\\n\" +\n               \"\\n\";\n \n         fprintf(stdout, \"%s\", strUsage.c_str());"
      },
      {
        "sha": "dcb65f64d90c841fc08e3eadbb03d8b0ac9bb283",
        "filename": "src/bitcoind-res.rc",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/bitcoind-res.rc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/bitcoind-res.rc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoind-res.rc?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -16,14 +16,14 @@ BEGIN\n     BEGIN\n         BLOCK \"040904E4\" // U.S. English - multilingual (hex)\n         BEGIN\n-            VALUE \"CompanyName\",        \"Bitcoin\"\n-            VALUE \"FileDescription\",    \"bitcoind (Bitcoin node with a JSON-RPC server)\"\n+            VALUE \"CompanyName\",        \"Blockcash\"\n+            VALUE \"FileDescription\",    \"blockcashd (Blockcash node with a JSON-RPC server)\"\n             VALUE \"FileVersion\",        VER_FILEVERSION_STR\n-            VALUE \"InternalName\",       \"bitcoind\"\n+            VALUE \"InternalName\",       \"blockcashd\"\n             VALUE \"LegalCopyright\",     COPYRIGHT_STR\n             VALUE \"LegalTrademarks1\",   \"Distributed under the MIT software license, see the accompanying file COPYING or http://www.opensource.org/licenses/mit-license.php.\"\n-            VALUE \"OriginalFilename\",   \"bitcoind.exe\"\n-            VALUE \"ProductName\",        \"bitcoind\"\n+            VALUE \"OriginalFilename\",   \"blockcashd.exe\"\n+            VALUE \"ProductName\",        \"blockcashd\"\n             VALUE \"ProductVersion\",     VER_PRODUCTVERSION_STR\n         END\n     END"
      },
      {
        "sha": "1fa387726c699b6671e47e1e703414213b6aee43",
        "filename": "src/bitcoind.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/bitcoind.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/bitcoind.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoind.cpp?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -86,7 +86,7 @@ bool AppInit(int argc, char* argv[])\n         else\n         {\n             strUsage += \"\\n\" + _(\"Usage:\") + \"\\n\" +\n-                  \"  bitcoind [options]                     \" + strprintf(_(\"Start %s Daemon\"), _(PACKAGE_NAME)) + \"\\n\";\n+                  \"  blockcashd [options]                     \" + strprintf(_(\"Start %s Daemon\"), _(PACKAGE_NAME)) + \"\\n\";\n \n             strUsage += \"\\n\" + HelpMessage(HMM_BITCOIND);\n         }\n@@ -120,12 +120,12 @@ bool AppInit(int argc, char* argv[])\n         // Command-line RPC\n         bool fCommandLine = false;\n         for (int i = 1; i < argc; i++)\n-            if (!IsSwitchChar(argv[i][0]) && !boost::algorithm::istarts_with(argv[i], \"bitcoin:\"))\n+            if (!IsSwitchChar(argv[i][0]) && !boost::algorithm::istarts_with(argv[i], \"blockcash:\"))\n                 fCommandLine = true;\n \n         if (fCommandLine)\n         {\n-            fprintf(stderr, \"Error: There is no RPC client functionality in bitcoind anymore. Use the bitcoin-cli utility instead.\\n\");\n+            fprintf(stderr, \"Error: There is no RPC client functionality in bitcoind anymore. Use the blockcash-cli utility instead.\\n\");\n             exit(EXIT_FAILURE);\n         }\n         // -server defaults to true for bitcoind but not for the GUI so do this here\n@@ -151,7 +151,7 @@ bool AppInit(int argc, char* argv[])\n         if (GetBoolArg(\"-daemon\", false))\n         {\n #if HAVE_DECL_DAEMON\n-            fprintf(stdout, \"Bitcoin server starting\\n\");\n+            fprintf(stdout, \"Blockcash server starting\\n\");\n \n             // Daemonize\n             if (daemon(1, 0)) { // don't chdir (1), do close FDs (0)"
      },
      {
        "sha": "1ef2df1f67919626c5bad52fbeb715d0e1562d2c",
        "filename": "src/clientversion.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/clientversion.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/clientversion.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/clientversion.cpp?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -13,7 +13,7 @@\n  * for both bitcoind and bitcoin-core, to make it harder for attackers to\n  * target servers or GUI users specifically.\n  */\n-const std::string CLIENT_NAME(\"Satoshi\");\n+const std::string CLIENT_NAME(\"BlockOne\");\n \n /**\n  * Client version number"
      },
      {
        "sha": "f19f406b40536b24db8b79b76779c05732ae579f",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -788,7 +788,7 @@ void InitLogging()\n     fLogIPs = GetBoolArg(\"-logips\", DEFAULT_LOGIPS);\n \n     LogPrintf(\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\");\n-    LogPrintf(\"Bitcoin version %s\\n\", FormatFullVersion());\n+    LogPrintf(\"Blockcashd version %s\\n\", FormatFullVersion());\n }\n \n namespace { // Variables internal to initialization process only"
      },
      {
        "sha": "c561e713c6fc5c5840f25ebbc9a60b21dc977c85",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -1468,7 +1468,7 @@ void ThreadMapPort()\n             }\n         }\n \n-        std::string strDesc = \"Bitcoin \" + FormatFullVersion();\n+        std::string strDesc = \"Blockcash \" + FormatFullVersion();\n \n         try {\n             while (true) {"
      },
      {
        "sha": "15185aef58b6e7b3750c2d70347457ec88bed414",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -33,7 +33,7 @@\n #include <boost/thread.hpp>\n \n #if defined(NDEBUG)\n-# error \"Bitcoin cannot be compiled without assertions.\"\n+# error \"Blockcash cannot be compiled without assertions.\"\n #endif\n \n std::atomic<int64_t> nTimeBestReceived(0); // Used only to inform the wallet of when we last received a block"
      },
      {
        "sha": "0a0e301695bb78d0768aefb5b61e9353bc4743f1",
        "filename": "src/qt/addressbookpage.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/qt/addressbookpage.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/qt/addressbookpage.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/addressbookpage.cpp?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -67,11 +67,11 @@ AddressBookPage::AddressBookPage(const PlatformStyle *platformStyle, Mode _mode,\n     switch(tab)\n     {\n     case SendingTab:\n-        ui->labelExplanation->setText(tr(\"These are your Bitcoin addresses for sending payments. Always check the amount and the receiving address before sending coins.\"));\n+        ui->labelExplanation->setText(tr(\"These are your Blockcash addresses for sending payments. Always check the amount and the receiving address before sending coins.\"));\n         ui->deleteAddress->setVisible(true);\n         break;\n     case ReceivingTab:\n-        ui->labelExplanation->setText(tr(\"These are your Bitcoin addresses for receiving payments. It is recommended to use a new receiving address for each transaction.\"));\n+        ui->labelExplanation->setText(tr(\"These are your Blockcash addresses for receiving payments. It is recommended to use a new receiving address for each transaction.\"));\n         ui->deleteAddress->setVisible(false);\n         break;\n     }"
      },
      {
        "sha": "69400425bfb7dd5f398a7137969e78ab20c1e951",
        "filename": "src/qt/askpassphrasedialog.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/qt/askpassphrasedialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/qt/askpassphrasedialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/askpassphrasedialog.cpp?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -111,7 +111,7 @@ void AskPassphraseDialog::accept()\n             break;\n         }\n         QMessageBox::StandardButton retval = QMessageBox::question(this, tr(\"Confirm wallet encryption\"),\n-                 tr(\"Warning: If you encrypt your wallet and lose your passphrase, you will <b>LOSE ALL OF YOUR BITCOINS</b>!\") + \"<br><br>\" + tr(\"Are you sure you wish to encrypt your wallet?\"),\n+                 tr(\"Warning: If you encrypt your wallet and lose your passphrase, you will <b>LOSE ALL OF YOUR BLOCKCASH</b>!\") + \"<br><br>\" + tr(\"Are you sure you wish to encrypt your wallet?\"),\n                  QMessageBox::Yes|QMessageBox::Cancel,\n                  QMessageBox::Cancel);\n         if(retval == QMessageBox::Yes)\n@@ -124,7 +124,7 @@ void AskPassphraseDialog::accept()\n                                          \"<qt>\" +\n                                          tr(\"%1 will close now to finish the encryption process. \"\n                                          \"Remember that encrypting your wallet cannot fully protect \"\n-                                         \"your bitcoins from being stolen by malware infecting your computer.\").arg(tr(PACKAGE_NAME)) +\n+                                         \"your Blockcashs from being stolen by malware infecting your computer.\").arg(tr(PACKAGE_NAME)) +\n                                          \"<br><br><b>\" +\n                                          tr(\"IMPORTANT: Any previous backups you have made of your wallet file \"\n                                          \"should be replaced with the newly generated, encrypted wallet file. \""
      },
      {
        "sha": "4e0eb43007a0cfb1c850c12f1631bbefac19ad3b",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -515,7 +515,7 @@ void BitcoinApplication::shutdownResult(int retval)\n \n void BitcoinApplication::handleRunawayException(const QString &message)\n {\n-    QMessageBox::critical(0, \"Runaway exception\", BitcoinGUI::tr(\"A fatal error occurred. Bitcoin can no longer continue safely and will quit.\") + QString(\"\\n\\n\") + message);\n+    QMessageBox::critical(0, \"Runaway exception\", BitcoinGUI::tr(\"A fatal error occurred. Blockcash can no longer continue safely and will quit.\") + QString(\"\\n\\n\") + message);\n     ::exit(EXIT_FAILURE);\n }\n "
      },
      {
        "sha": "34bbb90f8fcba77799c88e99b9a05765811b70de",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -284,7 +284,7 @@ void BitcoinGUI::createActions()\n     tabGroup->addAction(overviewAction);\n \n     sendCoinsAction = new QAction(platformStyle->SingleColorIcon(\":/icons/send\"), tr(\"&Send\"), this);\n-    sendCoinsAction->setStatusTip(tr(\"Send coins to a Bitcoin address\"));\n+    sendCoinsAction->setStatusTip(tr(\"Send coins to a Blockcash address\"));\n     sendCoinsAction->setToolTip(sendCoinsAction->statusTip());\n     sendCoinsAction->setCheckable(true);\n     sendCoinsAction->setShortcut(QKeySequence(Qt::ALT + Qt::Key_2));\n@@ -295,7 +295,7 @@ void BitcoinGUI::createActions()\n     sendCoinsMenuAction->setToolTip(sendCoinsMenuAction->statusTip());\n \n     receiveCoinsAction = new QAction(platformStyle->SingleColorIcon(\":/icons/receiving_addresses\"), tr(\"&Receive\"), this);\n-    receiveCoinsAction->setStatusTip(tr(\"Request payments (generates QR codes and bitcoin: URIs)\"));\n+    receiveCoinsAction->setStatusTip(tr(\"Request payments (generates QR codes and Blockcash: URIs)\"));\n     receiveCoinsAction->setToolTip(receiveCoinsAction->statusTip());\n     receiveCoinsAction->setCheckable(true);\n     receiveCoinsAction->setShortcut(QKeySequence(Qt::ALT + Qt::Key_3));\n@@ -355,9 +355,9 @@ void BitcoinGUI::createActions()\n     changePassphraseAction = new QAction(platformStyle->TextColorIcon(\":/icons/key\"), tr(\"&Change Passphrase...\"), this);\n     changePassphraseAction->setStatusTip(tr(\"Change the passphrase used for wallet encryption\"));\n     signMessageAction = new QAction(platformStyle->TextColorIcon(\":/icons/edit\"), tr(\"Sign &message...\"), this);\n-    signMessageAction->setStatusTip(tr(\"Sign messages with your Bitcoin addresses to prove you own them\"));\n+    signMessageAction->setStatusTip(tr(\"Sign messages with your Blockcash addresses to prove you own them\"));\n     verifyMessageAction = new QAction(platformStyle->TextColorIcon(\":/icons/verify\"), tr(\"&Verify message...\"), this);\n-    verifyMessageAction->setStatusTip(tr(\"Verify messages to ensure they were signed with specified Bitcoin addresses\"));\n+    verifyMessageAction->setStatusTip(tr(\"Verify messages to ensure they were signed with specified Blockcash addresses\"));\n \n     openRPCConsoleAction = new QAction(platformStyle->TextColorIcon(\":/icons/debugwindow\"), tr(\"&Debug window\"), this);\n     openRPCConsoleAction->setStatusTip(tr(\"Open debugging and diagnostic console\"));\n@@ -370,11 +370,11 @@ void BitcoinGUI::createActions()\n     usedReceivingAddressesAction->setStatusTip(tr(\"Show the list of used receiving addresses and labels\"));\n \n     openAction = new QAction(platformStyle->TextColorIcon(\":/icons/open\"), tr(\"Open &URI...\"), this);\n-    openAction->setStatusTip(tr(\"Open a bitcoin: URI or payment request\"));\n+    openAction->setStatusTip(tr(\"Open a blockcash: URI or payment request\"));\n \n     showHelpMessageAction = new QAction(platformStyle->TextColorIcon(\":/icons/info\"), tr(\"&Command-line options\"), this);\n     showHelpMessageAction->setMenuRole(QAction::NoRole);\n-    showHelpMessageAction->setStatusTip(tr(\"Show the %1 help message to get a list with possible Bitcoin command-line options\").arg(tr(PACKAGE_NAME)));\n+    showHelpMessageAction->setStatusTip(tr(\"Show the %1 help message to get a list with possible Blockcash command-line options\").arg(tr(PACKAGE_NAME)));\n \n     connect(quitAction, SIGNAL(triggered()), qApp, SLOT(quit()));\n     connect(aboutAction, SIGNAL(triggered()), this, SLOT(aboutClicked()));\n@@ -728,7 +728,7 @@ void BitcoinGUI::updateNetworkState()\n     QString tooltip;\n \n     if (clientModel->getNetworkActive()) {\n-        tooltip = tr(\"%n active connection(s) to Bitcoin network\", \"\", count) + QString(\".<br>\") + tr(\"Click to disable network activity.\");\n+        tooltip = tr(\"%n active connection(s) to Blockcash network\", \"\", count) + QString(\".<br>\") + tr(\"Click to disable network activity.\");\n     } else {\n         tooltip = tr(\"Network activity disabled.\") + QString(\"<br>\") + tr(\"Click to enable network activity again.\");\n         icon = \":/icons/network_disabled\";\n@@ -872,7 +872,7 @@ void BitcoinGUI::setNumBlocks(int count, const QDateTime& blockDate, double nVer\n \n void BitcoinGUI::message(const QString &title, const QString &message, unsigned int style, bool *ret)\n {\n-    QString strTitle = tr(\"Bitcoin\"); // default title\n+    QString strTitle = tr(\"Blockcash\"); // default title\n     // Default to information icon\n     int nMBoxIcon = QMessageBox::Information;\n     int nNotifyIcon = Notificator::Information;"
      },
      {
        "sha": "b0aa5dfe04e1ab39bb23ea1fdf4b27f38c0c6f3d",
        "filename": "src/qt/bitcoinunits.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/qt/bitcoinunits.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/qt/bitcoinunits.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoinunits.cpp?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -17,9 +17,9 @@ BitcoinUnits::BitcoinUnits(QObject *parent):\n QList<BitcoinUnits::Unit> BitcoinUnits::availableUnits()\n {\n     QList<BitcoinUnits::Unit> unitlist;\n-    unitlist.append(BTC);\n-    unitlist.append(mBTC);\n-    unitlist.append(uBTC);\n+    unitlist.append(BSC);\n+    unitlist.append(mBSC);\n+    unitlist.append(uBSC);\n     return unitlist;\n }\n \n@@ -51,9 +51,9 @@ QString BitcoinUnits::description(int unit)\n {\n     switch(unit)\n     {\n-    case BTC: return QString(\"Bitcoins\");\n-    case mBTC: return QString(\"Milli-Bitcoins (1 / 1\" THIN_SP_UTF8 \"000)\");\n-    case uBTC: return QString(\"Micro-Bitcoins (1 / 1\" THIN_SP_UTF8 \"000\" THIN_SP_UTF8 \"000)\");\n+    case BTC: return QString(\"Blocks\");\n+    case mBTC: return QString(\"Milli-Blocks (1 / 1\" THIN_SP_UTF8 \"000)\");\n+    case uBTC: return QString(\"Micro-Blocks (1 / 1\" THIN_SP_UTF8 \"000\" THIN_SP_UTF8 \"000)\");\n     default: return QString(\"???\");\n     }\n }"
      },
      {
        "sha": "0da1e0ff94c2ca29476c1727532ec4dfbc8e8e41",
        "filename": "src/qt/editaddressdialog.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/qt/editaddressdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/qt/editaddressdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/editaddressdialog.cpp?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -107,7 +107,7 @@ void EditAddressDialog::accept()\n             break;\n         case AddressTableModel::INVALID_ADDRESS:\n             QMessageBox::warning(this, windowTitle(),\n-                tr(\"The entered address \\\"%1\\\" is not a valid Bitcoin address.\").arg(ui->addressEdit->text()),\n+                tr(\"The entered address \\\"%1\\\" is not a valid Blockcash address.\").arg(ui->addressEdit->text()),\n                 QMessageBox::Ok, QMessageBox::Ok);\n             break;\n         case AddressTableModel::DUPLICATE_ADDRESS:"
      },
      {
        "sha": "76cf6b4d19b264fa8c54c23fceac3c1bd5809051",
        "filename": "src/qt/forms/coincontroldialog.ui",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/qt/forms/coincontroldialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/qt/forms/coincontroldialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/coincontroldialog.ui?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -132,7 +132,7 @@\n           <enum>Qt::ActionsContextMenu</enum>\n          </property>\n          <property name=\"text\">\n-          <string notr=\"true\">0.00 BTC</string>\n+          <string notr=\"true\">0.00 BSC</string>\n          </property>\n          <property name=\"textInteractionFlags\">\n           <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n@@ -212,7 +212,7 @@\n           <enum>Qt::ActionsContextMenu</enum>\n          </property>\n          <property name=\"text\">\n-          <string notr=\"true\">0.00 BTC</string>\n+          <string notr=\"true\">0.00 BSC</string>\n          </property>\n          <property name=\"textInteractionFlags\">\n           <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n@@ -257,7 +257,7 @@\n           <enum>Qt::ActionsContextMenu</enum>\n          </property>\n          <property name=\"text\">\n-          <string notr=\"true\">0.00 BTC</string>\n+          <string notr=\"true\">0.00 BSC</string>\n          </property>\n          <property name=\"textInteractionFlags\">\n           <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n@@ -292,7 +292,7 @@\n           <enum>Qt::ActionsContextMenu</enum>\n          </property>\n          <property name=\"text\">\n-          <string notr=\"true\">0.00 BTC</string>\n+          <string notr=\"true\">0.00 BSC</string>\n          </property>\n          <property name=\"textInteractionFlags\">\n           <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>"
      },
      {
        "sha": "b86648c0f25d8d4e03351f765ac0029277b8066a",
        "filename": "src/qt/forms/intro.ui",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/qt/forms/intro.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/qt/forms/intro.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/intro.ui?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -56,7 +56,7 @@\n    <item>\n     <widget class=\"QLabel\" name=\"sizeWarningLabel\">\n      <property name=\"text\">\n-      <string>%1 will download and store a copy of the Bitcoin block chain. At least %2GB of data will be stored in this directory, and it will grow over time. The wallet will also be stored in this directory.</string>\n+      <string>%1 will download and store a copy of the Blockcash block chain. At least %2GB of data will be stored in this directory, and it will grow over time. The wallet will also be stored in this directory.</string>\n      </property>\n      <property name=\"wordWrap\">\n       <bool>true</bool>"
      },
      {
        "sha": "39bd3eafb44446f7931d38d310abd73bb8c01992",
        "filename": "src/qt/forms/modaloverlay.ui",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/qt/forms/modaloverlay.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/qt/forms/modaloverlay.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/modaloverlay.ui?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -130,7 +130,7 @@ QLabel { color: rgb(40,40,40);  }</string>\n              <item>\n               <widget class=\"QLabel\" name=\"infoText\">\n                <property name=\"text\">\n-                <string>Recent transactions may not yet be visible, and therefore your wallet's balance might be incorrect. This information will be correct once your wallet has finished synchronizing with the bitcoin network, as detailed below.</string>\n+                <string>Recent transactions may not yet be visible, and therefore your wallet's balance might be incorrect. This information will be correct once your wallet has finished synchronizing with the blockcash network, as detailed below.</string>\n                </property>\n                <property name=\"textFormat\">\n                 <enum>Qt::RichText</enum>\n@@ -149,7 +149,7 @@ QLabel { color: rgb(40,40,40);  }</string>\n                 </font>\n                </property>\n                <property name=\"text\">\n-                <string>Attempting to spend bitcoins that are affected by not-yet-displayed transactions will not be accepted by the network.</string>\n+                <string>Attempting to spend Blocks that are affected by not-yet-displayed transactions will not be accepted by the network.</string>\n                </property>\n                <property name=\"textFormat\">\n                 <enum>Qt::RichText</enum>"
      },
      {
        "sha": "cacbc14699417ed31d2cbefcb36b554665acf2f9",
        "filename": "src/qt/forms/optionsdialog.ui",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/qt/forms/optionsdialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/qt/forms/optionsdialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/optionsdialog.ui?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -189,7 +189,7 @@\n        <item>\n         <widget class=\"QCheckBox\" name=\"mapPortUpnp\">\n          <property name=\"toolTip\">\n-          <string>Automatically open the Bitcoin client port on the router. This only works when your router supports UPnP and it is enabled.</string>\n+          <string>Automatically open the Blockcash client port on the router. This only works when your router supports UPnP and it is enabled.</string>\n          </property>\n          <property name=\"text\">\n           <string>Map port using &amp;UPnP</string>\n@@ -209,7 +209,7 @@\n        <item>\n         <widget class=\"QCheckBox\" name=\"connectSocks\">\n          <property name=\"toolTip\">\n-          <string>Connect to the Bitcoin network through a SOCKS5 proxy.</string>\n+          <string>Connect to the Blockcash network through a SOCKS5 proxy.</string>\n          </property>\n          <property name=\"text\">\n           <string>&amp;Connect through SOCKS5 proxy (default proxy):</string>\n@@ -396,7 +396,7 @@\n        <item>\n         <widget class=\"QCheckBox\" name=\"connectSocksTor\">\n          <property name=\"toolTip\">\n-          <string>Connect to the Bitcoin network through a separate SOCKS5 proxy for Tor hidden services.</string>\n+          <string>Connect to the Blockcash network through a separate SOCKS5 proxy for Tor hidden services.</string>\n          </property>\n          <property name=\"text\">\n           <string>Use separate SOCKS5 proxy to reach peers via Tor hidden services:</string>"
      },
      {
        "sha": "038fe8d44d9ecd8311c8b1212ae3c442e8f77571",
        "filename": "src/qt/forms/overviewpage.ui",
        "status": "modified",
        "additions": 10,
        "deletions": 10,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/qt/forms/overviewpage.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/qt/forms/overviewpage.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/overviewpage.ui?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -73,7 +73,7 @@\n                </size>\n               </property>\n               <property name=\"toolTip\">\n-               <string>The displayed information may be out of date. Your wallet automatically synchronizes with the Bitcoin network after a connection is established, but this process has not completed yet.</string>\n+               <string>The displayed information may be out of date. Your wallet automatically synchronizes with the Blockcash network after a connection is established, but this process has not completed yet.</string>\n               </property>\n               <property name=\"text\">\n                <string/>\n@@ -129,7 +129,7 @@\n                <string>Unconfirmed transactions to watch-only addresses</string>\n               </property>\n               <property name=\"text\">\n-               <string notr=\"true\">0.000\u2009000\u200900 BTC</string>\n+               <string notr=\"true\">0.000\u2009000\u200900 BSC</string>\n               </property>\n               <property name=\"alignment\">\n                <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>\n@@ -154,7 +154,7 @@\n                <string>Total of transactions that have yet to be confirmed, and do not yet count toward the spendable balance</string>\n               </property>\n               <property name=\"text\">\n-               <string notr=\"true\">0.000\u2009000\u200900 BTC</string>\n+               <string notr=\"true\">0.000\u2009000\u200900 BSC</string>\n               </property>\n               <property name=\"alignment\">\n                <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>\n@@ -179,7 +179,7 @@\n                <string>Mined balance in watch-only addresses that has not yet matured</string>\n               </property>\n               <property name=\"text\">\n-               <string notr=\"true\">0.000\u2009000\u200900 BTC</string>\n+               <string notr=\"true\">0.000\u2009000\u200900 BSC</string>\n               </property>\n               <property name=\"alignment\">\n                <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>\n@@ -237,7 +237,7 @@\n                <string>Mined balance that has not yet matured</string>\n               </property>\n               <property name=\"text\">\n-               <string notr=\"true\">0.000\u2009000\u200900 BTC</string>\n+               <string notr=\"true\">0.000\u2009000\u200900 BSC</string>\n               </property>\n               <property name=\"alignment\">\n                <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>\n@@ -282,7 +282,7 @@\n                <string>Your current total balance</string>\n               </property>\n               <property name=\"text\">\n-               <string notr=\"true\">0.000\u2009000\u200900 BTC</string>\n+               <string notr=\"true\">0.000\u2009000\u200900 BSC</string>\n               </property>\n               <property name=\"alignment\">\n                <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>\n@@ -307,7 +307,7 @@\n                <string>Current total balance in watch-only addresses</string>\n               </property>\n               <property name=\"text\">\n-               <string notr=\"true\">0.000\u2009000\u200900 BTC</string>\n+               <string notr=\"true\">0.000\u2009000\u200900 BSC</string>\n               </property>\n               <property name=\"alignment\">\n                <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>\n@@ -349,7 +349,7 @@\n                <string>Your current spendable balance</string>\n               </property>\n               <property name=\"text\">\n-               <string notr=\"true\">0.000\u2009000\u200900 BTC</string>\n+               <string notr=\"true\">0.000\u2009000\u200900 BSC</string>\n               </property>\n               <property name=\"alignment\">\n                <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>\n@@ -374,7 +374,7 @@\n                <string>Your current balance in watch-only addresses</string>\n               </property>\n               <property name=\"text\">\n-               <string notr=\"true\">0.000\u2009000\u200900 BTC</string>\n+               <string notr=\"true\">0.000\u2009000\u200900 BSC</string>\n               </property>\n               <property name=\"alignment\">\n                <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>\n@@ -459,7 +459,7 @@\n                </size>\n               </property>\n               <property name=\"toolTip\">\n-               <string>The displayed information may be out of date. Your wallet automatically synchronizes with the Bitcoin network after a connection is established, but this process has not completed yet.</string>\n+               <string>The displayed information may be out of date. Your wallet automatically synchronizes with the Blockcash network after a connection is established, but this process has not completed yet.</string>\n               </property>\n               <property name=\"text\">\n                <string/>"
      },
      {
        "sha": "4d65631ad3e87ddd66dbe244fec8e378631740d2",
        "filename": "src/qt/forms/receivecoinsdialog.ui",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/qt/forms/receivecoinsdialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/qt/forms/receivecoinsdialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/receivecoinsdialog.ui?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -48,7 +48,7 @@\n         <item row=\"6\" column=\"0\">\n          <widget class=\"QLabel\" name=\"label_3\">\n           <property name=\"toolTip\">\n-           <string>An optional message to attach to the payment request, which will be displayed when the request is opened. Note: The message will not be sent with the payment over the Bitcoin network.</string>\n+           <string>An optional message to attach to the payment request, which will be displayed when the request is opened. Note: The message will not be sent with the payment over the Blockcash network.</string>\n           </property>\n           <property name=\"text\">\n            <string>&amp;Message:</string>\n@@ -71,7 +71,7 @@\n         <item row=\"6\" column=\"2\">\n          <widget class=\"QLineEdit\" name=\"reqMessage\">\n           <property name=\"toolTip\">\n-           <string>An optional message to attach to the payment request, which will be displayed when the request is opened. Note: The message will not be sent with the payment over the Bitcoin network.</string>\n+           <string>An optional message to attach to the payment request, which will be displayed when the request is opened. Note: The message will not be sent with the payment over the Blockcash network.</string>\n           </property>\n          </widget>\n         </item>"
      },
      {
        "sha": "17ad6d990cb22165d04f3f9f724edb7cb1ac71ae",
        "filename": "src/qt/forms/sendcoinsdialog.ui",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/qt/forms/sendcoinsdialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/qt/forms/sendcoinsdialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/sendcoinsdialog.ui?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -324,7 +324,7 @@\n                   <enum>Qt::ActionsContextMenu</enum>\n                  </property>\n                  <property name=\"text\">\n-                  <string notr=\"true\">0.00 BTC</string>\n+                  <string notr=\"true\">0.00 BSC</string>\n                  </property>\n                  <property name=\"textInteractionFlags\">\n                   <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n@@ -404,7 +404,7 @@\n                   <enum>Qt::ActionsContextMenu</enum>\n                  </property>\n                  <property name=\"text\">\n-                  <string notr=\"true\">0.00 BTC</string>\n+                  <string notr=\"true\">0.00 BSC</string>\n                  </property>\n                  <property name=\"textInteractionFlags\">\n                   <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n@@ -455,7 +455,7 @@\n                   <enum>Qt::ActionsContextMenu</enum>\n                  </property>\n                  <property name=\"text\">\n-                  <string notr=\"true\">0.00 BTC</string>\n+                  <string notr=\"true\">0.00 BSC</string>\n                  </property>\n                  <property name=\"textInteractionFlags\">\n                   <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n@@ -484,7 +484,7 @@\n                   <enum>Qt::ActionsContextMenu</enum>\n                  </property>\n                  <property name=\"text\">\n-                  <string notr=\"true\">0.00 BTC</string>\n+                  <string notr=\"true\">0.00 BSC</string>\n                  </property>\n                  <property name=\"textInteractionFlags\">\n                   <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n@@ -897,7 +897,7 @@\n                  <item>\n                   <widget class=\"QCheckBox\" name=\"checkBoxMinimumFee\">\n                    <property name=\"toolTip\">\n-                    <string>Paying only the minimum fee is just fine as long as there is less transaction volume than space in the blocks. But be aware that this can end up in a never confirming transaction once there is more demand for bitcoin transactions than the network can process.</string>\n+                    <string>Paying only the minimum fee is just fine as long as there is less transaction volume than space in the blocks. But be aware that this can end up in a never confirming transaction once there is more demand for Blockcash transactions than the network can process.</string>\n                    </property>\n                    <property name=\"text\">\n                     <string/>\n@@ -910,7 +910,7 @@\n                     <bool>true</bool>\n                    </property>\n                    <property name=\"toolTip\">\n-                    <string>Paying only the minimum fee is just fine as long as there is less transaction volume than space in the blocks. But be aware that this can end up in a never confirming transaction once there is more demand for bitcoin transactions than the network can process.</string>\n+                    <string>Paying only the minimum fee is just fine as long as there is less transaction volume than space in the blocks. But be aware that this can end up in a never confirming transaction once there is more demand for Blockcash transactions than the network can process.</string>\n                    </property>\n                    <property name=\"text\">\n                     <string>(read the tooltip)</string>\n@@ -1312,7 +1312,7 @@\n           <cursorShape>IBeamCursor</cursorShape>\n          </property>\n          <property name=\"text\">\n-          <string notr=\"true\">123.456 BTC</string>\n+          <string notr=\"true\">123.456 BSC</string>\n          </property>\n          <property name=\"textInteractionFlags\">\n           <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>"
      },
      {
        "sha": "8eb9d1d337fb01762cb655fb2f49744acf9d046f",
        "filename": "src/qt/forms/sendcoinsentry.ui",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/qt/forms/sendcoinsentry.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/qt/forms/sendcoinsentry.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/sendcoinsentry.ui?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -57,7 +57,7 @@\n       <item>\n        <widget class=\"QValidatedLineEdit\" name=\"payTo\">\n         <property name=\"toolTip\">\n-         <string>The Bitcoin address to send the payment to</string>\n+         <string>The Blockcash address to send the payment to</string>\n         </property>\n        </widget>\n       </item>\n@@ -170,7 +170,7 @@\n       <item>\n        <widget class=\"QCheckBox\" name=\"checkboxSubtractFeeFromAmount\">\n         <property name=\"toolTip\">\n-         <string>The fee will be deducted from the amount being sent. The recipient will receive less bitcoins than you enter in the amount field. If multiple recipients are selected, the fee is split equally.</string>\n+         <string>The fee will be deducted from the amount being sent. The recipient will receive less Blockcash than you enter in the amount field. If multiple recipients are selected, the fee is split equally.</string>\n         </property>\n         <property name=\"text\">\n          <string>S&amp;ubtract fee from amount</string>\n@@ -192,7 +192,7 @@\n     <item row=\"3\" column=\"1\">\n      <widget class=\"QLabel\" name=\"messageTextLabel\">\n       <property name=\"toolTip\">\n-       <string>A message that was attached to the bitcoin: URI which will be stored with the transaction for your reference. Note: This message will not be sent over the Bitcoin network.</string>\n+       <string>A message that was attached to the blockcash: URI which will be stored with the transaction for your reference. Note: This message will not be sent over the Blockcash network.</string>\n       </property>\n       <property name=\"textFormat\">\n        <enum>Qt::PlainText</enum>"
      },
      {
        "sha": "b045ffac77dbce6512a4ae6d547187b394c9bb11",
        "filename": "src/qt/forms/signverifymessagedialog.ui",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/qt/forms/signverifymessagedialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/qt/forms/signverifymessagedialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/signverifymessagedialog.ui?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -30,7 +30,7 @@\n        <item>\n         <widget class=\"QLabel\" name=\"infoLabel_SM\">\n          <property name=\"text\">\n-          <string>You can sign messages/agreements with your addresses to prove you can receive bitcoins sent to them. Be careful not to sign anything vague or random, as phishing attacks may try to trick you into signing your identity over to them. Only sign fully-detailed statements you agree to.</string>\n+          <string>You can sign messages/agreements with your addresses to prove you can receive Blockcash sent to them. Be careful not to sign anything vague or random, as phishing attacks may try to trick you into signing your identity over to them. Only sign fully-detailed statements you agree to.</string>\n          </property>\n          <property name=\"textFormat\">\n           <enum>Qt::PlainText</enum>\n@@ -48,7 +48,7 @@\n          <item>\n           <widget class=\"QValidatedLineEdit\" name=\"addressIn_SM\">\n            <property name=\"toolTip\">\n-            <string>The Bitcoin address to sign the message with</string>\n+            <string>The Blockcash address to sign the message with</string>\n            </property>\n           </widget>\n          </item>\n@@ -152,7 +152,7 @@\n          <item>\n           <widget class=\"QPushButton\" name=\"signMessageButton_SM\">\n            <property name=\"toolTip\">\n-            <string>Sign the message to prove you own this Bitcoin address</string>\n+            <string>Sign the message to prove you own this Blockcash address</string>\n            </property>\n            <property name=\"text\">\n             <string>Sign &amp;Message</string>\n@@ -258,7 +258,7 @@\n          <item>\n           <widget class=\"QValidatedLineEdit\" name=\"addressIn_VM\">\n            <property name=\"toolTip\">\n-            <string>The Bitcoin address the message was signed with</string>\n+            <string>The Blockcash address the message was signed with</string>\n            </property>\n           </widget>\n          </item>\n@@ -295,7 +295,7 @@\n          <item>\n           <widget class=\"QPushButton\" name=\"verifyMessageButton_VM\">\n            <property name=\"toolTip\">\n-            <string>Verify the message to ensure it was signed with the specified Bitcoin address</string>\n+            <string>Verify the message to ensure it was signed with the specified Blockcash address</string>\n            </property>\n            <property name=\"text\">\n             <string>Verify &amp;Message</string>"
      },
      {
        "sha": "049d88a4185720733ff5277143fa36468448ba2e",
        "filename": "src/qt/guiconstants.h",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/qt/guiconstants.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/qt/guiconstants.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiconstants.h?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -48,9 +48,9 @@ static const int MAX_URI_LENGTH = 255;\n /* Number of frames in spinner animation */\n #define SPINNER_FRAMES 36\n \n-#define QAPP_ORG_NAME \"Bitcoin\"\n-#define QAPP_ORG_DOMAIN \"bitcoin.org\"\n-#define QAPP_APP_NAME_DEFAULT \"Bitcoin-Qt\"\n-#define QAPP_APP_NAME_TESTNET \"Bitcoin-Qt-testnet\"\n+#define QAPP_ORG_NAME \"Blockcash\"\n+#define QAPP_ORG_DOMAIN \"blockcash.org\"\n+#define QAPP_APP_NAME_DEFAULT \"Blockcash-Qt\"\n+#define QAPP_APP_NAME_TESTNET \"Blockcash-Qt-testnet\"\n \n #endif // BITCOIN_QT_GUICONSTANTS_H"
      },
      {
        "sha": "149620f0d9566adcdc1ae01b6b403547103cae92",
        "filename": "src/qt/guiutil.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 12,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/qt/guiutil.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/qt/guiutil.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiutil.cpp?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -133,7 +133,7 @@ void setupAddressWidget(QValidatedLineEdit *widget, QWidget *parent)\n #if QT_VERSION >= 0x040700\n     // We don't want translators to use own addresses in translations\n     // and this is the only place, where this address is supplied.\n-    widget->setPlaceholderText(QObject::tr(\"Enter a Bitcoin address (e.g. %1)\").arg(\n+    widget->setPlaceholderText(QObject::tr(\"Enter a Blockcash address (e.g. %1)\").arg(\n         QString::fromStdString(DummyAddress(Params()))));\n #endif\n     widget->setValidator(new BitcoinAddressEntryValidator(parent));\n@@ -152,7 +152,7 @@ void setupAmountWidget(QLineEdit *widget, QWidget *parent)\n bool parseBitcoinURI(const QUrl &uri, SendCoinsRecipient *out)\n {\n     // return if URI is not valid or is no bitcoin: URI\n-    if(!uri.isValid() || uri.scheme() != QString(\"bitcoin\"))\n+    if(!uri.isValid() || uri.scheme() != QString(\"blockcash\"))\n         return false;\n \n     SendCoinsRecipient rv;\n@@ -216,17 +216,17 @@ bool parseBitcoinURI(QString uri, SendCoinsRecipient *out)\n     //\n     //    Cannot handle this later, because bitcoin:// will cause Qt to see the part after // as host,\n     //    which will lower-case it (and thus invalidate the address).\n-    if(uri.startsWith(\"bitcoin://\", Qt::CaseInsensitive))\n+    if(uri.startsWith(\"blockcash://\", Qt::CaseInsensitive))\n     {\n-        uri.replace(0, 10, \"bitcoin:\");\n+        uri.replace(0, 10, \"blockcash:\");\n     }\n     QUrl uriInstance(uri);\n     return parseBitcoinURI(uriInstance, out);\n }\n \n QString formatBitcoinURI(const SendCoinsRecipient &info)\n {\n-    QString ret = QString(\"bitcoin:%1\").arg(info.address);\n+    QString ret = QString(\"blockcash:%1\").arg(info.address);\n     int paramCount = 0;\n \n     if (info.amount)\n@@ -605,10 +605,10 @@ boost::filesystem::path static StartupShortcutPath()\n {\n     std::string chain = ChainNameFromCommandLine();\n     if (chain == CBaseChainParams::MAIN)\n-        return GetSpecialFolderPath(CSIDL_STARTUP) / \"Bitcoin.lnk\";\n+        return GetSpecialFolderPath(CSIDL_STARTUP) / \"Blockcash.lnk\";\n     if (chain == CBaseChainParams::TESTNET) // Remove this special case when CBaseChainParams::TESTNET = \"testnet4\"\n-        return GetSpecialFolderPath(CSIDL_STARTUP) / \"Bitcoin (testnet).lnk\";\n-    return GetSpecialFolderPath(CSIDL_STARTUP) / strprintf(\"Bitcoin (%s).lnk\", chain);\n+        return GetSpecialFolderPath(CSIDL_STARTUP) / \"Blockcash (testnet).lnk\";\n+    return GetSpecialFolderPath(CSIDL_STARTUP) / strprintf(\"Blockcash (%s).lnk\", chain);\n }\n \n bool GetStartOnSystemStartup()\n@@ -705,8 +705,8 @@ boost::filesystem::path static GetAutostartFilePath()\n {\n     std::string chain = ChainNameFromCommandLine();\n     if (chain == CBaseChainParams::MAIN)\n-        return GetAutostartDir() / \"bitcoin.desktop\";\n-    return GetAutostartDir() / strprintf(\"bitcoin-%s.lnk\", chain);\n+        return GetAutostartDir() / \"blockcash.desktop\";\n+    return GetAutostartDir() / strprintf(\"blockcash-%s.lnk\", chain);\n }\n \n bool GetStartOnSystemStartup()\n@@ -749,9 +749,9 @@ bool SetStartOnSystemStartup(bool fAutoStart)\n         optionFile << \"[Desktop Entry]\\n\";\n         optionFile << \"Type=Application\\n\";\n         if (chain == CBaseChainParams::MAIN)\n-            optionFile << \"Name=Bitcoin\\n\";\n+            optionFile << \"Name=Blockcash\\n\";\n         else\n-            optionFile << strprintf(\"Name=Bitcoin (%s)\\n\", chain);\n+            optionFile << strprintf(\"Name=Blockcash (%s)\\n\", chain);\n         optionFile << \"Exec=\" << pszExePath << strprintf(\" -min -testnet=%d -regtest=%d\\n\", GetBoolArg(\"-testnet\", false), GetBoolArg(\"-regtest\", false));\n         optionFile << \"Terminal=false\\n\";\n         optionFile << \"Hidden=false\\n\";"
      },
      {
        "sha": "ad49c6953adb34f7e7366dbb85bec2051a33a040",
        "filename": "src/qt/macnotificationhandler.mm",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/qt/macnotificationhandler.mm",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/qt/macnotificationhandler.mm",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/macnotificationhandler.mm?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -13,7 +13,7 @@ @implementation NSBundle(returnCorrectIdentifier)\n - (NSString *)__bundleIdentifier\n {\n     if (self == [NSBundle mainBundle]) {\n-        return @\"org.bitcoinfoundation.Bitcoin-Qt\";\n+        return @\"org.blockcash.Blockcash-Qt\";\n     } else {\n         return [self __bundleIdentifier];\n     }"
      },
      {
        "sha": "5f009a0b9aea0a57ec7ee7447e1aa9603d13630a",
        "filename": "src/qt/openuridialog.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/qt/openuridialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/qt/openuridialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/openuridialog.cpp?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -16,7 +16,7 @@ OpenURIDialog::OpenURIDialog(QWidget *parent) :\n {\n     ui->setupUi(this);\n #if QT_VERSION >= 0x040700\n-    ui->uriEdit->setPlaceholderText(\"bitcoin:\");\n+    ui->uriEdit->setPlaceholderText(\"blockcash:\");\n #endif\n }\n \n@@ -48,5 +48,5 @@ void OpenURIDialog::on_selectFileButton_clicked()\n     if(filename.isEmpty())\n         return;\n     QUrl fileUri = QUrl::fromLocalFile(filename);\n-    ui->uriEdit->setText(\"bitcoin:?r=\" + QUrl::toPercentEncoding(fileUri.toString()));\n+    ui->uriEdit->setText(\"blockcash:?r=\" + QUrl::toPercentEncoding(fileUri.toString()));\n }"
      },
      {
        "sha": "a25ba9db59ebd606d89adbe0e3b2eb451303e70d",
        "filename": "src/qt/paymentrequest.proto",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/qt/paymentrequest.proto",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/qt/paymentrequest.proto",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/paymentrequest.proto?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -9,7 +9,7 @@\n syntax = \"proto2\";\n \n package payments;\n-option java_package = \"org.bitcoin.protocols.payments\";\n+option java_package = \"org.blockcash.protocols.payments\";\n option java_outer_classname = \"Protos\";\n \n // Generalized form of \"send payment to this/these bitcoin addresses\""
      },
      {
        "sha": "f1fdaa39f7a586fccf19d922bd1fe7da1e777ace",
        "filename": "src/qt/paymentserver.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/qt/paymentserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/qt/paymentserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/paymentserver.cpp?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -47,14 +47,14 @@\n #endif\n \n const int BITCOIN_IPC_CONNECT_TIMEOUT = 1000; // milliseconds\n-const QString BITCOIN_IPC_PREFIX(\"bitcoin:\");\n+const QString BITCOIN_IPC_PREFIX(\"blockcash:\");\n // BIP70 payment protocol messages\n const char* BIP70_MESSAGE_PAYMENTACK = \"PaymentACK\";\n const char* BIP70_MESSAGE_PAYMENTREQUEST = \"PaymentRequest\";\n // BIP71 payment protocol media types\n-const char* BIP71_MIMETYPE_PAYMENT = \"application/bitcoin-payment\";\n-const char* BIP71_MIMETYPE_PAYMENTACK = \"application/bitcoin-paymentack\";\n-const char* BIP71_MIMETYPE_PAYMENTREQUEST = \"application/bitcoin-paymentrequest\";\n+const char* BIP71_MIMETYPE_PAYMENT = \"application/blockcash-payment\";\n+const char* BIP71_MIMETYPE_PAYMENTACK = \"application/blockcash-paymentack\";\n+const char* BIP71_MIMETYPE_PAYMENTREQUEST = \"application/blockcash-paymentrequest\";\n \n struct X509StoreDeleter {\n       void operator()(X509_STORE* b) {\n@@ -78,7 +78,7 @@ namespace // Anon namespace\n //\n static QString ipcServerName()\n {\n-    QString name(\"BitcoinQt\");\n+    QString name(\"BlockcashQt\");\n \n     // Append a simple hash of the datadir\n     // Note that GetDataDir(true) returns a different path\n@@ -324,7 +324,7 @@ PaymentServer::PaymentServer(QObject* parent, bool startLocalServer) :\n         if (!uriServer->listen(name)) {\n             // constructor is called early in init, so don't use \"Q_EMIT message()\" here\n             QMessageBox::critical(0, tr(\"Payment request error\"),\n-                tr(\"Cannot start bitcoin: click-to-pay handler\"));\n+                tr(\"Cannot start blockcash: click-to-pay handler\"));\n         }\n         else {\n             connect(uriServer, SIGNAL(newConnection()), this, SLOT(handleURIConnection()));\n@@ -449,7 +449,7 @@ void PaymentServer::handleURIOrFile(const QString& s)\n             }\n             else\n                 Q_EMIT message(tr(\"URI handling\"),\n-                    tr(\"URI cannot be parsed! This can be caused by an invalid Bitcoin address or malformed URI parameters.\"),\n+                    tr(\"URI cannot be parsed! This can be caused by an invalid Blockcash address or malformed URI parameters.\"),\n                     CClientUIInterface::ICON_WARNING);\n \n             return;"
      },
      {
        "sha": "98d12d60716c9491974c2b5ee222ab575aaad06c",
        "filename": "src/qt/res/bitcoin-qt-res.rc",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/qt/res/bitcoin-qt-res.rc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/qt/res/bitcoin-qt-res.rc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/bitcoin-qt-res.rc?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -19,13 +19,13 @@ BEGIN\n     BEGIN\n         BLOCK \"040904E4\" // U.S. English - multilingual (hex)\n         BEGIN\n-            VALUE \"CompanyName\",        \"Bitcoin\"\n-            VALUE \"FileDescription\",    PACKAGE_NAME \" (GUI node for Bitcoin)\"\n+            VALUE \"CompanyName\",        \"Blockcash\"\n+            VALUE \"FileDescription\",    PACKAGE_NAME \" (GUI node for Blockcash)\"\n             VALUE \"FileVersion\",        VER_FILEVERSION_STR\n-            VALUE \"InternalName\",       \"bitcoin-qt\"\n+            VALUE \"InternalName\",       \"blockcash-qt\"\n             VALUE \"LegalCopyright\",     COPYRIGHT_STR\n             VALUE \"LegalTrademarks1\",   \"Distributed under the MIT software license, see the accompanying file COPYING or http://www.opensource.org/licenses/mit-license.php.\"\n-            VALUE \"OriginalFilename\",   \"bitcoin-qt.exe\"\n+            VALUE \"OriginalFilename\",   \"blockcash-qt.exe\"\n             VALUE \"ProductName\",        PACKAGE_NAME\n             VALUE \"ProductVersion\",     VER_PRODUCTVERSION_STR\n         END"
      },
      {
        "sha": "ff330cacd1084acbb8e959f67e3d4b61389e8f37",
        "filename": "src/qt/sendcoinsdialog.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/qt/sendcoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/qt/sendcoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.cpp?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -771,7 +771,7 @@ void SendCoinsDialog::coinControlChangeEdited(const QString& text)\n         }\n         else if (!addr.IsValid()) // Invalid address\n         {\n-            ui->labelCoinControlChangeLabel->setText(tr(\"Warning: Invalid Bitcoin address\"));\n+            ui->labelCoinControlChangeLabel->setText(tr(\"Warning: Invalid Blockcash address\"));\n         }\n         else // Valid address\n         {"
      },
      {
        "sha": "1e874c8d8cec49cebd690e259a755687811c497f",
        "filename": "src/qt/test/test_main.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/qt/test/test_main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/qt/test/test_main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/test_main.cpp?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -47,7 +47,7 @@ int main(int argc, char *argv[])\n     // Don't remove this, it's needed to access\n     // QCoreApplication:: in the tests\n     QCoreApplication app(argc, argv);\n-    app.setApplicationName(\"Bitcoin-Qt-test\");\n+    app.setApplicationName(\"Blockcash-Qt-test\");\n \n     SSL_library_init();\n "
      },
      {
        "sha": "7f9d73c65e835723bf6aeb5480057409102d89ee",
        "filename": "src/qt/utilitydialog.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/qt/utilitydialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/qt/utilitydialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/utilitydialog.cpp?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -70,7 +70,7 @@ HelpMessageDialog::HelpMessageDialog(QWidget *parent, bool about) :\n     } else {\n         setWindowTitle(tr(\"Command-line options\"));\n         QString header = tr(\"Usage:\") + \"\\n\" +\n-            \"  bitcoin-qt [\" + tr(\"command-line options\") + \"]                     \" + \"\\n\";\n+            \"  blockcash-qt [\" + tr(\"command-line options\") + \"]                     \" + \"\\n\";\n         QTextCursor cursor(ui->helpMessage->document());\n         cursor.insertText(version);\n         cursor.insertBlock();"
      },
      {
        "sha": "750aedd6fd8a88bd19c93c50014056b91bec73a3",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -659,8 +659,8 @@ UniValue getblockheader(const JSONRPCRequest& request)\n             \"\\nResult (for verbose=false):\\n\"\n             \"\\\"data\\\"             (string) A string that is serialized, hex-encoded data for block 'hash'.\\n\"\n             \"\\nExamples:\\n\"\n-            + HelpExampleCli(\"getblockheader\", \"\\\"00000000c937983704a73af28acdec37b049d214adbda81d7e2a3dd146f6ed09\\\"\")\n-            + HelpExampleRpc(\"getblockheader\", \"\\\"00000000c937983704a73af28acdec37b049d214adbda81d7e2a3dd146f6ed09\\\"\")\n+            + HelpExampleCli(\"getblockheader\", \"\\\"0\\\"\")\n+            + HelpExampleRpc(\"getblockheader\", \"\\\"0\\\"\")\n         );\n \n     LOCK(cs_main);\n@@ -725,8 +725,8 @@ UniValue getblock(const JSONRPCRequest& request)\n             \"\\nResult (for verbose=false):\\n\"\n             \"\\\"data\\\"             (string) A string that is serialized, hex-encoded data for block 'hash'.\\n\"\n             \"\\nExamples:\\n\"\n-            + HelpExampleCli(\"getblock\", \"\\\"00000000c937983704a73af28acdec37b049d214adbda81d7e2a3dd146f6ed09\\\"\")\n-            + HelpExampleRpc(\"getblock\", \"\\\"00000000c937983704a73af28acdec37b049d214adbda81d7e2a3dd146f6ed09\\\"\")\n+            + HelpExampleCli(\"getblock\", \"\\\"0\\\"\")\n+            + HelpExampleRpc(\"getblock\", \"\\\"0\\\"\")\n         );\n \n     LOCK(cs_main);\n@@ -929,8 +929,8 @@ UniValue gettxout(const JSONRPCRequest& request)\n             \"     \\\"hex\\\" : \\\"hex\\\",        (string) \\n\"\n             \"     \\\"reqSigs\\\" : n,          (numeric) Number of required signatures\\n\"\n             \"     \\\"type\\\" : \\\"pubkeyhash\\\", (string) The type, eg pubkeyhash\\n\"\n-            \"     \\\"addresses\\\" : [          (array of string) array of bitcoin addresses\\n\"\n-            \"        \\\"address\\\"     (string) bitcoin address\\n\"\n+            \"     \\\"addresses\\\" : [          (array of string) array of blockcash addresses\\n\"\n+            \"        \\\"address\\\"     (string) blockcash address\\n\"\n             \"        ,...\\n\"\n             \"     ]\\n\"\n             \"  },\\n\""
      },
      {
        "sha": "955e8ae1767f6816f05d7286fd3189564e6a967a",
        "filename": "src/rpc/mining.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/rpc/mining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/rpc/mining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/mining.cpp?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -190,7 +190,7 @@ UniValue generatetoaddress(const JSONRPCRequest& request)\n             \"\\nMine blocks immediately to a specified address (before the RPC call returns)\\n\"\n             \"\\nArguments:\\n\"\n             \"1. nblocks      (numeric, required) How many blocks are generated immediately.\\n\"\n-            \"2. address      (string, required) The address to send the newly generated bitcoin to.\\n\"\n+            \"2. address      (string, required) The address to send the newly generated blockcash to.\\n\"\n             \"3. maxtries     (numeric, optional) How many iterations to try (default = 1000000).\\n\"\n             \"\\nResult:\\n\"\n             \"[ blockhashes ]     (array) hashes of blocks generated\\n\"\n@@ -466,10 +466,10 @@ UniValue getblocktemplate(const JSONRPCRequest& request)\n         throw JSONRPCError(RPC_CLIENT_P2P_DISABLED, \"Error: Peer-to-peer functionality missing or disabled\");\n \n     if (g_connman->GetNodeCount(CConnman::CONNECTIONS_ALL) == 0)\n-        throw JSONRPCError(RPC_CLIENT_NOT_CONNECTED, \"Bitcoin is not connected!\");\n+        throw JSONRPCError(RPC_CLIENT_NOT_CONNECTED, \"Blockcash is not connected!\");\n \n     if (IsInitialBlockDownload())\n-        throw JSONRPCError(RPC_CLIENT_IN_INITIAL_DOWNLOAD, \"Bitcoin is downloading blocks...\");\n+        throw JSONRPCError(RPC_CLIENT_IN_INITIAL_DOWNLOAD, \"Blockcash is downloading blocks...\");\n \n     static unsigned int nTransactionsUpdatedLast;\n \n@@ -866,7 +866,7 @@ UniValue estimatesmartfee(const JSONRPCRequest& request)\n             \"1. nblocks     (numeric)\\n\"\n             \"\\nResult:\\n\"\n             \"{\\n\"\n-            \"  \\\"feerate\\\" : x.x,     (numeric) estimate fee-per-kilobyte (in BTC)\\n\"\n+            \"  \\\"feerate\\\" : x.x,     (numeric) estimate fee-per-kilobyte (in BSC)\\n\"\n             \"  \\\"blocks\\\" : n         (numeric) block number where estimate was found\\n\"\n             \"}\\n\"\n             \"\\n\""
      },
      {
        "sha": "38dd638be6561b0f239b16926e5fb850050dd33b",
        "filename": "src/rpc/misc.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 16,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/rpc/misc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/rpc/misc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/misc.cpp?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -50,7 +50,7 @@ UniValue getinfo(const JSONRPCRequest& request)\n             \"  \\\"version\\\": xxxxx,           (numeric) the server version\\n\"\n             \"  \\\"protocolversion\\\": xxxxx,   (numeric) the protocol version\\n\"\n             \"  \\\"walletversion\\\": xxxxx,     (numeric) the wallet version\\n\"\n-            \"  \\\"balance\\\": xxxxxxx,         (numeric) the total bitcoin balance of the wallet\\n\"\n+            \"  \\\"balance\\\": xxxxxxx,         (numeric) the total blockcash balance of the wallet\\n\"\n             \"  \\\"blocks\\\": xxxxxx,           (numeric) the current number of blocks processed in the server\\n\"\n             \"  \\\"timeoffset\\\": xxxxx,        (numeric) the time offset\\n\"\n             \"  \\\"connections\\\": xxxxx,       (numeric) the number of connections\\n\"\n@@ -153,13 +153,13 @@ UniValue validateaddress(const JSONRPCRequest& request)\n     if (request.fHelp || request.params.size() != 1)\n         throw runtime_error(\n             \"validateaddress \\\"address\\\"\\n\"\n-            \"\\nReturn information about the given bitcoin address.\\n\"\n+            \"\\nReturn information about the given blockcash address.\\n\"\n             \"\\nArguments:\\n\"\n-            \"1. \\\"address\\\"     (string, required) The bitcoin address to validate\\n\"\n+            \"1. \\\"address\\\"     (string, required) The blockcash address to validate\\n\"\n             \"\\nResult:\\n\"\n             \"{\\n\"\n             \"  \\\"isvalid\\\" : true|false,       (boolean) If the address is valid or not. If not, this is the only property returned.\\n\"\n-            \"  \\\"address\\\" : \\\"address\\\", (string) The bitcoin address validated\\n\"\n+            \"  \\\"address\\\" : \\\"address\\\", (string) The blockcash address validated\\n\"\n             \"  \\\"scriptPubKey\\\" : \\\"hex\\\",       (string) The hex encoded scriptPubKey generated by the address\\n\"\n             \"  \\\"ismine\\\" : true|false,        (boolean) If the address is yours or not\\n\"\n             \"  \\\"iswatchonly\\\" : true|false,   (boolean) If the address is watchonly\\n\"\n@@ -172,8 +172,8 @@ UniValue validateaddress(const JSONRPCRequest& request)\n             \"  \\\"hdmasterkeyid\\\" : \\\"<hash160>\\\" (string, optional) The Hash160 of the HD master pubkey\\n\"\n             \"}\\n\"\n             \"\\nExamples:\\n\"\n-            + HelpExampleCli(\"validateaddress\", \"\\\"1PSSGeFHDnKNxiEyFrD1wcEaHr9hrQDDWc\\\"\")\n-            + HelpExampleRpc(\"validateaddress\", \"\\\"1PSSGeFHDnKNxiEyFrD1wcEaHr9hrQDDWc\\\"\")\n+            + HelpExampleCli(\"validateaddress\", \"\\\"0\\\"\")\n+            + HelpExampleRpc(\"validateaddress\", \"\\\"0\\\"\")\n         );\n \n #ifdef ENABLE_WALLET\n@@ -298,9 +298,9 @@ UniValue createmultisig(const JSONRPCRequest& request)\n \n             \"\\nArguments:\\n\"\n             \"1. nrequired      (numeric, required) The number of required signatures out of the n keys or addresses.\\n\"\n-            \"2. \\\"keys\\\"       (string, required) A json array of keys which are bitcoin addresses or hex-encoded public keys\\n\"\n+            \"2. \\\"keys\\\"       (string, required) A json array of keys which are blockcash addresses or hex-encoded public keys\\n\"\n             \"     [\\n\"\n-            \"       \\\"key\\\"    (string) bitcoin address or hex-encoded public key\\n\"\n+            \"       \\\"key\\\"    (string) blockcash address or hex-encoded public key\\n\"\n             \"       ,...\\n\"\n             \"     ]\\n\"\n \n@@ -312,9 +312,9 @@ UniValue createmultisig(const JSONRPCRequest& request)\n \n             \"\\nExamples:\\n\"\n             \"\\nCreate a multisig address from 2 addresses\\n\"\n-            + HelpExampleCli(\"createmultisig\", \"2 \\\"[\\\\\\\"16sSauSf5pF2UkUwvKGq4qjNRzBZYqgEL5\\\\\\\",\\\\\\\"171sgjn4YtPu27adkKGrdDwzRTxnRkBfKV\\\\\\\"]\\\"\") +\n+            + HelpExampleCli(\"createmultisig\", \"2 \\\"[\\\\\\\"0\\\\\\\",\\\\\\\"0\\\\\\\"]\\\"\") +\n             \"\\nAs a json rpc call\\n\"\n-            + HelpExampleRpc(\"createmultisig\", \"2, \\\"[\\\\\\\"16sSauSf5pF2UkUwvKGq4qjNRzBZYqgEL5\\\\\\\",\\\\\\\"171sgjn4YtPu27adkKGrdDwzRTxnRkBfKV\\\\\\\"]\\\"\")\n+            + HelpExampleRpc(\"createmultisig\", \"2, \\\"[\\\\\\\"0\\\\\\\",\\\\\\\"0\\\\\\\"]\\\"\")\n         ;\n         throw runtime_error(msg);\n     }\n@@ -338,7 +338,7 @@ UniValue verifymessage(const JSONRPCRequest& request)\n             \"verifymessage \\\"address\\\" \\\"signature\\\" \\\"message\\\"\\n\"\n             \"\\nVerify a signed message\\n\"\n             \"\\nArguments:\\n\"\n-            \"1. \\\"address\\\"         (string, required) The bitcoin address to use for the signature.\\n\"\n+            \"1. \\\"address\\\"         (string, required) The blockcash address to use for the signature.\\n\"\n             \"2. \\\"signature\\\"       (string, required) The signature provided by the signer in base 64 encoding (see signmessage).\\n\"\n             \"3. \\\"message\\\"         (string, required) The message that was signed.\\n\"\n             \"\\nResult:\\n\"\n@@ -347,11 +347,11 @@ UniValue verifymessage(const JSONRPCRequest& request)\n             \"\\nUnlock the wallet for 30 seconds\\n\"\n             + HelpExampleCli(\"walletpassphrase\", \"\\\"mypassphrase\\\" 30\") +\n             \"\\nCreate the signature\\n\"\n-            + HelpExampleCli(\"signmessage\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XX\\\" \\\"my message\\\"\") +\n+            + HelpExampleCli(\"signmessage\", \"\\\"0\\\" \\\"my message\\\"\") +\n             \"\\nVerify the signature\\n\"\n-            + HelpExampleCli(\"verifymessage\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XX\\\" \\\"signature\\\" \\\"my message\\\"\") +\n+            + HelpExampleCli(\"verifymessage\", \"\\\"0\\\" \\\"signature\\\" \\\"my message\\\"\") +\n             \"\\nAs json rpc\\n\"\n-            + HelpExampleRpc(\"verifymessage\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XX\\\", \\\"signature\\\", \\\"my message\\\"\")\n+            + HelpExampleRpc(\"verifymessage\", \"\\\"0\\\", \\\"signature\\\", \\\"my message\\\"\")\n         );\n \n     LOCK(cs_main);\n@@ -400,7 +400,7 @@ UniValue signmessagewithprivkey(const JSONRPCRequest& request)\n             \"\\nCreate the signature\\n\"\n             + HelpExampleCli(\"signmessagewithprivkey\", \"\\\"privkey\\\" \\\"my message\\\"\") +\n             \"\\nVerify the signature\\n\"\n-            + HelpExampleCli(\"verifymessage\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XX\\\" \\\"signature\\\" \\\"my message\\\"\") +\n+            + HelpExampleCli(\"verifymessage\", \"\\\"0\\\" \\\"signature\\\" \\\"my message\\\"\") +\n             \"\\nAs json rpc\\n\"\n             + HelpExampleRpc(\"signmessagewithprivkey\", \"\\\"privkey\\\", \\\"my message\\\"\")\n         );\n@@ -503,7 +503,7 @@ UniValue echo(const JSONRPCRequest& request)\n             \"echo|echojson \\\"message\\\" ...\\n\"\n             \"\\nSimply echo back the input arguments. This command is for testing.\\n\"\n             \"\\nThe difference between echo and echojson is that echojson has argument conversion enabled in the client-side table in\"\n-            \"bitcoin-cli and the GUI. There is no server-side difference.\"\n+            \"blockcash-cli and the GUI. There is no server-side difference.\"\n         );\n \n     return request.params;"
      },
      {
        "sha": "6dc4322e47ed83d6a53cabf74942dc7fa7f9376c",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -176,7 +176,7 @@ UniValue getrawtransaction(const JSONRPCRequest& request)\n             \"         \\\"reqSigs\\\" : n,            (numeric) The required sigs\\n\"\n             \"         \\\"type\\\" : \\\"pubkeyhash\\\",  (string) The type, eg 'pubkeyhash'\\n\"\n             \"         \\\"addresses\\\" : [           (json array of string)\\n\"\n-            \"           \\\"address\\\"        (string) bitcoin address\\n\"\n+            \"           \\\"address\\\"        (string) blockcash address\\n\"\n             \"           ,...\\n\"\n             \"         ]\\n\"\n             \"       }\\n\"\n@@ -372,7 +372,7 @@ UniValue createrawtransaction(const JSONRPCRequest& request)\n             \"     ]\\n\"\n             \"2. \\\"outputs\\\"               (object, required) a json object with outputs\\n\"\n             \"    {\\n\"\n-            \"      \\\"address\\\": x.xxx,    (numeric or string, required) The key is the bitcoin address, the numeric value (can be string) is the \" + CURRENCY_UNIT + \" amount\\n\"\n+            \"      \\\"address\\\": x.xxx,    (numeric or string, required) The key is the blockcash address, the numeric value (can be string) is the \" + CURRENCY_UNIT + \" amount\\n\"\n             \"      \\\"data\\\": \\\"hex\\\"      (string, required) The key is \\\"data\\\", the value is hex encoded data\\n\"\n             \"      ,...\\n\"\n             \"    }\\n\"\n@@ -445,7 +445,7 @@ UniValue createrawtransaction(const JSONRPCRequest& request)\n         } else {\n             CBitcoinAddress address(name_);\n             if (!address.IsValid())\n-                throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, string(\"Invalid Bitcoin address: \")+name_);\n+                throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, string(\"Invalid Blockcash address: \")+name_);\n \n             if (setAddress.count(address))\n                 throw JSONRPCError(RPC_INVALID_PARAMETER, string(\"Invalid parameter, duplicated address: \")+name_);\n@@ -503,7 +503,7 @@ UniValue decoderawtransaction(const JSONRPCRequest& request)\n             \"         \\\"reqSigs\\\" : n,            (numeric) The required sigs\\n\"\n             \"         \\\"type\\\" : \\\"pubkeyhash\\\",  (string) The type, eg 'pubkeyhash'\\n\"\n             \"         \\\"addresses\\\" : [           (json array of string)\\n\"\n-            \"           \\\"12tvKAXCxZjSmdNbao16dKXC8tRWfcF5oc\\\"   (string) bitcoin address\\n\"\n+            \"           \\\"12tvKAXCxZjSmdNbao16dKXC8tRWfcF5oc\\\"   (string) blockcash address\\n\"\n             \"           ,...\\n\"\n             \"         ]\\n\"\n             \"       }\\n\"\n@@ -546,7 +546,7 @@ UniValue decodescript(const JSONRPCRequest& request)\n             \"  \\\"type\\\":\\\"type\\\", (string) The output type\\n\"\n             \"  \\\"reqSigs\\\": n,    (numeric) The required signatures\\n\"\n             \"  \\\"addresses\\\": [   (json array of string)\\n\"\n-            \"     \\\"address\\\"     (string) bitcoin address\\n\"\n+            \"     \\\"address\\\"     (string) blockcash address\\n\"\n             \"     ,...\\n\"\n             \"  ],\\n\"\n             \"  \\\"p2sh\\\",\\\"address\\\" (string) address of P2SH script wrapping this redeem script (not returned if the script is already a P2SH).\\n\""
      },
      {
        "sha": "72aeda39b6b8ce9a6d2cd6d6e618bd6a68074c19",
        "filename": "src/rpc/server.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/rpc/server.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/rpc/server.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/server.cpp?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -260,11 +260,11 @@ UniValue stop(const JSONRPCRequest& jsonRequest)\n     if (jsonRequest.fHelp || jsonRequest.params.size() > 1)\n         throw runtime_error(\n             \"stop\\n\"\n-            \"\\nStop Bitcoin server.\");\n+            \"\\nStop Blockcash server.\");\n     // Event loop will exit after current HTTP requests have been handled, so\n     // this reply will get back to the client.\n     StartShutdown();\n-    return \"Bitcoin server stopping\";\n+    return \"Blockcash server stopping\";\n }\n \n /**\n@@ -512,7 +512,7 @@ std::vector<std::string> CRPCTable::listCommands() const\n \n std::string HelpExampleCli(const std::string& methodname, const std::string& args)\n {\n-    return \"> bitcoin-cli \" + methodname + \" \" + args + \"\\n\";\n+    return \"> blockcash-cli \" + methodname + \" \" + args + \"\\n\";\n }\n \n std::string HelpExampleRpc(const std::string& methodname, const std::string& args)"
      },
      {
        "sha": "6b0a2b188eb27bead0d21c801e8f723c735bd630",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -103,8 +103,8 @@ namespace boost {\n \n using namespace std;\n \n-const char * const BITCOIN_CONF_FILENAME = \"bitcoin.conf\";\n-const char * const BITCOIN_PID_FILENAME = \"bitcoind.pid\";\n+const char * const BITCOIN_CONF_FILENAME = \"blockcash.conf\";\n+const char * const BITCOIN_PID_FILENAME = \"blockcashd.pid\";\n \n CCriticalSection cs_args;\n map<string, string> mapArgs;\n@@ -462,7 +462,7 @@ static std::string FormatException(const std::exception* pex, const char* pszThr\n     char pszModule[MAX_PATH] = \"\";\n     GetModuleFileNameA(NULL, pszModule, sizeof(pszModule));\n #else\n-    const char* pszModule = \"bitcoin\";\n+    const char* pszModule = \"blockcash\";\n #endif\n     if (pex)\n         return strprintf(\n@@ -488,7 +488,7 @@ boost::filesystem::path GetDefaultDataDir()\n     // Unix: ~/.bitcoin\n #ifdef WIN32\n     // Windows\n-    return GetSpecialFolderPath(CSIDL_APPDATA) / \"Bitcoin\";\n+    return GetSpecialFolderPath(CSIDL_APPDATA) / \"Blockcash\";\n #else\n     fs::path pathRet;\n     char* pszHome = getenv(\"HOME\");\n@@ -498,10 +498,10 @@ boost::filesystem::path GetDefaultDataDir()\n         pathRet = fs::path(pszHome);\n #ifdef MAC_OSX\n     // Mac\n-    return pathRet / \"Library/Application Support/Bitcoin\";\n+    return pathRet / \"Library/Application Support/Blockcash\";\n #else\n     // Unix\n-    return pathRet / \".bitcoin\";\n+    return pathRet / \".blockcash\";\n #endif\n #endif\n }"
      },
      {
        "sha": "c0f75682cc37c6576b019033e2514596a934770f",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -47,7 +47,7 @@\n #include <boost/thread.hpp>\n \n #if defined(NDEBUG)\n-# error \"Bitcoin cannot be compiled without assertions.\"\n+# error \"Blockcash cannot be compiled without assertions.\"\n #endif\n \n /**\n@@ -88,7 +88,7 @@ static void CheckBlockIndex(const Consensus::Params& consensusParams);\n /** Constant stuff for coinbase transactions we create: */\n CScript COINBASE_FLAGS;\n \n-const std::string strMessageMagic = \"Bitcoin Signed Message:\\n\";\n+const std::string strMessageMagic = \"Blockcash Signed Message:\\n\";\n \n // Internal stuff\n namespace {\n@@ -980,7 +980,7 @@ bool AcceptToMemoryPoolWorker(CTxMemPool& pool, CValidationState& state, const C\n         // Remove conflicting transactions from the mempool\n         BOOST_FOREACH(const CTxMemPool::txiter it, allConflicting)\n         {\n-            LogPrint(\"mempool\", \"replacing tx %s with %s for %s BTC additional fees, %d delta bytes\\n\",\n+            LogPrint(\"mempool\", \"replacing tx %s with %s for %s BSC additional fees, %d delta bytes\\n\",\n                     it->GetTx().GetHash().ToString(),\n                     hash.ToString(),\n                     FormatMoney(nModifiedFees - nConflictingFees),"
      },
      {
        "sha": "dafe0d725f72224c6c2f830dced3cc189742854f",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -82,10 +82,10 @@ UniValue importprivkey(const JSONRPCRequest& request)\n     \n     if (request.fHelp || request.params.size() < 1 || request.params.size() > 3)\n         throw runtime_error(\n-            \"importprivkey \\\"bitcoinprivkey\\\" ( \\\"label\\\" ) ( rescan )\\n\"\n+            \"importprivkey \\\"blockcashprivkey\\\" ( \\\"label\\\" ) ( rescan )\\n\"\n             \"\\nAdds a private key (as returned by dumpprivkey) to your wallet.\\n\"\n             \"\\nArguments:\\n\"\n-            \"1. \\\"bitcoinprivkey\\\"   (string, required) The private key (see dumpprivkey)\\n\"\n+            \"1. \\\"blockcashprivkey\\\"   (string, required) The private key (see dumpprivkey)\\n\"\n             \"2. \\\"label\\\"            (string, optional, default=\\\"\\\") An optional label\\n\"\n             \"3. rescan               (boolean, optional, default=true) Rescan the wallet for transactions\\n\"\n             \"\\nNote: This call can take minutes to complete if rescan is true.\\n\"\n@@ -243,7 +243,7 @@ UniValue importaddress(const JSONRPCRequest& request)\n         std::vector<unsigned char> data(ParseHex(request.params[0].get_str()));\n         ImportScript(CScript(data.begin(), data.end()), strLabel, fP2SH);\n     } else {\n-        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid Bitcoin address or script\");\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid Blockcash address or script\");\n     }\n \n     if (fRescan)\n@@ -326,9 +326,9 @@ UniValue removeprunedfunds(const JSONRPCRequest& request)\n             \"\\nArguments:\\n\"\n             \"1. \\\"txid\\\"           (string, required) The hex-encoded id of the transaction you are deleting\\n\"\n             \"\\nExamples:\\n\"\n-            + HelpExampleCli(\"removeprunedfunds\", \"\\\"a8d0c0184dde994a09ec054286f1ce581bebf46446a512166eae7628734ea0a5\\\"\") +\n+            + HelpExampleCli(\"removeprunedfunds\", \"\\\"0\\\"\") +\n             \"\\nAs a JSON-RPC call\\n\"\n-            + HelpExampleRpc(\"removprunedfunds\", \"\\\"a8d0c0184dde994a09ec054286f1ce581bebf46446a512166eae7628734ea0a5\\\"\")\n+            + HelpExampleRpc(\"removprunedfunds\", \"\\\"0\\\"\")\n         );\n \n     LOCK2(cs_main, pwalletMain->cs_wallet);\n@@ -522,7 +522,7 @@ UniValue dumpprivkey(const JSONRPCRequest& request)\n             \"\\nReveals the private key corresponding to 'address'.\\n\"\n             \"Then the importprivkey can be used with this output\\n\"\n             \"\\nArguments:\\n\"\n-            \"1. \\\"address\\\"   (string, required) The bitcoin address for the private key\\n\"\n+            \"1. \\\"address\\\"   (string, required) The blockcash address for the private key\\n\"\n             \"\\nResult:\\n\"\n             \"\\\"key\\\"                (string) The private key\\n\"\n             \"\\nExamples:\\n\"\n@@ -538,7 +538,7 @@ UniValue dumpprivkey(const JSONRPCRequest& request)\n     string strAddress = request.params[0].get_str();\n     CBitcoinAddress address;\n     if (!address.SetString(strAddress))\n-        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid Bitcoin address\");\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid Blockcash address\");\n     CKeyID keyID;\n     if (!address.GetKeyID(keyID))\n         throw JSONRPCError(RPC_TYPE_ERROR, \"Address does not refer to a key\");\n@@ -590,7 +590,7 @@ UniValue dumpwallet(const JSONRPCRequest& request)\n     std::sort(vKeyBirth.begin(), vKeyBirth.end());\n \n     // produce output\n-    file << strprintf(\"# Wallet dump created by Bitcoin %s\\n\", CLIENT_BUILD);\n+    file << strprintf(\"# Wallet dump created by Blockcash %s\\n\", CLIENT_BUILD);\n     file << strprintf(\"# * Created on %s\\n\", EncodeDumpTime(GetTime()));\n     file << strprintf(\"# * Best block at time of backup was %i (%s),\\n\", chainActive.Height(), chainActive.Tip()->GetBlockHash().ToString());\n     file << strprintf(\"#   mined on %s\\n\", EncodeDumpTime(chainActive.Tip()->GetBlockTime()));"
      },
      {
        "sha": "a243acf6b0e14aa2a57fc6bdec8ea0e02f627390",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 87,
        "deletions": 87,
        "changes": 174,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2ac4af5b66bebbf0f736210b6497367c95c2324/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=e2ac4af5b66bebbf0f736210b6497367c95c2324",
        "patch": "@@ -112,13 +112,13 @@ UniValue getnewaddress(const JSONRPCRequest& request)\n     if (request.fHelp || request.params.size() > 1)\n         throw runtime_error(\n             \"getnewaddress ( \\\"account\\\" )\\n\"\n-            \"\\nReturns a new Bitcoin address for receiving payments.\\n\"\n+            \"\\nReturns a new Blockcash address for receiving payments.\\n\"\n             \"If 'account' is specified (DEPRECATED), it is added to the address book \\n\"\n             \"so payments received with the address will be credited to 'account'.\\n\"\n             \"\\nArguments:\\n\"\n             \"1. \\\"account\\\"        (string, optional) DEPRECATED. The account name for the address to be linked to. If not provided, the default account \\\"\\\" is used. It can also be set to the empty string \\\"\\\" to represent the default account. The account does not need to exist, it will be created if there is no account by the given name.\\n\"\n             \"\\nResult:\\n\"\n-            \"\\\"address\\\"    (string) The new bitcoin address\\n\"\n+            \"\\\"address\\\"    (string) The new blockcash address\\n\"\n             \"\\nExamples:\\n\"\n             + HelpExampleCli(\"getnewaddress\", \"\")\n             + HelpExampleRpc(\"getnewaddress\", \"\")\n@@ -164,11 +164,11 @@ UniValue getaccountaddress(const JSONRPCRequest& request)\n     if (request.fHelp || request.params.size() != 1)\n         throw runtime_error(\n             \"getaccountaddress \\\"account\\\"\\n\"\n-            \"\\nDEPRECATED. Returns the current Bitcoin address for receiving payments to this account.\\n\"\n+            \"\\nDEPRECATED. Returns the current Blockcash address for receiving payments to this account.\\n\"\n             \"\\nArguments:\\n\"\n             \"1. \\\"account\\\"       (string, required) The account name for the address. It can also be set to the empty string \\\"\\\" to represent the default account. The account does not need to exist, it will be created and a new address created  if there is no account by the given name.\\n\"\n             \"\\nResult:\\n\"\n-            \"\\\"address\\\"          (string) The account bitcoin address\\n\"\n+            \"\\\"address\\\"          (string) The account blockcash address\\n\"\n             \"\\nExamples:\\n\"\n             + HelpExampleCli(\"getaccountaddress\", \"\")\n             + HelpExampleCli(\"getaccountaddress\", \"\\\"\\\"\")\n@@ -196,7 +196,7 @@ UniValue getrawchangeaddress(const JSONRPCRequest& request)\n     if (request.fHelp || request.params.size() > 1)\n         throw runtime_error(\n             \"getrawchangeaddress\\n\"\n-            \"\\nReturns a new Bitcoin address, for receiving change.\\n\"\n+            \"\\nReturns a new Blockcash address, for receiving change.\\n\"\n             \"This is for use with raw transactions, NOT normal use.\\n\"\n             \"\\nResult:\\n\"\n             \"\\\"address\\\"    (string) The address\\n\"\n@@ -233,18 +233,18 @@ UniValue setaccount(const JSONRPCRequest& request)\n             \"setaccount \\\"address\\\" \\\"account\\\"\\n\"\n             \"\\nDEPRECATED. Sets the account associated with the given address.\\n\"\n             \"\\nArguments:\\n\"\n-            \"1. \\\"address\\\"         (string, required) The bitcoin address to be associated with an account.\\n\"\n+            \"1. \\\"address\\\"         (string, required) The blockcash address to be associated with an account.\\n\"\n             \"2. \\\"account\\\"         (string, required) The account to assign the address to.\\n\"\n             \"\\nExamples:\\n\"\n-            + HelpExampleCli(\"setaccount\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XX\\\" \\\"tabby\\\"\")\n-            + HelpExampleRpc(\"setaccount\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XX\\\", \\\"tabby\\\"\")\n+            + HelpExampleCli(\"setaccount\", \"\\\"0\\\" \\\"love\\\"\")\n+            + HelpExampleRpc(\"setaccount\", \"\\\"0\\\", \\\"love\\\"\")\n         );\n \n     LOCK2(cs_main, pwalletMain->cs_wallet);\n \n     CBitcoinAddress address(request.params[0].get_str());\n     if (!address.IsValid())\n-        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid Bitcoin address\");\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid Blockcash address\");\n \n     string strAccount;\n     if (request.params.size() > 1)\n@@ -279,19 +279,19 @@ UniValue getaccount(const JSONRPCRequest& request)\n             \"getaccount \\\"address\\\"\\n\"\n             \"\\nDEPRECATED. Returns the account associated with the given address.\\n\"\n             \"\\nArguments:\\n\"\n-            \"1. \\\"address\\\"         (string, required) The bitcoin address for account lookup.\\n\"\n+            \"1. \\\"address\\\"         (string, required) The blockcash address for account lookup.\\n\"\n             \"\\nResult:\\n\"\n             \"\\\"accountname\\\"        (string) the account address\\n\"\n             \"\\nExamples:\\n\"\n-            + HelpExampleCli(\"getaccount\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XX\\\"\")\n-            + HelpExampleRpc(\"getaccount\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XX\\\"\")\n+            + HelpExampleCli(\"getaccount\", \"\\\"0\\\"\")\n+            + HelpExampleRpc(\"getaccount\", \"\\\"0\\\"\")\n         );\n \n     LOCK2(cs_main, pwalletMain->cs_wallet);\n \n     CBitcoinAddress address(request.params[0].get_str());\n     if (!address.IsValid())\n-        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid Bitcoin address\");\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid Blockcash address\");\n \n     string strAccount;\n     map<CTxDestination, CAddressBookData>::iterator mi = pwalletMain->mapAddressBook.find(address.Get());\n@@ -314,12 +314,12 @@ UniValue getaddressesbyaccount(const JSONRPCRequest& request)\n             \"1. \\\"account\\\"        (string, required) The account name.\\n\"\n             \"\\nResult:\\n\"\n             \"[                     (json array of string)\\n\"\n-            \"  \\\"address\\\"         (string) a bitcoin address associated with the given account\\n\"\n+            \"  \\\"address\\\"         (string) a blockcash address associated with the given account\\n\"\n             \"  ,...\\n\"\n             \"]\\n\"\n             \"\\nExamples:\\n\"\n-            + HelpExampleCli(\"getaddressesbyaccount\", \"\\\"tabby\\\"\")\n-            + HelpExampleRpc(\"getaddressesbyaccount\", \"\\\"tabby\\\"\")\n+            + HelpExampleCli(\"getaddressesbyaccount\", \"\\\"love\\\"\")\n+            + HelpExampleRpc(\"getaddressesbyaccount\", \"\\\"love\\\"\")\n         );\n \n     LOCK2(cs_main, pwalletMain->cs_wallet);\n@@ -386,29 +386,29 @@ UniValue sendtoaddress(const JSONRPCRequest& request)\n             \"\\nSend an amount to a given address.\\n\"\n             + HelpRequiringPassphrase() +\n             \"\\nArguments:\\n\"\n-            \"1. \\\"address\\\"            (string, required) The bitcoin address to send to.\\n\"\n+            \"1. \\\"address\\\"            (string, required) The Blockcash address to send to.\\n\"\n             \"2. \\\"amount\\\"             (numeric or string, required) The amount in \" + CURRENCY_UNIT + \" to send. eg 0.1\\n\"\n             \"3. \\\"comment\\\"            (string, optional) A comment used to store what the transaction is for. \\n\"\n             \"                             This is not part of the transaction, just kept in your wallet.\\n\"\n             \"4. \\\"comment_to\\\"         (string, optional) A comment to store the name of the person or organization \\n\"\n             \"                             to which you're sending the transaction. This is not part of the \\n\"\n             \"                             transaction, just kept in your wallet.\\n\"\n             \"5. subtractfeefromamount  (boolean, optional, default=false) The fee will be deducted from the amount being sent.\\n\"\n-            \"                             The recipient will receive less bitcoins than you enter in the amount field.\\n\"\n+            \"                             The recipient will receive less blockcash than you enter in the amount field.\\n\"\n             \"\\nResult:\\n\"\n             \"\\\"txid\\\"                  (string) The transaction id.\\n\"\n             \"\\nExamples:\\n\"\n-            + HelpExampleCli(\"sendtoaddress\", \"\\\"1M72Sfpbz1BPpXFHz9m3CdqATR44Jvaydd\\\" 0.1\")\n-            + HelpExampleCli(\"sendtoaddress\", \"\\\"1M72Sfpbz1BPpXFHz9m3CdqATR44Jvaydd\\\" 0.1 \\\"donation\\\" \\\"seans outpost\\\"\")\n-            + HelpExampleCli(\"sendtoaddress\", \"\\\"1M72Sfpbz1BPpXFHz9m3CdqATR44Jvaydd\\\" 0.1 \\\"\\\" \\\"\\\" true\")\n-            + HelpExampleRpc(\"sendtoaddress\", \"\\\"1M72Sfpbz1BPpXFHz9m3CdqATR44Jvaydd\\\", 0.1, \\\"donation\\\", \\\"seans outpost\\\"\")\n+            + HelpExampleCli(\"sendtoaddress\", \"\\\"\\\" 0.1\")\n+            + HelpExampleCli(\"sendtoaddress\", \"\\\"\\\" 0.1 \\\"donation\\\" \\\"seans outpost\\\"\")\n+            + HelpExampleCli(\"sendtoaddress\", \"\\\"\\\" 0.1 \\\"\\\" \\\"\\\" true\")\n+            + HelpExampleRpc(\"sendtoaddress\", \"\\\"\\\", 0.1, \\\"donation\\\", \\\"seans outpost\\\"\")\n         );\n \n     LOCK2(cs_main, pwalletMain->cs_wallet);\n \n     CBitcoinAddress address(request.params[0].get_str());\n     if (!address.IsValid())\n-        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid Bitcoin address\");\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid Blockcash address\");\n \n     // Amount\n     CAmount nAmount = AmountFromValue(request.params[1]);\n@@ -448,7 +448,7 @@ UniValue listaddressgroupings(const JSONRPCRequest& request)\n             \"[\\n\"\n             \"  [\\n\"\n             \"    [\\n\"\n-            \"      \\\"address\\\",            (string) The bitcoin address\\n\"\n+            \"      \\\"address\\\",            (string) The Blockcash address\\n\"\n             \"      amount,                 (numeric) The amount in \" + CURRENCY_UNIT + \"\\n\"\n             \"      \\\"account\\\"             (string, optional) DEPRECATED. The account\\n\"\n             \"    ]\\n\"\n@@ -495,19 +495,19 @@ UniValue signmessage(const JSONRPCRequest& request)\n             \"\\nSign a message with the private key of an address\"\n             + HelpRequiringPassphrase() + \"\\n\"\n             \"\\nArguments:\\n\"\n-            \"1. \\\"address\\\"         (string, required) The bitcoin address to use for the private key.\\n\"\n+            \"1. \\\"address\\\"         (string, required) The Blockcash address to use for the private key.\\n\"\n             \"2. \\\"message\\\"         (string, required) The message to create a signature of.\\n\"\n             \"\\nResult:\\n\"\n             \"\\\"signature\\\"          (string) The signature of the message encoded in base 64\\n\"\n             \"\\nExamples:\\n\"\n             \"\\nUnlock the wallet for 30 seconds\\n\"\n             + HelpExampleCli(\"walletpassphrase\", \"\\\"mypassphrase\\\" 30\") +\n             \"\\nCreate the signature\\n\"\n-            + HelpExampleCli(\"signmessage\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XX\\\" \\\"my message\\\"\") +\n+            + HelpExampleCli(\"signmessage\", \"\\\"0\\\" \\\"my message\\\"\") +\n             \"\\nVerify the signature\\n\"\n-            + HelpExampleCli(\"verifymessage\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XX\\\" \\\"signature\\\" \\\"my message\\\"\") +\n+            + HelpExampleCli(\"verifymessage\", \"\\\"0\\\" \\\"signature\\\" \\\"my message\\\"\") +\n             \"\\nAs json rpc\\n\"\n-            + HelpExampleRpc(\"signmessage\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XX\\\", \\\"my message\\\"\")\n+            + HelpExampleRpc(\"signmessage\", \"\\\"0\\\", \\\"my message\\\"\")\n         );\n \n     LOCK2(cs_main, pwalletMain->cs_wallet);\n@@ -550,27 +550,27 @@ UniValue getreceivedbyaddress(const JSONRPCRequest& request)\n             \"getreceivedbyaddress \\\"address\\\" ( minconf )\\n\"\n             \"\\nReturns the total amount received by the given address in transactions with at least minconf confirmations.\\n\"\n             \"\\nArguments:\\n\"\n-            \"1. \\\"address\\\"         (string, required) The bitcoin address for transactions.\\n\"\n+            \"1. \\\"address\\\"         (string, required) The Blockcash address for transactions.\\n\"\n             \"2. minconf             (numeric, optional, default=1) Only include transactions confirmed at least this many times.\\n\"\n             \"\\nResult:\\n\"\n             \"amount   (numeric) The total amount in \" + CURRENCY_UNIT + \" received at this address.\\n\"\n             \"\\nExamples:\\n\"\n             \"\\nThe amount from transactions with at least 1 confirmation\\n\"\n-            + HelpExampleCli(\"getreceivedbyaddress\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XX\\\"\") +\n+            + HelpExampleCli(\"getreceivedbyaddress\", \"\\\"\\\"\") +\n             \"\\nThe amount including unconfirmed transactions, zero confirmations\\n\"\n-            + HelpExampleCli(\"getreceivedbyaddress\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XX\\\" 0\") +\n+            + HelpExampleCli(\"getreceivedbyaddress\", \"\\\"\\\" 0\") +\n             \"\\nThe amount with at least 6 confirmation, very safe\\n\"\n-            + HelpExampleCli(\"getreceivedbyaddress\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XX\\\" 6\") +\n+            + HelpExampleCli(\"getreceivedbyaddress\", \"\\\"\\\" 6\") +\n             \"\\nAs a json rpc call\\n\"\n-            + HelpExampleRpc(\"getreceivedbyaddress\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XX\\\", 6\")\n+            + HelpExampleRpc(\"getreceivedbyaddress\", \"\\\"\\\", 6\")\n        );\n \n     LOCK2(cs_main, pwalletMain->cs_wallet);\n \n     // Bitcoin address\n     CBitcoinAddress address = CBitcoinAddress(request.params[0].get_str());\n     if (!address.IsValid())\n-        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid Bitcoin address\");\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid Blockcash address\");\n     CScript scriptPubKey = GetScriptForDestination(address.Get());\n     if (!IsMine(*pwalletMain, scriptPubKey))\n         return ValueFromAmount(0);\n@@ -615,12 +615,12 @@ UniValue getreceivedbyaccount(const JSONRPCRequest& request)\n             \"\\nExamples:\\n\"\n             \"\\nAmount received by the default account with at least 1 confirmation\\n\"\n             + HelpExampleCli(\"getreceivedbyaccount\", \"\\\"\\\"\") +\n-            \"\\nAmount received at the tabby account including unconfirmed amounts with zero confirmations\\n\"\n-            + HelpExampleCli(\"getreceivedbyaccount\", \"\\\"tabby\\\" 0\") +\n+            \"\\nAmount received at the love account including unconfirmed amounts with zero confirmations\\n\"\n+            + HelpExampleCli(\"getreceivedbyaccount\", \"\\\"love\\\" 0\") +\n             \"\\nThe amount with at least 6 confirmation, very safe\\n\"\n-            + HelpExampleCli(\"getreceivedbyaccount\", \"\\\"tabby\\\" 6\") +\n+            + HelpExampleCli(\"getreceivedbyaccount\", \"\\\"love\\\" 6\") +\n             \"\\nAs a json rpc call\\n\"\n-            + HelpExampleRpc(\"getreceivedbyaccount\", \"\\\"tabby\\\", 6\")\n+            + HelpExampleRpc(\"getreceivedbyaccount\", \"\\\"love\\\", 6\")\n         );\n \n     LOCK2(cs_main, pwalletMain->cs_wallet);\n@@ -778,8 +778,8 @@ UniValue movecmd(const JSONRPCRequest& request)\n             \"\\nResult:\\n\"\n             \"true|false           (boolean) true if successful.\\n\"\n             \"\\nExamples:\\n\"\n-            \"\\nMove 0.01 \" + CURRENCY_UNIT + \" from the default account to the account named tabby\\n\"\n-            + HelpExampleCli(\"move\", \"\\\"\\\" \\\"tabby\\\" 0.01\") +\n+            \"\\nMove 0.01 \" + CURRENCY_UNIT + \" from the default account to the account named love\\n\"\n+            + HelpExampleCli(\"move\", \"\\\"\\\" \\\"love\\\" 0.01\") +\n             \"\\nMove 0.01 \" + CURRENCY_UNIT + \" timotei to akiko with a comment and funds have 6 confirmations\\n\"\n             + HelpExampleCli(\"move\", \"\\\"timotei\\\" \\\"akiko\\\" 0.01 6 \\\"happy birthday!\\\"\") +\n             \"\\nAs a json rpc call\\n\"\n@@ -815,14 +815,14 @@ UniValue sendfrom(const JSONRPCRequest& request)\n     if (request.fHelp || request.params.size() < 3 || request.params.size() > 6)\n         throw runtime_error(\n             \"sendfrom \\\"fromaccount\\\" \\\"toaddress\\\" amount ( minconf \\\"comment\\\" \\\"comment_to\\\" )\\n\"\n-            \"\\nDEPRECATED (use sendtoaddress). Sent an amount from an account to a bitcoin address.\"\n+            \"\\nDEPRECATED (use sendtoaddress). Sent an amount from an account to a blockcash address.\"\n             + HelpRequiringPassphrase() + \"\\n\"\n             \"\\nArguments:\\n\"\n             \"1. \\\"fromaccount\\\"       (string, required) The name of the account to send funds from. May be the default account using \\\"\\\".\\n\"\n             \"                       Specifying an account does not influence coin selection, but it does associate the newly created\\n\"\n             \"                       transaction with the account, so the account's balance computation and transaction history can reflect\\n\"\n             \"                       the spend.\\n\"\n-            \"2. \\\"toaddress\\\"         (string, required) The bitcoin address to send funds to.\\n\"\n+            \"2. \\\"toaddress\\\"         (string, required) The blockcash address to send funds to.\\n\"\n             \"3. amount                (numeric or string, required) The amount in \" + CURRENCY_UNIT + \" (transaction fee is added on top).\\n\"\n             \"4. minconf               (numeric, optional, default=1) Only use funds with at least this many confirmations.\\n\"\n             \"5. \\\"comment\\\"           (string, optional) A comment used to store what the transaction is for. \\n\"\n@@ -834,19 +834,19 @@ UniValue sendfrom(const JSONRPCRequest& request)\n             \"\\\"txid\\\"                 (string) The transaction id.\\n\"\n             \"\\nExamples:\\n\"\n             \"\\nSend 0.01 \" + CURRENCY_UNIT + \" from the default account to the address, must have at least 1 confirmation\\n\"\n-            + HelpExampleCli(\"sendfrom\", \"\\\"\\\" \\\"1M72Sfpbz1BPpXFHz9m3CdqATR44Jvaydd\\\" 0.01\") +\n-            \"\\nSend 0.01 from the tabby account to the given address, funds must have at least 6 confirmations\\n\"\n-            + HelpExampleCli(\"sendfrom\", \"\\\"tabby\\\" \\\"1M72Sfpbz1BPpXFHz9m3CdqATR44Jvaydd\\\" 0.01 6 \\\"donation\\\" \\\"seans outpost\\\"\") +\n+            + HelpExampleCli(\"sendfrom\", \"\\\"\\\" \\\"\\\" 0.01\") +\n+            \"\\nSend 0.01 from the love account to the given address, funds must have at least 6 confirmations\\n\"\n+            + HelpExampleCli(\"sendfrom\", \"\\\"love\\\" \\\"\\\" 0.01 6 \\\"donation\\\" \\\"seans outpost\\\"\") +\n             \"\\nAs a json rpc call\\n\"\n-            + HelpExampleRpc(\"sendfrom\", \"\\\"tabby\\\", \\\"1M72Sfpbz1BPpXFHz9m3CdqATR44Jvaydd\\\", 0.01, 6, \\\"donation\\\", \\\"seans outpost\\\"\")\n+            + HelpExampleRpc(\"sendfrom\", \"\\\"love\\\", \\\"\\\", 0.01, 6, \\\"donation\\\", \\\"seans outpost\\\"\")\n         );\n \n     LOCK2(cs_main, pwalletMain->cs_wallet);\n \n     string strAccount = AccountFromValue(request.params[0]);\n     CBitcoinAddress address(request.params[1].get_str());\n     if (!address.IsValid())\n-        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid Bitcoin address\");\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid Blockcash address\");\n     CAmount nAmount = AmountFromValue(request.params[2]);\n     if (nAmount <= 0)\n         throw JSONRPCError(RPC_TYPE_ERROR, \"Invalid amount for send\");\n@@ -888,14 +888,14 @@ UniValue sendmany(const JSONRPCRequest& request)\n             \"1. \\\"fromaccount\\\"         (string, required) DEPRECATED. The account to send the funds from. Should be \\\"\\\" for the default account\\n\"\n             \"2. \\\"amounts\\\"             (string, required) A json object with addresses and amounts\\n\"\n             \"    {\\n\"\n-            \"      \\\"address\\\":amount   (numeric or string) The bitcoin address is the key, the numeric amount (can be string) in \" + CURRENCY_UNIT + \" is the value\\n\"\n+            \"      \\\"address\\\":amount   (numeric or string) The Blockcash address is the key, the numeric amount (can be string) in \" + CURRENCY_UNIT + \" is the value\\n\"\n             \"      ,...\\n\"\n             \"    }\\n\"\n             \"3. minconf                 (numeric, optional, default=1) Only use the balance confirmed at least this many times.\\n\"\n             \"4. \\\"comment\\\"             (string, optional) A comment\\n\"\n             \"5. subtractfeefrom         (array, optional) A json array with addresses.\\n\"\n             \"                           The fee will be equally deducted from the amount of each selected address.\\n\"\n-            \"                           Those recipients will receive less bitcoins than you enter in their corresponding amount field.\\n\"\n+            \"                           Those recipients will receive less blockcash than you enter in their corresponding amount field.\\n\"\n             \"                           If no addresses are specified here, the sender pays the fee.\\n\"\n             \"    [\\n\"\n             \"      \\\"address\\\"          (string) Subtract fee from this address\\n\"\n@@ -906,13 +906,13 @@ UniValue sendmany(const JSONRPCRequest& request)\n             \"                                    the number of addresses.\\n\"\n             \"\\nExamples:\\n\"\n             \"\\nSend two amounts to two different addresses:\\n\"\n-            + HelpExampleCli(\"sendmany\", \"\\\"\\\" \\\"{\\\\\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XX\\\\\\\":0.01,\\\\\\\"1353tsE8YMTA4EuV7dgUXGjNFf9KpVvKHz\\\\\\\":0.02}\\\"\") +\n+            + HelpExampleCli(\"sendmany\", \"\\\"\\\" \\\"{\\\\\\\"\\\\\\\":0.01,\\\\\\\"\\\\\\\":0.02}\\\"\") +\n             \"\\nSend two amounts to two different addresses setting the confirmation and comment:\\n\"\n-            + HelpExampleCli(\"sendmany\", \"\\\"\\\" \\\"{\\\\\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XX\\\\\\\":0.01,\\\\\\\"1353tsE8YMTA4EuV7dgUXGjNFf9KpVvKHz\\\\\\\":0.02}\\\" 6 \\\"testing\\\"\") +\n+            + HelpExampleCli(\"sendmany\", \"\\\"\\\" \\\"{\\\\\\\"\\\\\\\":0.01,\\\\\\\"\\\\\\\":0.02}\\\" 6 \\\"testing\\\"\") +\n             \"\\nSend two amounts to two different addresses, subtract fee from amount:\\n\"\n-            + HelpExampleCli(\"sendmany\", \"\\\"\\\" \\\"{\\\\\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XX\\\\\\\":0.01,\\\\\\\"1353tsE8YMTA4EuV7dgUXGjNFf9KpVvKHz\\\\\\\":0.02}\\\" 1 \\\"\\\" \\\"[\\\\\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XX\\\\\\\",\\\\\\\"1353tsE8YMTA4EuV7dgUXGjNFf9KpVvKHz\\\\\\\"]\\\"\") +\n+            + HelpExampleCli(\"sendmany\", \"\\\"\\\" \\\"{\\\\\\\"\\\\\\\":0.01,\\\\\\\"\\\\\\\":0.02}\\\" 1 \\\"\\\" \\\"[\\\\\\\"\\\\\\\",\\\\\\\"\\\\\\\"]\\\"\") +\n             \"\\nAs a json rpc call\\n\"\n-            + HelpExampleRpc(\"sendmany\", \"\\\"\\\", \\\"{\\\\\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XX\\\\\\\":0.01,\\\\\\\"1353tsE8YMTA4EuV7dgUXGjNFf9KpVvKHz\\\\\\\":0.02}\\\", 6, \\\"testing\\\"\")\n+            + HelpExampleRpc(\"sendmany\", \"\\\"\\\", \\\"{\\\\\\\"\\\\\\\":0.01,\\\\\\\"\\\\\\\":0.02}\\\", 6, \\\"testing\\\"\")\n         );\n \n     LOCK2(cs_main, pwalletMain->cs_wallet);\n@@ -944,7 +944,7 @@ UniValue sendmany(const JSONRPCRequest& request)\n     {\n         CBitcoinAddress address(name_);\n         if (!address.IsValid())\n-            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, string(\"Invalid Bitcoin address: \")+name_);\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, string(\"Invalid Blockcash address: \")+name_);\n \n         if (setAddress.count(address))\n             throw JSONRPCError(RPC_INVALID_PARAMETER, string(\"Invalid parameter, duplicated address: \")+name_);\n@@ -1003,26 +1003,26 @@ UniValue addmultisigaddress(const JSONRPCRequest& request)\n     {\n         string msg = \"addmultisigaddress nrequired [\\\"key\\\",...] ( \\\"account\\\" )\\n\"\n             \"\\nAdd a nrequired-to-sign multisignature address to the wallet.\\n\"\n-            \"Each key is a Bitcoin address or hex-encoded public key.\\n\"\n+            \"Each key is a Blockcash address or hex-encoded public key.\\n\"\n             \"If 'account' is specified (DEPRECATED), assign address to that account.\\n\"\n \n             \"\\nArguments:\\n\"\n             \"1. nrequired        (numeric, required) The number of required signatures out of the n keys or addresses.\\n\"\n-            \"2. \\\"keys\\\"         (string, required) A json array of bitcoin addresses or hex-encoded public keys\\n\"\n+            \"2. \\\"keys\\\"         (string, required) A json array of blockcash addresses or hex-encoded public keys\\n\"\n             \"     [\\n\"\n-            \"       \\\"address\\\"  (string) bitcoin address or hex-encoded public key\\n\"\n+            \"       \\\"address\\\"  (string) blockcash address or hex-encoded public key\\n\"\n             \"       ...,\\n\"\n             \"     ]\\n\"\n             \"3. \\\"account\\\"      (string, optional) DEPRECATED. An account to assign the addresses to.\\n\"\n \n             \"\\nResult:\\n\"\n-            \"\\\"address\\\"         (string) A bitcoin address associated with the keys.\\n\"\n+            \"\\\"address\\\"         (string) A blockcash address associated with the keys.\\n\"\n \n             \"\\nExamples:\\n\"\n             \"\\nAdd a multisig address from 2 addresses\\n\"\n-            + HelpExampleCli(\"addmultisigaddress\", \"2 \\\"[\\\\\\\"16sSauSf5pF2UkUwvKGq4qjNRzBZYqgEL5\\\\\\\",\\\\\\\"171sgjn4YtPu27adkKGrdDwzRTxnRkBfKV\\\\\\\"]\\\"\") +\n+            + HelpExampleCli(\"addmultisigaddress\", \"2 \\\"[\\\\\\\"0\\\\\\\",\\\\\\\"0\\\\\\\"]\\\"\") +\n             \"\\nAs json rpc call\\n\"\n-            + HelpExampleRpc(\"addmultisigaddress\", \"2, \\\"[\\\\\\\"16sSauSf5pF2UkUwvKGq4qjNRzBZYqgEL5\\\\\\\",\\\\\\\"171sgjn4YtPu27adkKGrdDwzRTxnRkBfKV\\\\\\\"]\\\"\")\n+            + HelpExampleRpc(\"addmultisigaddress\", \"2, \\\"[\\\\\\\"0\\\\\\\",\\\\\\\"0\\\\\\\"]\\\"\")\n         ;\n         throw runtime_error(msg);\n     }\n@@ -1117,7 +1117,7 @@ UniValue addwitnessaddress(const JSONRPCRequest& request)\n \n     CBitcoinAddress address(request.params[0].get_str());\n     if (!address.IsValid())\n-        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid Bitcoin address\");\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid Blockcash address\");\n \n     Witnessifier w;\n     CTxDestination dest = address.Get();\n@@ -1462,7 +1462,7 @@ UniValue listtransactions(const JSONRPCRequest& request)\n             \"  {\\n\"\n             \"    \\\"account\\\":\\\"accountname\\\",       (string) DEPRECATED. The account name associated with the transaction. \\n\"\n             \"                                                It will be \\\"\\\" for the default account.\\n\"\n-            \"    \\\"address\\\":\\\"address\\\",    (string) The bitcoin address of the transaction. Not present for \\n\"\n+            \"    \\\"address\\\":\\\"address\\\",    (string) The blockcash address of the transaction. Not present for \\n\"\n             \"                                                move transactions (category = move).\\n\"\n             \"    \\\"category\\\":\\\"send|receive|move\\\", (string) The transaction category. 'move' is a local (off blockchain)\\n\"\n             \"                                                transaction between accounts, and not associated with an address,\\n\"\n@@ -1692,8 +1692,8 @@ UniValue listsinceblock(const JSONRPCRequest& request)\n             \"}\\n\"\n             \"\\nExamples:\\n\"\n             + HelpExampleCli(\"listsinceblock\", \"\")\n-            + HelpExampleCli(\"listsinceblock\", \"\\\"000000000000000bacf66f7497b7dc45ef753ee9a7d38571037cdb1a57f663ad\\\" 6\")\n-            + HelpExampleRpc(\"listsinceblock\", \"\\\"000000000000000bacf66f7497b7dc45ef753ee9a7d38571037cdb1a57f663ad\\\", 6\")\n+            + HelpExampleCli(\"listsinceblock\", \"\\\"0\\\" 6\")\n+            + HelpExampleRpc(\"listsinceblock\", \"\\\"0\\\", 6\")\n         );\n \n     LOCK2(cs_main, pwalletMain->cs_wallet);\n@@ -1785,7 +1785,7 @@ UniValue gettransaction(const JSONRPCRequest& request)\n             \"  \\\"details\\\" : [\\n\"\n             \"    {\\n\"\n             \"      \\\"account\\\" : \\\"accountname\\\",      (string) DEPRECATED. The account name involved in the transaction, can be \\\"\\\" for the default account.\\n\"\n-            \"      \\\"address\\\" : \\\"address\\\",          (string) The bitcoin address involved in the transaction\\n\"\n+            \"      \\\"address\\\" : \\\"address\\\",          (string) The blockcash address involved in the transaction\\n\"\n             \"      \\\"category\\\" : \\\"send|receive\\\",    (string) The category, either 'send' or 'receive'\\n\"\n             \"      \\\"amount\\\" : x.xxx,                 (numeric) The amount in \" + CURRENCY_UNIT + \"\\n\"\n             \"      \\\"label\\\" : \\\"label\\\",              (string) A comment for the address/transaction, if any\\n\"\n@@ -1801,9 +1801,9 @@ UniValue gettransaction(const JSONRPCRequest& request)\n             \"}\\n\"\n \n             \"\\nExamples:\\n\"\n-            + HelpExampleCli(\"gettransaction\", \"\\\"1075db55d416d3ca199f55b6084e2115b9345e16c5cf302fc80e9d5fbf5d48d\\\"\")\n-            + HelpExampleCli(\"gettransaction\", \"\\\"1075db55d416d3ca199f55b6084e2115b9345e16c5cf302fc80e9d5fbf5d48d\\\" true\")\n-            + HelpExampleRpc(\"gettransaction\", \"\\\"1075db55d416d3ca199f55b6084e2115b9345e16c5cf302fc80e9d5fbf5d48d\\\"\")\n+            + HelpExampleCli(\"gettransaction\", \"\\\"0\\\"\")\n+            + HelpExampleCli(\"gettransaction\", \"\\\"0\\\" true\")\n+            + HelpExampleRpc(\"gettransaction\", \"\\\"0\\\"\")\n         );\n \n     LOCK2(cs_main, pwalletMain->cs_wallet);\n@@ -1859,8 +1859,8 @@ UniValue abandontransaction(const JSONRPCRequest& request)\n             \"1. \\\"txid\\\"    (string, required) The transaction id\\n\"\n             \"\\nResult:\\n\"\n             \"\\nExamples:\\n\"\n-            + HelpExampleCli(\"abandontransaction\", \"\\\"1075db55d416d3ca199f55b6084e2115b9345e16c5cf302fc80e9d5fbf5d48d\\\"\")\n-            + HelpExampleRpc(\"abandontransaction\", \"\\\"1075db55d416d3ca199f55b6084e2115b9345e16c5cf302fc80e9d5fbf5d48d\\\"\")\n+            + HelpExampleCli(\"abandontransaction\", \"\\\"0\\\"\")\n+            + HelpExampleRpc(\"abandontransaction\", \"\\\"0\\\"\")\n         );\n \n     LOCK2(cs_main, pwalletMain->cs_wallet);\n@@ -1956,7 +1956,7 @@ UniValue walletpassphrase(const JSONRPCRequest& request)\n         throw runtime_error(\n             \"walletpassphrase \\\"passphrase\\\" timeout\\n\"\n             \"\\nStores the wallet decryption key in memory for 'timeout' seconds.\\n\"\n-            \"This is needed prior to performing transactions related to private keys such as sending bitcoins\\n\"\n+            \"This is needed prior to performing transactions related to private keys such as sending blockcashs\\n\"\n             \"\\nArguments:\\n\"\n             \"1. \\\"passphrase\\\"     (string, required) The wallet passphrase\\n\"\n             \"2. timeout            (numeric, required) The time to keep the decryption key in seconds.\\n\"\n@@ -2068,7 +2068,7 @@ UniValue walletlock(const JSONRPCRequest& request)\n             \"\\nSet the passphrase for 2 minutes to perform a transaction\\n\"\n             + HelpExampleCli(\"walletpassphrase\", \"\\\"my pass phrase\\\" 120\") +\n             \"\\nPerform a send (requires passphrase set)\\n\"\n-            + HelpExampleCli(\"sendtoaddress\", \"\\\"1M72Sfpbz1BPpXFHz9m3CdqATR44Jvaydd\\\" 1.0\") +\n+            + HelpExampleCli(\"sendtoaddress\", \"\\\"0\\\" 1.0\") +\n             \"\\nClear the passphrase since we are done before 2 minutes is up\\n\"\n             + HelpExampleCli(\"walletlock\", \"\") +\n             \"\\nAs json rpc call\\n\"\n@@ -2111,7 +2111,7 @@ UniValue encryptwallet(const JSONRPCRequest& request)\n             \"\\nExamples:\\n\"\n             \"\\nEncrypt you wallet\\n\"\n             + HelpExampleCli(\"encryptwallet\", \"\\\"my pass phrase\\\"\") +\n-            \"\\nNow set the passphrase to use the wallet, such as for signing or sending bitcoin\\n\"\n+            \"\\nNow set the passphrase to use the wallet, such as for signing or sending blockcash\\n\"\n             + HelpExampleCli(\"walletpassphrase\", \"\\\"my pass phrase\\\"\") +\n             \"\\nNow we can so something like sign\\n\"\n             + HelpExampleCli(\"signmessage\", \"\\\"address\\\" \\\"test message\\\"\") +\n@@ -2146,7 +2146,7 @@ UniValue encryptwallet(const JSONRPCRequest& request)\n     // slack space in .dat files; that is bad if the old data is\n     // unencrypted private keys. So:\n     StartShutdown();\n-    return \"wallet encrypted; Bitcoin server stopping, restart to run with encrypted wallet. The keypool has been flushed and a new HD seed was generated (if you are using HD). You need to make a new backup.\";\n+    return \"wallet encrypted; Blockcash server stopping, restart to run with encrypted wallet. The keypool has been flushed and a new HD seed was generated (if you are using HD). You need to make a new backup.\";\n }\n \n UniValue lockunspent(const JSONRPCRequest& request)\n@@ -2160,7 +2160,7 @@ UniValue lockunspent(const JSONRPCRequest& request)\n             \"\\nUpdates list of temporarily unspendable outputs.\\n\"\n             \"Temporarily lock (unlock=false) or unlock (unlock=true) specified transaction outputs.\\n\"\n             \"If no transaction outputs are specified when unlocking then all current locked transaction outputs are unlocked.\\n\"\n-            \"A locked transaction output will not be chosen by automatic coin selection, when spending bitcoins.\\n\"\n+            \"A locked transaction output will not be chosen by automatic coin selection, when spending blockcash.\\n\"\n             \"Locks are stored in memory only. Nodes start with zero locked outputs, and the locked output list\\n\"\n             \"is always cleared (by virtue of process exit) when a node stops or fails.\\n\"\n             \"Also see the listunspent call\\n\"\n@@ -2182,13 +2182,13 @@ UniValue lockunspent(const JSONRPCRequest& request)\n             \"\\nList the unspent transactions\\n\"\n             + HelpExampleCli(\"listunspent\", \"\") +\n             \"\\nLock an unspent transaction\\n\"\n-            + HelpExampleCli(\"lockunspent\", \"false \\\"[{\\\\\\\"txid\\\\\\\":\\\\\\\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\\\\\\\",\\\\\\\"vout\\\\\\\":1}]\\\"\") +\n+            + HelpExampleCli(\"lockunspent\", \"false \\\"[{\\\\\\\"txid\\\\\\\":\\\\\\\"0\\\\\\\",\\\\\\\"vout\\\\\\\":1}]\\\"\") +\n             \"\\nList the locked transactions\\n\"\n             + HelpExampleCli(\"listlockunspent\", \"\") +\n             \"\\nUnlock the transaction again\\n\"\n-            + HelpExampleCli(\"lockunspent\", \"true \\\"[{\\\\\\\"txid\\\\\\\":\\\\\\\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\\\\\\\",\\\\\\\"vout\\\\\\\":1}]\\\"\") +\n+            + HelpExampleCli(\"lockunspent\", \"true \\\"[{\\\\\\\"txid\\\\\\\":\\\\\\\"0\\\\\\\",\\\\\\\"vout\\\\\\\":1}]\\\"\") +\n             \"\\nAs a json rpc call\\n\"\n-            + HelpExampleRpc(\"lockunspent\", \"false, \\\"[{\\\\\\\"txid\\\\\\\":\\\\\\\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\\\\\\\",\\\\\\\"vout\\\\\\\":1}]\\\"\")\n+            + HelpExampleRpc(\"lockunspent\", \"false, \\\"[{\\\\\\\"txid\\\\\\\":\\\\\\\"0\\\\\\\",\\\\\\\"vout\\\\\\\":1}]\\\"\")\n         );\n \n     LOCK2(cs_main, pwalletMain->cs_wallet);\n@@ -2260,11 +2260,11 @@ UniValue listlockunspent(const JSONRPCRequest& request)\n             \"\\nList the unspent transactions\\n\"\n             + HelpExampleCli(\"listunspent\", \"\") +\n             \"\\nLock an unspent transaction\\n\"\n-            + HelpExampleCli(\"lockunspent\", \"false \\\"[{\\\\\\\"txid\\\\\\\":\\\\\\\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\\\\\\\",\\\\\\\"vout\\\\\\\":1}]\\\"\") +\n+            + HelpExampleCli(\"lockunspent\", \"false \\\"[{\\\\\\\"txid\\\\\\\":\\\\\\\"0\\\\\\\",\\\\\\\"vout\\\\\\\":1}]\\\"\") +\n             \"\\nList the locked transactions\\n\"\n             + HelpExampleCli(\"listlockunspent\", \"\") +\n             \"\\nUnlock the transaction again\\n\"\n-            + HelpExampleCli(\"lockunspent\", \"true \\\"[{\\\\\\\"txid\\\\\\\":\\\\\\\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\\\\\\\",\\\\\\\"vout\\\\\\\":1}]\\\"\") +\n+            + HelpExampleCli(\"lockunspent\", \"true \\\"[{\\\\\\\"txid\\\\\\\":\\\\\\\"0\\\\\\\",\\\\\\\"vout\\\\\\\":1}]\\\"\") +\n             \"\\nAs a json rpc call\\n\"\n             + HelpExampleRpc(\"listlockunspent\", \"\")\n         );\n@@ -2416,7 +2416,7 @@ UniValue listunspent(const JSONRPCRequest& request)\n             \"  {\\n\"\n             \"    \\\"txid\\\" : \\\"txid\\\",          (string) the transaction id \\n\"\n             \"    \\\"vout\\\" : n,               (numeric) the vout value\\n\"\n-            \"    \\\"address\\\" : \\\"address\\\",    (string) the bitcoin address\\n\"\n+            \"    \\\"address\\\" : \\\"address\\\",    (string) the blockcash address\\n\"\n             \"    \\\"account\\\" : \\\"account\\\",    (string) DEPRECATED. The associated account, or \\\"\\\" for the default account\\n\"\n             \"    \\\"scriptPubKey\\\" : \\\"key\\\",   (string) the script key\\n\"\n             \"    \\\"amount\\\" : x.xxx,         (numeric) the transaction output amount in \" + CURRENCY_UNIT + \"\\n\"\n@@ -2430,8 +2430,8 @@ UniValue listunspent(const JSONRPCRequest& request)\n \n             \"\\nExamples\\n\"\n             + HelpExampleCli(\"listunspent\", \"\")\n-            + HelpExampleCli(\"listunspent\", \"6 9999999 \\\"[\\\\\\\"1PGFqEzfmQch1gKD3ra4k18PNj3tTUUSqg\\\\\\\",\\\\\\\"1LtvqCaApEdUGFkpKMM4MstjcaL4dKg8SP\\\\\\\"]\\\"\")\n-            + HelpExampleRpc(\"listunspent\", \"6, 9999999 \\\"[\\\\\\\"1PGFqEzfmQch1gKD3ra4k18PNj3tTUUSqg\\\\\\\",\\\\\\\"1LtvqCaApEdUGFkpKMM4MstjcaL4dKg8SP\\\\\\\"]\\\"\")\n+            + HelpExampleCli(\"listunspent\", \"6 9999999 \\\"[\\\\\\\"0\\\\\\\",\\\\\\\"0\\\\\\\"]\\\"\")\n+            + HelpExampleRpc(\"listunspent\", \"6, 9999999 \\\"[\\\\\\\"0\\\\\\\",\\\\\\\"0\\\\\\\"]\\\"\")\n         );\n \n     int nMinDepth = 1;\n@@ -2454,7 +2454,7 @@ UniValue listunspent(const JSONRPCRequest& request)\n             const UniValue& input = inputs[idx];\n             CBitcoinAddress address(input.get_str());\n             if (!address.IsValid())\n-                throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, string(\"Invalid Bitcoin address: \")+input.get_str());\n+                throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, string(\"Invalid blockcash address: \")+input.get_str());\n             if (setAddress.count(address))\n                 throw JSONRPCError(RPC_INVALID_PARAMETER, string(\"Invalid parameter, duplicated address: \")+input.get_str());\n            setAddress.insert(address);\n@@ -2534,7 +2534,7 @@ UniValue fundrawtransaction(const JSONRPCRequest& request)\n                             \"1. \\\"hexstring\\\"           (string, required) The hex string of the raw transaction\\n\"\n                             \"2. options                 (object, optional)\\n\"\n                             \"   {\\n\"\n-                            \"     \\\"changeAddress\\\"          (string, optional, default pool address) The bitcoin address to receive the change\\n\"\n+                            \"     \\\"changeAddress\\\"          (string, optional, default pool address) The blockcash address to receive the change\\n\"\n                             \"     \\\"changePosition\\\"         (numeric, optional, default random) The index of the change output\\n\"\n                             \"     \\\"includeWatching\\\"        (boolean, optional, default false) Also select inputs which are watch only\\n\"\n                             \"     \\\"lockUnspents\\\"           (boolean, optional, default false) Lock selected unspent outputs\\n\"\n@@ -2543,7 +2543,7 @@ UniValue fundrawtransaction(const JSONRPCRequest& request)\n                             \"     \\\"subtractFeeFromOutputs\\\" (array, optional) A json array of integers.\\n\"\n                             \"                              The fee will be equally deducted from the amount of each specified output.\\n\"\n                             \"                              The outputs are specified by their zero-based index, before any change output is added.\\n\"\n-                            \"                              Those recipients will receive less bitcoins than you enter in their corresponding amount field.\\n\"\n+                            \"                              Those recipients will receive less blockcashs than you enter in their corresponding amount field.\\n\"\n                             \"                              If no outputs are specified here, the sender pays the fee.\\n\"\n                             \"                                  [vout_index,...]\\n\"\n                             \"   }\\n\"\n@@ -2603,7 +2603,7 @@ UniValue fundrawtransaction(const JSONRPCRequest& request)\n             CBitcoinAddress address(options[\"changeAddress\"].get_str());\n \n             if (!address.IsValid())\n-                throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"changeAddress must be a valid bitcoin address\");\n+                throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"changeAddress must be a valid blockcash address\");\n \n             changeAddress = address.Get();\n         }"
      }
    ]
  }
]