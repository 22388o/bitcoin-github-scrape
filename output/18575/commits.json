[
  {
    "sha": "fab117096446ab63d1f38c1ef6edbc94a5d4ab52",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWIxMTcwOTY0NDZhYjYzZDFmMzhjMWVmNmVkYmM5NGE1ZDRhYjUy",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-04-09T15:47:32Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-04-17T14:19:32Z"
      },
      "message": "bench: Remove requirement that all benches use RegTestingSetup",
      "tree": {
        "sha": "4a3e6d3eabb3c6990751f5a9b9f0100a6e27d1ee",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4a3e6d3eabb3c6990751f5a9b9f0100a6e27d1ee"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fab117096446ab63d1f38c1ef6edbc94a5d4ab52",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUjZJAwAp+aLL410Nxk9RjJyoHazD42jlFjN6ap2FdBD4B6WR5aiHHys30PGZsjj\nPKKGsMjf6HL/tlx4DF9ivan/kSqdTXeDrKkp08TbHJlwBLqVxD2iUz792jE8RqZG\nXJvLgctGWTAPma++lHAZfPk95piWfGvl+KX0bSNjfmf6A/GNvcW1EiZqB8JbmqfJ\nsSuhHjL00wWG1HdSn/lxRdekoC9TVLiPD/9HGUmbxXGQGkbNcEmTLhOMjjob31UF\nC+uDeNoVNp07UHVo21iYoqkAEHfmA2eQf/oyvIqe4mhrtfCYLk9EypWJ4WS21VKA\nEK/BBlecQn76yNGz1cYoOOmbEqdnCgYdhfpoWV5WUqNPt9LPLIWwjedHJssOWv1n\nbfwWZLTGRt4qUAxuBZMNqZvWL4iqnbfBJ3jMVYUyxL8p13ZOkXyLLP8SSQJO407p\nRyeWRQL3uvfN6pv5KDWwfUYjorshuA9moroc+wkq211RmzuIA7+Puccxewwgd+LC\nDKLS+9a9\n=POYy\n-----END PGP SIGNATURE-----",
        "payload": "tree 4a3e6d3eabb3c6990751f5a9b9f0100a6e27d1ee\nparent 54f812d9d29893c690ae06b84aaeab128186aa36\nauthor MarcoFalke <falke.marco@gmail.com> 1586447252 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1587133172 -0400\n\nbench: Remove requirement that all benches use RegTestingSetup\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fab117096446ab63d1f38c1ef6edbc94a5d4ab52",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fab117096446ab63d1f38c1ef6edbc94a5d4ab52",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fab117096446ab63d1f38c1ef6edbc94a5d4ab52/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "54f812d9d29893c690ae06b84aaeab128186aa36",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/54f812d9d29893c690ae06b84aaeab128186aa36",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/54f812d9d29893c690ae06b84aaeab128186aa36"
      }
    ],
    "stats": {
      "total": 48,
      "additions": 28,
      "deletions": 20
    },
    "files": [
      {
        "sha": "7b93ef688d88deb44924d2c5a81881ea2e9dc3ea",
        "filename": "src/bench/bench.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 13,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fab117096446ab63d1f38c1ef6edbc94a5d4ab52/src/bench/bench.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fab117096446ab63d1f38c1ef6edbc94a5d4ab52/src/bench/bench.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/bench.cpp?ref=fab117096446ab63d1f38c1ef6edbc94a5d4ab52",
        "patch": "@@ -15,7 +15,6 @@\n #include <numeric>\n #include <regex>\n \n-const RegTestingSetup* g_testing_setup = nullptr;\n const std::function<void(const std::string&)> G_TEST_LOG_FUN{};\n \n void benchmark::ConsolePrinter::header()\n@@ -115,18 +114,7 @@ void benchmark::BenchRunner::RunAll(Printer& printer, uint64_t num_evals, double\n     printer.header();\n \n     for (const auto& p : benchmarks()) {\n-        RegTestingSetup test{};\n-        assert(g_testing_setup == nullptr);\n-        g_testing_setup = &test;\n-        {\n-            LOCK(cs_main);\n-            assert(::ChainActive().Height() == 0);\n-            const bool witness_enabled{IsWitnessEnabled(::ChainActive().Tip(), Params().GetConsensus())};\n-            assert(witness_enabled);\n-        }\n-\n         if (!std::regex_match(p.first, baseMatch, reFilter)) {\n-             g_testing_setup = nullptr;\n             continue;\n         }\n \n@@ -139,7 +127,6 @@ void benchmark::BenchRunner::RunAll(Printer& printer, uint64_t num_evals, double\n             p.second.func(state);\n         }\n         printer.result(state);\n-        g_testing_setup = nullptr;\n     }\n \n     printer.footer();"
      },
      {
        "sha": "629bca9a73d0d506644a8cab4d03b4ea71082078",
        "filename": "src/bench/bench.h",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fab117096446ab63d1f38c1ef6edbc94a5d4ab52/src/bench/bench.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fab117096446ab63d1f38c1ef6edbc94a5d4ab52/src/bench/bench.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/bench.h?ref=fab117096446ab63d1f38c1ef6edbc94a5d4ab52",
        "patch": "@@ -14,9 +14,6 @@\n #include <boost/preprocessor/cat.hpp>\n #include <boost/preprocessor/stringize.hpp>\n \n-struct RegTestingSetup;\n-extern const RegTestingSetup* g_testing_setup; //!< A pointer to the current testing setup\n-\n // Simple micro-benchmarking framework; API mostly matches a subset of the Google Benchmark\n // framework (see https://github.com/google/benchmark)\n // Why not use the Google Benchmark framework? Because adding Yet Another Dependency"
      },
      {
        "sha": "594ca4967d56450e1c898083980e1f375ac6b936",
        "filename": "src/bench/block_assemble.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fab117096446ab63d1f38c1ef6edbc94a5d4ab52/src/bench/block_assemble.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fab117096446ab63d1f38c1ef6edbc94a5d4ab52/src/bench/block_assemble.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/block_assemble.cpp?ref=fab117096446ab63d1f38c1ef6edbc94a5d4ab52",
        "patch": "@@ -16,6 +16,7 @@\n \n static void AssembleBlock(benchmark::State& state)\n {\n+    RegTestingSetup test_setup;\n     const std::vector<unsigned char> op_true{OP_TRUE};\n     CScriptWitness witness;\n     witness.stack.push_back(op_true);\n@@ -30,7 +31,7 @@ static void AssembleBlock(benchmark::State& state)\n     std::array<CTransactionRef, NUM_BLOCKS - COINBASE_MATURITY + 1> txs;\n     for (size_t b{0}; b < NUM_BLOCKS; ++b) {\n         CMutableTransaction tx;\n-        tx.vin.push_back(MineBlock(g_testing_setup->m_node, SCRIPT_PUB));\n+        tx.vin.push_back(MineBlock(test_setup.m_node, SCRIPT_PUB));\n         tx.vin.back().scriptWitness = witness;\n         tx.vout.emplace_back(1337, SCRIPT_PUB);\n         if (NUM_BLOCKS - b >= COINBASE_MATURITY)\n@@ -47,7 +48,7 @@ static void AssembleBlock(benchmark::State& state)\n     }\n \n     while (state.KeepRunning()) {\n-        PrepareBlock(g_testing_setup->m_node, SCRIPT_PUB);\n+        PrepareBlock(test_setup.m_node, SCRIPT_PUB);\n     }\n }\n "
      },
      {
        "sha": "d658976c3c0cd3bb0be10463640eec9d5386dd6a",
        "filename": "src/bench/ccoins_caching.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fab117096446ab63d1f38c1ef6edbc94a5d4ab52/src/bench/ccoins_caching.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fab117096446ab63d1f38c1ef6edbc94a5d4ab52/src/bench/ccoins_caching.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/ccoins_caching.cpp?ref=fab117096446ab63d1f38c1ef6edbc94a5d4ab52",
        "patch": "@@ -18,6 +18,9 @@\n // (https://github.com/bitcoin/bitcoin/issues/7883#issuecomment-224807484)\n static void CCoinsCaching(benchmark::State& state)\n {\n+    const ECCVerifyHandle verify_handle;\n+    ECC_Start();\n+\n     FillableSigningProvider keystore;\n     CCoinsView coinsDummy;\n     CCoinsViewCache coins(&coinsDummy);\n@@ -47,6 +50,7 @@ static void CCoinsCaching(benchmark::State& state)\n         CAmount value = coins.GetValueIn(tx_1);\n         assert(value == (50 + 21 + 22) * COIN);\n     }\n+    ECC_Stop();\n }\n \n BENCHMARK(CCoinsCaching, 170 * 1000);"
      },
      {
        "sha": "e052681181dd298570e1f85facab5c9ee5eccc39",
        "filename": "src/bench/checkqueue.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fab117096446ab63d1f38c1ef6edbc94a5d4ab52/src/bench/checkqueue.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fab117096446ab63d1f38c1ef6edbc94a5d4ab52/src/bench/checkqueue.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/checkqueue.cpp?ref=fab117096446ab63d1f38c1ef6edbc94a5d4ab52",
        "patch": "@@ -4,7 +4,9 @@\n \n #include <bench/bench.h>\n #include <checkqueue.h>\n+#include <key.h>\n #include <prevector.h>\n+#include <pubkey.h>\n #include <random.h>\n #include <util/system.h>\n \n@@ -24,6 +26,9 @@ static const unsigned int QUEUE_BATCH_SIZE = 128;\n // and there is a little bit of work done between calls to Add.\n static void CCheckQueueSpeedPrevectorJob(benchmark::State& state)\n {\n+    const ECCVerifyHandle verify_handle;\n+    ECC_Start();\n+\n     struct PrevectorJob {\n         prevector<PREVECTOR_SIZE, uint8_t> p;\n         PrevectorJob(){\n@@ -59,5 +64,6 @@ static void CCheckQueueSpeedPrevectorJob(benchmark::State& state)\n     }\n     tg.interrupt_all();\n     tg.join_all();\n+    ECC_Stop();\n }\n BENCHMARK(CCheckQueueSpeedPrevectorJob, 1400);"
      },
      {
        "sha": "57673ccb84e6885b7cc6b01410f98c2f8fe9c8bd",
        "filename": "src/bench/duplicate_inputs.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fab117096446ab63d1f38c1ef6edbc94a5d4ab52/src/bench/duplicate_inputs.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fab117096446ab63d1f38c1ef6edbc94a5d4ab52/src/bench/duplicate_inputs.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/duplicate_inputs.cpp?ref=fab117096446ab63d1f38c1ef6edbc94a5d4ab52",
        "patch": "@@ -7,12 +7,15 @@\n #include <consensus/merkle.h>\n #include <consensus/validation.h>\n #include <pow.h>\n+#include <test/util/setup_common.h>\n #include <txmempool.h>\n #include <validation.h>\n \n \n static void DuplicateInputs(benchmark::State& state)\n {\n+    RegTestingSetup test_setup;\n+\n     const CScript SCRIPT_PUB{CScript(OP_TRUE)};\n \n     const CChainParams& chainparams = Params();"
      },
      {
        "sha": "7df024def696b846b818bd752b3fb6f4cc3c157f",
        "filename": "src/bench/mempool_eviction.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fab117096446ab63d1f38c1ef6edbc94a5d4ab52/src/bench/mempool_eviction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fab117096446ab63d1f38c1ef6edbc94a5d4ab52/src/bench/mempool_eviction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/mempool_eviction.cpp?ref=fab117096446ab63d1f38c1ef6edbc94a5d4ab52",
        "patch": "@@ -4,6 +4,7 @@\n \n #include <bench/bench.h>\n #include <policy/policy.h>\n+#include <test/util/setup_common.h>\n #include <txmempool.h>\n \n \n@@ -24,6 +25,8 @@ static void AddTx(const CTransactionRef& tx, const CAmount& nFee, CTxMemPool& po\n // unique transactions for a more meaningful performance measurement.\n static void MempoolEviction(benchmark::State& state)\n {\n+    RegTestingSetup test_setup;\n+\n     CMutableTransaction tx1 = CMutableTransaction();\n     tx1.vin.resize(1);\n     tx1.vin[0].scriptSig = CScript() << OP_1;"
      },
      {
        "sha": "38d8632318441f242f8305132cf94ae4a3bf4ad5",
        "filename": "src/bench/mempool_stress.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fab117096446ab63d1f38c1ef6edbc94a5d4ab52/src/bench/mempool_stress.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fab117096446ab63d1f38c1ef6edbc94a5d4ab52/src/bench/mempool_stress.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/mempool_stress.cpp?ref=fab117096446ab63d1f38c1ef6edbc94a5d4ab52",
        "patch": "@@ -4,6 +4,7 @@\n \n #include <bench/bench.h>\n #include <policy/policy.h>\n+#include <test/util/setup_common.h>\n #include <txmempool.h>\n \n #include <vector>\n@@ -73,6 +74,7 @@ static void ComplexMemPool(benchmark::State& state)\n         ordered_coins.emplace_back(MakeTransactionRef(tx));\n         available_coins.emplace_back(ordered_coins.back(), tx_counter++);\n     }\n+    TestingSetup test_setup;\n     CTxMemPool pool;\n     LOCK2(cs_main, pool.cs);\n     while (state.KeepRunning()) {"
      },
      {
        "sha": "14bca5f7d1217e64272952f1d6526b97da3f98ac",
        "filename": "src/bench/verify_script.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fab117096446ab63d1f38c1ef6edbc94a5d4ab52/src/bench/verify_script.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fab117096446ab63d1f38c1ef6edbc94a5d4ab52/src/bench/verify_script.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/verify_script.cpp?ref=fab117096446ab63d1f38c1ef6edbc94a5d4ab52",
        "patch": "@@ -18,6 +18,9 @@\n // modified to measure performance of other types of scripts.\n static void VerifyScriptBench(benchmark::State& state)\n {\n+    const ECCVerifyHandle verify_handle;\n+    ECC_Start();\n+\n     const int flags = SCRIPT_VERIFY_WITNESS | SCRIPT_VERIFY_P2SH;\n     const int witnessversion = 0;\n \n@@ -69,6 +72,7 @@ static void VerifyScriptBench(benchmark::State& state)\n         assert(csuccess == 1);\n #endif\n     }\n+    ECC_Stop();\n }\n \n static void VerifyNestedIfScript(benchmark::State& state) {"
      },
      {
        "sha": "05d61fca225f168d927fa4c7691ffd6c11e6c946",
        "filename": "src/bench/wallet_balance.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fab117096446ab63d1f38c1ef6edbc94a5d4ab52/src/bench/wallet_balance.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fab117096446ab63d1f38c1ef6edbc94a5d4ab52/src/bench/wallet_balance.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/wallet_balance.cpp?ref=fab117096446ab63d1f38c1ef6edbc94a5d4ab52",
        "patch": "@@ -14,6 +14,7 @@\n \n static void WalletBalance(benchmark::State& state, const bool set_dirty, const bool add_watchonly, const bool add_mine)\n {\n+    RegTestingSetup test_setup;\n     const auto& ADDRESS_WATCHONLY = ADDRESS_BCRT1_UNSPENDABLE;\n \n     NodeContext node;\n@@ -30,8 +31,8 @@ static void WalletBalance(benchmark::State& state, const bool set_dirty, const b\n     if (add_watchonly) importaddress(wallet, ADDRESS_WATCHONLY);\n \n     for (int i = 0; i < 100; ++i) {\n-        generatetoaddress(g_testing_setup->m_node, address_mine.get_value_or(ADDRESS_WATCHONLY));\n-        generatetoaddress(g_testing_setup->m_node, ADDRESS_WATCHONLY);\n+        generatetoaddress(test_setup.m_node, address_mine.get_value_or(ADDRESS_WATCHONLY));\n+        generatetoaddress(test_setup.m_node, ADDRESS_WATCHONLY);\n     }\n     SyncWithValidationInterfaceQueue();\n "
      }
    ]
  },
  {
    "sha": "fa1fdb02fccd0f670f7b08ee61c249f04d0db17f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTFmZGIwMmZjY2QwZjY3MGY3YjA4ZWU2MWMyNDlmMDRkMGRiMTdm",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-04-11T14:35:31Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-04-17T14:20:54Z"
      },
      "message": "bench: Replace ::mempool globabl with test_setup.mempool\n\nThis is a refactor, since they are aliases for each other",
      "tree": {
        "sha": "0f8504551268bcd5713ab956f1f9e21a80f2b16c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0f8504551268bcd5713ab956f1f9e21a80f2b16c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa1fdb02fccd0f670f7b08ee61c249f04d0db17f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUjY/AwAtoi47/tkgDSbRUG7VOF1CTl8WAHYBkOy0t4TJtxyqbOvLTAyzmHt+Wwj\nbq+8x36HpR3I6TDdd8W+nCnrBlTwNIsENab9/PeTYdswPVXgp7NPHlqXpOFcYqpm\nvBFEsIjUSH+Z7vt91kiTvHbT+zNRQp3n48k1g3Brk2IXFqh2gJdbOBL6vacQE34L\nnrvubVZI542hN7XmyCAGgL7CJTP+Z57MzTAwoQbMdcWrO7GrZZ1/z25V30OZoKEf\ngodyXisVFt5btK5E13bC47o/cLoRaT5ONSYbes9duiqZtl0TMd1CkqcPyThCwe+Y\nTWpJGfw4eMis16IbtObjQ3rNs+7xN5oQ8CPrayM3QKGoglbbDTIJxSF9vmzRr6RY\nqCYIyMKW0USaQMFJiIxpZYcsbik4i3A0uFY9k37Gqvn1X77LVxDrXTub4nqzMWdu\nJKAoHvMBfiWPOIKOIOfVueHDHYifmBDyl2fBNscOH+Vw7G9MzaGUybZOpcd4lKac\nuH+jzu3I\n=HnUN\n-----END PGP SIGNATURE-----",
        "payload": "tree 0f8504551268bcd5713ab956f1f9e21a80f2b16c\nparent fab117096446ab63d1f38c1ef6edbc94a5d4ab52\nauthor MarcoFalke <falke.marco@gmail.com> 1586615731 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1587133254 -0400\n\nbench: Replace ::mempool globabl with test_setup.mempool\n\nThis is a refactor, since they are aliases for each other\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa1fdb02fccd0f670f7b08ee61c249f04d0db17f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa1fdb02fccd0f670f7b08ee61c249f04d0db17f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa1fdb02fccd0f670f7b08ee61c249f04d0db17f/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fab117096446ab63d1f38c1ef6edbc94a5d4ab52",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fab117096446ab63d1f38c1ef6edbc94a5d4ab52",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fab117096446ab63d1f38c1ef6edbc94a5d4ab52"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "1a0084c9150219602f9ec110c3161a9551e7b445",
        "filename": "src/bench/block_assemble.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa1fdb02fccd0f670f7b08ee61c249f04d0db17f/src/bench/block_assemble.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa1fdb02fccd0f670f7b08ee61c249f04d0db17f/src/bench/block_assemble.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/block_assemble.cpp?ref=fa1fdb02fccd0f670f7b08ee61c249f04d0db17f",
        "patch": "@@ -42,7 +42,7 @@ static void AssembleBlock(benchmark::State& state)\n \n         for (const auto& txr : txs) {\n             TxValidationState state;\n-            bool ret{::AcceptToMemoryPool(::mempool, state, txr, nullptr /* plTxnReplaced */, false /* bypass_limits */, /* nAbsurdFee */ 0)};\n+            bool ret{::AcceptToMemoryPool(*test_setup.m_node.mempool, state, txr, nullptr /* plTxnReplaced */, false /* bypass_limits */, /* nAbsurdFee */ 0)};\n             assert(ret);\n         }\n     }"
      }
    ]
  }
]