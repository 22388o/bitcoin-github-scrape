jnewbery,2019-04-09T20:18:39Z,"~Builds on #15638. Only the last commit is for this PR.~\n\nEDIT: base PR is merged. I've rebased on master.",https://github.com/bitcoin/bitcoin/pull/15778#issuecomment-481418734,481418734,
MarcoFalke,2019-04-09T20:26:41Z,"This only requires d38cfdf of the other pull request. The other pull request has a lot of conflicts and might need a long time for review to get in, so I'd prefer if you just cherry-picked that commit and your maxtxfee changes here. Review can then happen here instead of the larger pull request. No strong opinion, though.",https://github.com/bitcoin/bitcoin/pull/15778#issuecomment-481421664,481421664,
jnewbery,2019-04-09T20:49:21Z,"Thanks for looking at this @MarcoFalke . I'm in no rush for this to get merged, and would much prefer to see progress on #15638, so I'm going to try to avoid causing rebases for Russ.\n\n(incidentally, 15638 is a very easy review. It's almost entirely move-only and all the commits are well commented, so in theory at least it should be possible to review/merge quite quickly).",https://github.com/bitcoin/bitcoin/pull/15778#issuecomment-481429997,481429997,
DrahtBot,2019-04-09T22:25:33Z,<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase,https://github.com/bitcoin/bitcoin/pull/15778#issuecomment-481463022,481463022,
jnewbery,2019-04-10T13:23:31Z,This now requires rebase. I plan not to do that until #15638 is merged. Review is still welcomed for the last commit (although ACKs will need to be refreshed after rebase).,https://github.com/bitcoin/bitcoin/pull/15778#issuecomment-481688873,481688873,
jnewbery,2019-04-10T13:59:54Z,Rebased on master. This is ready for review.,https://github.com/bitcoin/bitcoin/pull/15778#issuecomment-481703032,481703032,
MarcoFalke,2019-04-10T14:48:05Z,Many tests fail. Do they pass locally in valgrind?,https://github.com/bitcoin/bitcoin/pull/15778#issuecomment-481722393,481722393,
DrahtBot,2019-04-10T15:06:17Z,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#15870](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15870.html) (wallet: Only fail rescan when blocks have a",https://github.com/bitcoin/bitcoin/pull/15778#issuecomment-481730132,481730132,
jnewbery,2019-04-10T18:30:24Z,"> Many tests fail.\n\nYou're right. Investigating now.\n\nEDIT: I wasn't initializing `g_max_tx_fee` properly. Should be fixed now.",https://github.com/bitcoin/bitcoin/pull/15778#issuecomment-481809211,481809211,
jnewbery,2019-04-11T15:53:58Z,Moved the max tx fee option to be a per-wallet setting. This required adding a `max_tx_fee` parameter to `CWalletTx::AcceptToMemoryPool()` and `CWalletTx::RelayTransaction()` which is ugly. I hope we can remove clean those up in a future PR.,https://github.com/bitcoin/bitcoin/pull/15778#issuecomment-482172982,482172982,
ryanofsky,2019-04-11T16:40:12Z,"> This required adding a max_tx_fee parameter to CWalletTx::AcceptToMemoryPool() and CWalletTx::RelayTransaction() which is ugly\n\nI think you could use the CWalletTx::pwallet pointer to avoid this.\n",https://github.com/bitcoin/bitcoin/pull/15778#issuecomment-482191565,482191565,
jnewbery,2019-04-11T16:41:36Z,"> I think you could use the CWalletTx::pwallet pointer to avoid this.\n\nYou're right. Thanks. ~Will fix.~ EDIT: Fixed.",https://github.com/bitcoin/bitcoin/pull/15778#issuecomment-482192361,482192361,
MarcoFalke,2019-04-18T15:34:42Z,"For unknown reasons GitHub delivers a corrupt branch when fetching this pull request. This leads to erroneous conflict calculations in DrahtBot, and the ci systems unable to run.\n\n8c3e6f9cb2 is delivered, whereas this pull request was force pushed in the meantime.",https://github.com/bitcoin/bitcoin/pull/15778#issuecomment-484563935,484563935,
MarcoFalke,2019-04-27T13:28:37Z,"utACK 5c759c73b2602c7fde1c50dbafe5525904c1b64c\n\n<details><summary>Show signature</summary>\n\n```\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\nutACK 5c759c73b2602c7fde1c50dbafe5525904c1b64c\n-----BEGIN PGP SIGNATURE-----\n\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUgH2Qv+Kd6E9UhzyxVnWAqNzwS2wa1QyycdibAkaOTJbgV5+gUDpeuSyM+3MN4O\necc1rrxPKPYTvklpvh/+T",https://github.com/bitcoin/bitcoin/pull/15778#issuecomment-487286263,487286263,
MarcoFalke,2019-04-11T13:54:12Z,"```suggestion\nconstexpr CAmount DEFAULT_TRANSACTION_MAXFEE{COIN / 10};\n```\n\nCould use c++11 to assert the result fits into CAmount without truncation?",https://github.com/bitcoin/bitcoin/pull/15778#discussion_r274434714,274434714,src/wallet/wallet.h
MarcoFalke,2019-04-11T13:57:06Z,"Please no more globals :hand:  :weary: \n\nThis will just force future refactoring changes to make it a wallet member, when we allow per-wallet settings.\n\nSee `CWallet::m_min_fee`  and (wallet: Make fee settings to be non-static members #12909)  for inspiration ",https://github.com/bitcoin/bitcoin/pull/15778#discussion_r274436217,274436217,src/wallet/wallet.h
ryanofsky,2019-04-11T14:34:44Z,"Suggest moving this down below `getDefaultAddressType()` and `getDefaultChangeType()`, since these are other wallet settings the gui asks about.",https://github.com/bitcoin/bitcoin/pull/15778#discussion_r274455217,274455217,src/interfaces/wallet.cpp
ryanofsky,2019-04-11T14:45:14Z,"re: https://github.com/bitcoin/bitcoin/pull/15778#discussion_r274436217\n\n> See CWallet::m_min_fee and (wallet: Make fee settings to be non-static members #12909) for inspiration\n\nA suggestion would be to call the setting `m_default_max_tx_fee`, since similar to [`m_default_address_type`/`m_default_change_type`](https://github.com/bitcoin/bitcoin/blob/bb68abe784b9fd49bddf38105d142a31ef0f9e7",https://github.com/bitcoin/bitcoin/pull/15778#discussion_r274460758,274460758,src/wallet/wallet.h
jnewbery,2019-04-11T14:52:27Z,"Yes, I guess that makes sense and fits with what I originally wrote here: https://github.com/bitcoin/bitcoin/issues/13044. It just seems strange to me to have options which (currently) apply to all wallets stored in each individual `CWallet` (see also `fBroadcastTransactions` which is a `CWallet` member, but I don't think makes sense as a per-wallet config).\n\nI'll move `max_tx_fee` to live alo",https://github.com/bitcoin/bitcoin/pull/15778#discussion_r274464783,274464783,src/wallet/wallet.h
jnewbery,2019-04-11T15:54:14Z,fixed,https://github.com/bitcoin/bitcoin/pull/15778#discussion_r274495636,274495636,src/wallet/wallet.h
jnewbery,2019-04-11T15:54:21Z,fixed,https://github.com/bitcoin/bitcoin/pull/15778#discussion_r274495702,274495702,src/wallet/wallet.h
jnewbery,2019-04-11T16:56:43Z,done,https://github.com/bitcoin/bitcoin/pull/15778#discussion_r274523842,274523842,src/interfaces/wallet.cpp
ryanofsky,2019-04-17T15:05:28Z,Maybe call this getDefaultMaxTxFee for consistency. Also because I could imagine a GUI interface that allows overriding this and doesn't treat it as a hard limit.,https://github.com/bitcoin/bitcoin/pull/15778#discussion_r276289725,276289725,src/interfaces/wallet.cpp
ryanofsky,2019-04-17T15:10:47Z,"I think tweaking this error message is the only change in behavior in the pr. Might be good to note in the commit message that the commit doesn't change behavior except for this.\n\nAlso I might suggest writing -maxtxfee instead of maxtxfee to suggest that this is referring to an argument/config setting. It could help someone find the relevant manpage / help documentation.",https://github.com/bitcoin/bitcoin/pull/15778#discussion_r276292471,276292471,src/wallet/feebumper.cpp
ryanofsky,2019-04-17T15:19:45Z,This is another change in behavior that might be worth noting in the commit message or release notes: that specifiying -maxtxfee will now result in an error in non-wallet builds.,https://github.com/bitcoin/bitcoin/pull/15778#discussion_r276297030,276297030,src/init.cpp
ryanofsky,2019-04-17T15:29:58Z,"I can see how it makes sense to disable this particular warning about the `-minrelaytxfee` setting in non-wallet builds even though it is not a wallet setting, because the warning message is about wallet behavior.\n\nBut would it make sense to to keep some warning about really high -minrelaytxfee settings even in non-wallet builds?",https://github.com/bitcoin/bitcoin/pull/15778#discussion_r276302042,276302042,src/wallet/init.cpp
jnewbery,2019-04-18T15:30:49Z,"I don't think this is true. Doesn't defining `-maxtxfee` in dummywallet.cpp ensure that there's no error?\n\nI can change this so there *is* an error, which would effectively alert users that the `-maxtxfee` setting is not used in non-wallet builds.",https://github.com/bitcoin/bitcoin/pull/15778#discussion_r276716959,276716959,src/init.cpp
jnewbery,2019-04-18T15:45:13Z,"The warning was added as a wallet warning in #8486.\n\nThis PR is meant to be a pure refactor (except for the updated log message) so I'm not going to add the suggested new warning for a high `-minrelaytxfee` to the node, but agree that it could make sense to add it in a separate PR. I'd also suggest that in a follow-up PR we change this warning to only trigger if `-minrelayfee` is greater than ",https://github.com/bitcoin/bitcoin/pull/15778#discussion_r276723094,276723094,src/wallet/init.cpp
jnewbery,2019-04-18T15:46:08Z,"EDIT: these warnings will now show for each wallet at startup rather than just once for the node, so that's also a minor behaviour change when starting with multiple wallets.",https://github.com/bitcoin/bitcoin/pull/15778#discussion_r276723478,276723478,src/wallet/init.cpp
jnewbery,2019-04-18T15:46:18Z,done,https://github.com/bitcoin/bitcoin/pull/15778#discussion_r276723576,276723576,src/interfaces/wallet.cpp
jnewbery,2019-04-18T15:46:29Z,updated commit log,https://github.com/bitcoin/bitcoin/pull/15778#discussion_r276723670,276723670,src/wallet/feebumper.cpp
ryanofsky,2019-04-18T15:56:31Z,"re: https://github.com/bitcoin/bitcoin/pull/15778#discussion_r276297030\n\nYou're right, I just didn't pay attention to the dummywallet change. I think it probably shouldn't be an error to specify -maxtxfee, based on the way other wallet options are handled, though I could see reasons for doing it either way.\n",https://github.com/bitcoin/bitcoin/pull/15778#discussion_r276727836,276727836,src/init.cpp
meshcollider,2019-04-27T03:45:00Z,μ-nit: bracket,https://github.com/bitcoin/bitcoin/pull/15778#discussion_r279141999,279141999,src/wallet/wallet.cpp
jnewbery,2019-04-28T15:40:23Z,Didn't catch this when moving the code from init.cpp. Sorry!,https://github.com/bitcoin/bitcoin/pull/15778#discussion_r279199987,279199987,src/wallet/wallet.cpp
