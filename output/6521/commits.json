[
  {
    "sha": "75a880390191aeaf7d2fa326f194349a891db022",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3NWE4ODAzOTAxOTFhZWFmN2QyZmEzMjZmMTk0MzQ5YTg5MWRiMDIy",
    "commit": {
      "author": {
        "name": "Casey Rodarmor",
        "email": "casey@rodarmor.com",
        "date": "2015-08-05T15:22:14Z"
      },
      "committer": {
        "name": "Casey Rodarmor",
        "email": "casey@rodarmor.com",
        "date": "2015-08-05T15:22:14Z"
      },
      "message": "Add v0.11.0 release notes",
      "tree": {
        "sha": "3e0b909b2a2360be2a99d0f391d04cf69edd079f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3e0b909b2a2360be2a99d0f391d04cf69edd079f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/75a880390191aeaf7d2fa326f194349a891db022",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/75a880390191aeaf7d2fa326f194349a891db022",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/75a880390191aeaf7d2fa326f194349a891db022",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/75a880390191aeaf7d2fa326f194349a891db022/comments",
    "author": {
      "login": "casey",
      "id": 1945,
      "node_id": "MDQ6VXNlcjE5NDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1945?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/casey",
      "html_url": "https://github.com/casey",
      "followers_url": "https://api.github.com/users/casey/followers",
      "following_url": "https://api.github.com/users/casey/following{/other_user}",
      "gists_url": "https://api.github.com/users/casey/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/casey/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/casey/subscriptions",
      "organizations_url": "https://api.github.com/users/casey/orgs",
      "repos_url": "https://api.github.com/users/casey/repos",
      "events_url": "https://api.github.com/users/casey/events{/privacy}",
      "received_events_url": "https://api.github.com/users/casey/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "casey",
      "id": 1945,
      "node_id": "MDQ6VXNlcjE5NDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1945?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/casey",
      "html_url": "https://github.com/casey",
      "followers_url": "https://api.github.com/users/casey/followers",
      "following_url": "https://api.github.com/users/casey/following{/other_user}",
      "gists_url": "https://api.github.com/users/casey/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/casey/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/casey/subscriptions",
      "organizations_url": "https://api.github.com/users/casey/orgs",
      "repos_url": "https://api.github.com/users/casey/repos",
      "events_url": "https://api.github.com/users/casey/events{/privacy}",
      "received_events_url": "https://api.github.com/users/casey/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c3848000277d5ab6b5f5faecb1d21b89374ef999",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c3848000277d5ab6b5f5faecb1d21b89374ef999",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c3848000277d5ab6b5f5faecb1d21b89374ef999"
      }
    ],
    "stats": {
      "total": 505,
      "additions": 505,
      "deletions": 0
    },
    "files": [
      {
        "sha": "28e49fb7ea64838f81a72424217e755a62e865c8",
        "filename": "doc/release-notes/release-notes-0.11.0.md",
        "status": "added",
        "additions": 505,
        "deletions": 0,
        "changes": 505,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/75a880390191aeaf7d2fa326f194349a891db022/doc/release-notes/release-notes-0.11.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/75a880390191aeaf7d2fa326f194349a891db022/doc/release-notes/release-notes-0.11.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.11.0.md?ref=75a880390191aeaf7d2fa326f194349a891db022",
        "patch": "@@ -0,0 +1,505 @@\n+Bitcoin Core version 0.11.0 is now available from:\n+\n+  <https://bitcoin.org/bin/bitcoin-core-0.11.0/>\n+\n+This is a new major version release, bringing both new features and\n+bug fixes.\n+\n+Please report bugs using the issue tracker at github:\n+\n+  <https://github.com/bitcoin/bitcoin/issues>\n+\n+Upgrading and downgrading\n+=========================\n+\n+How to Upgrade\n+--------------\n+\n+If you are running an older version, shut it down. Wait until it has completely\n+shut down (which might take a few minutes for older versions), then run the\n+installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n+bitcoind/bitcoin-qt (on Linux).\n+\n+Downgrade warning\n+------------------\n+\n+Because release 0.10.0 and later makes use of headers-first synchronization and\n+parallel block download (see further), the block files and databases are not\n+backwards-compatible with pre-0.10 versions of Bitcoin Core or other software:\n+\n+* Blocks will be stored on disk out of order (in the order they are\n+received, really), which makes it incompatible with some tools or\n+other programs. Reindexing using earlier versions will also not work\n+anymore as a result of this.\n+\n+* The block index database will now hold headers for which no block is\n+stored on disk, which earlier versions won't support.\n+\n+If you want to be able to downgrade smoothly, make a backup of your entire data\n+directory. Without this your node will need start syncing (or importing from\n+bootstrap.dat) anew afterwards. It is possible that the data from a completely\n+synchronised 0.10 node may be usable in older versions as-is, but this is not\n+supported and may break as soon as the older version attempts to reindex.\n+\n+This does not affect wallet forward or backward compatibility. There are no\n+known problems when downgrading from 0.11.x to 0.10.x.\n+\n+Important information\n+======================\n+\n+Transaction flooding\n+---------------------\n+\n+At the time of this release, the P2P network is being flooded with low-fee\n+transactions. This causes a ballooning of the mempool size.\n+\n+If this growth of the mempool causes problematic memory use on your node, it is\n+possible to change a few configuration options to work around this. The growth\n+of the mempool can be monitored with the RPC command `getmempoolinfo`.\n+\n+One is to increase the minimum transaction relay fee `minrelaytxfee`, which\n+defaults to 0.00001. This will cause transactions with fewer BTC/kB fee to be\n+rejected, and thus fewer transactions entering the mempool.\n+\n+The other is to restrict the relaying of free transactions with\n+`limitfreerelay`. This option sets the number of kB/minute at which\n+free transactions (with enough priority) will be accepted. It defaults to 15.\n+Reducing this number reduces the speed at which the mempool can grow due\n+to free transactions.\n+\n+For example, add the following to `bitcoin.conf`:\n+\n+    minrelaytxfee=0.00005 \n+    limitfreerelay=5\n+\n+More robust solutions are being worked on for a follow-up release.\n+\n+Notable changes\n+===============\n+\n+Block file pruning\n+----------------------\n+\n+This release supports running a fully validating node without maintaining a copy \n+of the raw block and undo data on disk. To recap, there are four types of data \n+related to the blockchain in the bitcoin system: the raw blocks as received over \n+the network (blk???.dat), the undo data (rev???.dat), the block index and the \n+UTXO set (both LevelDB databases). The databases are built from the raw data.\n+\n+Block pruning allows Bitcoin Core to delete the raw block and undo data once \n+it's been validated and used to build the databases. At that point, the raw data \n+is used only to relay blocks to other nodes, to handle reorganizations, to look \n+up old transactions (if -txindex is enabled or via the RPC/REST interfaces), or \n+for rescanning the wallet. The block index continues to hold the metadata about \n+all blocks in the blockchain.\n+\n+The user specifies how much space to allot for block & undo files. The minimum \n+allowed is 550MB. Note that this is in addition to whatever is required for the \n+block index and UTXO databases. The minimum was chosen so that Bitcoin Core will \n+be able to maintain at least 288 blocks on disk (two days worth of blocks at 10 \n+minutes per block). In rare instances it is possible that the amount of space \n+used will exceed the pruning target in order to keep the required last 288 \n+blocks on disk.\n+\n+Block pruning works during initial sync in the same way as during steady state, \n+by deleting block files \"as you go\" whenever disk space is allocated. Thus, if \n+the user specifies 550MB, once that level is reached the program will begin \n+deleting the oldest block and undo files, while continuing to download the \n+blockchain.\n+\n+For now, block pruning disables block relay.  In the future, nodes with block \n+pruning will at a minimum relay \"new\" blocks, meaning blocks that extend their \n+active chain. \n+\n+Block pruning is currently incompatible with running a wallet due to the fact \n+that block data is used for rescanning the wallet and importing keys or \n+addresses (which require a rescan.) However, running the wallet with block \n+pruning will be supported in the near future, subject to those limitations.\n+\n+Block pruning is also incompatible with -txindex and will automatically disable \n+it.\n+\n+Once you have pruned blocks, going back to unpruned state requires \n+re-downloading the entire blockchain. To do this, re-start the node with \n+-reindex. Note also that any problem that would cause a user to reindex (e.g., \n+disk corruption) will cause a pruned node to redownload the entire blockchain. \n+Finally, note that when a pruned node reindexes, it will delete any blk???.dat \n+and rev???.dat files in the data directory prior to restarting the download.\n+\n+To enable block pruning on the command line:\n+\n+- `-prune=N`: where N is the number of MB to allot for raw block & undo data.\n+\n+Modified RPC calls:\n+\n+- `getblockchaininfo` now includes whether we are in pruned mode or not.\n+- `getblock` will check if the block's data has been pruned and if so, return an \n+error.\n+- `getrawtransaction` will no longer be able to locate a transaction that has a \n+UTXO but where its block file has been pruned. \n+\n+Pruning is disabled by default.\n+\n+Big endian support\n+--------------------\n+\n+Experimental support for big-endian CPU architectures was added in this\n+release. All little-endian specific code was replaced with endian-neutral\n+constructs. This has been tested on at least MIPS and PPC hosts. The build\n+system will automatically detect the endianness of the target.\n+\n+Memory usage optimization\n+--------------------------\n+\n+There have been many changes in this release to reduce the default memory usage\n+of a node, among which:\n+\n+- Accurate UTXO cache size accounting (#6102); this makes the option `-dbcache`\n+  precise where this grossly underestimated memory usage before\n+- Reduce size of per-peer data structure (#6064 and others); this increases the\n+  number of connections that can be supported with the same amount of memory\n+- Reduce the number of threads (#5964, #5679); lowers the amount of (esp.\n+  virtual) memory needed\n+\n+Fee estimation changes\n+----------------------\n+\n+This release improves the algorithm used for fee estimation.  Previously, -1\n+was returned when there was insufficient data to give an estimate.  Now, -1\n+will also be returned when there is no fee or priority high enough for the\n+desired confirmation target. In those cases, it can help to ask for an estimate\n+for a higher target number of blocks. It is not uncommon for there to be no\n+fee or priority high enough to be reliably (85%) included in the next block and\n+for this reason, the default for `-txconfirmtarget=n` has changed from 1 to 2.\n+\n+Privacy: Disable wallet transaction broadcast\n+----------------------------------------------\n+\n+This release adds an option `-walletbroadcast=0` to prevent automatic\n+transaction broadcast and rebroadcast (#5951). This option allows separating\n+transaction submission from the node functionality.\n+\n+Making use of this, third-party scripts can be written to take care of\n+transaction (re)broadcast:\n+\n+- Send the transaction as normal, either through RPC or the GUI\n+- Retrieve the transaction data through RPC using `gettransaction` (NOT\n+  `getrawtransaction`). The `hex` field of the result will contain the raw\n+  hexadecimal representation of the transaction\n+- The transaction can then be broadcasted through arbitrary mechanisms\n+  supported by the script\n+\n+One such application is selective Tor usage, where the node runs on the normal\n+internet but transactions are broadcasted over Tor.\n+\n+For an example script see [bitcoin-submittx](https://github.com/laanwj/bitcoin-submittx).\n+\n+Privacy: Stream isolation for Tor\n+----------------------------------\n+\n+This release adds functionality to create a new circuit for every peer\n+connection, when the software is used with Tor. The new option,\n+`-proxyrandomize`, is on by default.\n+\n+When enabled, every outgoing connection will (potentially) go through a\n+different exit node. That significantly reduces the chance to get unlucky and\n+pick a single exit node that is either malicious, or widely banned from the P2P\n+network. This improves connection reliability as well as privacy, especially\n+for the initial connections.\n+\n+**Important note:** If a non-Tor SOCKS5 proxy is configured that supports\n+authentication, but doesn't require it, this change may cause that proxy to reject\n+connections. A user and password is sent where they weren't before. This setup\n+is exceedingly rare, but in this case `-proxyrandomize=0` can be passed to\n+disable the behavior.\n+\n+0.11.0 Change log\n+=================\n+\n+Detailed release notes follow. This overview includes changes that affect\n+behavior, not code moves, refactors and string updates. For convenience in locating\n+the code changes and accompanying discussion, both the pull request and\n+git merge commit are mentioned.\n+\n+### RPC and REST\n+- #5461 `5f7279a` signrawtransaction: validate private key\n+- #5444 `103f66b` Add /rest/headers/<count>/<hash>.<ext>\n+- #4964 `95ecc0a` Add scriptPubKey field to validateaddress RPC call\n+- #5476 `c986972` Add time offset into getpeerinfo output\n+- #5540 `84eba47` Add unconfirmed and immature balances to getwalletinfo\n+- #5599 `40e96a3` Get rid of the internal miner's hashmeter\n+- #5711 `87ecfb0` Push down RPC locks\n+- #5754 `1c4e3f9` fix getblocktemplate lock issue\n+- #5756 `5d901d8` Fix getblocktemplate_proposals test by mining one block\n+- #5548 `d48ce48` Add /rest/chaininfos\n+- #5992 `4c4f1b4` Push down RPC reqWallet flag\n+- #6036 `585b5db` Show zero value txouts in listunspent\n+- #5199 `6364408` Add RPC call `gettxoutproof` to generate and verify merkle blocks\n+- #5418 `16341cc` Report missing inputs in sendrawtransaction\n+- #5937 `40f5e8d` show script verification errors in signrawtransaction result\n+- #5420 `1fd2d39` getutxos REST command (based on Bip64)\n+- #6193 `42746b0` [REST] remove json input for getutxos, limit to query max. 15 outpoints\n+- #6226 `5901596` json: fail read_string if string contains trailing garbage\n+\n+### Configuration and command-line options\n+- #5636 `a353ad4` Add option `-allowselfsignedrootcertificate` to allow self signed root certs (for testing payment requests)\n+- #5900 `3e8a1f2` Add a consistency check `-checkblockindex` for the block chain data structures\n+- #5951 `7efc9cf` Make it possible to disable wallet transaction broadcast (using `-walletbroadcast=0`)\n+- #5911 `b6ea3bc` privacy: Stream isolation for Tor (on by default, use `-proxyrandomize=0` to disable)\n+- #5863 `c271304` Add autoprune functionality (`-prune=<size>`)\n+- #6153 `0bcf04f` Parameter interaction: disable upnp if -proxy set\n+- #6274 `4d9c7fe` Add option `-alerts` to opt out of alert system\n+\n+### Block and transaction handling\n+- #5367 `dcc1304` Do all block index writes in a batch\n+- #5253 `203632d` Check against MANDATORY flags prior to accepting to mempool\n+- #5459 `4406c3e` Reject headers that build on an invalid parent\n+- #5481 `055f3ae` Apply AreSane() checks to the fees from the network\n+- #5580 `40d65eb` Preemptively catch a few potential bugs\n+- #5349 `f55c5e9` Implement test for merkle tree malleability in CPartialMerkleTree\n+- #5564 `a89b837` clarify obscure uses of EvalScript()\n+- #5521 `8e4578a` Reject non-final txs even in testnet/regtest\n+- #5707 `6af674e` Change hardcoded character constants to descriptive named constants for db keys\n+- #5286 `fcf646c` Change the default maximum OP_RETURN size to 80 bytes\n+- #5710 `175d86e` Add more information to errors in ReadBlockFromDisk\n+- #5948 `b36f1ce` Use GetAncestor to compute new target\n+- #5959 `a0bfc69` Add additional block index consistency checks\n+- #6058 `7e0e7f8` autoprune minor post-merge improvements\n+- #5159 `2cc1372` New fee estimation code\n+- #6102 `6fb90d8` Implement accurate UTXO cache size accounting\n+- #6129 `2a82298` Bug fix for clearing fCheckForPruning\n+- #5947 `e9af4e6` Alert if it is very likely we are getting a bad chain\n+- #6203 `c00ae64` Remove P2SH coinbase flag, no longer interesting\n+- #5985 `37b4e42` Fix removing of orphan transactions\n+- #6221 `6cb70ca` Prune: Support noncontiguous block files\n+- #6256 `fce474c` Use best header chain timestamps to detect partitioning\n+- #6233 `a587606` Advance pindexLastCommonBlock for blocks in chainActive\n+\n+### P2P protocol and network code\n+- #5507 `844ace9` Prevent DOS attacks on in-flight data structures\n+- #5770 `32a8b6a` Sanitize command strings before logging them\n+- #5859 `dd4ffce` Add correct bool combiner for net signals\n+- #5876 `8e4fd0c` Add a NODE_GETUTXO service bit and document NODE_NETWORK\n+- #6028 `b9311fb` Move nLastTry from CAddress to CAddrInfo\n+- #5662 `5048465` Change download logic to allow calling getdata on inbound peers\n+- #5971 `18d2832` replace absolute sleep with conditional wait\n+- #5918 `7bf5d5e` Use equivalent PoW for non-main-chain requests\n+- #6059 `f026ab6` chainparams: use SeedSpec6's rather than CAddress's for fixed seeds\n+- #6080 `31c0bf1` Add jonasschnellis dns seeder\n+- #5976 `9f7809f` Reduce download timeouts as blocks arrive\n+- #6172 `b4bbad1` Ignore getheaders requests when not synced\n+- #5875 `304892f` Be stricter in processing unrequested blocks\n+- #6333 `41bbc85` Hardcoded seeds update June 2015\n+\n+### Validation\n+- #5143 `48e1765` Implement BIP62 rule 6\n+- #5713 `41e6e4c` Implement BIP66\n+\n+### Build system\n+- #5501 `c76c9d2` Add mips, mipsel and aarch64 to depends platforms\n+- #5334 `cf87536` libbitcoinconsensus: Add pkg-config support\n+- #5514 `ed11d53` Fix 'make distcheck'\n+- #5505 `a99ef7d` Build winshutdownmonitor.cpp on Windows only\n+- #5582 `e8a6639` Osx toolchain update\n+- #5684 `ab64022` osx: bump build sdk to 10.9\n+- #5695 `23ef5b7` depends: latest config.guess and config.sub\n+- #5509 `31dedb4` Fixes when compiling in c++11 mode\n+- #5819 `f8e68f7` release: use static libstdc++ and disable reduced exports by default\n+- #5510 `7c3fbc3` Big endian support\n+- #5149 `c7abfa5` Add script to verify all merge commits are signed\n+- #6082 `7abbb7e` qt: disable qt tests when one of the checks for the gui fails\n+- #6244 `0401aa2` configure: Detect (and reject) LibreSSL\n+- #6269 `95aca44` gitian: Use the new bitcoin-detached-sigs git repo for OSX signatures\n+- #6285 `ef1d506` Fix scheduler build with some boost versions.\n+- #6280 `25c2216` depends: fix Boost 1.55 build on GCC 5\n+- #6303 `b711599` gitian: add a gitian-win-signer descriptor\n+- #6246 `8ea6d37` Fix build on FreeBSD\n+- #6282 `daf956b` fix crash on shutdown when e.g. changing -txindex and abort action\n+- #6354 `bdf0d94` Gitian windows signing normalization\n+\n+### Wallet\n+- #2340 `811c71d` Discourage fee sniping with nLockTime\n+- #5485 `d01bcc4` Enforce minRelayTxFee on wallet created tx and add a maxtxfee option\n+- #5508 `9a5cabf` Add RandAddSeedPerfmon to MakeNewKey\n+- #4805 `8204e19` Do not flush the wallet in AddToWalletIfInvolvingMe(..)\n+- #5319 `93b7544` Clean up wallet encryption code\n+- #5831 `df5c246` Subtract fee from amount\n+- #6076 `6c97fd1` wallet: fix boost::get usage with boost 1.58\n+- #5511 `23c998d` Sort pending wallet transactions before reaccepting\n+- #6126 `26e08a1` Change default nTxConfirmTarget to 2\n+- #6183 `75a4d51` Fix off-by-one error w/ nLockTime in the wallet\n+- #6276 `c9fd907` Fix getbalance * 0\n+\n+### GUI\n+- #5219 `f3af0c8` New icons\n+- #5228 `bb3c75b` HiDPI (retina) support for splash screen\n+- #5258 `73cbf0a` The RPC Console should be a QWidget to make window more independent\n+- #5488 `851dfc7` Light blue icon color for regtest\n+- #5547 `a39aa74` New icon for the debug window\n+- #5493 `e515309` Adopt style colour for button icons\n+- #5557 `70477a0` On close of splashscreen interrupt verifyDB\n+- #5559 `83be8fd` Make the command-line-args dialog better\n+- #5144 `c5380a9` Elaborate on signverify message dialog warning\n+- #5489 `d1aa3c6` Optimize PNG files\n+- #5649 `e0cd2f5` Use text-color icons for system tray Send/Receive menu entries\n+- #5651 `848f55d` Coin Control: Use U+2248 \"ALMOST EQUAL TO\" rather than a simple tilde\n+- #5626 `ab0d798` Fix icon sizes and column width\n+- #5683 `c7b22aa` add new osx dmg background picture\n+- #5620 `7823598` Payment request expiration bug fix\n+- #5729 `9c4a5a5` Allow unit changes for read-only BitcoinAmountField\n+- #5753 `0f44672` Add bitcoin logo to about screen\n+- #5629 `a956586` Prevent amount overflow problem with payment requests\n+- #5830 `215475a` Don't save geometry for options and about/help window\n+- #5793 `d26f0b2` Honor current network when creating autostart link\n+- #5847 `f238add` Startup script for centos, with documentation\n+- #5915 `5bd3a92` Fix a static qt5 crash when using certain versions of libxcb\n+- #5898 `bb56781` Fix rpc console font size to flexible metrics\n+- #5467 `bc8535b` Payment request / server work - part 2\n+- #6161 `180c164` Remove movable option for toolbar\n+- #6160 `0d862c2` Overviewpage: make sure warning icons gets colored\n+\n+### Tests\n+- #5453 `2f2d337` Add ability to run single test manually to RPC tests\n+- #5421 `886eb57` Test unexecuted OP_CODESEPARATOR\n+- #5530 `565b300` Additional rpc tests\n+- #5611 `37b185c` Fix spurious windows test failures after 012598880c\n+- #5613 `2eda47b` Fix smartfees test for change to relay policy\n+- #5612 `e3f5727` Fix zapwallettxes test\n+- #5642 `30a5b5f` Prepare paymentservertests for new unit tests\n+- #5784 `e3a3cd7` Fix usage of NegateSignatureS in script_tests\n+- #5813 `ee9f2bf` Add unit tests for next difficulty calculations\n+- #5855 `d7989c0` Travis: run unit tests in different orders\n+- #5852 `cdae53e` Reinitialize state in between individual unit tests.\n+- #5883 `164d7b6` tests: add a BasicTestingSetup and apply to all tests\n+- #5940 `446bb70` Regression test for ResendWalletTransactions\n+- #6052 `cf7adad` fix and enable bip32 unit test\n+- #6039 `734f80a` tests: Error when setgenerate is used on regtest\n+- #6074 `948beaf` Correct the PUSHDATA4 minimal encoding test in script_invalid.json\n+- #6032 `e08886d` Stop nodes after RPC tests, even with --nocleanup\n+- #6075 `df1609f` Add additional script edge condition tests\n+- #5981 `da38dc6` Python P2P testing \n+- #5958 `9ef00c3` Add multisig rpc tests\n+- #6112 `fec5c0e` Add more script edge condition tests\n+\n+### Miscellaneous\n+- #5457, #5506, #5952, #6047 Update libsecp256k1\n+- #5437 `84857e8` Add missing CAutoFile::IsNull() check in main\n+- #5490 `ec20fd7` Replace uint256/uint160 with opaque blobs where possible\n+- #5654, #5764 Adding jonasschnelli's GPG key\n+- #5477 `5f04d1d` OS X 10.10: LSSharedFileListItemResolve() is deprecated\n+- #5679 `beff11a` Get rid of DetectShutdownThread\n+- #5787 `9bd8c9b` Add fanquake PGP key\n+- #5366 `47a79bb` No longer check osx compatibility in RenameThread\n+- #5689 `07f4386` openssl: abstract out OPENSSL_cleanse\n+- #5708 `8b298ca` Add list of implemented BIPs\n+- #5809 `46bfbe7` Add bitcoin-cli man page\n+- #5839 `86eb461` keys: remove libsecp256k1 verification until it's actually supported\n+- #5749 `d734d87` Help messages correctly formatted (79 chars)\n+- #5884 `7077fe6` BUGFIX: Stack around the variable 'rv' was corrupted\n+- #5849 `41259ca` contrib/init/bitcoind.openrc: Compatibility with previous OpenRC init script variables\n+- #5950 `41113e3` Fix locale fallback and guard tests against invalid locale settings\n+- #5965 `7c6bfb1` Add git-subtree-check.sh script\n+- #6033 `1623f6e` FreeBSD, OpenBSD thread renaming\n+- #6064 `b46e7c2` Several changes to mruset\n+- #6104 `3e2559c` Show an init message while activating best chain\n+- #6125 `351f73e` Clean up parsing of bool command line args\n+- #5964 `b4c219b` Lightweight task scheduler\n+- #6116 `30dc3c1` [OSX] rename Bitcoin-Qt.app to Bitcoin-Core.app\n+- #6168 `b3024f0` contrib/linearize: Support linearization of testnet blocks\n+- #6098 `7708fcd` Update Windows resource files (and add one for bitcoin-tx)\n+- #6159 `e1412d3` Catch errors on datadir lock and pidfile delete\n+- #6186 `182686c` Fix two problems in CSubnet parsing\n+- #6174 `df992b9` doc: add translation strings policy\n+- #6210 `dfdb6dd` build: disable optional use of gmp in internal secp256k1 build\n+- #6264 `94cd705` Remove translation for -help-debug options\n+- #6286 `3902c15` Remove berkeley-db4 workaround in MacOSX build docs\n+- #6319 `3f8fcc9` doc: update mailing list address\n+\n+Credits\n+=======\n+\n+Thanks to everyone who directly contributed to this release:\n+\n+- 21E14\n+- Adam Weiss\n+- Alex Morcos\n+- ayeowch\n+- azeteki\n+- Ben Holden-Crowther\n+- bikinibabe\n+- BitcoinPRReadingGroup\n+- Blake Jakopovic\n+- BtcDrak\n+- charlescharles\n+- Chris Arnesen\n+- Ciemon\n+- CohibAA\n+- Corinne Dashjr\n+- Cory Fields\n+- Cozz Lovan\n+- Daira Hopwood\n+- Daniel Kraft\n+- Dave Collins\n+- David A. Harding\n+- dexX7\n+- Earlz\n+- Eric Lombrozo\n+- Eric R. Schulz\n+- Everett Forth\n+- Flavien Charlon\n+- fsb4000\n+- Gavin Andresen\n+- Gregory Maxwell\n+- Heath\n+- Ivan Pustogarov\n+- Jacob Welsh\n+- Jameson Lopp\n+- Jason Lewicki\n+- Jeff Garzik\n+- Jonas Schnelli\n+- Jonathan Brown\n+- Jorge Tim\u00f3n\n+- joshr\n+- jtimon\n+- Julian Yap\n+- Luca Venturini\n+- Luke Dashjr\n+- Manuel Araoz\n+- MarcoFalke\n+- Matt Bogosian\n+- Matt Corallo\n+- Micha\n+- Michael Ford\n+- Mike Hearn\n+- mrbandrews\n+- Nicolas Benoit\n+- paveljanik\n+- Pavel Jan\u00edk\n+- Pavel Vasin\n+- Peter Todd\n+- Philip Kaufmann\n+- Pieter Wuille\n+- pstratem\n+- randy-waterhouse\n+- rion\n+- Rob Van Mieghem\n+- Ross Nicoll\n+- Ruben de Vries\n+- sandakersmann\n+- Shaul Kfir\n+- Shawn Wilkinson\n+- sinetek\n+- Suhas Daftuar\n+- svost\n+- Thomas Zander\n+- Tom Harding\n+- UdjinM6\n+- Vitalii Demianets\n+- Wladimir J. van der Laan\n+\n+And all those who contributed additional code review and/or security research:\n+\n+- Sergio Demian Lerner\n+\n+As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/).\n+"
      }
    ]
  }
]