[
  {
    "sha": "312e5ae68d2b4de86c97cb616ca2906a7251a76e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozMTJlNWFlNjhkMmI0ZGU4NmM5N2NiNjE2Y2EyOTA2YTcyNTFhNzZl",
    "commit": {
      "author": {
        "name": "R E Broadley",
        "email": "rebroad+github@gmail.com",
        "date": "2012-05-17T20:51:47Z"
      },
      "committer": {
        "name": "R E Broadley",
        "email": "rebroad+github@gmail.com",
        "date": "2012-05-17T20:51:47Z"
      },
      "message": "Rename, for reasons of least surprise.\n\nAlso, reduces confusion when combined with future pull requests.",
      "tree": {
        "sha": "fa61c7b44b9618aeb5d31c3e7d1b9c6303191b38",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fa61c7b44b9618aeb5d31c3e7d1b9c6303191b38"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/312e5ae68d2b4de86c97cb616ca2906a7251a76e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/312e5ae68d2b4de86c97cb616ca2906a7251a76e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/312e5ae68d2b4de86c97cb616ca2906a7251a76e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/312e5ae68d2b4de86c97cb616ca2906a7251a76e/comments",
    "author": {
      "login": "rebroad",
      "id": 1530283,
      "node_id": "MDQ6VXNlcjE1MzAyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1530283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rebroad",
      "html_url": "https://github.com/rebroad",
      "followers_url": "https://api.github.com/users/rebroad/followers",
      "following_url": "https://api.github.com/users/rebroad/following{/other_user}",
      "gists_url": "https://api.github.com/users/rebroad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rebroad/subscriptions",
      "organizations_url": "https://api.github.com/users/rebroad/orgs",
      "repos_url": "https://api.github.com/users/rebroad/repos",
      "events_url": "https://api.github.com/users/rebroad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rebroad/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "rebroad",
      "id": 1530283,
      "node_id": "MDQ6VXNlcjE1MzAyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1530283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rebroad",
      "html_url": "https://github.com/rebroad",
      "followers_url": "https://api.github.com/users/rebroad/followers",
      "following_url": "https://api.github.com/users/rebroad/following{/other_user}",
      "gists_url": "https://api.github.com/users/rebroad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rebroad/subscriptions",
      "organizations_url": "https://api.github.com/users/rebroad/orgs",
      "repos_url": "https://api.github.com/users/rebroad/repos",
      "events_url": "https://api.github.com/users/rebroad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rebroad/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f1e7570755587e37c60cf652a398fafe40eb3008",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f1e7570755587e37c60cf652a398fafe40eb3008",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f1e7570755587e37c60cf652a398fafe40eb3008"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 7,
      "deletions": 7
    },
    "files": [
      {
        "sha": "9d389cc76f2692a64c64d475e144c4cbda910296",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/312e5ae68d2b4de86c97cb616ca2906a7251a76e/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/312e5ae68d2b4de86c97cb616ca2906a7251a76e/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=312e5ae68d2b4de86c97cb616ca2906a7251a76e",
        "patch": "@@ -2672,7 +2672,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n         {\n             SyncWithWallets(tx, NULL, true);\n             RelayMessage(inv, vMsg);\n-            mapAlreadyAskedFor.erase(inv);\n+            mapWaitingFor.erase(inv);\n             vWorkQueue.push_back(inv.hash);\n \n             // Recursively process any orphan transactions that depended on this one\n@@ -2693,7 +2693,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n                         printf(\"   accepted orphan tx %s\\n\", inv.hash.ToString().substr(0,10).c_str());\n                         SyncWithWallets(tx, NULL, true);\n                         RelayMessage(inv, vMsg);\n-                        mapAlreadyAskedFor.erase(inv);\n+                        mapWaitingFor.erase(inv);\n                         vWorkQueue.push_back(inv.hash);\n                     }\n                 }\n@@ -2728,7 +2728,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n         pfrom->AddInventoryKnown(inv);\n \n         if (ProcessBlock(pfrom, &block))\n-            mapAlreadyAskedFor.erase(inv);\n+            mapWaitingFor.erase(inv);\n         if (block.nDoS) pfrom->Misbehaving(block.nDoS);\n     }\n \n@@ -3110,7 +3110,7 @@ bool SendMessages(CNode* pto, bool fSendTrickle)\n                     vGetData.clear();\n                 }\n             }\n-            mapAlreadyAskedFor[inv] = nNow;\n+            mapWaitingFor[inv] = nNow;\n             pto->mapAskFor.erase(pto->mapAskFor.begin());\n         }\n         if (!vGetData.empty())"
      },
      {
        "sha": "1f5d1958cdc5868768946374bcbedcc2f18573af",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/312e5ae68d2b4de86c97cb616ca2906a7251a76e/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/312e5ae68d2b4de86c97cb616ca2906a7251a76e/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=312e5ae68d2b4de86c97cb616ca2906a7251a76e",
        "patch": "@@ -64,7 +64,7 @@ CCriticalSection cs_vNodes;\n map<CInv, CDataStream> mapRelay;\n deque<pair<int64, CInv> > vRelayExpiration;\n CCriticalSection cs_mapRelay;\n-map<CInv, int64> mapAlreadyAskedFor;\n+map<CInv, int64> mapWaitingFor;\n \n static deque<string> vOneShots;\n CCriticalSection cs_vOneShots;"
      },
      {
        "sha": "d5957c5ca4e40d24629ee5d0b0389efa5b814d75",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/312e5ae68d2b4de86c97cb616ca2906a7251a76e/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/312e5ae68d2b4de86c97cb616ca2906a7251a76e/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=312e5ae68d2b4de86c97cb616ca2906a7251a76e",
        "patch": "@@ -120,7 +120,7 @@ extern CCriticalSection cs_vNodes;\n extern std::map<CInv, CDataStream> mapRelay;\n extern std::deque<std::pair<int64, CInv> > vRelayExpiration;\n extern CCriticalSection cs_mapRelay;\n-extern std::map<CInv, int64> mapAlreadyAskedFor;\n+extern std::map<CInv, int64> mapWaitingFor;\n \n \n \n@@ -293,7 +293,7 @@ class CNode\n     {\n         // We're using mapAskFor as a priority queue,\n         // the key is the earliest time the request can be sent\n-        int64& nRequestTime = mapAlreadyAskedFor[inv];\n+        int64& nRequestTime = mapWaitingFor[inv];\n         printf(\"askfor %s   %\"PRI64d\"\\n\", inv.ToString().c_str(), nRequestTime);\n \n         // Make sure not to reuse time indexes to keep things in the same order"
      }
    ]
  }
]