[
  {
    "sha": "fa24456d0c4cd0f6571bcf3d8f1f51d8d4242a3e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTI0NDU2ZDBjNGNkMGY2NTcxYmNmM2Q4ZjFmNTFkOGQ0MjQyYTNl",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2016-04-03T18:35:57Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2016-04-03T18:43:56Z"
      },
      "message": "[qa] httpbasics: Actually test second connection",
      "tree": {
        "sha": "60716626e98f31e97929bf6144a5eeae09bf20b0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/60716626e98f31e97929bf6144a5eeae09bf20b0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa24456d0c4cd0f6571bcf3d8f1f51d8d4242a3e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa24456d0c4cd0f6571bcf3d8f1f51d8d4242a3e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa24456d0c4cd0f6571bcf3d8f1f51d8d4242a3e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa24456d0c4cd0f6571bcf3d8f1f51d8d4242a3e/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e662a76288011fe6a640f1c02c2381284ad93a03",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e662a76288011fe6a640f1c02c2381284ad93a03",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e662a76288011fe6a640f1c02c2381284ad93a03"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 9,
      "deletions": 9
    },
    "files": [
      {
        "sha": "eff4c6e808bbd0a3aecc9bfa034afd702d7f408b",
        "filename": "qa/rpc-tests/httpbasics.py",
        "status": "modified",
        "additions": 9,
        "deletions": 9,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa24456d0c4cd0f6571bcf3d8f1f51d8d4242a3e/qa/rpc-tests/httpbasics.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa24456d0c4cd0f6571bcf3d8f1f51d8d4242a3e/qa/rpc-tests/httpbasics.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/httpbasics.py?ref=fa24456d0c4cd0f6571bcf3d8f1f51d8d4242a3e",
        "patch": "@@ -37,13 +37,13 @@ def run_test(self):\n         conn.connect()\n         conn.request('POST', '/', '{\"method\": \"getbestblockhash\"}', headers)\n         out1 = conn.getresponse().read()\n-        assert('\"error\":null' in out1)\n+        assert(b'\"error\":null' in out1)\n         assert(conn.sock!=None) #according to http/1.1 connection must still be open!\n \n         #send 2nd request without closing connection\n         conn.request('POST', '/', '{\"method\": \"getchaintips\"}', headers)\n-        out2 = conn.getresponse().read()\n-        assert('\"error\":null' in out1) #must also response with a correct json-rpc message\n+        out1 = conn.getresponse().read()\n+        assert(b'\"error\":null' in out1) #must also response with a correct json-rpc message\n         assert(conn.sock!=None) #according to http/1.1 connection must still be open!\n         conn.close()\n \n@@ -54,13 +54,13 @@ def run_test(self):\n         conn.connect()\n         conn.request('POST', '/', '{\"method\": \"getbestblockhash\"}', headers)\n         out1 = conn.getresponse().read()\n-        assert('\"error\":null' in out1)\n+        assert(b'\"error\":null' in out1)\n         assert(conn.sock!=None) #according to http/1.1 connection must still be open!\n \n         #send 2nd request without closing connection\n         conn.request('POST', '/', '{\"method\": \"getchaintips\"}', headers)\n-        out2 = conn.getresponse().read()\n-        assert('\"error\":null' in out1) #must also response with a correct json-rpc message\n+        out1 = conn.getresponse().read()\n+        assert(b'\"error\":null' in out1) #must also response with a correct json-rpc message\n         assert(conn.sock!=None) #according to http/1.1 connection must still be open!\n         conn.close()\n \n@@ -71,7 +71,7 @@ def run_test(self):\n         conn.connect()\n         conn.request('POST', '/', '{\"method\": \"getbestblockhash\"}', headers)\n         out1 = conn.getresponse().read()\n-        assert('\"error\":null' in out1)\n+        assert(b'\"error\":null' in out1)\n         assert(conn.sock==None) #now the connection must be closed after the response\n \n         #node1 (2nd node) is running with disabled keep-alive option\n@@ -83,7 +83,7 @@ def run_test(self):\n         conn.connect()\n         conn.request('POST', '/', '{\"method\": \"getbestblockhash\"}', headers)\n         out1 = conn.getresponse().read()\n-        assert('\"error\":null' in out1)\n+        assert(b'\"error\":null' in out1)\n \n         #node2 (third node) is running with standard keep-alive parameters which means keep-alive is on\n         urlNode2 = urlparse.urlparse(self.nodes[2].url)\n@@ -94,7 +94,7 @@ def run_test(self):\n         conn.connect()\n         conn.request('POST', '/', '{\"method\": \"getbestblockhash\"}', headers)\n         out1 = conn.getresponse().read()\n-        assert('\"error\":null' in out1)\n+        assert(b'\"error\":null' in out1)\n         assert(conn.sock!=None) #connection must be closed because bitcoind should use keep-alive by default\n \n         # Check excessive request size"
      }
    ]
  }
]