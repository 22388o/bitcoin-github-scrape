[
  {
    "sha": "ee0dc94f9b3cd585404e1d200ba2162e4f6b34a3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplZTBkYzk0ZjliM2NkNTg1NDA0ZTFkMjAwYmEyMTYyZTRmNmIzNGEz",
    "commit": {
      "author": {
        "name": "Patick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2015-10-30T23:04:21Z"
      },
      "committer": {
        "name": "Patick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2015-11-05T20:08:25Z"
      },
      "message": "Move CryptedKeyMap to boost::tuple from std::pair",
      "tree": {
        "sha": "328d494f654ad18c643b1eca025ca46b2323f13b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/328d494f654ad18c643b1eca025ca46b2323f13b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ee0dc94f9b3cd585404e1d200ba2162e4f6b34a3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ee0dc94f9b3cd585404e1d200ba2162e4f6b34a3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ee0dc94f9b3cd585404e1d200ba2162e4f6b34a3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ee0dc94f9b3cd585404e1d200ba2162e4f6b34a3/comments",
    "author": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3038eb63e8a674b4818cb5d5e461f1ccf4b2932f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3038eb63e8a674b4818cb5d5e461f1ccf4b2932f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3038eb63e8a674b4818cb5d5e461f1ccf4b2932f"
      }
    ],
    "stats": {
      "total": 13,
      "additions": 7,
      "deletions": 6
    },
    "files": [
      {
        "sha": "94d7d6834eaee75248e1be9fbc7340fb1c853e4d",
        "filename": "src/keystore.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ee0dc94f9b3cd585404e1d200ba2162e4f6b34a3/src/keystore.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ee0dc94f9b3cd585404e1d200ba2162e4f6b34a3/src/keystore.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/keystore.h?ref=ee0dc94f9b3cd585404e1d200ba2162e4f6b34a3",
        "patch": "@@ -14,6 +14,7 @@\n \n #include <boost/signals2/signal.hpp>\n #include <boost/variant.hpp>\n+#include <boost/tuple/tuple.hpp>\n \n /** A virtual base class for key stores */\n class CKeyStore\n@@ -109,6 +110,6 @@ class CBasicKeyStore : public CKeyStore\n };\n \n typedef std::vector<unsigned char, secure_allocator<unsigned char> > CKeyingMaterial;\n-typedef std::map<CKeyID, std::pair<CPubKey, std::vector<unsigned char> > > CryptedKeyMap;\n+typedef std::map<CKeyID, boost::tuple<CPubKey, std::vector<unsigned char> > > CryptedKeyMap;\n \n #endif // BITCOIN_KEYSTORE_H"
      },
      {
        "sha": "4760b06084c68cf09831fe43705fa034f12a1b6c",
        "filename": "src/wallet/crypter.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ee0dc94f9b3cd585404e1d200ba2162e4f6b34a3/src/wallet/crypter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ee0dc94f9b3cd585404e1d200ba2162e4f6b34a3/src/wallet/crypter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/crypter.cpp?ref=ee0dc94f9b3cd585404e1d200ba2162e4f6b34a3",
        "patch": "@@ -172,8 +172,8 @@ bool CCryptoKeyStore::Unlock(const CKeyingMaterial& vMasterKeyIn)\n         CryptedKeyMap::const_iterator mi = mapCryptedKeys.begin();\n         for (; mi != mapCryptedKeys.end(); ++mi)\n         {\n-            const CPubKey &vchPubKey = (*mi).second.first;\n-            const std::vector<unsigned char> &vchCryptedSecret = (*mi).second.second;\n+            const CPubKey &vchPubKey = (*mi).second.get<0>();\n+            const std::vector<unsigned char> &vchCryptedSecret = (*mi).second.get<1>();\n             CKey key;\n             if (!DecryptKey(vMasterKeyIn, vchCryptedSecret, vchPubKey, key))\n             {\n@@ -242,8 +242,8 @@ bool CCryptoKeyStore::GetKey(const CKeyID &address, CKey& keyOut) const\n         CryptedKeyMap::const_iterator mi = mapCryptedKeys.find(address);\n         if (mi != mapCryptedKeys.end())\n         {\n-            const CPubKey &vchPubKey = (*mi).second.first;\n-            const std::vector<unsigned char> &vchCryptedSecret = (*mi).second.second;\n+            const CPubKey &vchPubKey = (*mi).second.get<0>();\n+            const std::vector<unsigned char> &vchCryptedSecret = (*mi).second.get<1>();\n             return DecryptKey(vMasterKey, vchCryptedSecret, vchPubKey, keyOut);\n         }\n     }\n@@ -260,7 +260,7 @@ bool CCryptoKeyStore::GetPubKey(const CKeyID &address, CPubKey& vchPubKeyOut) co\n         CryptedKeyMap::const_iterator mi = mapCryptedKeys.find(address);\n         if (mi != mapCryptedKeys.end())\n         {\n-            vchPubKeyOut = (*mi).second.first;\n+            vchPubKeyOut = (*mi).second.get<0>();\n             return true;\n         }\n         // Check for watch-only pubkeys"
      }
    ]
  },
  {
    "sha": "e3601081b45efba13fe16cb6286606a6af7a8682",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplMzYwMTA4MWI0NWVmYmExM2ZlMTZjYjYyODY2MDZhNmFmN2E4Njgy",
    "commit": {
      "author": {
        "name": "Patick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2015-10-30T23:23:08Z"
      },
      "committer": {
        "name": "Patick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2015-11-05T20:08:25Z"
      },
      "message": "Add vchHash field to CryptedKeyMap",
      "tree": {
        "sha": "b5b06dc8faed6d36b33e0abf29650fdc98fbb670",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b5b06dc8faed6d36b33e0abf29650fdc98fbb670"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e3601081b45efba13fe16cb6286606a6af7a8682",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e3601081b45efba13fe16cb6286606a6af7a8682",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e3601081b45efba13fe16cb6286606a6af7a8682",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e3601081b45efba13fe16cb6286606a6af7a8682/comments",
    "author": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ee0dc94f9b3cd585404e1d200ba2162e4f6b34a3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ee0dc94f9b3cd585404e1d200ba2162e4f6b34a3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ee0dc94f9b3cd585404e1d200ba2162e4f6b34a3"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "70714531a053bd56d91db855bf269c5704e856e7",
        "filename": "src/keystore.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e3601081b45efba13fe16cb6286606a6af7a8682/src/keystore.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e3601081b45efba13fe16cb6286606a6af7a8682/src/keystore.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/keystore.h?ref=e3601081b45efba13fe16cb6286606a6af7a8682",
        "patch": "@@ -110,6 +110,6 @@ class CBasicKeyStore : public CKeyStore\n };\n \n typedef std::vector<unsigned char, secure_allocator<unsigned char> > CKeyingMaterial;\n-typedef std::map<CKeyID, boost::tuple<CPubKey, std::vector<unsigned char> > > CryptedKeyMap;\n+typedef std::map<CKeyID, boost::tuple<CPubKey, std::vector<unsigned char>, std::vector<unsigned char> > > CryptedKeyMap;\n \n #endif // BITCOIN_KEYSTORE_H"
      },
      {
        "sha": "84199a18a04ebb179edc31350f1a98f1bc6653e0",
        "filename": "src/wallet/crypter.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e3601081b45efba13fe16cb6286606a6af7a8682/src/wallet/crypter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e3601081b45efba13fe16cb6286606a6af7a8682/src/wallet/crypter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/crypter.cpp?ref=e3601081b45efba13fe16cb6286606a6af7a8682",
        "patch": "@@ -227,7 +227,7 @@ bool CCryptoKeyStore::AddCryptedKey(const CPubKey &vchPubKey, const std::vector<\n         if (!SetCrypted())\n             return false;\n \n-        mapCryptedKeys[vchPubKey.GetID()] = make_pair(vchPubKey, vchCryptedSecret);\n+        mapCryptedKeys[vchPubKey.GetID()] = boost::make_tuple(vchPubKey, vchCryptedSecret, std::vector<unsigned char>());\n     }\n     return true;\n }"
      }
    ]
  },
  {
    "sha": "e3abc590ea08c287027c102d8209c2578bc4b94e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplM2FiYzU5MGVhMDhjMjg3MDI3YzEwMmQ4MjA5YzI1NzhiYzRiOTRl",
    "commit": {
      "author": {
        "name": "Patick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2015-10-31T04:14:07Z"
      },
      "committer": {
        "name": "Patick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2015-11-05T20:08:25Z"
      },
      "message": "Require vchHash for ckey wallet entries",
      "tree": {
        "sha": "1bc06de1fca4bd4d8fecf9fd97eea7fe45562793",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1bc06de1fca4bd4d8fecf9fd97eea7fe45562793"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e3abc590ea08c287027c102d8209c2578bc4b94e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e3abc590ea08c287027c102d8209c2578bc4b94e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e3abc590ea08c287027c102d8209c2578bc4b94e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e3abc590ea08c287027c102d8209c2578bc4b94e/comments",
    "author": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e3601081b45efba13fe16cb6286606a6af7a8682",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e3601081b45efba13fe16cb6286606a6af7a8682",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e3601081b45efba13fe16cb6286606a6af7a8682"
      }
    ],
    "stats": {
      "total": 63,
      "additions": 49,
      "deletions": 14
    },
    "files": [
      {
        "sha": "83a65580fbc42b8b02871435138914bea97f61ec",
        "filename": "src/wallet/crypter.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 4,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e3abc590ea08c287027c102d8209c2578bc4b94e/src/wallet/crypter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e3abc590ea08c287027c102d8209c2578bc4b94e/src/wallet/crypter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/crypter.cpp?ref=e3abc590ea08c287027c102d8209c2578bc4b94e",
        "patch": "@@ -213,21 +213,24 @@ bool CCryptoKeyStore::AddKeyPubKey(const CKey& key, const CPubKey &pubkey)\n         if (!EncryptSecret(vMasterKey, vchSecret, pubkey.GetHash(), vchCryptedSecret))\n             return false;\n \n-        if (!AddCryptedKey(pubkey, vchCryptedSecret))\n+        std::vector<unsigned char> vchHash;\n+        CalculateCryptedHash(pubkey, vchCryptedSecret, vchHash);\n+\n+        if (!AddCryptedKey(pubkey, vchCryptedSecret, vchHash))\n             return false;\n     }\n     return true;\n }\n \n \n-bool CCryptoKeyStore::AddCryptedKey(const CPubKey &vchPubKey, const std::vector<unsigned char> &vchCryptedSecret)\n+bool CCryptoKeyStore::AddCryptedKey(const CPubKey &vchPubKey, const std::vector<unsigned char> &vchCryptedSecret, const std::vector<unsigned char> &vchHash)\n {\n     {\n         LOCK(cs_KeyStore);\n         if (!SetCrypted())\n             return false;\n \n-        mapCryptedKeys[vchPubKey.GetID()] = boost::make_tuple(vchPubKey, vchCryptedSecret, std::vector<unsigned char>());\n+        mapCryptedKeys[vchPubKey.GetID()] = boost::make_tuple(vchPubKey, vchCryptedSecret, vchHash);\n     }\n     return true;\n }\n@@ -285,7 +288,9 @@ bool CCryptoKeyStore::EncryptKeys(CKeyingMaterial& vMasterKeyIn)\n             std::vector<unsigned char> vchCryptedSecret;\n             if (!EncryptSecret(vMasterKeyIn, vchSecret, vchPubKey.GetHash(), vchCryptedSecret))\n                 return false;\n-            if (!AddCryptedKey(vchPubKey, vchCryptedSecret))\n+            std::vector<unsigned char> vchHash;\n+            CalculateCryptedHash(vchPubKey, vchCryptedSecret, vchHash);\n+            if (!AddCryptedKey(vchPubKey, vchCryptedSecret, vchHash))\n                 return false;\n         }\n         mapKeys.clear();"
      },
      {
        "sha": "d1f567bf0d853b79149114949707e8e7d90c56c9",
        "filename": "src/wallet/crypter.h",
        "status": "modified",
        "additions": 10,
        "deletions": 1,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e3abc590ea08c287027c102d8209c2578bc4b94e/src/wallet/crypter.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e3abc590ea08c287027c102d8209c2578bc4b94e/src/wallet/crypter.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/crypter.h?ref=e3abc590ea08c287027c102d8209c2578bc4b94e",
        "patch": "@@ -156,7 +156,7 @@ class CCryptoKeyStore : public CBasicKeyStore\n \n     bool Lock();\n \n-    virtual bool AddCryptedKey(const CPubKey &vchPubKey, const std::vector<unsigned char> &vchCryptedSecret);\n+    virtual bool AddCryptedKey(const CPubKey &vchPubKey, const std::vector<unsigned char> &vchCryptedSecret, const std::vector<unsigned char> &vchHash);\n     bool AddKeyPubKey(const CKey& key, const CPubKey &pubkey);\n     bool HaveKey(const CKeyID &address) const\n     {\n@@ -186,6 +186,15 @@ class CCryptoKeyStore : public CBasicKeyStore\n         }\n     }\n \n+    static void CalculateCryptedHash(const CPubKey &vchPubKey, const std::vector<unsigned char> &vchCryptedSecret, std::vector<unsigned char> &vchHash) {\n+        vchHash.clear();\n+        vchHash.reserve(32);\n+        CSHA256().\n+        Write(&vchPubKey[0], vchPubKey.size()).\n+        Write(&vchCryptedSecret[0], vchCryptedSecret.size()).\n+        Finalize(&vchHash[0]);\n+    }\n+\n     /**\n      * Wallet status (encrypted, locked) changed.\n      * Note: Called without locks held."
      },
      {
        "sha": "665a45cbaecf522fcd7573be33afd45e4f200d2d",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 4,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e3abc590ea08c287027c102d8209c2578bc4b94e/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e3abc590ea08c287027c102d8209c2578bc4b94e/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=e3abc590ea08c287027c102d8209c2578bc4b94e",
        "patch": "@@ -129,9 +129,10 @@ bool CWallet::AddKeyPubKey(const CKey& secret, const CPubKey &pubkey)\n }\n \n bool CWallet::AddCryptedKey(const CPubKey &vchPubKey,\n-                            const vector<unsigned char> &vchCryptedSecret)\n+                            const vector<unsigned char> &vchCryptedSecret,\n+                            const vector<unsigned char> &vchHash)\n {\n-    if (!CCryptoKeyStore::AddCryptedKey(vchPubKey, vchCryptedSecret))\n+    if (!CCryptoKeyStore::AddCryptedKey(vchPubKey, vchCryptedSecret, vchHash))\n         return false;\n     if (!fFileBacked)\n         return true;\n@@ -140,10 +141,12 @@ bool CWallet::AddCryptedKey(const CPubKey &vchPubKey,\n         if (pwalletdbEncryption)\n             return pwalletdbEncryption->WriteCryptedKey(vchPubKey,\n                                                         vchCryptedSecret,\n+                                                        vchHash,\n                                                         mapKeyMetadata[vchPubKey.GetID()]);\n         else\n             return CWalletDB(strWalletFile).WriteCryptedKey(vchPubKey,\n                                                             vchCryptedSecret,\n+                                                            vchHash,\n                                                             mapKeyMetadata[vchPubKey.GetID()]);\n     }\n     return false;\n@@ -159,9 +162,13 @@ bool CWallet::LoadKeyMetadata(const CPubKey &pubkey, const CKeyMetadata &meta)\n     return true;\n }\n \n-bool CWallet::LoadCryptedKey(const CPubKey &vchPubKey, const std::vector<unsigned char> &vchCryptedSecret)\n+bool CWallet::LoadCryptedKey(const CPubKey &vchPubKey, const std::vector<unsigned char> &vchCryptedSecret, const std::vector<unsigned char> &vchHash)\n {\n-    return CCryptoKeyStore::AddCryptedKey(vchPubKey, vchCryptedSecret);\n+    std::vector<unsigned char> vchCheckHash;\n+    CCryptoKeyStore::CalculateCryptedHash(vchPubKey, vchCryptedSecret, vchCheckHash);\n+    if (!std::equal(vchHash.begin(), vchHash.end(), vchCheckHash.begin()))\n+        return false;\n+    return CCryptoKeyStore::AddCryptedKey(vchPubKey, vchCryptedSecret, vchHash);\n }\n \n bool CWallet::AddCScript(const CScript& redeemScript)"
      },
      {
        "sha": "8d9eb537bb827699f71e3e932e25c4534e365551",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e3abc590ea08c287027c102d8209c2578bc4b94e/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e3abc590ea08c287027c102d8209c2578bc4b94e/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=e3abc590ea08c287027c102d8209c2578bc4b94e",
        "patch": "@@ -584,9 +584,9 @@ class CWallet : public CCryptoKeyStore, public CValidationInterface\n     bool LoadMinVersion(int nVersion) { AssertLockHeld(cs_wallet); nWalletVersion = nVersion; nWalletMaxVersion = std::max(nWalletMaxVersion, nVersion); return true; }\n \n     //! Adds an encrypted key to the store, and saves it to disk.\n-    bool AddCryptedKey(const CPubKey &vchPubKey, const std::vector<unsigned char> &vchCryptedSecret);\n+    bool AddCryptedKey(const CPubKey &vchPubKey, const std::vector<unsigned char> &vchCryptedSecret, const std::vector<unsigned char> &vchHash);\n     //! Adds an encrypted key to the store, without saving it to disk (used by LoadWallet)\n-    bool LoadCryptedKey(const CPubKey &vchPubKey, const std::vector<unsigned char> &vchCryptedSecret);\n+    bool LoadCryptedKey(const CPubKey &vchPubKey, const std::vector<unsigned char> &vchCryptedSecret, const std::vector<unsigned char> &vchHash);\n     bool AddCScript(const CScript& redeemScript);\n     bool LoadCScript(const CScript& redeemScript);\n "
      },
      {
        "sha": "5045c8898f979620a028f57899906a2f73a33df6",
        "filename": "src/wallet/walletdb.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 2,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e3abc590ea08c287027c102d8209c2578bc4b94e/src/wallet/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e3abc590ea08c287027c102d8209c2578bc4b94e/src/wallet/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.cpp?ref=e3abc590ea08c287027c102d8209c2578bc4b94e",
        "patch": "@@ -85,6 +85,7 @@ bool CWalletDB::WriteKey(const CPubKey& vchPubKey, const CPrivKey& vchPrivKey, c\n \n bool CWalletDB::WriteCryptedKey(const CPubKey& vchPubKey,\n                                 const std::vector<unsigned char>& vchCryptedSecret,\n+                                const vector<unsigned char> &vchHash,\n                                 const CKeyMetadata &keyMeta)\n {\n     const bool fEraseUnencryptedKey = true;\n@@ -94,7 +95,7 @@ bool CWalletDB::WriteCryptedKey(const CPubKey& vchPubKey,\n             keyMeta))\n         return false;\n \n-    if (!Write(std::make_pair(std::string(\"ckey\"), vchPubKey), vchCryptedSecret, false))\n+    if (!Write(std::make_pair(std::string(\"ckey\"), vchPubKey), std::make_pair(vchCryptedSecret, vchHash), false))\n         return false;\n     if (fEraseUnencryptedKey)\n     {\n@@ -523,7 +524,20 @@ ReadKeyValue(CWallet* pwallet, CDataStream& ssKey, CDataStream& ssValue,\n             ssValue >> vchPrivKey;\n             wss.nCKeys++;\n \n-            if (!pwallet->LoadCryptedKey(vchPubKey, vchPrivKey))\n+            vector<unsigned char> vchHash;\n+\n+            // Old wallets store keys as \"key\" [pubkey] => [privkey]\n+            // ... which was slow for wallets with lots of keys, because the public key is re-derived from the private key\n+            // using EC operations as a checksum.\n+            // Newer wallets store keys as \"key\"[pubkey] => [privkey][hash(pubkey,privkey)], which is much faster while\n+            // remaining backwards-compatible.\n+            try\n+            {\n+                ssValue >> vchHash;\n+            }\n+            catch (...) {}\n+\n+            if (!pwallet->LoadCryptedKey(vchPubKey, vchPrivKey, vchHash))\n             {\n                 strErr = \"Error reading wallet database: LoadCryptedKey failed\";\n                 return false;"
      },
      {
        "sha": "09c792cc43787882e236eef35d60b967b547b772",
        "filename": "src/wallet/walletdb.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e3abc590ea08c287027c102d8209c2578bc4b94e/src/wallet/walletdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e3abc590ea08c287027c102d8209c2578bc4b94e/src/wallet/walletdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.h?ref=e3abc590ea08c287027c102d8209c2578bc4b94e",
        "patch": "@@ -89,7 +89,7 @@ class CWalletDB : public CDB\n     bool EraseTx(uint256 hash);\n \n     bool WriteKey(const CPubKey& vchPubKey, const CPrivKey& vchPrivKey, const CKeyMetadata &keyMeta);\n-    bool WriteCryptedKey(const CPubKey& vchPubKey, const std::vector<unsigned char>& vchCryptedSecret, const CKeyMetadata &keyMeta);\n+    bool WriteCryptedKey(const CPubKey& vchPubKey, const std::vector<unsigned char>& vchCryptedSecret, const std::vector<unsigned char>& vchHash, const CKeyMetadata &keyMeta);\n     bool WriteMasterKey(unsigned int nID, const CMasterKey& kMasterKey);\n \n     bool WriteCScript(const uint160& hash, const CScript& redeemScript);"
      }
    ]
  },
  {
    "sha": "6e147d998618cb582b92e8f3609a03018bcaa509",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2ZTE0N2Q5OTg2MThjYjU4MmI5MmU4ZjM2MDlhMDMwMThiY2FhNTA5",
    "commit": {
      "author": {
        "name": "Patick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2015-11-05T20:44:11Z"
      },
      "committer": {
        "name": "Patick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2015-11-05T20:44:11Z"
      },
      "message": "Switch to uint256 from std::vector<unsigned char>",
      "tree": {
        "sha": "153fba7874b7c3ebf0eb62bf651f5b9f56ab7693",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/153fba7874b7c3ebf0eb62bf651f5b9f56ab7693"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6e147d998618cb582b92e8f3609a03018bcaa509",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6e147d998618cb582b92e8f3609a03018bcaa509",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6e147d998618cb582b92e8f3609a03018bcaa509",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6e147d998618cb582b92e8f3609a03018bcaa509/comments",
    "author": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e3abc590ea08c287027c102d8209c2578bc4b94e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e3abc590ea08c287027c102d8209c2578bc4b94e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e3abc590ea08c287027c102d8209c2578bc4b94e"
      }
    ],
    "stats": {
      "total": 60,
      "additions": 24,
      "deletions": 36
    },
    "files": [
      {
        "sha": "e75929ce80472f500a89458fccf2417993894e0a",
        "filename": "src/keystore.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e147d998618cb582b92e8f3609a03018bcaa509/src/keystore.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e147d998618cb582b92e8f3609a03018bcaa509/src/keystore.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/keystore.h?ref=6e147d998618cb582b92e8f3609a03018bcaa509",
        "patch": "@@ -110,6 +110,6 @@ class CBasicKeyStore : public CKeyStore\n };\n \n typedef std::vector<unsigned char, secure_allocator<unsigned char> > CKeyingMaterial;\n-typedef std::map<CKeyID, boost::tuple<CPubKey, std::vector<unsigned char>, std::vector<unsigned char> > > CryptedKeyMap;\n+typedef std::map<CKeyID, boost::tuple<CPubKey, std::vector<unsigned char>, uint256 > > CryptedKeyMap;\n \n #endif // BITCOIN_KEYSTORE_H"
      },
      {
        "sha": "3e6f01e93490907f4ed3c95f08ca79b9ad4ac4b8",
        "filename": "src/wallet/crypter.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 8,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e147d998618cb582b92e8f3609a03018bcaa509/src/wallet/crypter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e147d998618cb582b92e8f3609a03018bcaa509/src/wallet/crypter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/crypter.cpp?ref=6e147d998618cb582b92e8f3609a03018bcaa509",
        "patch": "@@ -213,24 +213,23 @@ bool CCryptoKeyStore::AddKeyPubKey(const CKey& key, const CPubKey &pubkey)\n         if (!EncryptSecret(vMasterKey, vchSecret, pubkey.GetHash(), vchCryptedSecret))\n             return false;\n \n-        std::vector<unsigned char> vchHash;\n-        CalculateCryptedHash(pubkey, vchCryptedSecret, vchHash);\n+        uint256 hash = Hash(pubkey.begin(), pubkey.end(), vchCryptedSecret.begin(), vchCryptedSecret.end());\n \n-        if (!AddCryptedKey(pubkey, vchCryptedSecret, vchHash))\n+        if (!AddCryptedKey(pubkey, vchCryptedSecret, hash))\n             return false;\n     }\n     return true;\n }\n \n \n-bool CCryptoKeyStore::AddCryptedKey(const CPubKey &vchPubKey, const std::vector<unsigned char> &vchCryptedSecret, const std::vector<unsigned char> &vchHash)\n+bool CCryptoKeyStore::AddCryptedKey(const CPubKey &vchPubKey, const std::vector<unsigned char> &vchCryptedSecret, const uint256 &hash)\n {\n     {\n         LOCK(cs_KeyStore);\n         if (!SetCrypted())\n             return false;\n \n-        mapCryptedKeys[vchPubKey.GetID()] = boost::make_tuple(vchPubKey, vchCryptedSecret, vchHash);\n+        mapCryptedKeys[vchPubKey.GetID()] = boost::make_tuple(vchPubKey, vchCryptedSecret, hash);\n     }\n     return true;\n }\n@@ -288,9 +287,8 @@ bool CCryptoKeyStore::EncryptKeys(CKeyingMaterial& vMasterKeyIn)\n             std::vector<unsigned char> vchCryptedSecret;\n             if (!EncryptSecret(vMasterKeyIn, vchSecret, vchPubKey.GetHash(), vchCryptedSecret))\n                 return false;\n-            std::vector<unsigned char> vchHash;\n-            CalculateCryptedHash(vchPubKey, vchCryptedSecret, vchHash);\n-            if (!AddCryptedKey(vchPubKey, vchCryptedSecret, vchHash))\n+            uint256 hash = Hash(vchPubKey.begin(), vchPubKey.end(), vchCryptedSecret.begin(), vchCryptedSecret.end());\n+            if (!AddCryptedKey(vchPubKey, vchCryptedSecret, hash))\n                 return false;\n         }\n         mapKeys.clear();"
      },
      {
        "sha": "f15dc06efc8bdce3ed180a0683ef631ba347286e",
        "filename": "src/wallet/crypter.h",
        "status": "modified",
        "additions": 1,
        "deletions": 10,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e147d998618cb582b92e8f3609a03018bcaa509/src/wallet/crypter.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e147d998618cb582b92e8f3609a03018bcaa509/src/wallet/crypter.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/crypter.h?ref=6e147d998618cb582b92e8f3609a03018bcaa509",
        "patch": "@@ -156,7 +156,7 @@ class CCryptoKeyStore : public CBasicKeyStore\n \n     bool Lock();\n \n-    virtual bool AddCryptedKey(const CPubKey &vchPubKey, const std::vector<unsigned char> &vchCryptedSecret, const std::vector<unsigned char> &vchHash);\n+    virtual bool AddCryptedKey(const CPubKey &vchPubKey, const std::vector<unsigned char> &vchCryptedSecret, const uint256 &hash);\n     bool AddKeyPubKey(const CKey& key, const CPubKey &pubkey);\n     bool HaveKey(const CKeyID &address) const\n     {\n@@ -186,15 +186,6 @@ class CCryptoKeyStore : public CBasicKeyStore\n         }\n     }\n \n-    static void CalculateCryptedHash(const CPubKey &vchPubKey, const std::vector<unsigned char> &vchCryptedSecret, std::vector<unsigned char> &vchHash) {\n-        vchHash.clear();\n-        vchHash.reserve(32);\n-        CSHA256().\n-        Write(&vchPubKey[0], vchPubKey.size()).\n-        Write(&vchCryptedSecret[0], vchCryptedSecret.size()).\n-        Finalize(&vchHash[0]);\n-    }\n-\n     /**\n      * Wallet status (encrypted, locked) changed.\n      * Note: Called without locks held."
      },
      {
        "sha": "3af4eefbe98f8befb15c2b8675bcf6aefe45e988",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 9,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e147d998618cb582b92e8f3609a03018bcaa509/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e147d998618cb582b92e8f3609a03018bcaa509/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=6e147d998618cb582b92e8f3609a03018bcaa509",
        "patch": "@@ -130,9 +130,9 @@ bool CWallet::AddKeyPubKey(const CKey& secret, const CPubKey &pubkey)\n \n bool CWallet::AddCryptedKey(const CPubKey &vchPubKey,\n                             const vector<unsigned char> &vchCryptedSecret,\n-                            const vector<unsigned char> &vchHash)\n+                            const uint256 &hash)\n {\n-    if (!CCryptoKeyStore::AddCryptedKey(vchPubKey, vchCryptedSecret, vchHash))\n+    if (!CCryptoKeyStore::AddCryptedKey(vchPubKey, vchCryptedSecret, hash))\n         return false;\n     if (!fFileBacked)\n         return true;\n@@ -141,12 +141,12 @@ bool CWallet::AddCryptedKey(const CPubKey &vchPubKey,\n         if (pwalletdbEncryption)\n             return pwalletdbEncryption->WriteCryptedKey(vchPubKey,\n                                                         vchCryptedSecret,\n-                                                        vchHash,\n+                                                        hash,\n                                                         mapKeyMetadata[vchPubKey.GetID()]);\n         else\n             return CWalletDB(strWalletFile).WriteCryptedKey(vchPubKey,\n                                                             vchCryptedSecret,\n-                                                            vchHash,\n+                                                            hash,\n                                                             mapKeyMetadata[vchPubKey.GetID()]);\n     }\n     return false;\n@@ -162,13 +162,12 @@ bool CWallet::LoadKeyMetadata(const CPubKey &pubkey, const CKeyMetadata &meta)\n     return true;\n }\n \n-bool CWallet::LoadCryptedKey(const CPubKey &vchPubKey, const std::vector<unsigned char> &vchCryptedSecret, const std::vector<unsigned char> &vchHash)\n+bool CWallet::LoadCryptedKey(const CPubKey &vchPubKey, const std::vector<unsigned char> &vchCryptedSecret, const uint256 &hash)\n {\n-    std::vector<unsigned char> vchCheckHash;\n-    CCryptoKeyStore::CalculateCryptedHash(vchPubKey, vchCryptedSecret, vchCheckHash);\n-    if (!std::equal(vchHash.begin(), vchHash.end(), vchCheckHash.begin()))\n+    uint256 check_hash = Hash(vchPubKey.begin(), vchPubKey.end(), vchCryptedSecret.begin(), vchCryptedSecret.end());\n+    if (!hash.IsNull() && check_hash != hash)\n         return false;\n-    return CCryptoKeyStore::AddCryptedKey(vchPubKey, vchCryptedSecret, vchHash);\n+    return CCryptoKeyStore::AddCryptedKey(vchPubKey, vchCryptedSecret, hash);\n }\n \n bool CWallet::AddCScript(const CScript& redeemScript)"
      },
      {
        "sha": "ac66f868896b1454ca35affc9411db33d3ee5be9",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e147d998618cb582b92e8f3609a03018bcaa509/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e147d998618cb582b92e8f3609a03018bcaa509/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=6e147d998618cb582b92e8f3609a03018bcaa509",
        "patch": "@@ -584,9 +584,9 @@ class CWallet : public CCryptoKeyStore, public CValidationInterface\n     bool LoadMinVersion(int nVersion) { AssertLockHeld(cs_wallet); nWalletVersion = nVersion; nWalletMaxVersion = std::max(nWalletMaxVersion, nVersion); return true; }\n \n     //! Adds an encrypted key to the store, and saves it to disk.\n-    bool AddCryptedKey(const CPubKey &vchPubKey, const std::vector<unsigned char> &vchCryptedSecret, const std::vector<unsigned char> &vchHash);\n+    bool AddCryptedKey(const CPubKey &vchPubKey, const std::vector<unsigned char> &vchCryptedSecret, const uint256 &hash);\n     //! Adds an encrypted key to the store, without saving it to disk (used by LoadWallet)\n-    bool LoadCryptedKey(const CPubKey &vchPubKey, const std::vector<unsigned char> &vchCryptedSecret, const std::vector<unsigned char> &vchHash);\n+    bool LoadCryptedKey(const CPubKey &vchPubKey, const std::vector<unsigned char> &vchCryptedSecret, const uint256 &hash);\n     bool AddCScript(const CScript& redeemScript);\n     bool LoadCScript(const CScript& redeemScript);\n "
      },
      {
        "sha": "2be4c9c5cc177e08485f660b33e0a890606a93ad",
        "filename": "src/wallet/walletdb.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e147d998618cb582b92e8f3609a03018bcaa509/src/wallet/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e147d998618cb582b92e8f3609a03018bcaa509/src/wallet/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.cpp?ref=6e147d998618cb582b92e8f3609a03018bcaa509",
        "patch": "@@ -85,7 +85,7 @@ bool CWalletDB::WriteKey(const CPubKey& vchPubKey, const CPrivKey& vchPrivKey, c\n \n bool CWalletDB::WriteCryptedKey(const CPubKey& vchPubKey,\n                                 const std::vector<unsigned char>& vchCryptedSecret,\n-                                const vector<unsigned char> &vchHash,\n+                                const uint256 &hash,\n                                 const CKeyMetadata &keyMeta)\n {\n     const bool fEraseUnencryptedKey = true;\n@@ -95,7 +95,7 @@ bool CWalletDB::WriteCryptedKey(const CPubKey& vchPubKey,\n             keyMeta))\n         return false;\n \n-    if (!Write(std::make_pair(std::string(\"ckey\"), vchPubKey), std::make_pair(vchCryptedSecret, vchHash), false))\n+    if (!Write(std::make_pair(std::string(\"ckey\"), vchPubKey), std::make_pair(vchCryptedSecret, hash), false))\n         return false;\n     if (fEraseUnencryptedKey)\n     {\n@@ -524,7 +524,7 @@ ReadKeyValue(CWallet* pwallet, CDataStream& ssKey, CDataStream& ssValue,\n             ssValue >> vchPrivKey;\n             wss.nCKeys++;\n \n-            vector<unsigned char> vchHash;\n+            uint256 hash;\n \n             // Old wallets store keys as \"key\" [pubkey] => [privkey]\n             // ... which was slow for wallets with lots of keys, because the public key is re-derived from the private key\n@@ -533,11 +533,11 @@ ReadKeyValue(CWallet* pwallet, CDataStream& ssKey, CDataStream& ssValue,\n             // remaining backwards-compatible.\n             try\n             {\n-                ssValue >> vchHash;\n+                ssValue >> hash;\n             }\n             catch (...) {}\n \n-            if (!pwallet->LoadCryptedKey(vchPubKey, vchPrivKey, vchHash))\n+            if (!pwallet->LoadCryptedKey(vchPubKey, vchPrivKey, hash))\n             {\n                 strErr = \"Error reading wallet database: LoadCryptedKey failed\";\n                 return false;"
      },
      {
        "sha": "3978b4bd838cfc383ed4759b8ca4a73e9560bd7e",
        "filename": "src/wallet/walletdb.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6e147d998618cb582b92e8f3609a03018bcaa509/src/wallet/walletdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6e147d998618cb582b92e8f3609a03018bcaa509/src/wallet/walletdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.h?ref=6e147d998618cb582b92e8f3609a03018bcaa509",
        "patch": "@@ -89,7 +89,7 @@ class CWalletDB : public CDB\n     bool EraseTx(uint256 hash);\n \n     bool WriteKey(const CPubKey& vchPubKey, const CPrivKey& vchPrivKey, const CKeyMetadata &keyMeta);\n-    bool WriteCryptedKey(const CPubKey& vchPubKey, const std::vector<unsigned char>& vchCryptedSecret, const std::vector<unsigned char>& vchHash, const CKeyMetadata &keyMeta);\n+    bool WriteCryptedKey(const CPubKey& vchPubKey, const std::vector<unsigned char>& vchCryptedSecret, const uint256 &hash, const CKeyMetadata &keyMeta);\n     bool WriteMasterKey(unsigned int nID, const CMasterKey& kMasterKey);\n \n     bool WriteCScript(const uint160& hash, const CScript& redeemScript);"
      }
    ]
  },
  {
    "sha": "4486f02bfbcee403c2ae7313208486425bb614ed",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0NDg2ZjAyYmZiY2VlNDAzYzJhZTczMTMyMDg0ODY0MjViYjYxNGVk",
    "commit": {
      "author": {
        "name": "Patick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2015-11-05T20:44:30Z"
      },
      "committer": {
        "name": "Patick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2015-11-05T20:44:30Z"
      },
      "message": "Skip thorough key validation when the hash matches",
      "tree": {
        "sha": "946c10da19c00acb1aa7f4518ad5ce6f7808d688",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/946c10da19c00acb1aa7f4518ad5ce6f7808d688"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4486f02bfbcee403c2ae7313208486425bb614ed",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4486f02bfbcee403c2ae7313208486425bb614ed",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4486f02bfbcee403c2ae7313208486425bb614ed",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4486f02bfbcee403c2ae7313208486425bb614ed/comments",
    "author": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6e147d998618cb582b92e8f3609a03018bcaa509",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6e147d998618cb582b92e8f3609a03018bcaa509",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6e147d998618cb582b92e8f3609a03018bcaa509"
      }
    ],
    "stats": {
      "total": 28,
      "additions": 17,
      "deletions": 11
    },
    "files": [
      {
        "sha": "d202916e661c6486034aa0e17c0955330abc6cbf",
        "filename": "src/wallet/crypter.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 7,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4486f02bfbcee403c2ae7313208486425bb614ed/src/wallet/crypter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4486f02bfbcee403c2ae7313208486425bb614ed/src/wallet/crypter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/crypter.cpp?ref=4486f02bfbcee403c2ae7313208486425bb614ed",
        "patch": "@@ -174,15 +174,25 @@ bool CCryptoKeyStore::Unlock(const CKeyingMaterial& vMasterKeyIn)\n         {\n             const CPubKey &vchPubKey = (*mi).second.get<0>();\n             const std::vector<unsigned char> &vchCryptedSecret = (*mi).second.get<1>();\n-            CKey key;\n-            if (!DecryptKey(vMasterKeyIn, vchCryptedSecret, vchPubKey, key))\n+            const uint256 &hash = (*mi).second.get<2>();\n+\n+            if (!hash.IsNull()) {\n+                uint256 check_hash = Hash(vchPubKey.begin(), vchPubKey.end(), vchCryptedSecret.begin(), vchCryptedSecret.end());\n+                if (hash != check_hash) {\n+                    keyFail = true;\n+                    break;\n+                }\n+            }\n+            else\n             {\n-                keyFail = true;\n-                break;\n+                CKey key;\n+                if (!DecryptKey(vMasterKeyIn, vchCryptedSecret, vchPubKey, key))\n+                {\n+                    keyFail = true;\n+                    break;\n+                }\n             }\n             keyPass = true;\n-            if (fDecryptionThoroughlyChecked)\n-                break;\n         }\n         if (keyPass && keyFail)\n         {\n@@ -192,7 +202,6 @@ bool CCryptoKeyStore::Unlock(const CKeyingMaterial& vMasterKeyIn)\n         if (keyFail || !keyPass)\n             return false;\n         vMasterKey = vMasterKeyIn;\n-        fDecryptionThoroughlyChecked = true;\n     }\n     NotifyStatusChanged(this);\n     return true;"
      },
      {
        "sha": "ae54a987def41ba3c795605806945d421ea0e8fd",
        "filename": "src/wallet/crypter.h",
        "status": "modified",
        "additions": 1,
        "deletions": 4,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4486f02bfbcee403c2ae7313208486425bb614ed/src/wallet/crypter.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4486f02bfbcee403c2ae7313208486425bb614ed/src/wallet/crypter.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/crypter.h?ref=4486f02bfbcee403c2ae7313208486425bb614ed",
        "patch": "@@ -121,9 +121,6 @@ class CCryptoKeyStore : public CBasicKeyStore\n     //! if fUseCrypto is false, vMasterKey must be empty\n     bool fUseCrypto;\n \n-    //! keeps track of whether Unlock has run a thorough check before\n-    bool fDecryptionThoroughlyChecked;\n-\n protected:\n     bool SetCrypted();\n \n@@ -133,7 +130,7 @@ class CCryptoKeyStore : public CBasicKeyStore\n     bool Unlock(const CKeyingMaterial& vMasterKeyIn);\n \n public:\n-    CCryptoKeyStore() : fUseCrypto(false), fDecryptionThoroughlyChecked(false)\n+    CCryptoKeyStore() : fUseCrypto(false)\n     {\n     }\n "
      }
    ]
  },
  {
    "sha": "2fc1e534c8ad9d2695ff20b434aae94c66826988",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyZmMxZTUzNGM4YWQ5ZDI2OTVmZjIwYjQzNGFhZTk0YzY2ODI2OTg4",
    "commit": {
      "author": {
        "name": "Patick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2015-11-06T06:10:12Z"
      },
      "committer": {
        "name": "Patick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2015-11-06T06:10:12Z"
      },
      "message": "Completely check at least one key",
      "tree": {
        "sha": "b36ff17396710b0e58bc0830e8f105704e996f0d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b36ff17396710b0e58bc0830e8f105704e996f0d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2fc1e534c8ad9d2695ff20b434aae94c66826988",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2fc1e534c8ad9d2695ff20b434aae94c66826988",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2fc1e534c8ad9d2695ff20b434aae94c66826988",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2fc1e534c8ad9d2695ff20b434aae94c66826988/comments",
    "author": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4486f02bfbcee403c2ae7313208486425bb614ed",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4486f02bfbcee403c2ae7313208486425bb614ed",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4486f02bfbcee403c2ae7313208486425bb614ed"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "6b688f7dcc0b897d4ae1455b2bb0541e7cfdb95a",
        "filename": "src/wallet/crypter.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2fc1e534c8ad9d2695ff20b434aae94c66826988/src/wallet/crypter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2fc1e534c8ad9d2695ff20b434aae94c66826988/src/wallet/crypter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/crypter.cpp?ref=2fc1e534c8ad9d2695ff20b434aae94c66826988",
        "patch": "@@ -183,8 +183,8 @@ bool CCryptoKeyStore::Unlock(const CKeyingMaterial& vMasterKeyIn)\n                     break;\n                 }\n             }\n-            else\n-            {\n+\n+            if (hash.IsNull() || !keyPass) {\n                 CKey key;\n                 if (!DecryptKey(vMasterKeyIn, vchCryptedSecret, vchPubKey, key))\n                 {"
      }
    ]
  },
  {
    "sha": "af43e1617f3183c0851ed0c345b6109e5b41081d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphZjQzZTE2MTdmMzE4M2MwODUxZWQwYzM0NWI2MTA5ZTViNDEwODFk",
    "commit": {
      "author": {
        "name": "Patick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2015-11-07T01:01:40Z"
      },
      "committer": {
        "name": "Patick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2015-11-07T01:01:40Z"
      },
      "message": "Drop nominal support for multiple master key entries",
      "tree": {
        "sha": "bba1c79f248065bdc2f458f8a09f6feca0bbfab2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bba1c79f248065bdc2f458f8a09f6feca0bbfab2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/af43e1617f3183c0851ed0c345b6109e5b41081d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/af43e1617f3183c0851ed0c345b6109e5b41081d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/af43e1617f3183c0851ed0c345b6109e5b41081d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/af43e1617f3183c0851ed0c345b6109e5b41081d/comments",
    "author": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2fc1e534c8ad9d2695ff20b434aae94c66826988",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2fc1e534c8ad9d2695ff20b434aae94c66826988",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2fc1e534c8ad9d2695ff20b434aae94c66826988"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 5,
      "deletions": 0
    },
    "files": [
      {
        "sha": "dddc83c16116da599c0edf302f4bdd8d84d65026",
        "filename": "src/wallet/walletdb.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/af43e1617f3183c0851ed0c345b6109e5b41081d/src/wallet/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/af43e1617f3183c0851ed0c345b6109e5b41081d/src/wallet/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.cpp?ref=af43e1617f3183c0851ed0c345b6109e5b41081d",
        "patch": "@@ -510,6 +510,11 @@ ReadKeyValue(CWallet* pwallet, CDataStream& ssKey, CDataStream& ssValue,\n             pwallet->mapMasterKeys[nID] = kMasterKey;\n             if (pwallet->nMasterKeyMaxID < nID)\n                 pwallet->nMasterKeyMaxID = nID;\n+            if(pwallet->mapMasterKeys.size() > 1)\n+            {\n+                strErr = \"Error reading wallet database: multiple CMasterKey entries\";\n+                return false;\n+            }\n         }\n         else if (strType == \"ckey\")\n         {"
      }
    ]
  },
  {
    "sha": "3142c320145bdab969ceee3ebe5f2df07a5dac8f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozMTQyYzMyMDE0NWJkYWI5NjljZWVlM2ViZTVmMmRmMDdhNWRhYzhm",
    "commit": {
      "author": {
        "name": "Patick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2015-11-07T01:18:24Z"
      },
      "committer": {
        "name": "Patick Strateman",
        "email": "patrick.strateman@gmail.com",
        "date": "2015-11-07T01:18:24Z"
      },
      "message": "Remove whitespace",
      "tree": {
        "sha": "bf519d2df695193feadbe7cebf04efb6eec98373",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bf519d2df695193feadbe7cebf04efb6eec98373"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3142c320145bdab969ceee3ebe5f2df07a5dac8f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3142c320145bdab969ceee3ebe5f2df07a5dac8f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3142c320145bdab969ceee3ebe5f2df07a5dac8f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3142c320145bdab969ceee3ebe5f2df07a5dac8f/comments",
    "author": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "af43e1617f3183c0851ed0c345b6109e5b41081d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/af43e1617f3183c0851ed0c345b6109e5b41081d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/af43e1617f3183c0851ed0c345b6109e5b41081d"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 0,
      "deletions": 1
    },
    "files": [
      {
        "sha": "d9c9adecdc3ed895416e8dcb4af1f9179e8f73af",
        "filename": "src/wallet/crypter.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3142c320145bdab969ceee3ebe5f2df07a5dac8f/src/wallet/crypter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3142c320145bdab969ceee3ebe5f2df07a5dac8f/src/wallet/crypter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/crypter.cpp?ref=3142c320145bdab969ceee3ebe5f2df07a5dac8f",
        "patch": "@@ -223,7 +223,6 @@ bool CCryptoKeyStore::AddKeyPubKey(const CKey& key, const CPubKey &pubkey)\n             return false;\n \n         uint256 hash = Hash(pubkey.begin(), pubkey.end(), vchCryptedSecret.begin(), vchCryptedSecret.end());\n-\n         if (!AddCryptedKey(pubkey, vchCryptedSecret, hash))\n             return false;\n     }"
      }
    ]
  }
]