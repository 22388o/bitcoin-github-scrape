[
  {
    "sha": "b54b2e7b1a171203404bd41853372c73f2c64532",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiNTRiMmU3YjFhMTcxMjAzNDA0YmQ0MTg1MzM3MmM3M2YyYzY0NTMy",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2021-03-18T13:17:39Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2021-04-08T15:56:00Z"
      },
      "message": "Move external signer out of wallet module\n\nThis commit moves the ExternalSigner class and RPC methods out of the wallet module.\n\nThe enumeratesigners RPC can be used without a wallet since #21417.\nWith additional modifications external signers could be used without a wallet in general, e.g. via signrawtransaction.\n\nThe signerdisplayaddress RPC is ranamed to walletdisplayaddress because it requires wallet context.\nA future displayaddress RPC call without wallet context could take a descriptor argument.\n\nThis commit fixes a rpc_help.py failure when configured with --disable-wallet.",
      "tree": {
        "sha": "f6d0854fa8a582e536bf8cdd8c0cf51ab51e8250",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f6d0854fa8a582e536bf8cdd8c0cf51ab51e8250"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b54b2e7b1a171203404bd41853372c73f2c64532",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAmBvJ5AACgkQV/+b28ww\nEAn4oA/8DW78iW5CG6N8SpYQwh3N7lIXGfRSV+xXprPj0uqN1d6P8RbFv/C30Yba\nS8fhOKNuhlOx1lezqFhJPwhnEbrnW3yMOc9+KYH5w+clP5vB5p2ZOHISPnmP5yDZ\nSNpHVUVwQdJRxq71ZLIlUNqCjI7gSHwtuzeboZmth5WWL4GM89/5h6d5zgRij5q+\n18yBrwBBbEurIKfjfyTdf8j0BqAbyI9fAZylxDRd78KKJ8KWi53zfkAZIV/aOMSc\nZya5fQUtTpCFCpOkSxkzxmTcs3vPniiOB/jozoD8gVZe8Hdz8wLS9ELYPptcTUn2\naE0CuX+p+ERBEh6GafVLGOgr6mPQ6niXVYHFkLdweyVAaLXxHkMBM3JjB3Mvz3kM\niTt6bbvwQ3CHVRyYcq8CfMBAaKoa/fBcTrxBe7zOdszd0Odw3EucR77iKSr2RQzM\ncI1a9FC3tekNylvqasdSXSBPeAI0UMMySt0uURxrjAFKGaJbw2TFj3iYonQxofgd\nzNStce9++E19QFB6bti4wS6ssPsYeVpAZrz5XYf6G6p6hhIsUcnWajhsr5ZG4DI/\nmru3K4S5NVqYuM6I0GeJirOTrLoI+d9FrYL7w582l8IlTwf0JfHw1/4aqF/KchlW\nmSuRXqKfZkrjbMAxVLMnQ2rP+3YdhDV0ZPtEaKGO3KeGDcLOvyk=\n=MSWG\n-----END PGP SIGNATURE-----",
        "payload": "tree f6d0854fa8a582e536bf8cdd8c0cf51ab51e8250\nparent 6664211be2b664dd471d7aeea12fcf2859dba860\nauthor Sjors Provoost <sjors@sprovoost.nl> 1616073459 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1617897360 +0200\n\nMove external signer out of wallet module\n\nThis commit moves the ExternalSigner class and RPC methods out of the wallet module.\n\nThe enumeratesigners RPC can be used without a wallet since #21417.\nWith additional modifications external signers could be used without a wallet in general, e.g. via signrawtransaction.\n\nThe signerdisplayaddress RPC is ranamed to walletdisplayaddress because it requires wallet context.\nA future displayaddress RPC call without wallet context could take a descriptor argument.\n\nThis commit fixes a rpc_help.py failure when configured with --disable-wallet.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b54b2e7b1a171203404bd41853372c73f2c64532",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b54b2e7b1a171203404bd41853372c73f2c64532",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b54b2e7b1a171203404bd41853372c73f2c64532/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6664211be2b664dd471d7aeea12fcf2859dba860",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6664211be2b664dd471d7aeea12fcf2859dba860",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6664211be2b664dd471d7aeea12fcf2859dba860"
      }
    ],
    "stats": {
      "total": 294,
      "additions": 160,
      "deletions": 134
    },
    "files": [
      {
        "sha": "de44cdd88013cd33a23c2d2be41009e5525fc624",
        "filename": "doc/external-signer.md",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b54b2e7b1a171203404bd41853372c73f2c64532/doc/external-signer.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b54b2e7b1a171203404bd41853372c73f2c64532/doc/external-signer.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/external-signer.md?ref=b54b2e7b1a171203404bd41853372c73f2c64532",
        "patch": "@@ -46,7 +46,7 @@ Display an address on the device:\n \n ```sh\n $ bitcoin-cli -rpcwallet=<wallet> getnewaddress\n-$ bitcoin-cli -rpcwallet=<wallet> signerdisplayaddress <address>\n+$ bitcoin-cli -rpcwallet=<wallet> walletdisplayaddress <address>\n ```\n \n Replace `<address>` with the result of `getnewaddress`.\n@@ -166,6 +166,6 @@ The `createwallet` RPC calls:\n \n It then imports descriptors for all support address types, in a BIP44/49/84 compatible manner.\n \n-The `displayaddress` RPC reuses some code from `getaddressinfo` on the provided address and obtains the inferred descriptor. It then calls `<cmd> --fingerprint=00000000 displayaddress --desc=<descriptor>`.\n+The `walletdisplayaddress` RPC reuses some code from `getaddressinfo` on the provided address and obtains the inferred descriptor. It then calls `<cmd> --fingerprint=00000000 displayaddress --desc=<descriptor>`.\n \n `sendtoaddress` and `sendmany` check `inputs->bip32_derivs` to see if any inputs have the same `master_fingerprint` as the signer. If so, it calls `<cmd> --fingerprint=00000000 signtransaction <psbt>`. It waits for the device to return a (partially) signed psbt, tries to finalize it and broadcasts the transaction."
      },
      {
        "sha": "3359be8a6c160a30395315afb15d0fb985f10a89",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 3,
        "deletions": 4,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b54b2e7b1a171203404bd41853372c73f2c64532/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b54b2e7b1a171203404bd41853372c73f2c64532/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=b54b2e7b1a171203404bd41853372c73f2c64532",
        "patch": "@@ -144,6 +144,7 @@ BITCOIN_CORE_H = \\\n   core_memusage.h \\\n   cuckoocache.h \\\n   dbwrapper.h \\\n+  external_signer.h \\\n   flatfile.h \\\n   fs.h \\\n   httprpc.h \\\n@@ -267,13 +268,11 @@ BITCOIN_CORE_H = \\\n   wallet/crypter.h \\\n   wallet/db.h \\\n   wallet/dump.h \\\n-  wallet/external_signer.h \\\n   wallet/external_signer_scriptpubkeyman.h \\\n   wallet/feebumper.h \\\n   wallet/fees.h \\\n   wallet/ismine.h \\\n   wallet/load.h \\\n-  wallet/rpcsigner.h \\\n   wallet/rpcwallet.h \\\n   wallet/salvage.h \\\n   wallet/scriptpubkeyman.h \\\n@@ -387,13 +386,11 @@ libbitcoin_wallet_a_SOURCES = \\\n   wallet/db.cpp \\\n   wallet/dump.cpp \\\n   wallet/external_signer_scriptpubkeyman.cpp \\\n-  wallet/external_signer.cpp \\\n   wallet/feebumper.cpp \\\n   wallet/fees.cpp \\\n   wallet/interfaces.cpp \\\n   wallet/load.cpp \\\n   wallet/rpcdump.cpp \\\n-  wallet/rpcsigner.cpp \\\n   wallet/rpcwallet.cpp \\\n   wallet/scriptpubkeyman.cpp \\\n   wallet/wallet.cpp \\\n@@ -520,6 +517,7 @@ libbitcoin_common_a_SOURCES = \\\n   compressor.cpp \\\n   core_read.cpp \\\n   core_write.cpp \\\n+  external_signer.cpp \\\n   key.cpp \\\n   key_io.cpp \\\n   merkleblock.cpp \\\n@@ -532,6 +530,7 @@ libbitcoin_common_a_SOURCES = \\\n   protocol.cpp \\\n   psbt.cpp \\\n   rpc/rawtransaction_util.cpp \\\n+  rpc/external_signer.cpp \\\n   rpc/util.cpp \\\n   scheduler.cpp \\\n   script/descriptor.cpp \\"
      },
      {
        "sha": "b82dcc503d6d8a911c75a486e0a87f55e3af77d3",
        "filename": "src/external_signer.cpp",
        "status": "renamed",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b54b2e7b1a171203404bd41853372c73f2c64532/src/external_signer.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b54b2e7b1a171203404bd41853372c73f2c64532/src/external_signer.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/external_signer.cpp?ref=b54b2e7b1a171203404bd41853372c73f2c64532",
        "patch": "@@ -7,7 +7,7 @@\n #include <psbt.h>\n #include <util/strencodings.h>\n #include <util/system.h>\n-#include <wallet/external_signer.h>\n+#include <external_signer.h>\n \n ExternalSigner::ExternalSigner(const std::string& command, const std::string& fingerprint, std::string chain, std::string name): m_command(command), m_fingerprint(fingerprint), m_chain(chain), m_name(name) {}\n ",
        "previous_filename": "src/wallet/external_signer.cpp"
      },
      {
        "sha": "17428ba2f9a4d6443276d2465203a3c03e6a7a9e",
        "filename": "src/external_signer.h",
        "status": "renamed",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b54b2e7b1a171203404bd41853372c73f2c64532/src/external_signer.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b54b2e7b1a171203404bd41853372c73f2c64532/src/external_signer.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/external_signer.h?ref=b54b2e7b1a171203404bd41853372c73f2c64532",
        "patch": "@@ -2,8 +2,8 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#ifndef BITCOIN_WALLET_EXTERNAL_SIGNER_H\n-#define BITCOIN_WALLET_EXTERNAL_SIGNER_H\n+#ifndef BITCOIN_EXTERNAL_SIGNER_H\n+#define BITCOIN_EXTERNAL_SIGNER_H\n \n #include <stdexcept>\n #include <string>\n@@ -48,7 +48,7 @@ class ExternalSigner\n     //! @param[in]              command the command which handles interaction with the external signer\n     //! @param[in,out] signers  vector to which new signers (with a unique master key fingerprint) are added\n     //! @param chain            \"main\", \"test\", \"regtest\" or \"signet\"\n-    //! @param[out] success     Boolean\n+    //! @returns success\n     static bool Enumerate(const std::string& command, std::vector<ExternalSigner>& signers, std::string chain, bool ignore_errors = false);\n \n     //! Display address on the device. Calls `<command> displayaddress --desc <descriptor>`.\n@@ -59,7 +59,7 @@ class ExternalSigner\n     //! Get receive and change Descriptor(s) from device for a given account.\n     //! Calls `<command> getdescriptors --account <account>`\n     //! @param[in] account  which BIP32 account to use (e.g. `m/44'/0'/account'`)\n-    //! @param[out] UniValue see doc/external-signer.md\n+    //! @returns see doc/external-signer.md\n     UniValue GetDescriptors(int account);\n \n     //! Sign PartiallySignedTransaction on the device.\n@@ -70,4 +70,4 @@ class ExternalSigner\n #endif\n };\n \n-#endif // BITCOIN_WALLET_EXTERNAL_SIGNER_H\n+#endif // BITCOIN_EXTERNAL_SIGNER_H",
        "previous_filename": "src/wallet/external_signer.h"
      },
      {
        "sha": "628c6842150a583ef84e523c98da718d7358f87a",
        "filename": "src/rpc/external_signer.cpp",
        "status": "renamed",
        "additions": 8,
        "deletions": 46,
        "changes": 54,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b54b2e7b1a171203404bd41853372c73f2c64532/src/rpc/external_signer.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b54b2e7b1a171203404bd41853372c73f2c64532/src/rpc/external_signer.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/external_signer.cpp?ref=b54b2e7b1a171203404bd41853372c73f2c64532",
        "patch": "@@ -3,13 +3,11 @@\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #include <chainparamsbase.h>\n-#include <key_io.h>\n+#include <external_signer.h>\n #include <rpc/server.h>\n #include <rpc/util.h>\n #include <util/strencodings.h>\n-#include <wallet/rpcsigner.h>\n-#include <wallet/rpcwallet.h>\n-#include <wallet/wallet.h>\n+#include <rpc/protocol.h>\n \n #ifdef ENABLE_EXTERNAL_SIGNER\n \n@@ -33,7 +31,7 @@ static RPCHelpMan enumeratesigners()\n         RPCExamples{\"\"},\n         [](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue {\n             const std::string command = gArgs.GetArg(\"-signer\", \"\");\n-            if (command == \"\") throw JSONRPCError(RPC_WALLET_ERROR, \"Error: restart bitcoind with -signer=<cmd>\");\n+            if (command == \"\") throw JSONRPCError(RPC_MISC_ERROR, \"Error: restart bitcoind with -signer=<cmd>\");\n             std::string chain = gArgs.GetChainName();\n             UniValue signers_res = UniValue::VARR;\n             try {\n@@ -46,7 +44,7 @@ static RPCHelpMan enumeratesigners()\n                     signers_res.push_back(signer_res);\n                 }\n             } catch (const ExternalSignerException& e) {\n-                throw JSONRPCError(RPC_WALLET_ERROR, e.what());\n+                throw JSONRPCError(RPC_MISC_ERROR, e.what());\n             }\n             UniValue result(UniValue::VOBJ);\n             result.pushKV(\"signers\", signers_res);\n@@ -55,54 +53,18 @@ static RPCHelpMan enumeratesigners()\n     };\n }\n \n-static RPCHelpMan signerdisplayaddress()\n+void RegisterSignerRPCCommands(CRPCTable &t)\n {\n-    return RPCHelpMan{\n-        \"signerdisplayaddress\",\n-        \"Display address on an external signer for verification.\\n\",\n-        {\n-            {\"address\",     RPCArg::Type::STR, RPCArg::Optional::NO, /* default_val */ \"\", \"bitcoin address to display\"},\n-        },\n-        RPCResult{RPCResult::Type::NONE,\"\",\"\"},\n-        RPCExamples{\"\"},\n-        [](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue {\n-            std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n-            if (!wallet) return NullUniValue;\n-            CWallet* const pwallet = wallet.get();\n-\n-            LOCK(pwallet->cs_wallet);\n-\n-            CTxDestination dest = DecodeDestination(request.params[0].get_str());\n-\n-            // Make sure the destination is valid\n-            if (!IsValidDestination(dest)) {\n-                throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid address\");\n-            }\n-\n-            if (!pwallet->DisplayAddress(dest)) {\n-                throw JSONRPCError(RPC_WALLET_ERROR, \"Failed to display address\");\n-            }\n-\n-            UniValue result(UniValue::VOBJ);\n-            result.pushKV(\"address\", request.params[0].get_str());\n-            return result;\n-        }\n-    };\n-}\n-\n-Span<const CRPCCommand> GetSignerRPCCommands()\n-{\n-\n // clang-format off\n static const CRPCCommand commands[] =\n { // category              actor (function)\n   // --------------------- ------------------------\n   { \"signer\",              &enumeratesigners,      },\n-  { \"signer\",              &signerdisplayaddress,  },\n };\n // clang-format on\n-    return MakeSpan(commands);\n+    for (const auto& c : commands) {\n+        t.appendCommand(c.name, &c);\n+    }\n }\n \n-\n #endif // ENABLE_EXTERNAL_SIGNER",
        "previous_filename": "src/wallet/rpcsigner.cpp"
      },
      {
        "sha": "6724203ffe75074432d536ccea26f5d70f6e149a",
        "filename": "src/rpc/register.h",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b54b2e7b1a171203404bd41853372c73f2c64532/src/rpc/register.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b54b2e7b1a171203404bd41853372c73f2c64532/src/rpc/register.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/register.h?ref=b54b2e7b1a171203404bd41853372c73f2c64532",
        "patch": "@@ -19,6 +19,8 @@ void RegisterMiscRPCCommands(CRPCTable &tableRPC);\n void RegisterMiningRPCCommands(CRPCTable &tableRPC);\n /** Register raw transaction RPC commands */\n void RegisterRawTransactionRPCCommands(CRPCTable &tableRPC);\n+/** Register raw transaction RPC commands */\n+void RegisterSignerRPCCommands(CRPCTable &tableRPC);\n \n static inline void RegisterAllCoreRPCCommands(CRPCTable &t)\n {\n@@ -27,6 +29,9 @@ static inline void RegisterAllCoreRPCCommands(CRPCTable &t)\n     RegisterMiscRPCCommands(t);\n     RegisterMiningRPCCommands(t);\n     RegisterRawTransactionRPCCommands(t);\n+#ifdef ENABLE_EXTERNAL_SIGNER\n+    RegisterSignerRPCCommands(t);\n+#endif // ENABLE_EXTERNAL_SIGNER\n }\n \n #endif // BITCOIN_RPC_REGISTER_H"
      },
      {
        "sha": "a113c128d763f3defc31f2f8021fa677155d0790",
        "filename": "src/wallet/external_signer_scriptpubkeyman.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b54b2e7b1a171203404bd41853372c73f2c64532/src/wallet/external_signer_scriptpubkeyman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b54b2e7b1a171203404bd41853372c73f2c64532/src/wallet/external_signer_scriptpubkeyman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/external_signer_scriptpubkeyman.cpp?ref=b54b2e7b1a171203404bd41853372c73f2c64532",
        "patch": "@@ -3,7 +3,7 @@\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #include <chainparams.h>\n-#include <wallet/external_signer.h>\n+#include <external_signer.h>\n #include <wallet/external_signer_scriptpubkeyman.h>\n \n #ifdef ENABLE_EXTERNAL_SIGNER"
      },
      {
        "sha": "64ce09d1d126660e764bb2aaae6665f58d4f2fc3",
        "filename": "src/wallet/interfaces.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 12,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b54b2e7b1a171203404bd41853372c73f2c64532/src/wallet/interfaces.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b54b2e7b1a171203404bd41853372c73f2c64532/src/wallet/interfaces.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/interfaces.cpp?ref=b54b2e7b1a171203404bd41853372c73f2c64532",
        "patch": "@@ -22,7 +22,6 @@\n #include <wallet/fees.h>\n #include <wallet/ismine.h>\n #include <wallet/load.h>\n-#include <wallet/rpcsigner.h>\n #include <wallet/rpcwallet.h>\n #include <wallet/wallet.h>\n \n@@ -520,17 +519,6 @@ class WalletClientImpl : public WalletClient\n             }, command.argNames, command.unique_id);\n             m_rpc_handlers.emplace_back(m_context.chain->handleRpc(m_rpc_commands.back()));\n         }\n-\n-#ifdef ENABLE_EXTERNAL_SIGNER\n-        for (const CRPCCommand& command : GetSignerRPCCommands()) {\n-            m_rpc_commands.emplace_back(command.category, command.name, [this, &command](const JSONRPCRequest& request, UniValue& result, bool last_handler) {\n-                JSONRPCRequest wallet_request = request;\n-                wallet_request.context = &m_context;\n-                return command.actor(wallet_request, result, last_handler);\n-            }, command.argNames, command.unique_id);\n-            m_rpc_handlers.emplace_back(m_context.chain->handleRpc(m_rpc_commands.back()));\n-        }\n-#endif\n     }\n     bool verify() override { return VerifyWallets(*m_context.chain); }\n     bool load() override { return LoadWallets(*m_context.chain); }"
      },
      {
        "sha": "f3ab83c4288f808f4fc1e62737fd9631de0cf568",
        "filename": "src/wallet/rpcsigner.h",
        "status": "removed",
        "additions": 0,
        "deletions": 25,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6664211be2b664dd471d7aeea12fcf2859dba860/src/wallet/rpcsigner.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6664211be2b664dd471d7aeea12fcf2859dba860/src/wallet/rpcsigner.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcsigner.h?ref=6664211be2b664dd471d7aeea12fcf2859dba860",
        "patch": "@@ -1,25 +0,0 @@\n-// Copyright (c) 2018-2021 The Bitcoin Core developers\n-// Distributed under the MIT software license, see the accompanying\n-// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-#ifndef BITCOIN_WALLET_RPCSIGNER_H\n-#define BITCOIN_WALLET_RPCSIGNER_H\n-\n-#include <span.h>\n-#include <util/system.h>\n-#include <vector>\n-\n-#ifdef ENABLE_EXTERNAL_SIGNER\n-\n-class CRPCCommand;\n-\n-namespace interfaces {\n-class Chain;\n-class Handler;\n-}\n-\n-Span<const CRPCCommand> GetSignerRPCCommands();\n-\n-#endif // ENABLE_EXTERNAL_SIGNER\n-\n-#endif //BITCOIN_WALLET_RPCSIGNER_H"
      },
      {
        "sha": "dc821dc06d7a42f44598d5a489c6a185459d7749",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 45,
        "deletions": 0,
        "changes": 45,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b54b2e7b1a171203404bd41853372c73f2c64532/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b54b2e7b1a171203404bd41853372c73f2c64532/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=b54b2e7b1a171203404bd41853372c73f2c64532",
        "patch": "@@ -4526,6 +4526,48 @@ static RPCHelpMan upgradewallet()\n     };\n }\n \n+#ifdef ENABLE_EXTERNAL_SIGNER\n+static RPCHelpMan walletdisplayaddress()\n+{\n+    return RPCHelpMan{\n+        \"walletdisplayaddress\",\n+        \"Display address on an external signer for verification.\\n\",\n+        {\n+            {\"address\",     RPCArg::Type::STR, RPCArg::Optional::NO, /* default_val */ \"\", \"bitcoin address to display\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ,\"\",\"\",\n+            {\n+                {RPCResult::Type::STR, \"address\", \"The address as confirmed by the signer\"},\n+            }\n+        },\n+        RPCExamples{\"\"},\n+        [](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue {\n+            std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n+            if (!wallet) return NullUniValue;\n+            CWallet* const pwallet = wallet.get();\n+\n+            LOCK(pwallet->cs_wallet);\n+\n+            CTxDestination dest = DecodeDestination(request.params[0].get_str());\n+\n+            // Make sure the destination is valid\n+            if (!IsValidDestination(dest)) {\n+                throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid address\");\n+            }\n+\n+            if (!pwallet->DisplayAddress(dest)) {\n+                throw JSONRPCError(RPC_MISC_ERROR, \"Failed to display address\");\n+            }\n+\n+            UniValue result(UniValue::VOBJ);\n+            result.pushKV(\"address\", request.params[0].get_str());\n+            return result;\n+        }\n+    };\n+}\n+#endif // ENABLE_EXTERNAL_SIGNER\n+\n RPCHelpMan abortrescan();\n RPCHelpMan dumpprivkey();\n RPCHelpMan importprivkey();\n@@ -4602,6 +4644,9 @@ static const CRPCCommand commands[] =\n     { \"wallet\",             &unloadwallet,                   },\n     { \"wallet\",             &upgradewallet,                  },\n     { \"wallet\",             &walletcreatefundedpsbt,         },\n+#ifdef ENABLE_EXTERNAL_SIGNER\n+    { \"wallet\",             &walletdisplayaddress,           },\n+#endif // ENABLE_EXTERNAL_SIGNER\n     { \"wallet\",             &walletlock,                     },\n     { \"wallet\",             &walletpassphrase,               },\n     { \"wallet\",             &walletpassphrasechange,         },"
      },
      {
        "sha": "149549410c156f065e972c3dec9770a6d6e38f86",
        "filename": "src/wallet/scriptpubkeyman.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b54b2e7b1a171203404bd41853372c73f2c64532/src/wallet/scriptpubkeyman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b54b2e7b1a171203404bd41853372c73f2c64532/src/wallet/scriptpubkeyman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/scriptpubkeyman.cpp?ref=b54b2e7b1a171203404bd41853372c73f2c64532",
        "patch": "@@ -13,7 +13,7 @@\n #include <util/system.h>\n #include <util/time.h>\n #include <util/translation.h>\n-#include <wallet/external_signer.h>\n+#include <external_signer.h>\n #include <wallet/scriptpubkeyman.h>\n \n #include <optional>"
      },
      {
        "sha": "5bf3c91becaadb10aff2b40e2de60e9cd156acdf",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b54b2e7b1a171203404bd41853372c73f2c64532/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b54b2e7b1a171203404bd41853372c73f2c64532/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=b54b2e7b1a171203404bd41853372c73f2c64532",
        "patch": "@@ -22,7 +22,7 @@\n #include <wallet/coinselection.h>\n #include <wallet/crypter.h>\n #include <wallet/scriptpubkeyman.h>\n-#include <wallet/external_signer.h>\n+#include <external_signer.h>\n #include <wallet/walletdb.h>\n #include <wallet/walletutil.h>\n "
      },
      {
        "sha": "3188763f49ee71248a59024dd3a1b72db12dc1a2",
        "filename": "test/functional/rpc_signer.py",
        "status": "added",
        "additions": 79,
        "deletions": 0,
        "changes": 79,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b54b2e7b1a171203404bd41853372c73f2c64532/test/functional/rpc_signer.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b54b2e7b1a171203404bd41853372c73f2c64532/test/functional/rpc_signer.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_signer.py?ref=b54b2e7b1a171203404bd41853372c73f2c64532",
        "patch": "@@ -0,0 +1,79 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017-2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test external signer.\n+\n+Verify that a bitcoind node can use an external signer command.\n+See also wallet_signer.py for tests that require wallet context.\n+\"\"\"\n+import os\n+import platform\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_rpc_error,\n+)\n+\n+\n+class RPCSignerTest(BitcoinTestFramework):\n+    def mock_signer_path(self):\n+        path = os.path.join(os.path.dirname(os.path.realpath(__file__)), 'mocks', 'signer.py')\n+        if platform.system() == \"Windows\":\n+            return \"py \" + path\n+        else:\n+            return path\n+\n+    def set_test_params(self):\n+        self.num_nodes = 4\n+\n+        self.extra_args = [\n+            [],\n+            [f\"-signer={self.mock_signer_path()}\", '-keypool=10'],\n+            [f\"-signer={self.mock_signer_path()}\", '-keypool=10'],\n+            [\"-signer=fake.py\"],\n+        ]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_external_signer()\n+\n+    def set_mock_result(self, node, res):\n+        with open(os.path.join(node.cwd, \"mock_result\"), \"w\", encoding=\"utf8\") as f:\n+            f.write(res)\n+\n+    def clear_mock_result(self, node):\n+        os.remove(os.path.join(node.cwd, \"mock_result\"))\n+\n+    def run_test(self):\n+        self.log.debug(f\"-signer={self.mock_signer_path()}\")\n+\n+        assert_raises_rpc_error(-1, 'Error: restart bitcoind with -signer=<cmd>',\n+            self.nodes[0].enumeratesigners\n+        )\n+\n+        # Handle script missing:\n+        assert_raises_rpc_error(-1, 'execve failed: No such file or directory',\n+            self.nodes[3].enumeratesigners\n+        )\n+\n+        # Handle error thrown by script\n+        self.set_mock_result(self.nodes[1], \"2\")\n+        assert_raises_rpc_error(-1, 'RunCommandParseJSON error',\n+            self.nodes[1].enumeratesigners\n+        )\n+        self.clear_mock_result(self.nodes[1])\n+\n+        self.set_mock_result(self.nodes[1], '0 [{\"type\": \"trezor\", \"model\": \"trezor_t\", \"error\": \"fingerprint not found\"}]')\n+        assert_raises_rpc_error(-1, 'fingerprint not found',\n+            self.nodes[1].enumeratesigners\n+        )\n+        self.clear_mock_result(self.nodes[1])\n+\n+        result = self.nodes[1].enumeratesigners()\n+        assert_equal(len(result['signers']), 2)\n+        assert_equal(result['signers'][0][\"fingerprint\"], \"00000001\")\n+        assert_equal(result['signers'][0][\"name\"], \"trezor_t\")\n+\n+if __name__ == '__main__':\n+    RPCSignerTest().main()"
      },
      {
        "sha": "bd58f2cd51938b8a63b70f5b7df9fceb05915196",
        "filename": "test/functional/test_runner.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b54b2e7b1a171203404bd41853372c73f2c64532/test/functional/test_runner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b54b2e7b1a171203404bd41853372c73f2c64532/test/functional/test_runner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_runner.py?ref=b54b2e7b1a171203404bd41853372c73f2c64532",
        "patch": "@@ -111,6 +111,7 @@\n     'wallet_listtransactions.py --legacy-wallet',\n     'wallet_listtransactions.py --descriptors',\n     'feature_taproot.py',\n+    'rpc_signer.py',\n     'wallet_signer.py --descriptors',\n     # vv Tests less than 60s vv\n     'p2p_sendheaders.py',"
      },
      {
        "sha": "afd4fd3691d4138890e8cd9e29932b2bd8d57b14",
        "filename": "test/functional/wallet_signer.py",
        "status": "modified",
        "additions": 8,
        "deletions": 36,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b54b2e7b1a171203404bd41853372c73f2c64532/test/functional/wallet_signer.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b54b2e7b1a171203404bd41853372c73f2c64532/test/functional/wallet_signer.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_signer.py?ref=b54b2e7b1a171203404bd41853372c73f2c64532",
        "patch": "@@ -5,6 +5,7 @@\n \"\"\"Test external signer.\n \n Verify that a bitcoind node can use an external signer command\n+See also rpc_signer.py for tests without wallet context.\n \"\"\"\n import os\n import platform\n@@ -16,7 +17,7 @@\n )\n \n \n-class SignerTest(BitcoinTestFramework):\n+class WalletSignerTest(BitcoinTestFramework):\n     def mock_signer_path(self):\n         path = os.path.join(os.path.dirname(os.path.realpath(__file__)), 'mocks', 'signer.py')\n         if platform.system() == \"Windows\":\n@@ -25,18 +26,16 @@ def mock_signer_path(self):\n             return path\n \n     def set_test_params(self):\n-        self.num_nodes = 4\n+        self.num_nodes = 2\n \n         self.extra_args = [\n             [],\n             [f\"-signer={self.mock_signer_path()}\", '-keypool=10'],\n-            [f\"-signer={self.mock_signer_path()}\", '-keypool=10'],\n-            [\"-signer=fake.py\"],\n         ]\n \n     def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n         self.skip_if_no_external_signer()\n+        self.skip_if_no_wallet()\n \n     def set_mock_result(self, node, res):\n         with open(os.path.join(node.cwd, \"mock_result\"), \"w\", encoding=\"utf8\") as f:\n@@ -48,28 +47,6 @@ def clear_mock_result(self, node):\n     def run_test(self):\n         self.log.debug(f\"-signer={self.mock_signer_path()}\")\n \n-        assert_raises_rpc_error(-4, 'Error: restart bitcoind with -signer=<cmd>',\n-            self.nodes[0].enumeratesigners\n-        )\n-\n-        # Handle script missing:\n-        assert_raises_rpc_error(-1, 'execve failed: No such file or directory',\n-            self.nodes[3].enumeratesigners\n-        )\n-\n-        # Handle error thrown by script\n-        self.set_mock_result(self.nodes[1], \"2\")\n-        assert_raises_rpc_error(-1, 'RunCommandParseJSON error',\n-            self.nodes[1].enumeratesigners\n-        )\n-        self.clear_mock_result(self.nodes[1])\n-\n-        self.set_mock_result(self.nodes[1], '0 [{\"type\": \"trezor\", \"model\": \"trezor_t\", \"error\": \"fingerprint not found\"}]')\n-        assert_raises_rpc_error(-4, 'fingerprint not found',\n-            self.nodes[1].enumeratesigners\n-        )\n-        self.clear_mock_result(self.nodes[1])\n-\n         # Create new wallets for an external signer.\n         # disable_private_keys and descriptors must be true:\n         assert_raises_rpc_error(-4, \"Private keys must be disabled when using an external signer\", self.nodes[1].createwallet, wallet_name='not_hww', disable_private_keys=False, descriptors=True, external_signer=True)\n@@ -81,11 +58,6 @@ def run_test(self):\n         self.nodes[1].createwallet(wallet_name='hww', disable_private_keys=True, descriptors=True, external_signer=True)\n         hww = self.nodes[1].get_wallet_rpc('hww')\n \n-        result = hww.enumeratesigners()\n-        assert_equal(len(result['signers']), 2)\n-        assert_equal(result['signers'][0][\"fingerprint\"], \"00000001\")\n-        assert_equal(result['signers'][0][\"name\"], \"trezor_t\")\n-\n         # Flag can't be set afterwards (could be added later for non-blank descriptor based watch-only wallets)\n         self.nodes[1].createwallet(wallet_name='not_hww', disable_private_keys=True, descriptors=True, external_signer=False)\n         not_hww = self.nodes[1].get_wallet_rpc('not_hww')\n@@ -123,14 +95,14 @@ def run_test(self):\n         assert_equal(address_info['ismine'], True)\n         assert_equal(address_info['hdkeypath'], \"m/44'/1'/0'/0/0\")\n \n-        self.log.info('Test signerdisplayaddress')\n-        result = hww.signerdisplayaddress(address1)\n+        self.log.info('Test walletdisplayaddress')\n+        result = hww.walletdisplayaddress(address1)\n         assert_equal(result, {\"address\": address1})\n \n         # Handle error thrown by script\n         self.set_mock_result(self.nodes[1], \"2\")\n         assert_raises_rpc_error(-1, 'RunCommandParseJSON error',\n-            hww.signerdisplayaddress, address1\n+            hww.walletdisplayaddress, address1\n         )\n         self.clear_mock_result(self.nodes[1])\n \n@@ -214,4 +186,4 @@ def run_test(self):\n         # self.clear_mock_result(self.nodes[4])\n \n if __name__ == '__main__':\n-    SignerTest().main()\n+    WalletSignerTest().main()"
      }
    ]
  },
  {
    "sha": "b0db187e5b30a491c9f95685430a82a1e35e921d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiMGRiMTg3ZTViMzBhNDkxYzlmOTU2ODU0MzBhODJhMWUzNWU5MjFk",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2021-03-18T14:11:12Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2021-04-08T15:56:00Z"
      },
      "message": "ci: use --enable-external-signer instead of --with-boost-process\n\nAn earlier version of #16546 used both --with-boost-process and --enable-external-signer, which was simplified to only use the latter. However I forgot to update CI, so the external signer tests were not run.",
      "tree": {
        "sha": "2bbefd010fa5309b1bd5d4fea709056c537e68b5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2bbefd010fa5309b1bd5d4fea709056c537e68b5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b0db187e5b30a491c9f95685430a82a1e35e921d",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAmBvJ5AACgkQV/+b28ww\nEAkJ6A//ZY7kuVnTiDa21SsdtIBP8bZ/gxZ8ffsi609rqH9A+8zaM1xwij6HxX68\n9TUNINHW6Vbqaa4ykx+2/lNFOEcfj0fCj1raU5CqCkpHD38IV8ZN5IMBcD7dH2dw\nkHssF6Wwh1ydeoaZyVqSiK2V6DKqOIw3/J7sVG2W/RM5z7QoxQOUnQjHI5w8VmBU\nNvAQN1+UEp0gG0KrG8b3ojU/G0+YpVlnGrzslkiQqQ6G1cu/EKCdvVeuHiiBJUca\njZrqY6EoPt/UYT6s3kmjOEkpjuzSKsoiKD+sR937OdRwtQqHNh54PcBE/PJoTDbb\nS5WDaeIw9Ukmvccuq/5iv0+6r1possWjVAUswdb9I3wL/ZX2qMDix1FMIdsmOFNf\nMcmyXPv5LdjmYU2+zTfWC2/jGM7++/Hi2Hg2w+DgVJU7h3eXub8XHFpnIB9X2mE2\nhlBsBLW7wDvFdwXfVpTF7gydQDofmE3pyIXMn1Y0BxocfoeT/VrS4pOU/VyagWsD\nq6AZXOHXtZHiG7ksqi9bZUHxMQ2pvsqanXPIsdhWxT8/LgM9vaZkyJSJYZ7jUoJq\n1iAFZbHWzfBsaXbvpHor2aPUZlKQKatnAoDFJC+NI2pljZ0o7tCRBdJtUHTHS8kP\n8UrXKYQavI03Yeepw1s+wTK3AdvLDT2tyQRdOWPp/Vz++Ys2O1c=\n=Cxmo\n-----END PGP SIGNATURE-----",
        "payload": "tree 2bbefd010fa5309b1bd5d4fea709056c537e68b5\nparent b54b2e7b1a171203404bd41853372c73f2c64532\nauthor Sjors Provoost <sjors@sprovoost.nl> 1616076672 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1617897360 +0200\n\nci: use --enable-external-signer instead of --with-boost-process\n\nAn earlier version of #16546 used both --with-boost-process and --enable-external-signer, which was simplified to only use the latter. However I forgot to update CI, so the external signer tests were not run.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b0db187e5b30a491c9f95685430a82a1e35e921d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b0db187e5b30a491c9f95685430a82a1e35e921d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b0db187e5b30a491c9f95685430a82a1e35e921d/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b54b2e7b1a171203404bd41853372c73f2c64532",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b54b2e7b1a171203404bd41853372c73f2c64532",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b54b2e7b1a171203404bd41853372c73f2c64532"
      }
    ],
    "stats": {
      "total": 24,
      "additions": 12,
      "deletions": 12
    },
    "files": [
      {
        "sha": "07f099b85ce2e6a31c428b3a4ad8b5321174184e",
        "filename": "ci/test/00_setup_env_arm.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b0db187e5b30a491c9f95685430a82a1e35e921d/ci/test/00_setup_env_arm.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b0db187e5b30a491c9f95685430a82a1e35e921d/ci/test/00_setup_env_arm.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_arm.sh?ref=b0db187e5b30a491c9f95685430a82a1e35e921d",
        "patch": "@@ -25,4 +25,4 @@ export RUN_FUNCTIONAL_TESTS=false\n export GOAL=\"install\"\n # -Wno-psabi is to disable ABI warnings: \"note: parameter passing for argument of type ... changed in GCC 7.1\"\n # This could be removed once the ABI change warning does not show up by default\n-export BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports CXXFLAGS=-Wno-psabi --with-boost-process\"\n+export BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports CXXFLAGS=-Wno-psabi --enable-external-signer\""
      },
      {
        "sha": "05c724fc0bd1689d1ed36cc36373083d620e8f64",
        "filename": "ci/test/00_setup_env_i686_centos.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b0db187e5b30a491c9f95685430a82a1e35e921d/ci/test/00_setup_env_i686_centos.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b0db187e5b30a491c9f95685430a82a1e35e921d/ci/test/00_setup_env_i686_centos.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_i686_centos.sh?ref=b0db187e5b30a491c9f95685430a82a1e35e921d",
        "patch": "@@ -11,6 +11,6 @@ export CONTAINER_NAME=ci_i686_centos_8\n export DOCKER_NAME_TAG=centos:8\n export DOCKER_PACKAGES=\"gcc-c++ glibc-devel.x86_64 libstdc++-devel.x86_64 glibc-devel.i686 libstdc++-devel.i686 ccache libtool make git python3 python3-zmq which patch lbzip2 dash rsync coreutils bison\"\n export GOAL=\"install\"\n-export BITCOIN_CONFIG=\"--enable-zmq --with-gui=qt5 --enable-reduce-exports --with-boost-process\"\n+export BITCOIN_CONFIG=\"--enable-zmq --with-gui=qt5 --enable-reduce-exports --enable-external-signer\"\n export CONFIG_SHELL=\"/bin/dash\"\n export TEST_RUNNER_ENV=\"LC_ALL=en_US.UTF-8\""
      },
      {
        "sha": "f051318a58c691789cf71889b260d1883e1aad00",
        "filename": "ci/test/00_setup_env_mac.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b0db187e5b30a491c9f95685430a82a1e35e921d/ci/test/00_setup_env_mac.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b0db187e5b30a491c9f95685430a82a1e35e921d/ci/test/00_setup_env_mac.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_mac.sh?ref=b0db187e5b30a491c9f95685430a82a1e35e921d",
        "patch": "@@ -15,4 +15,4 @@ export XCODE_BUILD_ID=11C505\n export RUN_UNIT_TESTS=false\n export RUN_FUNCTIONAL_TESTS=false\n export GOAL=\"deploy\"\n-export BITCOIN_CONFIG=\"--with-gui --enable-reduce-exports --with-boost-process\"\n+export BITCOIN_CONFIG=\"--with-gui --enable-reduce-exports --enable-external-signer\""
      },
      {
        "sha": "e54e78add4a64bdd1a8bf69c875e29f2aa7d921c",
        "filename": "ci/test/00_setup_env_mac_host.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b0db187e5b30a491c9f95685430a82a1e35e921d/ci/test/00_setup_env_mac_host.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b0db187e5b30a491c9f95685430a82a1e35e921d/ci/test/00_setup_env_mac_host.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_mac_host.sh?ref=b0db187e5b30a491c9f95685430a82a1e35e921d",
        "patch": "@@ -9,7 +9,7 @@ export LC_ALL=C.UTF-8\n export HOST=x86_64-apple-darwin18\n export PIP_PACKAGES=\"zmq\"\n export GOAL=\"install\"\n-export BITCOIN_CONFIG=\"--with-gui --enable-reduce-exports --with-boost-process\"\n+export BITCOIN_CONFIG=\"--with-gui --enable-reduce-exports --enable-external-signer\"\n export CI_OS_NAME=\"macos\"\n export NO_DEPENDS=1\n export OSX_SDK=\"\""
      },
      {
        "sha": "6039c510188889162c9fe9f5f9491ad5183ecfee",
        "filename": "ci/test/00_setup_env_native_asan.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b0db187e5b30a491c9f95685430a82a1e35e921d/ci/test/00_setup_env_native_asan.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b0db187e5b30a491c9f95685430a82a1e35e921d/ci/test/00_setup_env_native_asan.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_asan.sh?ref=b0db187e5b30a491c9f95685430a82a1e35e921d",
        "patch": "@@ -11,4 +11,4 @@ export PACKAGES=\"clang llvm python3-zmq qtbase5-dev qttools5-dev-tools libevent-\n export DOCKER_NAME_TAG=ubuntu:20.04\n export NO_DEPENDS=1\n export GOAL=\"install\"\n-export BITCOIN_CONFIG=\"--enable-zmq --with-incompatible-bdb --with-gui=qt5 CPPFLAGS='-DARENA_DEBUG -DDEBUG_LOCKORDER' --with-sanitizers=address,integer,undefined CC=clang CXX=clang++ --with-boost-process\"\n+export BITCOIN_CONFIG=\"--enable-zmq --with-incompatible-bdb --with-gui=qt5 CPPFLAGS='-DARENA_DEBUG -DDEBUG_LOCKORDER' --with-sanitizers=address,integer,undefined CC=clang CXX=clang++ --enable-external-signer\""
      },
      {
        "sha": "bedd0cf9aa3f201f3ba1b1da2edf888dcaede7b1",
        "filename": "ci/test/00_setup_env_native_fuzz.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b0db187e5b30a491c9f95685430a82a1e35e921d/ci/test/00_setup_env_native_fuzz.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b0db187e5b30a491c9f95685430a82a1e35e921d/ci/test/00_setup_env_native_fuzz.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_fuzz.sh?ref=b0db187e5b30a491c9f95685430a82a1e35e921d",
        "patch": "@@ -14,5 +14,5 @@ export RUN_UNIT_TESTS=false\n export RUN_FUNCTIONAL_TESTS=false\n export RUN_FUZZ_TESTS=true\n export GOAL=\"install\"\n-export BITCOIN_CONFIG=\"--enable-fuzz --with-sanitizers=fuzzer,address,undefined,integer CC=clang CXX=clang++ --with-boost-process\"\n+export BITCOIN_CONFIG=\"--enable-fuzz --with-sanitizers=fuzzer,address,undefined,integer CC=clang CXX=clang++ --enable-external-signer\"\n export CCACHE_SIZE=200M"
      },
      {
        "sha": "26a3996ce2b36ce2c9fa780f2dc12e4df379a7e8",
        "filename": "ci/test/00_setup_env_native_multiprocess.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b0db187e5b30a491c9f95685430a82a1e35e921d/ci/test/00_setup_env_native_multiprocess.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b0db187e5b30a491c9f95685430a82a1e35e921d/ci/test/00_setup_env_native_multiprocess.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_multiprocess.sh?ref=b0db187e5b30a491c9f95685430a82a1e35e921d",
        "patch": "@@ -11,6 +11,6 @@ export DOCKER_NAME_TAG=ubuntu:20.04\n export PACKAGES=\"cmake python3\"\n export DEP_OPTS=\"MULTIPROCESS=1\"\n export GOAL=\"install\"\n-export BITCOIN_CONFIG=\"--with-boost-process\"\n+export BITCOIN_CONFIG=\"--enable-external-signer\"\n export TEST_RUNNER_ENV=\"BITCOIND=bitcoin-node\"\n export RUN_SECURITY_TESTS=\"true\""
      },
      {
        "sha": "a496b5af6e98a936a5e3338f4ee467fe2d080587",
        "filename": "ci/test/00_setup_env_native_nowallet.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b0db187e5b30a491c9f95685430a82a1e35e921d/ci/test/00_setup_env_native_nowallet.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b0db187e5b30a491c9f95685430a82a1e35e921d/ci/test/00_setup_env_native_nowallet.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_nowallet.sh?ref=b0db187e5b30a491c9f95685430a82a1e35e921d",
        "patch": "@@ -11,4 +11,4 @@ export DOCKER_NAME_TAG=ubuntu:18.04  # Use bionic to have one config run the tes\n export PACKAGES=\"python3-zmq clang-5.0 llvm-5.0\"  # Use clang-5 to test C++17 compatibility, see doc/dependencies.md\n export DEP_OPTS=\"NO_WALLET=1\"\n export GOAL=\"install\"\n-export BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports CC=clang-5.0 CXX=clang++-5.0 --with-boost-process\"\n+export BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports CC=clang-5.0 CXX=clang++-5.0 --enable-external-signer\""
      },
      {
        "sha": "61948ab2219cc52fc91c3cca28e6bb2677a1bde1",
        "filename": "ci/test/00_setup_env_native_qt5.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b0db187e5b30a491c9f95685430a82a1e35e921d/ci/test/00_setup_env_native_qt5.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b0db187e5b30a491c9f95685430a82a1e35e921d/ci/test/00_setup_env_native_qt5.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_qt5.sh?ref=b0db187e5b30a491c9f95685430a82a1e35e921d",
        "patch": "@@ -16,4 +16,4 @@ export RUN_UNIT_TESTS=\"false\"\n export GOAL=\"install\"\n export PREVIOUS_RELEASES_TO_DOWNLOAD=\"v0.15.2 v0.16.3 v0.17.2 v0.18.1 v0.19.1\"\n export BITCOIN_CONFIG=\"--enable-zmq --with-libs=no --with-gui=qt5 --enable-glibc-back-compat --enable-reduce-exports\n---enable-debug --disable-fuzz-binary  CFLAGS=\\\"-g0 -O2 -funsigned-char\\\" CXXFLAGS=\\\"-g0 -O2 -funsigned-char\\\" --with-boost-process\"\n+--enable-debug --disable-fuzz-binary  CFLAGS=\\\"-g0 -O2 -funsigned-char\\\" CXXFLAGS=\\\"-g0 -O2 -funsigned-char\\\" --enable-external-signer\""
      },
      {
        "sha": "d3875fc04543442e5c2bf211f6febd42911daad3",
        "filename": "ci/test/00_setup_env_native_tsan.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b0db187e5b30a491c9f95685430a82a1e35e921d/ci/test/00_setup_env_native_tsan.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b0db187e5b30a491c9f95685430a82a1e35e921d/ci/test/00_setup_env_native_tsan.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_tsan.sh?ref=b0db187e5b30a491c9f95685430a82a1e35e921d",
        "patch": "@@ -11,4 +11,4 @@ export DOCKER_NAME_TAG=ubuntu:20.04\n export PACKAGES=\"clang llvm libc++abi-dev libc++-dev python3-zmq\"\n export DEP_OPTS=\"CC=clang CXX='clang++ -stdlib=libc++'\"\n export GOAL=\"install\"\n-export BITCOIN_CONFIG=\"--enable-zmq --with-gui=no CPPFLAGS='-DARENA_DEBUG -DDEBUG_LOCKORDER' CXXFLAGS='-g' --with-sanitizers=thread CC=clang CXX='clang++ -stdlib=libc++' --with-boost-process\"\n+export BITCOIN_CONFIG=\"--enable-zmq --with-gui=no CPPFLAGS='-DARENA_DEBUG -DDEBUG_LOCKORDER' CXXFLAGS='-g' --with-sanitizers=thread CC=clang CXX='clang++ -stdlib=libc++' --enable-external-signer\""
      },
      {
        "sha": "88b431f3c75cc83dbe198bc7425edd5978a000a5",
        "filename": "ci/test/00_setup_env_s390x.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b0db187e5b30a491c9f95685430a82a1e35e921d/ci/test/00_setup_env_s390x.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b0db187e5b30a491c9f95685430a82a1e35e921d/ci/test/00_setup_env_s390x.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_s390x.sh?ref=b0db187e5b30a491c9f95685430a82a1e35e921d",
        "patch": "@@ -23,4 +23,4 @@ export RUN_UNIT_TESTS=true\n export TEST_RUNNER_ENV=\"LC_ALL=C\"\n export RUN_FUNCTIONAL_TESTS=true\n export GOAL=\"install\"\n-export BITCOIN_CONFIG=\"--enable-reduce-exports --with-incompatible-bdb --with-boost-process\"\n+export BITCOIN_CONFIG=\"--enable-reduce-exports --with-incompatible-bdb --enable-external-signer\""
      },
      {
        "sha": "4d5bde13fddac6ec8a4756dd6d70c5bfc48052cd",
        "filename": "ci/test/00_setup_env_win64.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b0db187e5b30a491c9f95685430a82a1e35e921d/ci/test/00_setup_env_win64.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b0db187e5b30a491c9f95685430a82a1e35e921d/ci/test/00_setup_env_win64.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_win64.sh?ref=b0db187e5b30a491c9f95685430a82a1e35e921d",
        "patch": "@@ -13,7 +13,7 @@ export DPKG_ADD_ARCH=\"i386\"\n export PACKAGES=\"python3 nsis g++-mingw-w64-x86-64 wine-binfmt wine64 wine32 file\"\n export RUN_FUNCTIONAL_TESTS=false\n export GOAL=\"deploy\"\n-export BITCOIN_CONFIG=\"--enable-reduce-exports --disable-gui-tests --without-boost-process\"\n+export BITCOIN_CONFIG=\"--enable-reduce-exports --disable-gui-tests --disable-external-signer\"\n \n # Compiler for MinGW-w64 causes false -Wreturn-type warning.\n # See https://sourceforge.net/p/mingw-w64/bugs/306/"
      }
    ]
  },
  {
    "sha": "88d4d5ff2f5c71a9a2f4c78c2b2e2fd00568cfee",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4OGQ0ZDVmZjJmNWM3MWE5YTJmNGM3OGMyYjJlMmZkMDA1NjhjZmVl",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2021-03-26T09:28:37Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2021-04-08T15:56:00Z"
      },
      "message": "rpc: add help for enumeratesigners and walletdisplayaddress",
      "tree": {
        "sha": "e8585072ff643c460a99b142f218b2a8fca956e1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e8585072ff643c460a99b142f218b2a8fca956e1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/88d4d5ff2f5c71a9a2f4c78c2b2e2fd00568cfee",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAmBvJ5AACgkQV/+b28ww\nEAn32RAAtoS/BSvTnRHie637/4Y+obIZdQbihieCQpZaqOrCwnzJ1hAf78eZjMyn\nCwD/NI98Ao8mCpQM9PXJuFzwpWPnKF2/6zI1tmxXcdT2/iAdvbbiMUwmApak4ccO\nNl8bXN49DrT7UdqruCFf8RasdXMc62LzSRij2oD/mHYi4yetEQbbGLP8Vyvc5HL7\nv1X9Y9nwiQJzJvVSIsOVVI6PjZx1zAdZJdjTk+WDRSq296xIDw8QRqhySAEa0a2Y\nGibS+bcQWWiwWDF7zw/GlmyX/cN5a781X9NaUjMhXqKtTO3MSWtxGBn8x/rnYDOf\nv5sGaS4oYTudVkVHcbLCDyCsf11oV10d2JLrD6YcxHv5QdWr5eWbA9wKebYiye32\nhN0ERYlh7QgGNsE2CUuJgQ2UwhyKbPUqaPnjxq7oG8hyU8NKEvXBAr3e1lFuuRO4\nFkIQ1EZykJk0l1F/CLKr5j1H2dw0eoHL1JAIq4I5n8+ZpMrgL7V0zeibJM9c9+sC\nkgDWOu95tMMAKdZ/9Keu+7dbfNKbpPDYktaai5OMjMc964pBnxc5sV8b8f1FuHvb\naeMUE/vJY5Tu+goQ0qBtLYCAVEmx9lD1bT18Jqbgey7kQEs/6pduShpHZXdgB5WA\nZ+qIbjDzNSbJQJtzS/7bIBapKnrW7H6QVGhMhnXEJ4J9UhsuNhM=\n=aTdU\n-----END PGP SIGNATURE-----",
        "payload": "tree e8585072ff643c460a99b142f218b2a8fca956e1\nparent b0db187e5b30a491c9f95685430a82a1e35e921d\nauthor Sjors Provoost <sjors@sprovoost.nl> 1616750917 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1617897360 +0200\n\nrpc: add help for enumeratesigners and walletdisplayaddress\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/88d4d5ff2f5c71a9a2f4c78c2b2e2fd00568cfee",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/88d4d5ff2f5c71a9a2f4c78c2b2e2fd00568cfee",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/88d4d5ff2f5c71a9a2f4c78c2b2e2fd00568cfee/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b0db187e5b30a491c9f95685430a82a1e35e921d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b0db187e5b30a491c9f95685430a82a1e35e921d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b0db187e5b30a491c9f95685430a82a1e35e921d"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 11,
      "deletions": 8
    },
    "files": [
      {
        "sha": "0f8f197ad84a81e4b5b9b7219c5d0c9d9c329576",
        "filename": "src/rpc/external_signer.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 4,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/88d4d5ff2f5c71a9a2f4c78c2b2e2fd00568cfee/src/rpc/external_signer.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/88d4d5ff2f5c71a9a2f4c78c2b2e2fd00568cfee/src/rpc/external_signer.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/external_signer.cpp?ref=88d4d5ff2f5c71a9a2f4c78c2b2e2fd00568cfee",
        "patch": "@@ -13,8 +13,7 @@\n \n static RPCHelpMan enumeratesigners()\n {\n-    return RPCHelpMan{\n-        \"enumeratesigners\",\n+    return RPCHelpMan{\"enumeratesigners\",\n         \"Returns a list of external signers from -signer.\",\n         {},\n         RPCResult{\n@@ -28,8 +27,12 @@ static RPCHelpMan enumeratesigners()\n                 }\n             }\n         },\n-        RPCExamples{\"\"},\n-        [](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue {\n+        RPCExamples{\n+            HelpExampleCli(\"enumeratesigners\", \"\")\n+            + HelpExampleRpc(\"enumeratesigners\", \"\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+        {\n             const std::string command = gArgs.GetArg(\"-signer\", \"\");\n             if (command == \"\") throw JSONRPCError(RPC_MISC_ERROR, \"Error: restart bitcoind with -signer=<cmd>\");\n             std::string chain = gArgs.GetChainName();"
      },
      {
        "sha": "a3e42a34d965c0ac509e77a114849ca0bb567235",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/88d4d5ff2f5c71a9a2f4c78c2b2e2fd00568cfee/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/88d4d5ff2f5c71a9a2f4c78c2b2e2fd00568cfee/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=88d4d5ff2f5c71a9a2f4c78c2b2e2fd00568cfee",
        "patch": "@@ -4529,9 +4529,8 @@ static RPCHelpMan upgradewallet()\n #ifdef ENABLE_EXTERNAL_SIGNER\n static RPCHelpMan walletdisplayaddress()\n {\n-    return RPCHelpMan{\n-        \"walletdisplayaddress\",\n-        \"Display address on an external signer for verification.\\n\",\n+    return RPCHelpMan{\"walletdisplayaddress\",\n+        \"Display address on an external signer for verification.\",\n         {\n             {\"address\",     RPCArg::Type::STR, RPCArg::Optional::NO, /* default_val */ \"\", \"bitcoin address to display\"},\n         },\n@@ -4542,7 +4541,8 @@ static RPCHelpMan walletdisplayaddress()\n             }\n         },\n         RPCExamples{\"\"},\n-        [](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue {\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+        {\n             std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n             if (!wallet) return NullUniValue;\n             CWallet* const pwallet = wallet.get();"
      }
    ]
  }
]