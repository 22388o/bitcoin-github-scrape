[
  {
    "sha": "cde277c1dcfcf2b75914d16e4d66a21516b64ea1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjZGUyNzdjMWRjZmNmMmI3NTkxNGQxNmU0ZDY2YTIxNTE2YjY0ZWEx",
    "commit": {
      "author": {
        "name": "DVH1990",
        "email": "daniel.blank1990@gmail.com",
        "date": "2019-06-02T13:59:34Z"
      },
      "committer": {
        "name": "DVH1990",
        "email": "daniel.blank1990@gmail.com",
        "date": "2019-06-02T13:59:34Z"
      },
      "message": "Refnet base numbers updated over Bitcoin\n\nCo-authored-by: Eli Sklar <eli.sklar@gmail.com>",
      "tree": {
        "sha": "c351d7f0b0cefc154b757ea8d4aff1f94fdef22f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c351d7f0b0cefc154b757ea8d4aff1f94fdef22f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cde277c1dcfcf2b75914d16e4d66a21516b64ea1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cde277c1dcfcf2b75914d16e4d66a21516b64ea1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cde277c1dcfcf2b75914d16e4d66a21516b64ea1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cde277c1dcfcf2b75914d16e4d66a21516b64ea1/comments",
    "author": {
      "login": "DVH1990",
      "id": 12988548,
      "node_id": "MDQ6VXNlcjEyOTg4NTQ4",
      "avatar_url": "https://avatars.githubusercontent.com/u/12988548?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DVH1990",
      "html_url": "https://github.com/DVH1990",
      "followers_url": "https://api.github.com/users/DVH1990/followers",
      "following_url": "https://api.github.com/users/DVH1990/following{/other_user}",
      "gists_url": "https://api.github.com/users/DVH1990/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DVH1990/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DVH1990/subscriptions",
      "organizations_url": "https://api.github.com/users/DVH1990/orgs",
      "repos_url": "https://api.github.com/users/DVH1990/repos",
      "events_url": "https://api.github.com/users/DVH1990/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DVH1990/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "DVH1990",
      "id": 12988548,
      "node_id": "MDQ6VXNlcjEyOTg4NTQ4",
      "avatar_url": "https://avatars.githubusercontent.com/u/12988548?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DVH1990",
      "html_url": "https://github.com/DVH1990",
      "followers_url": "https://api.github.com/users/DVH1990/followers",
      "following_url": "https://api.github.com/users/DVH1990/following{/other_user}",
      "gists_url": "https://api.github.com/users/DVH1990/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DVH1990/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DVH1990/subscriptions",
      "organizations_url": "https://api.github.com/users/DVH1990/orgs",
      "repos_url": "https://api.github.com/users/DVH1990/repos",
      "events_url": "https://api.github.com/users/DVH1990/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DVH1990/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "12fd4bbd1ed928e3ce2f6ce2118bbaec07898bac",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/12fd4bbd1ed928e3ce2f6ce2118bbaec07898bac",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/12fd4bbd1ed928e3ce2f6ce2118bbaec07898bac"
      }
    ],
    "stats": {
      "total": 66,
      "additions": 19,
      "deletions": 47
    },
    "files": [
      {
        "sha": "ed5535f21f7f7f6316cac3a39992d31aed509f9c",
        "filename": "src/amount.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cde277c1dcfcf2b75914d16e4d66a21516b64ea1/src/amount.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cde277c1dcfcf2b75914d16e4d66a21516b64ea1/src/amount.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/amount.h?ref=cde277c1dcfcf2b75914d16e4d66a21516b64ea1",
        "patch": "@@ -22,7 +22,7 @@ static const CAmount COIN = 100000000;\n  * critical; in unusual circumstances like a(nother) overflow bug that allowed\n  * for the creation of coins out of thin air modification could lead to a fork.\n  * */\n-static const CAmount MAX_MONEY = 21000000 * COIN;\n+static const CAmount MAX_MONEY = 2147483648 * COIN;\n inline bool MoneyRange(const CAmount& nValue) { return (nValue >= 0 && nValue <= MAX_MONEY); }\n \n #endif //  BITCOIN_AMOUNT_H"
      },
      {
        "sha": "f2baec5e14ea362edbd9e6fe9ecd106d36273870",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 40,
        "changes": 50,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cde277c1dcfcf2b75914d16e4d66a21516b64ea1/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cde277c1dcfcf2b75914d16e4d66a21516b64ea1/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=cde277c1dcfcf2b75914d16e4d66a21516b64ea1",
        "patch": "@@ -63,7 +63,7 @@ class CMainParams : public CChainParams {\n public:\n     CMainParams() {\n         strNetworkID = \"main\";\n-        consensus.nSubsidyHalvingInterval = 210000;\n+        consensus.nSubsidyHalvingInterval = 524288;\n         consensus.BIP16Exception = uint256S(\"0x00000000000002dc756eebf4f49723ed8d30cc28a5f108eb94b1ba88ac4f9c22\");\n         consensus.BIP34Height = 227931;\n         consensus.BIP34Hash = uint256S(\"0x000000000000024b89b42a942fe0d9fea3bb44ab7bd1b19115dd6a759c0808b8\");\n@@ -91,7 +91,7 @@ class CMainParams : public CChainParams {\n         consensus.vDeployments[Consensus::DEPLOYMENT_SEGWIT].nTimeout = 1510704000; // November 15th, 2017.\n \n         // The best chain should have at least this much work.\n-        consensus.nMinimumChainWork = uint256S(\"0x0000000000000000000000000000000000000000051dc8b82f450202ecb3d471\");\n+        consensus.nMinimumChainWork = uint256S(\"0x0000000000000000000000000000000000000000000000000000000100010001\");\n \n         // By default assume that the signatures in ancestors of this block are valid.\n         consensus.defaultAssumeValid = uint256S(\"0x0000000000000000000f1c54590ee18d15ec70e68c8cd4cfbadb1b4f11697eee\"); //563378\n@@ -101,11 +101,11 @@ class CMainParams : public CChainParams {\n          * The characters are rarely used upper ASCII, not valid as UTF-8, and produce\n          * a large 32-bit integer with any alignment.\n          */\n-        pchMessageStart[0] = 0xf9;\n-        pchMessageStart[1] = 0xbe;\n-        pchMessageStart[2] = 0xb4;\n-        pchMessageStart[3] = 0xd9;\n-        nDefaultPort = 8333;\n+        pchMessageStart[0] = 0xe8;\n+        pchMessageStart[1] = 0xb1;\n+        pchMessageStart[2] = 0xb9;\n+        pchMessageStart[3] = 0xd2;\n+        nDefaultPort = 11333;\n         nPruneAfterHeight = 100000;\n         m_assumed_blockchain_size = 240;\n         m_assumed_chain_state_size = 3;\n@@ -115,22 +115,8 @@ class CMainParams : public CChainParams {\n         assert(consensus.hashGenesisBlock == uint256S(\"0x000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f\"));\n         assert(genesis.hashMerkleRoot == uint256S(\"0x4a5e1e4baab89f3a32518a88c31bc87f618f76673e2cc77ab2127b7afdeda33b\"));\n \n-        // Note that of those which support the service bits prefix, most only support a subset of\n-        // possible options.\n-        // This is fine at runtime as we'll fall back to using them as a oneshot if they don't support the\n-        // service bits we want, but we should get them updated to support all service bits wanted by any\n-        // release ASAP to avoid it where possible.\n-        vSeeds.emplace_back(\"seed.bitcoin.sipa.be\"); // Pieter Wuille, only supports x1, x5, x9, and xd\n-        vSeeds.emplace_back(\"dnsseed.bluematt.me\"); // Matt Corallo, only supports x9\n-        vSeeds.emplace_back(\"dnsseed.bitcoin.dashjr.org\"); // Luke Dashjr\n-        vSeeds.emplace_back(\"seed.bitcoinstats.com\"); // Christian Decker, supports x1 - xf\n-        vSeeds.emplace_back(\"seed.bitcoin.jonasschnelli.ch\"); // Jonas Schnelli, only supports x1, x5, x9, and xd\n-        vSeeds.emplace_back(\"seed.btc.petertodd.org\"); // Peter Todd, only supports x1, x5, x9, and xd\n-        vSeeds.emplace_back(\"seed.bitcoin.sprovoost.nl\"); // Sjors Provoost\n-        vSeeds.emplace_back(\"dnsseed.emzy.de\"); // Stephan Oeste\n-\n-        base58Prefixes[PUBKEY_ADDRESS] = std::vector<unsigned char>(1,0);\n-        base58Prefixes[SCRIPT_ADDRESS] = std::vector<unsigned char>(1,5);\n+        base58Prefixes[PUBKEY_ADDRESS] = std::vector<unsigned char>(1,63);\n+        base58Prefixes[SCRIPT_ADDRESS] = std::vector<unsigned char>(1,25);\n         base58Prefixes[SECRET_KEY] =     std::vector<unsigned char>(1,128);\n         base58Prefixes[EXT_PUBLIC_KEY] = {0x04, 0x88, 0xB2, 0x1E};\n         base58Prefixes[EXT_SECRET_KEY] = {0x04, 0x88, 0xAD, 0xE4};\n@@ -143,23 +129,7 @@ class CMainParams : public CChainParams {\n         fRequireStandard = true;\n         fMineBlocksOnDemand = false;\n \n-        checkpointData = {\n-            {\n-                { 11111, uint256S(\"0x0000000069e244f73d78e8fd29ba2fd2ed618bd6fa2ee92559f542fdb26e7c1d\")},\n-                { 33333, uint256S(\"0x000000002dd5588a74784eaa7ab0507a18ad16a236e7b1ce69f00d7ddfb5d0a6\")},\n-                { 74000, uint256S(\"0x0000000000573993a3c9e41ce34471c079dcf5f52a0e824a81e7f953b8661a20\")},\n-                {105000, uint256S(\"0x00000000000291ce28027faea320c8d2b054b2e0fe44a773f3eefb151d6bdc97\")},\n-                {134444, uint256S(\"0x00000000000005b12ffd4cd315cd34ffd4a594f430ac814c91184a0d42d2b0fe\")},\n-                {168000, uint256S(\"0x000000000000099e61ea72015e79632f216fe6cb33d7899acb35b75c8303b763\")},\n-                {193000, uint256S(\"0x000000000000059f452a5f7340de6682a977387c17010ff6e6c3bd83ca8b1317\")},\n-                {210000, uint256S(\"0x000000000000048b95347e83192f69cf0366076336c639f9b7228e9ba171342e\")},\n-                {216116, uint256S(\"0x00000000000001b4f4b433e81ee46494af945cf96014816a4e2370f11b23df4e\")},\n-                {225430, uint256S(\"0x00000000000001c108384350f74090433e7fcf79a606b8e797f065b130575932\")},\n-                {250000, uint256S(\"0x000000000000003887df1f29024b06fc2200b55f8af8f35453d7be294df2d214\")},\n-                {279000, uint256S(\"0x0000000000000001ae8c72a0b0c301f67e3afca10e819efa9041e458e9bd7e40\")},\n-                {295000, uint256S(\"0x00000000000000004d9b4ef50f0f9d686fd69db2e03af35a100370c64632a983\")},\n-            }\n-        };\n+        checkpointData = {};\n \n         chainTxData = ChainTxData{\n             // Data from rpc: getchaintxstats 4096 0000000000000000000f1c54590ee18d15ec70e68c8cd4cfbadb1b4f11697eee"
      },
      {
        "sha": "0b37b43a52145b6c94ec051d2129fcd837ee4654",
        "filename": "src/chainparamsbase.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cde277c1dcfcf2b75914d16e4d66a21516b64ea1/src/chainparamsbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cde277c1dcfcf2b75914d16e4d66a21516b64ea1/src/chainparamsbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparamsbase.cpp?ref=cde277c1dcfcf2b75914d16e4d66a21516b64ea1",
        "patch": "@@ -34,11 +34,11 @@ const CBaseChainParams& BaseParams()\n std::unique_ptr<CBaseChainParams> CreateBaseChainParams(const std::string& chain)\n {\n     if (chain == CBaseChainParams::MAIN)\n-        return MakeUnique<CBaseChainParams>(\"\", 8332);\n+        return MakeUnique<CBaseChainParams>(\"\", 11332);\n     else if (chain == CBaseChainParams::TESTNET)\n-        return MakeUnique<CBaseChainParams>(\"testnet3\", 18332);\n+        return MakeUnique<CBaseChainParams>(\"testnet3\", 21332);\n     else if (chain == CBaseChainParams::REGTEST)\n-        return MakeUnique<CBaseChainParams>(\"regtest\", 18443);\n+        return MakeUnique<CBaseChainParams>(\"regtest\", 21443);\n     else\n         throw std::runtime_error(strprintf(\"%s: Unknown chain %s.\", __func__, chain));\n }"
      },
      {
        "sha": "d3fdc84dc08329e08d778c6ae9d2bffe0769330b",
        "filename": "src/consensus/consensus.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cde277c1dcfcf2b75914d16e4d66a21516b64ea1/src/consensus/consensus.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cde277c1dcfcf2b75914d16e4d66a21516b64ea1/src/consensus/consensus.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/consensus.h?ref=cde277c1dcfcf2b75914d16e4d66a21516b64ea1",
        "patch": "@@ -16,7 +16,7 @@ static const unsigned int MAX_BLOCK_WEIGHT = 4000000;\n /** The maximum allowed number of signature check operations in a block (network rule) */\n static const int64_t MAX_BLOCK_SIGOPS_COST = 80000;\n /** Coinbase transaction outputs can only be spent after this number of new blocks (network rule) */\n-static const int COINBASE_MATURITY = 100;\n+static const int COINBASE_MATURITY = 1000;\n \n static const int WITNESS_SCALE_FACTOR = 4;\n "
      },
      {
        "sha": "a98cfe5c83afbcbb425c0e4e7fdd942492feddb1",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cde277c1dcfcf2b75914d16e4d66a21516b64ea1/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cde277c1dcfcf2b75914d16e4d66a21516b64ea1/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=cde277c1dcfcf2b75914d16e4d66a21516b64ea1",
        "patch": "@@ -1162,8 +1162,10 @@ CAmount GetBlockSubsidy(int nHeight, const Consensus::Params& consensusParams)\n     if (halvings >= 64)\n         return 0;\n \n-    CAmount nSubsidy = 50 * COIN;\n-    // Subsidy is cut in half every 210,000 blocks which will occur approximately every 4 years.\n+    // Initial block reward 4096 coins\n+    CAmount nSubsidy = 4096 * COIN;\n+\n+    // Subsidy is cut in half every 524,288 blocks which will occur approximately every 2 years.\n     nSubsidy >>= halvings;\n     return nSubsidy;\n }"
      }
    ]
  },
  {
    "sha": "38b88f6dc72ff750ed73f18469fc821fc8b24d62",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozOGI4OGY2ZGM3MmZmNzUwZWQ3M2YxODQ2OWZjODIxZmM4YjI0ZDYy",
    "commit": {
      "author": {
        "name": "DVH1990",
        "email": "daniel.blank1990@gmail.com",
        "date": "2019-06-03T14:24:25Z"
      },
      "committer": {
        "name": "DVH1990",
        "email": "daniel.blank1990@gmail.com",
        "date": "2019-06-03T14:24:25Z"
      },
      "message": "Tweaking params",
      "tree": {
        "sha": "871353d266bc3bd76bdd6960ad688e5c12be53db",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/871353d266bc3bd76bdd6960ad688e5c12be53db"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/38b88f6dc72ff750ed73f18469fc821fc8b24d62",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/38b88f6dc72ff750ed73f18469fc821fc8b24d62",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/38b88f6dc72ff750ed73f18469fc821fc8b24d62",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/38b88f6dc72ff750ed73f18469fc821fc8b24d62/comments",
    "author": {
      "login": "DVH1990",
      "id": 12988548,
      "node_id": "MDQ6VXNlcjEyOTg4NTQ4",
      "avatar_url": "https://avatars.githubusercontent.com/u/12988548?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DVH1990",
      "html_url": "https://github.com/DVH1990",
      "followers_url": "https://api.github.com/users/DVH1990/followers",
      "following_url": "https://api.github.com/users/DVH1990/following{/other_user}",
      "gists_url": "https://api.github.com/users/DVH1990/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DVH1990/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DVH1990/subscriptions",
      "organizations_url": "https://api.github.com/users/DVH1990/orgs",
      "repos_url": "https://api.github.com/users/DVH1990/repos",
      "events_url": "https://api.github.com/users/DVH1990/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DVH1990/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "DVH1990",
      "id": 12988548,
      "node_id": "MDQ6VXNlcjEyOTg4NTQ4",
      "avatar_url": "https://avatars.githubusercontent.com/u/12988548?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DVH1990",
      "html_url": "https://github.com/DVH1990",
      "followers_url": "https://api.github.com/users/DVH1990/followers",
      "following_url": "https://api.github.com/users/DVH1990/following{/other_user}",
      "gists_url": "https://api.github.com/users/DVH1990/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DVH1990/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DVH1990/subscriptions",
      "organizations_url": "https://api.github.com/users/DVH1990/orgs",
      "repos_url": "https://api.github.com/users/DVH1990/repos",
      "events_url": "https://api.github.com/users/DVH1990/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DVH1990/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cde277c1dcfcf2b75914d16e4d66a21516b64ea1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cde277c1dcfcf2b75914d16e4d66a21516b64ea1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cde277c1dcfcf2b75914d16e4d66a21516b64ea1"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "176cac86168ed65ca3519c3289fb13488e6d3f85",
        "filename": "src/amount.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/38b88f6dc72ff750ed73f18469fc821fc8b24d62/src/amount.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/38b88f6dc72ff750ed73f18469fc821fc8b24d62/src/amount.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/amount.h?ref=38b88f6dc72ff750ed73f18469fc821fc8b24d62",
        "patch": "@@ -22,7 +22,7 @@ static const CAmount COIN = 100000000;\n  * critical; in unusual circumstances like a(nother) overflow bug that allowed\n  * for the creation of coins out of thin air modification could lead to a fork.\n  * */\n-static const CAmount MAX_MONEY = 2147483648 * COIN;\n+static const CAmount MAX_MONEY = 4294967296 * COIN;\n inline bool MoneyRange(const CAmount& nValue) { return (nValue >= 0 && nValue <= MAX_MONEY); }\n \n #endif //  BITCOIN_AMOUNT_H"
      },
      {
        "sha": "788fa4e55b3e7564af5154efd5c9b5c5460277d8",
        "filename": "src/consensus/consensus.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/38b88f6dc72ff750ed73f18469fc821fc8b24d62/src/consensus/consensus.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/38b88f6dc72ff750ed73f18469fc821fc8b24d62/src/consensus/consensus.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/consensus.h?ref=38b88f6dc72ff750ed73f18469fc821fc8b24d62",
        "patch": "@@ -16,7 +16,7 @@ static const unsigned int MAX_BLOCK_WEIGHT = 4000000;\n /** The maximum allowed number of signature check operations in a block (network rule) */\n static const int64_t MAX_BLOCK_SIGOPS_COST = 80000;\n /** Coinbase transaction outputs can only be spent after this number of new blocks (network rule) */\n-static const int COINBASE_MATURITY = 1000;\n+static const int COINBASE_MATURITY = 100;\n \n static const int WITNESS_SCALE_FACTOR = 4;\n "
      }
    ]
  },
  {
    "sha": "e51f138ee9c12ed4e28ce98d843683e32075091e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplNTFmMTM4ZWU5YzEyZWQ0ZTI4Y2U5OGQ4NDM2ODNlMzIwNzUwOTFl",
    "commit": {
      "author": {
        "name": "DVH1990",
        "email": "daniel.blank1990@gmail.com",
        "date": "2019-06-10T13:30:47Z"
      },
      "committer": {
        "name": "DVH1990",
        "email": "daniel.blank1990@gmail.com",
        "date": "2019-06-10T13:30:47Z"
      },
      "message": "Genblock generation code",
      "tree": {
        "sha": "d2c858086b65589cb7c1b85c37321dce650f85d6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d2c858086b65589cb7c1b85c37321dce650f85d6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e51f138ee9c12ed4e28ce98d843683e32075091e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e51f138ee9c12ed4e28ce98d843683e32075091e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e51f138ee9c12ed4e28ce98d843683e32075091e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e51f138ee9c12ed4e28ce98d843683e32075091e/comments",
    "author": {
      "login": "DVH1990",
      "id": 12988548,
      "node_id": "MDQ6VXNlcjEyOTg4NTQ4",
      "avatar_url": "https://avatars.githubusercontent.com/u/12988548?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DVH1990",
      "html_url": "https://github.com/DVH1990",
      "followers_url": "https://api.github.com/users/DVH1990/followers",
      "following_url": "https://api.github.com/users/DVH1990/following{/other_user}",
      "gists_url": "https://api.github.com/users/DVH1990/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DVH1990/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DVH1990/subscriptions",
      "organizations_url": "https://api.github.com/users/DVH1990/orgs",
      "repos_url": "https://api.github.com/users/DVH1990/repos",
      "events_url": "https://api.github.com/users/DVH1990/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DVH1990/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "DVH1990",
      "id": 12988548,
      "node_id": "MDQ6VXNlcjEyOTg4NTQ4",
      "avatar_url": "https://avatars.githubusercontent.com/u/12988548?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DVH1990",
      "html_url": "https://github.com/DVH1990",
      "followers_url": "https://api.github.com/users/DVH1990/followers",
      "following_url": "https://api.github.com/users/DVH1990/following{/other_user}",
      "gists_url": "https://api.github.com/users/DVH1990/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DVH1990/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DVH1990/subscriptions",
      "organizations_url": "https://api.github.com/users/DVH1990/orgs",
      "repos_url": "https://api.github.com/users/DVH1990/repos",
      "events_url": "https://api.github.com/users/DVH1990/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DVH1990/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "38b88f6dc72ff750ed73f18469fc821fc8b24d62",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/38b88f6dc72ff750ed73f18469fc821fc8b24d62",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/38b88f6dc72ff750ed73f18469fc821fc8b24d62"
      }
    ],
    "stats": {
      "total": 34,
      "additions": 21,
      "deletions": 13
    },
    "files": [
      {
        "sha": "4c56b9b97b3c2d9af1030e24283679a900029723",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 21,
        "deletions": 13,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e51f138ee9c12ed4e28ce98d843683e32075091e/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e51f138ee9c12ed4e28ce98d843683e32075091e/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=e51f138ee9c12ed4e28ce98d843683e32075091e",
        "patch": "@@ -11,6 +11,10 @@\n #include <util/system.h>\n #include <util/strencodings.h>\n #include <versionbitsinfo.h>\n+#include <arith_uint256.h>\n+\n+#include <iostream>\n+#include <fstream>\n \n #include <assert.h>\n \n@@ -35,6 +39,21 @@ static CBlock CreateGenesisBlock(const char* pszTimestamp, const CScript& genesi\n     genesis.vtx.push_back(MakeTransactionRef(std::move(txNew)));\n     genesis.hashPrevBlock.SetNull();\n     genesis.hashMerkleRoot = BlockMerkleRoot(genesis);\n+\n+    arith_uint256 hashGenesisBlock = arith_uint256(\"0x01\");\n+    arith_uint256 bnProofOfWorkLimit = arith_uint256(\"00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n+    LogPrintf(\"Testing\");\n+    if (true && UintToArith256(genesis.GetHash()) != hashGenesisBlock)\n+    {\n+        LogPrintf(\"recalculating params for mainnet.\\n\");\n+        LogPrintf(\"old mainnet genesis nonce: %u\\n\", genesis.nNonce);\n+        LogPrintf(\"old mainnet genesis hash:  %s\\n\", hashGenesisBlock.ToString().c_str());\n+        // deliberately empty for loop finds nonce value.\n+        for(genesis.nNonce = 0; UintToArith256(genesis.GetHash()) > bnProofOfWorkLimit; genesis.nNonce++){} \n+        LogPrintf(\"new mainnet genesis merkle root: %s\\n\", genesis.hashMerkleRoot.ToString().c_str());\n+        LogPrintf(\"new mainnet genesis nonce: %u\\n\", genesis.nNonce);\n+        LogPrintf(\"new mainnet genesis hash: %s\\n\", genesis.GetHash().ToString().c_str());\n+    }\n     return genesis;\n }\n \n@@ -51,7 +70,7 @@ static CBlock CreateGenesisBlock(const char* pszTimestamp, const CScript& genesi\n  */\n static CBlock CreateGenesisBlock(uint32_t nTime, uint32_t nNonce, uint32_t nBits, int32_t nVersion, const CAmount& genesisReward)\n {\n-    const char* pszTimestamp = \"The Times 03/Jan/2009 Chancellor on brink of second bailout for banks\";\n+    const char* pszTimestamp = \"Life = define !death\";\n     const CScript genesisOutputScript = CScript() << ParseHex(\"04678afdb0fe5548271967f1a67130b7105cd6a828e03909a67962e0ea1f61deb649f6bc3f4cef38c4f35504e51ec112de5c384df7ba0b8d578a4c702b6bf11d5f\") << OP_CHECKSIG;\n     return CreateGenesisBlock(pszTimestamp, genesisOutputScript, nTime, nNonce, nBits, nVersion, genesisReward);\n }\n@@ -110,7 +129,7 @@ class CMainParams : public CChainParams {\n         m_assumed_blockchain_size = 240;\n         m_assumed_chain_state_size = 3;\n \n-        genesis = CreateGenesisBlock(1231006505, 2083236893, 0x1d00ffff, 1, 50 * COIN);\n+        genesis = CreateGenesisBlock(1559652225, 2083236893, 0x1d00ffff, 1, 4096 * COIN);\n         consensus.hashGenesisBlock = genesis.GetHash();\n         assert(consensus.hashGenesisBlock == uint256S(\"0x000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f\"));\n         assert(genesis.hashMerkleRoot == uint256S(\"0x4a5e1e4baab89f3a32518a88c31bc87f618f76673e2cc77ab2127b7afdeda33b\"));\n@@ -199,11 +218,6 @@ class CTestNetParams : public CChainParams {\n \n         vFixedSeeds.clear();\n         vSeeds.clear();\n-        // nodes with support for servicebits filtering should be at the top\n-        vSeeds.emplace_back(\"testnet-seed.bitcoin.jonasschnelli.ch\");\n-        vSeeds.emplace_back(\"seed.tbtc.petertodd.org\");\n-        vSeeds.emplace_back(\"seed.testnet.bitcoin.sprovoost.nl\");\n-        vSeeds.emplace_back(\"testnet-seed.bluematt.me\"); // Just a static list of stable node(s), only supports x9\n \n         base58Prefixes[PUBKEY_ADDRESS] = std::vector<unsigned char>(1,111);\n         base58Prefixes[SCRIPT_ADDRESS] = std::vector<unsigned char>(1,196);\n@@ -221,9 +235,6 @@ class CTestNetParams : public CChainParams {\n \n \n         checkpointData = {\n-            {\n-                {546, uint256S(\"000000002a936ca763904c3c35fce2f3556c559c0214345d31b1bcebf76acb70\")},\n-            }\n         };\n \n         chainTxData = ChainTxData{\n@@ -298,9 +309,6 @@ class CRegTestParams : public CChainParams {\n         fMineBlocksOnDemand = true;\n \n         checkpointData = {\n-            {\n-                {0, uint256S(\"0f9188f13cb7b2c71f2a335e3a4fc328bf5beb436012afca590b1a11466e2206\")},\n-            }\n         };\n \n         chainTxData = ChainTxData{"
      }
    ]
  },
  {
    "sha": "b73b1a0488e0955fc9b7f58ac2ad244ee85142c9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiNzNiMWEwNDg4ZTA5NTVmYzliN2Y1OGFjMmFkMjQ0ZWU4NTE0MmM5",
    "commit": {
      "author": {
        "name": "DVH1990",
        "email": "daniel.blank1990@gmail.com",
        "date": "2019-06-19T13:52:53Z"
      },
      "committer": {
        "name": "DVH1990",
        "email": "daniel.blank1990@gmail.com",
        "date": "2019-06-19T13:52:53Z"
      },
      "message": "Further modifications - changing params and other",
      "tree": {
        "sha": "84277865b829b659a9cb1b5523825e83535195b9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/84277865b829b659a9cb1b5523825e83535195b9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b73b1a0488e0955fc9b7f58ac2ad244ee85142c9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b73b1a0488e0955fc9b7f58ac2ad244ee85142c9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b73b1a0488e0955fc9b7f58ac2ad244ee85142c9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b73b1a0488e0955fc9b7f58ac2ad244ee85142c9/comments",
    "author": {
      "login": "DVH1990",
      "id": 12988548,
      "node_id": "MDQ6VXNlcjEyOTg4NTQ4",
      "avatar_url": "https://avatars.githubusercontent.com/u/12988548?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DVH1990",
      "html_url": "https://github.com/DVH1990",
      "followers_url": "https://api.github.com/users/DVH1990/followers",
      "following_url": "https://api.github.com/users/DVH1990/following{/other_user}",
      "gists_url": "https://api.github.com/users/DVH1990/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DVH1990/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DVH1990/subscriptions",
      "organizations_url": "https://api.github.com/users/DVH1990/orgs",
      "repos_url": "https://api.github.com/users/DVH1990/repos",
      "events_url": "https://api.github.com/users/DVH1990/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DVH1990/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "DVH1990",
      "id": 12988548,
      "node_id": "MDQ6VXNlcjEyOTg4NTQ4",
      "avatar_url": "https://avatars.githubusercontent.com/u/12988548?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DVH1990",
      "html_url": "https://github.com/DVH1990",
      "followers_url": "https://api.github.com/users/DVH1990/followers",
      "following_url": "https://api.github.com/users/DVH1990/following{/other_user}",
      "gists_url": "https://api.github.com/users/DVH1990/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DVH1990/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DVH1990/subscriptions",
      "organizations_url": "https://api.github.com/users/DVH1990/orgs",
      "repos_url": "https://api.github.com/users/DVH1990/repos",
      "events_url": "https://api.github.com/users/DVH1990/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DVH1990/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e51f138ee9c12ed4e28ce98d843683e32075091e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e51f138ee9c12ed4e28ce98d843683e32075091e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e51f138ee9c12ed4e28ce98d843683e32075091e"
      }
    ],
    "stats": {
      "total": 130,
      "additions": 70,
      "deletions": 60
    },
    "files": [
      {
        "sha": "1e1c2ff5dcaca45a6c82cd0ed6ec8d450c9ed46f",
        "filename": "src/amount.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b73b1a0488e0955fc9b7f58ac2ad244ee85142c9/src/amount.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b73b1a0488e0955fc9b7f58ac2ad244ee85142c9/src/amount.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/amount.h?ref=b73b1a0488e0955fc9b7f58ac2ad244ee85142c9",
        "patch": "@@ -22,7 +22,7 @@ static const CAmount COIN = 100000000;\n  * critical; in unusual circumstances like a(nother) overflow bug that allowed\n  * for the creation of coins out of thin air modification could lead to a fork.\n  * */\n-static const CAmount MAX_MONEY = 4294967296 * COIN;\n+static const CAmount MAX_MONEY = 16777216 * COIN;\n inline bool MoneyRange(const CAmount& nValue) { return (nValue >= 0 && nValue <= MAX_MONEY); }\n \n #endif //  BITCOIN_AMOUNT_H"
      },
      {
        "sha": "5e74bbefc949b00c615903f830f5238bf05c187c",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 54,
        "deletions": 49,
        "changes": 103,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b73b1a0488e0955fc9b7f58ac2ad244ee85142c9/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b73b1a0488e0955fc9b7f58ac2ad244ee85142c9/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=b73b1a0488e0955fc9b7f58ac2ad244ee85142c9",
        "patch": "@@ -13,8 +13,7 @@\n #include <versionbitsinfo.h>\n #include <arith_uint256.h>\n \n-#include <iostream>\n-#include <fstream>\n+#include <stdio.h>\n \n #include <assert.h>\n \n@@ -40,20 +39,23 @@ static CBlock CreateGenesisBlock(const char* pszTimestamp, const CScript& genesi\n     genesis.hashPrevBlock.SetNull();\n     genesis.hashMerkleRoot = BlockMerkleRoot(genesis);\n \n-    arith_uint256 hashGenesisBlock = arith_uint256(\"0x01\");\n-    arith_uint256 bnProofOfWorkLimit = arith_uint256(\"00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n-    LogPrintf(\"Testing\");\n-    if (true && UintToArith256(genesis.GetHash()) != hashGenesisBlock)\n-    {\n-        LogPrintf(\"recalculating params for mainnet.\\n\");\n-        LogPrintf(\"old mainnet genesis nonce: %u\\n\", genesis.nNonce);\n-        LogPrintf(\"old mainnet genesis hash:  %s\\n\", hashGenesisBlock.ToString().c_str());\n-        // deliberately empty for loop finds nonce value.\n-        for(genesis.nNonce = 0; UintToArith256(genesis.GetHash()) > bnProofOfWorkLimit; genesis.nNonce++){} \n-        LogPrintf(\"new mainnet genesis merkle root: %s\\n\", genesis.hashMerkleRoot.ToString().c_str());\n-        LogPrintf(\"new mainnet genesis nonce: %u\\n\", genesis.nNonce);\n-        LogPrintf(\"new mainnet genesis hash: %s\\n\", genesis.GetHash().ToString().c_str());\n-    }\n+    // arith_uint256 hashGenesisBlock = arith_uint256(\"0x01\");\n+    // arith_uint256 bnProofOfWorkLimit = arith_uint256(\"00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n+    // // if (true && UintToArith256(genesis.GetHash()) != hashGenesisBlock)\n+    // // {\n+    // //     LogPrintf(\"recalculating params for mainnet.\\n\");\n+    // //     LogPrintf(\"old mainnet genesis nonce: %u\\n\", genesis.nNonce);\n+    // //     LogPrintf(\"old mainnet genesis hash:  %s\\n\", hashGenesisBlock.ToString().c_str());\n+    // //     // deliberately empty for loop finds nonce value.\n+    // //     for(genesis.nNonce = 0; UintToArith256(genesis.GetHash()) > bnProofOfWorkLimit; genesis.nNonce++){} \n+    // //     LogPrintf(\"new mainnet genesis merkle root: %s\\n\", genesis.hashMerkleRoot.ToString().c_str());\n+    // //     LogPrintf(\"new mainnet genesis nonce: %u\\n\", genesis.nNonce);\n+    // //     LogPrintf(\"new mainnet genesis hash: %s\\n\", genesis.GetHash().ToString().c_str());\n+    // //     fprintf(stderr, \"%u \\n\",genesis.nNonce);\n+    // //     fprintf(stderr, \"%s \\n\",genesis.hashMerkleRoot.ToString().c_str());\n+    // //     fprintf(stderr, \"%s \\n\",genesis.GetHash().ToString().c_str());\n+    // // }```````\n+\n     return genesis;\n }\n \n@@ -82,12 +84,12 @@ class CMainParams : public CChainParams {\n public:\n     CMainParams() {\n         strNetworkID = \"main\";\n-        consensus.nSubsidyHalvingInterval = 524288;\n-        consensus.BIP16Exception = uint256S(\"0x00000000000002dc756eebf4f49723ed8d30cc28a5f108eb94b1ba88ac4f9c22\");\n-        consensus.BIP34Height = 227931;\n-        consensus.BIP34Hash = uint256S(\"0x000000000000024b89b42a942fe0d9fea3bb44ab7bd1b19115dd6a759c0808b8\");\n-        consensus.BIP65Height = 388381; // 000000000000000004c2b624ed5d7756c508d90fd0da2c7c679febfa6c4735f0\n-        consensus.BIP66Height = 363725; // 00000000000000000379eaa19dce8c9b722d46ae6a57c2f1a988119488b50931\n+        consensus.nSubsidyHalvingInterval = 262144;\n+        consensus.BIP16Exception = uint256S(\"0x0000000051bbce6667036e12ebfd022767af439ac73b49a234fd5890c184ca51\");\n+        consensus.BIP34Height = 1;\n+        consensus.BIP34Hash = uint256S(\"0x0000000051bbce6667036e12ebfd022767af439ac73b49a234fd5890c184ca51\");\n+        consensus.BIP65Height = 1; // 000000000000000004c2b624ed5d7756c508d90fd0da2c7c679febfa6c4735f0\n+        consensus.BIP66Height = 1; // 00000000000000000379eaa19dce8c9b722d46ae6a57c2f1a988119488b50931\n         consensus.powLimit = uint256S(\"00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n         consensus.nPowTargetTimespan = 14 * 24 * 60 * 60; // two weeks\n         consensus.nPowTargetSpacing = 10 * 60;\n@@ -129,10 +131,10 @@ class CMainParams : public CChainParams {\n         m_assumed_blockchain_size = 240;\n         m_assumed_chain_state_size = 3;\n \n-        genesis = CreateGenesisBlock(1559652225, 2083236893, 0x1d00ffff, 1, 4096 * COIN);\n+        genesis = CreateGenesisBlock(1559652225, 491577245, 0x1d00ffff, 1, 4096 * COIN);\n         consensus.hashGenesisBlock = genesis.GetHash();\n-        assert(consensus.hashGenesisBlock == uint256S(\"0x000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f\"));\n-        assert(genesis.hashMerkleRoot == uint256S(\"0x4a5e1e4baab89f3a32518a88c31bc87f618f76673e2cc77ab2127b7afdeda33b\"));\n+        assert(consensus.hashGenesisBlock == uint256S(\"0x0000000051bbce6667036e12ebfd022767af439ac73b49a234fd5890c184ca51\"));\n+        assert(genesis.hashMerkleRoot == uint256S(\"0x42736d7f5c175ebbc9d20cc328c88c1ba7c6bba41a12887af9be697d2ba97996\"));\n \n         base58Prefixes[PUBKEY_ADDRESS] = std::vector<unsigned char>(1,63);\n         base58Prefixes[SCRIPT_ADDRESS] = std::vector<unsigned char>(1,25);\n@@ -151,10 +153,10 @@ class CMainParams : public CChainParams {\n         checkpointData = {};\n \n         chainTxData = ChainTxData{\n-            // Data from rpc: getchaintxstats 4096 0000000000000000000f1c54590ee18d15ec70e68c8cd4cfbadb1b4f11697eee\n-            /* nTime    */ 1550374134,\n-            /* nTxCount */ 383732546,\n-            /* dTxRate  */ 3.685496590998308\n+            // // Data from rpc: getchaintxstats 4096 0000000000000000000f1c54590ee18d15ec70e68c8cd4cfbadb1b4f11697eee\n+            // /* nTime    */ 1550374134,\n+            // /* nTxCount */ 383732546,\n+            // /* dTxRate  */ 3.685496590998308\n         };\n \n         /* disable fallback fee on mainnet */\n@@ -169,12 +171,12 @@ class CTestNetParams : public CChainParams {\n public:\n     CTestNetParams() {\n         strNetworkID = \"test\";\n-        consensus.nSubsidyHalvingInterval = 210000;\n-        consensus.BIP16Exception = uint256S(\"0x00000000dd30457c001f4095d208cc1296b0eed002427aa599874af7a432b105\");\n-        consensus.BIP34Height = 21111;\n-        consensus.BIP34Hash = uint256S(\"0x0000000023b3a96d3484e5abb3755c413e7d41500f8e2a5c3f0dd01299cd8ef8\");\n-        consensus.BIP65Height = 581885; // 00000000007f6655f22f98e72ed80d8b06dc761d5da09df0fa1dc4be4f861eb6\n-        consensus.BIP66Height = 330776; // 000000002104c8c45e99a8853285a3b592602a3ccde2b832481da85e9e4ba182\n+        consensus.nSubsidyHalvingInterval = 262144;\n+        consensus.BIP16Exception = uint256S(\"0x0000000051bbce6667036e12ebfd022767af439ac73b49a234fd5890c184ca51\");\n+        consensus.BIP34Height = 1;\n+        consensus.BIP34Hash = uint256S(\"0x0000000051bbce6667036e12ebfd022767af439ac73b49a234fd5890c184ca51\");\n+        consensus.BIP65Height = 1; // 00000000007f6655f22f98e72ed80d8b06dc761d5da09df0fa1dc4be4f861eb6\n+        consensus.BIP66Height = 1; // 000000002104c8c45e99a8853285a3b592602a3ccde2b832481da85e9e4ba182\n         consensus.powLimit = uint256S(\"00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n         consensus.nPowTargetTimespan = 14 * 24 * 60 * 60; // two weeks\n         consensus.nPowTargetSpacing = 10 * 60;\n@@ -211,10 +213,10 @@ class CTestNetParams : public CChainParams {\n         m_assumed_blockchain_size = 30;\n         m_assumed_chain_state_size = 2;\n \n-        genesis = CreateGenesisBlock(1296688602, 414098458, 0x1d00ffff, 1, 50 * COIN);\n+        genesis = CreateGenesisBlock(1559652225, 491577245, 0x1d00ffff, 1, 4096 * COIN);\n         consensus.hashGenesisBlock = genesis.GetHash();\n-        assert(consensus.hashGenesisBlock == uint256S(\"0x000000000933ea01ad0ee984209779baaec3ced90fa3f408719526f8d77f4943\"));\n-        assert(genesis.hashMerkleRoot == uint256S(\"0x4a5e1e4baab89f3a32518a88c31bc87f618f76673e2cc77ab2127b7afdeda33b\"));\n+        assert(consensus.hashGenesisBlock == uint256S(\"0x0000000051bbce6667036e12ebfd022767af439ac73b49a234fd5890c184ca51\"));\n+        assert(genesis.hashMerkleRoot == uint256S(\"0x42736d7f5c175ebbc9d20cc328c88c1ba7c6bba41a12887af9be697d2ba97996\"));\n \n         vFixedSeeds.clear();\n         vSeeds.clear();\n@@ -237,11 +239,14 @@ class CTestNetParams : public CChainParams {\n         checkpointData = {\n         };\n \n+        // vSeeds.emplace_back(\"seed.bitcoin.sipa.be\"); \n+        // vSeeds.emplace_back(\"dnsseed.bluematt.me\"); \n+\n         chainTxData = ChainTxData{\n-            // Data from rpc: getchaintxstats 4096 0000000000000037a8cd3e06cd5edbfe9dd1dbcc5dacab279376ef7cfc2b4c75\n-            /* nTime    */ 1531929919,\n-            /* nTxCount */ 19438708,\n-            /* dTxRate  */ 0.626\n+            // // Data from rpc: getchaintxstats 4096 0000000000000037a8cd3e06cd5edbfe9dd1dbcc5dacab279376ef7cfc2b4c75\n+            // /* nTime    */ 1531929919,\n+            // /* nTxCount */ 19438708,\n+            // /* dTxRate  */ 0.626\n         };\n \n         /* enable fallback fee on testnet */\n@@ -256,12 +261,12 @@ class CRegTestParams : public CChainParams {\n public:\n     explicit CRegTestParams(const ArgsManager& args) {\n         strNetworkID = \"regtest\";\n-        consensus.nSubsidyHalvingInterval = 150;\n+        consensus.nSubsidyHalvingInterval = 262144;\n         consensus.BIP16Exception = uint256();\n-        consensus.BIP34Height = 500; // BIP34 activated on regtest (Used in functional tests)\n+        consensus.BIP34Height = 1; // BIP34 activated on regtest (Used in functional tests)\n         consensus.BIP34Hash = uint256();\n-        consensus.BIP65Height = 1351; // BIP65 activated on regtest (Used in functional tests)\n-        consensus.BIP66Height = 1251; // BIP66 activated on regtest (Used in functional tests)\n+        consensus.BIP65Height = 1; // BIP65 activated on regtest (Used in functional tests)\n+        consensus.BIP66Height = 1; // BIP66 activated on regtest (Used in functional tests)\n         consensus.powLimit = uint256S(\"7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n         consensus.nPowTargetTimespan = 14 * 24 * 60 * 60; // two weeks\n         consensus.nPowTargetSpacing = 10 * 60;\n@@ -296,10 +301,10 @@ class CRegTestParams : public CChainParams {\n \n         UpdateVersionBitsParametersFromArgs(args);\n \n-        genesis = CreateGenesisBlock(1296688602, 2, 0x207fffff, 1, 50 * COIN);\n+       genesis = CreateGenesisBlock(1559652225, 491577245, 0x1d00ffff, 1, 4096 * COIN);\n         consensus.hashGenesisBlock = genesis.GetHash();\n-        assert(consensus.hashGenesisBlock == uint256S(\"0x0f9188f13cb7b2c71f2a335e3a4fc328bf5beb436012afca590b1a11466e2206\"));\n-        assert(genesis.hashMerkleRoot == uint256S(\"0x4a5e1e4baab89f3a32518a88c31bc87f618f76673e2cc77ab2127b7afdeda33b\"));\n+        assert(consensus.hashGenesisBlock == uint256S(\"0x0000000051bbce6667036e12ebfd022767af439ac73b49a234fd5890c184ca51\"));\n+        assert(genesis.hashMerkleRoot == uint256S(\"0x42736d7f5c175ebbc9d20cc328c88c1ba7c6bba41a12887af9be697d2ba97996\"));\n \n         vFixedSeeds.clear(); //!< Regtest mode doesn't have any fixed seeds.\n         vSeeds.clear();      //!< Regtest mode doesn't have any DNS seeds."
      },
      {
        "sha": "cc7b0d0cccf3bf706b5a7238c059115c2e0d4af0",
        "filename": "src/rpc/mining.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b73b1a0488e0955fc9b7f58ac2ad244ee85142c9/src/rpc/mining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b73b1a0488e0955fc9b7f58ac2ad244ee85142c9/src/rpc/mining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/mining.cpp?ref=b73b1a0488e0955fc9b7f58ac2ad244ee85142c9",
        "patch": "@@ -496,7 +496,7 @@ static UniValue getblocktemplate(const JSONRPCRequest& request)\n     const struct VBDeploymentInfo& segwit_info = VersionBitsDeploymentInfo[Consensus::DEPLOYMENT_SEGWIT];\n     // GBT must be called with 'segwit' set in the rules\n     if (setClientRules.count(segwit_info.name) != 1) {\n-        throw JSONRPCError(RPC_INVALID_PARAMETER, \"getblocktemplate must be called with the segwit rule set (call with {\\\"rules\\\": [\\\"segwit\\\"]})\");\n+      //  throw JSONRPCError(RPC_INVALID_PARAMETER, \"getblocktemplate must be called with the segwit rule set (call with {\\\"rules\\\": [\\\"segwit\\\"]})\");\n     }\n \n     // Update block"
      },
      {
        "sha": "619f624ac90e462140beb5da00f6102dcc2b0e45",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 8,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b73b1a0488e0955fc9b7f58ac2ad244ee85142c9/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b73b1a0488e0955fc9b7f58ac2ad244ee85142c9/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=b73b1a0488e0955fc9b7f58ac2ad244ee85142c9",
        "patch": "@@ -1162,8 +1162,8 @@ CAmount GetBlockSubsidy(int nHeight, const Consensus::Params& consensusParams)\n     if (halvings >= 64)\n         return 0;\n \n-    // Initial block reward 4096 coins\n-    CAmount nSubsidy = 4096 * COIN;\n+    // Initial block reward 32 coins\n+    CAmount nSubsidy = 32 * COIN;\n \n     // Subsidy is cut in half every 524,288 blocks which will occur approximately every 2 years.\n     nSubsidy >>= halvings;\n@@ -3158,15 +3158,19 @@ bool CheckBlock(const CBlock& block, CValidationState& state, const Consensus::P\n }\n \n bool IsWitnessEnabled(const CBlockIndex* pindexPrev, const Consensus::Params& params)\n-{\n-    LOCK(cs_main);\n-    return (VersionBitsState(pindexPrev, params, Consensus::DEPLOYMENT_SEGWIT, versionbitscache) == ThresholdState::ACTIVE);\n+{   \n+    // TODO: Change by block 2000\n+    return true;\n+    // LOCK(cs_main);\n+    // return (VersionBitsState(pindexPrev, params, Consensus::DEPLOYMENT_SEGWIT, versionbitscache) == ThresholdState::ACTIVE);\n }\n \n bool IsNullDummyEnabled(const CBlockIndex* pindexPrev, const Consensus::Params& params)\n {\n-    LOCK(cs_main);\n-    return (VersionBitsState(pindexPrev, params, Consensus::DEPLOYMENT_SEGWIT, versionbitscache) == ThresholdState::ACTIVE);\n+    // Until block 2000\n+    return true;\n+    // LOCK(cs_main);\n+    // return (VersionBitsState(pindexPrev, params, Consensus::DEPLOYMENT_SEGWIT, versionbitscache) == ThresholdState::ACTIVE);\n }\n \n // Compute at which vout of the block's coinbase transaction the witness\n@@ -3323,7 +3327,8 @@ static bool ContextualCheckBlock(const CBlock& block, CValidationState& state, c\n         CScript expect = CScript() << nHeight;\n         if (block.vtx[0]->vin[0].scriptSig.size() < expect.size() ||\n             !std::equal(expect.begin(), expect.end(), block.vtx[0]->vin[0].scriptSig.begin())) {\n-            return state.Invalid(ValidationInvalidReason::CONSENSUS, false, REJECT_INVALID, \"bad-cb-height\", \"block height mismatch in coinbase\");\n+            // return state.Invalid(ValidationInvalidReason::CONSENSUS, false, REJECT_INVALID, \"bad-cb-height\", \"block height mismatch in coinbase\");\n+            // TODO: Change by block 2000\n         }\n     }\n "
      },
      {
        "sha": "dce5418eef22c6af6dbe215b102bab0af8b31947",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b73b1a0488e0955fc9b7f58ac2ad244ee85142c9/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b73b1a0488e0955fc9b7f58ac2ad244ee85142c9/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=b73b1a0488e0955fc9b7f58ac2ad244ee85142c9",
        "patch": "@@ -108,7 +108,7 @@ static const int64_t DEFAULT_MAX_TIP_AGE = 24 * 60 * 60;\n /** Maximum age of our tip in seconds for us to be considered current for fee estimation */\n static const int64_t MAX_FEE_ESTIMATION_TIP_AGE = 3 * 60 * 60;\n \n-static const bool DEFAULT_CHECKPOINTS_ENABLED = true;\n+static const bool DEFAULT_CHECKPOINTS_ENABLED = false;\n static const bool DEFAULT_TXINDEX = false;\n static const char* const DEFAULT_BLOCKFILTERINDEX = \"0\";\n static const unsigned int DEFAULT_BANSCORE_THRESHOLD = 100;"
      }
    ]
  }
]