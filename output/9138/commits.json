[
  {
    "sha": "4df44794c9f71d47648e858385d37eae6d0a9db3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0ZGY0NDc5NGM5ZjcxZDQ3NjQ4ZTg1ODM4NWQzN2VhZTZkMGE5ZGIz",
    "commit": {
      "author": {
        "name": "Alex Morcos",
        "email": "morcos@chaincode.com",
        "date": "2016-11-10T19:16:42Z"
      },
      "committer": {
        "name": "Alex Morcos",
        "email": "morcos@chaincode.com",
        "date": "2017-01-04T17:03:44Z"
      },
      "message": "Remove extraneous LogPrint from fee estimation\n\nOnce priority estimation was removed, not all transactions in the mempool are tracked in the fee estimation mempool tracking.  So there is no error if a transaction is not found for removal.",
      "tree": {
        "sha": "9eae970117aa4740dfdaa2dadc61c07018619b88",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9eae970117aa4740dfdaa2dadc61c07018619b88"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4df44794c9f71d47648e858385d37eae6d0a9db3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4df44794c9f71d47648e858385d37eae6d0a9db3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4df44794c9f71d47648e858385d37eae6d0a9db3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4df44794c9f71d47648e858385d37eae6d0a9db3/comments",
    "author": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "123ea7362478cfe801341e8fecade030a903ad3d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/123ea7362478cfe801341e8fecade030a903ad3d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/123ea7362478cfe801341e8fecade030a903ad3d"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 8,
      "deletions": 11
    },
    "files": [
      {
        "sha": "52d0e5c5e5eb0216c4d8597ea00088fd7c4f4bae",
        "filename": "src/policy/fees.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 10,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4df44794c9f71d47648e858385d37eae6d0a9db3/src/policy/fees.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4df44794c9f71d47648e858385d37eae6d0a9db3/src/policy/fees.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/fees.cpp?ref=4df44794c9f71d47648e858385d37eae6d0a9db3",
        "patch": "@@ -281,19 +281,16 @@ void TxConfirmStats::removeTx(unsigned int entryHeight, unsigned int nBestSeenHe\n     }\n }\n \n-void CBlockPolicyEstimator::removeTx(uint256 hash)\n+bool CBlockPolicyEstimator::removeTx(uint256 hash)\n {\n     std::map<uint256, TxStatsInfo>::iterator pos = mapMemPoolTxs.find(hash);\n-    if (pos == mapMemPoolTxs.end()) {\n-        LogPrint(\"estimatefee\", \"Blockpolicy error mempool tx %s not found for removeTx\\n\",\n-                 hash.ToString().c_str());\n-        return;\n+    if (pos != mapMemPoolTxs.end()) {\n+        feeStats.removeTx(pos->second.blockHeight, nBestSeenHeight, pos->second.bucketIndex);\n+        mapMemPoolTxs.erase(hash);\n+        return true;\n+    } else {\n+        return false;\n     }\n-    unsigned int entryHeight = pos->second.blockHeight;\n-    unsigned int bucketIndex = pos->second.bucketIndex;\n-\n-    feeStats.removeTx(entryHeight, nBestSeenHeight, bucketIndex);\n-    mapMemPoolTxs.erase(hash);\n }\n \n CBlockPolicyEstimator::CBlockPolicyEstimator(const CFeeRate& _minRelayFee)"
      },
      {
        "sha": "c88ba5b3cc14e21670cc3ddf999acd8f1dadfa8a",
        "filename": "src/policy/fees.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4df44794c9f71d47648e858385d37eae6d0a9db3/src/policy/fees.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4df44794c9f71d47648e858385d37eae6d0a9db3/src/policy/fees.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/fees.h?ref=4df44794c9f71d47648e858385d37eae6d0a9db3",
        "patch": "@@ -212,7 +212,7 @@ class CBlockPolicyEstimator\n     void processTransaction(const CTxMemPoolEntry& entry, bool fCurrentEstimate);\n \n     /** Remove a transaction from the mempool tracking stats*/\n-    void removeTx(uint256 hash);\n+    bool removeTx(uint256 hash);\n \n     /** Return a feerate estimate */\n     CFeeRate estimateFee(int confTarget);"
      }
    ]
  },
  {
    "sha": "60ac00de854981333656d17c9b2ea2efd1efc436",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2MGFjMDBkZTg1NDk4MTMzMzY1NmQxN2M5YjJlYTJlZmQxZWZjNDM2",
    "commit": {
      "author": {
        "name": "Alex Morcos",
        "email": "morcos@chaincode.com",
        "date": "2016-11-11T16:17:59Z"
      },
      "committer": {
        "name": "Alex Morcos",
        "email": "morcos@chaincode.com",
        "date": "2017-01-04T17:05:05Z"
      },
      "message": "Don't track transactions at all during IBD.\n\nThis was an oversight, where blocks and mempool tracking were ignored during IBD, but transactions that arrived during IBD but were included in blocks after IBD were not ignored.",
      "tree": {
        "sha": "a336a7da4b7201e1f51ffecca39f5a8eb99e38ad",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a336a7da4b7201e1f51ffecca39f5a8eb99e38ad"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/60ac00de854981333656d17c9b2ea2efd1efc436",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/60ac00de854981333656d17c9b2ea2efd1efc436",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/60ac00de854981333656d17c9b2ea2efd1efc436",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/60ac00de854981333656d17c9b2ea2efd1efc436/comments",
    "author": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4df44794c9f71d47648e858385d37eae6d0a9db3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4df44794c9f71d47648e858385d37eae6d0a9db3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4df44794c9f71d47648e858385d37eae6d0a9db3"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 3,
      "deletions": 1
    },
    "files": [
      {
        "sha": "2783a313f7ef78f8245e48fcf28604ebdb5bf419",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/60ac00de854981333656d17c9b2ea2efd1efc436/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/60ac00de854981333656d17c9b2ea2efd1efc436/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=60ac00de854981333656d17c9b2ea2efd1efc436",
        "patch": "@@ -692,7 +692,9 @@ bool AcceptToMemoryPoolWorker(CTxMemPool& pool, CValidationState& state, const C\n             }\n         }\n \n-        CTxMemPoolEntry entry(ptx, nFees, nAcceptTime, dPriority, chainActive.Height(), pool.HasNoInputsOf(tx), inChainInputValue, fSpendsCoinbase, nSigOpsCost, lp);\n+        CTxMemPoolEntry entry(ptx, nFees, nAcceptTime, dPriority, chainActive.Height(),\n+                              !IsInitialBlockDownload() && pool.HasNoInputsOf(tx),\n+                              inChainInputValue, fSpendsCoinbase, nSigOpsCost, lp);\n         unsigned int nSize = entry.GetTxSize();\n \n         // Check that the transaction doesn't have an excessive number of"
      }
    ]
  },
  {
    "sha": "84f7ab08d2e8e83a584d72fdf44f68b34baf8165",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4NGY3YWIwOGQyZThlODNhNTg0ZDcyZmRmNDRmNjhiMzRiYWY4MTY1",
    "commit": {
      "author": {
        "name": "Alex Morcos",
        "email": "morcos@chaincode.com",
        "date": "2016-11-11T16:57:51Z"
      },
      "committer": {
        "name": "Alex Morcos",
        "email": "morcos@chaincode.com",
        "date": "2017-01-04T17:09:33Z"
      },
      "message": "Remove member variable hadNoDependencies from CTxMemPoolEntry\n\nFee estimation can just check its own mapMemPoolTxs to determine the same information.  Note that now fee estimation for block processing must happen before those transactions are removed, but this shoudl be a speedup.",
      "tree": {
        "sha": "f5076b10d4afd783a5fb77f3a19aff1dab1fd9dd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f5076b10d4afd783a5fb77f3a19aff1dab1fd9dd"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/84f7ab08d2e8e83a584d72fdf44f68b34baf8165",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/84f7ab08d2e8e83a584d72fdf44f68b34baf8165",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/84f7ab08d2e8e83a584d72fdf44f68b34baf8165",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/84f7ab08d2e8e83a584d72fdf44f68b34baf8165/comments",
    "author": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "60ac00de854981333656d17c9b2ea2efd1efc436",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/60ac00de854981333656d17c9b2ea2efd1efc436",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/60ac00de854981333656d17c9b2ea2efd1efc436"
      }
    ],
    "stats": {
      "total": 51,
      "additions": 19,
      "deletions": 32
    },
    "files": [
      {
        "sha": "5790d51a824b8328ee76230e583e8c1de0075f36",
        "filename": "src/bench/mempool_eviction.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/84f7ab08d2e8e83a584d72fdf44f68b34baf8165/src/bench/mempool_eviction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/84f7ab08d2e8e83a584d72fdf44f68b34baf8165/src/bench/mempool_eviction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/mempool_eviction.cpp?ref=84f7ab08d2e8e83a584d72fdf44f68b34baf8165",
        "patch": "@@ -18,7 +18,7 @@ static void AddTx(const CTransaction& tx, const CAmount& nFee, CTxMemPool& pool)\n     unsigned int sigOpCost = 4;\n     LockPoints lp;\n     pool.addUnchecked(tx.GetHash(), CTxMemPoolEntry(\n-                                        MakeTransactionRef(tx), nFee, nTime, dPriority, nHeight, pool.HasNoInputsOf(tx),\n+                                        MakeTransactionRef(tx), nFee, nTime, dPriority, nHeight,\n                                         tx.GetValueOut(), spendsCoinbase, sigOpCost, lp));\n }\n "
      },
      {
        "sha": "ac2d7edaec07ce20f8c81ae154599cd89de3ce2a",
        "filename": "src/policy/fees.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 13,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/84f7ab08d2e8e83a584d72fdf44f68b34baf8165/src/policy/fees.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/84f7ab08d2e8e83a584d72fdf44f68b34baf8165/src/policy/fees.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/fees.cpp?ref=84f7ab08d2e8e83a584d72fdf44f68b34baf8165",
        "patch": "@@ -327,13 +327,6 @@ void CBlockPolicyEstimator::processTransaction(const CTxMemPoolEntry& entry, boo\n     if (!fCurrentEstimate)\n         return;\n \n-    if (!entry.WasClearAtEntry()) {\n-        // This transaction depends on other transactions in the mempool to\n-        // be included in a block before it will be able to be included, so\n-        // we shouldn't include it in our calculations\n-        return;\n-    }\n-\n     // Feerates are stored and reported as BTC-per-kb:\n     CFeeRate feeRate(entry.GetFee(), entry.GetTxSize());\n \n@@ -343,10 +336,8 @@ void CBlockPolicyEstimator::processTransaction(const CTxMemPoolEntry& entry, boo\n \n void CBlockPolicyEstimator::processBlockTx(unsigned int nBlockHeight, const CTxMemPoolEntry& entry)\n {\n-    if (!entry.WasClearAtEntry()) {\n-        // This transaction depended on other transactions in the mempool to\n-        // be included in a block before it was able to be included, so\n-        // we shouldn't include it in our calculations\n+    if (!removeTx(entry.GetTx().GetHash())) {\n+        // This transaction wasn't being tracked for fee estimation\n         return;\n     }\n \n@@ -378,14 +369,18 @@ void CBlockPolicyEstimator::processBlock(unsigned int nBlockHeight,\n         // transaction fees.\"\n         return;\n     }\n-    nBestSeenHeight = nBlockHeight;\n \n     // Only want to be updating estimates when our blockchain is synced,\n     // otherwise we'll miscalculate how many blocks its taking to get included.\n     if (!fCurrentEstimate)\n         return;\n \n-    // Clear the current block state\n+    // Must update nBestSeenHeight in sync with ClearCurrent so that\n+    // calls to removeTx (via processBlockTx) correctly calculate age\n+    // of unconfirmed txs to remove from tracking.\n+    nBestSeenHeight = nBlockHeight;\n+\n+    // Clear the current block state and update unconfirmed circular buffer\n     feeStats.ClearCurrent(nBlockHeight);\n \n     // Repopulate the current block states"
      },
      {
        "sha": "91f549fe48b2fe62ec1d0079053abf31235dbfa4",
        "filename": "src/test/mempool_tests.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/84f7ab08d2e8e83a584d72fdf44f68b34baf8165/src/test/mempool_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/84f7ab08d2e8e83a584d72fdf44f68b34baf8165/src/test/mempool_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/mempool_tests.cpp?ref=84f7ab08d2e8e83a584d72fdf44f68b34baf8165",
        "patch": "@@ -120,7 +120,6 @@ BOOST_AUTO_TEST_CASE(MempoolIndexingTest)\n {\n     CTxMemPool pool(CFeeRate(0));\n     TestMemPoolEntryHelper entry;\n-    entry.hadNoDependencies = true;\n \n     /* 3rd highest fee */\n     CMutableTransaction tx1 = CMutableTransaction();\n@@ -323,7 +322,6 @@ BOOST_AUTO_TEST_CASE(MempoolAncestorIndexingTest)\n {\n     CTxMemPool pool(CFeeRate(0));\n     TestMemPoolEntryHelper entry;\n-    entry.hadNoDependencies = true;\n \n     /* 3rd highest fee */\n     CMutableTransaction tx1 = CMutableTransaction();"
      },
      {
        "sha": "f0eaab2217cd2d6210508312cb139226a876fea5",
        "filename": "src/test/test_bitcoin.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/84f7ab08d2e8e83a584d72fdf44f68b34baf8165/src/test/test_bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/84f7ab08d2e8e83a584d72fdf44f68b34baf8165/src/test/test_bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/test_bitcoin.cpp?ref=84f7ab08d2e8e83a584d72fdf44f68b34baf8165",
        "patch": "@@ -147,12 +147,11 @@ CTxMemPoolEntry TestMemPoolEntryHelper::FromTx(const CMutableTransaction &tx, CT\n }\n \n CTxMemPoolEntry TestMemPoolEntryHelper::FromTx(const CTransaction &txn, CTxMemPool *pool) {\n-    bool hasNoDependencies = pool ? pool->HasNoInputsOf(txn) : hadNoDependencies;\n     // Hack to assume either its completely dependent on other mempool txs or not at all\n-    CAmount inChainValue = hasNoDependencies ? txn.GetValueOut() : 0;\n+    CAmount inChainValue = pool && pool->HasNoInputsOf(txn) ? txn.GetValueOut() : 0;\n \n     return CTxMemPoolEntry(MakeTransactionRef(txn), nFee, nTime, dPriority, nHeight,\n-                           hasNoDependencies, inChainValue, spendsCoinbase, sigOpCost, lp);\n+                           inChainValue, spendsCoinbase, sigOpCost, lp);\n }\n \n void Shutdown(void* parg)"
      },
      {
        "sha": "5ef6fa764f583b85b04cabe19f6f2fbafd457d06",
        "filename": "src/test/test_bitcoin.h",
        "status": "modified",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/84f7ab08d2e8e83a584d72fdf44f68b34baf8165/src/test/test_bitcoin.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/84f7ab08d2e8e83a584d72fdf44f68b34baf8165/src/test/test_bitcoin.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/test_bitcoin.h?ref=84f7ab08d2e8e83a584d72fdf44f68b34baf8165",
        "patch": "@@ -70,14 +70,13 @@ struct TestMemPoolEntryHelper\n     int64_t nTime;\n     double dPriority;\n     unsigned int nHeight;\n-    bool hadNoDependencies;\n     bool spendsCoinbase;\n     unsigned int sigOpCost;\n     LockPoints lp;\n \n     TestMemPoolEntryHelper() :\n         nFee(0), nTime(0), dPriority(0.0), nHeight(1),\n-        hadNoDependencies(false), spendsCoinbase(false), sigOpCost(4) { }\n+        spendsCoinbase(false), sigOpCost(4) { }\n     \n     CTxMemPoolEntry FromTx(const CMutableTransaction &tx, CTxMemPool *pool = NULL);\n     CTxMemPoolEntry FromTx(const CTransaction &tx, CTxMemPool *pool = NULL);\n@@ -87,7 +86,6 @@ struct TestMemPoolEntryHelper\n     TestMemPoolEntryHelper &Time(int64_t _time) { nTime = _time; return *this; }\n     TestMemPoolEntryHelper &Priority(double _priority) { dPriority = _priority; return *this; }\n     TestMemPoolEntryHelper &Height(unsigned int _height) { nHeight = _height; return *this; }\n-    TestMemPoolEntryHelper &HadNoDependencies(bool _hnd) { hadNoDependencies = _hnd; return *this; }\n     TestMemPoolEntryHelper &SpendsCoinbase(bool _flag) { spendsCoinbase = _flag; return *this; }\n     TestMemPoolEntryHelper &SigOpsCost(unsigned int _sigopsCost) { sigOpCost = _sigopsCost; return *this; }\n };"
      },
      {
        "sha": "57300bb51d7bdf07aef3568203d278960693b70d",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/84f7ab08d2e8e83a584d72fdf44f68b34baf8165/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/84f7ab08d2e8e83a584d72fdf44f68b34baf8165/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=84f7ab08d2e8e83a584d72fdf44f68b34baf8165",
        "patch": "@@ -22,10 +22,10 @@ using namespace std;\n \n CTxMemPoolEntry::CTxMemPoolEntry(const CTransactionRef& _tx, const CAmount& _nFee,\n                                  int64_t _nTime, double _entryPriority, unsigned int _entryHeight,\n-                                 bool poolHasNoInputsOf, CAmount _inChainInputValue,\n+                                 CAmount _inChainInputValue,\n                                  bool _spendsCoinbase, int64_t _sigOpsCost, LockPoints lp):\n     tx(_tx), nFee(_nFee), nTime(_nTime), entryPriority(_entryPriority), entryHeight(_entryHeight),\n-    hadNoDependencies(poolHasNoInputsOf), inChainInputValue(_inChainInputValue),\n+    inChainInputValue(_inChainInputValue),\n     spendsCoinbase(_spendsCoinbase), sigOpCost(_sigOpsCost), lockPoints(lp)\n {\n     nTxWeight = GetTransactionWeight(*tx);\n@@ -604,6 +604,8 @@ void CTxMemPool::removeForBlock(const std::vector<CTransactionRef>& vtx, unsigne\n         if (i != mapTx.end())\n             entries.push_back(*i);\n     }\n+    // Before the txs in the new block have been removed from the mempool, update policy estimates\n+    minerPolicyEstimator->processBlock(nBlockHeight, entries, fCurrentEstimate);\n     for (const auto& tx : vtx)\n     {\n         txiter it = mapTx.find(tx->GetHash());\n@@ -615,8 +617,6 @@ void CTxMemPool::removeForBlock(const std::vector<CTransactionRef>& vtx, unsigne\n         removeConflicts(*tx);\n         ClearPrioritisation(tx->GetHash());\n     }\n-    // After the txs in the new block have been removed from the mempool, update policy estimates\n-    minerPolicyEstimator->processBlock(nBlockHeight, entries, fCurrentEstimate);\n     lastRollingFeeUpdate = GetTime();\n     blockSinceLastRollingFeeBump = true;\n }"
      },
      {
        "sha": "5c8cf7af1b8845f9dfdd0dd5f054e1c3e5578809",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/84f7ab08d2e8e83a584d72fdf44f68b34baf8165/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/84f7ab08d2e8e83a584d72fdf44f68b34baf8165/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=84f7ab08d2e8e83a584d72fdf44f68b34baf8165",
        "patch": "@@ -88,7 +88,6 @@ class CTxMemPoolEntry\n     int64_t nTime;             //!< Local time when entering the mempool\n     double entryPriority;      //!< Priority when entering the mempool\n     unsigned int entryHeight;  //!< Chain height when entering the mempool\n-    bool hadNoDependencies;    //!< Not dependent on any other txs when it entered the mempool\n     CAmount inChainInputValue; //!< Sum of all txin values that are already in blockchain\n     bool spendsCoinbase;       //!< keep track of transactions that spend a coinbase\n     int64_t sigOpCost;         //!< Total sigop cost\n@@ -113,7 +112,7 @@ class CTxMemPoolEntry\n public:\n     CTxMemPoolEntry(const CTransactionRef& _tx, const CAmount& _nFee,\n                     int64_t _nTime, double _entryPriority, unsigned int _entryHeight,\n-                    bool poolHasNoInputsOf, CAmount _inChainInputValue, bool spendsCoinbase,\n+                    CAmount _inChainInputValue, bool spendsCoinbase,\n                     int64_t nSigOpsCost, LockPoints lp);\n \n     CTxMemPoolEntry(const CTxMemPoolEntry& other);\n@@ -130,7 +129,6 @@ class CTxMemPoolEntry\n     size_t GetTxWeight() const { return nTxWeight; }\n     int64_t GetTime() const { return nTime; }\n     unsigned int GetHeight() const { return entryHeight; }\n-    bool WasClearAtEntry() const { return hadNoDependencies; }\n     int64_t GetSigOpCost() const { return sigOpCost; }\n     int64_t GetModifiedFee() const { return nFee + feeDelta; }\n     size_t DynamicMemoryUsage() const { return nUsageSize; }"
      },
      {
        "sha": "a68763e4895196bcdc807d5dadfbe2c735e4201c",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/84f7ab08d2e8e83a584d72fdf44f68b34baf8165/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/84f7ab08d2e8e83a584d72fdf44f68b34baf8165/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=84f7ab08d2e8e83a584d72fdf44f68b34baf8165",
        "patch": "@@ -693,7 +693,6 @@ bool AcceptToMemoryPoolWorker(CTxMemPool& pool, CValidationState& state, const C\n         }\n \n         CTxMemPoolEntry entry(ptx, nFees, nAcceptTime, dPriority, chainActive.Height(),\n-                              !IsInitialBlockDownload() && pool.HasNoInputsOf(tx),\n                               inChainInputValue, fSpendsCoinbase, nSigOpsCost, lp);\n         unsigned int nSize = entry.GetTxSize();\n \n@@ -943,7 +942,7 @@ bool AcceptToMemoryPoolWorker(CTxMemPool& pool, CValidationState& state, const C\n         pool.RemoveStaged(allConflicting, false);\n \n         // Store transaction in memory\n-        pool.addUnchecked(hash, entry, setAncestors, !IsInitialBlockDownload());\n+        pool.addUnchecked(hash, entry, setAncestors, !IsInitialBlockDownload() && pool.HasNoInputsOf(tx));\n \n         // trim mempool and check if tx was trimmed\n         if (!fOverrideMempoolLimit) {"
      },
      {
        "sha": "0b13c2ba7478425a25044cc47e6bf29773586853",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/84f7ab08d2e8e83a584d72fdf44f68b34baf8165/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/84f7ab08d2e8e83a584d72fdf44f68b34baf8165/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=84f7ab08d2e8e83a584d72fdf44f68b34baf8165",
        "patch": "@@ -2563,7 +2563,7 @@ bool CWallet::CreateTransaction(const vector<CRecipient>& vecSend, CWalletTx& wt\n     if (GetBoolArg(\"-walletrejectlongchains\", DEFAULT_WALLET_REJECT_LONG_CHAINS)) {\n         // Lastly, ensure this tx will pass the mempool's chain limits\n         LockPoints lp;\n-        CTxMemPoolEntry entry(wtxNew.tx, 0, 0, 0, 0, false, 0, false, 0, lp);\n+        CTxMemPoolEntry entry(wtxNew.tx, 0, 0, 0, 0, 0, false, 0, lp);\n         CTxMemPool::setEntries setAncestors;\n         size_t nLimitAncestors = GetArg(\"-limitancestorcount\", DEFAULT_ANCESTOR_LIMIT);\n         size_t nLimitAncestorSize = GetArg(\"-limitancestorsize\", DEFAULT_ANCESTOR_SIZE_LIMIT)*1000;"
      }
    ]
  },
  {
    "sha": "6f06b268c1f383affb2cf397f325d48d25bc8880",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2ZjA2YjI2OGMxZjM4M2FmZmIyY2YzOTdmMzI1ZDQ4ZDI1YmM4ODgw",
    "commit": {
      "author": {
        "name": "Alex Morcos",
        "email": "morcos@chaincode.com",
        "date": "2016-11-11T17:48:01Z"
      },
      "committer": {
        "name": "Alex Morcos",
        "email": "morcos@chaincode.com",
        "date": "2017-01-04T17:09:33Z"
      },
      "message": "rename bool to validFeeEstimate",
      "tree": {
        "sha": "0e46808e549fad7a3c5e8958f613b52ca60ee5ee",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0e46808e549fad7a3c5e8958f613b52ca60ee5ee"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6f06b268c1f383affb2cf397f325d48d25bc8880",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6f06b268c1f383affb2cf397f325d48d25bc8880",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6f06b268c1f383affb2cf397f325d48d25bc8880",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6f06b268c1f383affb2cf397f325d48d25bc8880/comments",
    "author": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "84f7ab08d2e8e83a584d72fdf44f68b34baf8165",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/84f7ab08d2e8e83a584d72fdf44f68b34baf8165",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/84f7ab08d2e8e83a584d72fdf44f68b34baf8165"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 9,
      "deletions": 9
    },
    "files": [
      {
        "sha": "6b4567d195df28c4805b9173f59f5fa3b7025529",
        "filename": "src/policy/fees.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6f06b268c1f383affb2cf397f325d48d25bc8880/src/policy/fees.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6f06b268c1f383affb2cf397f325d48d25bc8880/src/policy/fees.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/fees.cpp?ref=6f06b268c1f383affb2cf397f325d48d25bc8880",
        "patch": "@@ -306,7 +306,7 @@ CBlockPolicyEstimator::CBlockPolicyEstimator(const CFeeRate& _minRelayFee)\n     feeStats.Initialize(vfeelist, MAX_BLOCK_CONFIRMS, DEFAULT_DECAY);\n }\n \n-void CBlockPolicyEstimator::processTransaction(const CTxMemPoolEntry& entry, bool fCurrentEstimate)\n+void CBlockPolicyEstimator::processTransaction(const CTxMemPoolEntry& entry, bool validFeeEstimate)\n {\n     unsigned int txHeight = entry.GetHeight();\n     uint256 hash = entry.GetTx().GetHash();\n@@ -324,7 +324,7 @@ void CBlockPolicyEstimator::processTransaction(const CTxMemPoolEntry& entry, boo\n \n     // Only want to be updating estimates when our blockchain is synced,\n     // otherwise we'll miscalculate how many blocks its taking to get included.\n-    if (!fCurrentEstimate)\n+    if (!validFeeEstimate)\n         return;\n \n     // Feerates are stored and reported as BTC-per-kb:"
      },
      {
        "sha": "e062cd87bb1482e6b134ba0b02af8100a1f2ec89",
        "filename": "src/policy/fees.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6f06b268c1f383affb2cf397f325d48d25bc8880/src/policy/fees.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6f06b268c1f383affb2cf397f325d48d25bc8880/src/policy/fees.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/fees.h?ref=6f06b268c1f383affb2cf397f325d48d25bc8880",
        "patch": "@@ -209,7 +209,7 @@ class CBlockPolicyEstimator\n     void processBlockTx(unsigned int nBlockHeight, const CTxMemPoolEntry& entry);\n \n     /** Process a transaction accepted to the mempool*/\n-    void processTransaction(const CTxMemPoolEntry& entry, bool fCurrentEstimate);\n+    void processTransaction(const CTxMemPoolEntry& entry, bool validFeeEstimate);\n \n     /** Remove a transaction from the mempool tracking stats*/\n     bool removeTx(uint256 hash);"
      },
      {
        "sha": "53f3e0e19924a5f3fc118008779edb3b055cb2d4",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6f06b268c1f383affb2cf397f325d48d25bc8880/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6f06b268c1f383affb2cf397f325d48d25bc8880/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=6f06b268c1f383affb2cf397f325d48d25bc8880",
        "patch": "@@ -392,7 +392,7 @@ void CTxMemPool::AddTransactionsUpdated(unsigned int n)\n     nTransactionsUpdated += n;\n }\n \n-bool CTxMemPool::addUnchecked(const uint256& hash, const CTxMemPoolEntry &entry, setEntries &setAncestors, bool fCurrentEstimate)\n+bool CTxMemPool::addUnchecked(const uint256& hash, const CTxMemPoolEntry &entry, setEntries &setAncestors, bool validFeeEstimate)\n {\n     // Add to memory pool without checking anything.\n     // Used by main.cpp AcceptToMemoryPool(), which DOES do\n@@ -442,7 +442,7 @@ bool CTxMemPool::addUnchecked(const uint256& hash, const CTxMemPoolEntry &entry,\n \n     nTransactionsUpdated++;\n     totalTxSize += entry.GetTxSize();\n-    minerPolicyEstimator->processTransaction(entry, fCurrentEstimate);\n+    minerPolicyEstimator->processTransaction(entry, validFeeEstimate);\n \n     vTxHashes.emplace_back(tx.GetWitnessHash(), newit);\n     newit->vTxHashesIdx = vTxHashes.size() - 1;\n@@ -1015,14 +1015,14 @@ int CTxMemPool::Expire(int64_t time) {\n     return stage.size();\n }\n \n-bool CTxMemPool::addUnchecked(const uint256&hash, const CTxMemPoolEntry &entry, bool fCurrentEstimate)\n+bool CTxMemPool::addUnchecked(const uint256&hash, const CTxMemPoolEntry &entry, bool validFeeEstimate)\n {\n     LOCK(cs);\n     setEntries setAncestors;\n     uint64_t nNoLimit = std::numeric_limits<uint64_t>::max();\n     std::string dummy;\n     CalculateMemPoolAncestors(entry, setAncestors, nNoLimit, nNoLimit, nNoLimit, nNoLimit, dummy);\n-    return addUnchecked(hash, entry, setAncestors, fCurrentEstimate);\n+    return addUnchecked(hash, entry, setAncestors, validFeeEstimate);\n }\n \n void CTxMemPool::UpdateChild(txiter entry, txiter child, bool add)"
      },
      {
        "sha": "16125bd73b432deac7662da32f1e2957b065d7a5",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6f06b268c1f383affb2cf397f325d48d25bc8880/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6f06b268c1f383affb2cf397f325d48d25bc8880/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=6f06b268c1f383affb2cf397f325d48d25bc8880",
        "patch": "@@ -523,8 +523,8 @@ class CTxMemPool\n     // to track size/count of descendant transactions.  First version of\n     // addUnchecked can be used to have it call CalculateMemPoolAncestors(), and\n     // then invoke the second version.\n-    bool addUnchecked(const uint256& hash, const CTxMemPoolEntry &entry, bool fCurrentEstimate = true);\n-    bool addUnchecked(const uint256& hash, const CTxMemPoolEntry &entry, setEntries &setAncestors, bool fCurrentEstimate = true);\n+    bool addUnchecked(const uint256& hash, const CTxMemPoolEntry &entry, bool validFeeEstimate = true);\n+    bool addUnchecked(const uint256& hash, const CTxMemPoolEntry &entry, setEntries &setAncestors, bool validFeeEstimate = true);\n \n     void removeRecursive(const CTransaction &tx);\n     void removeForReorg(const CCoinsViewCache *pcoins, unsigned int nMemPoolHeight, int flags);"
      }
    ]
  },
  {
    "sha": "d825838e6472f73c491f93506cb003472f071602",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkODI1ODM4ZTY0NzJmNzNjNDkxZjkzNTA2Y2IwMDM0NzJmMDcxNjAy",
    "commit": {
      "author": {
        "name": "Alex Morcos",
        "email": "morcos@chaincode.com",
        "date": "2016-11-11T18:14:45Z"
      },
      "committer": {
        "name": "Alex Morcos",
        "email": "morcos@chaincode.com",
        "date": "2017-01-04T17:09:34Z"
      },
      "message": "Always update fee estimates on new blocks.\n\nAll decisions about whether the transactions are valid data points are made at the time the transaction arrives. Updating on blocks all the time will now cause stale fee estimates to decay quickly when we restart a node.",
      "tree": {
        "sha": "fac9c77e0b7b6c6cb2b5b198a31cf20ed1dc56a2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fac9c77e0b7b6c6cb2b5b198a31cf20ed1dc56a2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d825838e6472f73c491f93506cb003472f071602",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d825838e6472f73c491f93506cb003472f071602",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d825838e6472f73c491f93506cb003472f071602",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d825838e6472f73c491f93506cb003472f071602/comments",
    "author": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6f06b268c1f383affb2cf397f325d48d25bc8880",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6f06b268c1f383affb2cf397f325d48d25bc8880",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6f06b268c1f383affb2cf397f325d48d25bc8880"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 6,
      "deletions": 13
    },
    "files": [
      {
        "sha": "eb9fdc77d31849e5692c57f508150b3fe78a97eb",
        "filename": "src/policy/fees.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 6,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d825838e6472f73c491f93506cb003472f071602/src/policy/fees.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d825838e6472f73c491f93506cb003472f071602/src/policy/fees.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/fees.cpp?ref=d825838e6472f73c491f93506cb003472f071602",
        "patch": "@@ -359,7 +359,7 @@ void CBlockPolicyEstimator::processBlockTx(unsigned int nBlockHeight, const CTxM\n }\n \n void CBlockPolicyEstimator::processBlock(unsigned int nBlockHeight,\n-                                         std::vector<CTxMemPoolEntry>& entries, bool fCurrentEstimate)\n+                                         std::vector<CTxMemPoolEntry>& entries)\n {\n     if (nBlockHeight <= nBestSeenHeight) {\n         // Ignore side chains and re-orgs; assuming they are random\n@@ -370,11 +370,6 @@ void CBlockPolicyEstimator::processBlock(unsigned int nBlockHeight,\n         return;\n     }\n \n-    // Only want to be updating estimates when our blockchain is synced,\n-    // otherwise we'll miscalculate how many blocks its taking to get included.\n-    if (!fCurrentEstimate)\n-        return;\n-\n     // Must update nBestSeenHeight in sync with ClearCurrent so that\n     // calls to removeTx (via processBlockTx) correctly calculate age\n     // of unconfirmed txs to remove from tracking."
      },
      {
        "sha": "a61ae181308ff0ee5c72e25a08092c6ec024cac7",
        "filename": "src/policy/fees.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d825838e6472f73c491f93506cb003472f071602/src/policy/fees.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d825838e6472f73c491f93506cb003472f071602/src/policy/fees.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/fees.h?ref=d825838e6472f73c491f93506cb003472f071602",
        "patch": "@@ -203,7 +203,7 @@ class CBlockPolicyEstimator\n \n     /** Process all the transactions that have been included in a block */\n     void processBlock(unsigned int nBlockHeight,\n-                      std::vector<CTxMemPoolEntry>& entries, bool fCurrentEstimate);\n+                      std::vector<CTxMemPoolEntry>& entries);\n \n     /** Process a transaction confirmed in a block*/\n     void processBlockTx(unsigned int nBlockHeight, const CTxMemPoolEntry& entry);"
      },
      {
        "sha": "e97099eb287726f4d417049b32036134b9958559",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d825838e6472f73c491f93506cb003472f071602/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d825838e6472f73c491f93506cb003472f071602/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=d825838e6472f73c491f93506cb003472f071602",
        "patch": "@@ -591,8 +591,7 @@ void CTxMemPool::removeConflicts(const CTransaction &tx)\n /**\n  * Called when a block is connected. Removes from mempool and updates the miner fee estimator.\n  */\n-void CTxMemPool::removeForBlock(const std::vector<CTransactionRef>& vtx, unsigned int nBlockHeight,\n-                                bool fCurrentEstimate)\n+void CTxMemPool::removeForBlock(const std::vector<CTransactionRef>& vtx, unsigned int nBlockHeight)\n {\n     LOCK(cs);\n     std::vector<CTxMemPoolEntry> entries;\n@@ -605,7 +604,7 @@ void CTxMemPool::removeForBlock(const std::vector<CTransactionRef>& vtx, unsigne\n             entries.push_back(*i);\n     }\n     // Before the txs in the new block have been removed from the mempool, update policy estimates\n-    minerPolicyEstimator->processBlock(nBlockHeight, entries, fCurrentEstimate);\n+    minerPolicyEstimator->processBlock(nBlockHeight, entries);\n     for (const auto& tx : vtx)\n     {\n         txiter it = mapTx.find(tx->GetHash());"
      },
      {
        "sha": "b4f52e64737c57c10e217c6a77b4caf6645729bd",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d825838e6472f73c491f93506cb003472f071602/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d825838e6472f73c491f93506cb003472f071602/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=d825838e6472f73c491f93506cb003472f071602",
        "patch": "@@ -529,8 +529,7 @@ class CTxMemPool\n     void removeRecursive(const CTransaction &tx);\n     void removeForReorg(const CCoinsViewCache *pcoins, unsigned int nMemPoolHeight, int flags);\n     void removeConflicts(const CTransaction &tx);\n-    void removeForBlock(const std::vector<CTransactionRef>& vtx, unsigned int nBlockHeight,\n-                        bool fCurrentEstimate = true);\n+    void removeForBlock(const std::vector<CTransactionRef>& vtx, unsigned int nBlockHeight);\n     void clear();\n     void _clear(); //lock free\n     bool CompareDepthAndScore(const uint256& hasha, const uint256& hashb);"
      },
      {
        "sha": "fb6a902bc9d2eb5c9fd0f802af8a70537fc20bfc",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d825838e6472f73c491f93506cb003472f071602/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d825838e6472f73c491f93506cb003472f071602/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=d825838e6472f73c491f93506cb003472f071602",
        "patch": "@@ -2204,7 +2204,7 @@ bool static ConnectTip(CValidationState& state, const CChainParams& chainparams,\n     int64_t nTime5 = GetTimeMicros(); nTimeChainState += nTime5 - nTime4;\n     LogPrint(\"bench\", \"  - Writing chainstate: %.2fms [%.2fs]\\n\", (nTime5 - nTime4) * 0.001, nTimeChainState * 0.000001);\n     // Remove conflicting transactions from the mempool.;\n-    mempool.removeForBlock(blockConnecting.vtx, pindexNew->nHeight, !IsInitialBlockDownload());\n+    mempool.removeForBlock(blockConnecting.vtx, pindexNew->nHeight);\n     // Update chainActive & related variables.\n     UpdateTip(pindexNew, chainparams);\n "
      }
    ]
  },
  {
    "sha": "ebafdcabb10a89b491cdb8430bc43b0220d436df",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplYmFmZGNhYmIxMGE4OWI0OTFjZGI4NDMwYmM0M2IwMjIwZDQzNmRm",
    "commit": {
      "author": {
        "name": "Alex Morcos",
        "email": "morcos@chaincode.com",
        "date": "2016-11-11T19:16:42Z"
      },
      "committer": {
        "name": "Alex Morcos",
        "email": "morcos@chaincode.com",
        "date": "2017-01-04T17:09:34Z"
      },
      "message": "Pass pointers to existing CTxMemPoolEntries to fee estimation",
      "tree": {
        "sha": "9202ddfb803496ab2de305dc29a4a866cb49747a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9202ddfb803496ab2de305dc29a4a866cb49747a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ebafdcabb10a89b491cdb8430bc43b0220d436df",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ebafdcabb10a89b491cdb8430bc43b0220d436df",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ebafdcabb10a89b491cdb8430bc43b0220d436df",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ebafdcabb10a89b491cdb8430bc43b0220d436df/comments",
    "author": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d825838e6472f73c491f93506cb003472f071602",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d825838e6472f73c491f93506cb003472f071602",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d825838e6472f73c491f93506cb003472f071602"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 9,
      "deletions": 9
    },
    "files": [
      {
        "sha": "cb83bcf716cd819a8ca45e0eb3ebec2a7a751f2f",
        "filename": "src/policy/fees.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ebafdcabb10a89b491cdb8430bc43b0220d436df/src/policy/fees.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ebafdcabb10a89b491cdb8430bc43b0220d436df/src/policy/fees.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/fees.cpp?ref=ebafdcabb10a89b491cdb8430bc43b0220d436df",
        "patch": "@@ -334,17 +334,17 @@ void CBlockPolicyEstimator::processTransaction(const CTxMemPoolEntry& entry, boo\n     mapMemPoolTxs[hash].bucketIndex = feeStats.NewTx(txHeight, (double)feeRate.GetFeePerK());\n }\n \n-void CBlockPolicyEstimator::processBlockTx(unsigned int nBlockHeight, const CTxMemPoolEntry& entry)\n+void CBlockPolicyEstimator::processBlockTx(unsigned int nBlockHeight, const CTxMemPoolEntry* entry)\n {\n-    if (!removeTx(entry.GetTx().GetHash())) {\n+    if (!removeTx(entry->GetTx().GetHash())) {\n         // This transaction wasn't being tracked for fee estimation\n         return;\n     }\n \n     // How many blocks did it take for miners to include this transaction?\n     // blocksToConfirm is 1-based, so a transaction included in the earliest\n     // possible block has confirmation count of 1\n-    int blocksToConfirm = nBlockHeight - entry.GetHeight();\n+    int blocksToConfirm = nBlockHeight - entry->GetHeight();\n     if (blocksToConfirm <= 0) {\n         // This can't happen because we don't process transactions from a block with a height\n         // lower than our greatest seen height\n@@ -353,13 +353,13 @@ void CBlockPolicyEstimator::processBlockTx(unsigned int nBlockHeight, const CTxM\n     }\n \n     // Feerates are stored and reported as BTC-per-kb:\n-    CFeeRate feeRate(entry.GetFee(), entry.GetTxSize());\n+    CFeeRate feeRate(entry->GetFee(), entry->GetTxSize());\n \n     feeStats.Record(blocksToConfirm, (double)feeRate.GetFeePerK());\n }\n \n void CBlockPolicyEstimator::processBlock(unsigned int nBlockHeight,\n-                                         std::vector<CTxMemPoolEntry>& entries)\n+                                         std::vector<const CTxMemPoolEntry*>& entries)\n {\n     if (nBlockHeight <= nBestSeenHeight) {\n         // Ignore side chains and re-orgs; assuming they are random"
      },
      {
        "sha": "e1684ebcb941fa55a2132ee2e7bc0660beb8b644",
        "filename": "src/policy/fees.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ebafdcabb10a89b491cdb8430bc43b0220d436df/src/policy/fees.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ebafdcabb10a89b491cdb8430bc43b0220d436df/src/policy/fees.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/fees.h?ref=ebafdcabb10a89b491cdb8430bc43b0220d436df",
        "patch": "@@ -203,10 +203,10 @@ class CBlockPolicyEstimator\n \n     /** Process all the transactions that have been included in a block */\n     void processBlock(unsigned int nBlockHeight,\n-                      std::vector<CTxMemPoolEntry>& entries);\n+                      std::vector<const CTxMemPoolEntry*>& entries);\n \n     /** Process a transaction confirmed in a block*/\n-    void processBlockTx(unsigned int nBlockHeight, const CTxMemPoolEntry& entry);\n+    void processBlockTx(unsigned int nBlockHeight, const CTxMemPoolEntry* entry);\n \n     /** Process a transaction accepted to the mempool*/\n     void processTransaction(const CTxMemPoolEntry& entry, bool validFeeEstimate);"
      },
      {
        "sha": "4f4540a1fc7f7699baf0819ea4889ab435271dd4",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ebafdcabb10a89b491cdb8430bc43b0220d436df/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ebafdcabb10a89b491cdb8430bc43b0220d436df/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=ebafdcabb10a89b491cdb8430bc43b0220d436df",
        "patch": "@@ -594,14 +594,14 @@ void CTxMemPool::removeConflicts(const CTransaction &tx)\n void CTxMemPool::removeForBlock(const std::vector<CTransactionRef>& vtx, unsigned int nBlockHeight)\n {\n     LOCK(cs);\n-    std::vector<CTxMemPoolEntry> entries;\n+    std::vector<const CTxMemPoolEntry*> entries;\n     for (const auto& tx : vtx)\n     {\n         uint256 hash = tx->GetHash();\n \n         indexed_transaction_set::iterator i = mapTx.find(hash);\n         if (i != mapTx.end())\n-            entries.push_back(*i);\n+            entries.push_back(&*i);\n     }\n     // Before the txs in the new block have been removed from the mempool, update policy estimates\n     minerPolicyEstimator->processBlock(nBlockHeight, entries);"
      }
    ]
  },
  {
    "sha": "dc008c462f6df84dd444c9646f7ca64ee1c8c841",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkYzAwOGM0NjJmNmRmODRkZDQ0NGM5NjQ2ZjdjYTY0ZWUxYzhjODQx",
    "commit": {
      "author": {
        "name": "Alex Morcos",
        "email": "morcos@chaincode.com",
        "date": "2016-11-11T18:29:13Z"
      },
      "committer": {
        "name": "Alex Morcos",
        "email": "morcos@chaincode.com",
        "date": "2017-01-04T17:10:17Z"
      },
      "message": "Add IsCurrentForFeeEstimatation\n\nMake a more conservative notion of whether the node is caught up to the rest of the network and only count transactions as fee estimation data points if the node is caught up.",
      "tree": {
        "sha": "d9ad056188457ee015bba64c346b01cd2b358b4f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d9ad056188457ee015bba64c346b01cd2b358b4f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dc008c462f6df84dd444c9646f7ca64ee1c8c841",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dc008c462f6df84dd444c9646f7ca64ee1c8c841",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/dc008c462f6df84dd444c9646f7ca64ee1c8c841",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dc008c462f6df84dd444c9646f7ca64ee1c8c841/comments",
    "author": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ebafdcabb10a89b491cdb8430bc43b0220d436df",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ebafdcabb10a89b491cdb8430bc43b0220d436df",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ebafdcabb10a89b491cdb8430bc43b0220d436df"
      }
    ],
    "stats": {
      "total": 21,
      "additions": 20,
      "deletions": 1
    },
    "files": [
      {
        "sha": "264fdd83d682f1732ba7acb845d42aad294f3269",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 18,
        "deletions": 1,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dc008c462f6df84dd444c9646f7ca64ee1c8c841/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dc008c462f6df84dd444c9646f7ca64ee1c8c841/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=dc008c462f6df84dd444c9646f7ca64ee1c8c841",
        "patch": "@@ -525,6 +525,18 @@ std::string FormatStateMessage(const CValidationState &state)\n         state.GetRejectCode());\n }\n \n+static bool IsCurrentForFeeEstimation()\n+{\n+    AssertLockHeld(cs_main);\n+    if (IsInitialBlockDownload())\n+        return false;\n+    if (chainActive.Tip()->GetBlockTime() < (GetTime() - MAX_FEE_ESTIMATION_TIP_AGE))\n+        return false;\n+    if (chainActive.Height() < pindexBestHeader->nHeight - 1)\n+        return false;\n+    return true;\n+}\n+\n bool AcceptToMemoryPoolWorker(CTxMemPool& pool, CValidationState& state, const CTransactionRef& ptx, bool fLimitFree,\n                               bool* pfMissingInputs, int64_t nAcceptTime, bool fOverrideMempoolLimit, const CAmount& nAbsurdFee,\n                               std::vector<uint256>& vHashTxnToUncache)\n@@ -941,8 +953,13 @@ bool AcceptToMemoryPoolWorker(CTxMemPool& pool, CValidationState& state, const C\n         }\n         pool.RemoveStaged(allConflicting, false);\n \n+        // This transaction should only count for fee estimation if\n+        // the node is not behind and it is not dependent on any other\n+        // transactions in the mempool\n+        bool validForFeeEstimation = IsCurrentForFeeEstimation() && pool.HasNoInputsOf(tx);\n+\n         // Store transaction in memory\n-        pool.addUnchecked(hash, entry, setAncestors, !IsInitialBlockDownload() && pool.HasNoInputsOf(tx));\n+        pool.addUnchecked(hash, entry, setAncestors, validForFeeEstimation);\n \n         // trim mempool and check if tx was trimmed\n         if (!fOverrideMempoolLimit) {"
      },
      {
        "sha": "0f421d59e7232e61578c1514b4f0a1d6aef4f3f1",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dc008c462f6df84dd444c9646f7ca64ee1c8c841/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dc008c462f6df84dd444c9646f7ca64ee1c8c841/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=dc008c462f6df84dd444c9646f7ca64ee1c8c841",
        "patch": "@@ -130,6 +130,8 @@ static const int64_t BLOCK_DOWNLOAD_TIMEOUT_PER_PEER = 500000;\n static const unsigned int DEFAULT_LIMITFREERELAY = 0;\n static const bool DEFAULT_RELAYPRIORITY = true;\n static const int64_t DEFAULT_MAX_TIP_AGE = 24 * 60 * 60;\n+/** Maximum age of our tip for us to be considered current for fee estimation */\n+static const int64_t MAX_FEE_ESTIMATION_TIP_AGE = 3 * 60 * 60;\n \n /** Default for -permitbaremultisig */\n static const bool DEFAULT_PERMIT_BAREMULTISIG = true;"
      }
    ]
  },
  {
    "sha": "5fe0f47aa7d4cd4ed58ad37e6e4035f5c0625a23",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1ZmUwZjQ3YWE3ZDRjZDRlZDU4YWQzN2U2ZTQwMzVmNWMwNjI1YTIz",
    "commit": {
      "author": {
        "name": "Alex Morcos",
        "email": "morcos@chaincode.com",
        "date": "2016-11-11T18:40:27Z"
      },
      "committer": {
        "name": "Alex Morcos",
        "email": "morcos@chaincode.com",
        "date": "2017-01-04T17:10:18Z"
      },
      "message": "Add extra logging to processBlock in fee estimation.",
      "tree": {
        "sha": "c94eb4881fdd09b1d728863dddd6cae35f3cbf8d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c94eb4881fdd09b1d728863dddd6cae35f3cbf8d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5fe0f47aa7d4cd4ed58ad37e6e4035f5c0625a23",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5fe0f47aa7d4cd4ed58ad37e6e4035f5c0625a23",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5fe0f47aa7d4cd4ed58ad37e6e4035f5c0625a23",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5fe0f47aa7d4cd4ed58ad37e6e4035f5c0625a23/comments",
    "author": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "dc008c462f6df84dd444c9646f7ca64ee1c8c841",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dc008c462f6df84dd444c9646f7ca64ee1c8c841",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/dc008c462f6df84dd444c9646f7ca64ee1c8c841"
      }
    ],
    "stats": {
      "total": 33,
      "additions": 23,
      "deletions": 10
    },
    "files": [
      {
        "sha": "ec1dd492cbd1098af2726b5e389bceddcf72c963",
        "filename": "src/policy/fees.cpp",
        "status": "modified",
        "additions": 19,
        "deletions": 9,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5fe0f47aa7d4cd4ed58ad37e6e4035f5c0625a23/src/policy/fees.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5fe0f47aa7d4cd4ed58ad37e6e4035f5c0625a23/src/policy/fees.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/fees.cpp?ref=5fe0f47aa7d4cd4ed58ad37e6e4035f5c0625a23",
        "patch": "@@ -294,7 +294,7 @@ bool CBlockPolicyEstimator::removeTx(uint256 hash)\n }\n \n CBlockPolicyEstimator::CBlockPolicyEstimator(const CFeeRate& _minRelayFee)\n-    : nBestSeenHeight(0)\n+    : nBestSeenHeight(0), trackedTxs(0), untrackedTxs(0)\n {\n     static_assert(MIN_FEERATE > 0, \"Min feerate must be nonzero\");\n     minTrackedFee = _minRelayFee < CFeeRate(MIN_FEERATE) ? CFeeRate(MIN_FEERATE) : _minRelayFee;\n@@ -324,8 +324,11 @@ void CBlockPolicyEstimator::processTransaction(const CTxMemPoolEntry& entry, boo\n \n     // Only want to be updating estimates when our blockchain is synced,\n     // otherwise we'll miscalculate how many blocks its taking to get included.\n-    if (!validFeeEstimate)\n+    if (!validFeeEstimate) {\n+        untrackedTxs++;\n         return;\n+    }\n+    trackedTxs++;\n \n     // Feerates are stored and reported as BTC-per-kb:\n     CFeeRate feeRate(entry.GetFee(), entry.GetTxSize());\n@@ -334,11 +337,11 @@ void CBlockPolicyEstimator::processTransaction(const CTxMemPoolEntry& entry, boo\n     mapMemPoolTxs[hash].bucketIndex = feeStats.NewTx(txHeight, (double)feeRate.GetFeePerK());\n }\n \n-void CBlockPolicyEstimator::processBlockTx(unsigned int nBlockHeight, const CTxMemPoolEntry* entry)\n+bool CBlockPolicyEstimator::processBlockTx(unsigned int nBlockHeight, const CTxMemPoolEntry* entry)\n {\n     if (!removeTx(entry->GetTx().GetHash())) {\n         // This transaction wasn't being tracked for fee estimation\n-        return;\n+        return false;\n     }\n \n     // How many blocks did it take for miners to include this transaction?\n@@ -349,13 +352,14 @@ void CBlockPolicyEstimator::processBlockTx(unsigned int nBlockHeight, const CTxM\n         // This can't happen because we don't process transactions from a block with a height\n         // lower than our greatest seen height\n         LogPrint(\"estimatefee\", \"Blockpolicy error Transaction had negative blocksToConfirm\\n\");\n-        return;\n+        return false;\n     }\n \n     // Feerates are stored and reported as BTC-per-kb:\n     CFeeRate feeRate(entry->GetFee(), entry->GetTxSize());\n \n     feeStats.Record(blocksToConfirm, (double)feeRate.GetFeePerK());\n+    return true;\n }\n \n void CBlockPolicyEstimator::processBlock(unsigned int nBlockHeight,\n@@ -378,15 +382,21 @@ void CBlockPolicyEstimator::processBlock(unsigned int nBlockHeight,\n     // Clear the current block state and update unconfirmed circular buffer\n     feeStats.ClearCurrent(nBlockHeight);\n \n+    unsigned int countedTxs = 0;\n     // Repopulate the current block states\n-    for (unsigned int i = 0; i < entries.size(); i++)\n-        processBlockTx(nBlockHeight, entries[i]);\n+    for (unsigned int i = 0; i < entries.size(); i++) {\n+        if (processBlockTx(nBlockHeight, entries[i]))\n+            countedTxs++;\n+    }\n \n     // Update all exponential averages with the current block state\n     feeStats.UpdateMovingAverages();\n \n-    LogPrint(\"estimatefee\", \"Blockpolicy after updating estimates for %u confirmed entries, new mempool map size %u\\n\",\n-             entries.size(), mapMemPoolTxs.size());\n+    LogPrint(\"estimatefee\", \"Blockpolicy after updating estimates for %u of %u txs in block, since last block %u of %u tracked, new mempool map size %u\\n\",\n+             countedTxs, entries.size(), trackedTxs, trackedTxs + untrackedTxs, mapMemPoolTxs.size());\n+\n+    trackedTxs = 0;\n+    untrackedTxs = 0;\n }\n \n CFeeRate CBlockPolicyEstimator::estimateFee(int confTarget)"
      },
      {
        "sha": "064466afe40d36516fd375751dea49d260301130",
        "filename": "src/policy/fees.h",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5fe0f47aa7d4cd4ed58ad37e6e4035f5c0625a23/src/policy/fees.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5fe0f47aa7d4cd4ed58ad37e6e4035f5c0625a23/src/policy/fees.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/fees.h?ref=5fe0f47aa7d4cd4ed58ad37e6e4035f5c0625a23",
        "patch": "@@ -206,7 +206,7 @@ class CBlockPolicyEstimator\n                       std::vector<const CTxMemPoolEntry*>& entries);\n \n     /** Process a transaction confirmed in a block*/\n-    void processBlockTx(unsigned int nBlockHeight, const CTxMemPoolEntry* entry);\n+    bool processBlockTx(unsigned int nBlockHeight, const CTxMemPoolEntry* entry);\n \n     /** Process a transaction accepted to the mempool*/\n     void processTransaction(const CTxMemPoolEntry& entry, bool validFeeEstimate);\n@@ -258,6 +258,9 @@ class CBlockPolicyEstimator\n \n     /** Classes to track historical data on transaction confirmations */\n     TxConfirmStats feeStats;\n+\n+    unsigned int trackedTxs;\n+    unsigned int untrackedTxs;\n };\n \n class FeeFilterRounder"
      }
    ]
  },
  {
    "sha": "78ae62d2646c5e6db410f324046d0c3b15e0ad0a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3OGFlNjJkMjY0NmM1ZTZkYjQxMGYzMjQwNDZkMGMzYjE1ZTBhZDBh",
    "commit": {
      "author": {
        "name": "Alex Morcos",
        "email": "morcos@chaincode.com",
        "date": "2016-11-29T18:55:26Z"
      },
      "committer": {
        "name": "Alex Morcos",
        "email": "morcos@chaincode.com",
        "date": "2017-01-04T17:10:18Z"
      },
      "message": "Add clarifying comments to fee estimation",
      "tree": {
        "sha": "fe8f4588941c1b07ee376d40543823c4204a20db",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fe8f4588941c1b07ee376d40543823c4204a20db"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/78ae62d2646c5e6db410f324046d0c3b15e0ad0a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/78ae62d2646c5e6db410f324046d0c3b15e0ad0a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/78ae62d2646c5e6db410f324046d0c3b15e0ad0a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/78ae62d2646c5e6db410f324046d0c3b15e0ad0a/comments",
    "author": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5fe0f47aa7d4cd4ed58ad37e6e4035f5c0625a23",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5fe0f47aa7d4cd4ed58ad37e6e4035f5c0625a23",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5fe0f47aa7d4cd4ed58ad37e6e4035f5c0625a23"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 6,
      "deletions": 1
    },
    "files": [
      {
        "sha": "f1c93a4978825743737ffdcd707d171b7115014d",
        "filename": "src/policy/fees.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/78ae62d2646c5e6db410f324046d0c3b15e0ad0a/src/policy/fees.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/78ae62d2646c5e6db410f324046d0c3b15e0ad0a/src/policy/fees.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/fees.cpp?ref=78ae62d2646c5e6db410f324046d0c3b15e0ad0a",
        "patch": "@@ -281,6 +281,11 @@ void TxConfirmStats::removeTx(unsigned int entryHeight, unsigned int nBestSeenHe\n     }\n }\n \n+// This function is called from CTxMemPool::removeUnchecked to ensure\n+// txs removed from the mempool for any reason are no longer\n+// tracked. Txs that were part of a block have already been removed in\n+// processBlockTx to ensure they are never double tracked, but it is\n+// of no harm to try to remove them again.\n bool CBlockPolicyEstimator::removeTx(uint256 hash)\n {\n     std::map<uint256, TxStatsInfo>::iterator pos = mapMemPoolTxs.find(hash);"
      },
      {
        "sha": "b41fa8aad8855c1bbf1de690c8c59ac62fd7484e",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/78ae62d2646c5e6db410f324046d0c3b15e0ad0a/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/78ae62d2646c5e6db410f324046d0c3b15e0ad0a/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=78ae62d2646c5e6db410f324046d0c3b15e0ad0a",
        "patch": "@@ -130,7 +130,7 @@ static const int64_t BLOCK_DOWNLOAD_TIMEOUT_PER_PEER = 500000;\n static const unsigned int DEFAULT_LIMITFREERELAY = 0;\n static const bool DEFAULT_RELAYPRIORITY = true;\n static const int64_t DEFAULT_MAX_TIP_AGE = 24 * 60 * 60;\n-/** Maximum age of our tip for us to be considered current for fee estimation */\n+/** Maximum age of our tip in seconds for us to be considered current for fee estimation */\n static const int64_t MAX_FEE_ESTIMATION_TIP_AGE = 3 * 60 * 60;\n \n /** Default for -permitbaremultisig */"
      }
    ]
  },
  {
    "sha": "44b64b933dec10f5ffcd7f34e7bf5e4ed97f671e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0NGI2NGI5MzNkZWMxMGY1ZmZjZDdmMzRlN2JmNWU0ZWQ5N2Y2NzFl",
    "commit": {
      "author": {
        "name": "Alex Morcos",
        "email": "morcos@chaincode.com",
        "date": "2016-11-29T20:40:03Z"
      },
      "committer": {
        "name": "Alex Morcos",
        "email": "morcos@chaincode.com",
        "date": "2017-01-04T17:10:18Z"
      },
      "message": "Fix edge case with stale fee estimates",
      "tree": {
        "sha": "d98f7f2cf07945d50805712b5e983a8927861e8c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d98f7f2cf07945d50805712b5e983a8927861e8c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/44b64b933dec10f5ffcd7f34e7bf5e4ed97f671e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/44b64b933dec10f5ffcd7f34e7bf5e4ed97f671e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/44b64b933dec10f5ffcd7f34e7bf5e4ed97f671e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/44b64b933dec10f5ffcd7f34e7bf5e4ed97f671e/comments",
    "author": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "78ae62d2646c5e6db410f324046d0c3b15e0ad0a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/78ae62d2646c5e6db410f324046d0c3b15e0ad0a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/78ae62d2646c5e6db410f324046d0c3b15e0ad0a"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 3,
      "deletions": 1
    },
    "files": [
      {
        "sha": "5407aefb45257e1e9446960fc0e2ad8d7ac72be3",
        "filename": "src/policy/fees.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44b64b933dec10f5ffcd7f34e7bf5e4ed97f671e/src/policy/fees.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44b64b933dec10f5ffcd7f34e7bf5e4ed97f671e/src/policy/fees.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/fees.cpp?ref=44b64b933dec10f5ffcd7f34e7bf5e4ed97f671e",
        "patch": "@@ -321,9 +321,11 @@ void CBlockPolicyEstimator::processTransaction(const CTxMemPoolEntry& entry, boo\n \treturn;\n     }\n \n-    if (txHeight < nBestSeenHeight) {\n+    if (txHeight != nBestSeenHeight) {\n         // Ignore side chains and re-orgs; assuming they are random they don't\n         // affect the estimate.  We'll potentially double count transactions in 1-block reorgs.\n+        // Ignore txs if BlockPolicyEstimator is not in sync with chainActive.Tip().\n+        // It will be synced next time a block is processed.\n         return;\n     }\n "
      }
    ]
  }
]