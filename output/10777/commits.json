[
  {
    "sha": "49eb0916da3f07250393111b6bbff080b3d8edd6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0OWViMDkxNmRhM2YwNzI1MDM5MzExMWI2YmJmZjA4MGIzZDhlZGQ2",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2017-07-09T11:05:01Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2017-07-09T11:05:01Z"
      },
      "message": "[tests] Avoid redundant assignments. Remove unused variables.",
      "tree": {
        "sha": "27675e7bda3a3cdea731c05ee8bb507fb65a0d5e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/27675e7bda3a3cdea731c05ee8bb507fb65a0d5e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/49eb0916da3f07250393111b6bbff080b3d8edd6",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/49eb0916da3f07250393111b6bbff080b3d8edd6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/49eb0916da3f07250393111b6bbff080b3d8edd6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/49eb0916da3f07250393111b6bbff080b3d8edd6/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1d4805ce04645f3203b0cfd3d66ea710e7433eb4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1d4805ce04645f3203b0cfd3d66ea710e7433eb4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1d4805ce04645f3203b0cfd3d66ea710e7433eb4"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 4,
      "deletions": 10
    },
    "files": [
      {
        "sha": "280eb59ce8172883419ff53e0acc42e4d0a6b520",
        "filename": "src/test/scriptnum_tests.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 6,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49eb0916da3f07250393111b6bbff080b3d8edd6/src/test/scriptnum_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49eb0916da3f07250393111b6bbff080b3d8edd6/src/test/scriptnum_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/scriptnum_tests.cpp?ref=49eb0916da3f07250393111b6bbff080b3d8edd6",
        "patch": "@@ -29,10 +29,7 @@ static void CheckCreateVch(const int64_t& num)\n     CScriptNum scriptnum(num);\n     BOOST_CHECK(verify(bignum, scriptnum));\n \n-    std::vector<unsigned char> vch = bignum.getvch();\n-\n     CScriptNum10 bignum2(bignum.getvch(), false);\n-    vch = scriptnum.getvch();\n     CScriptNum scriptnum2(scriptnum.getvch(), false);\n     BOOST_CHECK(verify(bignum2, scriptnum2));\n \n@@ -90,11 +87,10 @@ static void CheckSubtract(const int64_t& num1, const int64_t& num2)\n     const CScriptNum10 bignum2(num2);\n     const CScriptNum scriptnum1(num1);\n     const CScriptNum scriptnum2(num2);\n-    bool invalid = false;\n \n     // int64_t overflow is undefined.\n-    invalid = ((num2 > 0 && num1 < std::numeric_limits<int64_t>::min() + num2) ||\n-               (num2 < 0 && num1 > std::numeric_limits<int64_t>::max() + num2));\n+    bool invalid = ((num2 > 0 && num1 < std::numeric_limits<int64_t>::min() + num2) ||\n+                    (num2 < 0 && num1 > std::numeric_limits<int64_t>::max() + num2));\n     if (!invalid)\n     {\n         BOOST_CHECK(verify(bignum1 - bignum2, scriptnum1 - scriptnum2));"
      },
      {
        "sha": "ecbdf57788ffcc09c8921cbc695627c3b23bc005",
        "filename": "src/test/sighash_tests.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 4,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49eb0916da3f07250393111b6bbff080b3d8edd6/src/test/sighash_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49eb0916da3f07250393111b6bbff080b3d8edd6/src/test/sighash_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/sighash_tests.cpp?ref=49eb0916da3f07250393111b6bbff080b3d8edd6",
        "patch": "@@ -124,11 +124,9 @@ BOOST_AUTO_TEST_CASE(sighash_test)\n     #if defined(PRINT_SIGHASH_JSON)\n     std::cout << \"[\\n\";\n     std::cout << \"\\t[\\\"raw_transaction, script, input_index, hashType, signature_hash (result)\\\"],\\n\";\n-    #endif\n+    int nRandomTests = 500;\n+    #else\n     int nRandomTests = 50000;\n-\n-    #if defined(PRINT_SIGHASH_JSON)\n-    nRandomTests = 500;\n     #endif\n     for (int i=0; i<nRandomTests; i++) {\n         int nHashType = InsecureRand32();"
      }
    ]
  }
]