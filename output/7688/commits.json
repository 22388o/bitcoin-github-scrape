[
  {
    "sha": "c3932b32700a210b5fbf36e32bddac604dec9288",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjMzkzMmIzMjcwMGEyMTBiNWZiZjM2ZTMyYmRkYWM2MDRkZWM5Mjg4",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2016-03-14T18:22:11Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2016-03-14T18:22:11Z"
      },
      "message": "List solvability in listunspent output and improve help",
      "tree": {
        "sha": "16616ff839756fce2b18515d91b0375adc30f7b7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/16616ff839756fce2b18515d91b0375adc30f7b7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c3932b32700a210b5fbf36e32bddac604dec9288",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c3932b32700a210b5fbf36e32bddac604dec9288",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c3932b32700a210b5fbf36e32bddac604dec9288",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c3932b32700a210b5fbf36e32bddac604dec9288/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "48f39058315c908c360acb596923cbc090119480",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/48f39058315c908c360acb596923cbc090119480",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/48f39058315c908c360acb596923cbc090119480"
      }
    ],
    "stats": {
      "total": 22,
      "additions": 14,
      "deletions": 8
    },
    "files": [
      {
        "sha": "a5b43270f3a565c407375743d1470179de23f4bc",
        "filename": "src/qt/walletmodel.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c3932b32700a210b5fbf36e32bddac604dec9288/src/qt/walletmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c3932b32700a210b5fbf36e32bddac604dec9288/src/qt/walletmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.cpp?ref=c3932b32700a210b5fbf36e32bddac604dec9288",
        "patch": "@@ -572,7 +572,7 @@ void WalletModel::getOutputs(const std::vector<COutPoint>& vOutpoints, std::vect\n         if (!wallet->mapWallet.count(outpoint.hash)) continue;\n         int nDepth = wallet->mapWallet[outpoint.hash].GetDepthInMainChain();\n         if (nDepth < 0) continue;\n-        COutput out(&wallet->mapWallet[outpoint.hash], outpoint.n, nDepth, true);\n+        COutput out(&wallet->mapWallet[outpoint.hash], outpoint.n, nDepth, true, true);\n         vOutputs.push_back(out);\n     }\n }\n@@ -599,7 +599,7 @@ void WalletModel::listCoins(std::map<QString, std::vector<COutput> >& mapCoins)\n         if (!wallet->mapWallet.count(outpoint.hash)) continue;\n         int nDepth = wallet->mapWallet[outpoint.hash].GetDepthInMainChain();\n         if (nDepth < 0) continue;\n-        COutput out(&wallet->mapWallet[outpoint.hash], outpoint.n, nDepth, true);\n+        COutput out(&wallet->mapWallet[outpoint.hash], outpoint.n, nDepth, true, true);\n         if (outpoint.n < out.tx->vout.size() && wallet->IsMine(out.tx->vout[outpoint.n]) == ISMINE_SPENDABLE)\n             vCoins.push_back(out);\n     }\n@@ -611,7 +611,7 @@ void WalletModel::listCoins(std::map<QString, std::vector<COutput> >& mapCoins)\n         while (wallet->IsChange(cout.tx->vout[cout.i]) && cout.tx->vin.size() > 0 && wallet->IsMine(cout.tx->vin[0]))\n         {\n             if (!wallet->mapWallet.count(cout.tx->vin[0].prevout.hash)) break;\n-            cout = COutput(&wallet->mapWallet[cout.tx->vin[0].prevout.hash], cout.tx->vin[0].prevout.n, 0, true);\n+            cout = COutput(&wallet->mapWallet[cout.tx->vin[0].prevout.hash], cout.tx->vin[0].prevout.n, 0, true, true);\n         }\n \n         CTxDestination address;"
      },
      {
        "sha": "077b3525472e464a5448345b18b8af6c51f6b9a7",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c3932b32700a210b5fbf36e32bddac604dec9288/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c3932b32700a210b5fbf36e32bddac604dec9288/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=c3932b32700a210b5fbf36e32bddac604dec9288",
        "patch": "@@ -2348,7 +2348,9 @@ UniValue listunspent(const UniValue& params, bool fHelp)\n             \"    \\\"account\\\" : \\\"account\\\",  (string) DEPRECATED. The associated account, or \\\"\\\" for the default account\\n\"\n             \"    \\\"scriptPubKey\\\" : \\\"key\\\", (string) the script key\\n\"\n             \"    \\\"amount\\\" : x.xxx,         (numeric) the transaction amount in \" + CURRENCY_UNIT + \"\\n\"\n-            \"    \\\"confirmations\\\" : n       (numeric) The number of confirmations\\n\"\n+            \"    \\\"confirmations\\\" : n,      (numeric) The number of confirmations\\n\"\n+            \"    \\\"spendable\\\" : xxx,        (bool) Whether we have the private keys to spend this output\\n\"\n+            \"    \\\"solvable\\\" : xxx          (bool) Whether we know how to spend this output, ignoring the lack of keys\\n\"\n             \"  }\\n\"\n             \"  ,...\\n\"\n             \"]\\n\"\n@@ -2425,6 +2427,7 @@ UniValue listunspent(const UniValue& params, bool fHelp)\n         entry.push_back(Pair(\"amount\",ValueFromAmount(nValue)));\n         entry.push_back(Pair(\"confirmations\",out.nDepth));\n         entry.push_back(Pair(\"spendable\", out.fSpendable));\n+        entry.push_back(Pair(\"solvable\", out.fSolvable));\n         results.push_back(entry);\n     }\n \n@@ -2446,6 +2449,7 @@ UniValue fundrawtransaction(const UniValue& params, bool fHelp)\n                             \"Note that all existing inputs must have their previous output transaction be in the wallet.\\n\"\n                             \"Note that all inputs selected must be of standard form and P2SH scripts must be\"\n                             \"in the wallet using importaddress or addmultisigaddress (to calculate fees).\\n\"\n+                            \"You can see whether this is the case by checking the \\\"solvable\\\" field in the listunspent output.\\n\"\n                             \"Only pay-to-pubkey, multisig, and P2SH versions thereof are currently supported for watch-only\\n\"\n                             \"\\nArguments:\\n\"\n                             \"1. \\\"hexstring\\\"     (string, required) The hex string of the raw transaction\\n\""
      },
      {
        "sha": "06c9c903e4c7630c3b1db3d157e7165cdd063e56",
        "filename": "src/wallet/test/wallet_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c3932b32700a210b5fbf36e32bddac604dec9288/src/wallet/test/wallet_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c3932b32700a210b5fbf36e32bddac604dec9288/src/wallet/test/wallet_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/test/wallet_tests.cpp?ref=c3932b32700a210b5fbf36e32bddac604dec9288",
        "patch": "@@ -48,7 +48,7 @@ static void add_coin(const CAmount& nValue, int nAge = 6*24, bool fIsFromMe = fa\n         wtx->fDebitCached = true;\n         wtx->nDebitCached = 1;\n     }\n-    COutput output(wtx, nInput, nAge, true);\n+    COutput output(wtx, nInput, nAge, true, true);\n     vCoins.push_back(output);\n }\n "
      },
      {
        "sha": "59008282473f8dde0d9cce5b08854ca6b74f2be4",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c3932b32700a210b5fbf36e32bddac604dec9288/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c3932b32700a210b5fbf36e32bddac604dec9288/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=c3932b32700a210b5fbf36e32bddac604dec9288",
        "patch": "@@ -1675,7 +1675,8 @@ void CWallet::AvailableCoins(vector<COutput>& vCoins, bool fOnlyConfirmed, const\n                     (!coinControl || !coinControl->HasSelected() || coinControl->fAllowOtherInputs || coinControl->IsSelected((*it).first, i)))\n                         vCoins.push_back(COutput(pcoin, i, nDepth,\n                                                  ((mine & ISMINE_SPENDABLE) != ISMINE_NO) ||\n-                                                  (coinControl && coinControl->fAllowWatchOnly && (mine & ISMINE_WATCH_SOLVABLE) != ISMINE_NO)));\n+                                                  (coinControl && coinControl->fAllowWatchOnly && (mine & ISMINE_WATCH_SOLVABLE) != ISMINE_NO),\n+                                                 (mine & (ISMINE_SPENDABLE | ISMINE_WATCH_SOLVABLE)) != ISMINE_NO));\n             }\n         }\n     }"
      },
      {
        "sha": "37a84153b40981463151b356a4263f966ff431d2",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c3932b32700a210b5fbf36e32bddac604dec9288/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c3932b32700a210b5fbf36e32bddac604dec9288/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=c3932b32700a210b5fbf36e32bddac604dec9288",
        "patch": "@@ -412,10 +412,11 @@ class COutput\n     int i;\n     int nDepth;\n     bool fSpendable;\n+    bool fSolvable;\n \n-    COutput(const CWalletTx *txIn, int iIn, int nDepthIn, bool fSpendableIn)\n+    COutput(const CWalletTx *txIn, int iIn, int nDepthIn, bool fSpendableIn, bool fSolvableIn)\n     {\n-        tx = txIn; i = iIn; nDepth = nDepthIn; fSpendable = fSpendableIn;\n+        tx = txIn; i = iIn; nDepth = nDepthIn; fSpendable = fSpendableIn; fSolvable = fSolvableIn;\n     }\n \n     std::string ToString() const;"
      }
    ]
  }
]