[
  {
    "sha": "73e705858f5cb163e243304833f9aba756836dbe",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3M2U3MDU4NThmNWNiMTYzZTI0MzMwNDgzM2Y5YWJhNzU2ODM2ZGJl",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-05-28T09:41:24Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-05-28T09:41:48Z"
      },
      "message": "Default to disable-wallet mode if the wallet doesn't exist\n\nDefault to disable-wallet mode if the wallet doesn't exist,\nand require the user to tell the daemon to create it.\nI think this makes sense eventually, and is a further step toward\nremoving the expectation the Bitcoin Core is a wallet.\n\nAdd a command line option `-createwallet` to create the wallet. Passing\nthis option when the wallet already exists does nothing.\n\nN.B.: The GUI still defaults to creating the wallet by default. There would\nfirst need to be a user-friendly way to create the wallet to change this\nbehavior, for example through a menu option. This is going to be the\nnext step if the idea is accepted.",
      "tree": {
        "sha": "50a014e3538e58911a6ccecf6bc46f7ae2a0ca8b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/50a014e3538e58911a6ccecf6bc46f7ae2a0ca8b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/73e705858f5cb163e243304833f9aba756836dbe",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/73e705858f5cb163e243304833f9aba756836dbe",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/73e705858f5cb163e243304833f9aba756836dbe",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/73e705858f5cb163e243304833f9aba756836dbe/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cd19892d98cb50a8001a63cf0a0c14d85a92550c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cd19892d98cb50a8001a63cf0a0c14d85a92550c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cd19892d98cb50a8001a63cf0a0c14d85a92550c"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 12,
      "deletions": 0
    },
    "files": [
      {
        "sha": "c53a7dec03a4a9c3223566f6b5581cd18466da93",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/73e705858f5cb163e243304833f9aba756836dbe/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/73e705858f5cb163e243304833f9aba756836dbe/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=73e705858f5cb163e243304833f9aba756836dbe",
        "patch": "@@ -242,6 +242,7 @@ std::string HelpMessage(HelpMessageMode hmm)\n \n #ifdef ENABLE_WALLET\n     strUsage += \"\\n\" + _(\"Wallet options:\") + \"\\n\";\n+    strUsage += \"  -createwallet          \" + _(\"Create a new wallet if it doesn't exist yet (default: 0)\") + \"\\n\";\n     strUsage += \"  -disablewallet         \" + _(\"Do not load the wallet and disable wallet RPC calls\") + \"\\n\";\n     strUsage += \"  -paytxfee=<amt>        \" + _(\"Fee per kB to add to transactions you send\") + \"\\n\";\n     strUsage += \"  -rescan                \" + _(\"Rescan the block chain for missing wallet transactions\") + \" \" + _(\"on startup\") + \"\\n\";\n@@ -626,6 +627,13 @@ bool AppInit2(boost::thread_group& threadGroup)\n \n     // ********************************************************* Step 5: verify wallet database integrity\n #ifdef ENABLE_WALLET\n+    // Disable wallet if enabled but cannot be found, unless `-createwallet` is set\n+    if (!fDisableWallet && !filesystem::exists(GetDataDir() / strWalletFile) && !GetBoolArg(\"-createwallet\", false))\n+    {\n+        LogPrintf(\"Could not find wallet %s: disabling wallet functionality. Pass -createwallet to create it.\\n\", strWalletFile);\n+        fDisableWallet = true;\n+    }\n+\n     if (!fDisableWallet) {\n         LogPrintf(\"Using wallet %s\\n\", strWalletFile);\n         uiInterface.InitMessage(_(\"Verifying wallet...\"));"
      },
      {
        "sha": "8298e0bddf7c40061b853c8595c387432d325976",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/73e705858f5cb163e243304833f9aba756836dbe/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/73e705858f5cb163e243304833f9aba756836dbe/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=73e705858f5cb163e243304833f9aba756836dbe",
        "patch": "@@ -464,6 +464,10 @@ int main(int argc, char *argv[])\n     /// 1. Parse command-line options. These take precedence over anything else.\n     // Command-line options take precedence:\n     ParseParameters(argc, argv);\n+    // For the GUI, default to creating the wallet if it doesn't exist, as anything else\n+    // is going to confuse users. A menu option to create the wallet would be nice to have,\n+    // but this will require being able to switch disable-wallet mode at runtime.\n+    SoftSetBoolArg(\"-createwallet\", true);\n \n     // Do not refer to data directory yet, this can be overridden by Intro::pickDataDirectory\n "
      }
    ]
  }
]