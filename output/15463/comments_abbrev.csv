instagibbs,2019-02-28T19:28:11Z,tag 0.18?,https://github.com/bitcoin/bitcoin/pull/15463#issuecomment-468404792,468404792,
DrahtBot,2019-03-21T19:22:17Z,<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.,https://github.com/bitcoin/bitcoin/pull/15463#issuecomment-475368896,475368896,
MarcoFalke,2019-04-23T14:58:19Z,utACK 710a7136f93133bf256d37dc8c8faf5a6b9ba89d,https://github.com/bitcoin/bitcoin/pull/15463#issuecomment-485840036,485840036,
MarcoFalke,2019-02-22T16:44:29Z,"While `item.first` might be unique, `EncodeDestination()` of it might not be unique. You could work around that by creating a temporary `map<string,type(item.second)>`, fill it and then convert to univalue. It would still be cheaper, since insertion into a map is faster O(log(N)) than insertion into an univalue O(N)",https://github.com/bitcoin/bitcoin/pull/15463#discussion_r259421690,259421690,src/wallet/rpcwallet.cpp
promag,2019-02-22T16:47:00Z,"Got it, and also would allow to reduce wallet lock scope.\n\nHowever what happens with duplicate results of `EncodeDestination()` ?",https://github.com/bitcoin/bitcoin/pull/15463#discussion_r259423040,259423040,src/wallet/rpcwallet.cpp
MarcoFalke,2019-02-22T19:40:19Z,"in univalue they'd be replaced, in std::map::insert, they'd be skipped",https://github.com/bitcoin/bitcoin/pull/15463#discussion_r259484592,259484592,src/wallet/rpcwallet.cpp
promag,2019-02-25T01:44:08Z,"Done.\n\nI could reverse the iteration to keep the behaviour, WDYT?",https://github.com/bitcoin/bitcoin/pull/15463#discussion_r259655966,259655966,src/wallet/rpcwallet.cpp
ryanofsky,2019-03-04T14:29:21Z,"It would be good to have a comment like ""Should always be true"" if this is just a defensive check for a theoretical thing that should never happen. Or if there's an actual case where this could be false it would be good to note an example of what could cause this. Also if this can be false, it would be good to note the change in behavior in the commit message, since this code now keeps the first d",https://github.com/bitcoin/bitcoin/pull/15463#discussion_r262080190,262080190,src/wallet/rpcwallet.cpp
promag,2019-03-13T01:33:27Z,"> Or if there's an actual case where this could be false it would be good to note an example of what could cause this.\n\nNot really sure, maybe @MeshCollider can help?\n\n> since this code now keeps the first dup entry instead of the last dup entry.\n\nI've mentioned above https://github.com/bitcoin/bitcoin/pull/15463#discussion_r259655966 that the behavior could be preserved.",https://github.com/bitcoin/bitcoin/pull/15463#discussion_r264946765,264946765,src/wallet/rpcwallet.cpp
ryanofsky,2019-03-13T15:11:38Z,"No need to go down a rabbit hole, but the code here is surprising, and adding a simple comment saying what the intention is (whatever it is) would make be an improvement, in my opinion. Would suggest: ""mapAddressBook is not expected to contain duplicate address strings, but build a separate set as a precaution just in case it does."" or ""It is unclear whether mapAddressBook may contain duplicate ad",https://github.com/bitcoin/bitcoin/pull/15463#discussion_r265178067,265178067,src/wallet/rpcwallet.cpp
promag,2019-03-13T16:42:20Z,"I can add the comment, but I'd love to know if duplicate it could hit duplicate keys.",https://github.com/bitcoin/bitcoin/pull/15463#discussion_r265224426,265224426,src/wallet/rpcwallet.cpp
meshcollider,2019-03-18T09:10:33Z,"I don't think its possible to have duplicates, I think it should always be true in theory",https://github.com/bitcoin/bitcoin/pull/15463#discussion_r266346541,266346541,src/wallet/rpcwallet.cpp
promag,2019-04-22T00:08:22Z,"Comment added, thanks @ryanofsky.\n\nAlso changed to `assert()`, after all duplicate addresses are unexpected.",https://github.com/bitcoin/bitcoin/pull/15463#discussion_r277186049,277186049,src/wallet/rpcwallet.cpp
