gmaxwell,2019-03-23T05:13:32Z,OR-ing the fallback version with linux might be clearer than sticking in a bunch of returns and leaving in a chunk of dead code that some static analysis tools may warn about.,https://github.com/bitcoin/bitcoin/pull/15650#issuecomment-475840374,475840374,
lucayepa,2019-03-23T05:37:29Z,"Do you think we can consider the Linux part in the fallback? I don't know if posix_allocate can be called on every platform. It will become something like:\n```\n#if defined(WIN32)\n...\n#elif defined(MAC_OSX)\n...\n#endif\n    // Linux and fallback version\n (this calls posix_fallocate for every other platform)\n```\nThis way the system call `posix_fallocate` would be called for every f",https://github.com/bitcoin/bitcoin/pull/15650#issuecomment-475841491,475841491,
DrahtBot,2019-03-23T06:12:22Z,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#14485](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14485.html) (Try to use posix_fadvise with CBufferedFile",https://github.com/bitcoin/bitcoin/pull/15650#issuecomment-475843207,475843207,
gmaxwell,2019-03-23T07:28:23Z,"No but you can do\n#if win32\n#elif mac \n#else \n  #if linux\n  #endif\n  fallback\n#endif",https://github.com/bitcoin/bitcoin/pull/15650#issuecomment-475847475,475847475,
lucayepa,2019-03-23T13:12:09Z,"This sounds great. I indent the nested #if to be consistent with the style of the rest of the code.\n\nI also add here a link for reference to the first introduction of the system call: #2229.",https://github.com/bitcoin/bitcoin/pull/15650#issuecomment-475868716,475868716,
gmaxwell,2019-03-23T13:25:41Z,Style ACK. :)  (should get some testing on an impacted filesystem),https://github.com/bitcoin/bitcoin/pull/15650#issuecomment-475869612,475869612,
MarcoFalke,2019-03-23T13:37:30Z,utACK eb18d9af0686d79fad9761aacc8cda76b9ebe9a3,https://github.com/bitcoin/bitcoin/pull/15650#issuecomment-475870427,475870427,
lucayepa,2019-03-23T18:48:12Z,"Just tested on an affected filesystem (unionf on Debian stable), using strace to check the system calls sent to the system. The success return value of posix_fallocate is obviously zero. Somehow in a previous version I had the '!', but then I pushed the wrong one, without it. I've just force-pushed the good version, I've just tested with strace.\n\nAffected filesystem (fallocate result is EOPNOT",https://github.com/bitcoin/bitcoin/pull/15650#issuecomment-475894896,475894896,
DrahtBot,2019-03-25T18:45:33Z,<!--a722867cd34abeea1fadc8d60700f111-->\nGitian builds for commit 7b13c646457980f44599412f243694fa682a1abf (master):\n * `4f78895ec6af482e4f2076d902d79aba...` [bitcoin-0.18.99-aarch64-linux-gnu-debug.tar.gz](https://drahtbot.space/gitian/bitcoin/bitcoin/7b13c646457980f44599412f243694fa682a1abf/bitcoin-0.18.99-aarch64-linux-gnu-debug.tar.gz)\n * `f6e1b636a1f14b7b74dafeca7b288aad...` [bitcoin-0.18.9,https://github.com/bitcoin/bitcoin/pull/15650#issuecomment-476329224,476329224,
MarcoFalke,2019-03-25T19:06:01Z,utACK 5d35ae3326624da3fe5dcb4047c9a7cec6665cab,https://github.com/bitcoin/bitcoin/pull/15650#issuecomment-476336298,476336298,
sipa,2019-03-25T23:02:23Z,"utACK 5d35ae3326624da3fe5dcb4047c9a7cec6665cab, though the Yoda condition is an uncommon style in this project.",https://github.com/bitcoin/bitcoin/pull/15650#issuecomment-476410238,476410238,
hebasto,2019-05-02T06:45:41Z,utACK 5d35ae3326624da3fe5dcb4047c9a7cec6665cab,https://github.com/bitcoin/bitcoin/pull/15650#issuecomment-488568188,488568188,
practicalswift,2019-05-02T07:24:21Z,utACK 5d35ae3326624da3fe5dcb4047c9a7cec6665cab,https://github.com/bitcoin/bitcoin/pull/15650#issuecomment-488575591,488575591,
MarcoFalke,2019-03-23T19:51:08Z,Might be cleaner to just compare `0 == posix_fallocate(...`,https://github.com/bitcoin/bitcoin/pull/15650#discussion_r268407327,268407327,src/util/system.cpp
lucayepa,2019-03-23T20:40:43Z,"Yes, I agree. 0 == ... is more expressive and less error prone.",https://github.com/bitcoin/bitcoin/pull/15650#discussion_r268408783,268408783,src/util/system.cpp
