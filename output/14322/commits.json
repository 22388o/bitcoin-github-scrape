[
  {
    "sha": "0e7ec0ac851d739d1efda7c9f0b0abcd022001db",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowZTdlYzBhYzg1MWQ3MzlkMWVmZGE3YzlmMGIwYWJjZDAyMjAwMWRi",
    "commit": {
      "author": {
        "name": "251",
        "email": "13120787+251Labs@users.noreply.github.com",
        "date": "2018-09-25T18:17:56Z"
      },
      "committer": {
        "name": "251",
        "email": "13120787+251Labs@users.noreply.github.com",
        "date": "2018-09-25T18:17:56Z"
      },
      "message": "Drops redundant private class access specifiers\n\nThis commit drops redundant private class access specifiers.",
      "tree": {
        "sha": "bf5ba405f2add9a65786d7e7552359f1cca6386e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bf5ba405f2add9a65786d7e7552359f1cca6386e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0e7ec0ac851d739d1efda7c9f0b0abcd022001db",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0e7ec0ac851d739d1efda7c9f0b0abcd022001db",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0e7ec0ac851d739d1efda7c9f0b0abcd022001db",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/comments",
    "author": {
      "login": "l2a5b1",
      "id": 13120787,
      "node_id": "MDQ6VXNlcjEzMTIwNzg3",
      "avatar_url": "https://avatars.githubusercontent.com/u/13120787?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/l2a5b1",
      "html_url": "https://github.com/l2a5b1",
      "followers_url": "https://api.github.com/users/l2a5b1/followers",
      "following_url": "https://api.github.com/users/l2a5b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/l2a5b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/l2a5b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/l2a5b1/subscriptions",
      "organizations_url": "https://api.github.com/users/l2a5b1/orgs",
      "repos_url": "https://api.github.com/users/l2a5b1/repos",
      "events_url": "https://api.github.com/users/l2a5b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/l2a5b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "l2a5b1",
      "id": 13120787,
      "node_id": "MDQ6VXNlcjEzMTIwNzg3",
      "avatar_url": "https://avatars.githubusercontent.com/u/13120787?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/l2a5b1",
      "html_url": "https://github.com/l2a5b1",
      "followers_url": "https://api.github.com/users/l2a5b1/followers",
      "following_url": "https://api.github.com/users/l2a5b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/l2a5b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/l2a5b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/l2a5b1/subscriptions",
      "organizations_url": "https://api.github.com/users/l2a5b1/orgs",
      "repos_url": "https://api.github.com/users/l2a5b1/repos",
      "events_url": "https://api.github.com/users/l2a5b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/l2a5b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4dac24db23d121ec21080f04e210227c4ff5d281",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4dac24db23d121ec21080f04e210227c4ff5d281",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4dac24db23d121ec21080f04e210227c4ff5d281"
      }
    ],
    "stats": {
      "total": 89,
      "additions": 0,
      "deletions": 89
    },
    "files": [
      {
        "sha": "f78525a1811a0bfe0e66357039071ecdbb92be16",
        "filename": "src/addrdb.h",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/addrdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/addrdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrdb.h?ref=0e7ec0ac851d739d1efda7c9f0b0abcd022001db",
        "patch": "@@ -79,7 +79,6 @@ typedef std::map<CSubNet, CBanEntry> banmap_t;\n /** Access to the (IP) address database (peers.dat) */\n class CAddrDB\n {\n-private:\n     fs::path pathAddr;\n public:\n     CAddrDB();\n@@ -91,7 +90,6 @@ class CAddrDB\n /** Access to the banlist database (banlist.dat) */\n class CBanDB\n {\n-private:\n     fs::path pathBanlist;\n public:\n     CBanDB();"
      },
      {
        "sha": "4e2ab942b5dc9fdb39688508dbea90dcd4d2f100",
        "filename": "src/addrman.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/addrman.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/addrman.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrman.h?ref=0e7ec0ac851d739d1efda7c9f0b0abcd022001db",
        "patch": "@@ -187,7 +187,6 @@ class CAddrInfo : public CAddress\n  */\n class CAddrMan\n {\n-private:\n     //! critical section to protect the inner data structures\n     mutable CCriticalSection cs;\n "
      },
      {
        "sha": "a1433a8701e9ef795a7140bfbf6d2d675de9c845",
        "filename": "src/blockencodings.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/blockencodings.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/blockencodings.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/blockencodings.h?ref=0e7ec0ac851d739d1efda7c9f0b0abcd022001db",
        "patch": "@@ -129,7 +129,6 @@ typedef enum ReadStatus_t\n } ReadStatus;\n \n class CBlockHeaderAndShortTxIDs {\n-private:\n     mutable uint64_t shorttxidk0, shorttxidk1;\n     uint64_t nonce;\n "
      },
      {
        "sha": "f5f0e39a3019afec775264d215726d391bb2c9c4",
        "filename": "src/blockfilter.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/blockfilter.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/blockfilter.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/blockfilter.h?ref=0e7ec0ac851d739d1efda7c9f0b0abcd022001db",
        "patch": "@@ -87,7 +87,6 @@ enum BlockFilterType : uint8_t\n  */\n class BlockFilter\n {\n-private:\n     BlockFilterType m_filter_type;\n     uint256 m_block_hash;\n     GCSFilter m_filter;"
      },
      {
        "sha": "efdef6576cb7ffaa9dc493f30bf3d25008e538fe",
        "filename": "src/bloom.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/bloom.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/bloom.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bloom.h?ref=0e7ec0ac851d739d1efda7c9f0b0abcd022001db",
        "patch": "@@ -43,7 +43,6 @@ enum bloomflags\n  */\n class CBloomFilter\n {\n-private:\n     std::vector<unsigned char> vData;\n     bool isFull;\n     bool isEmpty;"
      },
      {
        "sha": "0c1649f110967d8ced3113d70851589594f672a6",
        "filename": "src/chain.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/chain.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/chain.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chain.h?ref=0e7ec0ac851d739d1efda7c9f0b0abcd022001db",
        "patch": "@@ -433,7 +433,6 @@ class CDiskBlockIndex : public CBlockIndex\n \n /** An in-memory indexed chain of blocks. */\n class CChain {\n-private:\n     std::vector<CBlockIndex*> vChain;\n \n public:"
      },
      {
        "sha": "e2ef415f389fd0eb4bb124b5c67e928f468dc27b",
        "filename": "src/checkqueue.h",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/checkqueue.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/checkqueue.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/checkqueue.h?ref=0e7ec0ac851d739d1efda7c9f0b0abcd022001db",
        "patch": "@@ -29,7 +29,6 @@ class CCheckQueueControl;\n template <typename T>\n class CCheckQueue\n {\n-private:\n     //! Mutex to protect the inner state\n     boost::mutex mutex;\n \n@@ -170,7 +169,6 @@ class CCheckQueue\n template <typename T>\n class CCheckQueueControl\n {\n-private:\n     CCheckQueue<T> * const pqueue;\n     bool fDone;\n "
      },
      {
        "sha": "7c9e042fc42b929052aa2c579e8386bef792f54a",
        "filename": "src/coins.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/coins.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/coins.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/coins.h?ref=0e7ec0ac851d739d1efda7c9f0b0abcd022001db",
        "patch": "@@ -83,7 +83,6 @@ class Coin\n \n class SaltedOutpointHasher\n {\n-private:\n     /** Salt */\n     const uint64_t k0, k1;\n "
      },
      {
        "sha": "05c576da8bf0e334ad2693d8566533581aff6804",
        "filename": "src/compressor.h",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/compressor.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/compressor.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/compressor.h?ref=0e7ec0ac851d739d1efda7c9f0b0abcd022001db",
        "patch": "@@ -35,7 +35,6 @@ uint64_t DecompressAmount(uint64_t nAmount);\n  */\n class CScriptCompressor\n {\n-private:\n     /**\n      * make this static for now (there are only 6 special scripts defined)\n      * this can potentially be extended together with a new nVersion for\n@@ -85,7 +84,6 @@ class CScriptCompressor\n /** wrapper for CTxOut that provides a more compact serialization */\n class CTxOutCompressor\n {\n-private:\n     CTxOut &txout;\n \n public:"
      },
      {
        "sha": "34661a03887b2942dbb523e72050c9815f3052b6",
        "filename": "src/consensus/validation.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/consensus/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/consensus/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/validation.h?ref=0e7ec0ac851d739d1efda7c9f0b0abcd022001db",
        "patch": "@@ -24,7 +24,6 @@ static const unsigned char REJECT_CHECKPOINT = 0x43;\n \n /** Capture information about block/transaction validation */\n class CValidationState {\n-private:\n     enum mode_state {\n         MODE_VALID,   //!< everything ok\n         MODE_INVALID, //!< network rule violation (DoS value may be set)"
      },
      {
        "sha": "0de8fcd27089adeab3738b8ad6599c1077c56a23",
        "filename": "src/crypto/aes.h",
        "status": "modified",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/crypto/aes.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/crypto/aes.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/crypto/aes.h?ref=0e7ec0ac851d739d1efda7c9f0b0abcd022001db",
        "patch": "@@ -18,7 +18,6 @@ static const int AES256_KEYSIZE = 32;\n /** An encryption class for AES-128. */\n class AES128Encrypt\n {\n-private:\n     AES128_ctx ctx;\n \n public:\n@@ -30,7 +29,6 @@ class AES128Encrypt\n /** A decryption class for AES-128. */\n class AES128Decrypt\n {\n-private:\n     AES128_ctx ctx;\n \n public:\n@@ -42,7 +40,6 @@ class AES128Decrypt\n /** An encryption class for AES-256. */\n class AES256Encrypt\n {\n-private:\n     AES256_ctx ctx;\n \n public:\n@@ -54,7 +51,6 @@ class AES256Encrypt\n /** A decryption class for AES-256. */\n class AES256Decrypt\n {\n-private:\n     AES256_ctx ctx;\n \n public:"
      },
      {
        "sha": "06a6489c47c80f8edd6e7b118d73dd25d5c4900f",
        "filename": "src/crypto/chacha20.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/crypto/chacha20.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/crypto/chacha20.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/crypto/chacha20.h?ref=0e7ec0ac851d739d1efda7c9f0b0abcd022001db",
        "patch": "@@ -11,7 +11,6 @@\n /** A PRNG class for ChaCha20. */\n class ChaCha20\n {\n-private:\n     uint32_t input[16];\n \n public:"
      },
      {
        "sha": "ae36e56c9c4b8844095bc901bae3fac7f22363a8",
        "filename": "src/crypto/hmac_sha256.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/crypto/hmac_sha256.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/crypto/hmac_sha256.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/crypto/hmac_sha256.h?ref=0e7ec0ac851d739d1efda7c9f0b0abcd022001db",
        "patch": "@@ -13,7 +13,6 @@\n /** A hasher class for HMAC-SHA-256. */\n class CHMAC_SHA256\n {\n-private:\n     CSHA256 outer;\n     CSHA256 inner;\n "
      },
      {
        "sha": "993c2340aab81974941e077f1154431927c37288",
        "filename": "src/crypto/hmac_sha512.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/crypto/hmac_sha512.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/crypto/hmac_sha512.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/crypto/hmac_sha512.h?ref=0e7ec0ac851d739d1efda7c9f0b0abcd022001db",
        "patch": "@@ -13,7 +13,6 @@\n /** A hasher class for HMAC-SHA-512. */\n class CHMAC_SHA512\n {\n-private:\n     CSHA512 outer;\n     CSHA512 inner;\n "
      },
      {
        "sha": "e48415f0dbc13f2d669594c6d892317c6b1bd007",
        "filename": "src/crypto/ripemd160.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/crypto/ripemd160.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/crypto/ripemd160.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/crypto/ripemd160.h?ref=0e7ec0ac851d739d1efda7c9f0b0abcd022001db",
        "patch": "@@ -11,7 +11,6 @@\n /** A hasher class for RIPEMD-160. */\n class CRIPEMD160\n {\n-private:\n     uint32_t s[5];\n     unsigned char buf[64];\n     uint64_t bytes;"
      },
      {
        "sha": "85caf0d995b2bd49ca97f4df0a3083d0302dc12a",
        "filename": "src/crypto/sha1.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/crypto/sha1.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/crypto/sha1.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/crypto/sha1.h?ref=0e7ec0ac851d739d1efda7c9f0b0abcd022001db",
        "patch": "@@ -11,7 +11,6 @@\n /** A hasher class for SHA1. */\n class CSHA1\n {\n-private:\n     uint32_t s[5];\n     unsigned char buf[64];\n     uint64_t bytes;"
      },
      {
        "sha": "9beb0fc7bf192f3af93654ab15d916cbac23a23a",
        "filename": "src/crypto/sha256.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/crypto/sha256.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/crypto/sha256.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/crypto/sha256.h?ref=0e7ec0ac851d739d1efda7c9f0b0abcd022001db",
        "patch": "@@ -12,7 +12,6 @@\n /** A hasher class for SHA-256. */\n class CSHA256\n {\n-private:\n     uint32_t s[8];\n     unsigned char buf[64];\n     uint64_t bytes;"
      },
      {
        "sha": "5fa052dbf79793e97a54116a9c98c1357860d9ea",
        "filename": "src/crypto/sha512.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/crypto/sha512.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/crypto/sha512.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/crypto/sha512.h?ref=0e7ec0ac851d739d1efda7c9f0b0abcd022001db",
        "patch": "@@ -11,7 +11,6 @@\n /** A hasher class for SHA-512. */\n class CSHA512\n {\n-private:\n     uint64_t s[8];\n     unsigned char buf[128];\n     uint64_t bytes;"
      },
      {
        "sha": "b727e2cc23c311844da042457c7c31ffc0b2a0e4",
        "filename": "src/cuckoocache.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/cuckoocache.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/cuckoocache.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/cuckoocache.h?ref=0e7ec0ac851d739d1efda7c9f0b0abcd022001db",
        "patch": "@@ -159,7 +159,6 @@ class bit_packed_atomic_flags\n template <typename Element, typename Hash>\n class cache\n {\n-private:\n     /** table stores all the elements */\n     std::vector<Element> table;\n "
      },
      {
        "sha": "79723e3d8ef6e3c7f7aaeb0df0e6386f0ba0c395",
        "filename": "src/dbwrapper.h",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/dbwrapper.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/dbwrapper.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/dbwrapper.h?ref=0e7ec0ac851d739d1efda7c9f0b0abcd022001db",
        "patch": "@@ -48,7 +48,6 @@ class CDBBatch\n {\n     friend class CDBWrapper;\n \n-private:\n     const CDBWrapper &parent;\n     leveldb::WriteBatch batch;\n \n@@ -116,7 +115,6 @@ class CDBBatch\n \n class CDBIterator\n {\n-private:\n     const CDBWrapper &parent;\n     leveldb::Iterator *piter;\n \n@@ -176,7 +174,6 @@ class CDBIterator\n class CDBWrapper\n {\n     friend const std::vector<unsigned char>& dbwrapper_private::GetObfuscateKey(const CDBWrapper &w);\n-private:\n     //! custom environment this database is using (may be nullptr in case of default environment)\n     leveldb::Env* penv;\n "
      },
      {
        "sha": "ff0f23183690515113e4a9eefdc3cfa38b29ccb9",
        "filename": "src/hash.h",
        "status": "modified",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/hash.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/hash.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/hash.h?ref=0e7ec0ac851d739d1efda7c9f0b0abcd022001db",
        "patch": "@@ -19,7 +19,6 @@ typedef uint256 ChainCode;\n \n /** A hasher class for Bitcoin's 256-bit hash (double SHA-256). */\n class CHash256 {\n-private:\n     CSHA256 sha;\n public:\n     static const size_t OUTPUT_SIZE = CSHA256::OUTPUT_SIZE;\n@@ -43,7 +42,6 @@ class CHash256 {\n \n /** A hasher class for Bitcoin's 160-bit hash (SHA-256 + RIPEMD-160). */\n class CHash160 {\n-private:\n     CSHA256 sha;\n public:\n     static const size_t OUTPUT_SIZE = CRIPEMD160::OUTPUT_SIZE;\n@@ -115,7 +113,6 @@ inline uint160 Hash160(const prevector<N, unsigned char>& vch)\n /** A writer stream (for serialization) that computes a 256-bit hash. */\n class CHashWriter\n {\n-private:\n     CHash256 ctx;\n \n     const int nType;\n@@ -150,7 +147,6 @@ class CHashWriter\n template<typename Source>\n class CHashVerifier : public CHashWriter\n {\n-private:\n     Source* source;\n \n public:\n@@ -197,7 +193,6 @@ void BIP32Hash(const ChainCode &chainCode, unsigned int nChild, unsigned char he\n /** SipHash-2-4 */\n class CSipHasher\n {\n-private:\n     uint64_t v[4];\n     uint64_t tmp;\n     int count;"
      },
      {
        "sha": "b504184744f69bd57d651dd4d7fdf54d4594a2d7",
        "filename": "src/httpserver.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/httpserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/httpserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httpserver.cpp?ref=0e7ec0ac851d739d1efda7c9f0b0abcd022001db",
        "patch": "@@ -67,7 +67,6 @@ class HTTPWorkItem final : public HTTPClosure\n template <typename WorkItem>\n class WorkQueue\n {\n-private:\n     /** Mutex protects entire object */\n     Mutex cs;\n     std::condition_variable cond;"
      },
      {
        "sha": "356b962825916c2626c7b148c3d26a7e9b8af361",
        "filename": "src/httpserver.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/httpserver.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/httpserver.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httpserver.h?ref=0e7ec0ac851d739d1efda7c9f0b0abcd022001db",
        "patch": "@@ -56,7 +56,6 @@ struct event_base* EventBase();\n  */\n class HTTPRequest\n {\n-private:\n     struct evhttp_request* req;\n     bool replySent;\n "
      },
      {
        "sha": "16058385a34b7a064491641b8bc468b20b14671d",
        "filename": "src/indirectmap.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/indirectmap.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/indirectmap.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/indirectmap.h?ref=0e7ec0ac851d739d1efda7c9f0b0abcd022001db",
        "patch": "@@ -20,7 +20,6 @@ struct DereferencingComparator { bool operator()(const T a, const T b) const { r\n  */\n template <class K, class T>\n class indirectmap {\n-private:\n     typedef std::map<const K*, T, DereferencingComparator<const K*> > base;\n     base m;\n public:"
      },
      {
        "sha": "32f411e32511d908544996e309ed6efe6c630d92",
        "filename": "src/key_io.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/key_io.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/key_io.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key_io.cpp?ref=0e7ec0ac851d739d1efda7c9f0b0abcd022001db",
        "patch": "@@ -20,7 +20,6 @@ namespace\n {\n class DestinationEncoder : public boost::static_visitor<std::string>\n {\n-private:\n     const CChainParams& m_params;\n \n public:"
      },
      {
        "sha": "175988de3f22bf5d24f925f4f2591d25622d25fc",
        "filename": "src/logging.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/logging.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/logging.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/logging.h?ref=0e7ec0ac851d739d1efda7c9f0b0abcd022001db",
        "patch": "@@ -58,7 +58,6 @@ namespace BCLog {\n \n     class Logger\n     {\n-    private:\n         FILE* m_fileout = nullptr;\n         std::mutex m_file_mutex;\n         std::list<std::string> m_msgs_before_open;"
      },
      {
        "sha": "114aa978367befe3b2a25a9ff521f24fccaf56ac",
        "filename": "src/miner.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/miner.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/miner.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.h?ref=0e7ec0ac851d739d1efda7c9f0b0abcd022001db",
        "patch": "@@ -123,7 +123,6 @@ struct update_for_parent_inclusion\n /** Generate a new block, without valid proof-of-work */\n class BlockAssembler\n {\n-private:\n     // The constructed block template\n     std::unique_ptr<CBlockTemplate> pblocktemplate;\n     // A convenience pointer that always refers to the CBlock in pblocktemplate"
      },
      {
        "sha": "168b399a978e0173554f96cd66ca002e304e34c4",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=0e7ec0ac851d739d1efda7c9f0b0abcd022001db",
        "patch": "@@ -571,7 +571,6 @@ class CNodeStats\n \n \n class CNetMessage {\n-private:\n     mutable CHash256 hasher;\n     mutable uint256 data_hash;\n public:"
      },
      {
        "sha": "08f168469b3e34c6dded0c268b14036a5aaebe73",
        "filename": "src/net_processing.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/net_processing.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/net_processing.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.h?ref=0e7ec0ac851d739d1efda7c9f0b0abcd022001db",
        "patch": "@@ -18,7 +18,6 @@ static const unsigned int DEFAULT_BLOCK_RECONSTRUCTION_EXTRA_TXN = 100;\n static constexpr bool DEFAULT_ENABLE_BIP61{false};\n \n class PeerLogicValidation final : public CValidationInterface, public NetEventsInterface {\n-private:\n     CConnman* const connman;\n \n public:"
      },
      {
        "sha": "491283b2fc0c3af997720f27dcebb0fb10613c59",
        "filename": "src/policy/feerate.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/policy/feerate.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/policy/feerate.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/feerate.h?ref=0e7ec0ac851d739d1efda7c9f0b0abcd022001db",
        "patch": "@@ -18,7 +18,6 @@ extern const std::string CURRENCY_UNIT;\n  */\n class CFeeRate\n {\n-private:\n     CAmount nSatoshisPerK; // unit is satoshis-per-1,000-bytes\n \n public:"
      },
      {
        "sha": "8ed01b61b6dfc6b547620befbb5fe38cf19cf61d",
        "filename": "src/policy/fees.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/policy/fees.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/policy/fees.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/fees.cpp?ref=0e7ec0ac851d739d1efda7c9f0b0abcd022001db",
        "patch": "@@ -71,7 +71,6 @@ bool FeeModeFromString(const std::string& mode_string, FeeEstimateMode& fee_esti\n  */\n class TxConfirmStats\n {\n-private:\n     //Define the buckets we will group transactions into\n     const std::vector<double>& buckets;              // The upper-bound of the range for the bucket (inclusive)\n     const std::map<double, unsigned int>& bucketMap; // Map of bucket upper-bound to index into all vectors by bucket"
      },
      {
        "sha": "62d12b1b4661581e73eeba4e92df3dcd9fa955bb",
        "filename": "src/policy/fees.h",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/policy/fees.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/policy/fees.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/fees.h?ref=0e7ec0ac851d739d1efda7c9f0b0abcd022001db",
        "patch": "@@ -135,7 +135,6 @@ struct FeeCalculation\n  */\n class CBlockPolicyEstimator\n {\n-private:\n     /** Track confirm delays up to 12 blocks for short horizon */\n     static constexpr unsigned int SHORT_BLOCK_PERIODS = 12;\n     static constexpr unsigned int SHORT_SCALE = 1;\n@@ -273,7 +272,6 @@ class CBlockPolicyEstimator\n \n class FeeFilterRounder\n {\n-private:\n     static constexpr double MAX_FILTER_FEERATE = 1e7;\n     /** FEE_FILTER_SPACING is just used to provide some quantization of fee\n      * filter results.  Historically it reused FEE_SPACING, but it is completely"
      },
      {
        "sha": "2a610c00c01d79a8085129946d9ba0628c773901",
        "filename": "src/random.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/random.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/random.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/random.h?ref=0e7ec0ac851d739d1efda7c9f0b0abcd022001db",
        "patch": "@@ -43,7 +43,6 @@ void GetStrongRandBytes(unsigned char* buf, int num);\n  * This class is not thread-safe.\n  */\n class FastRandomContext {\n-private:\n     bool requires_seed;\n     ChaCha20 rng;\n "
      },
      {
        "sha": "64d8d608fc899c105d3b60b8d22a3e3d13dda30e",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=0e7ec0ac851d739d1efda7c9f0b0abcd022001db",
        "patch": "@@ -2011,7 +2011,6 @@ static std::atomic<bool> g_scan_in_progress;\n static std::atomic<bool> g_should_abort_scan;\n class CoinsViewScanReserver\n {\n-private:\n     bool m_could_reserve;\n public:\n     explicit CoinsViewScanReserver() : m_could_reserve(false) {}"
      },
      {
        "sha": "e8811f07f8f0a5f2fa586ea5f4dcab50b4f316f2",
        "filename": "src/rpc/client.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/rpc/client.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/rpc/client.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/client.cpp?ref=0e7ec0ac851d739d1efda7c9f0b0abcd022001db",
        "patch": "@@ -169,7 +169,6 @@ static const CRPCConvertParam vRPCConvertParams[] =\n \n class CRPCConvertTable\n {\n-private:\n     std::set<std::pair<std::string, int>> members;\n     std::set<std::pair<std::string, std::string>> membersByName;\n "
      },
      {
        "sha": "e1697a12425eee6b3fe53cd535541847872320f5",
        "filename": "src/rpc/server.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/rpc/server.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/rpc/server.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/server.h?ref=0e7ec0ac851d739d1efda7c9f0b0abcd022001db",
        "patch": "@@ -142,7 +142,6 @@ class CRPCCommand\n  */\n class CRPCTable\n {\n-private:\n     std::map<std::string, const CRPCCommand*> mapCommands;\n public:\n     CRPCTable();"
      },
      {
        "sha": "4f3cae21dee9702f352cb0abb54827de6c2b1274",
        "filename": "src/scheduler.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/scheduler.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/scheduler.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/scheduler.h?ref=0e7ec0ac851d739d1efda7c9f0b0abcd022001db",
        "patch": "@@ -95,7 +95,6 @@ class CScheduler\n  * before it.\n  */\n class SingleThreadedSchedulerClient {\n-private:\n     CScheduler *m_pscheduler;\n \n     CCriticalSection m_cs_callbacks_pending;"
      },
      {
        "sha": "18cbee1167068a64e40c78f8c438e1e85969d1df",
        "filename": "src/script/interpreter.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/script/interpreter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/script/interpreter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/interpreter.cpp?ref=0e7ec0ac851d739d1efda7c9f0b0abcd022001db",
        "patch": "@@ -1092,7 +1092,6 @@ namespace {\n template <class T>\n class CTransactionSignatureSerializer\n {\n-private:\n     const T& txTo;             //!< reference to the spending transaction (the one being serialized)\n     const CScript& scriptCode; //!< output script being consumed\n     const unsigned int nIn;    //!< input index of txTo being signed"
      },
      {
        "sha": "85eb1513d5bbdc9014f26da88fd33ac170661ea1",
        "filename": "src/script/interpreter.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/script/interpreter.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/script/interpreter.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/interpreter.h?ref=0e7ec0ac851d739d1efda7c9f0b0abcd022001db",
        "patch": "@@ -165,7 +165,6 @@ class BaseSignatureChecker\n template <class T>\n class GenericTransactionSignatureChecker : public BaseSignatureChecker\n {\n-private:\n     const T* txTo;\n     unsigned int nIn;\n     const CAmount amount;"
      },
      {
        "sha": "f5412f21fb3744f16675f86bb79732106e1725ec",
        "filename": "src/script/sigcache.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/script/sigcache.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/script/sigcache.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/sigcache.cpp?ref=0e7ec0ac851d739d1efda7c9f0b0abcd022001db",
        "patch": "@@ -22,7 +22,6 @@ namespace {\n  */\n class CSignatureCache\n {\n-private:\n      //! Entries are SHA256(nonce || signature hash || public key || signature):\n     uint256 nonce;\n     typedef CuckooCache::cache<uint256, SignatureCacheHasher> map_type;"
      },
      {
        "sha": "c1bc403fb9beeb66226667181cfd6d8d588c2ab1",
        "filename": "src/script/sigcache.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/script/sigcache.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/script/sigcache.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/sigcache.h?ref=0e7ec0ac851d739d1efda7c9f0b0abcd022001db",
        "patch": "@@ -42,7 +42,6 @@ class SignatureCacheHasher\n \n class CachingTransactionSignatureChecker : public TransactionSignatureChecker\n {\n-private:\n     bool store;\n \n public:"
      },
      {
        "sha": "f6c572aacf3b70b2ede164ea8749ba028db8f464",
        "filename": "src/script/sign.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/script/sign.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/script/sign.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/sign.cpp?ref=0e7ec0ac851d739d1efda7c9f0b0abcd022001db",
        "patch": "@@ -291,7 +291,6 @@ bool SignPSBTInput(const SigningProvider& provider, const CMutableTransaction& t\n \n class SignatureExtractorChecker final : public BaseSignatureChecker\n {\n-private:\n     SignatureData& sigdata;\n     BaseSignatureChecker& checker;\n \n@@ -446,7 +445,6 @@ class DummySignatureChecker final : public BaseSignatureChecker\n const DummySignatureChecker DUMMY_CHECKER;\n \n class DummySignatureCreator final : public BaseSignatureCreator {\n-private:\n     char m_r_len = 32;\n     char m_s_len = 32;\n public:"
      },
      {
        "sha": "9a095545657f5344469ab72dfe1017725bdd37d7",
        "filename": "src/script/sign.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/script/sign.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/script/sign.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/sign.h?ref=0e7ec0ac851d739d1efda7c9f0b0abcd022001db",
        "patch": "@@ -41,7 +41,6 @@ extern const SigningProvider& DUMMY_SIGNING_PROVIDER;\n \n class HidingSigningProvider : public SigningProvider\n {\n-private:\n     const bool m_hide_secret;\n     const bool m_hide_origin;\n     const SigningProvider* m_provider;"
      },
      {
        "sha": "2bcc488428538638397861649b58166b323405eb",
        "filename": "src/script/standard.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/script/standard.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/script/standard.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/standard.cpp?ref=0e7ec0ac851d739d1efda7c9f0b0abcd022001db",
        "patch": "@@ -240,7 +240,6 @@ namespace\n {\n class CScriptVisitor : public boost::static_visitor<bool>\n {\n-private:\n     CScript *script;\n public:\n     explicit CScriptVisitor(CScript *scriptin) { script = scriptin; }"
      },
      {
        "sha": "b7aa81d3c355f494ff89d932cbdcf124fa95085e",
        "filename": "src/streams.h",
        "status": "modified",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/streams.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/streams.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/streams.h?ref=0e7ec0ac851d739d1efda7c9f0b0abcd022001db",
        "patch": "@@ -143,7 +143,6 @@ class CVectorWriter\n  */\n class VectorReader\n {\n-private:\n     const int m_type;\n     const int m_version;\n     const std::vector<unsigned char>& m_data;\n@@ -513,7 +512,6 @@ class CDataStream\n template <typename IStream>\n class BitStreamReader\n {\n-private:\n     IStream& m_istream;\n \n     /// Buffered byte read in from the input stream. A new byte is read into the\n@@ -556,7 +554,6 @@ class BitStreamReader\n template <typename OStream>\n class BitStreamWriter\n {\n-private:\n     OStream& m_ostream;\n \n     /// Buffered byte waiting to be written to the output stream. The byte is\n@@ -620,7 +617,6 @@ class BitStreamWriter\n  */\n class CAutoFile\n {\n-private:\n     const int nType;\n     const int nVersion;\n \n@@ -729,7 +725,6 @@ class CAutoFile\n  */\n class CBufferedFile\n {\n-private:\n     const int nType;\n     const int nVersion;\n "
      },
      {
        "sha": "9f4c9ea50d69a38b65fae022400a30fda80ca159",
        "filename": "src/sync.h",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/sync.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/sync.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/sync.h?ref=0e7ec0ac851d739d1efda7c9f0b0abcd022001db",
        "patch": "@@ -117,7 +117,6 @@ void PrintLockContention(const char* pszName, const char* pszFile, int nLine);\n template <typename Mutex, typename Base = typename Mutex::UniqueLock>\n class SCOPED_LOCKABLE UniqueLock : public Base\n {\n-private:\n     void Enter(const char* pszName, const char* pszFile, int nLine)\n     {\n         EnterCritical(pszName, pszFile, nLine, (void*)(Base::mutex()));\n@@ -199,7 +198,6 @@ using DebugLock = UniqueLock<typename std::remove_reference<typename std::remove\n \n class CSemaphore\n {\n-private:\n     std::condition_variable condition;\n     std::mutex mutex;\n     int value;\n@@ -236,7 +234,6 @@ class CSemaphore\n /** RAII-style semaphore lock */\n class CSemaphoreGrant\n {\n-private:\n     CSemaphore* sem;\n     bool fHaveGrant;\n "
      },
      {
        "sha": "20dd0cdf5c0166871c737a1fc1d165d7c41e63ef",
        "filename": "src/test/script_tests.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/test/script_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/test/script_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/script_tests.cpp?ref=0e7ec0ac851d739d1efda7c9f0b0abcd022001db",
        "patch": "@@ -277,7 +277,6 @@ enum class WitnessMode {\n \n class TestBuilder\n {\n-private:\n     //! Actually executed script\n     CScript script;\n     //! The P2SH redeemscript"
      },
      {
        "sha": "11f239ae25af9530b3028bc460f6c58eae29ff51",
        "filename": "src/test/versionbits_tests.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/test/versionbits_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/test/versionbits_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/versionbits_tests.cpp?ref=0e7ec0ac851d739d1efda7c9f0b0abcd022001db",
        "patch": "@@ -18,7 +18,6 @@ static const Consensus::Params paramsDummy = Consensus::Params();\n \n class TestConditionChecker : public AbstractThresholdConditionChecker\n {\n-private:\n     mutable ThresholdConditionCache cache;\n \n public:"
      },
      {
        "sha": "e2e5237dc29a2e370ffb3ca744a46d27b44adb75",
        "filename": "src/timedata.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/timedata.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/timedata.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/timedata.h?ref=0e7ec0ac851d739d1efda7c9f0b0abcd022001db",
        "patch": "@@ -21,7 +21,6 @@ class CNetAddr;\n template <typename T>\n class CMedianFilter\n {\n-private:\n     std::vector<T> vValues;\n     std::vector<T> vSorted;\n     unsigned int nSize;"
      },
      {
        "sha": "d8c7c43ac89971d4f55f951fd904dbe69ab72f79",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=0e7ec0ac851d739d1efda7c9f0b0abcd022001db",
        "patch": "@@ -64,7 +64,6 @@ class CTxMemPool;\n \n class CTxMemPoolEntry\n {\n-private:\n     const CTransactionRef tx;\n     const CAmount nFee;             //!< Cached to avoid expensive parent-transaction lookups\n     const size_t nTxWeight;         //!< ... and avoid recomputing tx weight (also used for GetTxSize())\n@@ -354,7 +353,6 @@ enum class MemPoolRemovalReason {\n \n class SaltedTxidHasher\n {\n-private:\n     /** Salt */\n     const uint64_t k0, k1;\n \n@@ -440,7 +438,6 @@ class SaltedTxidHasher\n  */\n class CTxMemPool\n {\n-private:\n     uint32_t nCheckFrequency GUARDED_BY(cs); //!< Value n means that n times in 2^32 we check.\n     unsigned int nTransactionsUpdated; //!< Used by getblocktemplate to trigger CreateNewBlock() invocation\n     CBlockPolicyEstimator* minerPolicyEstimator;"
      },
      {
        "sha": "3f141948ed50bb4da7761f803903296887245930",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=0e7ec0ac851d739d1efda7c9f0b0abcd022001db",
        "patch": "@@ -104,7 +104,6 @@ class ConnectTrace;\n  * functions (eventually this will also be via callbacks).\n  */\n class CChainState {\n-private:\n     /**\n      * The set of all CBlockIndex entries with BLOCK_VALID_TRANSACTIONS (for itself and all ancestors) and\n      * as good as our current tip or better. Entries may be failed, though, and pruning nodes may be\n@@ -1703,7 +1702,6 @@ int32_t ComputeBlockVersion(const CBlockIndex* pindexPrev, const Consensus::Para\n  */\n class WarningBitsConditionChecker : public AbstractThresholdConditionChecker\n {\n-private:\n     int bit;\n \n public:\n@@ -2365,7 +2363,6 @@ struct PerBlockConnectTrace {\n  * it away and make a new one.\n  */\n class ConnectTrace {\n-private:\n     std::vector<PerBlockConnectTrace> blocksConnected;\n     CTxMemPool &pool;\n "
      },
      {
        "sha": "e7e446de8d1db7ec76599a188950eb63c077eb3a",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=0e7ec0ac851d739d1efda7c9f0b0abcd022001db",
        "patch": "@@ -355,7 +355,6 @@ bool CheckSequenceLocks(const CTransaction &tx, int flags, LockPoints* lp = null\n  */\n class CScriptCheck\n {\n-private:\n     CTxOut m_tx_out;\n     const CTransaction *ptxTo;\n     unsigned int nIn;"
      },
      {
        "sha": "abfc65a558ce408af62c016408ce86cc6b549af7",
        "filename": "src/validationinterface.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/validationinterface.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/validationinterface.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validationinterface.h?ref=0e7ec0ac851d739d1efda7c9f0b0abcd022001db",
        "patch": "@@ -154,7 +154,6 @@ class CValidationInterface {\n \n struct MainSignalsInstance;\n class CMainSignals {\n-private:\n     std::unique_ptr<MainSignalsInstance> m_internals;\n \n     friend void ::RegisterValidationInterface(CValidationInterface*);"
      },
      {
        "sha": "c6b3a3297dca28d203ed13fb98f97d560e33a9f6",
        "filename": "src/versionbits.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/versionbits.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/versionbits.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/versionbits.cpp?ref=0e7ec0ac851d739d1efda7c9f0b0abcd022001db",
        "patch": "@@ -165,7 +165,6 @@ namespace\n  * Class to implement versionbits logic.\n  */\n class VersionBitsConditionChecker : public AbstractThresholdConditionChecker {\n-private:\n     const Consensus::DeploymentPos id;\n \n protected:"
      },
      {
        "sha": "7ade7359a4b8b455c3e3ee1e98c0b7d6baace6cc",
        "filename": "src/wallet/crypter.h",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/wallet/crypter.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/wallet/crypter.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/crypter.h?ref=0e7ec0ac851d739d1efda7c9f0b0abcd022001db",
        "patch": "@@ -76,7 +76,6 @@ namespace wallet_crypto_tests\n class CCrypter\n {\n friend class wallet_crypto_tests::TestCrypter; // for test access to chKey/chIV\n-private:\n     std::vector<unsigned char, secure_allocator<unsigned char>> vchKey;\n     std::vector<unsigned char, secure_allocator<unsigned char>> vchIV;\n     bool fKeySet;\n@@ -114,8 +113,6 @@ friend class wallet_crypto_tests::TestCrypter; // for test access to chKey/chIV\n  */\n class CCryptoKeyStore : public CBasicKeyStore\n {\n-private:\n-\n     CKeyingMaterial vMasterKey GUARDED_BY(cs_KeyStore);\n \n     //! if fUseCrypto is true, mapKeys must be empty"
      },
      {
        "sha": "b9d773aa210adf531975f12156ee3b7fc7144a66",
        "filename": "src/wallet/db.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/wallet/db.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/wallet/db.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/db.h?ref=0e7ec0ac851d739d1efda7c9f0b0abcd022001db",
        "patch": "@@ -27,7 +27,6 @@ static const bool DEFAULT_WALLET_PRIVDB = true;\n \n class BerkeleyEnvironment\n {\n-private:\n     bool fDbEnvInit;\n     bool fMockDb;\n     // Don't change into fs::path, as that can result in"
      },
      {
        "sha": "608734607b7e6466fc8ef5a1cb30deb8c2dcd8e1",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=0e7ec0ac851d739d1efda7c9f0b0abcd022001db",
        "patch": "@@ -106,7 +106,6 @@ std::string COutput::ToString() const\n \n /** A class to identify which pubkeys a script and a keystore have in common. */\n class CAffectedKeysVisitor : public boost::static_visitor<void> {\n-private:\n     const CKeyStore &keystore;\n     std::vector<CKeyID> &vKeys;\n "
      },
      {
        "sha": "cd7c4592700a3bf15cb7531873af77a6049b6876",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=0e7ec0ac851d739d1efda7c9f0b0abcd022001db",
        "patch": "@@ -207,7 +207,6 @@ struct COutputEntry\n /** A transaction with a merkle branch linking it to the block chain. */\n class CMerkleTx\n {\n-private:\n   /** Constant used in hashBlock to indicate tx has been abandoned */\n     static const uint256 ABANDON_HASH;\n \n@@ -291,7 +290,6 @@ int CalculateMaximumSignedInputSize(const CTxOut& txout, const CWallet* pwallet,\n  */\n class CWalletTx : public CMerkleTx\n {\n-private:\n     const CWallet* pwallet;\n \n public:\n@@ -585,7 +583,6 @@ class WalletRescanReserver; //forward declarations for ScanForWalletTransactions\n  */\n class CWallet final : public CCryptoKeyStore, public CValidationInterface\n {\n-private:\n     std::atomic<bool> fAbortRescan{false};\n     std::atomic<bool> fScanningWallet{false}; // controlled by WalletRescanReserver\n     std::mutex mutexScanning;\n@@ -1162,7 +1159,6 @@ class CReserveKey final : public CReserveScript\n /** RAII object to check and reserve a wallet rescan */\n class WalletRescanReserver\n {\n-private:\n     CWallet* m_wallet;\n     bool m_could_reserve;\n public:"
      },
      {
        "sha": "f556f476ec50bd5cc724ed631b90e132d4740524",
        "filename": "src/wallet/walletdb.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/wallet/walletdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/wallet/walletdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.h?ref=0e7ec0ac851d739d1efda7c9f0b0abcd022001db",
        "patch": "@@ -138,7 +138,6 @@ class CKeyMetadata\n  */\n class WalletBatch\n {\n-private:\n     template <typename K, typename T>\n     bool WriteIC(const K& key, const T& value, bool fOverwrite = true)\n     {"
      },
      {
        "sha": "30979a33f366a623a4a184c6ce4b6c24c3b93524",
        "filename": "src/zmq/zmqpublishnotifier.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/zmq/zmqpublishnotifier.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e7ec0ac851d739d1efda7c9f0b0abcd022001db/src/zmq/zmqpublishnotifier.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqpublishnotifier.h?ref=0e7ec0ac851d739d1efda7c9f0b0abcd022001db",
        "patch": "@@ -11,7 +11,6 @@ class CBlockIndex;\n \n class CZMQAbstractPublishNotifier : public CZMQAbstractNotifier\n {\n-private:\n     uint32_t nSequence; //!< upcounting per message sequence number\n \n public:"
      }
    ]
  }
]