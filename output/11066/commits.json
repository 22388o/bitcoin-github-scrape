[
  {
    "sha": "bea8e9e66ea98a957b8318cd49d91b598f38cbd3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiZWE4ZTllNjZlYTk4YTk1N2I4MzE4Y2Q0OWQ5MWI1OThmMzhjYmQz",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2017-08-16T15:26:07Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2017-08-18T07:51:00Z"
      },
      "message": "Document the preference of nullptr over NULL or (void*)0",
      "tree": {
        "sha": "c3890f824307145dea842650f41824da4ffe1b3e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c3890f824307145dea842650f41824da4ffe1b3e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bea8e9e66ea98a957b8318cd49d91b598f38cbd3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bea8e9e66ea98a957b8318cd49d91b598f38cbd3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bea8e9e66ea98a957b8318cd49d91b598f38cbd3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bea8e9e66ea98a957b8318cd49d91b598f38cbd3/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "dbf6bd6ea05f7d4836083747c6357c6fee907ab8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dbf6bd6ea05f7d4836083747c6357c6fee907ab8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/dbf6bd6ea05f7d4836083747c6357c6fee907ab8"
      }
    ],
    "stats": {
      "total": 15,
      "additions": 8,
      "deletions": 7
    },
    "files": [
      {
        "sha": "9b85600ccce839e183031c9a319cbd40b50fa6c0",
        "filename": "doc/developer-notes.md",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bea8e9e66ea98a957b8318cd49d91b598f38cbd3/doc/developer-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bea8e9e66ea98a957b8318cd49d91b598f38cbd3/doc/developer-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/developer-notes.md?ref=bea8e9e66ea98a957b8318cd49d91b598f38cbd3",
        "patch": "@@ -37,6 +37,7 @@ code.\n \n - **Miscellaneous**\n   - `++i` is preferred over `i++`.\n+  - `nullptr` is preferred over `NULL` or `(void*)0`.\n   - `static_assert` is preferred over `assert` where possible. Generally; compile-time checking is preferred over run-time checking.\n \n Block style example:\n@@ -276,7 +277,7 @@ Wallet\n \n   - *Rationale*: In RPC code that conditionally uses the wallet (such as\n     `validateaddress`) it is easy to forget that global pointer `pwalletMain`\n-    can be NULL. See `test/functional/disablewallet.py` for functional tests\n+    can be nullptr. See `test/functional/disablewallet.py` for functional tests\n     exercising the API with `-disablewallet`\n \n - Include `db_cxx.h` (BerkeleyDB header) only when `ENABLE_WALLET` is set"
      },
      {
        "sha": "9e7de0f98fbdf7f8c4fd4ee70b50e14baa494c14",
        "filename": "src/qt/macdockiconhandler.mm",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bea8e9e66ea98a957b8318cd49d91b598f38cbd3/src/qt/macdockiconhandler.mm",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bea8e9e66ea98a957b8318cd49d91b598f38cbd3/src/qt/macdockiconhandler.mm",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/macdockiconhandler.mm?ref=bea8e9e66ea98a957b8318cd49d91b598f38cbd3",
        "patch": "@@ -18,7 +18,7 @@\n extern void qt_mac_set_dock_menu(QMenu *);\n #endif\n \n-static MacDockIconHandler *s_instance = NULL;\n+static MacDockIconHandler *s_instance = nullptr;\n \n bool dockClickHandler(id self,SEL _cmd,...) {\n     Q_UNUSED(self)\n@@ -34,7 +34,7 @@ void setupDockClickHandler() {\n     Class cls = objc_getClass(\"NSApplication\");\n     id appInst = objc_msgSend((id)cls, sel_registerName(\"sharedApplication\"));\n     \n-    if (appInst != NULL) {\n+    if (appInst != nullptr) {\n         id delegate = objc_msgSend(appInst, sel_registerName(\"delegate\"));\n         Class delClass = (Class)objc_msgSend(delegate,  sel_registerName(\"class\"));\n         SEL shouldHandle = sel_registerName(\"applicationShouldHandleReopen:hasVisibleWindows:\");\n@@ -53,7 +53,7 @@ void setupDockClickHandler() {\n     setupDockClickHandler();\n     this->m_dummyWidget = new QWidget();\n     this->m_dockMenu = new QMenu(this->m_dummyWidget);\n-    this->setMainWindow(NULL);\n+    this->setMainWindow(nullptr);\n #if QT_VERSION < 0x050000\n     qt_mac_set_dock_menu(this->m_dockMenu);\n #elif QT_VERSION >= 0x050200\n@@ -69,7 +69,7 @@ void setupDockClickHandler() {\n MacDockIconHandler::~MacDockIconHandler()\n {\n     delete this->m_dummyWidget;\n-    this->setMainWindow(NULL);\n+    this->setMainWindow(nullptr);\n }\n \n QMenu *MacDockIconHandler::dockMenu()"
      },
      {
        "sha": "4c96d08c8ab54e48d047d743fa76b123fef05d42",
        "filename": "src/qt/macnotificationhandler.mm",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bea8e9e66ea98a957b8318cd49d91b598f38cbd3/src/qt/macnotificationhandler.mm",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bea8e9e66ea98a957b8318cd49d91b598f38cbd3/src/qt/macnotificationhandler.mm",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/macnotificationhandler.mm?ref=bea8e9e66ea98a957b8318cd49d91b598f38cbd3",
        "patch": "@@ -75,7 +75,7 @@ - (NSString *)__bundleIdentifier\n \n MacNotificationHandler *MacNotificationHandler::instance()\n {\n-    static MacNotificationHandler *s_instance = NULL;\n+    static MacNotificationHandler *s_instance = nullptr;\n     if (!s_instance) {\n         s_instance = new MacNotificationHandler();\n         "
      },
      {
        "sha": "4bcb8945f3d5f48875b99137f47db7a0b4be7797",
        "filename": "src/random.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bea8e9e66ea98a957b8318cd49d91b598f38cbd3/src/random.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bea8e9e66ea98a957b8318cd49d91b598f38cbd3/src/random.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/random.cpp?ref=bea8e9e66ea98a957b8318cd49d91b598f38cbd3",
        "patch": "@@ -242,7 +242,7 @@ void GetOSRand(unsigned char *ent32)\n     }\n #elif defined(HAVE_GETENTROPY_RAND) && defined(MAC_OSX)\n     // We need a fallback for OSX < 10.12\n-    if (&getentropy != NULL) {\n+    if (&getentropy != nullptr) {\n         if (getentropy(ent32, NUM_OS_RANDOM_BYTES) != 0) {\n             RandFailure();\n         }"
      }
    ]
  }
]