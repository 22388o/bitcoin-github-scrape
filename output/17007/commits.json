[
  {
    "sha": "c0859b7dac5f3504d753f5dcd7ee272fdb43bea6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjMDg1OWI3ZGFjNWYzNTA0ZDc1M2Y1ZGNkN2VlMjcyZmRiNDNiZWE2",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2019-10-01T08:53:09Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2019-10-02T09:08:15Z"
      },
      "message": "build: 0.19 release updates on master\n\nas per doc/release-process.md.\n\nNote: On branch-off, these same changes should be made on the release branch, with also these additional changes to both files:\n\n  - set `CLIENT_VERSION_REVISION` to `0`\n  - set `CLIENT_VERSION_IS_RELEASE` to `true`",
      "tree": {
        "sha": "67b7def6fd3ad1e92aab248634432cc450acefe3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/67b7def6fd3ad1e92aab248634432cc450acefe3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c0859b7dac5f3504d753f5dcd7ee272fdb43bea6",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl2UaP8ACgkQT1chs9Dj\nkh3K2w//VsnGLojZcu6s0ZVz51QzES+qDXVb8h0dUfasgPmeqtMFxPB9B78YcBZ6\n4GQq0lVAX4qNm9s/DVEJ2Bie6sx82j3Y4/QGMkPQA/Y8tO4fijKEwCLE+HJt8PBb\ngbMDW135SOJ7wcIn0OzsCIyWLtuq1F54J1OJ4iL9w5l1op/uvz0KII3p3kZcsHjp\nssi/hJW8RedhNfIhrmpLTIGZbv0p3rNLa0NgKWurXS0FM72x6/Ofb6N9QiBEX30P\nlTc5/qaRgrQsW74GSmxuKqyh0Os1TZmbHE7/exzkJVp5BOvQXuoYwCZZuhLblxw0\nSGINf+aTdy+yNQB1O1Tt0+o8YjcP2yjo2LvsmqjcbZiB2nBrkwuEFUHUE5qojxFG\niqE2Tj+kWOU7OJEiyRaEiFsg8/t6C0n4z+9K2eZjV721wrdmUqWNqvMgfRxEjLU/\nbgXJGXYWZeOeiB+ikruGDQx2253Jvd1jt7NiDz1GyT70k2bQ/kIZAZK8y/4AJj4F\nr4rLQmyFHfxWCIg73XQiYkerQemVJzWwOPhhAGloYpXNpjjzbsGJgzS/r8vsrRB+\n9GYRrg2wmDDjUKNYt49Svq2ARGPck1LmUsfkPJpAn9K/jKUC2uY7BSt0+SRPJbIV\nx6FXPi54RVzaX/DMQ4BjEGh6eVXg2bewQjhQ6Ae16xsREonLquY=\n=YMTy\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIKfG+rSqqCE0QQK/jaD7vC7ftyZsfP8ghGjCV3HO7qMUCP/wEBV6GFSNfUNx\nmnuckyXdPuMI8CAGhYtV8R/bWfOGBEZ1lQQJCRRlsdPMXCjLQirOOIgzswjxBF2U\naQHwCB7TxmpPIY48AIPf4w0u+QyOLCtodHRwczovL2JvYi5idGMuY2FsZW5kYXIu\nb3BlbnRpbWVzdGFtcHMub3Jn//AQcFZqgof+QaGv26EHnI73LQjxBF2UaQHwCJ34\nqIPE8V1YAIPf4w0u+QyOLi1odHRwczovL2FsaWNlLmJ0Yy5jYWxlbmRhci5vcGVu\ndGltZXN0YW1wcy5vcmf/8BCR/IAcoFVBSLHOD5DewATxCPEEXZRpAfAIftkWKXv3\n07EAg9/jDS75DI4pKGh0dHBzOi8vZmlubmV5LmNhbGVuZGFyLmV0ZXJuaXR5d2Fs\nbC5jb23wEMOlvQqXc2lHYKIQbi/ngAQI8QRdlGkC8Ahk6go/ZIEtigCD3+MNLvkM\njiMiaHR0cHM6Ly9idGMuY2FsZW5kYXIuY2F0YWxsYXh5LmNvbQ==\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 67b7def6fd3ad1e92aab248634432cc450acefe3\nparent 1f40a91286662a9bf40737c34b4de2f5b5fa8b96\nauthor Jon Atack <jon@atack.com> 1569919989 +0200\ncommitter Jon Atack <jon@atack.com> 1570007295 +0200\n\nbuild: 0.19 release updates on master\n\nas per doc/release-process.md.\n\nNote: On branch-off, these same changes should be made on the release branch, with also these additional changes to both files:\n\n  - set `CLIENT_VERSION_REVISION` to `0`\n  - set `CLIENT_VERSION_IS_RELEASE` to `true`\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c0859b7dac5f3504d753f5dcd7ee272fdb43bea6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c0859b7dac5f3504d753f5dcd7ee272fdb43bea6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c0859b7dac5f3504d753f5dcd7ee272fdb43bea6/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1f40a91286662a9bf40737c34b4de2f5b5fa8b96",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1f40a91286662a9bf40737c34b4de2f5b5fa8b96",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1f40a91286662a9bf40737c34b4de2f5b5fa8b96"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "2fe489239db07ac4deea11166c8343d2019894a9",
        "filename": "build_msvc/bitcoin_config.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c0859b7dac5f3504d753f5dcd7ee272fdb43bea6/build_msvc/bitcoin_config.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c0859b7dac5f3504d753f5dcd7ee272fdb43bea6/build_msvc/bitcoin_config.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/bitcoin_config.h?ref=c0859b7dac5f3504d753f5dcd7ee272fdb43bea6",
        "patch": "@@ -14,7 +14,7 @@\n #define CLIENT_VERSION_MAJOR 0\n \n /* Minor version */\n-#define CLIENT_VERSION_MINOR 18\n+#define CLIENT_VERSION_MINOR 19\n \n /* Build revision */\n #define CLIENT_VERSION_REVISION 99\n@@ -346,7 +346,7 @@\n #define PACKAGE_NAME \"Bitcoin Core\"\n \n /* Define to the full name and version of this package. */\n-#define PACKAGE_STRING \"Bitcoin Core 0.18.99\"\n+#define PACKAGE_STRING \"Bitcoin Core 0.19.99\"\n \n /* Define to the one symbol short name of this package. */\n #define PACKAGE_TARNAME \"bitcoin\"\n@@ -355,7 +355,7 @@\n #define PACKAGE_URL \"https://bitcoincore.org/\"\n \n /* Define to the version of this package. */\n-#define PACKAGE_VERSION \"0.18.99\"\n+#define PACKAGE_VERSION \"0.19.99\"\n \n /* Define to necessary symbol if this constant uses a non-standard name on\n    your system. */"
      },
      {
        "sha": "8af9a986d2889b38fe83fdaf5bf91fe192311726",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c0859b7dac5f3504d753f5dcd7ee272fdb43bea6/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c0859b7dac5f3504d753f5dcd7ee272fdb43bea6/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=c0859b7dac5f3504d753f5dcd7ee272fdb43bea6",
        "patch": "@@ -1,7 +1,7 @@\n dnl require autoconf 2.60 (AS_ECHO/AS_ECHO_N)\n AC_PREREQ([2.60])\n define(_CLIENT_VERSION_MAJOR, 0)\n-define(_CLIENT_VERSION_MINOR, 18)\n+define(_CLIENT_VERSION_MINOR, 19)\n define(_CLIENT_VERSION_REVISION, 99)\n define(_CLIENT_VERSION_BUILD, 0)\n define(_CLIENT_VERSION_RC, 0)"
      }
    ]
  },
  {
    "sha": "434101875c69d523ee34afee540212129be06458",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0MzQxMDE4NzVjNjlkNTIzZWUzNGFmZWU1NDAyMTIxMjliZTA2NDU4",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2019-10-01T11:04:40Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2019-10-02T09:17:20Z"
      },
      "message": "doc: reset release notes after 0.19 split-off\n\n- empty release-notes.md and propose a few improvements\n\n- delete release notes fragments",
      "tree": {
        "sha": "ec7a6be9913323e387763d75b5d7fea22400fb09",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ec7a6be9913323e387763d75b5d7fea22400fb09"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/434101875c69d523ee34afee540212129be06458",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl2UayUACgkQT1chs9Dj\nkh0Y7Q//aLRXl0+YnDyw3Ekltm0cY3WqLXYHaTtHu51NLTho/KwgasDwgRyXFN1B\ns1hbGnFmR2AkZH3loZQQYLXXn74TMMPV/bl3gJJHTvTZbTRglAuQt87YYqdAvQkY\nFfruk/f6OF/w68K7Zg6KAktpQyH3mwp9MttEKAJrAgbthbefPZYsbbomSQK/9kXi\njEPP0rMXm8vI7LU2g9Fa8ko0BPF8IRlwLYMumLOtwCVOH7y26u/J7wtDpLf3ljQI\nh7taWw/pOgQk4aSZs6/fvHU221rOY/zKa7TkWgr0FjvggUzKYdyn5YY/o0m3zFzV\nQHZD8P9ND0X8wRhaYsX4q0KzTA5H5/Ply7k0gvpLhzn1b14ly2xZV7LWKqRYha3m\nYdzoeW80Vi/oBPRiG1t9dUpYe1CqAuA6dMuMbdrcBvwt2R6Yoo3qwMYGEceDdwP0\nJGlYN/+eoMgf+8tKIygUct7X8UV1yPVF3yiuBJaFx6fa2lh9QrlRT/M3tSYyjPo7\nPMMU7r50RUhk42OcRgPQPHF0PDE0CwFTR7U/3aecDxzsaH6gFeAhkOwxHkZLT8HP\nKylSHTrLnePXAKNztwwC1s6LQ+h/NSjHcyKtluSJJMoOrLI4XH5qzFzePrpqzrrv\n7RujcodoczH0n7LW3O8hPzI3/zAaVkdGbX+M7cPx1ZaYsvkz63U=\n=c6CP\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIPSbirjw4ruZF2M7I6MYtcfzJai5oknQry6ImhE6wEK7CP/wEC9OKiviFJEg\nPwGcwR6FuT0I8QRdlGsm8AgNhq/i7YKJfwCD3+MNLvkMjikoaHR0cHM6Ly9maW5u\nZXkuY2FsZW5kYXIuZXRlcm5pdHl3YWxsLmNvbf/wEETd9h//YG6RWbJGZdiGAFUI\n8QRdlGsn8AgJmyf7gSxlqQCD3+MNLvkMjiwraHR0cHM6Ly9ib2IuYnRjLmNhbGVu\nZGFyLm9wZW50aW1lc3RhbXBzLm9yZ//wEH+M7P3fuUw67u0opsZtOtwI8QRdlGsn\n8AhKnZlwE27HJgCD3+MNLvkMjiMiaHR0cHM6Ly9idGMuY2FsZW5kYXIuY2F0YWxs\nYXh5LmNvbfAQm9LjdpBJBvi4UGfzPeNuBwjxBF2UayfwCPV8jUMZNClwAIPf4w0u\n+QyOLi1odHRwczovL2FsaWNlLmJ0Yy5jYWxlbmRhci5vcGVudGltZXN0YW1wcy5v\ncmc=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree ec7a6be9913323e387763d75b5d7fea22400fb09\nparent c0859b7dac5f3504d753f5dcd7ee272fdb43bea6\nauthor Jon Atack <jon@atack.com> 1569927880 +0200\ncommitter Jon Atack <jon@atack.com> 1570007840 +0200\n\ndoc: reset release notes after 0.19 split-off\n\n- empty release-notes.md and propose a few improvements\n\n- delete release notes fragments\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/434101875c69d523ee34afee540212129be06458",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/434101875c69d523ee34afee540212129be06458",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/434101875c69d523ee34afee540212129be06458/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c0859b7dac5f3504d753f5dcd7ee272fdb43bea6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c0859b7dac5f3504d753f5dcd7ee272fdb43bea6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c0859b7dac5f3504d753f5dcd7ee272fdb43bea6"
      }
    ],
    "stats": {
      "total": 339,
      "additions": 8,
      "deletions": 331
    },
    "files": [
      {
        "sha": "db5aa0d8a725ab83efd2775cc1134ce24eab442b",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 8,
        "deletions": 331,
        "changes": 339,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/434101875c69d523ee34afee540212129be06458/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/434101875c69d523ee34afee540212129be06458/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=434101875c69d523ee34afee540212129be06458",
        "patch": "@@ -39,7 +39,7 @@ installer (on Windows) or just copy over `/Applications/Bitcoin-Qt` (on Mac)\n or `bitcoind`/`bitcoin-qt` (on Linux).\n \n Upgrading directly from a version of Bitcoin Core that has reached its EOL is\n-possible, but might take some time if the datadir needs to be migrated.  Old\n+possible, but it might take some time if the datadir needs to be migrated. Old\n wallet versions of Bitcoin Core are generally supported.\n \n Compatibility\n@@ -52,345 +52,22 @@ to use Bitcoin Core on unsupported systems.\n Bitcoin Core should also work on most other Unix-like systems but is not\n as frequently tested on them.\n \n-From 0.17.0 onwards, macOS <10.10 is no longer supported. 0.17.0 is\n-built using Qt 5.9.x, which doesn't support versions of macOS older than\n-10.10. Additionally, Bitcoin Core does not yet change appearance when\n+From Bitcoin Core 0.17.0 onwards, macOS versions earlier than 10.10 are no\n+longer supported, as Bitcoin Core is now built using Qt 5.9.x which requires\n+macOS 10.10+. Additionally, Bitcoin Core does not yet change appearance when\n macOS \"dark mode\" is activated.\n \n-In addition to previously-supported CPU platforms, this release's\n-pre-compiled distribution also provides binaries for the RISC-V\n-platform.\n+In addition to previously supported CPU platforms, this release's pre-compiled\n+distribution provides binaries for the RISC-V platform.\n \n Notable changes\n ===============\n \n-New user documentation\n-----------------------\n-\n-- [Reduce memory](https://github.com/bitcoin/bitcoin/blob/master/doc/reduce-memory.md)\n-  suggests configuration tweaks for running Bitcoin Core on systems with\n-  limited memory. (#16339)\n-\n-New RPCs\n---------\n-\n-- `getbalances` returns an object with all balances (`mine`,\n-  `untrusted_pending` and `immature`). Please refer to the RPC help of\n-  `getbalances` for details. The new RPC is intended to replace\n-  `getbalance`, `getunconfirmedbalance`, and the balance fields in\n-  `getwalletinfo`.  These old calls and fields may be removed in a\n-  future version. (#15930, #16239)\n-\n-- `setwalletflag` sets and unsets wallet flags that enable or disable\n-  features specific to that existing wallet, such as the new\n-  `avoid_reuse` feature documented elsewhere in these release notes.\n-  (#13756)\n-\n-- `getblockfilter` gets the BIP158 filter for the specified block.  This\n-  RPC is only enabled if block filters have been created using the\n-  `-blockfilterindex` configuration option. (#14121)\n-\n-New settings\n-------------\n-\n-- `-blockfilterindex` enables the creation of BIP158 block filters for\n-  the entire blockchain.  Filters will be created in the background and\n-  currently use about 4 GiB of space.  Note: this version of Bitcoin\n-  Core does not serve block filters over the P2P network, although the\n-  local user may obtain block filters using the `getblockfilter` RPC.\n-  (#14121)\n-\n-Updated settings\n-----------------\n-\n-- `whitebind` and `whitelist` now accept a list of permissions to\n-  provide peers connecting using the indicated interfaces or IP\n-  addresses.  If no permissions are specified with an address or CIDR\n-  network, the implicit default permissions are the same as previous\n-  releases.  See the `bitcoind -help` output for these two options for\n-  details about the available permissions. (#16248)\n-\n-Updated RPCs\n-------------\n-\n-Note: some low-level RPC changes mainly useful for testing are described in the\n-Low-level Changes section below.\n-\n-- `sendmany` no longer has a `minconf` argument.  This argument was not\n-  well specified and would lead to RPC errors even when the wallet's\n-  coin selection succeeded.  Users who want to influence coin selection\n-  can use the existing `-spendzeroconfchange`, `-limitancestorcount`,\n-  `-limitdescendantcount` and `-walletrejectlongchains` configuration\n-  arguments. (#15596)\n-\n-- `getbalance` and `sendtoaddress`, plus the new RPCs `getbalances` and\n-  `createwallet`, now accept an \"avoid_reuse\" parameter that controls\n-  whether already used addresses should be included in the operation.\n-  Additionally, `sendtoaddress` will avoid partial spends when\n-  `avoid_reuse` is enabled even if this feature is not already enabled\n-  via the `-avoidpartialspends` command line flag because not doing so\n-  would risk using up the \"wrong\" UTXO for an address reuse case.\n-  (#13756)\n-\n-- RPCs which have an `include_watchonly` argument or `includeWatching` option now default to `true` for watch-only\n-  wallets. Affected RPCs are: `getbalance`, `listreceivedbyaddress`, `listreceivedbylabel`, `listtransactions`,\n-  `listsinceblock`, `gettransaction`, `walletcreatefundedpsbt`, and `fundrawtransaction`. (#16383)\n-\n-- `listunspent` now returns a \"reused\" bool for each output if the\n-  wallet flag \"avoid_reuse\" is enabled. (#13756)\n-\n-- `getblockstats` now uses BlockUndo data instead of the transaction\n-  index, making it much faster, no longer dependent on the `-txindex`\n-  configuration option, and functional for all non-pruned blocks.\n-  (#14802)\n-\n-- `utxoupdatepsbt` now accepts a `descriptors` parameter that will fill\n-  out input and output scripts and keys when known. P2SH-witness inputs\n-  will be filled in from the UTXO set when a descriptor is provided that\n-  shows they're spending segwit outputs.  See the RPC help text for full\n-  details. (#15427)\n-\n-- `sendrawtransaction` and `testmempoolaccept` no longer accept a\n-  `allowhighfees` parameter to fail mempool acceptance if the\n-  transaction fee exceedes the value of the configuration option\n-  `-maxtxfee`.  Now there is a hardcoded default maximum feerate that\n-  can be changed when calling either RPC using a `maxfeerate` parameter.\n-  (#15620)\n-\n-- `getmempoolancestors`, `getmempooldescendants`, `getmempoolentry`, and\n-  `getrawmempool` no longer return a `size` field unless the\n-  configuration option `-deprecatedrpc=size` is used.  Instead a new\n-  `vsize` field is returned with the transaction's virtual size\n-  (consistent with other RPCs such as `getrawtransaction`). (#15637)\n-\n-- `getwalletinfo` now includes a `scanning` field that is either `false`\n-  (no scanning) or an object with information about the duration and\n-  progress of the wallet's scanning historical blocks for transactions\n-  affecting its balances. (#15730)\n-\n-- `gettransaction` now accepts a third (boolean) argument `verbose`. If\n-  set to `true`, a new `decoded` field will be added to the response containing\n-  the decoded transaction. This field is equivalent to RPC `decoderawtransaction`,\n-  or RPC `getrawtransaction` when `verbose` is passed.\n-\n-- `createwallet` accepts a new `passphrase` parameter.  If set, this\n-  will create the new wallet encrypted with the given passphrase.  If\n-  unset (the default) or set to an empty string, no encryption will be\n-  used. (#16394)\n-\n-- `getchaintxstats` RPC now returns the additional key of\n-  `window_final_block_height`.\n-\n-- `getmempoolentry` now provides a `weight` field containing the\n-  transaction weight as defined in BIP141. (#16647)\n-\n-- The `getnetworkinfo` and `getpeerinfo` commands now contain a new field with decoded network service flags.\n-\n-- `getdescriptorinfo` now returns an additional `checksum` field\n-  containing the checksum for the unmodified descriptor provided by the\n-  user (that is, before the descriptor is normalized for the\n-  `descriptor` field). (#15986)\n-\n-- `joinpsbts` will shuffle the order of the inputs and outputs of the resulting joined psbt.\n-  Previously inputs and outputs were added in the order that the PSBTs were provided which makes correlating inputs to outputs extremely easy.\n-\n-- `walletcreatefundedpsbt` now signals BIP125 Replace-by-Fee if the\n-  `-walletrbf` configuration option is set to true. (#15911)\n-\n-GUI changes\n------------\n-\n-- Provides bech32 addresses by default.  The user may change the address\n-  during invoice generation using a GUI toggle, or the default address\n-  type may be changed by the `-addresstype` configuration option.\n-  (#15711, #16497)\n-\n-- In 0.18.0 a `./configure` flag was introduced to allow disabling BIP70 support in the GUI (support was enabled by default). In 0.19.0 this flag is now __disabled__ by default.\n-- If you want compile Bitcoin Core with BIP70 support in the GUI, you can pass `--enable-bip70` to `./configure`.\n-\n-Deprecated or removed configuration options\n--------------------------------------------\n-\n-- `-mempoolreplacement` is removed, although default node behavior\n-  remains the same.  This option previously allowed the user to prevent\n-  the node from accepting or relaying BIP125 transaction replacements.\n-  This is different from the remaining configuration option\n-  `-walletrbf`. (#16171)\n-\n-Deprecated or removed RPCs\n---------------------------\n-\n-- `bumpfee` no longer accepts a `totalFee` option unless the\n-  configuration parameter `deprecatedrpc=totalFee` is specified.  This\n-  parameter will be fully removed in a subsequent release. (#15996)\n-\n-- `generate` is now removed after being deprecated in Bitcoin Core 0.18.\n-  Use the `generatetoaddress` RPC instead. (#15492)\n-\n-P2P changes\n------------\n-\n-- BIP 61 reject messages were deprecated in v0.18. They are now disabled\n-  by default, but can be enabled by setting the `-enablebip61` command\n-  line option.  BIP 61 reject messages will be removed entirely in a\n-  future version of Bitcoin Core. (#14054)\n-\n-- To eliminate well-known denial-of-service vectors in Bitcoin Core,\n-  especially for nodes with spinning disks, the default value for the\n-  `-peerbloomfilters` configuration option has been changed to false.\n-  This prevents Bitcoin Core from sending the BIP111 NODE_BLOOM service\n-  flag, accepting BIP37 bloom filters, or serving merkle blocks or\n-  transactions matching a bloom filter.  Users who still want to provide\n-  bloom filter support may either set the configuration option to true\n-  to re-enable both BIP111 and BIP37 support or enable just BIP37\n-  support for specific peers using the updated `-whitelist` and\n-  `-whitebind` configuration options described elsewhere in these\n-  release notes.  For the near future, lightweight clients using public\n-  BIP111/BIP37 nodes should still be able to connect to older versions\n-  of Bitcoin Core and nodes that have manually enabled BIP37 support,\n-  but developers of such software should consider migrating to either\n-  using specific BIP37 nodes or an alternative transaction filtering\n-  system. (#16152)\n-\n-Miscellaneous CLI Changes\n--------------------------\n-\n-- The `testnet` field in `bitcoin-cli -getinfo` has been renamed to\n-  `chain` and now returns the current network name as defined in BIP70\n-  (main, test, regtest). (#15566)\n-\n-Low-level changes\n-=================\n-\n-RPC\n----\n-\n-- `getblockchaininfo` no longer returns a `bip9_softforks` object.\n-  Instead, information has been moved into the `softforks` object and\n-  an additional `type` field describes how Bitcoin Core determines\n-  whether that soft fork is active (e.g. BIP9 or BIP90).  See the RPC\n-  help for details. (#16060)\n-\n-- `getblocktemplate` no longer returns a `rules` array containing `CSV`\n-  and `segwit` (the BIP9 deployments that are currently in active\n-  state). (#16060)\n-\n-- `getrpcinfo` now returns a `logpath` field with the path to\n-  `debug.log`. (#15483)\n-\n-Tests\n------\n-\n-- The regression test chain enabled by the `-regtest` command line flag\n-  now requires transactions to not violate standard policy by default.\n-  This is the same default used for mainnet and makes it easier to test\n-  mainnet behavior on regtest. Note that the testnet still allows\n-  non-standard txs by default and that the policy can be locally\n-  adjusted with the `-acceptnonstdtxn` command line flag for both test\n-  chains. (#15891)\n-\n-Configuration\n-------------\n-\n-- A setting specified in the default section but not also specified in a\n-  network-specific section (e.g. testnet) will now produce an error\n-  preventing startup instead of just a warning unless the network is\n-  mainnet.  This prevents settings intended for mainnet from being\n-  applied to testnet or regtest. (#15629)\n-\n-- On platforms supporting `thread_local`, log lines can be prefixed with\n-  the name of the thread that caused the log. To enable this behavior,\n-  use `-logthreadnames=1`. (#15849)\n-\n-Network\n--------\n-\n-- When fetching a transaction announced by multiple peers, previous versions of\n-  Bitcoin Core would sequentially attempt to download the transaction from each\n-  announcing peer until the transaction is received, in the order that those\n-  peers' announcements were received.  In this release, the download logic has\n-  changed to randomize the fetch order across peers and to prefer sending\n-  download requests to outbound peers over inbound peers. This fixes an issue\n-  where inbound peers could prevent a node from getting a transaction.\n-  (#14897, #15834)\n-\n-- If a Tor hidden service is being used, Bitcoin Core will be bound to\n-  the standard port 8333 even if a different port is configured for\n-  clearnet connections.  This prevents leaking node identity through use\n-  of identical non-default port numbers. (#15651)\n-\n-Mempool and transaction relay\n------------------------------\n-\n-- Allows one extra single-ancestor transaction per package.  Previously,\n-  if a transaction in the mempool had 25 descendants, or it and all of\n-  its descendants were over 101,000 vbytes, any newly-received\n-  transaction that was also a descendant would be ignored.  Now, one\n-  extra descendant will be allowed provided it is an immediate\n-  descendant (child) and the child's size is 10,000 vbytes or less.\n-  This makes it possible for two-party contract protocols such as\n-  Lightning Network to give each participant an output they can spend\n-  immediately for Child-Pays-For-Parent (CPFP) fee bumping without\n-  allowing one malicious participant to fill the entire package and thus\n-  prevent the other participant from spending their output. (#15681)\n-\n-- Transactions with outputs paying v1 to v16 witness versions (future\n-  segwit versions) are now accepted into the mempool, relayed, and\n-  mined.  Attempting to spend those outputs remains forbidden by policy\n-  (\"non-standard\").  When this change has been widely deployed, wallets\n-  and services can accept any valid bech32 Bitcoin address without\n-  concern that transactions paying future segwit versions will become\n-  stuck in an unconfirmed state. (#15846)\n-\n-- Legacy transactions (transactions with no segwit inputs) must now be\n-  sent using the legacy encoding format, enforcing the rule specified in\n-  BIP144.  (#14039)\n-\n-Wallet\n-------\n-\n-- When in pruned mode, a rescan that was triggered by an `importwallet`,\n-  `importpubkey`, `importaddress`, or `importprivkey` RPC will only fail\n-  when blocks have been pruned. Previously it would fail when `-prune`\n-  has been set.  This change allows setting `-prune` to a high value\n-  (e.g. the disk size) without the calls to any of the import RPCs\n-  failing until the first block is pruned. (#15870)\n-\n-- When creating a transaction with a fee above `-maxtxfee` (default 0.1\n-  BTC), the RPC commands `walletcreatefundedpsbt` and\n-  `fundrawtransaction` will now fail instead of rounding down the fee.\n-  Be aware that the `feeRate` argument is specified in BTC per 1,000\n-  vbytes, not satoshi per vbyte. (#16257)\n-\n-- A new wallet flag `avoid_reuse` has been added (default off). When\n-  enabled, a wallet will distinguish between used and unused addresses,\n-  and default to not use the former in coin selection.  When setting\n-  this flag on an existing wallet, rescanning the blockchain is required\n-  to correctly mark previously used destinations.  Together with \"avoid\n-  partial spends\" (added in Bitcoin Core v0.17.0), this can eliminate a\n-  serious privacy issue where a malicious user can track spends by\n-  sending small payments to a previously-paid address that would then\n-  be included with unrelated inputs in future payments. (#13756)\n-\n-Build system changes\n---------------------\n-\n-- Python >=3.5 is now required by all aspects of the project. This\n-  includes the build systems, test framework and linters. The previously\n-  supported minimum (3.4), was EOL in March 2019. (#14954)\n-\n-- The minimum supported miniUPnPc API version is set to 10. This keeps\n-  compatibility with Ubuntu 16.04 LTS and Debian 8 `libminiupnpc-dev`\n-  packages. Please note, on Debian this package is still vulnerable to\n-  [CVE-2017-8798](https://security-tracker.debian.org/tracker/CVE-2017-8798)\n-  (in jessie only) and\n-  [CVE-2017-1000494](https://security-tracker.debian.org/tracker/CVE-2017-1000494)\n-  (both in jessie and in stretch). (#15993)\n-\n Credits\n =======\n \n Thanks to everyone who directly contributed to this release:\n \n \n-As well as everyone that helped translating on [Transifex](https://www.transifex.com/bitcoin/bitcoin/).\n+As well as to everyone that helped with translations on\n+[Transifex](https://www.transifex.com/bitcoin/bitcoin/)."
      }
    ]
  }
]