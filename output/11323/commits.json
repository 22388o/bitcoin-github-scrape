[
  {
    "sha": "1817398b397afebcc857c40a16d201c84878cb89",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxODE3Mzk4YjM5N2FmZWJjYzg1N2M0MGExNmQyMDFjODQ4NzhjYjg5",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2017-09-13T17:24:38Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2017-09-13T17:31:44Z"
      },
      "message": "mininode: add an optimistic write and disable nagle\n\nBecause the poll/select loop may pause for 100msec before actually doing a\nsend, and we have no way to force the loop awake, try sending from the calling\nthread if the queue is empty.\n\nAlso, disable nagle as all sends should be either full messages or unfinished\nsends.\n\nThis shaves an average of ~1 minute or so off of my accumulated runtime, and\n10-15 seconds off of actual runtime.",
      "tree": {
        "sha": "6a16153e0fe885496c31844e40079a1adebe43f3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6a16153e0fe885496c31844e40079a1adebe43f3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1817398b397afebcc857c40a16d201c84878cb89",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1817398b397afebcc857c40a16d201c84878cb89",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1817398b397afebcc857c40a16d201c84878cb89",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1817398b397afebcc857c40a16d201c84878cb89/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "96ac26e56627f0c24213fcd3a1cce9fc95f1f661",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/96ac26e56627f0c24213fcd3a1cce9fc95f1f661",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/96ac26e56627f0c24213fcd3a1cce9fc95f1f661"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 9,
      "deletions": 1
    },
    "files": [
      {
        "sha": "03b7c6e50cd58ebc6a2dc0d6fab5584b1c3ac666",
        "filename": "test/functional/test_framework/mininode.py",
        "status": "modified",
        "additions": 9,
        "deletions": 1,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1817398b397afebcc857c40a16d201c84878cb89/test/functional/test_framework/mininode.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1817398b397afebcc857c40a16d201c84878cb89/test/functional/test_framework/mininode.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/mininode.py?ref=1817398b397afebcc857c40a16d201c84878cb89",
        "patch": "@@ -1654,6 +1654,7 @@ def __init__(self, dstaddr, dstport, rpc, callback, net=\"regtest\", services=NODE\n         self.dstaddr = dstaddr\n         self.dstport = dstport\n         self.create_socket(socket.AF_INET, socket.SOCK_STREAM)\n+        self.socket.setsockopt(socket.IPPROTO_TCP, socket.TCP_NODELAY, 1)\n         self.sendbuf = b\"\"\n         self.recvbuf = b\"\"\n         self.ver_send = 209\n@@ -1792,7 +1793,14 @@ def send_message(self, message, pushbuf=False):\n             tmsg += h[:4]\n         tmsg += data\n         with mininode_lock:\n-            self.sendbuf += tmsg\n+            if (len(self.sendbuf) == 0 and not pushbuf):\n+                try:\n+                    sent = self.send(tmsg)\n+                    self.sendbuf = tmsg[sent:]\n+                except BlockingIOError:\n+                    self.sendbuf = tmsg\n+            else:\n+                self.sendbuf += tmsg\n             self.last_sent = time.time()\n \n     def got_message(self, message):"
      }
    ]
  }
]