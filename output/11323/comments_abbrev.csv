jnewbery,2017-09-13T20:05:00Z,"Mega concept ACK!\n\nTested ACK 1817398b397afebcc857c40a16d201c84878cb89. I've run the extended test suite over this locally and it passes. It makes any test using the p2p interface much faster.\n\nTravis has intermittent timing issues, so we'd need to make sure this is well tested in that environment before merging.",https://github.com/bitcoin/bitcoin/pull/11323#issuecomment-329281364,329281364,
jnewbery,2017-09-15T18:55:56Z,"Cory is being modest as usual. Let's run this over just the tests that use the p2p network thread.\n\nmaster:\n\n```\n‚Üí ./test_runner.py $(grep -l NetworkThread *py | tr '\n' ' ')\nTemporary test directory at /tmp/user/1000/bitcoin_test_runner_20170915_153854\n.............\nTEST                       | STATUS    | DURATION\n\nassumevalid.py             | ‚úì Passed  | 12 s\nbip65-cltv-p2",https://github.com/bitcoin/bitcoin/pull/11323#issuecomment-329870417,329870417,
TheBlueMatt,2017-09-15T21:59:55Z,"utACK 1817398b397afebcc857c40a16d201c84878cb89, wanna fix @jimpo's style nit?",https://github.com/bitcoin/bitcoin/pull/11323#issuecomment-329914223,329914223,
sipa,2017-09-15T23:21:57Z,utACK,https://github.com/bitcoin/bitcoin/pull/11323#issuecomment-329925229,329925229,
MarcoFalke,2017-09-16T00:07:23Z,"Nice, Concept ACK",https://github.com/bitcoin/bitcoin/pull/11323#issuecomment-329930189,329930189,
theuni,2017-09-16T16:47:59Z,"I'll defer on the style nit, I'm not familiar enough with python to have a preference.",https://github.com/bitcoin/bitcoin/pull/11323#issuecomment-329980232,329980232,
jonasschnelli,2017-09-17T04:08:36Z,"Nice!\nutACK 1817398b397afebcc857c40a16d201c84878cb89",https://github.com/bitcoin/bitcoin/pull/11323#issuecomment-330018273,330018273,
MarcoFalke,2017-09-18T19:09:46Z,"utACK 1817398b397afebcc857c40a16d201c84878cb89. Not going to hold this up on style nits, as there are other places where this is ""wrong"" and we don't enforce any style in the python code as of now.",https://github.com/bitcoin/bitcoin/pull/11323#issuecomment-330325781,330325781,
jimpo,2017-09-14T05:16:32Z,"nit: `if not self.sendbuf and not pushbuf:`. From PEP8: ""For sequences, (strings, lists, tuples), use the fact that empty sequences are false.""",https://github.com/bitcoin/bitcoin/pull/11323#discussion_r138798787,138798787,test/functional/test_framework/mininode.py
MarcoFalke,2017-09-16T00:06:34Z,"No need to fix this ""style nit"". `len(some_list)==0` is stricter than just casting any object/primitive type to boolean. Also it is more clear to read, imo.",https://github.com/bitcoin/bitcoin/pull/11323#discussion_r139271186,139271186,test/functional/test_framework/mininode.py
sipa,2017-09-16T00:15:00Z,"@MarcoFalke I believe that for values of the `list` type `if len(some_list)==0` is actually identical to `if not some_list`, and in general I'd argue for following things like PEP8.",https://github.com/bitcoin/bitcoin/pull/11323#discussion_r139271760,139271760,test/functional/test_framework/mininode.py
jnewbery,2017-09-16T18:42:08Z,"ACK with or without this nit change. I have a slight preference for being pythonic and following PEP8. Leaving the longer form (`if (len(self.sendbuf) ==0` would catch any bugs where someone set `self.sendbuf` to something other than a list, but I don't think that's a good justification.",https://github.com/bitcoin/bitcoin/pull/11323#discussion_r139292623,139292623,test/functional/test_framework/mininode.py
meshcollider,2017-09-17T00:05:11Z,Either way I think the brackets should at least be removed,https://github.com/bitcoin/bitcoin/pull/11323#discussion_r139297937,139297937,test/functional/test_framework/mininode.py
MarcoFalke,2017-09-17T14:54:29Z,"@sipa, it is identical. Though, in the case that `some_list` is `False` or `None` or `0` or anything else that casts to `False`, `len(some_list)` will fail appropriately. I don't think it is a downside to fail in the test framework when a parameter has the wrong type.",https://github.com/bitcoin/bitcoin/pull/11323#discussion_r139312590,139312590,test/functional/test_framework/mininode.py
jnewbery,2017-09-18T13:48:07Z,"I think to be hyper pedantic, `if len(self.sendbuf) == 0` is equivalent to:\n\n```python\nif not hasattr(self.sendbuf, '__len__'):\n    raise TypeError\nelse if not self.sendbuf:\n    # do stuff\n```\n\nie, it basically has an implicit assert that the type of `self.sendbuf` has a length property.\n\nIn general we don't litter the Python code with type checks, even though it's not a type",https://github.com/bitcoin/bitcoin/pull/11323#discussion_r139426696,139426696,test/functional/test_framework/mininode.py
promag,2017-09-18T15:33:05Z,üëç on @jimpo and @MeshCollider suggestions.,https://github.com/bitcoin/bitcoin/pull/11323#discussion_r139457432,139457432,test/functional/test_framework/mininode.py
