[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/168772807",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7291#issuecomment-168772807",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7291",
    "id": 168772807,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODc3MjgwNw==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-04T19:07:55Z",
    "updated_at": "2016-01-04T19:08:02Z",
    "author_association": "MEMBER",
    "body": "Nice! Concept ACK  5609f88\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/168772807/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/168779831",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7291#issuecomment-168779831",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7291",
    "id": 168779831,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODc3OTgzMQ==",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?u=eab5d0cdbb6cc25087cb61d4ca4a6f85255f42a7&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-04T19:36:59Z",
    "updated_at": "2016-01-04T19:36:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks!\nutACK.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/168779831/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/169669226",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7291#issuecomment-169669226",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7291",
    "id": 169669226,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2OTY2OTIyNg==",
    "user": {
      "login": "dcousens",
      "id": 413395,
      "node_id": "MDQ6VXNlcjQxMzM5NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/413395?u=034ef1433a0704d9c91b57b993009b0383d6b7c0&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dcousens",
      "html_url": "https://github.com/dcousens",
      "followers_url": "https://api.github.com/users/dcousens/followers",
      "following_url": "https://api.github.com/users/dcousens/following{/other_user}",
      "gists_url": "https://api.github.com/users/dcousens/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dcousens/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dcousens/subscriptions",
      "organizations_url": "https://api.github.com/users/dcousens/orgs",
      "repos_url": "https://api.github.com/users/dcousens/repos",
      "events_url": "https://api.github.com/users/dcousens/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dcousens/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-07T13:51:50Z",
    "updated_at": "2016-01-07T13:51:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "utACK 9bafdbc\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/169669226/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/176729379",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7291#issuecomment-176729379",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7291",
    "id": 176729379,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NjcyOTM3OQ==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-29T12:27:31Z",
    "updated_at": "2016-01-29T12:27:31Z",
    "author_association": "MEMBER",
    "body": "See #7435.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/176729379/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/48770392",
    "pull_request_review_id": null,
    "id": 48770392,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzcwMzky",
    "diff_hunk": "@@ -45,6 +45,30 @@ BOOST_AUTO_TEST_CASE(netbase_properties)\n     BOOST_CHECK(CNetAddr(\"8.8.8.8\").IsRoutable());\n     BOOST_CHECK(CNetAddr(\"2001::1\").IsRoutable());\n     BOOST_CHECK(CNetAddr(\"127.0.0.1\").IsValid());\n+    BOOST_CHECK(CNetAddr(\"1.1.1\").ToString() == \"1.1.0.1\");\n+    BOOST_CHECK(CNetAddr(\"1.1\").ToString() == \"1.0.0.1\");\n+    BOOST_CHECK(CNetAddr(\"1111\").ToString() == \"0.0.4.87\");\n+    BOOST_CHECK(CNetAddr(\"1111111111\").ToString() == \"66.58.53.199\");\n+\n+    // CNetAddr does not support ports making it dangerous to treat like CService\n+    BOOST_CHECK(CNetAddr(\"250.2.2.2:7777\").ToString() != CNetAddr(\"250.2.2.2\", 7777).ToString());\n+    BOOST_CHECK(CNetAddr(\"250.2.2.2:7777\").ToString() == \"::\");\n+    BOOST_CHECK(CNetAddr(\"250.2.2.2\", 7777).ToString() == \"250.2.2.2\");\n+    BOOST_CHECK(CNetAddr(\"1.1.1.1:1\").ToString() == CNetAddr(\"2.2.2:1\").ToString());\n+    BOOST_CHECK(CNetAddr(\"1.1.1.1:1\").ToString() == \"::\");\n+    BOOST_CHECK(CNetAddr(\"2.2.2.2:2\").ToString() == \"::\");\n+    BOOST_CHECK(CNetAddr(\"2.2.2.2:2\").IsIPv6());\n+    BOOST_CHECK(CNetAddr(\"2.2.2.2:2\").IsIPv4() == false);\n+\n+    // Comparing with CNetAddr constructior with CService constructior",
    "path": "src/test/netbase_tests.cpp",
    "position": null,
    "original_position": 19,
    "commit_id": "9bafdbcbcf35c70d3171592368cd6f862e6d9de0",
    "original_commit_id": "5609f882da9f078cb9c01bb48a8edd1bb6ec0048",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "s/constructior/constructor\n",
    "created_at": "2016-01-04T19:34:53Z",
    "updated_at": "2016-01-04T20:35:02Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7291#discussion_r48770392",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7291",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/48770392"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/7291#discussion_r48770392"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7291"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/48770392/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 63,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/48777881",
    "pull_request_review_id": null,
    "id": 48777881,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzc3ODgx",
    "diff_hunk": "@@ -45,6 +45,30 @@ BOOST_AUTO_TEST_CASE(netbase_properties)\n     BOOST_CHECK(CNetAddr(\"8.8.8.8\").IsRoutable());\n     BOOST_CHECK(CNetAddr(\"2001::1\").IsRoutable());\n     BOOST_CHECK(CNetAddr(\"127.0.0.1\").IsValid());\n+    BOOST_CHECK(CNetAddr(\"1.1.1\").ToString() == \"1.1.0.1\");\n+    BOOST_CHECK(CNetAddr(\"1.1\").ToString() == \"1.0.0.1\");\n+    BOOST_CHECK(CNetAddr(\"1111\").ToString() == \"0.0.4.87\");\n+    BOOST_CHECK(CNetAddr(\"1111111111\").ToString() == \"66.58.53.199\");\n+\n+    // CNetAddr does not support ports making it dangerous to treat like CService\n+    BOOST_CHECK(CNetAddr(\"250.2.2.2:7777\").ToString() != CNetAddr(\"250.2.2.2\", 7777).ToString());\n+    BOOST_CHECK(CNetAddr(\"250.2.2.2:7777\").ToString() == \"::\");\n+    BOOST_CHECK(CNetAddr(\"250.2.2.2\", 7777).ToString() == \"250.2.2.2\");\n+    BOOST_CHECK(CNetAddr(\"1.1.1.1:1\").ToString() == CNetAddr(\"2.2.2:1\").ToString());\n+    BOOST_CHECK(CNetAddr(\"1.1.1.1:1\").ToString() == \"::\");\n+    BOOST_CHECK(CNetAddr(\"2.2.2.2:2\").ToString() == \"::\");\n+    BOOST_CHECK(CNetAddr(\"2.2.2.2:2\").IsIPv6());\n+    BOOST_CHECK(CNetAddr(\"2.2.2.2:2\").IsIPv4() == false);\n+\n+    // Comparing with CNetAddr constructior with CService constructior",
    "path": "src/test/netbase_tests.cpp",
    "position": null,
    "original_position": 19,
    "commit_id": "9bafdbcbcf35c70d3171592368cd6f862e6d9de0",
    "original_commit_id": "5609f882da9f078cb9c01bb48a8edd1bb6ec0048",
    "user": {
      "login": "EthanHeilman",
      "id": 274814,
      "node_id": "MDQ6VXNlcjI3NDgxNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/274814?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/EthanHeilman",
      "html_url": "https://github.com/EthanHeilman",
      "followers_url": "https://api.github.com/users/EthanHeilman/followers",
      "following_url": "https://api.github.com/users/EthanHeilman/following{/other_user}",
      "gists_url": "https://api.github.com/users/EthanHeilman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/EthanHeilman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/EthanHeilman/subscriptions",
      "organizations_url": "https://api.github.com/users/EthanHeilman/orgs",
      "repos_url": "https://api.github.com/users/EthanHeilman/repos",
      "events_url": "https://api.github.com/users/EthanHeilman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/EthanHeilman/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "fixed.\n",
    "created_at": "2016-01-04T20:36:20Z",
    "updated_at": "2016-01-04T20:36:20Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7291#discussion_r48777881",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7291",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/48777881"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/7291#discussion_r48777881"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7291"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/48777881/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 63,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/48835764",
    "pull_request_review_id": null,
    "id": 48835764,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODM1NzY0",
    "diff_hunk": "@@ -45,6 +45,30 @@ BOOST_AUTO_TEST_CASE(netbase_properties)\n     BOOST_CHECK(CNetAddr(\"8.8.8.8\").IsRoutable());\n     BOOST_CHECK(CNetAddr(\"2001::1\").IsRoutable());\n     BOOST_CHECK(CNetAddr(\"127.0.0.1\").IsValid());\n+    BOOST_CHECK(CNetAddr(\"1.1.1\").ToString() == \"1.1.0.1\");\n+    BOOST_CHECK(CNetAddr(\"1.1\").ToString() == \"1.0.0.1\");\n+    BOOST_CHECK(CNetAddr(\"1111\").ToString() == \"0.0.4.87\");\n+    BOOST_CHECK(CNetAddr(\"1111111111\").ToString() == \"66.58.53.199\");\n+\n+    // CNetAddr does not support ports making it dangerous to treat like CService\n+    BOOST_CHECK(CNetAddr(\"250.2.2.2:7777\").ToString() != CNetAddr(\"250.2.2.2\", 7777).ToString());\n+    BOOST_CHECK(CNetAddr(\"250.2.2.2:7777\").ToString() == \"::\");",
    "path": "src/test/netbase_tests.cpp",
    "position": 11,
    "original_position": 11,
    "commit_id": "9bafdbcbcf35c70d3171592368cd6f862e6d9de0",
    "original_commit_id": "9bafdbcbcf35c70d3171592368cd6f862e6d9de0",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Is this really behavior that we want to write into tests?\n\nI'd prefer adding an 'IsInvalid' status to CNetAddr and signal that (akin to CService) if unparseable nonsense is being fed into the constructor, instead of randomly resolving to the IPv6 localhost \"::\".\n\nEdit: there is an IsValid on CNetAddr. This would need to return `false` in these cases, instead of valid nonsense.\n",
    "created_at": "2016-01-05T11:28:01Z",
    "updated_at": "2016-01-05T11:30:44Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7291#discussion_r48835764",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7291",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/48835764"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/7291#discussion_r48835764"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7291"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/48835764/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 55,
    "original_line": 55,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/48836172",
    "pull_request_review_id": null,
    "id": 48836172,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODM2MTcy",
    "diff_hunk": "@@ -45,6 +45,30 @@ BOOST_AUTO_TEST_CASE(netbase_properties)\n     BOOST_CHECK(CNetAddr(\"8.8.8.8\").IsRoutable());\n     BOOST_CHECK(CNetAddr(\"2001::1\").IsRoutable());\n     BOOST_CHECK(CNetAddr(\"127.0.0.1\").IsValid());\n+    BOOST_CHECK(CNetAddr(\"1.1.1\").ToString() == \"1.1.0.1\");",
    "path": "src/test/netbase_tests.cpp",
    "position": 4,
    "original_position": 4,
    "commit_id": "9bafdbcbcf35c70d3171592368cd6f862e6d9de0",
    "original_commit_id": "9bafdbcbcf35c70d3171592368cd6f862e6d9de0",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Also here: I don't think this is behavior that should be set into stone.\nIMO, parsing should be more strict and providing a partial IPv4 address should simply fail (return !IsValid()).\n",
    "created_at": "2016-01-05T11:33:47Z",
    "updated_at": "2016-01-05T11:33:47Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7291#discussion_r48836172",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7291",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/48836172"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/7291#discussion_r48836172"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7291"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/48836172/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 48,
    "original_line": 48,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/48866226",
    "pull_request_review_id": null,
    "id": 48866226,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODY2MjI2",
    "diff_hunk": "@@ -45,6 +45,30 @@ BOOST_AUTO_TEST_CASE(netbase_properties)\n     BOOST_CHECK(CNetAddr(\"8.8.8.8\").IsRoutable());\n     BOOST_CHECK(CNetAddr(\"2001::1\").IsRoutable());\n     BOOST_CHECK(CNetAddr(\"127.0.0.1\").IsValid());\n+    BOOST_CHECK(CNetAddr(\"1.1.1\").ToString() == \"1.1.0.1\");\n+    BOOST_CHECK(CNetAddr(\"1.1\").ToString() == \"1.0.0.1\");\n+    BOOST_CHECK(CNetAddr(\"1111\").ToString() == \"0.0.4.87\");\n+    BOOST_CHECK(CNetAddr(\"1111111111\").ToString() == \"66.58.53.199\");\n+\n+    // CNetAddr does not support ports making it dangerous to treat like CService\n+    BOOST_CHECK(CNetAddr(\"250.2.2.2:7777\").ToString() != CNetAddr(\"250.2.2.2\", 7777).ToString());\n+    BOOST_CHECK(CNetAddr(\"250.2.2.2:7777\").ToString() == \"::\");",
    "path": "src/test/netbase_tests.cpp",
    "position": 11,
    "original_position": 11,
    "commit_id": "9bafdbcbcf35c70d3171592368cd6f862e6d9de0",
    "original_commit_id": "9bafdbcbcf35c70d3171592368cd6f862e6d9de0",
    "user": {
      "login": "EthanHeilman",
      "id": 274814,
      "node_id": "MDQ6VXNlcjI3NDgxNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/274814?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/EthanHeilman",
      "html_url": "https://github.com/EthanHeilman",
      "followers_url": "https://api.github.com/users/EthanHeilman/followers",
      "following_url": "https://api.github.com/users/EthanHeilman/following{/other_user}",
      "gists_url": "https://api.github.com/users/EthanHeilman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/EthanHeilman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/EthanHeilman/subscriptions",
      "organizations_url": "https://api.github.com/users/EthanHeilman/orgs",
      "repos_url": "https://api.github.com/users/EthanHeilman/repos",
      "events_url": "https://api.github.com/users/EthanHeilman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/EthanHeilman/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I don't think it should be set in stone and in fact I want to change it, but my view is that having the tests confirm the behavior prior to making the change is valuable. If such a view is not-consistent with the Bitcoin testing philosophy I'm happy to remove these values.\n\nThere is an additional reason for these tests beyond just documenting undesirable behavior. Bitcoin uses different IP address parsing libraries for different platforms such as linux and windows. We want to avoid a case in which a change to one library results in differing results between platforms (maybe 1111 -> 1.1.0.1 or 1.0.1.1). These tests ensure that, at least for some of these strange values, we would catch such behavior.\n\n> Edit: there is an IsValid on CNetAddr. This would need to return false in these cases, instead of valid nonsense.\n\nI agree and that is a good point. If you don't mind I might take a look at fixing this behavior over the weekend.\n",
    "created_at": "2016-01-05T16:48:42Z",
    "updated_at": "2016-01-05T16:49:16Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7291#discussion_r48866226",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7291",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/48866226"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/7291#discussion_r48866226"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7291"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/48866226/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 55,
    "original_line": 55,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/48874369",
    "pull_request_review_id": null,
    "id": 48874369,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODc0MzY5",
    "diff_hunk": "@@ -45,6 +45,30 @@ BOOST_AUTO_TEST_CASE(netbase_properties)\n     BOOST_CHECK(CNetAddr(\"8.8.8.8\").IsRoutable());\n     BOOST_CHECK(CNetAddr(\"2001::1\").IsRoutable());\n     BOOST_CHECK(CNetAddr(\"127.0.0.1\").IsValid());\n+    BOOST_CHECK(CNetAddr(\"1.1.1\").ToString() == \"1.1.0.1\");",
    "path": "src/test/netbase_tests.cpp",
    "position": 4,
    "original_position": 4,
    "commit_id": "9bafdbcbcf35c70d3171592368cd6f862e6d9de0",
    "original_commit_id": "9bafdbcbcf35c70d3171592368cd6f862e6d9de0",
    "user": {
      "login": "EthanHeilman",
      "id": 274814,
      "node_id": "MDQ6VXNlcjI3NDgxNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/274814?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/EthanHeilman",
      "html_url": "https://github.com/EthanHeilman",
      "followers_url": "https://api.github.com/users/EthanHeilman/followers",
      "following_url": "https://api.github.com/users/EthanHeilman/following{/other_user}",
      "gists_url": "https://api.github.com/users/EthanHeilman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/EthanHeilman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/EthanHeilman/subscriptions",
      "organizations_url": "https://api.github.com/users/EthanHeilman/orgs",
      "repos_url": "https://api.github.com/users/EthanHeilman/repos",
      "events_url": "https://api.github.com/users/EthanHeilman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/EthanHeilman/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "> parsing should be more strict and providing a partial IPv4 address should simply fail (return !IsValid()).\n\nAgreed, I want to move on this slowly and carefully to ensure we don't introduce a crash via IP strings which work now but should fail. Should I open an issue for this?\n",
    "created_at": "2016-01-05T17:59:45Z",
    "updated_at": "2016-01-05T17:59:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7291#discussion_r48874369",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7291",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/48874369"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/7291#discussion_r48874369"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7291"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/48874369/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 48,
    "original_line": 48,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/48903175",
    "pull_request_review_id": null,
    "id": 48903175,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTAzMTc1",
    "diff_hunk": "@@ -45,6 +45,30 @@ BOOST_AUTO_TEST_CASE(netbase_properties)\n     BOOST_CHECK(CNetAddr(\"8.8.8.8\").IsRoutable());\n     BOOST_CHECK(CNetAddr(\"2001::1\").IsRoutable());\n     BOOST_CHECK(CNetAddr(\"127.0.0.1\").IsValid());\n+    BOOST_CHECK(CNetAddr(\"1.1.1\").ToString() == \"1.1.0.1\");\n+    BOOST_CHECK(CNetAddr(\"1.1\").ToString() == \"1.0.0.1\");\n+    BOOST_CHECK(CNetAddr(\"1111\").ToString() == \"0.0.4.87\");\n+    BOOST_CHECK(CNetAddr(\"1111111111\").ToString() == \"66.58.53.199\");\n+\n+    // CNetAddr does not support ports making it dangerous to treat like CService\n+    BOOST_CHECK(CNetAddr(\"250.2.2.2:7777\").ToString() != CNetAddr(\"250.2.2.2\", 7777).ToString());\n+    BOOST_CHECK(CNetAddr(\"250.2.2.2:7777\").ToString() == \"::\");\n+    BOOST_CHECK(CNetAddr(\"250.2.2.2\", 7777).ToString() == \"250.2.2.2\");\n+    BOOST_CHECK(CNetAddr(\"1.1.1.1:1\").ToString() == CNetAddr(\"2.2.2:1\").ToString());\n+    BOOST_CHECK(CNetAddr(\"1.1.1.1:1\").ToString() == \"::\");\n+    BOOST_CHECK(CNetAddr(\"2.2.2.2:2\").ToString() == \"::\");\n+    BOOST_CHECK(CNetAddr(\"2.2.2.2:2\").IsIPv6());\n+    BOOST_CHECK(CNetAddr(\"2.2.2.2:2\").IsIPv4() == false);\n+\n+    // Comparing with CNetAddr constructor with CService constructor\n+    BOOST_CHECK(CNetAddr(\"250.2.2.2\").ToString() == CNetAddr(\"250.2.2.2\", 7777).ToString());\n+    BOOST_CHECK(CNetAddr(\"250.2.2.2:7777\").ToString() != CService(\"250.2.2.2:7777\").ToString());\n+    BOOST_CHECK(CService(\"250.2.2.2:7777\").ToString() == CService(\"250.2.2.2\",7777).ToString());\n+\n+    BOOST_CHECK(CNetAddr(\"250.2.2.2:8333\").IsIPv6());\n+    BOOST_CHECK(CService(\"250.2.2.2:8333\").IsIPv4());",
    "path": "src/test/netbase_tests.cpp",
    "position": 25,
    "original_position": 25,
    "commit_id": "9bafdbcbcf35c70d3171592368cd6f862e6d9de0",
    "original_commit_id": "9bafdbcbcf35c70d3171592368cd6f862e6d9de0",
    "user": {
      "login": "dcousens",
      "id": 413395,
      "node_id": "MDQ6VXNlcjQxMzM5NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/413395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dcousens",
      "html_url": "https://github.com/dcousens",
      "followers_url": "https://api.github.com/users/dcousens/followers",
      "following_url": "https://api.github.com/users/dcousens/following{/other_user}",
      "gists_url": "https://api.github.com/users/dcousens/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dcousens/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dcousens/subscriptions",
      "organizations_url": "https://api.github.com/users/dcousens/orgs",
      "repos_url": "https://api.github.com/users/dcousens/repos",
      "events_url": "https://api.github.com/users/dcousens/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dcousens/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Were these meant to be different? (`IsIPv6` vs `IsIPv4`)\n",
    "created_at": "2016-01-05T22:08:39Z",
    "updated_at": "2016-01-05T22:08:39Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7291#discussion_r48903175",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7291",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/48903175"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/7291#discussion_r48903175"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7291"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/48903175/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 69,
    "original_line": 69,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/48905679",
    "pull_request_review_id": null,
    "id": 48905679,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTA1Njc5",
    "diff_hunk": "@@ -45,6 +45,30 @@ BOOST_AUTO_TEST_CASE(netbase_properties)\n     BOOST_CHECK(CNetAddr(\"8.8.8.8\").IsRoutable());\n     BOOST_CHECK(CNetAddr(\"2001::1\").IsRoutable());\n     BOOST_CHECK(CNetAddr(\"127.0.0.1\").IsValid());\n+    BOOST_CHECK(CNetAddr(\"1.1.1\").ToString() == \"1.1.0.1\");\n+    BOOST_CHECK(CNetAddr(\"1.1\").ToString() == \"1.0.0.1\");\n+    BOOST_CHECK(CNetAddr(\"1111\").ToString() == \"0.0.4.87\");\n+    BOOST_CHECK(CNetAddr(\"1111111111\").ToString() == \"66.58.53.199\");\n+\n+    // CNetAddr does not support ports making it dangerous to treat like CService\n+    BOOST_CHECK(CNetAddr(\"250.2.2.2:7777\").ToString() != CNetAddr(\"250.2.2.2\", 7777).ToString());\n+    BOOST_CHECK(CNetAddr(\"250.2.2.2:7777\").ToString() == \"::\");\n+    BOOST_CHECK(CNetAddr(\"250.2.2.2\", 7777).ToString() == \"250.2.2.2\");\n+    BOOST_CHECK(CNetAddr(\"1.1.1.1:1\").ToString() == CNetAddr(\"2.2.2:1\").ToString());\n+    BOOST_CHECK(CNetAddr(\"1.1.1.1:1\").ToString() == \"::\");\n+    BOOST_CHECK(CNetAddr(\"2.2.2.2:2\").ToString() == \"::\");\n+    BOOST_CHECK(CNetAddr(\"2.2.2.2:2\").IsIPv6());\n+    BOOST_CHECK(CNetAddr(\"2.2.2.2:2\").IsIPv4() == false);\n+\n+    // Comparing with CNetAddr constructor with CService constructor\n+    BOOST_CHECK(CNetAddr(\"250.2.2.2\").ToString() == CNetAddr(\"250.2.2.2\", 7777).ToString());\n+    BOOST_CHECK(CNetAddr(\"250.2.2.2:7777\").ToString() != CService(\"250.2.2.2:7777\").ToString());\n+    BOOST_CHECK(CService(\"250.2.2.2:7777\").ToString() == CService(\"250.2.2.2\",7777).ToString());\n+\n+    BOOST_CHECK(CNetAddr(\"250.2.2.2:8333\").IsIPv6());\n+    BOOST_CHECK(CService(\"250.2.2.2:8333\").IsIPv4());",
    "path": "src/test/netbase_tests.cpp",
    "position": 25,
    "original_position": 25,
    "commit_id": "9bafdbcbcf35c70d3171592368cd6f862e6d9de0",
    "original_commit_id": "9bafdbcbcf35c70d3171592368cd6f862e6d9de0",
    "user": {
      "login": "EthanHeilman",
      "id": 274814,
      "node_id": "MDQ6VXNlcjI3NDgxNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/274814?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/EthanHeilman",
      "html_url": "https://github.com/EthanHeilman",
      "followers_url": "https://api.github.com/users/EthanHeilman/followers",
      "following_url": "https://api.github.com/users/EthanHeilman/following{/other_user}",
      "gists_url": "https://api.github.com/users/EthanHeilman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/EthanHeilman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/EthanHeilman/subscriptions",
      "organizations_url": "https://api.github.com/users/EthanHeilman/orgs",
      "repos_url": "https://api.github.com/users/EthanHeilman/repos",
      "events_url": "https://api.github.com/users/EthanHeilman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/EthanHeilman/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yes. The point of this test that while the constructor strings are identical one creates a IPv4 address and one creates a IPv6 address. This tripped me up and I wanted to document the functionality as this was being discussed in another pull request: https://github.com/bitcoin/bitcoin/pull/7212\n",
    "created_at": "2016-01-05T22:31:09Z",
    "updated_at": "2016-01-05T22:31:09Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7291#discussion_r48905679",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7291",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/48905679"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/7291#discussion_r48905679"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7291"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/48905679/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 69,
    "original_line": 69,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/48906893",
    "pull_request_review_id": null,
    "id": 48906893,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTA2ODkz",
    "diff_hunk": "@@ -45,6 +45,30 @@ BOOST_AUTO_TEST_CASE(netbase_properties)\n     BOOST_CHECK(CNetAddr(\"8.8.8.8\").IsRoutable());\n     BOOST_CHECK(CNetAddr(\"2001::1\").IsRoutable());\n     BOOST_CHECK(CNetAddr(\"127.0.0.1\").IsValid());\n+    BOOST_CHECK(CNetAddr(\"1.1.1\").ToString() == \"1.1.0.1\");\n+    BOOST_CHECK(CNetAddr(\"1.1\").ToString() == \"1.0.0.1\");\n+    BOOST_CHECK(CNetAddr(\"1111\").ToString() == \"0.0.4.87\");\n+    BOOST_CHECK(CNetAddr(\"1111111111\").ToString() == \"66.58.53.199\");\n+\n+    // CNetAddr does not support ports making it dangerous to treat like CService\n+    BOOST_CHECK(CNetAddr(\"250.2.2.2:7777\").ToString() != CNetAddr(\"250.2.2.2\", 7777).ToString());\n+    BOOST_CHECK(CNetAddr(\"250.2.2.2:7777\").ToString() == \"::\");\n+    BOOST_CHECK(CNetAddr(\"250.2.2.2\", 7777).ToString() == \"250.2.2.2\");\n+    BOOST_CHECK(CNetAddr(\"1.1.1.1:1\").ToString() == CNetAddr(\"2.2.2:1\").ToString());\n+    BOOST_CHECK(CNetAddr(\"1.1.1.1:1\").ToString() == \"::\");\n+    BOOST_CHECK(CNetAddr(\"2.2.2.2:2\").ToString() == \"::\");\n+    BOOST_CHECK(CNetAddr(\"2.2.2.2:2\").IsIPv6());\n+    BOOST_CHECK(CNetAddr(\"2.2.2.2:2\").IsIPv4() == false);\n+\n+    // Comparing with CNetAddr constructor with CService constructor\n+    BOOST_CHECK(CNetAddr(\"250.2.2.2\").ToString() == CNetAddr(\"250.2.2.2\", 7777).ToString());\n+    BOOST_CHECK(CNetAddr(\"250.2.2.2:7777\").ToString() != CService(\"250.2.2.2:7777\").ToString());\n+    BOOST_CHECK(CService(\"250.2.2.2:7777\").ToString() == CService(\"250.2.2.2\",7777).ToString());\n+\n+    BOOST_CHECK(CNetAddr(\"250.2.2.2:8333\").IsIPv6());\n+    BOOST_CHECK(CService(\"250.2.2.2:8333\").IsIPv4());",
    "path": "src/test/netbase_tests.cpp",
    "position": 25,
    "original_position": 25,
    "commit_id": "9bafdbcbcf35c70d3171592368cd6f862e6d9de0",
    "original_commit_id": "9bafdbcbcf35c70d3171592368cd6f862e6d9de0",
    "user": {
      "login": "dcousens",
      "id": 413395,
      "node_id": "MDQ6VXNlcjQxMzM5NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/413395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dcousens",
      "html_url": "https://github.com/dcousens",
      "followers_url": "https://api.github.com/users/dcousens/followers",
      "following_url": "https://api.github.com/users/dcousens/following{/other_user}",
      "gists_url": "https://api.github.com/users/dcousens/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dcousens/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dcousens/subscriptions",
      "organizations_url": "https://api.github.com/users/dcousens/orgs",
      "repos_url": "https://api.github.com/users/dcousens/repos",
      "events_url": "https://api.github.com/users/dcousens/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dcousens/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": ":+1: \n",
    "created_at": "2016-01-05T22:42:41Z",
    "updated_at": "2016-01-05T22:42:41Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7291#discussion_r48906893",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7291",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/48906893"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/7291#discussion_r48906893"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7291"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/48906893/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 69,
    "original_line": 69,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/49014417",
    "pull_request_review_id": null,
    "id": 49014417,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDE0NDE3",
    "diff_hunk": "@@ -45,6 +45,30 @@ BOOST_AUTO_TEST_CASE(netbase_properties)\n     BOOST_CHECK(CNetAddr(\"8.8.8.8\").IsRoutable());\n     BOOST_CHECK(CNetAddr(\"2001::1\").IsRoutable());\n     BOOST_CHECK(CNetAddr(\"127.0.0.1\").IsValid());\n+    BOOST_CHECK(CNetAddr(\"1.1.1\").ToString() == \"1.1.0.1\");\n+    BOOST_CHECK(CNetAddr(\"1.1\").ToString() == \"1.0.0.1\");\n+    BOOST_CHECK(CNetAddr(\"1111\").ToString() == \"0.0.4.87\");\n+    BOOST_CHECK(CNetAddr(\"1111111111\").ToString() == \"66.58.53.199\");\n+\n+    // CNetAddr does not support ports making it dangerous to treat like CService\n+    BOOST_CHECK(CNetAddr(\"250.2.2.2:7777\").ToString() != CNetAddr(\"250.2.2.2\", 7777).ToString());\n+    BOOST_CHECK(CNetAddr(\"250.2.2.2:7777\").ToString() == \"::\");\n+    BOOST_CHECK(CNetAddr(\"250.2.2.2\", 7777).ToString() == \"250.2.2.2\");\n+    BOOST_CHECK(CNetAddr(\"1.1.1.1:1\").ToString() == CNetAddr(\"2.2.2:1\").ToString());\n+    BOOST_CHECK(CNetAddr(\"1.1.1.1:1\").ToString() == \"::\");\n+    BOOST_CHECK(CNetAddr(\"2.2.2.2:2\").ToString() == \"::\");\n+    BOOST_CHECK(CNetAddr(\"2.2.2.2:2\").IsIPv6());\n+    BOOST_CHECK(CNetAddr(\"2.2.2.2:2\").IsIPv4() == false);\n+\n+    // Comparing with CNetAddr constructor with CService constructor\n+    BOOST_CHECK(CNetAddr(\"250.2.2.2\").ToString() == CNetAddr(\"250.2.2.2\", 7777).ToString());\n+    BOOST_CHECK(CNetAddr(\"250.2.2.2:7777\").ToString() != CService(\"250.2.2.2:7777\").ToString());\n+    BOOST_CHECK(CService(\"250.2.2.2:7777\").ToString() == CService(\"250.2.2.2\",7777).ToString());\n+\n+    BOOST_CHECK(CNetAddr(\"250.2.2.2:8333\").IsIPv6());\n+    BOOST_CHECK(CService(\"250.2.2.2:8333\").IsIPv4());",
    "path": "src/test/netbase_tests.cpp",
    "position": 25,
    "original_position": 25,
    "commit_id": "9bafdbcbcf35c70d3171592368cd6f862e6d9de0",
    "original_commit_id": "9bafdbcbcf35c70d3171592368cd6f862e6d9de0",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "@EthanHeilman The question is if someone expects `CNetAddr` to construct a IPv6 here. If this is just a fallback-behavior, I'd rather not `BOOST_CHECK` that.\n\nMaybe you could comment those out for now. (The IPv4 stuff looks ok to go into the tests)\n",
    "created_at": "2016-01-06T21:48:54Z",
    "updated_at": "2016-01-06T21:52:21Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7291#discussion_r49014417",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7291",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/49014417"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/7291#discussion_r49014417"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7291"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/49014417/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 69,
    "original_line": 69,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/49015765",
    "pull_request_review_id": null,
    "id": 49015765,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDE1NzY1",
    "diff_hunk": "@@ -45,6 +45,30 @@ BOOST_AUTO_TEST_CASE(netbase_properties)\n     BOOST_CHECK(CNetAddr(\"8.8.8.8\").IsRoutable());\n     BOOST_CHECK(CNetAddr(\"2001::1\").IsRoutable());\n     BOOST_CHECK(CNetAddr(\"127.0.0.1\").IsValid());\n+    BOOST_CHECK(CNetAddr(\"1.1.1\").ToString() == \"1.1.0.1\");\n+    BOOST_CHECK(CNetAddr(\"1.1\").ToString() == \"1.0.0.1\");\n+    BOOST_CHECK(CNetAddr(\"1111\").ToString() == \"0.0.4.87\");\n+    BOOST_CHECK(CNetAddr(\"1111111111\").ToString() == \"66.58.53.199\");\n+\n+    // CNetAddr does not support ports making it dangerous to treat like CService\n+    BOOST_CHECK(CNetAddr(\"250.2.2.2:7777\").ToString() != CNetAddr(\"250.2.2.2\", 7777).ToString());\n+    BOOST_CHECK(CNetAddr(\"250.2.2.2:7777\").ToString() == \"::\");\n+    BOOST_CHECK(CNetAddr(\"250.2.2.2\", 7777).ToString() == \"250.2.2.2\");\n+    BOOST_CHECK(CNetAddr(\"1.1.1.1:1\").ToString() == CNetAddr(\"2.2.2:1\").ToString());\n+    BOOST_CHECK(CNetAddr(\"1.1.1.1:1\").ToString() == \"::\");\n+    BOOST_CHECK(CNetAddr(\"2.2.2.2:2\").ToString() == \"::\");\n+    BOOST_CHECK(CNetAddr(\"2.2.2.2:2\").IsIPv6());\n+    BOOST_CHECK(CNetAddr(\"2.2.2.2:2\").IsIPv4() == false);\n+\n+    // Comparing with CNetAddr constructor with CService constructor\n+    BOOST_CHECK(CNetAddr(\"250.2.2.2\").ToString() == CNetAddr(\"250.2.2.2\", 7777).ToString());\n+    BOOST_CHECK(CNetAddr(\"250.2.2.2:7777\").ToString() != CService(\"250.2.2.2:7777\").ToString());\n+    BOOST_CHECK(CService(\"250.2.2.2:7777\").ToString() == CService(\"250.2.2.2\",7777).ToString());\n+\n+    BOOST_CHECK(CNetAddr(\"250.2.2.2:8333\").IsIPv6());\n+    BOOST_CHECK(CService(\"250.2.2.2:8333\").IsIPv4());",
    "path": "src/test/netbase_tests.cpp",
    "position": 25,
    "original_position": 25,
    "commit_id": "9bafdbcbcf35c70d3171592368cd6f862e6d9de0",
    "original_commit_id": "9bafdbcbcf35c70d3171592368cd6f862e6d9de0",
    "user": {
      "login": "dcousens",
      "id": 413395,
      "node_id": "MDQ6VXNlcjQxMzM5NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/413395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dcousens",
      "html_url": "https://github.com/dcousens",
      "followers_url": "https://api.github.com/users/dcousens/followers",
      "following_url": "https://api.github.com/users/dcousens/following{/other_user}",
      "gists_url": "https://api.github.com/users/dcousens/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dcousens/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dcousens/subscriptions",
      "organizations_url": "https://api.github.com/users/dcousens/orgs",
      "repos_url": "https://api.github.com/users/dcousens/repos",
      "events_url": "https://api.github.com/users/dcousens/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dcousens/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "@MarcoFalke I see no reason why wouldn't want to test as much behaviour as possible.\nIf you intend to make any changes, it becomes explicit what is broken and you can just amend the tests or the implementation code, depending on what assumptions changed.\n",
    "created_at": "2016-01-06T22:00:25Z",
    "updated_at": "2016-01-06T22:00:43Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7291#discussion_r49015765",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7291",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/49015765"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/7291#discussion_r49015765"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7291"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/49015765/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 69,
    "original_line": 69,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/49050996",
    "pull_request_review_id": null,
    "id": 49050996,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDUwOTk2",
    "diff_hunk": "@@ -45,6 +45,30 @@ BOOST_AUTO_TEST_CASE(netbase_properties)\n     BOOST_CHECK(CNetAddr(\"8.8.8.8\").IsRoutable());\n     BOOST_CHECK(CNetAddr(\"2001::1\").IsRoutable());\n     BOOST_CHECK(CNetAddr(\"127.0.0.1\").IsValid());\n+    BOOST_CHECK(CNetAddr(\"1.1.1\").ToString() == \"1.1.0.1\");\n+    BOOST_CHECK(CNetAddr(\"1.1\").ToString() == \"1.0.0.1\");\n+    BOOST_CHECK(CNetAddr(\"1111\").ToString() == \"0.0.4.87\");\n+    BOOST_CHECK(CNetAddr(\"1111111111\").ToString() == \"66.58.53.199\");\n+\n+    // CNetAddr does not support ports making it dangerous to treat like CService\n+    BOOST_CHECK(CNetAddr(\"250.2.2.2:7777\").ToString() != CNetAddr(\"250.2.2.2\", 7777).ToString());\n+    BOOST_CHECK(CNetAddr(\"250.2.2.2:7777\").ToString() == \"::\");",
    "path": "src/test/netbase_tests.cpp",
    "position": 11,
    "original_position": 11,
    "commit_id": "9bafdbcbcf35c70d3171592368cd6f862e6d9de0",
    "original_commit_id": "9bafdbcbcf35c70d3171592368cd6f862e6d9de0",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Right. There's something to be said for that, but IMO tests are there to test desired behavior, not just lock in wrong behavior that happens to be the case but has been missed over all this time.\n\nSo IMO the right way to progress would be to make tests that check the behavior that we want; e.g. \n\n```\nBOOST_CHECK(!CNetAddr(\"1.1.1\").IsValid());\n```\n\nThen adapt the implementation to pass these tests.\n\n> Bitcoin uses different IP address parsing libraries for different platforms such as linux and windows.\n\nSure. Though I think verifying that windows and linux have the same weird, broken-ish behavior is a mixed blessing. \nLuckily we never pass these strings over the P2P network, only binary address blobs, so this is mostly an UI issue.\n",
    "created_at": "2016-01-07T08:37:10Z",
    "updated_at": "2016-01-07T08:40:22Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7291#discussion_r49050996",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7291",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/49050996"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/7291#discussion_r49050996"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7291"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/49050996/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 55,
    "original_line": 55,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/49063891",
    "pull_request_review_id": null,
    "id": 49063891,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDYzODkx",
    "diff_hunk": "@@ -45,6 +45,30 @@ BOOST_AUTO_TEST_CASE(netbase_properties)\n     BOOST_CHECK(CNetAddr(\"8.8.8.8\").IsRoutable());\n     BOOST_CHECK(CNetAddr(\"2001::1\").IsRoutable());\n     BOOST_CHECK(CNetAddr(\"127.0.0.1\").IsValid());\n+    BOOST_CHECK(CNetAddr(\"1.1.1\").ToString() == \"1.1.0.1\");\n+    BOOST_CHECK(CNetAddr(\"1.1\").ToString() == \"1.0.0.1\");\n+    BOOST_CHECK(CNetAddr(\"1111\").ToString() == \"0.0.4.87\");\n+    BOOST_CHECK(CNetAddr(\"1111111111\").ToString() == \"66.58.53.199\");\n+\n+    // CNetAddr does not support ports making it dangerous to treat like CService\n+    BOOST_CHECK(CNetAddr(\"250.2.2.2:7777\").ToString() != CNetAddr(\"250.2.2.2\", 7777).ToString());\n+    BOOST_CHECK(CNetAddr(\"250.2.2.2:7777\").ToString() == \"::\");\n+    BOOST_CHECK(CNetAddr(\"250.2.2.2\", 7777).ToString() == \"250.2.2.2\");\n+    BOOST_CHECK(CNetAddr(\"1.1.1.1:1\").ToString() == CNetAddr(\"2.2.2:1\").ToString());\n+    BOOST_CHECK(CNetAddr(\"1.1.1.1:1\").ToString() == \"::\");\n+    BOOST_CHECK(CNetAddr(\"2.2.2.2:2\").ToString() == \"::\");\n+    BOOST_CHECK(CNetAddr(\"2.2.2.2:2\").IsIPv6());\n+    BOOST_CHECK(CNetAddr(\"2.2.2.2:2\").IsIPv4() == false);\n+\n+    // Comparing with CNetAddr constructor with CService constructor\n+    BOOST_CHECK(CNetAddr(\"250.2.2.2\").ToString() == CNetAddr(\"250.2.2.2\", 7777).ToString());\n+    BOOST_CHECK(CNetAddr(\"250.2.2.2:7777\").ToString() != CService(\"250.2.2.2:7777\").ToString());\n+    BOOST_CHECK(CService(\"250.2.2.2:7777\").ToString() == CService(\"250.2.2.2\",7777).ToString());\n+\n+    BOOST_CHECK(CNetAddr(\"250.2.2.2:8333\").IsIPv6());\n+    BOOST_CHECK(CService(\"250.2.2.2:8333\").IsIPv4());",
    "path": "src/test/netbase_tests.cpp",
    "position": 25,
    "original_position": 25,
    "commit_id": "9bafdbcbcf35c70d3171592368cd6f862e6d9de0",
    "original_commit_id": "9bafdbcbcf35c70d3171592368cd6f862e6d9de0",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "@dcousens In case the behaviour is unwanted, we shouldn't test it. (Tests are worthless if their only goal is to pass and return true. I can remember three cases in the last 4 months where such `return true;` tests caused us quite some hassle.)\n",
    "created_at": "2016-01-07T11:20:42Z",
    "updated_at": "2016-01-07T11:20:42Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7291#discussion_r49063891",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7291",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/49063891"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/7291#discussion_r49063891"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7291"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/49063891/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 69,
    "original_line": 69,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/49074161",
    "pull_request_review_id": null,
    "id": 49074161,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDc0MTYx",
    "diff_hunk": "@@ -45,6 +45,30 @@ BOOST_AUTO_TEST_CASE(netbase_properties)\n     BOOST_CHECK(CNetAddr(\"8.8.8.8\").IsRoutable());\n     BOOST_CHECK(CNetAddr(\"2001::1\").IsRoutable());\n     BOOST_CHECK(CNetAddr(\"127.0.0.1\").IsValid());\n+    BOOST_CHECK(CNetAddr(\"1.1.1\").ToString() == \"1.1.0.1\");\n+    BOOST_CHECK(CNetAddr(\"1.1\").ToString() == \"1.0.0.1\");\n+    BOOST_CHECK(CNetAddr(\"1111\").ToString() == \"0.0.4.87\");\n+    BOOST_CHECK(CNetAddr(\"1111111111\").ToString() == \"66.58.53.199\");\n+\n+    // CNetAddr does not support ports making it dangerous to treat like CService\n+    BOOST_CHECK(CNetAddr(\"250.2.2.2:7777\").ToString() != CNetAddr(\"250.2.2.2\", 7777).ToString());\n+    BOOST_CHECK(CNetAddr(\"250.2.2.2:7777\").ToString() == \"::\");\n+    BOOST_CHECK(CNetAddr(\"250.2.2.2\", 7777).ToString() == \"250.2.2.2\");\n+    BOOST_CHECK(CNetAddr(\"1.1.1.1:1\").ToString() == CNetAddr(\"2.2.2:1\").ToString());\n+    BOOST_CHECK(CNetAddr(\"1.1.1.1:1\").ToString() == \"::\");\n+    BOOST_CHECK(CNetAddr(\"2.2.2.2:2\").ToString() == \"::\");\n+    BOOST_CHECK(CNetAddr(\"2.2.2.2:2\").IsIPv6());\n+    BOOST_CHECK(CNetAddr(\"2.2.2.2:2\").IsIPv4() == false);\n+\n+    // Comparing with CNetAddr constructor with CService constructor\n+    BOOST_CHECK(CNetAddr(\"250.2.2.2\").ToString() == CNetAddr(\"250.2.2.2\", 7777).ToString());\n+    BOOST_CHECK(CNetAddr(\"250.2.2.2:7777\").ToString() != CService(\"250.2.2.2:7777\").ToString());\n+    BOOST_CHECK(CService(\"250.2.2.2:7777\").ToString() == CService(\"250.2.2.2\",7777).ToString());\n+\n+    BOOST_CHECK(CNetAddr(\"250.2.2.2:8333\").IsIPv6());\n+    BOOST_CHECK(CService(\"250.2.2.2:8333\").IsIPv4());",
    "path": "src/test/netbase_tests.cpp",
    "position": 25,
    "original_position": 25,
    "commit_id": "9bafdbcbcf35c70d3171592368cd6f862e6d9de0",
    "original_commit_id": "9bafdbcbcf35c70d3171592368cd6f862e6d9de0",
    "user": {
      "login": "dcousens",
      "id": 413395,
      "node_id": "MDQ6VXNlcjQxMzM5NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/413395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dcousens",
      "html_url": "https://github.com/dcousens",
      "followers_url": "https://api.github.com/users/dcousens/followers",
      "following_url": "https://api.github.com/users/dcousens/following{/other_user}",
      "gists_url": "https://api.github.com/users/dcousens/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dcousens/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dcousens/subscriptions",
      "organizations_url": "https://api.github.com/users/dcousens/orgs",
      "repos_url": "https://api.github.com/users/dcousens/repos",
      "events_url": "https://api.github.com/users/dcousens/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dcousens/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "If the existing behaviour is **not** desired, then the tests should be changed to the desired behaviour and the implementation fail until that is rectified.\nIMHO it is better to define the behaviour (even if it is undesired) than just leave it up in the air.\n\nYMMV though,  and its a bit of a bike shed.\n",
    "created_at": "2016-01-07T13:51:30Z",
    "updated_at": "2016-01-07T13:52:53Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7291#discussion_r49074161",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7291",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/49074161"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/7291#discussion_r49074161"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7291"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/49074161/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 69,
    "original_line": 69,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/49264103",
    "pull_request_review_id": null,
    "id": 49264103,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjY0MTAz",
    "diff_hunk": "@@ -45,6 +45,30 @@ BOOST_AUTO_TEST_CASE(netbase_properties)\n     BOOST_CHECK(CNetAddr(\"8.8.8.8\").IsRoutable());\n     BOOST_CHECK(CNetAddr(\"2001::1\").IsRoutable());\n     BOOST_CHECK(CNetAddr(\"127.0.0.1\").IsValid());\n+    BOOST_CHECK(CNetAddr(\"1.1.1\").ToString() == \"1.1.0.1\");\n+    BOOST_CHECK(CNetAddr(\"1.1\").ToString() == \"1.0.0.1\");\n+    BOOST_CHECK(CNetAddr(\"1111\").ToString() == \"0.0.4.87\");\n+    BOOST_CHECK(CNetAddr(\"1111111111\").ToString() == \"66.58.53.199\");\n+\n+    // CNetAddr does not support ports making it dangerous to treat like CService\n+    BOOST_CHECK(CNetAddr(\"250.2.2.2:7777\").ToString() != CNetAddr(\"250.2.2.2\", 7777).ToString());\n+    BOOST_CHECK(CNetAddr(\"250.2.2.2:7777\").ToString() == \"::\");\n+    BOOST_CHECK(CNetAddr(\"250.2.2.2\", 7777).ToString() == \"250.2.2.2\");\n+    BOOST_CHECK(CNetAddr(\"1.1.1.1:1\").ToString() == CNetAddr(\"2.2.2:1\").ToString());\n+    BOOST_CHECK(CNetAddr(\"1.1.1.1:1\").ToString() == \"::\");\n+    BOOST_CHECK(CNetAddr(\"2.2.2.2:2\").ToString() == \"::\");\n+    BOOST_CHECK(CNetAddr(\"2.2.2.2:2\").IsIPv6());\n+    BOOST_CHECK(CNetAddr(\"2.2.2.2:2\").IsIPv4() == false);\n+\n+    // Comparing with CNetAddr constructor with CService constructor\n+    BOOST_CHECK(CNetAddr(\"250.2.2.2\").ToString() == CNetAddr(\"250.2.2.2\", 7777).ToString());\n+    BOOST_CHECK(CNetAddr(\"250.2.2.2:7777\").ToString() != CService(\"250.2.2.2:7777\").ToString());\n+    BOOST_CHECK(CService(\"250.2.2.2:7777\").ToString() == CService(\"250.2.2.2\",7777).ToString());\n+\n+    BOOST_CHECK(CNetAddr(\"250.2.2.2:8333\").IsIPv6());\n+    BOOST_CHECK(CService(\"250.2.2.2:8333\").IsIPv4());",
    "path": "src/test/netbase_tests.cpp",
    "position": 25,
    "original_position": 25,
    "commit_id": "9bafdbcbcf35c70d3171592368cd6f862e6d9de0",
    "original_commit_id": "9bafdbcbcf35c70d3171592368cd6f862e6d9de0",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I don't care too much but at least add a comment to describe why this is tested.\n",
    "created_at": "2016-01-09T13:32:27Z",
    "updated_at": "2016-01-09T13:32:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7291#discussion_r49264103",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7291",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/49264103"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/7291#discussion_r49264103"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7291"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/49264103/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 69,
    "original_line": 69,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/49265116",
    "pull_request_review_id": null,
    "id": 49265116,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjY1MTE2",
    "diff_hunk": "@@ -45,6 +45,30 @@ BOOST_AUTO_TEST_CASE(netbase_properties)\n     BOOST_CHECK(CNetAddr(\"8.8.8.8\").IsRoutable());\n     BOOST_CHECK(CNetAddr(\"2001::1\").IsRoutable());\n     BOOST_CHECK(CNetAddr(\"127.0.0.1\").IsValid());\n+    BOOST_CHECK(CNetAddr(\"1.1.1\").ToString() == \"1.1.0.1\");\n+    BOOST_CHECK(CNetAddr(\"1.1\").ToString() == \"1.0.0.1\");\n+    BOOST_CHECK(CNetAddr(\"1111\").ToString() == \"0.0.4.87\");\n+    BOOST_CHECK(CNetAddr(\"1111111111\").ToString() == \"66.58.53.199\");\n+\n+    // CNetAddr does not support ports making it dangerous to treat like CService\n+    BOOST_CHECK(CNetAddr(\"250.2.2.2:7777\").ToString() != CNetAddr(\"250.2.2.2\", 7777).ToString());\n+    BOOST_CHECK(CNetAddr(\"250.2.2.2:7777\").ToString() == \"::\");\n+    BOOST_CHECK(CNetAddr(\"250.2.2.2\", 7777).ToString() == \"250.2.2.2\");\n+    BOOST_CHECK(CNetAddr(\"1.1.1.1:1\").ToString() == CNetAddr(\"2.2.2:1\").ToString());\n+    BOOST_CHECK(CNetAddr(\"1.1.1.1:1\").ToString() == \"::\");\n+    BOOST_CHECK(CNetAddr(\"2.2.2.2:2\").ToString() == \"::\");\n+    BOOST_CHECK(CNetAddr(\"2.2.2.2:2\").IsIPv6());\n+    BOOST_CHECK(CNetAddr(\"2.2.2.2:2\").IsIPv4() == false);\n+\n+    // Comparing with CNetAddr constructor with CService constructor\n+    BOOST_CHECK(CNetAddr(\"250.2.2.2\").ToString() == CNetAddr(\"250.2.2.2\", 7777).ToString());\n+    BOOST_CHECK(CNetAddr(\"250.2.2.2:7777\").ToString() != CService(\"250.2.2.2:7777\").ToString());\n+    BOOST_CHECK(CService(\"250.2.2.2:7777\").ToString() == CService(\"250.2.2.2\",7777).ToString());\n+\n+    BOOST_CHECK(CNetAddr(\"250.2.2.2:8333\").IsIPv6());\n+    BOOST_CHECK(CService(\"250.2.2.2:8333\").IsIPv4());",
    "path": "src/test/netbase_tests.cpp",
    "position": 25,
    "original_position": 25,
    "commit_id": "9bafdbcbcf35c70d3171592368cd6f862e6d9de0",
    "original_commit_id": "9bafdbcbcf35c70d3171592368cd6f862e6d9de0",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "No, I don't think we should test unwanted behavior. This happens to be the case, but it's wrong and should be fixed. There have been users confused by this behavior before (at least @gmaxwell) which expected incomplete IP addresses to do something else and were baffled by this. Just failing them would be better.\n\nTests are not there to fix the code's behavior in stone, they are there to strategically or thoroughly test that the behavior is correct.\n",
    "created_at": "2016-01-09T15:52:42Z",
    "updated_at": "2016-01-09T15:52:42Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7291#discussion_r49265116",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7291",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/49265116"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/7291#discussion_r49265116"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7291"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/49265116/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 69,
    "original_line": 69,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/49270997",
    "pull_request_review_id": null,
    "id": 49270997,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjcwOTk3",
    "diff_hunk": "@@ -45,6 +45,30 @@ BOOST_AUTO_TEST_CASE(netbase_properties)\n     BOOST_CHECK(CNetAddr(\"8.8.8.8\").IsRoutable());\n     BOOST_CHECK(CNetAddr(\"2001::1\").IsRoutable());\n     BOOST_CHECK(CNetAddr(\"127.0.0.1\").IsValid());\n+    BOOST_CHECK(CNetAddr(\"1.1.1\").ToString() == \"1.1.0.1\");\n+    BOOST_CHECK(CNetAddr(\"1.1\").ToString() == \"1.0.0.1\");\n+    BOOST_CHECK(CNetAddr(\"1111\").ToString() == \"0.0.4.87\");\n+    BOOST_CHECK(CNetAddr(\"1111111111\").ToString() == \"66.58.53.199\");\n+\n+    // CNetAddr does not support ports making it dangerous to treat like CService\n+    BOOST_CHECK(CNetAddr(\"250.2.2.2:7777\").ToString() != CNetAddr(\"250.2.2.2\", 7777).ToString());\n+    BOOST_CHECK(CNetAddr(\"250.2.2.2:7777\").ToString() == \"::\");\n+    BOOST_CHECK(CNetAddr(\"250.2.2.2\", 7777).ToString() == \"250.2.2.2\");\n+    BOOST_CHECK(CNetAddr(\"1.1.1.1:1\").ToString() == CNetAddr(\"2.2.2:1\").ToString());\n+    BOOST_CHECK(CNetAddr(\"1.1.1.1:1\").ToString() == \"::\");\n+    BOOST_CHECK(CNetAddr(\"2.2.2.2:2\").ToString() == \"::\");\n+    BOOST_CHECK(CNetAddr(\"2.2.2.2:2\").IsIPv6());\n+    BOOST_CHECK(CNetAddr(\"2.2.2.2:2\").IsIPv4() == false);\n+\n+    // Comparing with CNetAddr constructor with CService constructor\n+    BOOST_CHECK(CNetAddr(\"250.2.2.2\").ToString() == CNetAddr(\"250.2.2.2\", 7777).ToString());\n+    BOOST_CHECK(CNetAddr(\"250.2.2.2:7777\").ToString() != CService(\"250.2.2.2:7777\").ToString());\n+    BOOST_CHECK(CService(\"250.2.2.2:7777\").ToString() == CService(\"250.2.2.2\",7777).ToString());\n+\n+    BOOST_CHECK(CNetAddr(\"250.2.2.2:8333\").IsIPv6());\n+    BOOST_CHECK(CService(\"250.2.2.2:8333\").IsIPv4());",
    "path": "src/test/netbase_tests.cpp",
    "position": 25,
    "original_position": 25,
    "commit_id": "9bafdbcbcf35c70d3171592368cd6f862e6d9de0",
    "original_commit_id": "9bafdbcbcf35c70d3171592368cd6f862e6d9de0",
    "user": {
      "login": "dcousens",
      "id": 413395,
      "node_id": "MDQ6VXNlcjQxMzM5NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/413395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dcousens",
      "html_url": "https://github.com/dcousens",
      "followers_url": "https://api.github.com/users/dcousens/followers",
      "following_url": "https://api.github.com/users/dcousens/following{/other_user}",
      "gists_url": "https://api.github.com/users/dcousens/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dcousens/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dcousens/subscriptions",
      "organizations_url": "https://api.github.com/users/dcousens/orgs",
      "repos_url": "https://api.github.com/users/dcousens/repos",
      "events_url": "https://api.github.com/users/dcousens/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dcousens/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "@laanwj sure,  so lets add tests to test the desired behaviour? [and subsequently fail until fixed]\n",
    "created_at": "2016-01-10T03:08:43Z",
    "updated_at": "2016-01-10T03:09:08Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7291#discussion_r49270997",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7291",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/49270997"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/7291#discussion_r49270997"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7291"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/49270997/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 69,
    "original_line": 69,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/50007997",
    "pull_request_review_id": null,
    "id": 50007997,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDA3OTk3",
    "diff_hunk": "@@ -45,6 +45,30 @@ BOOST_AUTO_TEST_CASE(netbase_properties)\n     BOOST_CHECK(CNetAddr(\"8.8.8.8\").IsRoutable());\n     BOOST_CHECK(CNetAddr(\"2001::1\").IsRoutable());\n     BOOST_CHECK(CNetAddr(\"127.0.0.1\").IsValid());\n+    BOOST_CHECK(CNetAddr(\"1.1.1\").ToString() == \"1.1.0.1\");\n+    BOOST_CHECK(CNetAddr(\"1.1\").ToString() == \"1.0.0.1\");\n+    BOOST_CHECK(CNetAddr(\"1111\").ToString() == \"0.0.4.87\");\n+    BOOST_CHECK(CNetAddr(\"1111111111\").ToString() == \"66.58.53.199\");\n+\n+    // CNetAddr does not support ports making it dangerous to treat like CService\n+    BOOST_CHECK(CNetAddr(\"250.2.2.2:7777\").ToString() != CNetAddr(\"250.2.2.2\", 7777).ToString());\n+    BOOST_CHECK(CNetAddr(\"250.2.2.2:7777\").ToString() == \"::\");\n+    BOOST_CHECK(CNetAddr(\"250.2.2.2\", 7777).ToString() == \"250.2.2.2\");\n+    BOOST_CHECK(CNetAddr(\"1.1.1.1:1\").ToString() == CNetAddr(\"2.2.2:1\").ToString());\n+    BOOST_CHECK(CNetAddr(\"1.1.1.1:1\").ToString() == \"::\");\n+    BOOST_CHECK(CNetAddr(\"2.2.2.2:2\").ToString() == \"::\");\n+    BOOST_CHECK(CNetAddr(\"2.2.2.2:2\").IsIPv6());\n+    BOOST_CHECK(CNetAddr(\"2.2.2.2:2\").IsIPv4() == false);\n+\n+    // Comparing with CNetAddr constructor with CService constructor\n+    BOOST_CHECK(CNetAddr(\"250.2.2.2\").ToString() == CNetAddr(\"250.2.2.2\", 7777).ToString());\n+    BOOST_CHECK(CNetAddr(\"250.2.2.2:7777\").ToString() != CService(\"250.2.2.2:7777\").ToString());\n+    BOOST_CHECK(CService(\"250.2.2.2:7777\").ToString() == CService(\"250.2.2.2\",7777).ToString());\n+\n+    BOOST_CHECK(CNetAddr(\"250.2.2.2:8333\").IsIPv6());\n+    BOOST_CHECK(CService(\"250.2.2.2:8333\").IsIPv4());",
    "path": "src/test/netbase_tests.cpp",
    "position": 25,
    "original_position": 25,
    "commit_id": "9bafdbcbcf35c70d3171592368cd6f862e6d9de0",
    "original_commit_id": "9bafdbcbcf35c70d3171592368cd6f862e6d9de0",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "@dcousens Agreed. The usual idea would be to make tests that test the desired behavior (e.g. stricter parsing, return !IsValid() if there is something clearly invalid), then fix the code so that the tests pass.\n",
    "created_at": "2016-01-18T15:05:10Z",
    "updated_at": "2016-01-18T15:05:10Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7291#discussion_r50007997",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7291",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/50007997"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/7291#discussion_r50007997"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7291"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/50007997/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 69,
    "original_line": 69,
    "side": "RIGHT"
  }
]