MarcoFalke,2016-01-04T19:07:55Z,Nice! Concept ACK  5609f88\n,https://github.com/bitcoin/bitcoin/pull/7291#issuecomment-168772807,168772807,
jonasschnelli,2016-01-04T19:36:59Z,Thanks!\nutACK.\n,https://github.com/bitcoin/bitcoin/pull/7291#issuecomment-168779831,168779831,
dcousens,2016-01-07T13:51:50Z,utACK 9bafdbc\n,https://github.com/bitcoin/bitcoin/pull/7291#issuecomment-169669226,169669226,
laanwj,2016-01-29T12:27:31Z,See #7435.\n,https://github.com/bitcoin/bitcoin/pull/7291#issuecomment-176729379,176729379,
jonasschnelli,2016-01-04T19:34:53Z,s/constructior/constructor\n,https://github.com/bitcoin/bitcoin/pull/7291#discussion_r48770392,48770392,src/test/netbase_tests.cpp
EthanHeilman,2016-01-04T20:36:20Z,fixed.\n,https://github.com/bitcoin/bitcoin/pull/7291#discussion_r48777881,48777881,src/test/netbase_tests.cpp
laanwj,2016-01-05T11:28:01Z,"Is this really behavior that we want to write into tests?\n\nI'd prefer adding an 'IsInvalid' status to CNetAddr and signal that (akin to CService) if unparseable nonsense is being fed into the constructor, instead of randomly resolving to the IPv6 localhost ""::"".\n\nEdit: there is an IsValid on CNetAddr. This would need to return `false` in these cases, instead of valid nonsense.\n",https://github.com/bitcoin/bitcoin/pull/7291#discussion_r48835764,48835764,src/test/netbase_tests.cpp
laanwj,2016-01-05T11:33:47Z,"Also here: I don't think this is behavior that should be set into stone.\nIMO, parsing should be more strict and providing a partial IPv4 address should simply fail (return !IsValid()).\n",https://github.com/bitcoin/bitcoin/pull/7291#discussion_r48836172,48836172,src/test/netbase_tests.cpp
EthanHeilman,2016-01-05T16:48:42Z,"I don't think it should be set in stone and in fact I want to change it, but my view is that having the tests confirm the behavior prior to making the change is valuable. If such a view is not-consistent with the Bitcoin testing philosophy I'm happy to remove these values.\n\nThere is an additional reason for these tests beyond just documenting undesirable behavior. Bitcoin uses different IP addre",https://github.com/bitcoin/bitcoin/pull/7291#discussion_r48866226,48866226,src/test/netbase_tests.cpp
EthanHeilman,2016-01-05T17:59:45Z,"> parsing should be more strict and providing a partial IPv4 address should simply fail (return !IsValid()).\n\nAgreed, I want to move on this slowly and carefully to ensure we don't introduce a crash via IP strings which work now but should fail. Should I open an issue for this?\n",https://github.com/bitcoin/bitcoin/pull/7291#discussion_r48874369,48874369,src/test/netbase_tests.cpp
dcousens,2016-01-05T22:08:39Z,Were these meant to be different? (`IsIPv6` vs `IsIPv4`)\n,https://github.com/bitcoin/bitcoin/pull/7291#discussion_r48903175,48903175,src/test/netbase_tests.cpp
EthanHeilman,2016-01-05T22:31:09Z,Yes. The point of this test that while the constructor strings are identical one creates a IPv4 address and one creates a IPv6 address. This tripped me up and I wanted to document the functionality as this was being discussed in another pull request: https://github.com/bitcoin/bitcoin/pull/7212\n,https://github.com/bitcoin/bitcoin/pull/7291#discussion_r48905679,48905679,src/test/netbase_tests.cpp
dcousens,2016-01-05T22:42:41Z,:+1: \n,https://github.com/bitcoin/bitcoin/pull/7291#discussion_r48906893,48906893,src/test/netbase_tests.cpp
MarcoFalke,2016-01-06T21:48:54Z,"@EthanHeilman The question is if someone expects `CNetAddr` to construct a IPv6 here. If this is just a fallback-behavior, I'd rather not `BOOST_CHECK` that.\n\nMaybe you could comment those out for now. (The IPv4 stuff looks ok to go into the tests)\n",https://github.com/bitcoin/bitcoin/pull/7291#discussion_r49014417,49014417,src/test/netbase_tests.cpp
dcousens,2016-01-06T22:00:25Z,"@MarcoFalke I see no reason why wouldn't want to test as much behaviour as possible.\nIf you intend to make any changes, it becomes explicit what is broken and you can just amend the tests or the implementation code, depending on what assumptions changed.\n",https://github.com/bitcoin/bitcoin/pull/7291#discussion_r49015765,49015765,src/test/netbase_tests.cpp
laanwj,2016-01-07T08:37:10Z,"Right. There's something to be said for that, but IMO tests are there to test desired behavior, not just lock in wrong behavior that happens to be the case but has been missed over all this time.\n\nSo IMO the right way to progress would be to make tests that check the behavior that we want; e.g. \n\n```\nBOOST_CHECK(!CNetAddr(""1.1.1"").IsValid());\n```\n\nThen adapt the implementation to pass thes",https://github.com/bitcoin/bitcoin/pull/7291#discussion_r49050996,49050996,src/test/netbase_tests.cpp
MarcoFalke,2016-01-07T11:20:42Z,"@dcousens In case the behaviour is unwanted, we shouldn't test it. (Tests are worthless if their only goal is to pass and return true. I can remember three cases in the last 4 months where such `return true;` tests caused us quite some hassle.)\n",https://github.com/bitcoin/bitcoin/pull/7291#discussion_r49063891,49063891,src/test/netbase_tests.cpp
dcousens,2016-01-07T13:51:30Z,"If the existing behaviour is **not** desired, then the tests should be changed to the desired behaviour and the implementation fail until that is rectified.\nIMHO it is better to define the behaviour (even if it is undesired) than just leave it up in the air.\n\nYMMV though,  and its a bit of a bike shed.\n",https://github.com/bitcoin/bitcoin/pull/7291#discussion_r49074161,49074161,src/test/netbase_tests.cpp
MarcoFalke,2016-01-09T13:32:27Z,I don't care too much but at least add a comment to describe why this is tested.\n,https://github.com/bitcoin/bitcoin/pull/7291#discussion_r49264103,49264103,src/test/netbase_tests.cpp
laanwj,2016-01-09T15:52:42Z,"No, I don't think we should test unwanted behavior. This happens to be the case, but it's wrong and should be fixed. There have been users confused by this behavior before (at least @gmaxwell) which expected incomplete IP addresses to do something else and were baffled by this. Just failing them would be better.\n\nTests are not there to fix the code's behavior in stone, they are there to strategi",https://github.com/bitcoin/bitcoin/pull/7291#discussion_r49265116,49265116,src/test/netbase_tests.cpp
dcousens,2016-01-10T03:08:43Z,"@laanwj sure,  so lets add tests to test the desired behaviour? [and subsequently fail until fixed]\n",https://github.com/bitcoin/bitcoin/pull/7291#discussion_r49270997,49270997,src/test/netbase_tests.cpp
laanwj,2016-01-18T15:05:10Z,"@dcousens Agreed. The usual idea would be to make tests that test the desired behavior (e.g. stricter parsing, return !IsValid() if there is something clearly invalid), then fix the code so that the tests pass.\n",https://github.com/bitcoin/bitcoin/pull/7291#discussion_r50007997,50007997,src/test/netbase_tests.cpp
