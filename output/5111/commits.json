[
  {
    "sha": "c444c620c62c51d65f7de0b2a3c351e61ab1e388",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjNDQ0YzYyMGM2MmM1MWQ2NWY3ZGUwYjJhM2MzNTFlNjFhYjFlMzg4",
    "commit": {
      "author": {
        "name": "jtimon",
        "email": "jtimon@blockstream.io",
        "date": "2014-10-19T00:57:02Z"
      },
      "committer": {
        "name": "jtimon",
        "email": "jtimon@jtimon.cc",
        "date": "2014-12-27T14:46:09Z"
      },
      "message": "Decouple CCoins from CTxInUndo",
      "tree": {
        "sha": "df3a6a164ba30069fcf9dd2a646cb593f90dad51",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/df3a6a164ba30069fcf9dd2a646cb593f90dad51"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c444c620c62c51d65f7de0b2a3c351e61ab1e388",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c444c620c62c51d65f7de0b2a3c351e61ab1e388",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c444c620c62c51d65f7de0b2a3c351e61ab1e388",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c444c620c62c51d65f7de0b2a3c351e61ab1e388/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0f2308cf7cfffe13b0206802622cad4d9e009aa1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0f2308cf7cfffe13b0206802622cad4d9e009aa1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0f2308cf7cfffe13b0206802622cad4d9e009aa1"
      }
    ],
    "stats": {
      "total": 45,
      "additions": 19,
      "deletions": 26
    },
    "files": [
      {
        "sha": "f4599ff39df0ef83fdd959b387ec4b5ff5ade749",
        "filename": "src/coins.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 18,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c444c620c62c51d65f7de0b2a3c351e61ab1e388/src/coins.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c444c620c62c51d65f7de0b2a3c351e61ab1e388/src/coins.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/coins.cpp?ref=c444c620c62c51d65f7de0b2a3c351e61ab1e388",
        "patch": "@@ -31,29 +31,15 @@ void CCoins::CalcMaskSize(unsigned int &nBytes, unsigned int &nNonzeroBytes) con\n     nBytes += nLastUsedByte;\n }\n \n-bool CCoins::Spend(const COutPoint &out, CTxInUndo &undo) {\n-    if (out.n >= vout.size())\n-        return false;\n-    if (vout[out.n].IsNull())\n+bool CCoins::Spend(uint32_t nPos) \n+{\n+    if (nPos >= vout.size() || vout[nPos].IsNull())\n         return false;\n-    undo = CTxInUndo(vout[out.n]);\n-    vout[out.n].SetNull();\n+    vout[nPos].SetNull();\n     Cleanup();\n-    if (vout.size() == 0) {\n-        undo.nHeight = nHeight;\n-        undo.fCoinBase = fCoinBase;\n-        undo.nVersion = this->nVersion;\n-    }\n     return true;\n }\n \n-bool CCoins::Spend(int nPos) {\n-    CTxInUndo undo;\n-    COutPoint out(0, nPos);\n-    return Spend(out, undo);\n-}\n-\n-\n bool CCoinsView::GetCoins(const uint256 &txid, CCoins &coins) const { return false; }\n bool CCoinsView::HaveCoins(const uint256 &txid) const { return false; }\n uint256 CCoinsView::GetBestBlock() const { return uint256(0); }"
      },
      {
        "sha": "2be52ad171f49b2eb840305b41d6d97256e614dd",
        "filename": "src/coins.h",
        "status": "modified",
        "additions": 1,
        "deletions": 5,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c444c620c62c51d65f7de0b2a3c351e61ab1e388/src/coins.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c444c620c62c51d65f7de0b2a3c351e61ab1e388/src/coins.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/coins.h?ref=c444c620c62c51d65f7de0b2a3c351e61ab1e388",
        "patch": "@@ -9,7 +9,6 @@\n #include \"compressor.h\"\n #include \"serialize.h\"\n #include \"uint256.h\"\n-#include \"undo.h\"\n \n #include <assert.h>\n #include <stdint.h>\n@@ -237,11 +236,8 @@ class CCoins\n         Cleanup();\n     }\n \n-    //! mark an outpoint spent, and construct undo information\n-    bool Spend(const COutPoint &out, CTxInUndo &undo);\n-\n     //! mark a vout spent\n-    bool Spend(int nPos);\n+    bool Spend(uint32_t nPos);\n \n     //! check whether a particular output is still available\n     bool IsAvailable(unsigned int nPos) const {"
      },
      {
        "sha": "3f775e3d333b897d51a5614b7819e140c83297aa",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 3,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c444c620c62c51d65f7de0b2a3c351e61ab1e388/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c444c620c62c51d65f7de0b2a3c351e61ab1e388/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=c444c620c62c51d65f7de0b2a3c351e61ab1e388",
        "patch": "@@ -1383,9 +1383,20 @@ void UpdateCoins(const CTransaction& tx, CValidationState &state, CCoinsViewCach\n     if (!tx.IsCoinBase()) {\n         txundo.vprevout.reserve(tx.vin.size());\n         BOOST_FOREACH(const CTxIn &txin, tx.vin) {\n-            txundo.vprevout.push_back(CTxInUndo());\n-            bool ret = inputs.ModifyCoins(txin.prevout.hash)->Spend(txin.prevout, txundo.vprevout.back());\n-            assert(ret);\n+            CCoinsModifier coins = inputs.ModifyCoins(txin.prevout.hash);\n+            unsigned nPos = txin.prevout.n;\n+\n+            if (nPos >= coins->vout.size() || coins->vout[nPos].IsNull())\n+                assert(false);\n+            // mark an outpoint spent, and construct undo information\n+            txundo.vprevout.push_back(CTxInUndo(coins->vout[nPos]));\n+            coins->Spend(nPos);\n+            if (coins->vout.size() == 0) {\n+                CTxInUndo& undo = txundo.vprevout.back();\n+                undo.nHeight = coins->nHeight;\n+                undo.fCoinBase = coins->fCoinBase;\n+                undo.nVersion = coins->nVersion;\n+            }\n         }\n     }\n "
      }
    ]
  },
  {
    "sha": "d7621ccf9d064db19de742ed1a0ac59fffa06c0d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkNzYyMWNjZjlkMDY0ZGIxOWRlNzQyZWQxYTBhYzU5ZmZmYTA2YzBk",
    "commit": {
      "author": {
        "name": "jtimon",
        "email": "jtimon@blockstream.io",
        "date": "2014-10-27T15:07:50Z"
      },
      "committer": {
        "name": "jtimon",
        "email": "jtimon@jtimon.cc",
        "date": "2014-12-27T15:01:12Z"
      },
      "message": "Decouple miner.o and txmempool.o from CTxUndo",
      "tree": {
        "sha": "99bd104ad829f2a03efa7119c472e03ab2eea479",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/99bd104ad829f2a03efa7119c472e03ab2eea479"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d7621ccf9d064db19de742ed1a0ac59fffa06c0d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d7621ccf9d064db19de742ed1a0ac59fffa06c0d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d7621ccf9d064db19de742ed1a0ac59fffa06c0d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d7621ccf9d064db19de742ed1a0ac59fffa06c0d/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c444c620c62c51d65f7de0b2a3c351e61ab1e388",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c444c620c62c51d65f7de0b2a3c351e61ab1e388",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c444c620c62c51d65f7de0b2a3c351e61ab1e388"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 11,
      "deletions": 7
    },
    "files": [
      {
        "sha": "bcd3a5ff051708c8bd1f7f506f401d75e9bf27e0",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d7621ccf9d064db19de742ed1a0ac59fffa06c0d/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d7621ccf9d064db19de742ed1a0ac59fffa06c0d/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=d7621ccf9d064db19de742ed1a0ac59fffa06c0d",
        "patch": "@@ -1404,6 +1404,12 @@ void UpdateCoins(const CTransaction& tx, CValidationState &state, CCoinsViewCach\n     inputs.ModifyCoins(tx.GetHash())->FromTx(tx, nHeight);\n }\n \n+void UpdateCoins(const CTransaction& tx, CValidationState &state, CCoinsViewCache &inputs, int nHeight)\n+{\n+    CTxUndo txundo;\n+    UpdateCoins(tx, state, inputs, txundo, nHeight);\n+}\n+\n bool CScriptCheck::operator()() {\n     const CScript &scriptSig = ptxTo->vin[nIn].scriptSig;\n     if (!VerifyScript(scriptSig, scriptPubKey, nFlags, CachingSignatureChecker(*ptxTo, nIn, cacheStore), &error)) {"
      },
      {
        "sha": "e38b413be1370554c82fbcb893ce8b2ff8959fea",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d7621ccf9d064db19de742ed1a0ac59fffa06c0d/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d7621ccf9d064db19de742ed1a0ac59fffa06c0d/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=d7621ccf9d064db19de742ed1a0ac59fffa06c0d",
        "patch": "@@ -290,7 +290,7 @@ bool CheckInputs(const CTransaction& tx, CValidationState &state, const CCoinsVi\n                  unsigned int flags, bool cacheStore, std::vector<CScriptCheck> *pvChecks = NULL);\n \n /** Apply the effects of this transaction on the UTXO set represented by view */\n-void UpdateCoins(const CTransaction& tx, CValidationState &state, CCoinsViewCache &inputs, CTxUndo &txundo, int nHeight);\n+void UpdateCoins(const CTransaction& tx, CValidationState &state, CCoinsViewCache &inputs, int nHeight);\n \n /** Context-independent validity checks */\n bool CheckTransaction(const CTransaction& tx, CValidationState& state);"
      },
      {
        "sha": "0ac974d6e135c75f9b49828448ce26f643d72849",
        "filename": "src/miner.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d7621ccf9d064db19de742ed1a0ac59fffa06c0d/src/miner.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d7621ccf9d064db19de742ed1a0ac59fffa06c0d/src/miner.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.cpp?ref=d7621ccf9d064db19de742ed1a0ac59fffa06c0d",
        "patch": "@@ -279,8 +279,7 @@ CBlockTemplate* CreateNewBlock(const CScript& scriptPubKeyIn)\n             if (!CheckInputs(tx, state, view, true, MANDATORY_SCRIPT_VERIFY_FLAGS, true))\n                 continue;\n \n-            CTxUndo txundo;\n-            UpdateCoins(tx, state, view, txundo, nHeight);\n+            UpdateCoins(tx, state, view, nHeight);\n \n             // Added\n             pblock->vtx.push_back(tx);"
      },
      {
        "sha": "01bf1ec080a0b70f29d0c12ff7e7c3739603895a",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 4,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d7621ccf9d064db19de742ed1a0ac59fffa06c0d/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d7621ccf9d064db19de742ed1a0ac59fffa06c0d/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=d7621ccf9d064db19de742ed1a0ac59fffa06c0d",
        "patch": "@@ -585,9 +585,9 @@ void CTxMemPool::check(const CCoinsViewCache *pcoins) const\n         if (fDependsWait)\n             waitingOnDependants.push_back(&it->second);\n         else {\n-            CValidationState state; CTxUndo undo;\n+            CValidationState state;\n             assert(CheckInputs(tx, state, mempoolDuplicate, false, 0, false, NULL));\n-            UpdateCoins(tx, state, mempoolDuplicate, undo, 1000000);\n+            UpdateCoins(tx, state, mempoolDuplicate, 1000000);\n         }\n     }\n     unsigned int stepsSinceLastRemove = 0;\n@@ -601,8 +601,7 @@ void CTxMemPool::check(const CCoinsViewCache *pcoins) const\n             assert(stepsSinceLastRemove < waitingOnDependants.size());\n         } else {\n             assert(CheckInputs(entry->GetTx(), state, mempoolDuplicate, false, 0, false, NULL));\n-            CTxUndo undo;\n-            UpdateCoins(entry->GetTx(), state, mempoolDuplicate, undo, 1000000);\n+            UpdateCoins(entry->GetTx(), state, mempoolDuplicate, 1000000);\n             stepsSinceLastRemove = 0;\n         }\n     }"
      }
    ]
  },
  {
    "sha": "e035c6a7371027fe33c460ee2d0946a7f1e4e592",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplMDM1YzZhNzM3MTAyN2ZlMzNjNDYwZWUyZDA5NDZhN2YxZTRlNTky",
    "commit": {
      "author": {
        "name": "jtimon",
        "email": "jtimon@blockstream.io",
        "date": "2014-10-27T13:35:52Z"
      },
      "committer": {
        "name": "jtimon",
        "email": "jtimon@jtimon.cc",
        "date": "2014-12-27T15:01:31Z"
      },
      "message": "Decouple CBlockUndo from CDiskBlockPos",
      "tree": {
        "sha": "3e3a4c424b616ae694966fc8ab6bb9d0f23ded1f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3e3a4c424b616ae694966fc8ab6bb9d0f23ded1f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e035c6a7371027fe33c460ee2d0946a7f1e4e592",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e035c6a7371027fe33c460ee2d0946a7f1e4e592",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e035c6a7371027fe33c460ee2d0946a7f1e4e592",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e035c6a7371027fe33c460ee2d0946a7f1e4e592/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d7621ccf9d064db19de742ed1a0ac59fffa06c0d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d7621ccf9d064db19de742ed1a0ac59fffa06c0d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d7621ccf9d064db19de742ed1a0ac59fffa06c0d"
      }
    ],
    "stats": {
      "total": 34,
      "additions": 16,
      "deletions": 18
    },
    "files": [
      {
        "sha": "ec24e55ce1cb473ee44d0c215e785605995d6b34",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 15,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e035c6a7371027fe33c460ee2d0946a7f1e4e592/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e035c6a7371027fe33c460ee2d0946a7f1e4e592/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=e035c6a7371027fe33c460ee2d0946a7f1e4e592",
        "patch": "@@ -1520,7 +1520,8 @@ bool CheckInputs(const CTransaction& tx, CValidationState &state, const CCoinsVi\n     return true;\n }\n \n-\n+bool UndoWriteToDisk(const CBlockUndo& blockundo, CDiskBlockPos& pos, const uint256& hashBlock);\n+bool UndoReadFromDisk(CBlockUndo& blockundo, const CDiskBlockPos& pos, const uint256& hashBlock);\n \n bool DisconnectBlock(CBlock& block, CValidationState& state, CBlockIndex* pindex, CCoinsViewCache& view, bool* pfClean)\n {\n@@ -1535,7 +1536,7 @@ bool DisconnectBlock(CBlock& block, CValidationState& state, CBlockIndex* pindex\n     CDiskBlockPos pos = pindex->GetUndoPos();\n     if (pos.IsNull())\n         return error(\"DisconnectBlock() : no undo data available\");\n-    if (!blockUndo.ReadFromDisk(pos, pindex->pprev->GetBlockHash()))\n+    if (!UndoReadFromDisk(blockUndo, pos, pindex->pprev->GetBlockHash()))\n         return error(\"DisconnectBlock() : failure reading undo data\");\n \n     if (blockUndo.vtxundo.size() + 1 != block.vtx.size())\n@@ -1777,7 +1778,7 @@ bool ConnectBlock(const CBlock& block, CValidationState& state, CBlockIndex* pin\n             CDiskBlockPos pos;\n             if (!FindUndoPos(state, pindex->nFile, pos, ::GetSerializeSize(blockundo, SER_DISK, CLIENT_VERSION) + 40))\n                 return error(\"ConnectBlock() : FindUndoPos failed\");\n-            if (!blockundo.WriteToDisk(pos, pindex->pprev->GetBlockHash()))\n+            if (!UndoWriteToDisk(blockundo, pos, pindex->pprev->GetBlockHash()))\n                 return state.Abort(\"Failed to write undo data\");\n \n             // update nUndoPos in block index\n@@ -2943,7 +2944,7 @@ bool CVerifyDB::VerifyDB(CCoinsView *coinsview, int nCheckLevel, int nCheckDepth\n             CBlockUndo undo;\n             CDiskBlockPos pos = pindex->GetUndoPos();\n             if (!pos.IsNull()) {\n-                if (!undo.ReadFromDisk(pos, pindex->pprev->GetBlockHash()))\n+                if (!UndoReadFromDisk(undo, pos, pindex->pprev->GetBlockHash()))\n                     return error(\"VerifyDB() : *** found bad undo data at %d, hash=%s\\n\", pindex->nHeight, pindex->GetBlockHash().ToString());\n             }\n         }\n@@ -4509,44 +4510,44 @@ bool SendMessages(CNode* pto, bool fSendTrickle)\n }\n \n \n-bool CBlockUndo::WriteToDisk(CDiskBlockPos &pos, const uint256 &hashBlock)\n+bool UndoWriteToDisk(const CBlockUndo& blockundo, CDiskBlockPos& pos, const uint256& hashBlock)\n {\n     // Open history file to append\n     CAutoFile fileout(OpenUndoFile(pos), SER_DISK, CLIENT_VERSION);\n     if (fileout.IsNull())\n-        return error(\"CBlockUndo::WriteToDisk : OpenUndoFile failed\");\n+        return error(\"%s : OpenUndoFile failed\", __func__);\n \n     // Write index header\n-    unsigned int nSize = fileout.GetSerializeSize(*this);\n+    unsigned int nSize = fileout.GetSerializeSize(blockundo);\n     fileout << FLATDATA(Params().MessageStart()) << nSize;\n \n     // Write undo data\n     long fileOutPos = ftell(fileout.Get());\n     if (fileOutPos < 0)\n-        return error(\"CBlockUndo::WriteToDisk : ftell failed\");\n+        return error(\"%s : ftell failed\", __func__);\n     pos.nPos = (unsigned int)fileOutPos;\n-    fileout << *this;\n+    fileout << blockundo;\n \n     // calculate & write checksum\n     CHashWriter hasher(SER_GETHASH, PROTOCOL_VERSION);\n     hasher << hashBlock;\n-    hasher << *this;\n+    hasher << blockundo;\n     fileout << hasher.GetHash();\n \n     return true;\n }\n \n-bool CBlockUndo::ReadFromDisk(const CDiskBlockPos &pos, const uint256 &hashBlock)\n+bool UndoReadFromDisk(CBlockUndo& blockundo, const CDiskBlockPos& pos, const uint256& hashBlock)\n {\n     // Open history file to read\n     CAutoFile filein(OpenUndoFile(pos, true), SER_DISK, CLIENT_VERSION);\n     if (filein.IsNull())\n-        return error(\"CBlockUndo::ReadFromDisk : OpenBlockFile failed\");\n+        return error(\"%s : OpenBlockFile failed\", __func__);\n \n     // Read block\n     uint256 hashChecksum;\n     try {\n-        filein >> *this;\n+        filein >> blockundo;\n         filein >> hashChecksum;\n     }\n     catch (const std::exception& e) {\n@@ -4556,9 +4557,9 @@ bool CBlockUndo::ReadFromDisk(const CDiskBlockPos &pos, const uint256 &hashBlock\n     // Verify checksum\n     CHashWriter hasher(SER_GETHASH, PROTOCOL_VERSION);\n     hasher << hashBlock;\n-    hasher << *this;\n+    hasher << blockundo;\n     if (hashChecksum != hasher.GetHash())\n-        return error(\"CBlockUndo::ReadFromDisk : Checksum mismatch\");\n+        return error(\"%s : Checksum mismatch\", __func__);\n \n     return true;\n }"
      },
      {
        "sha": "7d6c293a3ffe46c71bf3b9d04a23505d2bd20747",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e035c6a7371027fe33c460ee2d0946a7f1e4e592/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e035c6a7371027fe33c460ee2d0946a7f1e4e592/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=e035c6a7371027fe33c460ee2d0946a7f1e4e592",
        "patch": "@@ -314,9 +314,6 @@ class CBlockUndo\n     inline void SerializationOp(Stream& s, Operation ser_action, int nType, int nVersion) {\n         READWRITE(vtxundo);\n     }\n-\n-    bool WriteToDisk(CDiskBlockPos &pos, const uint256 &hashBlock);\n-    bool ReadFromDisk(const CDiskBlockPos &pos, const uint256 &hashBlock);\n };\n \n "
      }
    ]
  },
  {
    "sha": "937ba572d0758891f43c658d7d98d7bd747c3ce4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5MzdiYTU3MmQwNzU4ODkxZjQzYzY1OGQ3ZDk4ZDdiZDc0N2MzY2U0",
    "commit": {
      "author": {
        "name": "jtimon",
        "email": "jtimon@blockstream.io",
        "date": "2014-10-27T13:42:49Z"
      },
      "committer": {
        "name": "jtimon",
        "email": "jtimon@jtimon.cc",
        "date": "2014-12-27T15:01:31Z"
      },
      "message": "MOVEONLY: CBlockUndo from main.h to undo.h",
      "tree": {
        "sha": "b88f675d571a636c0d5fd638b802257419f2444a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b88f675d571a636c0d5fd638b802257419f2444a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/937ba572d0758891f43c658d7d98d7bd747c3ce4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/937ba572d0758891f43c658d7d98d7bd747c3ce4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/937ba572d0758891f43c658d7d98d7bd747c3ce4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/937ba572d0758891f43c658d7d98d7bd747c3ce4/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e035c6a7371027fe33c460ee2d0946a7f1e4e592",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e035c6a7371027fe33c460ee2d0946a7f1e4e592",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e035c6a7371027fe33c460ee2d0946a7f1e4e592"
      }
    ],
    "stats": {
      "total": 31,
      "additions": 15,
      "deletions": 16
    },
    "files": [
      {
        "sha": "24ed487af0a2a4b7088533dc8e1f954aba01d3ec",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/937ba572d0758891f43c658d7d98d7bd747c3ce4/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/937ba572d0758891f43c658d7d98d7bd747c3ce4/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=937ba572d0758891f43c658d7d98d7bd747c3ce4",
        "patch": "@@ -17,6 +17,7 @@\n #include \"txdb.h\"\n #include \"txmempool.h\"\n #include \"ui_interface.h\"\n+#include \"undo.h\"\n #include \"util.h\"\n #include \"utilmoneystr.h\"\n "
      },
      {
        "sha": "9049f5bb7d4033ab7f04614f7fd2fbd7f5a1fd45",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 0,
        "deletions": 16,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/937ba572d0758891f43c658d7d98d7bd747c3ce4/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/937ba572d0758891f43c658d7d98d7bd747c3ce4/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=937ba572d0758891f43c658d7d98d7bd747c3ce4",
        "patch": "@@ -25,7 +25,6 @@\n #include \"tinyformat.h\"\n #include \"txmempool.h\"\n #include \"uint256.h\"\n-#include \"undo.h\"\n \n #include <algorithm>\n #include <exception>\n@@ -302,21 +301,6 @@ bool IsStandardTx(const CTransaction& tx, std::string& reason);\n \n bool IsFinalTx(const CTransaction &tx, int nBlockHeight = 0, int64_t nBlockTime = 0);\n \n-/** Undo information for a CBlock */\n-class CBlockUndo\n-{\n-public:\n-    std::vector<CTxUndo> vtxundo; // for all but the coinbase\n-\n-    ADD_SERIALIZE_METHODS;\n-\n-    template <typename Stream, typename Operation>\n-    inline void SerializationOp(Stream& s, Operation ser_action, int nType, int nVersion) {\n-        READWRITE(vtxundo);\n-    }\n-};\n-\n-\n /** \n  * Closure representing one script verification\n  * Note that this stores references to the spending transaction "
      },
      {
        "sha": "1c4ed95bf2e6d32f5afe01aecc4203287e890529",
        "filename": "src/undo.h",
        "status": "modified",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/937ba572d0758891f43c658d7d98d7bd747c3ce4/src/undo.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/937ba572d0758891f43c658d7d98d7bd747c3ce4/src/undo.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/undo.h?ref=937ba572d0758891f43c658d7d98d7bd747c3ce4",
        "patch": "@@ -68,4 +68,18 @@ class CTxUndo\n     }\n };\n \n+/** Undo information for a CBlock */\n+class CBlockUndo\n+{\n+public:\n+    std::vector<CTxUndo> vtxundo; // for all but the coinbase\n+\n+    ADD_SERIALIZE_METHODS;\n+\n+    template <typename Stream, typename Operation>\n+    inline void SerializationOp(Stream& s, Operation ser_action, int nType, int nVersion) {\n+        READWRITE(vtxundo);\n+    }\n+};\n+\n #endif // BITCOIN_UNDO_H"
      }
    ]
  },
  {
    "sha": "87fb31086d70e4902170976ce261a01c8c380c00",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4N2ZiMzEwODZkNzBlNDkwMjE3MDk3NmNlMjYxYTAxYzhjMzgwYzAw",
    "commit": {
      "author": {
        "name": "jtimon",
        "email": "jtimon@jtimon.cc",
        "date": "2014-12-02T23:39:03Z"
      },
      "committer": {
        "name": "jtimon",
        "email": "jtimon@jtimon.cc",
        "date": "2014-12-27T15:01:31Z"
      },
      "message": "Move UndoWriteToDisk() and UndoReadFromDisk() to anon namespace",
      "tree": {
        "sha": "136df9f861aadeb73d9aaed8526d4e5e438ac6eb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/136df9f861aadeb73d9aaed8526d4e5e438ac6eb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/87fb31086d70e4902170976ce261a01c8c380c00",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/87fb31086d70e4902170976ce261a01c8c380c00",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/87fb31086d70e4902170976ce261a01c8c380c00",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/87fb31086d70e4902170976ce261a01c8c380c00/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "937ba572d0758891f43c658d7d98d7bd747c3ce4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/937ba572d0758891f43c658d7d98d7bd747c3ce4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/937ba572d0758891f43c658d7d98d7bd747c3ce4"
      }
    ],
    "stats": {
      "total": 114,
      "additions": 57,
      "deletions": 57
    },
    "files": [
      {
        "sha": "f6033566ef1de241eb451278ba199063cd4ddc44",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 57,
        "deletions": 57,
        "changes": 114,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/87fb31086d70e4902170976ce261a01c8c380c00/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/87fb31086d70e4902170976ce261a01c8c380c00/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=87fb31086d70e4902170976ce261a01c8c380c00",
        "patch": "@@ -1521,8 +1521,63 @@ bool CheckInputs(const CTransaction& tx, CValidationState &state, const CCoinsVi\n     return true;\n }\n \n-bool UndoWriteToDisk(const CBlockUndo& blockundo, CDiskBlockPos& pos, const uint256& hashBlock);\n-bool UndoReadFromDisk(CBlockUndo& blockundo, const CDiskBlockPos& pos, const uint256& hashBlock);\n+namespace {\n+\n+bool UndoWriteToDisk(const CBlockUndo& blockundo, CDiskBlockPos& pos, const uint256& hashBlock)\n+{\n+    // Open history file to append\n+    CAutoFile fileout(OpenUndoFile(pos), SER_DISK, CLIENT_VERSION);\n+    if (fileout.IsNull())\n+        return error(\"%s : OpenUndoFile failed\", __func__);\n+\n+    // Write index header\n+    unsigned int nSize = fileout.GetSerializeSize(blockundo);\n+    fileout << FLATDATA(Params().MessageStart()) << nSize;\n+\n+    // Write undo data\n+    long fileOutPos = ftell(fileout.Get());\n+    if (fileOutPos < 0)\n+        return error(\"%s : ftell failed\", __func__);\n+    pos.nPos = (unsigned int)fileOutPos;\n+    fileout << blockundo;\n+\n+    // calculate & write checksum\n+    CHashWriter hasher(SER_GETHASH, PROTOCOL_VERSION);\n+    hasher << hashBlock;\n+    hasher << blockundo;\n+    fileout << hasher.GetHash();\n+\n+    return true;\n+}\n+\n+bool UndoReadFromDisk(CBlockUndo& blockundo, const CDiskBlockPos& pos, const uint256& hashBlock)\n+{\n+    // Open history file to read\n+    CAutoFile filein(OpenUndoFile(pos, true), SER_DISK, CLIENT_VERSION);\n+    if (filein.IsNull())\n+        return error(\"%s : OpenBlockFile failed\", __func__);\n+\n+    // Read block\n+    uint256 hashChecksum;\n+    try {\n+        filein >> blockundo;\n+        filein >> hashChecksum;\n+    }\n+    catch (const std::exception& e) {\n+        return error(\"%s : Deserialize or I/O error - %s\", __func__, e.what());\n+    }\n+\n+    // Verify checksum\n+    CHashWriter hasher(SER_GETHASH, PROTOCOL_VERSION);\n+    hasher << hashBlock;\n+    hasher << blockundo;\n+    if (hashChecksum != hasher.GetHash())\n+        return error(\"%s : Checksum mismatch\", __func__);\n+\n+    return true;\n+}\n+\n+} // anon namespace\n \n bool DisconnectBlock(CBlock& block, CValidationState& state, CBlockIndex* pindex, CCoinsViewCache& view, bool* pfClean)\n {\n@@ -4510,61 +4565,6 @@ bool SendMessages(CNode* pto, bool fSendTrickle)\n     return true;\n }\n \n-\n-bool UndoWriteToDisk(const CBlockUndo& blockundo, CDiskBlockPos& pos, const uint256& hashBlock)\n-{\n-    // Open history file to append\n-    CAutoFile fileout(OpenUndoFile(pos), SER_DISK, CLIENT_VERSION);\n-    if (fileout.IsNull())\n-        return error(\"%s : OpenUndoFile failed\", __func__);\n-\n-    // Write index header\n-    unsigned int nSize = fileout.GetSerializeSize(blockundo);\n-    fileout << FLATDATA(Params().MessageStart()) << nSize;\n-\n-    // Write undo data\n-    long fileOutPos = ftell(fileout.Get());\n-    if (fileOutPos < 0)\n-        return error(\"%s : ftell failed\", __func__);\n-    pos.nPos = (unsigned int)fileOutPos;\n-    fileout << blockundo;\n-\n-    // calculate & write checksum\n-    CHashWriter hasher(SER_GETHASH, PROTOCOL_VERSION);\n-    hasher << hashBlock;\n-    hasher << blockundo;\n-    fileout << hasher.GetHash();\n-\n-    return true;\n-}\n-\n-bool UndoReadFromDisk(CBlockUndo& blockundo, const CDiskBlockPos& pos, const uint256& hashBlock)\n-{\n-    // Open history file to read\n-    CAutoFile filein(OpenUndoFile(pos, true), SER_DISK, CLIENT_VERSION);\n-    if (filein.IsNull())\n-        return error(\"%s : OpenBlockFile failed\", __func__);\n-\n-    // Read block\n-    uint256 hashChecksum;\n-    try {\n-        filein >> blockundo;\n-        filein >> hashChecksum;\n-    }\n-    catch (const std::exception& e) {\n-        return error(\"%s : Deserialize or I/O error - %s\", __func__, e.what());\n-    }\n-\n-    // Verify checksum\n-    CHashWriter hasher(SER_GETHASH, PROTOCOL_VERSION);\n-    hasher << hashBlock;\n-    hasher << blockundo;\n-    if (hashChecksum != hasher.GetHash())\n-        return error(\"%s : Checksum mismatch\", __func__);\n-\n-    return true;\n-}\n-\n  std::string CBlockFileInfo::ToString() const {\n      return strprintf(\"CBlockFileInfo(blocks=%u, size=%u, heights=%u...%u, time=%s...%s)\", nBlocks, nSize, nHeightFirst, nHeightLast, DateTimeStrFormat(\"%Y-%m-%d\", nTimeFirst), DateTimeStrFormat(\"%Y-%m-%d\", nTimeLast));\n  }"
      }
    ]
  }
]