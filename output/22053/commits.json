[
  {
    "sha": "bb2960a520d3c88237b30f0ad90c93ba9041fbcb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiYjI5NjBhNTIwZDNjODgyMzdiMzBmMGFkOTBjOTNiYTkwNDFmYmNi",
    "commit": {
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2021-04-20T05:10:36Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-05-25T07:09:30Z"
      },
      "message": "net_processing: add m_mutex_message_handling\n\nSince message handling is single threaded, this can simplify\nguarding any variables only accessed during message handling.",
      "tree": {
        "sha": "129ea63276dff684e83399a44c3add623a00d563",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/129ea63276dff684e83399a44c3add623a00d563"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bb2960a520d3c88237b30f0ad90c93ba9041fbcb",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bb2960a520d3c88237b30f0ad90c93ba9041fbcb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bb2960a520d3c88237b30f0ad90c93ba9041fbcb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bb2960a520d3c88237b30f0ad90c93ba9041fbcb/comments",
    "author": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "db1aca01d5dee845b6c44a33d3fa3269c8427273",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/db1aca01d5dee845b6c44a33d3fa3269c8427273",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/db1aca01d5dee845b6c44a33d3fa3269c8427273"
      }
    ],
    "stats": {
      "total": 29,
      "additions": 26,
      "deletions": 3
    },
    "files": [
      {
        "sha": "db7a843e7829872e98667e6314303de9b06e95f3",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 26,
        "deletions": 3,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bb2960a520d3c88237b30f0ad90c93ba9041fbcb/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bb2960a520d3c88237b30f0ad90c93ba9041fbcb/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=bb2960a520d3c88237b30f0ad90c93ba9041fbcb",
        "patch": "@@ -278,9 +278,20 @@ class PeerManagerImpl final : public PeerManager\n     void SetBestHeight(int height) override { m_best_height = height; };\n     void Misbehaving(const NodeId pnode, const int howmuch, const std::string& message) override;\n     void ProcessMessage(CNode& pfrom, const std::string& msg_type, CDataStream& vRecv,\n-                        const std::chrono::microseconds time_received, const std::atomic<bool>& interruptMsgProc) override;\n+                        const std::chrono::microseconds time_received, const std::atomic<bool>& interruptMsgProc) override LOCKS_EXCLUDED(m_mutex_message_handling);\n \n private:\n+    /** Message handling mutex.\n+     *  Message processing is single-threaded, so anything only accessed\n+     *  by ProcessMessage(s) or SendMessages can be guarded by this mutex,\n+     *  which guarantees it's only accessed by a single thread.\n+     */\n+    Mutex m_mutex_message_handling;\n+\n+    void _ProcessMessage(CNode& pfrom, const std::string& msg_type, CDataStream& vRecv,\n+                        const std::chrono::microseconds time_received, const std::atomic<bool>& interruptMsgProc)\n+        EXCLUSIVE_LOCKS_REQUIRED(m_mutex_message_handling);\n+\n     void _RelayTransaction(const uint256& txid, const uint256& wtxid)\n         EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n@@ -2399,6 +2410,14 @@ void PeerManagerImpl::ProcessBlock(CNode& pfrom, const std::shared_ptr<const CBl\n void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDataStream& vRecv,\n                                      const std::chrono::microseconds time_received,\n                                      const std::atomic<bool>& interruptMsgProc)\n+{\n+    LOCK(m_mutex_message_handling);\n+    return _ProcessMessage(pfrom, msg_type, vRecv, time_received, interruptMsgProc);\n+}\n+\n+void PeerManagerImpl::_ProcessMessage(CNode& pfrom, const std::string& msg_type, CDataStream& vRecv,\n+                                     const std::chrono::microseconds time_received,\n+                                     const std::atomic<bool>& interruptMsgProc)\n {\n     LogPrint(BCLog::NET, \"received: %s (%u bytes) peer=%d\\n\", SanitizeString(msg_type), vRecv.size(), pfrom.GetId());\n \n@@ -3456,7 +3475,7 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         } // cs_main\n \n         if (fProcessBLOCKTXN) {\n-            return ProcessMessage(pfrom, NetMsgType::BLOCKTXN, blockTxnMsg, time_received, interruptMsgProc);\n+            return _ProcessMessage(pfrom, NetMsgType::BLOCKTXN, blockTxnMsg, time_received, interruptMsgProc);\n         }\n \n         if (fRevertToHeaderProcessing) {\n@@ -3922,6 +3941,8 @@ bool PeerManagerImpl::ProcessMessages(CNode* pfrom, std::atomic<bool>& interrupt\n     PeerRef peer = GetPeerRef(pfrom->GetId());\n     if (peer == nullptr) return false;\n \n+    LOCK(m_mutex_message_handling);\n+\n     {\n         LOCK(peer->m_getdata_requests_mutex);\n         if (!peer->m_getdata_requests.empty()) {\n@@ -3977,7 +3998,7 @@ bool PeerManagerImpl::ProcessMessages(CNode* pfrom, std::atomic<bool>& interrupt\n     unsigned int nMessageSize = msg.m_message_size;\n \n     try {\n-        ProcessMessage(*pfrom, msg_type, msg.m_recv, msg.m_time, interruptMsgProc);\n+        _ProcessMessage(*pfrom, msg_type, msg.m_recv, msg.m_time, interruptMsgProc);\n         if (interruptMsgProc) return false;\n         {\n             LOCK(peer->m_getdata_requests_mutex);\n@@ -4349,6 +4370,8 @@ bool PeerManagerImpl::SendMessages(CNode* pto)\n     if (!peer) return false;\n     const Consensus::Params& consensusParams = m_chainparams.GetConsensus();\n \n+    LOCK(m_mutex_message_handling);\n+\n     // We must call MaybeDiscourageAndDisconnect first, to ensure that we'll\n     // disconnect misbehaving peers even before the version handshake is complete.\n     if (MaybeDiscourageAndDisconnect(*pto, *peer)) return true;"
      }
    ]
  },
  {
    "sha": "faca41443120c254f45d7a4dd72d5d80efacaf59",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWNhNDE0NDMxMjBjMjU0ZjQ1ZDdhNGRkNzJkNWQ4MGVmYWNhZjU5",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-05-25T07:16:30Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-05-25T07:10:57Z"
      },
      "message": "Release cs_main before MaybeSendFeefilter",
      "tree": {
        "sha": "e0b55f4b2ae7f3d7af07562b5e5cdd156e49c05d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e0b55f4b2ae7f3d7af07562b5e5cdd156e49c05d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/faca41443120c254f45d7a4dd72d5d80efacaf59",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUiHOQwAoz6AtzTGgkmTMiC9f/qqmxaZa0UAEzzRoP2EjZ6avjaRQH+N05r4Sv8S\nSgGYHN6GD9foy9vm9tI97FGikvD47/7JB6oSAScPj8SqCmwPfFsAzf08nlKEbIPb\nvfU+2bZ9PU485zHTfNJJMoL28trTHPF6YBlfd1IRyi1lIlPktQFbRlDDVYlqXJxm\npgzPlCV0b1ErGMWY4DL1DoZs3Am9SqGgorocjatxibAfuv5PebNFGXqGDtC4434h\n5Z7TT5NHYWB0s9vFWW3uqnAC2liBBtGosxNt//JJ1uWT/0AkxkeWow1XVEUObWPX\nzuSjDnuksnyHgdCRhqZ0Q+nlCqB/v0xH906RQM1KGxUIxfO5zieEvRWN+gLaauAe\nChW0hMdG/6wxhwDs4NMBZ6A2jfiwQAKvcNyfz8JL+p7hbdzFwrMAo4tnt4smWdlm\nqWlz9vVHhaV3+1t9Dw7rrbUeQx5WrH27dAW4LXjh32Y4NqrTvCrXRL//FUII1nZm\n7teo/pLn\n=JExx\n-----END PGP SIGNATURE-----",
        "payload": "tree e0b55f4b2ae7f3d7af07562b5e5cdd156e49c05d\nparent bb2960a520d3c88237b30f0ad90c93ba9041fbcb\nauthor MarcoFalke <falke.marco@gmail.com> 1621926990 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1621926657 +0200\n\nRelease cs_main before MaybeSendFeefilter\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faca41443120c254f45d7a4dd72d5d80efacaf59",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/faca41443120c254f45d7a4dd72d5d80efacaf59",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faca41443120c254f45d7a4dd72d5d80efacaf59/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bb2960a520d3c88237b30f0ad90c93ba9041fbcb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bb2960a520d3c88237b30f0ad90c93ba9041fbcb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bb2960a520d3c88237b30f0ad90c93ba9041fbcb"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "8f5bcbb3ddfab59c500079ec70b2f632cf1721b8",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faca41443120c254f45d7a4dd72d5d80efacaf59/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faca41443120c254f45d7a4dd72d5d80efacaf59/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=faca41443120c254f45d7a4dd72d5d80efacaf59",
        "patch": "@@ -376,7 +376,7 @@ class PeerManagerImpl final : public PeerManager\n     void RelayAddress(NodeId originator, const CAddress& addr, bool fReachable);\n \n     /** Send `feefilter` message. */\n-    void MaybeSendFeefilter(CNode& node, std::chrono::microseconds current_time) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n+    void MaybeSendFeefilter(CNode& node, std::chrono::microseconds current_time) EXCLUSIVE_LOCKS_REQUIRED(m_mutex_message_handling);\n \n     const CChainParams& m_chainparams;\n     CConnman& m_connman;\n@@ -4302,7 +4302,7 @@ void PeerManagerImpl::MaybeSendAddr(CNode& node, Peer& peer, std::chrono::micros\n \n void PeerManagerImpl::MaybeSendFeefilter(CNode& pto, std::chrono::microseconds current_time)\n {\n-    AssertLockHeld(cs_main);\n+    AssertLockHeld(m_mutex_message_handling);\n \n     if (m_ignore_incoming_txs) return;\n     if (!pto.m_tx_relay) return;\n@@ -4830,8 +4830,8 @@ bool PeerManagerImpl::SendMessages(CNode* pto)\n \n         if (!vGetData.empty())\n             m_connman.PushMessage(pto, msgMaker.Make(NetMsgType::GETDATA, vGetData));\n-\n-        MaybeSendFeefilter(*pto, current_time);\n     } // release cs_main\n+\n+    MaybeSendFeefilter(*pto, current_time);\n     return true;\n }"
      }
    ]
  }
]