[
  {
    "sha": "15ae4a17c430b27b58b5fce89a868a70edca80c8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxNWFlNGExN2M0MzBiMjdiNThiNWZjZTg5YTg2OGE3MGVkY2E4MGM4",
    "commit": {
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2020-08-04T16:42:29Z"
      },
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2020-08-23T21:09:26Z"
      },
      "message": "test/fuzz: add a seed corpus generation option to the test_runner\n\nSigned-off-by: Antoine Poinsot <darosior@protonmail.com>",
      "tree": {
        "sha": "a452ab6917c0bcd8c737a143eea0d5d9e4b87b2c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a452ab6917c0bcd8c737a143eea0d5d9e4b87b2c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/15ae4a17c430b27b58b5fce89a868a70edca80c8",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAl9C2wYACgkQ4T/BRc0/\nQwT8xAwA2JUUlBl0JNMMunwbLKGmdgmOhko8mjggInJheRx5e9AFJT6HSsFdLLSM\nQ6GAddD445OyxgXt3PW8VrTy2mxcrGDM07hcYpYDM68JdocxdNrhYkYDSFXGjN8C\n256D6/CCtXIhnXx9XzvoBcOptGVXblY0HaKj5TeQza9c1bvwLfFQDleDc4pAveLK\n8t7gORDckaBy9POzVV813gQrU3hKNmGxArJmuTNlm6mUs+v2EdlalahcW6F8DBmX\n7zHFmk27DsnT72csskce6ip57AWb4gohdOcSneMv9XFC26QgDSruVTqPt2MnUQBI\n3srTKBzMfAZPOrHrurEvtgKFjsedRawWY0vVZGO7IxD5Kr2rK5oaGNgZD6lFRUvQ\nZhAsfF2MsEbqZ2P9c2hSOhx0m5+Qql69ZYbSI0Yp8CW96wnK9LGhdp7zHCC9podA\nORtBQS5bp1QWRM1Rm2SLvfBiKWDQ8ZFnOkNB0aRNvqlmChe3dqA+PkMz/xm8IBWB\n61SCNxQj\n=1Sm4\n-----END PGP SIGNATURE-----",
        "payload": "tree a452ab6917c0bcd8c737a143eea0d5d9e4b87b2c\nparent 4b705b1c98f60ab736df98d62a8d4988f61678d5\nauthor Antoine Poinsot <darosior@protonmail.com> 1596559349 +0200\ncommitter Antoine Poinsot <darosior@protonmail.com> 1598216966 +0200\n\ntest/fuzz: add a seed corpus generation option to the test_runner\n\nSigned-off-by: Antoine Poinsot <darosior@protonmail.com>\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/15ae4a17c430b27b58b5fce89a868a70edca80c8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/15ae4a17c430b27b58b5fce89a868a70edca80c8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/15ae4a17c430b27b58b5fce89a868a70edca80c8/comments",
    "author": {
      "login": "darosior",
      "id": 22457751,
      "node_id": "MDQ6VXNlcjIyNDU3NzUx",
      "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/darosior",
      "html_url": "https://github.com/darosior",
      "followers_url": "https://api.github.com/users/darosior/followers",
      "following_url": "https://api.github.com/users/darosior/following{/other_user}",
      "gists_url": "https://api.github.com/users/darosior/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/darosior/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
      "organizations_url": "https://api.github.com/users/darosior/orgs",
      "repos_url": "https://api.github.com/users/darosior/repos",
      "events_url": "https://api.github.com/users/darosior/events{/privacy}",
      "received_events_url": "https://api.github.com/users/darosior/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "darosior",
      "id": 22457751,
      "node_id": "MDQ6VXNlcjIyNDU3NzUx",
      "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/darosior",
      "html_url": "https://github.com/darosior",
      "followers_url": "https://api.github.com/users/darosior/followers",
      "following_url": "https://api.github.com/users/darosior/following{/other_user}",
      "gists_url": "https://api.github.com/users/darosior/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/darosior/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
      "organizations_url": "https://api.github.com/users/darosior/orgs",
      "repos_url": "https://api.github.com/users/darosior/repos",
      "events_url": "https://api.github.com/users/darosior/events{/privacy}",
      "received_events_url": "https://api.github.com/users/darosior/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4b705b1c98f60ab736df98d62a8d4988f61678d5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4b705b1c98f60ab736df98d62a8d4988f61678d5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4b705b1c98f60ab736df98d62a8d4988f61678d5"
      }
    ],
    "stats": {
      "total": 72,
      "additions": 60,
      "deletions": 12
    },
    "files": [
      {
        "sha": "c7895edbcc942d26340fac64b9c8bc988b22ff52",
        "filename": "test/fuzz/test_runner.py",
        "status": "modified",
        "additions": 60,
        "deletions": 12,
        "changes": 72,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/15ae4a17c430b27b58b5fce89a868a70edca80c8/test/fuzz/test_runner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/15ae4a17c430b27b58b5fce89a868a70edca80c8/test/fuzz/test_runner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/fuzz/test_runner.py?ref=15ae4a17c430b27b58b5fce89a868a70edca80c8",
        "patch": "@@ -56,6 +56,14 @@ def main():\n         '--m_dir',\n         help='Merge inputs from this directory into the seed_dir. Needs /target subdirectory.',\n     )\n+    parser.add_argument(\n+        '-g',\n+        '--generate',\n+        action='store_true',\n+        help='Create new corpus seeds (or extend the existing ones) by running'\n+             ' the given targets for a finite number of times. Outputs them to'\n+             ' the passed seed_dir.'\n+    )\n \n     args = parser.parse_args()\n \n@@ -100,19 +108,20 @@ def main():\n \n     logging.info(\"{} of {} detected fuzz target(s) selected: {}\".format(len(test_list_selection), len(test_list_all), \" \".join(test_list_selection)))\n \n-    test_list_seedless = []\n-    for t in test_list_selection:\n-        corpus_path = os.path.join(args.seed_dir, t)\n-        if not os.path.exists(corpus_path) or len(os.listdir(corpus_path)) == 0:\n-            test_list_seedless.append(t)\n-    test_list_seedless.sort()\n-    if test_list_seedless:\n-        logging.info(\n-            \"Fuzzing harnesses lacking a seed corpus: {}\".format(\n-                \" \".join(test_list_seedless)\n+    if not args.generate:\n+        test_list_seedless = []\n+        for t in test_list_selection:\n+            corpus_path = os.path.join(args.seed_dir, t)\n+            if not os.path.exists(corpus_path) or len(os.listdir(corpus_path)) == 0:\n+                test_list_seedless.append(t)\n+        test_list_seedless.sort()\n+        if test_list_seedless:\n+            logging.info(\n+                \"Fuzzing harnesses lacking a seed corpus: {}\".format(\n+                    \" \".join(test_list_seedless)\n+                )\n             )\n-        )\n-        logging.info(\"Please consider adding a fuzz seed corpus at https://github.com/bitcoin-core/qa-assets\")\n+            logging.info(\"Please consider adding a fuzz seed corpus at https://github.com/bitcoin-core/qa-assets\")\n \n     try:\n         help_output = subprocess.run(\n@@ -133,6 +142,14 @@ def main():\n         sys.exit(1)\n \n     with ThreadPoolExecutor(max_workers=args.par) as fuzz_pool:\n+        if args.generate:\n+            return generate_corpus_seeds(\n+                fuzz_pool=fuzz_pool,\n+                build_dir=config[\"environment\"][\"BUILDDIR\"],\n+                seed_dir=args.seed_dir,\n+                targets=test_list_selection,\n+            )\n+\n         if args.m_dir:\n             merge_inputs(\n                 fuzz_pool=fuzz_pool,\n@@ -152,6 +169,37 @@ def main():\n         )\n \n \n+def generate_corpus_seeds(*, fuzz_pool, build_dir, seed_dir, targets):\n+    \"\"\"Generates new corpus seeds.\n+\n+    Run {targets} without input, and outputs the generated corpus seeds to\n+    {seed_dir}.\n+    \"\"\"\n+    logging.info(\"Generating corpus seeds to {}\".format(seed_dir))\n+\n+    def job(command):\n+        logging.debug(\"Running '{}'\\n\".format(\" \".join(command)))\n+        logging.debug(\"Command '{}' output:\\n'{}'\\n\".format(\n+            ' '.join(command),\n+            subprocess.run(command, check=True, stderr=subprocess.PIPE,\n+                           universal_newlines=True).stderr\n+        ))\n+\n+    futures = []\n+    for target in targets:\n+        target_seed_dir = os.path.join(seed_dir, target)\n+        os.makedirs(target_seed_dir, exist_ok=True)\n+        command = [\n+            os.path.join(build_dir, \"src\", \"test\", \"fuzz\", target),\n+            \"-runs=100000\",\n+            target_seed_dir,\n+        ]\n+        futures.append(fuzz_pool.submit(job, command))\n+\n+    for future in as_completed(futures):\n+        future.result()\n+\n+\n def merge_inputs(*, fuzz_pool, corpus, test_list, build_dir, merge_dir):\n     logging.info(\"Merge the inputs in the passed dir into the seed_dir. Passed dir {}\".format(merge_dir))\n     jobs = []"
      }
    ]
  }
]