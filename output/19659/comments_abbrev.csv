darosior,2020-08-04 17:51:40,"Ok, removed the early return in main to keep the libfuzzer check, and removed the timeout",https://github.com/bitcoin/bitcoin/pull/19659#issuecomment-668737996,668737996,
darosior,2020-08-05 09:29:35,"> After locally fixing the log statement, I was able to run this and get a starting corpus pretty quickly. Why wouldn't you just use the populated corpus from qa-assets?\n\nThis is used to actually populate and extend the seed corpus, which we use to test against.",https://github.com/bitcoin/bitcoin/pull/19659#issuecomment-669088200,669088200,
Crypt-iQ,2020-08-05 10:40:11,"> > After locally fixing the log statement, I was able to run this and get a starting corpus pretty quickly. Why wouldn't you just use the populated corpus from qa-assets?\n> \n> This is used to actually populate and extend the seed corpus, which we use to test against.\n\nIs there ever a scenario in which you want to run this from *scratch*? I would imagine you could always just use your exis",https://github.com/bitcoin/bitcoin/pull/19659#issuecomment-669120105,669120105,
darosior,2020-08-05 12:51:43,"> Is there ever a scenario in which you want to run this from scratch?\n\nGenerating from scratch, yes to create the initial corpus to test against.\nGenerating not from scratch, yes to increase coverage to test against.",https://github.com/bitcoin/bitcoin/pull/19659#issuecomment-669174820,669174820,
Crypt-iQ,2020-08-05 13:09:57,"> > Is there ever a scenario in which you want to run this from scratch?\n> \n> Generating from scratch, yes to create the initial corpus to test against.\n> Generating not from scratch, yes to increase coverage to test against.\n\nI understand the second point, and I could see in some ways the first could be useful so Concept ACK from me. It's really for my own edification. Since some of the",https://github.com/bitcoin/bitcoin/pull/19659#issuecomment-669183846,669183846,
Crypt-iQ,2020-08-08 12:37:00,"A bit unrelated to this PR, but thought I'd ask since it's kind of confusing me. When trying to run `test/fuzz/test_runner.py` with:\n```\nASAN_OPTIONS=""detect_stack_use_after_return=1:check_initialization_order=1:strict_init_order=1"" test/fuzz/test_runner.py seed_dir=~/qa-assets/fuzz_seed_corpus --loglevel DEBUG\n```\nThe fuzzing harness is only run a very small number of times which is certa",https://github.com/bitcoin/bitcoin/pull/19659#issuecomment-670924251,670924251,
practicalswift,2020-08-14 15:49:09,"Tested ACK 0b83151f1042f9d3978ad07a573e89847733b456\n\nThanks for improving `test/fuzz/test_runner.py` -- nice stuff! :)",https://github.com/bitcoin/bitcoin/pull/19659#issuecomment-674138927,674138927,
MarcoFalke,2020-08-24 06:02:02,"ACK 15ae4a17c4\n",https://github.com/bitcoin/bitcoin/pull/19659#issuecomment-678921430,678921430,
MarcoFalke,2020-08-04 17:03:25,Any reason to not reuse the fuzz_pool below? Benefit is also that it will check for libFuzzer and abort early if not found,https://github.com/bitcoin/bitcoin/pull/19659#discussion_r465198399,465198399,test/fuzz/test_runner.py
MarcoFalke,2020-08-04 17:04:51,"Any reason to set a time based timeout here, but max runs by number below?",https://github.com/bitcoin/bitcoin/pull/19659#discussion_r465199135,465199135,test/fuzz/test_runner.py
darosior,2020-08-04 17:09:14,The main reason was to avoid the seedless check just below,https://github.com/bitcoin/bitcoin/pull/19659#discussion_r465201654,465201654,test/fuzz/test_runner.py
MarcoFalke,2020-08-04 17:11:21,"The check is just a debug print, no? If it does any harm, you could disable it when `args.generate`.\n\nThough, I like the libFuzzer check to run before any libFuzzer specific args are passed to a subprocess.",https://github.com/bitcoin/bitcoin/pull/19659#discussion_r465202894,465202894,test/fuzz/test_runner.py
darosior,2020-08-04 17:12:59,"Yeah, the max runs is for the number of targets per batch to run in parallel, while this timeout is because some targets will have a harder time finding new coverage before some others and is to avoid obstructing the queue with them.",https://github.com/bitcoin/bitcoin/pull/19659#discussion_r465203824,465203824,test/fuzz/test_runner.py
darosior,2020-08-04 17:13:20,"Ok, will change",https://github.com/bitcoin/bitcoin/pull/19659#discussion_r465204010,465204010,test/fuzz/test_runner.py
darosior,2020-08-04 17:15:49,Hmm actually i used something different and timed out slow fuzzing processes because they were blocking the whole next batch.. With a thread pool maybe it's not necessary ?,https://github.com/bitcoin/bitcoin/pull/19659#discussion_r465205472,465205472,test/fuzz/test_runner.py
Crypt-iQ,2020-08-05 05:26:55,"Extraneous `f` in `f""Generating...""`",https://github.com/bitcoin/bitcoin/pull/19659#discussion_r465481052,465481052,test/fuzz/test_runner.py
MarcoFalke,2020-08-05 07:04:23,"```suggestion\n        help='Create new corpus seeds (or extend the existing ones) by running the given targets by batches '\n```\n\nThis will also take into account existing seeds, right?",https://github.com/bitcoin/bitcoin/pull/19659#discussion_r465516543,465516543,test/fuzz/test_runner.py
MarcoFalke,2020-08-05 07:06:57,"```suggestion\ndef generate_corpus_seeds(*, fuzz_pool, build_dir, seed_dir, targets, n):\n```\n\npython is not type safe, so please use named arguments to not accidentally mix up the order of the args and to simplify review",https://github.com/bitcoin/bitcoin/pull/19659#discussion_r465517750,465517750,test/fuzz/test_runner.py
MarcoFalke,2020-08-05 07:08:40,"`n` is unused, no?",https://github.com/bitcoin/bitcoin/pull/19659#discussion_r465518488,465518488,test/fuzz/test_runner.py
MarcoFalke,2020-08-05 07:09:45,is stderr bytes or an utf-8 string?,https://github.com/bitcoin/bitcoin/pull/19659#discussion_r465518995,465518995,test/fuzz/test_runner.py
darosior,2020-08-05 09:12:04,That's an [fstring](https://www.python.org/dev/peps/pep-0498/).,https://github.com/bitcoin/bitcoin/pull/19659#discussion_r465586273,465586273,test/fuzz/test_runner.py
darosior,2020-08-05 09:12:19,Yep,https://github.com/bitcoin/bitcoin/pull/19659#discussion_r465586406,465586406,test/fuzz/test_runner.py
darosior,2020-08-05 09:13:38,Done,https://github.com/bitcoin/bitcoin/pull/19659#discussion_r465587093,465587093,test/fuzz/test_runner.py
darosior,2020-08-05 09:14:05,"Yes, forgot to remove it along with the ThreadPool. Thanks!",https://github.com/bitcoin/bitcoin/pull/19659#discussion_r465587325,465587325,test/fuzz/test_runner.py
darosior,2020-08-05 09:17:55,Had to drop it anyway because we need to support python 3.5 !,https://github.com/bitcoin/bitcoin/pull/19659#discussion_r465589638,465589638,test/fuzz/test_runner.py
darosior,2020-08-05 09:21:07,"Bytes :(\nWill pass encoding to `run()`.",https://github.com/bitcoin/bitcoin/pull/19659#discussion_r465591481,465591481,test/fuzz/test_runner.py
MarcoFalke,2020-08-05 09:36:56,"```suggestion\n                           universal_newlines=True).stderr\n```\n\notherwise it would be python3.7 only",https://github.com/bitcoin/bitcoin/pull/19659#discussion_r465600609,465600609,test/fuzz/test_runner.py
MarcoFalke,2020-08-05 09:37:45,"Would probably be good to print the command again, otherwise it can't be correlated",https://github.com/bitcoin/bitcoin/pull/19659#discussion_r465601055,465601055,test/fuzz/test_runner.py
darosior,2020-08-05 10:04:01,Done,https://github.com/bitcoin/bitcoin/pull/19659#discussion_r465615721,465615721,test/fuzz/test_runner.py
Crypt-iQ,2020-08-09 16:25:23,"These no longer run for a finite amount of time, maybe finite amount of runs instead?",https://github.com/bitcoin/bitcoin/pull/19659#discussion_r467602549,467602549,test/fuzz/test_runner.py
darosior,2020-08-10 08:23:14,They do: https://github.com/bitcoin/bitcoin/pull/19659/files#diff-59bdd45d194af4419dcb1b83bca08972R194 :-).,https://github.com/bitcoin/bitcoin/pull/19659#discussion_r467753448,467753448,test/fuzz/test_runner.py
Crypt-iQ,2020-08-10 11:57:58,"Oh sorry, I meant to modify the comment ",https://github.com/bitcoin/bitcoin/pull/19659#discussion_r467854199,467854199,test/fuzz/test_runner.py
darosior,2020-08-10 12:01:03,"Oh yeah, you right: **I** misunderstood :) ",https://github.com/bitcoin/bitcoin/pull/19659#discussion_r467855673,467855673,test/fuzz/test_runner.py
darosior,2020-08-10 12:03:16,"Amended to outline that i meant time not as in timestamp but as in ""1 time, 2 times"":\n```patch\ndiff --git a/test/fuzz/test_runner.py b/test/fuzz/test_runner.py\nindex cfe2e67b5..5ad1c9b9f 100755\n--- a/test/fuzz/test_runner.py\n+++ b/test/fuzz/test_runner.py\n@@ -61,8 +61,8 @@ def main():\n         '--generate',\n         action='store_true',\n         help='Create new corpus seeds (or ",https://github.com/bitcoin/bitcoin/pull/19659#discussion_r467856743,467856743,test/fuzz/test_runner.py
MarcoFalke,2020-08-22 09:23:15,"Seems odd to append two dots to the command. Could at least add `'` around the command?\n\n\n```diff\ndiff --git a/test/fuzz/test_runner.py b/test/fuzz/test_runner.py\nindex 5ad1c9b9fa..f2a8aefd05 100755\n--- a/test/fuzz/test_runner.py\n+++ b/test/fuzz/test_runner.py\n@@ -178,9 +178,9 @@ def generate_corpus_seeds(*, fuzz_pool, build_dir, seed_dir, targets):\n     logging.info(""Generating ",https://github.com/bitcoin/bitcoin/pull/19659#discussion_r475067706,475067706,test/fuzz/test_runner.py
MarcoFalke,2020-08-22 09:24:17,"Also a newline between the two logs would help, as they are unrelated in the overall log once more than one thread is running (see above suggested diff)",https://github.com/bitcoin/bitcoin/pull/19659#discussion_r475067777,475067777,test/fuzz/test_runner.py
MarcoFalke,2020-08-22 09:38:28,"Any reason to ignore failures?\n```suggestion\n        future.result()\n```",https://github.com/bitcoin/bitcoin/pull/19659#discussion_r475070239,475070239,test/fuzz/test_runner.py
darosior,2020-08-23 15:59:27,"Nope, corrected.",https://github.com/bitcoin/bitcoin/pull/19659#discussion_r475235622,475235622,test/fuzz/test_runner.py
darosior,2020-08-23 16:01:46,Added,https://github.com/bitcoin/bitcoin/pull/19659#discussion_r475235872,475235872,test/fuzz/test_runner.py
