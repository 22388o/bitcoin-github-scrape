jnewbery,2020-12-14 11:34:40,"Concept ACK. I have a branch that does almost exactly the same as this.\n\nI don't think we even need to store`m_best_height` in `PeerManager`. We can just call `::ChainActive().Height()` whenever we want to send a `version` message.",https://github.com/bitcoin/bitcoin/pull/20649#issuecomment-744380778,744380778,
MarcoFalke,2020-12-14 11:47:13,"> just call ::ChainActive().Height() whenever we want to send a version message.\n\nI was thinking that it would be nice (in the future) if most message handling could be done without `cs_main`.",https://github.com/bitcoin/bitcoin/pull/20649#issuecomment-744387126,744387126,
jnewbery,2020-12-14 12:51:37,"> I was thinking that it would be nice (in the future) if most message handling could be done without cs_main.\n\nThis would definitely be nice! At the moment, both places we send a `version` message require cs_main at some point, so we're quite far off at the moment.\n\nI have a preference for not caching the block height in PeerManager since I think it makes isolating and testing behaviour m",https://github.com/bitcoin/bitcoin/pull/20649#issuecomment-744418340,744418340,
DrahtBot,2020-12-14 19:12:33,<!--4a62be1de6b64f3ed646cdc7932c8cf5-->\nüïµÔ∏è @sipa has been requested to review this pull request as specified in the REVIEWERS file.,https://github.com/bitcoin/bitcoin/pull/20649#issuecomment-744649776,744649776,
DrahtBot,2020-12-14 20:12:00,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #20811 (refactor: move net_processing implementation details out of header by ajtowns)\n* #20789 (fuzz: Rework strong and ",https://github.com/bitcoin/bitcoin/pull/20649#issuecomment-744682281,744682281,
jnewbery,2020-12-15 10:54:52,Code review ACK fa7afc076328ef3fbc56b51f62f7afae24701dae,https://github.com/bitcoin/bitcoin/pull/20649#issuecomment-745212651,745212651,
MarcoFalke,2020-12-16 09:36:03,rebased,https://github.com/bitcoin/bitcoin/pull/20649#issuecomment-745990038,745990038,
jnewbery,2020-12-16 10:08:30,code review ACK faf54d4af483a5e107d47b16cfa47cdeb815e723,https://github.com/bitcoin/bitcoin/pull/20649#issuecomment-746027763,746027763,
naumenkogs,2020-12-18 08:59:59,Concept ACK,https://github.com/bitcoin/bitcoin/pull/20649#issuecomment-747957050,747957050,
jnewbery,2020-12-18 10:33:17,Code review ACK fa8a96a914639ecda7f5d8c522dc0339815efef5,https://github.com/bitcoin/bitcoin/pull/20649#issuecomment-748011307,748011307,
MarcoFalke,2021-01-02 09:42:57,Rebased due to trivial conflict in adjacent line,https://github.com/bitcoin/bitcoin/pull/20649#issuecomment-753452885,753452885,
jnewbery,2021-01-02 09:44:44,utACK faaa4f2b6af4ce249fc4809a030240afa45b1a33,https://github.com/bitcoin/bitcoin/pull/20649#issuecomment-753453037,753453037,
