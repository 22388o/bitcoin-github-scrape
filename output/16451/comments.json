[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/514684598",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16451#issuecomment-514684598",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16451",
    "id": 514684598,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNDY4NDU5OA==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-24T15:36:59Z",
    "updated_at": "2019-07-24T15:36:59Z",
    "author_association": "MEMBER",
    "body": "Concept ACK",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/514684598/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/514689722",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16451#issuecomment-514689722",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16451",
    "id": 514689722,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNDY4OTcyMg==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-24T15:49:56Z",
    "updated_at": "2019-07-24T15:49:56Z",
    "author_association": "MEMBER",
    "body": "> When I open+close an \"old\" wallet file, this will overwrite all merkle txs with zeros?\r\n\r\nNo. When opening the old file, the CWalletTx deserialization logic will deserialize the merkle txs into a locally scoped `vUnused` which is thrown away. When closing the wallet, `CWalletTx::Serialize()` serializes an empty vector `vUnused` into the file. From my reading of serialize.h, that just writes a single zero byte (a CompactSize of 0).\r\n\r\nThat behaviour should be unchanged by this PR.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/514689722/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/514734660",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16451#issuecomment-514734660",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16451",
    "id": 514734660,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNDczNDY2MA==",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-24T17:54:24Z",
    "updated_at": "2019-07-24T17:54:24Z",
    "author_association": "MEMBER",
    "body": "Concept ACK, should go before #15931 as it lets me remove one commit",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/514734660/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/514736670",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16451#issuecomment-514736670",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16451",
    "id": 514736670,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNDczNjY3MA==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-24T17:59:58Z",
    "updated_at": "2019-07-30T19:20:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#16341](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16341.html) (Introduce ScriptPubKeyMan interface and use it for key and script management (aka wallet boxes) by achow101)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/514736670/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/514741538",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16451#issuecomment-514741538",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16451",
    "id": 514741538,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNDc0MTUzOA==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-24T18:13:36Z",
    "updated_at": "2019-07-24T18:13:36Z",
    "author_association": "MEMBER",
    "body": "@MarcoFalke \r\n> Yeah, I am interested in seeing that commit.\r\n\r\nI've added a second commit that removes the `CMerkleTx` serialization code (since we never actually have to use it). I couldn't figure out how to replicate the deserialization code for `CMerkleTx` in `CWalletTx::deserialize()` and be sure that I'd replicated it byte-for-byte, so I left that in.\r\n\r\nLet me know if you think that second commit is useful. I'm happy to keep it or leave it.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/514741538/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/514789002",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16451#issuecomment-514789002",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16451",
    "id": 514789002,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNDc4OTAwMg==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-24T20:32:56Z",
    "updated_at": "2019-07-24T20:32:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "IMO, messing with this serialization code is not an improvement. It makes the PR more longer and more confusing than it needs to be and now repeats the `READWRITE(tx, hashBlock, vMerkleBranch, nIndex)` logic across 3 different functions instead of just leaving it in one place.\r\n\r\nI'd suggest leave the inheritance untouched, leave the serialization untouched, getting rid of the comment explaining serialization workarounds, and just move all the CMerkleTx methods to CWalletTx, leaving CMerkleTx as a simple struct with a serialization operator.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/514789002/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/514812510",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16451#issuecomment-514812510",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16451",
    "id": 514812510,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNDgxMjUxMA==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-24T21:47:50Z",
    "updated_at": "2019-07-24T21:47:50Z",
    "author_association": "MEMBER",
    "body": "> IMO, messing with this serialization code is not an improvement. It makes the PR more longer and more confusing than it needs to be and now repeats the READWRITE(tx, hashBlock, vMerkleBranch, nIndex) logic across 3 different functions instead of just leaving it in one place.\r\n> \r\n> I'd suggest leave the inheritance untouched, leave the serialization untouched, getting rid of the comment explaining serialization workarounds, and just move all the CMerkleTx methods to CWalletTx, leaving CMerkleTx as a simple struct with a serialization operator.\r\n\r\nThanks for reviewing @ryanofsky . I prefer having all the `CWalletTx` logic in a single place, but I can understand your point about making this PR smaller.\r\n\r\nI'm happy to keep this PR as it is with two commits, reduce to just the first commit, or reduce further as you've suggested (put I'd probably add some comments to explain why we have a base class for `CWalletTx` that is just used for serialization/deserialization). I'll wait for others to give their opinions before changing this.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/514812510/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/514820889",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16451#issuecomment-514820889",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16451",
    "id": 514820889,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNDgyMDg4OQ==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-24T22:19:14Z",
    "updated_at": "2019-07-24T22:19:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "> but I can understand your point about making this PR smaller\r\n\r\nPR size isn't the main issue. The main thing I don't like is that READWRITE(tx, hashBlock, vMerkleBranch, nIndex) logic is now repeated in 3 places, rewritten 3 slightly different ways, when it only needs to live in one place. The current serialization seems fine and little seems to be gained by blowing it up, since either way you have to keep the CMerkleTx class. The difference is that with my suggestion, CMerkleTx is something normal: a straightforward struct with a serialization operator. While with the current commits, CMerkleTx turns into this weird duplicative dangling thing requiring explanations from ancient history.\r\n\r\nI also don't understand the division between the two commits. First a \"Remove CMerkleTx\" commit that doesn't actually remove it, then a \"tidy up\" commit with no description that changes more random things?\r\n\r\nSo I don't get why a simple MOVEONLY commit that just moves all CMerkleTx methods except SerializationOp to CWalletTx isn't the obvious choice here. But I'm mostly just perplexed by the choice. If  you actually think the changes here are great and make sense then please keep them!",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/514820889/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/515065679",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16451#issuecomment-515065679",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16451",
    "id": 515065679,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNTA2NTY3OQ==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-25T14:26:35Z",
    "updated_at": "2019-07-25T14:26:35Z",
    "author_association": "MEMBER",
    "body": "> The main thing I don't like is that READWRITE(tx, hashBlock, vMerkleBranch, nIndex) logic is now repeated in 3 places, rewritten 3 slightly different ways, when it only needs to live in one place.\r\n\r\n`CWalletTx` already has separate functions for serialize and deserialize, and adding the logic to both places seems to fit with that pattern.\r\n\r\nI much prefer that after this PR I can look at a single function to see how a wallet tx will be serialized or deserialized, rather than seeing the object being `static_cast`ed to a `CMerkleTx`, then (de)serialized, then a vector of `CMerkleTx`s (de)serialized.\r\n\r\nLonger term, I think it might make sense to move all of the serialization logic for the wallet objects to walletdb.{cpp,h}. There are already some objects that are defined in that header file with (de)serialization functions and deserialization fixups in `ReadKeyValue()`.\r\n\r\n> I also don't understand the division between the two commits. First a \"Remove CMerkleTx\" commit that doesn't actually remove it, then a \"tidy up\" commit with no description that changes more random things?\r\n\r\nI'll try to improve the commit structure/messages.\r\n\r\n> So I don't get why a simple MOVEONLY commit that just moves all CMerkleTx methods except SerializationOp to CWalletTx isn't the obvious choice here.\r\n\r\nI can certainly do that. The main aim of this PR is to move the `CMerkleTx` members into `CWalletTx`. Flattening the class hierarchy seemed like a good next step, but I can remove it from this PR if that's what others want.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/515065679/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/515080038",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16451#issuecomment-515080038",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16451",
    "id": 515080038,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNTA4MDAzOA==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-25T15:00:41Z",
    "updated_at": "2019-07-25T15:00:41Z",
    "author_association": "MEMBER",
    "body": "@ryanofsky \r\n> I also don't understand the division between the two commits.\r\n\r\nI've resplit the changes into three commits:\r\n1. Moves the all `CMerkleTx` methods except initialization and serialization into `CWalletTx`\r\n2. Moves `CMerkleTx` data members into `CWalletTx` and moves the serialization logic into `CWalletTx`.\r\n3. Removes `CMerkleTx` serialization, just leaving `CMerkleTx` deserialization.\r\n\r\nOnly (1) is needed. I think (2) and (3) are nice-to-haves, but can split them into a separate PR if others disagree.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/515080038/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/515107456",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16451#issuecomment-515107456",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16451",
    "id": 515107456,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNTEwNzQ1Ng==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-25T16:12:25Z",
    "updated_at": "2019-07-25T16:12:25Z",
    "author_association": "MEMBER",
    "body": "> I couldn't figure out how to replicate the deserialization code for CMerkleTx in CWalletTx::deserialize() and be sure that I'd replicated it byte-for-byte, so I left that in.\n\nFWIW, it's possible to do something like `std::vector<std::pair<CTransactionRef, std::pair<uint256, std::pair<...>>>> tmp; ss >> tmp;` (with a nesting of pairs correspond to all the fields in the original CMerkleTx).\n\nNot sure that's an improvement though.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/515107456/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/515116770",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16451#issuecomment-515116770",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16451",
    "id": 515116770,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNTExNjc3MA==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-25T16:38:27Z",
    "updated_at": "2019-07-25T16:38:27Z",
    "author_association": "MEMBER",
    "body": "@sipa \r\n> FWIW, it's possible to do something like std::vector<std::pair<CTransactionRef, std::pair<uint256, std::pair<...>>>> tmp; ss >> tmp; (with a nesting of pairs correspond to all the fields in the original CMerkleTx).\r\n\r\nThanks! I've implemented that here: https://github.com/jnewbery/bitcoin/commit/efcdb2e02c2c2b1726fc0c973869bb325685a893, which removes `CMerkleTx` entirely. I don't feel confident reviewing that it will always deserialize the bytes identically, and I'd want to test with an old wallet file before proposing that we make that change.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/515116770/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/516482229",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16451#issuecomment-516482229",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16451",
    "id": 516482229,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNjQ4MjIyOQ==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-30T15:57:21Z",
    "updated_at": "2019-07-30T15:57:21Z",
    "author_association": "MEMBER",
    "body": "rebased",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/516482229/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/516723652",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16451#issuecomment-516723652",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16451",
    "id": 516723652,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNjcyMzY1Mg==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-31T06:57:54Z",
    "updated_at": "2019-07-31T06:57:54Z",
    "author_association": "MEMBER",
    "body": "ACK 05b56d1c937b7667ad51400d2f9fb674af72953f. Looks good to me.\r\n\r\n> I can certainly do that. The main aim of this PR is to move the CMerkleTx members into CWalletTx. Flattening the class hierarchy seemed like a good next step\r\n\r\nHaving an intermediate base class just for serialization/deserialization is just silly and I'm all for getting rid of that in this PR.\r\n\r\nAnd I think flattening the class hierarchy when possible is great in general, this simplifies understanding of the code.\r\n\r\nChanging it to a separate \"legacy class\" solely for de-serializing makes a lot of sense to me, it's easier to review for correctness/compatibility and also self-documenting, more so than `std::pair<CTransactionRef, std::pair<uint256, std::pair<std::vector<uint256>, int>>>`.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/516723652/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/306876633",
    "pull_request_review_id": 266104099,
    "id": 306876633,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNjg3NjYzMw==",
    "diff_hunk": "@@ -365,82 +365,24 @@ struct COutputEntry\n     int vout;\n };\n \n-/** A transaction with a merkle branch linking it to the block chain. */\n+/** Legacy class used for deserializing vtxPrev for backwards compatibility **/",
    "path": "src/wallet/wallet.h",
    "position": null,
    "original_position": 5,
    "commit_id": "05b56d1c937b7667ad51400d2f9fb674af72953f",
    "original_commit_id": "c3a4d162c4f73f01f8b8ab6d3141eab0e7e1945b",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Could add the commit or wallet version where this was changed?",
    "created_at": "2019-07-24T15:29:27Z",
    "updated_at": "2019-07-30T15:57:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16451#discussion_r306876633",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16451",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/306876633"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16451#discussion_r306876633"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16451"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/306876633/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 368,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/306879493",
    "pull_request_review_id": 266104099,
    "id": 306879493,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNjg3OTQ5Mw==",
    "diff_hunk": "@@ -365,82 +365,24 @@ struct COutputEntry\n     int vout;\n };\n \n-/** A transaction with a merkle branch linking it to the block chain. */\n+/** Legacy class used for deserializing vtxPrev for backwards compatibility **/\n class CMerkleTx\n {\n-private:\n-  /** Constant used in hashBlock to indicate tx has been abandoned */\n-    static const uint256 ABANDON_HASH;\n-\n public:\n-    CTransactionRef tx;\n-    uint256 hashBlock;\n-\n-    /* An nIndex == -1 means that hashBlock (in nonzero) refers to the earliest\n-     * block in the chain we know this or any in-wallet dependency conflicts\n-     * with. Older clients interpret nIndex == -1 as unconfirmed for backward\n-     * compatibility.\n-     */\n-    int nIndex;\n-\n-    CMerkleTx()\n-    {\n-        SetTx(MakeTransactionRef());\n-        Init();\n-    }\n-\n-    explicit CMerkleTx(CTransactionRef arg)\n-    {\n-        SetTx(std::move(arg));\n-        Init();\n-    }\n-\n-    void Init()\n-    {\n-        hashBlock = uint256();\n-        nIndex = -1;\n-    }\n-\n-    void SetTx(CTransactionRef arg)\n-    {\n-        tx = std::move(arg);\n-    }\n-\n     ADD_SERIALIZE_METHODS;\n \n     template <typename Stream, typename Operation>\n     inline void SerializationOp(Stream& s, Operation ser_action) {\n+        CTransactionRef tx;\n+        uint256 hashBlock;\n+        int nIndex;",
    "path": "src/wallet/wallet.h",
    "position": 54,
    "original_position": 52,
    "commit_id": "05b56d1c937b7667ad51400d2f9fb674af72953f",
    "original_commit_id": "c3a4d162c4f73f01f8b8ab6d3141eab0e7e1945b",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Would this write uninitialized memory to the wallet file?",
    "created_at": "2019-07-24T15:34:56Z",
    "updated_at": "2019-07-30T15:57:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16451#discussion_r306879493",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16451",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/306879493"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16451#discussion_r306879493"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16451"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/306879493/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 381,
    "original_line": 381,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/306888393",
    "pull_request_review_id": 266119109,
    "id": 306888393,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNjg4ODM5Mw==",
    "diff_hunk": "@@ -365,82 +365,24 @@ struct COutputEntry\n     int vout;\n };\n \n-/** A transaction with a merkle branch linking it to the block chain. */\n+/** Legacy class used for deserializing vtxPrev for backwards compatibility **/\n class CMerkleTx\n {\n-private:\n-  /** Constant used in hashBlock to indicate tx has been abandoned */\n-    static const uint256 ABANDON_HASH;\n-\n public:\n-    CTransactionRef tx;\n-    uint256 hashBlock;\n-\n-    /* An nIndex == -1 means that hashBlock (in nonzero) refers to the earliest\n-     * block in the chain we know this or any in-wallet dependency conflicts\n-     * with. Older clients interpret nIndex == -1 as unconfirmed for backward\n-     * compatibility.\n-     */\n-    int nIndex;\n-\n-    CMerkleTx()\n-    {\n-        SetTx(MakeTransactionRef());\n-        Init();\n-    }\n-\n-    explicit CMerkleTx(CTransactionRef arg)\n-    {\n-        SetTx(std::move(arg));\n-        Init();\n-    }\n-\n-    void Init()\n-    {\n-        hashBlock = uint256();\n-        nIndex = -1;\n-    }\n-\n-    void SetTx(CTransactionRef arg)\n-    {\n-        tx = std::move(arg);\n-    }\n-\n     ADD_SERIALIZE_METHODS;\n \n     template <typename Stream, typename Operation>\n     inline void SerializationOp(Stream& s, Operation ser_action) {\n+        CTransactionRef tx;\n+        uint256 hashBlock;\n+        int nIndex;",
    "path": "src/wallet/wallet.h",
    "position": 54,
    "original_position": 52,
    "commit_id": "05b56d1c937b7667ad51400d2f9fb674af72953f",
    "original_commit_id": "c3a4d162c4f73f01f8b8ab6d3141eab0e7e1945b",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "No `CMerkleTx` object is ever serialized.\r\n\r\nI could go even further in this PR and remove the `CMerkleTx` object entirely. Let me add a commit to see what that looks like.",
    "created_at": "2019-07-24T15:52:08Z",
    "updated_at": "2019-07-30T15:57:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16451#discussion_r306888393",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16451",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/306888393"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16451#discussion_r306888393"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16451"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/306888393/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 381,
    "original_line": 381,
    "side": "RIGHT",
    "in_reply_to_id": 306879493
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/306934546",
    "pull_request_review_id": 266176380,
    "id": 306934546,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNjkzNDU0Ng==",
    "diff_hunk": "@@ -365,82 +365,24 @@ struct COutputEntry\n     int vout;\n };\n \n-/** A transaction with a merkle branch linking it to the block chain. */\n+/** Legacy class used for deserializing vtxPrev for backwards compatibility **/\n class CMerkleTx\n {\n-private:\n-  /** Constant used in hashBlock to indicate tx has been abandoned */\n-    static const uint256 ABANDON_HASH;\n-\n public:\n-    CTransactionRef tx;\n-    uint256 hashBlock;\n-\n-    /* An nIndex == -1 means that hashBlock (in nonzero) refers to the earliest\n-     * block in the chain we know this or any in-wallet dependency conflicts\n-     * with. Older clients interpret nIndex == -1 as unconfirmed for backward\n-     * compatibility.\n-     */\n-    int nIndex;\n-\n-    CMerkleTx()\n-    {\n-        SetTx(MakeTransactionRef());\n-        Init();\n-    }\n-\n-    explicit CMerkleTx(CTransactionRef arg)\n-    {\n-        SetTx(std::move(arg));\n-        Init();\n-    }\n-\n-    void Init()\n-    {\n-        hashBlock = uint256();\n-        nIndex = -1;\n-    }\n-\n-    void SetTx(CTransactionRef arg)\n-    {\n-        tx = std::move(arg);\n-    }\n-\n     ADD_SERIALIZE_METHODS;\n \n     template <typename Stream, typename Operation>\n     inline void SerializationOp(Stream& s, Operation ser_action) {\n+        CTransactionRef tx;\n+        uint256 hashBlock;\n+        int nIndex;",
    "path": "src/wallet/wallet.h",
    "position": 54,
    "original_position": 52,
    "commit_id": "05b56d1c937b7667ad51400d2f9fb674af72953f",
    "original_commit_id": "c3a4d162c4f73f01f8b8ab6d3141eab0e7e1945b",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yeah, I am interested in seeing that commit. That probably means you can get rid of the `static_cast<const CMerkleTx&>(*this)` that happens in the serialization of `CWalletTx`",
    "created_at": "2019-07-24T17:36:12Z",
    "updated_at": "2019-07-30T15:57:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16451#discussion_r306934546",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16451",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/306934546"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16451#discussion_r306934546"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16451"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/306934546/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 381,
    "original_line": 381,
    "side": "RIGHT",
    "in_reply_to_id": 306879493
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/306935848",
    "pull_request_review_id": 266178034,
    "id": 306935848,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNjkzNTg0OA==",
    "diff_hunk": "@@ -365,82 +365,24 @@ struct COutputEntry\n     int vout;\n };\n \n-/** A transaction with a merkle branch linking it to the block chain. */\n+/** Legacy class used for deserializing vtxPrev for backwards compatibility **/\n class CMerkleTx\n {\n-private:\n-  /** Constant used in hashBlock to indicate tx has been abandoned */\n-    static const uint256 ABANDON_HASH;\n-\n public:\n-    CTransactionRef tx;\n-    uint256 hashBlock;\n-\n-    /* An nIndex == -1 means that hashBlock (in nonzero) refers to the earliest\n-     * block in the chain we know this or any in-wallet dependency conflicts\n-     * with. Older clients interpret nIndex == -1 as unconfirmed for backward\n-     * compatibility.\n-     */\n-    int nIndex;\n-\n-    CMerkleTx()\n-    {\n-        SetTx(MakeTransactionRef());\n-        Init();\n-    }\n-\n-    explicit CMerkleTx(CTransactionRef arg)\n-    {\n-        SetTx(std::move(arg));\n-        Init();\n-    }\n-\n-    void Init()\n-    {\n-        hashBlock = uint256();\n-        nIndex = -1;\n-    }\n-\n-    void SetTx(CTransactionRef arg)\n-    {\n-        tx = std::move(arg);\n-    }\n-\n     ADD_SERIALIZE_METHODS;\n \n     template <typename Stream, typename Operation>\n     inline void SerializationOp(Stream& s, Operation ser_action) {\n+        CTransactionRef tx;\n+        uint256 hashBlock;\n+        int nIndex;",
    "path": "src/wallet/wallet.h",
    "position": 54,
    "original_position": 52,
    "commit_id": "05b56d1c937b7667ad51400d2f9fb674af72953f",
    "original_commit_id": "c3a4d162c4f73f01f8b8ab6d3141eab0e7e1945b",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "> `static_cast<const CMerkleTx&>(*this)`\r\n\r\nOh, that probably means that serialization *is* called, so I'd like to re-raise my previous question of uninitialized memory.",
    "created_at": "2019-07-24T17:39:15Z",
    "updated_at": "2019-07-30T15:57:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16451#discussion_r306935848",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16451",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/306935848"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16451#discussion_r306935848"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16451"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/306935848/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 381,
    "original_line": 381,
    "side": "RIGHT",
    "in_reply_to_id": 306879493
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/306949098",
    "pull_request_review_id": 266194523,
    "id": 306949098,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNjk0OTA5OA==",
    "diff_hunk": "@@ -365,82 +365,24 @@ struct COutputEntry\n     int vout;\n };\n \n-/** A transaction with a merkle branch linking it to the block chain. */\n+/** Legacy class used for deserializing vtxPrev for backwards compatibility **/\n class CMerkleTx\n {\n-private:\n-  /** Constant used in hashBlock to indicate tx has been abandoned */\n-    static const uint256 ABANDON_HASH;\n-\n public:\n-    CTransactionRef tx;\n-    uint256 hashBlock;\n-\n-    /* An nIndex == -1 means that hashBlock (in nonzero) refers to the earliest\n-     * block in the chain we know this or any in-wallet dependency conflicts\n-     * with. Older clients interpret nIndex == -1 as unconfirmed for backward\n-     * compatibility.\n-     */\n-    int nIndex;\n-\n-    CMerkleTx()\n-    {\n-        SetTx(MakeTransactionRef());\n-        Init();\n-    }\n-\n-    explicit CMerkleTx(CTransactionRef arg)\n-    {\n-        SetTx(std::move(arg));\n-        Init();\n-    }\n-\n-    void Init()\n-    {\n-        hashBlock = uint256();\n-        nIndex = -1;\n-    }\n-\n-    void SetTx(CTransactionRef arg)\n-    {\n-        tx = std::move(arg);\n-    }\n-\n     ADD_SERIALIZE_METHODS;\n \n     template <typename Stream, typename Operation>\n     inline void SerializationOp(Stream& s, Operation ser_action) {\n+        CTransactionRef tx;\n+        uint256 hashBlock;\n+        int nIndex;",
    "path": "src/wallet/wallet.h",
    "position": 54,
    "original_position": 52,
    "commit_id": "05b56d1c937b7667ad51400d2f9fb674af72953f",
    "original_commit_id": "c3a4d162c4f73f01f8b8ab6d3141eab0e7e1945b",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "> That probably means you can get rid of the static_cast<const CMerkleTx&>(*this) that happens in the serialization of CWalletTx\r\n\r\nHuh? This PR already does get rid of the `static_cast<const CMerkleTx&>(*this)`",
    "created_at": "2019-07-24T18:08:59Z",
    "updated_at": "2019-07-30T15:57:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16451#discussion_r306949098",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16451",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/306949098"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16451#discussion_r306949098"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16451"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/306949098/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 381,
    "original_line": 381,
    "side": "RIGHT",
    "in_reply_to_id": 306879493
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/306949473",
    "pull_request_review_id": 266195009,
    "id": 306949473,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNjk0OTQ3Mw==",
    "diff_hunk": "@@ -365,82 +365,24 @@ struct COutputEntry\n     int vout;\n };\n \n-/** A transaction with a merkle branch linking it to the block chain. */\n+/** Legacy class used for deserializing vtxPrev for backwards compatibility **/",
    "path": "src/wallet/wallet.h",
    "position": null,
    "original_position": 5,
    "commit_id": "05b56d1c937b7667ad51400d2f9fb674af72953f",
    "original_commit_id": "c3a4d162c4f73f01f8b8ab6d3141eab0e7e1945b",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I've expanded the comment here",
    "created_at": "2019-07-24T18:10:00Z",
    "updated_at": "2019-07-30T15:57:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16451#discussion_r306949473",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16451",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/306949473"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16451#discussion_r306949473"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16451"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/306949473/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 368,
    "side": "RIGHT",
    "in_reply_to_id": 306876633
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/306950209",
    "pull_request_review_id": 266195974,
    "id": 306950209,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNjk1MDIwOQ==",
    "diff_hunk": "@@ -365,82 +365,24 @@ struct COutputEntry\n     int vout;\n };\n \n-/** A transaction with a merkle branch linking it to the block chain. */\n+/** Legacy class used for deserializing vtxPrev for backwards compatibility.\n+ * vtxPrev was removed in commit 93a18a3650292afbb441a47d1fa1b94aeb0164e3,\n+ * but old wallet.dat files may still contain vtxPrev vectors of CMerkleTxs.\n+ * These need to get deserialized for field alignment when deserializing\n+ * a CWalletTx, but the deserialized values are discarded.**/\n class CMerkleTx\n {\n-private:\n-  /** Constant used in hashBlock to indicate tx has been abandoned */\n-    static const uint256 ABANDON_HASH;\n-\n public:\n-    CTransactionRef tx;\n-    uint256 hashBlock;\n-\n-    /* An nIndex == -1 means that hashBlock (in nonzero) refers to the earliest\n-     * block in the chain we know this or any in-wallet dependency conflicts\n-     * with. Older clients interpret nIndex == -1 as unconfirmed for backward\n-     * compatibility.\n-     */\n-    int nIndex;\n-\n-    CMerkleTx()\n-    {\n-        SetTx(MakeTransactionRef());\n-        Init();\n-    }\n-\n-    explicit CMerkleTx(CTransactionRef arg)\n-    {\n-        SetTx(std::move(arg));\n-        Init();\n-    }\n-\n-    void Init()\n-    {\n-        hashBlock = uint256();\n-        nIndex = -1;\n-    }\n-\n-    void SetTx(CTransactionRef arg)\n+    template<typename Stream>\n+    void Unserialize(Stream& s)\n     {\n-        tx = std::move(arg);\n-    }\n+        CTransactionRef tx;\n+        uint256 hashBlock;\n+        std::vector<uint256> vMerkleBranch;\n+        int nIndex;\n \n-    ADD_SERIALIZE_METHODS;\n-\n-    template <typename Stream, typename Operation>\n-    inline void SerializationOp(Stream& s, Operation ser_action) {\n-        std::vector<uint256> vMerkleBranch; // For compatibility with older versions.\n-        READWRITE(tx);\n-        READWRITE(hashBlock);\n-        READWRITE(vMerkleBranch);\n-        READWRITE(nIndex);\n+        s << tx << hashBlock << vMerkleBranch << nIndex;",
    "path": "src/wallet/wallet.h",
    "position": null,
    "original_position": 65,
    "commit_id": "05b56d1c937b7667ad51400d2f9fb674af72953f",
    "original_commit_id": "f7fe30c7c00d8e2667181fcded8dc0a354d0888f",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "You're invoking the serialization operators inside an Unserialize function. I suspect you mean to call the `>>` ones instead.",
    "created_at": "2019-07-24T18:11:47Z",
    "updated_at": "2019-07-30T15:57:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16451#discussion_r306950209",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16451",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/306950209"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16451#discussion_r306950209"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16451"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/306950209/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 384,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/307034222",
    "pull_request_review_id": 266302100,
    "id": 307034222,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNzAzNDIyMg==",
    "diff_hunk": "@@ -365,82 +365,24 @@ struct COutputEntry\n     int vout;\n };\n \n-/** A transaction with a merkle branch linking it to the block chain. */\n+/** Legacy class used for deserializing vtxPrev for backwards compatibility.\n+ * vtxPrev was removed in commit 93a18a3650292afbb441a47d1fa1b94aeb0164e3,\n+ * but old wallet.dat files may still contain vtxPrev vectors of CMerkleTxs.\n+ * These need to get deserialized for field alignment when deserializing\n+ * a CWalletTx, but the deserialized values are discarded.**/\n class CMerkleTx\n {\n-private:\n-  /** Constant used in hashBlock to indicate tx has been abandoned */\n-    static const uint256 ABANDON_HASH;\n-\n public:\n-    CTransactionRef tx;\n-    uint256 hashBlock;\n-\n-    /* An nIndex == -1 means that hashBlock (in nonzero) refers to the earliest\n-     * block in the chain we know this or any in-wallet dependency conflicts\n-     * with. Older clients interpret nIndex == -1 as unconfirmed for backward\n-     * compatibility.\n-     */\n-    int nIndex;\n-\n-    CMerkleTx()\n-    {\n-        SetTx(MakeTransactionRef());\n-        Init();\n-    }\n-\n-    explicit CMerkleTx(CTransactionRef arg)\n-    {\n-        SetTx(std::move(arg));\n-        Init();\n-    }\n-\n-    void Init()\n-    {\n-        hashBlock = uint256();\n-        nIndex = -1;\n-    }\n-\n-    void SetTx(CTransactionRef arg)\n+    template<typename Stream>\n+    void Unserialize(Stream& s)\n     {\n-        tx = std::move(arg);\n-    }\n+        CTransactionRef tx;\n+        uint256 hashBlock;\n+        std::vector<uint256> vMerkleBranch;\n+        int nIndex;\n \n-    ADD_SERIALIZE_METHODS;\n-\n-    template <typename Stream, typename Operation>\n-    inline void SerializationOp(Stream& s, Operation ser_action) {\n-        std::vector<uint256> vMerkleBranch; // For compatibility with older versions.\n-        READWRITE(tx);\n-        READWRITE(hashBlock);\n-        READWRITE(vMerkleBranch);\n-        READWRITE(nIndex);\n+        s << tx << hashBlock << vMerkleBranch << nIndex;",
    "path": "src/wallet/wallet.h",
    "position": null,
    "original_position": 65,
    "commit_id": "05b56d1c937b7667ad51400d2f9fb674af72953f",
    "original_commit_id": "f7fe30c7c00d8e2667181fcded8dc0a354d0888f",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "gah. Thanks. Fixed.",
    "created_at": "2019-07-24T21:41:59Z",
    "updated_at": "2019-07-30T15:57:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16451#discussion_r307034222",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16451",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/307034222"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16451#discussion_r307034222"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16451"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/307034222/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 384,
    "side": "RIGHT",
    "in_reply_to_id": 306950209
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/307051192",
    "pull_request_review_id": 266323232,
    "id": 307051192,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNzA1MTE5Mg==",
    "diff_hunk": "@@ -365,82 +365,24 @@ struct COutputEntry\n     int vout;\n };\n \n-/** A transaction with a merkle branch linking it to the block chain. */\n+/** Legacy class used for deserializing vtxPrev for backwards compatibility **/\n class CMerkleTx\n {\n-private:\n-  /** Constant used in hashBlock to indicate tx has been abandoned */\n-    static const uint256 ABANDON_HASH;\n-\n public:\n-    CTransactionRef tx;\n-    uint256 hashBlock;\n-\n-    /* An nIndex == -1 means that hashBlock (in nonzero) refers to the earliest\n-     * block in the chain we know this or any in-wallet dependency conflicts\n-     * with. Older clients interpret nIndex == -1 as unconfirmed for backward\n-     * compatibility.\n-     */\n-    int nIndex;\n-\n-    CMerkleTx()\n-    {\n-        SetTx(MakeTransactionRef());\n-        Init();\n-    }\n-\n-    explicit CMerkleTx(CTransactionRef arg)\n-    {\n-        SetTx(std::move(arg));\n-        Init();\n-    }\n-\n-    void Init()\n-    {\n-        hashBlock = uint256();\n-        nIndex = -1;\n-    }\n-\n-    void SetTx(CTransactionRef arg)\n-    {\n-        tx = std::move(arg);\n-    }\n-\n     ADD_SERIALIZE_METHODS;\n \n     template <typename Stream, typename Operation>\n     inline void SerializationOp(Stream& s, Operation ser_action) {\n+        CTransactionRef tx;\n+        uint256 hashBlock;\n+        int nIndex;",
    "path": "src/wallet/wallet.h",
    "position": 54,
    "original_position": 52,
    "commit_id": "05b56d1c937b7667ad51400d2f9fb674af72953f",
    "original_commit_id": "c3a4d162c4f73f01f8b8ab6d3141eab0e7e1945b",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "fd2773f2eba659d78fae9d74461d9dd952609aa9\r\n\r\n> No CMerkleTx object is ever serialized.\r\n\r\nRight, the vector is always empty. You could add `assert(ser_action.ForRead())`. But the following removes the serialization support so maybe not worth it?",
    "created_at": "2019-07-24T22:43:40Z",
    "updated_at": "2019-07-30T15:57:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16451#discussion_r307051192",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16451",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/307051192"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16451#discussion_r307051192"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16451"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/307051192/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 381,
    "original_line": 381,
    "side": "RIGHT",
    "in_reply_to_id": 306879493
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/307051619",
    "pull_request_review_id": 266323232,
    "id": 307051619,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNzA1MTYxOQ==",
    "diff_hunk": "@@ -512,7 +461,10 @@ class CWalletTx : public CMerkleTx\n     mutable bool fInMempool;\n     mutable CAmount nChangeCached;\n \n-    CWalletTx(const CWallet* pwalletIn, CTransactionRef arg) : CMerkleTx(std::move(arg))\n+    CWalletTx(const CWallet* pwalletIn, CTransactionRef arg)\n+        : tx(std::move(arg)),\n+          hashBlock(uint256()),",
    "path": "src/wallet/wallet.h",
    "position": 118,
    "original_position": 114,
    "commit_id": "05b56d1c937b7667ad51400d2f9fb674af72953f",
    "original_commit_id": "fd2773f2eba659d78fae9d74461d9dd952609aa9",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "fd2773f2eba659d78fae9d74461d9dd952609aa9\r\n\r\nnit, personally I prefer\r\n```cpp\r\n: tx(std::move(arg))\r\n, hashBlock(uint256())\r\n, nIndex(-1)\r\n```",
    "created_at": "2019-07-24T22:45:32Z",
    "updated_at": "2019-07-30T15:57:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16451#discussion_r307051619",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16451",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/307051619"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16451#discussion_r307051619"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16451"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/307051619/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 461,
    "original_line": 461,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/307067374",
    "pull_request_review_id": 266323232,
    "id": 307067374,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNzA2NzM3NA==",
    "diff_hunk": "@@ -505,22 +500,21 @@ class CWalletTx\n             mapValueCopy[\"timesmart\"] = strprintf(\"%u\", nTimeSmart);\n         }\n \n-        std::vector<uint256> dummy_vector; //!< Used to be vMerkleBranch\n-        s << tx << hashBlock << dummy_vector << nIndex;\n-        std::vector<CMerkleTx> vUnused; //!< Used to be vtxPrev\n-        s << vUnused << mapValueCopy << vOrderForm << fTimeReceivedIsTxTime << nTimeReceived << fFromMe << fSpent;\n+        std::vector<char> dummy_vector1; //!< Used to be vMerkleBranch\n+        std::vector<char> dummy_vector2; //!< Used to be vtxPrev",
    "path": "src/wallet/wallet.h",
    "position": 151,
    "original_position": 44,
    "commit_id": "05b56d1c937b7667ad51400d2f9fb674af72953f",
    "original_commit_id": "fad5decb1fdab249f626c6468174c50be15f14cf",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "fad5decb1fdab249f626c6468174c50be15f14cf\r\n\r\nJust to be sure, this means that an empty `vector<char>` serialized is compatible with the unserialization of `vector<CMerkleTx>`?\r\n\r\nEdit: nervermind, went and see `Unserialize_impl` for vectors.",
    "created_at": "2019-07-24T23:56:24Z",
    "updated_at": "2019-07-30T15:57:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16451#discussion_r307067374",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16451",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/307067374"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16451#discussion_r307067374"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16451"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/307067374/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 503,
    "original_line": 503,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/307068102",
    "pull_request_review_id": 266323232,
    "id": 307068102,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNzA2ODEwMg==",
    "diff_hunk": "@@ -505,22 +500,21 @@ class CWalletTx\n             mapValueCopy[\"timesmart\"] = strprintf(\"%u\", nTimeSmart);\n         }\n \n-        std::vector<uint256> dummy_vector; //!< Used to be vMerkleBranch\n-        s << tx << hashBlock << dummy_vector << nIndex;\n-        std::vector<CMerkleTx> vUnused; //!< Used to be vtxPrev\n-        s << vUnused << mapValueCopy << vOrderForm << fTimeReceivedIsTxTime << nTimeReceived << fFromMe << fSpent;\n+        std::vector<char> dummy_vector1; //!< Used to be vMerkleBranch\n+        std::vector<char> dummy_vector2; //!< Used to be vtxPrev\n+        char dummy_char = false; //!< Used to be fSpent\n+        s << tx << hashBlock << dummy_vector1 << nIndex << dummy_vector2 << mapValueCopy << vOrderForm << fTimeReceivedIsTxTime << nTimeReceived << fFromMe << dummy_char;\n     }\n \n     template<typename Stream>\n     void Unserialize(Stream& s)\n     {\n         Init(nullptr);\n-        char fSpent;\n \n-        std::vector<uint256> dummy_vector; //!< Used to be vMerkleBranch\n-        s >> tx >> hashBlock >> dummy_vector >> nIndex;\n-        std::vector<CMerkleTx> vUnused; //!< Used to be vtxPrev\n-        s >> vUnused >> mapValue >> vOrderForm >> fTimeReceivedIsTxTime >> nTimeReceived >> fFromMe >> fSpent;\n+        std::vector<uint256> dummy_vector1; //!< Used to be vMerkleBranch\n+        std::vector<CMerkleTx> dummy_vector2; //!< Used to be vtxPrev",
    "path": "src/wallet/wallet.h",
    "position": 166,
    "original_position": 60,
    "commit_id": "05b56d1c937b7667ad51400d2f9fb674af72953f",
    "original_commit_id": "fad5decb1fdab249f626c6468174c50be15f14cf",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "fad5decb1fdab249f626c6468174c50be15f14cf\r\n\r\nCould remove this and inline `CMerkleTx::Unserialize`, see:\r\n\r\n<details>\r\n\r\n```diff\r\n--- a/src/wallet/wallet.h\r\n+++ b/src/wallet/wallet.h\r\n@@ -365,26 +365,6 @@ struct COutputEntry\r\n     int vout;\r\n };\r\n\r\n-/** Legacy class used for deserializing vtxPrev for backwards compatibility.\r\n- * vtxPrev was removed in commit 93a18a3650292afbb441a47d1fa1b94aeb0164e3,\r\n- * but old wallet.dat files may still contain vtxPrev vectors of CMerkleTxs.\r\n- * These need to get deserialized for field alignment when deserializing\r\n- * a CWalletTx, but the deserialized values are discarded.**/\r\n-class CMerkleTx\r\n-{\r\n-public:\r\n-    template<typename Stream>\r\n-    void Unserialize(Stream& s)\r\n-    {\r\n-        CTransactionRef tx;\r\n-        uint256 hashBlock;\r\n-        std::vector<uint256> vMerkleBranch;\r\n-        int nIndex;\r\n-\r\n-        s >> tx >> hashBlock >> vMerkleBranch >> nIndex;\r\n-    }\r\n-};\r\n-\r\n //Get the marginal bytes of spending the specified output\r\n int CalculateMaximumSignedInputSize(const CTxOut& txout, const CWallet* pwallet, bool use_max_sig = false);\r\n\r\n@@ -512,9 +492,17 @@ public:\r\n         Init(nullptr);\r\n\r\n         std::vector<uint256> dummy_vector1; //!< Used to be vMerkleBranch\r\n-        std::vector<CMerkleTx> dummy_vector2; //!< Used to be vtxPrev\r\n         char dummy_char; //! Used to be fSpent\r\n-        s >> tx >> hashBlock >> dummy_vector1 >> nIndex >> dummy_vector2 >> mapValue >> vOrderForm >> fTimeReceivedIsTxTime >> nTimeReceived >> fFromMe >> dummy_char;\r\n+        s >> tx >> hashBlock >> dummy_vector1 >> nIndex;\r\n+        {\r\n+            CTransactionRef tx;\r\n+            uint256 hashBlock;\r\n+            std::vector<uint256> vMerkleBranch;\r\n+            int nIndex;\r\n+\r\n+            s >> tx >> hashBlock >> vMerkleBranch >> nIndex; //!< Used to be vtxPrev\r\n+        }\r\n+        s >> mapValue >> vOrderForm >> fTimeReceivedIsTxTime >> nTimeReceived >> fFromMe >> dummy_char;\r\n\r\n         ReadOrderPos(nOrderPos, mapValue);\r\n         nTimeSmart = mapValue.count(\"timesmart\") ? (unsigned int)atoi64(mapValue[\"timesmart\"]) : 0;\r\n```\r\n\r\n</details>\r\n\r\nAnd if you do so then I'd squash now that `CMerkleTx` is actually removed.",
    "created_at": "2019-07-25T00:00:23Z",
    "updated_at": "2019-07-30T15:57:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16451#discussion_r307068102",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16451",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/307068102"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16451#discussion_r307068102"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16451"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/307068102/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 514,
    "original_line": 514,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/307308874",
    "pull_request_review_id": 266642015,
    "id": 307308874,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNzMwODg3NA==",
    "diff_hunk": "@@ -512,7 +461,10 @@ class CWalletTx : public CMerkleTx\n     mutable bool fInMempool;\n     mutable CAmount nChangeCached;\n \n-    CWalletTx(const CWallet* pwalletIn, CTransactionRef arg) : CMerkleTx(std::move(arg))\n+    CWalletTx(const CWallet* pwalletIn, CTransactionRef arg)\n+        : tx(std::move(arg)),\n+          hashBlock(uint256()),",
    "path": "src/wallet/wallet.h",
    "position": 118,
    "original_position": 114,
    "commit_id": "05b56d1c937b7667ad51400d2f9fb674af72953f",
    "original_commit_id": "fd2773f2eba659d78fae9d74461d9dd952609aa9",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "That is neither in the style-guide nor in `clang-format`",
    "created_at": "2019-07-25T13:55:31Z",
    "updated_at": "2019-07-30T15:57:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16451#discussion_r307308874",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16451",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/307308874"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16451#discussion_r307308874"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16451"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/307308874/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 461,
    "original_line": 461,
    "side": "RIGHT",
    "in_reply_to_id": 307051619
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/307310363",
    "pull_request_review_id": 266643979,
    "id": 307310363,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNzMxMDM2Mw==",
    "diff_hunk": "@@ -365,82 +365,24 @@ struct COutputEntry\n     int vout;\n };\n \n-/** A transaction with a merkle branch linking it to the block chain. */\n+/** Legacy class used for deserializing vtxPrev for backwards compatibility **/\n class CMerkleTx\n {\n-private:\n-  /** Constant used in hashBlock to indicate tx has been abandoned */\n-    static const uint256 ABANDON_HASH;\n-\n public:\n-    CTransactionRef tx;\n-    uint256 hashBlock;\n-\n-    /* An nIndex == -1 means that hashBlock (in nonzero) refers to the earliest\n-     * block in the chain we know this or any in-wallet dependency conflicts\n-     * with. Older clients interpret nIndex == -1 as unconfirmed for backward\n-     * compatibility.\n-     */\n-    int nIndex;\n-\n-    CMerkleTx()\n-    {\n-        SetTx(MakeTransactionRef());\n-        Init();\n-    }\n-\n-    explicit CMerkleTx(CTransactionRef arg)\n-    {\n-        SetTx(std::move(arg));\n-        Init();\n-    }\n-\n-    void Init()\n-    {\n-        hashBlock = uint256();\n-        nIndex = -1;\n-    }\n-\n-    void SetTx(CTransactionRef arg)\n-    {\n-        tx = std::move(arg);\n-    }\n-\n     ADD_SERIALIZE_METHODS;\n \n     template <typename Stream, typename Operation>\n     inline void SerializationOp(Stream& s, Operation ser_action) {\n+        CTransactionRef tx;\n+        uint256 hashBlock;\n+        int nIndex;",
    "path": "src/wallet/wallet.h",
    "position": 54,
    "original_position": 52,
    "commit_id": "05b56d1c937b7667ad51400d2f9fb674af72953f",
    "original_commit_id": "c3a4d162c4f73f01f8b8ab6d3141eab0e7e1945b",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I like the assert",
    "created_at": "2019-07-25T13:58:19Z",
    "updated_at": "2019-07-30T15:57:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16451#discussion_r307310363",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16451",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/307310363"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16451#discussion_r307310363"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16451"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/307310363/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 381,
    "original_line": 381,
    "side": "RIGHT",
    "in_reply_to_id": 306879493
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/307311451",
    "pull_request_review_id": 266645400,
    "id": 307311451,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNzMxMTQ1MQ==",
    "diff_hunk": "@@ -505,22 +500,21 @@ class CWalletTx\n             mapValueCopy[\"timesmart\"] = strprintf(\"%u\", nTimeSmart);\n         }\n \n-        std::vector<uint256> dummy_vector; //!< Used to be vMerkleBranch\n-        s << tx << hashBlock << dummy_vector << nIndex;\n-        std::vector<CMerkleTx> vUnused; //!< Used to be vtxPrev\n-        s << vUnused << mapValueCopy << vOrderForm << fTimeReceivedIsTxTime << nTimeReceived << fFromMe << fSpent;\n+        std::vector<char> dummy_vector1; //!< Used to be vMerkleBranch\n+        std::vector<char> dummy_vector2; //!< Used to be vtxPrev\n+        char dummy_char = false; //!< Used to be fSpent\n+        s << tx << hashBlock << dummy_vector1 << nIndex << dummy_vector2 << mapValueCopy << vOrderForm << fTimeReceivedIsTxTime << nTimeReceived << fFromMe << dummy_char;\n     }\n \n     template<typename Stream>\n     void Unserialize(Stream& s)\n     {\n         Init(nullptr);\n-        char fSpent;\n \n-        std::vector<uint256> dummy_vector; //!< Used to be vMerkleBranch\n-        s >> tx >> hashBlock >> dummy_vector >> nIndex;\n-        std::vector<CMerkleTx> vUnused; //!< Used to be vtxPrev\n-        s >> vUnused >> mapValue >> vOrderForm >> fTimeReceivedIsTxTime >> nTimeReceived >> fFromMe >> fSpent;\n+        std::vector<uint256> dummy_vector1; //!< Used to be vMerkleBranch\n+        std::vector<CMerkleTx> dummy_vector2; //!< Used to be vtxPrev",
    "path": "src/wallet/wallet.h",
    "position": 166,
    "original_position": 60,
    "commit_id": "05b56d1c937b7667ad51400d2f9fb674af72953f",
    "original_commit_id": "fad5decb1fdab249f626c6468174c50be15f14cf",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This isn't equivalent. `vtxPrev` was a vector, so:\r\n\r\n- there can be multiple `CMerkleTx` objects serialized\r\n- the serialization is preceded with a compactSize\r\n\r\nI would like to remove `CMerkleTx` entirely, but implementing the low-lever deserialization logic for a vector of `CMerkleTx`s here seems like it could be easy to introduce an inconsistency (potentially causing wallets to get corrupted) and it seems wrong to be adding low-level deserialization code to this file.",
    "created_at": "2019-07-25T14:00:20Z",
    "updated_at": "2019-07-30T15:57:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16451#discussion_r307311451",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16451",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/307311451"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16451#discussion_r307311451"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16451"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/307311451/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 514,
    "original_line": 514,
    "side": "RIGHT",
    "in_reply_to_id": 307068102
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/307311779",
    "pull_request_review_id": 266645835,
    "id": 307311779,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNzMxMTc3OQ==",
    "diff_hunk": "@@ -505,22 +500,21 @@ class CWalletTx\n             mapValueCopy[\"timesmart\"] = strprintf(\"%u\", nTimeSmart);\n         }\n \n-        std::vector<uint256> dummy_vector; //!< Used to be vMerkleBranch\n-        s << tx << hashBlock << dummy_vector << nIndex;\n-        std::vector<CMerkleTx> vUnused; //!< Used to be vtxPrev\n-        s << vUnused << mapValueCopy << vOrderForm << fTimeReceivedIsTxTime << nTimeReceived << fFromMe << fSpent;\n+        std::vector<char> dummy_vector1; //!< Used to be vMerkleBranch\n+        std::vector<char> dummy_vector2; //!< Used to be vtxPrev",
    "path": "src/wallet/wallet.h",
    "position": 151,
    "original_position": 44,
    "commit_id": "05b56d1c937b7667ad51400d2f9fb674af72953f",
    "original_commit_id": "fad5decb1fdab249f626c6468174c50be15f14cf",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Correct. Empty `vector<>`s get serialized to a single 0 byte (the compactSize of an empty vector)",
    "created_at": "2019-07-25T14:00:58Z",
    "updated_at": "2019-07-30T15:57:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16451#discussion_r307311779",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16451",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/307311779"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16451#discussion_r307311779"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16451"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/307311779/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 503,
    "original_line": 503,
    "side": "RIGHT",
    "in_reply_to_id": 307067374
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/307312156",
    "pull_request_review_id": 266646359,
    "id": 307312156,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNzMxMjE1Ng==",
    "diff_hunk": "@@ -365,82 +365,24 @@ struct COutputEntry\n     int vout;\n };\n \n-/** A transaction with a merkle branch linking it to the block chain. */\n+/** Legacy class used for deserializing vtxPrev for backwards compatibility **/\n class CMerkleTx\n {\n-private:\n-  /** Constant used in hashBlock to indicate tx has been abandoned */\n-    static const uint256 ABANDON_HASH;\n-\n public:\n-    CTransactionRef tx;\n-    uint256 hashBlock;\n-\n-    /* An nIndex == -1 means that hashBlock (in nonzero) refers to the earliest\n-     * block in the chain we know this or any in-wallet dependency conflicts\n-     * with. Older clients interpret nIndex == -1 as unconfirmed for backward\n-     * compatibility.\n-     */\n-    int nIndex;\n-\n-    CMerkleTx()\n-    {\n-        SetTx(MakeTransactionRef());\n-        Init();\n-    }\n-\n-    explicit CMerkleTx(CTransactionRef arg)\n-    {\n-        SetTx(std::move(arg));\n-        Init();\n-    }\n-\n-    void Init()\n-    {\n-        hashBlock = uint256();\n-        nIndex = -1;\n-    }\n-\n-    void SetTx(CTransactionRef arg)\n-    {\n-        tx = std::move(arg);\n-    }\n-\n     ADD_SERIALIZE_METHODS;\n \n     template <typename Stream, typename Operation>\n     inline void SerializationOp(Stream& s, Operation ser_action) {\n+        CTransactionRef tx;\n+        uint256 hashBlock;\n+        int nIndex;",
    "path": "src/wallet/wallet.h",
    "position": 54,
    "original_position": 52,
    "commit_id": "05b56d1c937b7667ad51400d2f9fb674af72953f",
    "original_commit_id": "c3a4d162c4f73f01f8b8ab6d3141eab0e7e1945b",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "> But the following removes the serialization support so maybe not worth it?\r\n\r\nI agree (if we decide to keep the second commit)",
    "created_at": "2019-07-25T14:01:45Z",
    "updated_at": "2019-07-30T15:57:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16451#discussion_r307312156",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16451",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/307312156"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16451#discussion_r307312156"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16451"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/307312156/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 381,
    "original_line": 381,
    "side": "RIGHT",
    "in_reply_to_id": 306879493
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/307328049",
    "pull_request_review_id": 266667149,
    "id": 307328049,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNzMyODA0OQ==",
    "diff_hunk": "@@ -505,22 +500,21 @@ class CWalletTx\n             mapValueCopy[\"timesmart\"] = strprintf(\"%u\", nTimeSmart);\n         }\n \n-        std::vector<uint256> dummy_vector; //!< Used to be vMerkleBranch\n-        s << tx << hashBlock << dummy_vector << nIndex;\n-        std::vector<CMerkleTx> vUnused; //!< Used to be vtxPrev\n-        s << vUnused << mapValueCopy << vOrderForm << fTimeReceivedIsTxTime << nTimeReceived << fFromMe << fSpent;\n+        std::vector<char> dummy_vector1; //!< Used to be vMerkleBranch\n+        std::vector<char> dummy_vector2; //!< Used to be vtxPrev\n+        char dummy_char = false; //!< Used to be fSpent\n+        s << tx << hashBlock << dummy_vector1 << nIndex << dummy_vector2 << mapValueCopy << vOrderForm << fTimeReceivedIsTxTime << nTimeReceived << fFromMe << dummy_char;\n     }\n \n     template<typename Stream>\n     void Unserialize(Stream& s)\n     {\n         Init(nullptr);\n-        char fSpent;",
    "path": "src/wallet/wallet.h",
    "position": 160,
    "original_position": 53,
    "commit_id": "05b56d1c937b7667ad51400d2f9fb674af72953f",
    "original_commit_id": "fad5decb1fdab249f626c6468174c50be15f14cf",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "in commit fad5decb1fdab249f626c6468174c:\r\n\r\nI think this function does not need to be changed and can be kept as is.",
    "created_at": "2019-07-25T14:31:49Z",
    "updated_at": "2019-07-30T15:57:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16451#discussion_r307328049",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16451",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/307328049"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16451#discussion_r307328049"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16451"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/307328049/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 555,
    "original_line": 555,
    "side": "LEFT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/307328695",
    "pull_request_review_id": 266667149,
    "id": 307328695,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNzMyODY5NQ==",
    "diff_hunk": "@@ -505,22 +500,21 @@ class CWalletTx\n             mapValueCopy[\"timesmart\"] = strprintf(\"%u\", nTimeSmart);\n         }\n \n-        std::vector<uint256> dummy_vector; //!< Used to be vMerkleBranch\n-        s << tx << hashBlock << dummy_vector << nIndex;\n-        std::vector<CMerkleTx> vUnused; //!< Used to be vtxPrev\n-        s << vUnused << mapValueCopy << vOrderForm << fTimeReceivedIsTxTime << nTimeReceived << fFromMe << fSpent;\n+        std::vector<char> dummy_vector1; //!< Used to be vMerkleBranch\n+        std::vector<char> dummy_vector2; //!< Used to be vtxPrev",
    "path": "src/wallet/wallet.h",
    "position": 151,
    "original_position": 44,
    "commit_id": "05b56d1c937b7667ad51400d2f9fb674af72953f",
    "original_commit_id": "fad5decb1fdab249f626c6468174c50be15f14cf",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "in commit fad5dec:\r\n\r\nI think you can keep everything in this function as is (except changing the type of the vector). This should simplify review.",
    "created_at": "2019-07-25T14:32:58Z",
    "updated_at": "2019-07-30T15:57:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16451#discussion_r307328695",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16451",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/307328695"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16451#discussion_r307328695"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16451"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/307328695/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 503,
    "original_line": 503,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/307344434",
    "pull_request_review_id": 266688065,
    "id": 307344434,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNzM0NDQzNA==",
    "diff_hunk": "@@ -505,22 +500,21 @@ class CWalletTx\n             mapValueCopy[\"timesmart\"] = strprintf(\"%u\", nTimeSmart);\n         }\n \n-        std::vector<uint256> dummy_vector; //!< Used to be vMerkleBranch\n-        s << tx << hashBlock << dummy_vector << nIndex;\n-        std::vector<CMerkleTx> vUnused; //!< Used to be vtxPrev\n-        s << vUnused << mapValueCopy << vOrderForm << fTimeReceivedIsTxTime << nTimeReceived << fFromMe << fSpent;\n+        std::vector<char> dummy_vector1; //!< Used to be vMerkleBranch\n+        std::vector<char> dummy_vector2; //!< Used to be vtxPrev\n+        char dummy_char = false; //!< Used to be fSpent\n+        s << tx << hashBlock << dummy_vector1 << nIndex << dummy_vector2 << mapValueCopy << vOrderForm << fTimeReceivedIsTxTime << nTimeReceived << fFromMe << dummy_char;\n     }\n \n     template<typename Stream>\n     void Unserialize(Stream& s)\n     {\n         Init(nullptr);\n-        char fSpent;",
    "path": "src/wallet/wallet.h",
    "position": 160,
    "original_position": 53,
    "commit_id": "05b56d1c937b7667ad51400d2f9fb674af72953f",
    "original_commit_id": "fad5decb1fdab249f626c6468174c50be15f14cf",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "See https://github.com/bitcoin/bitcoin/pull/16451#issuecomment-515080038. I'll remove everything after the first commit if others agree.",
    "created_at": "2019-07-25T15:01:10Z",
    "updated_at": "2019-07-30T15:57:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16451#discussion_r307344434",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16451",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/307344434"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16451#discussion_r307344434"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16451"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/307344434/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 555,
    "original_line": 555,
    "side": "LEFT",
    "in_reply_to_id": 307328049
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/307344463",
    "pull_request_review_id": 266688108,
    "id": 307344463,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNzM0NDQ2Mw==",
    "diff_hunk": "@@ -505,22 +500,21 @@ class CWalletTx\n             mapValueCopy[\"timesmart\"] = strprintf(\"%u\", nTimeSmart);\n         }\n \n-        std::vector<uint256> dummy_vector; //!< Used to be vMerkleBranch\n-        s << tx << hashBlock << dummy_vector << nIndex;\n-        std::vector<CMerkleTx> vUnused; //!< Used to be vtxPrev\n-        s << vUnused << mapValueCopy << vOrderForm << fTimeReceivedIsTxTime << nTimeReceived << fFromMe << fSpent;\n+        std::vector<char> dummy_vector1; //!< Used to be vMerkleBranch\n+        std::vector<char> dummy_vector2; //!< Used to be vtxPrev",
    "path": "src/wallet/wallet.h",
    "position": 151,
    "original_position": 44,
    "commit_id": "05b56d1c937b7667ad51400d2f9fb674af72953f",
    "original_commit_id": "fad5decb1fdab249f626c6468174c50be15f14cf",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "See https://github.com/bitcoin/bitcoin/pull/16451#issuecomment-515080038. I'll remove everything after the first commit if others agree.",
    "created_at": "2019-07-25T15:01:15Z",
    "updated_at": "2019-07-30T15:57:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16451#discussion_r307344463",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16451",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/307344463"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16451#discussion_r307344463"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16451"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/307344463/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 503,
    "original_line": 503,
    "side": "RIGHT",
    "in_reply_to_id": 307328695
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/307350173",
    "pull_request_review_id": 266695379,
    "id": 307350173,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNzM1MDE3Mw==",
    "diff_hunk": "@@ -505,22 +500,21 @@ class CWalletTx\n             mapValueCopy[\"timesmart\"] = strprintf(\"%u\", nTimeSmart);\n         }\n \n-        std::vector<uint256> dummy_vector; //!< Used to be vMerkleBranch\n-        s << tx << hashBlock << dummy_vector << nIndex;\n-        std::vector<CMerkleTx> vUnused; //!< Used to be vtxPrev\n-        s << vUnused << mapValueCopy << vOrderForm << fTimeReceivedIsTxTime << nTimeReceived << fFromMe << fSpent;\n+        std::vector<char> dummy_vector1; //!< Used to be vMerkleBranch\n+        std::vector<char> dummy_vector2; //!< Used to be vtxPrev\n+        char dummy_char = false; //!< Used to be fSpent\n+        s << tx << hashBlock << dummy_vector1 << nIndex << dummy_vector2 << mapValueCopy << vOrderForm << fTimeReceivedIsTxTime << nTimeReceived << fFromMe << dummy_char;\n     }\n \n     template<typename Stream>\n     void Unserialize(Stream& s)\n     {\n         Init(nullptr);\n-        char fSpent;\n \n-        std::vector<uint256> dummy_vector; //!< Used to be vMerkleBranch\n-        s >> tx >> hashBlock >> dummy_vector >> nIndex;\n-        std::vector<CMerkleTx> vUnused; //!< Used to be vtxPrev\n-        s >> vUnused >> mapValue >> vOrderForm >> fTimeReceivedIsTxTime >> nTimeReceived >> fFromMe >> fSpent;\n+        std::vector<uint256> dummy_vector1; //!< Used to be vMerkleBranch\n+        std::vector<CMerkleTx> dummy_vector2; //!< Used to be vtxPrev",
    "path": "src/wallet/wallet.h",
    "position": 166,
    "original_position": 60,
    "commit_id": "05b56d1c937b7667ad51400d2f9fb674af72953f",
    "original_commit_id": "fad5decb1fdab249f626c6468174c50be15f14cf",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Ah sorry.. You could read compact size, then loop to read dummy values but really not worth it. You can resolve this.",
    "created_at": "2019-07-25T15:11:52Z",
    "updated_at": "2019-07-30T15:57:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16451#discussion_r307350173",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16451",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/307350173"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16451#discussion_r307350173"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16451"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/307350173/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 514,
    "original_line": 514,
    "side": "RIGHT",
    "in_reply_to_id": 307068102
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/307351466",
    "pull_request_review_id": 266695379,
    "id": 307351466,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNzM1MTQ2Ng==",
    "diff_hunk": "@@ -512,7 +461,10 @@ class CWalletTx : public CMerkleTx\n     mutable bool fInMempool;\n     mutable CAmount nChangeCached;\n \n-    CWalletTx(const CWallet* pwalletIn, CTransactionRef arg) : CMerkleTx(std::move(arg))\n+    CWalletTx(const CWallet* pwalletIn, CTransactionRef arg)\n+        : tx(std::move(arg)),\n+          hashBlock(uint256()),",
    "path": "src/wallet/wallet.h",
    "position": 118,
    "original_position": 114,
    "commit_id": "05b56d1c937b7667ad51400d2f9fb674af72953f",
    "original_commit_id": "fd2773f2eba659d78fae9d74461d9dd952609aa9",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "6779b7cbdeec091bf2c5a704c07a018641625d5f\r\n\r\nNone is AFAICT.",
    "created_at": "2019-07-25T15:13:55Z",
    "updated_at": "2019-07-30T15:57:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16451#discussion_r307351466",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16451",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/307351466"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16451#discussion_r307351466"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16451"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/307351466/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 461,
    "original_line": 461,
    "side": "RIGHT",
    "in_reply_to_id": 307051619
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/307364123",
    "pull_request_review_id": 266695379,
    "id": 307364123,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNzM2NDEyMw==",
    "diff_hunk": "@@ -373,43 +373,13 @@ struct COutputEntry\n class CMerkleTx\n {\n public:\n-    CTransactionRef tx;\n-    uint256 hashBlock;\n-\n-    /* An nIndex == -1 means that hashBlock (in nonzero) refers to the earliest\n-     * block in the chain we know this or any in-wallet dependency conflicts\n-     * with. Older clients interpret nIndex == -1 as unconfirmed for backward\n-     * compatibility.\n-     */\n-    int nIndex;\n-\n-    CMerkleTx()\n-    {\n-        SetTx(MakeTransactionRef());\n-        Init();\n-    }\n-\n-    explicit CMerkleTx(CTransactionRef arg)\n-    {\n-        SetTx(std::move(arg));\n-        Init();\n-    }\n-\n-    void Init()\n-    {\n-        hashBlock = uint256();\n-        nIndex = -1;\n-    }\n-\n-    void SetTx(CTransactionRef arg)\n-    {\n-        tx = std::move(arg);\n-    }\n-\n     ADD_SERIALIZE_METHODS;\n \n     template <typename Stream, typename Operation>\n     inline void SerializationOp(Stream& s, Operation ser_action) {\n+        CTransactionRef tx;",
    "path": "src/wallet/wallet.h",
    "position": 51,
    "original_position": 41,
    "commit_id": "05b56d1c937b7667ad51400d2f9fb674af72953f",
    "original_commit_id": "6779b7cbdeec091bf2c5a704c07a018641625d5f",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "6779b7cbdeec091bf2c5a704c07a018641625d5f\r\n\r\nJust noting that it's not really necessary to make these local variables since that unserialized `CMerkleTx` are discarded anyway. I guess you are doing this to underline the idea, so maybe also add a comment here?",
    "created_at": "2019-07-25T15:36:13Z",
    "updated_at": "2019-07-30T15:57:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16451#discussion_r307364123",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16451",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/307364123"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16451#discussion_r307364123"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16451"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/307364123/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 378,
    "original_line": 378,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/307368697",
    "pull_request_review_id": 266718746,
    "id": 307368697,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNzM2ODY5Nw==",
    "diff_hunk": "@@ -505,22 +500,21 @@ class CWalletTx\n             mapValueCopy[\"timesmart\"] = strprintf(\"%u\", nTimeSmart);\n         }\n \n-        std::vector<uint256> dummy_vector; //!< Used to be vMerkleBranch\n-        s << tx << hashBlock << dummy_vector << nIndex;\n-        std::vector<CMerkleTx> vUnused; //!< Used to be vtxPrev\n-        s << vUnused << mapValueCopy << vOrderForm << fTimeReceivedIsTxTime << nTimeReceived << fFromMe << fSpent;\n+        std::vector<char> dummy_vector1; //!< Used to be vMerkleBranch\n+        std::vector<char> dummy_vector2; //!< Used to be vtxPrev\n+        char dummy_char = false; //!< Used to be fSpent\n+        s << tx << hashBlock << dummy_vector1 << nIndex << dummy_vector2 << mapValueCopy << vOrderForm << fTimeReceivedIsTxTime << nTimeReceived << fFromMe << dummy_char;\n     }\n \n     template<typename Stream>\n     void Unserialize(Stream& s)\n     {\n         Init(nullptr);\n-        char fSpent;\n \n-        std::vector<uint256> dummy_vector; //!< Used to be vMerkleBranch\n-        s >> tx >> hashBlock >> dummy_vector >> nIndex;\n-        std::vector<CMerkleTx> vUnused; //!< Used to be vtxPrev\n-        s >> vUnused >> mapValue >> vOrderForm >> fTimeReceivedIsTxTime >> nTimeReceived >> fFromMe >> fSpent;\n+        std::vector<uint256> dummy_vector1; //!< Used to be vMerkleBranch\n+        std::vector<CMerkleTx> dummy_vector2; //!< Used to be vtxPrev",
    "path": "src/wallet/wallet.h",
    "position": 166,
    "original_position": 60,
    "commit_id": "05b56d1c937b7667ad51400d2f9fb674af72953f",
    "original_commit_id": "fad5decb1fdab249f626c6468174c50be15f14cf",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "> You could read compact size, then loop to read dummy values but really not worth it.\r\n\r\nExactly. Seems error-prone and redundant.",
    "created_at": "2019-07-25T15:44:55Z",
    "updated_at": "2019-07-30T15:57:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16451#discussion_r307368697",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16451",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/307368697"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16451#discussion_r307368697"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16451"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/307368697/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 514,
    "original_line": 514,
    "side": "RIGHT",
    "in_reply_to_id": 307068102
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/307370401",
    "pull_request_review_id": 266720817,
    "id": 307370401,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNzM3MDQwMQ==",
    "diff_hunk": "@@ -512,7 +461,10 @@ class CWalletTx : public CMerkleTx\n     mutable bool fInMempool;\n     mutable CAmount nChangeCached;\n \n-    CWalletTx(const CWallet* pwalletIn, CTransactionRef arg) : CMerkleTx(std::move(arg))\n+    CWalletTx(const CWallet* pwalletIn, CTransactionRef arg)\n+        : tx(std::move(arg)),\n+          hashBlock(uint256()),",
    "path": "src/wallet/wallet.h",
    "position": 118,
    "original_position": 114,
    "commit_id": "05b56d1c937b7667ad51400d2f9fb674af72953f",
    "original_commit_id": "fd2773f2eba659d78fae9d74461d9dd952609aa9",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "https://github.com/bitcoin/bitcoin/blob/master/doc/developer-notes.md#variable-names ;)",
    "created_at": "2019-07-25T15:48:02Z",
    "updated_at": "2019-07-30T15:57:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16451#discussion_r307370401",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16451",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/307370401"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16451#discussion_r307370401"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16451"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/307370401/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 461,
    "original_line": 461,
    "side": "RIGHT",
    "in_reply_to_id": 307051619
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/307370957",
    "pull_request_review_id": 266721485,
    "id": 307370957,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNzM3MDk1Nw==",
    "diff_hunk": "@@ -373,43 +373,13 @@ struct COutputEntry\n class CMerkleTx\n {\n public:\n-    CTransactionRef tx;\n-    uint256 hashBlock;\n-\n-    /* An nIndex == -1 means that hashBlock (in nonzero) refers to the earliest\n-     * block in the chain we know this or any in-wallet dependency conflicts\n-     * with. Older clients interpret nIndex == -1 as unconfirmed for backward\n-     * compatibility.\n-     */\n-    int nIndex;\n-\n-    CMerkleTx()\n-    {\n-        SetTx(MakeTransactionRef());\n-        Init();\n-    }\n-\n-    explicit CMerkleTx(CTransactionRef arg)\n-    {\n-        SetTx(std::move(arg));\n-        Init();\n-    }\n-\n-    void Init()\n-    {\n-        hashBlock = uint256();\n-        nIndex = -1;\n-    }\n-\n-    void SetTx(CTransactionRef arg)\n-    {\n-        tx = std::move(arg);\n-    }\n-\n     ADD_SERIALIZE_METHODS;\n \n     template <typename Stream, typename Operation>\n     inline void SerializationOp(Stream& s, Operation ser_action) {\n+        CTransactionRef tx;",
    "path": "src/wallet/wallet.h",
    "position": 51,
    "original_position": 41,
    "commit_id": "05b56d1c937b7667ad51400d2f9fb674af72953f",
    "original_commit_id": "6779b7cbdeec091bf2c5a704c07a018641625d5f",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yeah, it's equivalent, but I think the intent is clearer this way. Why have data members in a class where any instantiated objects are just going to be thrown away?\r\n\r\nI don't think an additional comment is necessary here - the code along with the comment on the `CMerkleTx` class should be clear enough.",
    "created_at": "2019-07-25T15:48:59Z",
    "updated_at": "2019-07-30T15:57:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16451#discussion_r307370957",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16451",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/307370957"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16451#discussion_r307370957"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16451"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/307370957/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 378,
    "original_line": 378,
    "side": "RIGHT",
    "in_reply_to_id": 307364123
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/307371505",
    "pull_request_review_id": 266722194,
    "id": 307371505,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNzM3MTUwNQ==",
    "diff_hunk": "@@ -512,7 +461,10 @@ class CWalletTx : public CMerkleTx\n     mutable bool fInMempool;\n     mutable CAmount nChangeCached;\n \n-    CWalletTx(const CWallet* pwalletIn, CTransactionRef arg) : CMerkleTx(std::move(arg))\n+    CWalletTx(const CWallet* pwalletIn, CTransactionRef arg)\n+        : tx(std::move(arg)),\n+          hashBlock(uint256()),",
    "path": "src/wallet/wallet.h",
    "position": 118,
    "original_position": 114,
    "commit_id": "05b56d1c937b7667ad51400d2f9fb674af72953f",
    "original_commit_id": "fd2773f2eba659d78fae9d74461d9dd952609aa9",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I actually prefer your style @promag , but I'll keep this as is for now to not invalidate your review. If I need to update the PR again I'll swap to your style.",
    "created_at": "2019-07-25T15:49:58Z",
    "updated_at": "2019-07-30T15:57:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16451#discussion_r307371505",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16451",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/307371505"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16451#discussion_r307371505"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16451"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/307371505/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 461,
    "original_line": 461,
    "side": "RIGHT",
    "in_reply_to_id": 307051619
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/309053692",
    "pull_request_review_id": 268803123,
    "id": 309053692,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwOTA1MzY5Mg==",
    "diff_hunk": "@@ -512,7 +461,10 @@ class CWalletTx : public CMerkleTx\n     mutable bool fInMempool;\n     mutable CAmount nChangeCached;\n \n-    CWalletTx(const CWallet* pwalletIn, CTransactionRef arg) : CMerkleTx(std::move(arg))\n+    CWalletTx(const CWallet* pwalletIn, CTransactionRef arg)\n+        : tx(std::move(arg)),\n+          hashBlock(uint256()),",
    "path": "src/wallet/wallet.h",
    "position": 118,
    "original_position": 114,
    "commit_id": "05b56d1c937b7667ad51400d2f9fb674af72953f",
    "original_commit_id": "fd2773f2eba659d78fae9d74461d9dd952609aa9",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This code is fine. Please do not give formatting comments about preferences, that are not in the code style or developer notes,",
    "created_at": "2019-07-31T06:19:04Z",
    "updated_at": "2019-07-31T06:19:30Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16451#discussion_r309053692",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16451",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/309053692"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16451#discussion_r309053692"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16451"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/309053692/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 461,
    "original_line": 461,
    "side": "RIGHT",
    "in_reply_to_id": 307051619
  }
]