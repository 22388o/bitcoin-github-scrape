[
  {
    "sha": "44fa621669c4de147a563e4b4a4d8bd6170e5ff5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0NGZhNjIxNjY5YzRkZTE0N2E1NjNlNGI0YTRkOGJkNjE3MGU1ZmY1",
    "commit": {
      "author": {
        "name": "Kalle Alm",
        "email": "kalle.alm@gmail.com",
        "date": "2017-01-20T00:33:18Z"
      },
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2017-01-20T02:27:52Z"
      },
      "message": "Consensus: coinbase maturity a consensus parameter rather than an app-wide constant.",
      "tree": {
        "sha": "d66a38064b967922aef48cd6c7e5cf4fe066dbed",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d66a38064b967922aef48cd6c7e5cf4fe066dbed"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/44fa621669c4de147a563e4b4a4d8bd6170e5ff5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/44fa621669c4de147a563e4b4a4d8bd6170e5ff5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/44fa621669c4de147a563e4b4a4d8bd6170e5ff5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/44fa621669c4de147a563e4b4a4d8bd6170e5ff5/comments",
    "author": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "054d664215ca8d5f17d8aadbfc5b78a8dcd5115c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/054d664215ca8d5f17d8aadbfc5b78a8dcd5115c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/054d664215ca8d5f17d8aadbfc5b78a8dcd5115c"
      }
    ],
    "stats": {
      "total": 31,
      "additions": 15,
      "deletions": 16
    },
    "files": [
      {
        "sha": "9007b0bb8731eb9ebb30e86f2583786fa8fd4949",
        "filename": "src/bitcoin-tx.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44fa621669c4de147a563e4b4a4d8bd6170e5ff5/src/bitcoin-tx.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44fa621669c4de147a563e4b4a4d8bd6170e5ff5/src/bitcoin-tx.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-tx.cpp?ref=44fa621669c4de147a563e4b4a4d8bd6170e5ff5",
        "patch": "@@ -9,7 +9,6 @@\n #include \"base58.h\"\n #include \"clientversion.h\"\n #include \"coins.h\"\n-#include \"consensus/consensus.h\"\n #include \"core_io.h\"\n #include \"keystore.h\"\n #include \"policy/policy.h\""
      },
      {
        "sha": "c27b0364f529e194341025a8b35cba0435803fbc",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44fa621669c4de147a563e4b4a4d8bd6170e5ff5/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44fa621669c4de147a563e4b4a4d8bd6170e5ff5/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=44fa621669c4de147a563e4b4a4d8bd6170e5ff5",
        "patch": "@@ -70,6 +70,7 @@ class CMainParams : public CChainParams {\n public:\n     CMainParams() {\n         strNetworkID = \"main\";\n+        consensus.coinbaseMaturity = 100;\n         consensus.nSubsidyHalvingInterval = 210000;\n         consensus.BIP34Height = 227931;\n         consensus.BIP34Hash = uint256S(\"0x000000000000024b89b42a942fe0d9fea3bb44ab7bd1b19115dd6a759c0808b8\");\n@@ -175,6 +176,7 @@ class CTestNetParams : public CChainParams {\n public:\n     CTestNetParams() {\n         strNetworkID = \"test\";\n+        consensus.coinbaseMaturity = 100;\n         consensus.nSubsidyHalvingInterval = 210000;\n         consensus.BIP34Height = 21111;\n         consensus.BIP34Hash = uint256S(\"0x0000000023b3a96d3484e5abb3755c413e7d41500f8e2a5c3f0dd01299cd8ef8\");\n@@ -264,6 +266,7 @@ class CRegTestParams : public CChainParams {\n public:\n     CRegTestParams() {\n         strNetworkID = \"regtest\";\n+        consensus.coinbaseMaturity = 100;\n         consensus.nSubsidyHalvingInterval = 150;\n         consensus.BIP34Height = 100000000; // BIP34 has not activated on regtest (far in the future so block v1 are not rejected in tests)\n         consensus.BIP34Hash = uint256();"
      },
      {
        "sha": "fadb947debd6fe057672e6047c9ac19d575599b6",
        "filename": "src/consensus/consensus.h",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44fa621669c4de147a563e4b4a4d8bd6170e5ff5/src/consensus/consensus.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44fa621669c4de147a563e4b4a4d8bd6170e5ff5/src/consensus/consensus.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/consensus.h?ref=44fa621669c4de147a563e4b4a4d8bd6170e5ff5",
        "patch": "@@ -16,8 +16,6 @@ static const unsigned int MAX_BLOCK_WEIGHT = 4000000;\n static const unsigned int MAX_BLOCK_BASE_SIZE = 1000000;\n /** The maximum allowed number of signature check operations in a block (network rule) */\n static const int64_t MAX_BLOCK_SIGOPS_COST = 80000;\n-/** Coinbase transaction outputs can only be spent after this number of new blocks (network rule) */\n-static const int COINBASE_MATURITY = 100;\n \n /** Flags for nSequence and nLockTime locks */\n enum {"
      },
      {
        "sha": "4ba801f210f66ae605ff23cbc74782e2b7e21b93",
        "filename": "src/consensus/params.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44fa621669c4de147a563e4b4a4d8bd6170e5ff5/src/consensus/params.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44fa621669c4de147a563e4b4a4d8bd6170e5ff5/src/consensus/params.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/params.h?ref=44fa621669c4de147a563e4b4a4d8bd6170e5ff5",
        "patch": "@@ -38,6 +38,8 @@ struct BIP9Deployment {\n  */\n struct Params {\n     uint256 hashGenesisBlock;\n+    /** Coinbase transaction outputs can only be spent after this number of new blocks (network rule) */\n+    int coinbaseMaturity;\n     int nSubsidyHalvingInterval;\n     /** Block height and hash at which BIP34 becomes active */\n     int BIP34Height;"
      },
      {
        "sha": "00e2e3f41bd30643941781e7584835fdf583aca0",
        "filename": "src/miner.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44fa621669c4de147a563e4b4a4d8bd6170e5ff5/src/miner.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44fa621669c4de147a563e4b4a4d8bd6170e5ff5/src/miner.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.cpp?ref=44fa621669c4de147a563e4b4a4d8bd6170e5ff5",
        "patch": "@@ -9,7 +9,6 @@\n #include \"chain.h\"\n #include \"chainparams.h\"\n #include \"coins.h\"\n-#include \"consensus/consensus.h\"\n #include \"consensus/merkle.h\"\n #include \"consensus/validation.h\"\n #include \"hash.h\""
      },
      {
        "sha": "94859739d542e8476152c49deac9d44cb0086dcd",
        "filename": "src/qt/transactiondesc.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44fa621669c4de147a563e4b4a4d8bd6170e5ff5/src/qt/transactiondesc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44fa621669c4de147a563e4b4a4d8bd6170e5ff5/src/qt/transactiondesc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactiondesc.cpp?ref=44fa621669c4de147a563e4b4a4d8bd6170e5ff5",
        "patch": "@@ -10,7 +10,6 @@\n #include \"transactionrecord.h\"\n \n #include \"base58.h\"\n-#include \"consensus/consensus.h\"\n #include \"validation.h\"\n #include \"script/script.h\"\n #include \"timedata.h\"\n@@ -266,7 +265,7 @@ QString TransactionDesc::toHTML(CWallet *wallet, CWalletTx &wtx, TransactionReco\n \n     if (wtx.IsCoinBase())\n     {\n-        quint32 numBlocksToMaturity = COINBASE_MATURITY +  1;\n+        quint32 numBlocksToMaturity = Params().GetConsensus().coinbaseMaturity + 1;\n         strHTML += \"<br>\" + tr(\"Generated coins must mature %1 blocks before they can be spent. When you generated this block, it was broadcast to the network to be added to the block chain. If it fails to get into the chain, its state will change to \\\"not accepted\\\" and it won't be spendable. This may occasionally happen if another node generates a block within a few seconds of yours.\").arg(QString::number(numBlocksToMaturity)) + \"<br>\";\n     }\n "
      },
      {
        "sha": "f66a3f6b38aa48a622f260f212762d64bf112862",
        "filename": "src/qt/transactionrecord.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44fa621669c4de147a563e4b4a4d8bd6170e5ff5/src/qt/transactionrecord.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44fa621669c4de147a563e4b4a4d8bd6170e5ff5/src/qt/transactionrecord.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionrecord.cpp?ref=44fa621669c4de147a563e4b4a4d8bd6170e5ff5",
        "patch": "@@ -5,7 +5,6 @@\n #include \"transactionrecord.h\"\n \n #include \"base58.h\"\n-#include \"consensus/consensus.h\"\n #include \"validation.h\"\n #include \"timedata.h\"\n #include \"wallet/wallet.h\""
      },
      {
        "sha": "c055faaf0f1e314d48e7e716fe03630653bd1570",
        "filename": "src/test/test_bitcoin.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44fa621669c4de147a563e4b4a4d8bd6170e5ff5/src/test/test_bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44fa621669c4de147a563e4b4a4d8bd6170e5ff5/src/test/test_bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/test_bitcoin.cpp?ref=44fa621669c4de147a563e4b4a4d8bd6170e5ff5",
        "patch": "@@ -7,7 +7,6 @@\n #include \"test_bitcoin.h\"\n \n #include \"chainparams.h\"\n-#include \"consensus/consensus.h\"\n #include \"consensus/validation.h\"\n #include \"key.h\"\n #include \"validation.h\"\n@@ -100,7 +99,8 @@ TestChain100Setup::TestChain100Setup() : TestingSetup(CBaseChainParams::REGTEST)\n     // Generate a 100-block chain:\n     coinbaseKey.MakeNewKey(true);\n     CScript scriptPubKey = CScript() <<  ToByteVector(coinbaseKey.GetPubKey()) << OP_CHECKSIG;\n-    for (int i = 0; i < COINBASE_MATURITY; i++)\n+    int coinbaseMaturity = Params().GetConsensus().coinbaseMaturity;\n+    for (int i = 0; i < coinbaseMaturity; i++)\n     {\n         std::vector<CMutableTransaction> noTxns;\n         CBlock b = CreateAndProcessBlock(noTxns, scriptPubKey);"
      },
      {
        "sha": "46e09ee67e30a602b6c7ac4814899432b960c8e3",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44fa621669c4de147a563e4b4a4d8bd6170e5ff5/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44fa621669c4de147a563e4b4a4d8bd6170e5ff5/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=44fa621669c4de147a563e4b4a4d8bd6170e5ff5",
        "patch": "@@ -6,8 +6,8 @@\n #include \"txmempool.h\"\n \n #include \"clientversion.h\"\n-#include \"consensus/consensus.h\"\n #include \"consensus/validation.h\"\n+#include \"chainparams.h\"\n #include \"validation.h\"\n #include \"policy/policy.h\"\n #include \"policy/fees.h\"\n@@ -538,6 +538,7 @@ void CTxMemPool::removeForReorg(const CCoinsViewCache *pcoins, unsigned int nMem\n     // Remove transactions spending a coinbase which are now immature and no-longer-final transactions\n     LOCK(cs);\n     setEntries txToRemove;\n+    int coinbaseMaturity = Params().GetConsensus().coinbaseMaturity;\n     for (indexed_transaction_set::const_iterator it = mapTx.begin(); it != mapTx.end(); it++) {\n         const CTransaction& tx = it->GetTx();\n         LockPoints lp = it->GetLockPoints();\n@@ -553,7 +554,7 @@ void CTxMemPool::removeForReorg(const CCoinsViewCache *pcoins, unsigned int nMem\n                     continue;\n                 const CCoins *coins = pcoins->AccessCoins(txin.prevout.hash);\n                 if (nCheckFrequency != 0) assert(coins);\n-                if (!coins || (coins->IsCoinBase() && ((signed long)nMemPoolHeight) - coins->nHeight < COINBASE_MATURITY)) {\n+                if (!coins || (coins->IsCoinBase() && ((signed long)nMemPoolHeight) - coins->nHeight < coinbaseMaturity)) {\n                     txToRemove.insert(it);\n                     break;\n                 }"
      },
      {
        "sha": "dcbcb960490f9f7fa9e3b8a0ae1416a37fc5bcdf",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44fa621669c4de147a563e4b4a4d8bd6170e5ff5/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44fa621669c4de147a563e4b4a4d8bd6170e5ff5/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=44fa621669c4de147a563e4b4a4d8bd6170e5ff5",
        "patch": "@@ -9,7 +9,6 @@\n #include \"chainparams.h\"\n #include \"checkpoints.h\"\n #include \"checkqueue.h\"\n-#include \"consensus/consensus.h\"\n #include \"consensus/merkle.h\"\n #include \"consensus/validation.h\"\n #include \"hash.h\"\n@@ -696,7 +695,7 @@ bool AcceptToMemoryPoolWorker(CTxMemPool& pool, CValidationState& state, const C\n         double dPriority = view.GetPriority(tx, chainActive.Height(), inChainInputValue);\n \n         // Keep track of transactions that spend a coinbase, which we re-scan\n-        // during reorgs to ensure COINBASE_MATURITY is still met.\n+        // during reorgs to ensure coinbase maturity is still met.\n         bool fSpendsCoinbase = false;\n         BOOST_FOREACH(const CTxIn &txin, tx.vin) {\n             const CCoins *coins = view.AccessCoins(txin.prevout.hash);\n@@ -1344,6 +1343,7 @@ bool CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoins\n \n         CAmount nValueIn = 0;\n         CAmount nFees = 0;\n+        int coinbaseMaturity = ::Params().GetConsensus().coinbaseMaturity;\n         for (unsigned int i = 0; i < tx.vin.size(); i++)\n         {\n             const COutPoint &prevout = tx.vin[i].prevout;\n@@ -1352,7 +1352,7 @@ bool CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoins\n \n             // If prev is coinbase, check that it's matured\n             if (coins->IsCoinBase()) {\n-                if (nSpendHeight - coins->nHeight < COINBASE_MATURITY)\n+                if (nSpendHeight - coins->nHeight < coinbaseMaturity)\n                     return state.Invalid(false,\n                         REJECT_INVALID, \"bad-txns-premature-spend-of-coinbase\",\n                         strprintf(\"tried to spend coinbase at depth %d\", nSpendHeight - coins->nHeight));"
      },
      {
        "sha": "0d03df0b1acf233c7af0ff820814d03d19d5048c",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44fa621669c4de147a563e4b4a4d8bd6170e5ff5/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44fa621669c4de147a563e4b4a4d8bd6170e5ff5/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=44fa621669c4de147a563e4b4a4d8bd6170e5ff5",
        "patch": "@@ -9,7 +9,6 @@\n #include \"checkpoints.h\"\n #include \"chain.h\"\n #include \"wallet/coincontrol.h\"\n-#include \"consensus/consensus.h\"\n #include \"consensus/validation.h\"\n #include \"key.h\"\n #include \"keystore.h\"\n@@ -3846,7 +3845,7 @@ int CMerkleTx::GetBlocksToMaturity() const\n {\n     if (!IsCoinBase())\n         return 0;\n-    return max(0, (COINBASE_MATURITY+1) - GetDepthInMainChain());\n+    return max(0, (Params().GetConsensus().coinbaseMaturity + 1) - GetDepthInMainChain());\n }\n \n "
      }
    ]
  },
  {
    "sha": "ca96a5463dbbb48bc0f8792da467dd21bef575a1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjYTk2YTU0NjNkYmJiNDhiYzBmODc5MmRhNDY3ZGQyMWJlZjU3NWEx",
    "commit": {
      "author": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2017-01-20T06:18:42Z"
      },
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2017-01-20T06:18:42Z"
      },
      "message": "[to-squash] Restored includes where consensus/consensus.h content was being used and added const to coinbaseMaturity where it was retrieved.",
      "tree": {
        "sha": "243a7ed413047149f1f0a907a6152ae68bd2a4a4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/243a7ed413047149f1f0a907a6152ae68bd2a4a4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ca96a5463dbbb48bc0f8792da467dd21bef575a1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ca96a5463dbbb48bc0f8792da467dd21bef575a1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ca96a5463dbbb48bc0f8792da467dd21bef575a1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ca96a5463dbbb48bc0f8792da467dd21bef575a1/comments",
    "author": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "44fa621669c4de147a563e4b4a4d8bd6170e5ff5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/44fa621669c4de147a563e4b4a4d8bd6170e5ff5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/44fa621669c4de147a563e4b4a4d8bd6170e5ff5"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 6,
      "deletions": 3
    },
    "files": [
      {
        "sha": "3c3646523a035253ddc3487cfc7899f9b7650f49",
        "filename": "src/bitcoin-tx.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ca96a5463dbbb48bc0f8792da467dd21bef575a1/src/bitcoin-tx.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ca96a5463dbbb48bc0f8792da467dd21bef575a1/src/bitcoin-tx.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-tx.cpp?ref=ca96a5463dbbb48bc0f8792da467dd21bef575a1",
        "patch": "@@ -9,6 +9,7 @@\n #include \"base58.h\"\n #include \"clientversion.h\"\n #include \"coins.h\"\n+#include \"consensus/consensus.h\"\n #include \"core_io.h\"\n #include \"keystore.h\"\n #include \"policy/policy.h\""
      },
      {
        "sha": "acded9416891355b114cb47124be29804c531945",
        "filename": "src/miner.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ca96a5463dbbb48bc0f8792da467dd21bef575a1/src/miner.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ca96a5463dbbb48bc0f8792da467dd21bef575a1/src/miner.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.cpp?ref=ca96a5463dbbb48bc0f8792da467dd21bef575a1",
        "patch": "@@ -9,6 +9,7 @@\n #include \"chain.h\"\n #include \"chainparams.h\"\n #include \"coins.h\"\n+#include \"consensus/consensus.h\"\n #include \"consensus/merkle.h\"\n #include \"consensus/validation.h\"\n #include \"hash.h\""
      },
      {
        "sha": "38c48f1c074b3928486ce32d400a1a8e0d1da8e1",
        "filename": "src/test/test_bitcoin.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ca96a5463dbbb48bc0f8792da467dd21bef575a1/src/test/test_bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ca96a5463dbbb48bc0f8792da467dd21bef575a1/src/test/test_bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/test_bitcoin.cpp?ref=ca96a5463dbbb48bc0f8792da467dd21bef575a1",
        "patch": "@@ -99,7 +99,7 @@ TestChain100Setup::TestChain100Setup() : TestingSetup(CBaseChainParams::REGTEST)\n     // Generate a 100-block chain:\n     coinbaseKey.MakeNewKey(true);\n     CScript scriptPubKey = CScript() <<  ToByteVector(coinbaseKey.GetPubKey()) << OP_CHECKSIG;\n-    int coinbaseMaturity = Params().GetConsensus().coinbaseMaturity;\n+    const int coinbaseMaturity = Params().GetConsensus().coinbaseMaturity;\n     for (int i = 0; i < coinbaseMaturity; i++)\n     {\n         std::vector<CMutableTransaction> noTxns;"
      },
      {
        "sha": "f34102259dcd682c0367dd647becb3657a145362",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ca96a5463dbbb48bc0f8792da467dd21bef575a1/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ca96a5463dbbb48bc0f8792da467dd21bef575a1/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=ca96a5463dbbb48bc0f8792da467dd21bef575a1",
        "patch": "@@ -538,7 +538,7 @@ void CTxMemPool::removeForReorg(const CCoinsViewCache *pcoins, unsigned int nMem\n     // Remove transactions spending a coinbase which are now immature and no-longer-final transactions\n     LOCK(cs);\n     setEntries txToRemove;\n-    int coinbaseMaturity = Params().GetConsensus().coinbaseMaturity;\n+    const int coinbaseMaturity = Params().GetConsensus().coinbaseMaturity;\n     for (indexed_transaction_set::const_iterator it = mapTx.begin(); it != mapTx.end(); it++) {\n         const CTransaction& tx = it->GetTx();\n         LockPoints lp = it->GetLockPoints();"
      },
      {
        "sha": "751893663bfb2feb6b17572d1c8fb5b519da8acc",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ca96a5463dbbb48bc0f8792da467dd21bef575a1/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ca96a5463dbbb48bc0f8792da467dd21bef575a1/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=ca96a5463dbbb48bc0f8792da467dd21bef575a1",
        "patch": "@@ -9,6 +9,7 @@\n #include \"chainparams.h\"\n #include \"checkpoints.h\"\n #include \"checkqueue.h\"\n+#include \"consensus/consensus.h\"\n #include \"consensus/merkle.h\"\n #include \"consensus/validation.h\"\n #include \"hash.h\"\n@@ -1343,7 +1344,7 @@ bool CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoins\n \n         CAmount nValueIn = 0;\n         CAmount nFees = 0;\n-        int coinbaseMaturity = ::Params().GetConsensus().coinbaseMaturity;\n+        const int coinbaseMaturity = ::Params().GetConsensus().coinbaseMaturity;\n         for (unsigned int i = 0; i < tx.vin.size(); i++)\n         {\n             const COutPoint &prevout = tx.vin[i].prevout;"
      }
    ]
  }
]