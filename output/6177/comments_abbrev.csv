luke-jr,2015-05-23T00:12:14Z,"Commit description does not match. Also might be good to trigger a new CreateNewBlock in getblocktemplate, but not required I guess. Other than those, utACK.\n",https://github.com/bitcoin/bitcoin/pull/6177#issuecomment-104805680,104805680,
maaku,2015-05-23T01:27:09Z,I think the wording matches both the intent and the source code. Did I make a mistake somewhere? There was a grammar error which I fixed.\n,https://github.com/bitcoin/bitcoin/pull/6177#issuecomment-104810879,104810879,
luke-jr,2015-05-23T01:48:04Z,"""Fail a block template if block.nTime decreases"", but nothing fails?\n",https://github.com/bitcoin/bitcoin/pull/6177#issuecomment-104814105,104814105,
maaku,2015-05-23T12:41:03Z,"Right, fixed.\n",https://github.com/bitcoin/bitcoin/pull/6177#issuecomment-104889249,104889249,
petertodd,2015-05-23T15:18:24Z,"Given that we already are guaranteed to mine valid blocks regardless by the GetMedianTimePast() check, how important is it really to avoid letting time go backwards?\n\nAs for the specific getblocktemplate issue have you actually seen this in practice? CreateNewBlock() checks every transaction against IsFinalTx() prior to including it in the template, so if I'm understanding the code correctly the",https://github.com/bitcoin/bitcoin/pull/6177#issuecomment-104912026,104912026,
cinnamoncoin,2015-05-23T18:07:23Z,If I understand correctly you want to prevent a solved block from having an epoch time stamp earlier than any prior block ? (Is the concern to prevent selfish/dishonest miners to possibly orphan the next block solved?) \n,https://github.com/bitcoin/bitcoin/pull/6177#issuecomment-104933037,104933037,
maaku,2015-05-23T19:37:00Z,"Peter, in the current code it is possible for the block's timestamp to be\nless than timestamp that was used during transaction selection, which means\nit is possible for invalid work to be generated: a block which contains a\ntransaction whose nLockTime is not satisfied by block.nTime. This patch\nfixes that edge case.\n\nFurther constraining the validity rules as you describe would also solve\nt",https://github.com/bitcoin/bitcoin/pull/6177#issuecomment-104938490,104938490,
maaku,2015-05-23T19:38:55Z,"No, this has nothing to do with the timestamps of previous blocks. It is to\nprevent invalid blocks from being generated, blocks which contain\ntime-locked transactions which have not yet matured because the timestamp\nwas altered after the transaction was selected.\n\nOn Sat, May 23, 2015 at 11:07 AM, cinnamon_carter notifications@github.com\nwrote:\n\n> If I understand correctly you want to prev",https://github.com/bitcoin/bitcoin/pull/6177#issuecomment-104938562,104938562,
petertodd,2015-05-23T23:11:05Z,"@maaku Ah, yeah, I'd forgotten we modify the block's nTime after creation, ugh; there's another usage of UpdateTime() in rpcmining.cpp in the getblocktemplate code that needs fixing too.\n\nAn alternative would be for UpdateTime() to simply never reduce the block nTime, which would remove the seldom tested codepath where the block template fails due to time going backwards. Basically the differenc",https://github.com/bitcoin/bitcoin/pull/6177#issuecomment-104953950,104953950,
maaku,2015-05-28T10:02:03Z,Fixed nit regarding code comments.\n,https://github.com/bitcoin/bitcoin/pull/6177#issuecomment-106257289,106257289,
luke-jr,2015-06-02T04:16:22Z,utACK\n,https://github.com/bitcoin/bitcoin/pull/6177#issuecomment-107797732,107797732,
jtimon,2015-06-02T06:39:51Z,utACK\n,https://github.com/bitcoin/bitcoin/pull/6177#issuecomment-107826701,107826701,
sipa,2015-06-14T13:52:32Z,Untested ACK\n,https://github.com/bitcoin/bitcoin/pull/6177#issuecomment-111828064,111828064,
btcdrak,2015-06-22T12:15:38Z,utACK\n,https://github.com/bitcoin/bitcoin/pull/6177#issuecomment-114082650,114082650,
jgarzik,2015-07-23T19:26:15Z,ut ACK\n,https://github.com/bitcoin/bitcoin/pull/6177#issuecomment-124217794,124217794,
btcdrak,2015-08-06T08:41:56Z,ping @laanwj This looks ready for merging.\n,https://github.com/bitcoin/bitcoin/pull/6177#issuecomment-128293013,128293013,
