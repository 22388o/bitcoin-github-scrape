[
  {
    "sha": "ef8dfe41d1eba0de6d6554e25e658169f97313b5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplZjhkZmU0MWQxZWJhMGRlNmQ2NTU0ZTI1ZTY1ODE2OWY5NzMxM2I1",
    "commit": {
      "author": {
        "name": "Mark Friedenbach",
        "email": "mark@friedenbach.org",
        "date": "2015-05-22T21:49:50Z"
      },
      "committer": {
        "name": "Mark Friedenbach",
        "email": "mark@friedenbach.org",
        "date": "2015-05-27T21:03:11Z"
      },
      "message": "Prevent block.nTime from decreasing\n\nUnder some circumstances it is possible for there to be a significant,\ndiscontinuous jump in a node's clock value. On mining nodes, this can\nresult in block templates which are no longer valid due to time-based\nnLockTime constraints. UpdateTime() is modified so that it will never\ndecrease a block's nLockTime, thereby preventing such invalidations.",
      "tree": {
        "sha": "fb269c424ccf2fe715c639df712dba7ae1cf34dc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fb269c424ccf2fe715c639df712dba7ae1cf34dc"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ef8dfe41d1eba0de6d6554e25e658169f97313b5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ef8dfe41d1eba0de6d6554e25e658169f97313b5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ef8dfe41d1eba0de6d6554e25e658169f97313b5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ef8dfe41d1eba0de6d6554e25e658169f97313b5/comments",
    "author": {
      "login": "maaku",
      "id": 69154,
      "node_id": "MDQ6VXNlcjY5MTU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/69154?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maaku",
      "html_url": "https://github.com/maaku",
      "followers_url": "https://api.github.com/users/maaku/followers",
      "following_url": "https://api.github.com/users/maaku/following{/other_user}",
      "gists_url": "https://api.github.com/users/maaku/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maaku/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maaku/subscriptions",
      "organizations_url": "https://api.github.com/users/maaku/orgs",
      "repos_url": "https://api.github.com/users/maaku/repos",
      "events_url": "https://api.github.com/users/maaku/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maaku/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "maaku",
      "id": 69154,
      "node_id": "MDQ6VXNlcjY5MTU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/69154?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maaku",
      "html_url": "https://github.com/maaku",
      "followers_url": "https://api.github.com/users/maaku/followers",
      "following_url": "https://api.github.com/users/maaku/following{/other_user}",
      "gists_url": "https://api.github.com/users/maaku/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maaku/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maaku/subscriptions",
      "organizations_url": "https://api.github.com/users/maaku/orgs",
      "repos_url": "https://api.github.com/users/maaku/repos",
      "events_url": "https://api.github.com/users/maaku/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maaku/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ce56f5621a94dcc2159ebe57e43da727eab18e6c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ce56f5621a94dcc2159ebe57e43da727eab18e6c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ce56f5621a94dcc2159ebe57e43da727eab18e6c"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 14,
      "deletions": 5
    },
    "files": [
      {
        "sha": "693e04dec2ba46a1d779f82287d4cbc9b73324e1",
        "filename": "src/miner.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 4,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef8dfe41d1eba0de6d6554e25e658169f97313b5/src/miner.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef8dfe41d1eba0de6d6554e25e658169f97313b5/src/miner.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.cpp?ref=ef8dfe41d1eba0de6d6554e25e658169f97313b5",
        "patch": "@@ -81,13 +81,19 @@ class TxPriorityCompare\n     }\n };\n \n-void UpdateTime(CBlockHeader* pblock, const Consensus::Params& consensusParams, const CBlockIndex* pindexPrev)\n+int64_t UpdateTime(CBlockHeader* pblock, const Consensus::Params& consensusParams, const CBlockIndex* pindexPrev)\n {\n-    pblock->nTime = std::max(pindexPrev->GetMedianTimePast()+1, GetAdjustedTime());\n+    int64_t nOldTime = pblock->nTime;\n+    int64_t nNewTime = std::max(pindexPrev->GetMedianTimePast()+1, GetAdjustedTime());\n+\n+    if (nOldTime < nNewTime)\n+        pblock->nTime = nNewTime;\n \n     // Updating time can change work required on testnet:\n     if (consensusParams.fPowAllowMinDifficultyBlocks)\n         pblock->nBits = GetNextWorkRequired(pindexPrev, pblock, consensusParams);\n+\n+    return nNewTime - nOldTime;\n }\n \n CBlockTemplate* CreateNewBlock(const CScript& scriptPubKeyIn)\n@@ -138,6 +144,7 @@ CBlockTemplate* CreateNewBlock(const CScript& scriptPubKeyIn)\n         LOCK2(cs_main, mempool.cs);\n         CBlockIndex* pindexPrev = chainActive.Tip();\n         const int nHeight = pindexPrev->nHeight + 1;\n+        pblock->nTime = GetAdjustedTime();\n         CCoinsViewCache view(pcoinsTip);\n \n         // Priority order to process transactions\n@@ -152,7 +159,7 @@ CBlockTemplate* CreateNewBlock(const CScript& scriptPubKeyIn)\n              mi != mempool.mapTx.end(); ++mi)\n         {\n             const CTransaction& tx = mi->second.GetTx();\n-            if (tx.IsCoinBase() || !IsFinalTx(tx, nHeight))\n+            if (tx.IsCoinBase() || !IsFinalTx(tx, nHeight, pblock->nTime))\n                 continue;\n \n             COrphan* porphan = NULL;\n@@ -529,7 +536,9 @@ void static BitcoinMiner(CWallet *pwallet)\n                     break;\n \n                 // Update nTime every few seconds\n-                UpdateTime(pblock, chainparams.GetConsensus(), pindexPrev);\n+                if (UpdateTime(pblock, chainparams.GetConsensus(), pindexPrev) < 0)\n+                    break; // Recreate the block if the clock has run backwards,\n+                           // so that we can use the correct time.\n                 if (chainparams.GetConsensus().fPowAllowMinDifficultyBlocks)\n                 {\n                     // Changing pblock->nTime can change work required on testnet:"
      },
      {
        "sha": "d46f4b1f2dc990fd74e6c2ae66359973715955a0",
        "filename": "src/miner.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef8dfe41d1eba0de6d6554e25e658169f97313b5/src/miner.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef8dfe41d1eba0de6d6554e25e658169f97313b5/src/miner.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.h?ref=ef8dfe41d1eba0de6d6554e25e658169f97313b5",
        "patch": "@@ -30,6 +30,6 @@ CBlockTemplate* CreateNewBlock(const CScript& scriptPubKeyIn);\n CBlockTemplate* CreateNewBlockWithKey(CReserveKey& reservekey);\n /** Modify the extranonce in a block */\n void IncrementExtraNonce(CBlock* pblock, CBlockIndex* pindexPrev, unsigned int& nExtraNonce);\n-void UpdateTime(CBlockHeader* pblock, const Consensus::Params& consensusParams, const CBlockIndex* pindexPrev);\n+int64_t UpdateTime(CBlockHeader* pblock, const Consensus::Params& consensusParams, const CBlockIndex* pindexPrev);\n \n #endif // BITCOIN_MINER_H"
      }
    ]
  }
]