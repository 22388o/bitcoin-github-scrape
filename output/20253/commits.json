[
  {
    "sha": "2f3f1aec1f8aadd4a6fb08ca5da7eeda31eb388f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyZjNmMWFlYzFmOGFhZGQ0YTZmYjA4Y2E1ZGE3ZWVkYTMxZWIzODhm",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2020-10-24T08:24:07Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2020-12-13T02:38:24Z"
      },
      "message": "net: remove SetMaxOutboundTarget\n\nThis has been unused since f3552da81393a8e78ce3e2afed0b9c9d1ff5cee0.",
      "tree": {
        "sha": "7e38a6f0e52b8a325cdafbc1aec91589bf60fbb5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7e38a6f0e52b8a325cdafbc1aec91589bf60fbb5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2f3f1aec1f8aadd4a6fb08ca5da7eeda31eb388f",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAl/VfqAACgkQLuufXMCV\nJsGCsg/9FR/YUmRm5cu+iWz3unyLcgYcrY45Kfs08PS/XbL5/iysoViJJafUhUri\nYqp1s/vSLt7i4V8+up16yl1o5QBbvCcvxJKgHcxXmjnm/U0svtbnrtpYuBvdGTwH\n/pb2asYonWVKw6IHxiAjrdQx95m5gDS5kU7KzlMpjZvIMEZRxGYkXU/bipxGwU6p\n6UajZC6ubj0gceLWpt3ARiaBBb4ybS2QzCH0Yv5OJZde71Ai5AA/4GAYhzvN6E1o\nDK4DwGj7uq80XcnbMgqBuyd/5itsn5ttPCKkY03oMaOY6CUcdzpa8eFD/f4roaQg\nYFwONSwwWlb4xcuar6DSJxsBVCKSnyth7zmAEVtW7+3Q0VtBzXya/0G+VyyD1+vJ\nC6bletdCe1k/JN53rShdiaFIwqvViIeU1qXdB318TUZy9gUU4UKzUg3uOCTEQzb9\nDpqJF5Xa4Ymdq5RuHBbdwtmKgJYVtBNctBki9nyjXEaoDB2qRDTTtvru/uAeMmur\nZAHKzA/I8xbbYQOqjDUe7MwKE4hIZyVWOS5Ts8+e88GT6P6W4TyNK4AMe+jkxNEI\nSpftowD6pK7dwMkaun56/UIBAoGmpltjXjuvDmvIhEdrWucVHZcXxgWGHz7rNJR6\nkwP2SWiyxMJLzDi4M18QjFO62hbAER2yAdhZOT2pmrpKNwS8RHc=\n=1Rgk\n-----END PGP SIGNATURE-----",
        "payload": "tree 7e38a6f0e52b8a325cdafbc1aec91589bf60fbb5\nparent ade38b6ee8f91e441507c0ee7ffe6ca020748991\nauthor fanquake <fanquake@gmail.com> 1603527847 +0800\ncommitter fanquake <fanquake@gmail.com> 1607827104 +0800\n\nnet: remove SetMaxOutboundTarget\n\nThis has been unused since f3552da81393a8e78ce3e2afed0b9c9d1ff5cee0.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2f3f1aec1f8aadd4a6fb08ca5da7eeda31eb388f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2f3f1aec1f8aadd4a6fb08ca5da7eeda31eb388f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2f3f1aec1f8aadd4a6fb08ca5da7eeda31eb388f/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ade38b6ee8f91e441507c0ee7ffe6ca020748991",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ade38b6ee8f91e441507c0ee7ffe6ca020748991",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ade38b6ee8f91e441507c0ee7ffe6ca020748991"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 4,
      "deletions": 15
    },
    "files": [
      {
        "sha": "519717e46c71b48b2fca4f87828ab226d9cb1a80",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 6,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2f3f1aec1f8aadd4a6fb08ca5da7eeda31eb388f/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2f3f1aec1f8aadd4a6fb08ca5da7eeda31eb388f/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=2f3f1aec1f8aadd4a6fb08ca5da7eeda31eb388f",
        "patch": "@@ -2859,12 +2859,6 @@ void CConnman::RecordBytesSent(uint64_t bytes)\n     nMaxOutboundTotalBytesSentInCycle += bytes;\n }\n \n-void CConnman::SetMaxOutboundTarget(uint64_t limit)\n-{\n-    LOCK(cs_totalBytesSent);\n-    nMaxOutboundLimit = limit;\n-}\n-\n uint64_t CConnman::GetMaxOutboundTarget()\n {\n     LOCK(cs_totalBytesSent);"
      },
      {
        "sha": "dc841d1b11857280f8ea3d52c2139f7fff1cc033",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2f3f1aec1f8aadd4a6fb08ca5da7eeda31eb388f/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2f3f1aec1f8aadd4a6fb08ca5da7eeda31eb388f/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=2f3f1aec1f8aadd4a6fb08ca5da7eeda31eb388f",
        "patch": "@@ -366,8 +366,6 @@ class CConnman\n     //! that peer during `net_processing.cpp:PushNodeVersion()`.\n     ServiceFlags GetLocalServices() const;\n \n-    //!set the max outbound target in bytes\n-    void SetMaxOutboundTarget(uint64_t limit);\n     uint64_t GetMaxOutboundTarget();\n \n     //!set the timeframe for the max outbound target"
      },
      {
        "sha": "4afaf9def0c2f93e60f2ede7e13255dccd7ce1fb",
        "filename": "src/test/fuzz/connman.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 7,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2f3f1aec1f8aadd4a6fb08ca5da7eeda31eb388f/src/test/fuzz/connman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2f3f1aec1f8aadd4a6fb08ca5da7eeda31eb388f/src/test/fuzz/connman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/connman.cpp?ref=2f3f1aec1f8aadd4a6fb08ca5da7eeda31eb388f",
        "patch": "@@ -31,7 +31,7 @@ void test_one_input(const std::vector<uint8_t>& buffer)\n     CSubNet random_subnet;\n     std::string random_string;\n     while (fuzzed_data_provider.ConsumeBool()) {\n-        switch (fuzzed_data_provider.ConsumeIntegralInRange<int>(0, 30)) {\n+        switch (fuzzed_data_provider.ConsumeIntegralInRange<int>(0, 29)) {\n         case 0:\n             random_address = ConsumeAddress(fuzzed_data_provider);\n             break;\n@@ -127,18 +127,15 @@ void test_one_input(const std::vector<uint8_t>& buffer)\n             connman.SetBestHeight(fuzzed_data_provider.ConsumeIntegral<int>());\n             break;\n         case 26:\n-            connman.SetMaxOutboundTarget(fuzzed_data_provider.ConsumeIntegral<uint64_t>());\n-            break;\n-        case 27:\n             connman.SetMaxOutboundTimeframe(fuzzed_data_provider.ConsumeIntegral<uint64_t>());\n             break;\n-        case 28:\n+        case 27:\n             connman.SetNetworkActive(fuzzed_data_provider.ConsumeBool());\n             break;\n-        case 29:\n+        case 28:\n             connman.SetServices(random_service, static_cast<ServiceFlags>(fuzzed_data_provider.ConsumeIntegral<uint64_t>()));\n             break;\n-        case 30:\n+        case 29:\n             connman.SetTryNewOutboundPeer(fuzzed_data_provider.ConsumeBool());\n             break;\n         }"
      }
    ]
  },
  {
    "sha": "b117eb148678b0fc5be02346cef29d87d4f81af9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiMTE3ZWIxNDg2NzhiMGZjNWJlMDIzNDZjZWYyOWQ4N2Q0ZjgxYWY5",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2020-10-24T08:25:56Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2020-12-13T02:38:24Z"
      },
      "message": "net: remove SetMaxOutboundTimeframe\n\nThis was introduced in 872fee3fccc8b33b9af0a401b5f85ac5504b57eb and it's unclear\nif it's ever been used.",
      "tree": {
        "sha": "fcec428ddc28414137eb84662c69630a2b611d7b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fcec428ddc28414137eb84662c69630a2b611d7b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b117eb148678b0fc5be02346cef29d87d4f81af9",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAl/VfqAACgkQLuufXMCV\nJsHwPA//TnTCF/NwqKdoJ/8JwtDxrzJMvNX5hBNXVJAdwWj9SogEOuFcLBtw3VMo\nzs6qOdF1bOxdgeeL3YrFnrwEHVt9IPqKUQnCFJMfFnCQTDPRbDdvciuJprWltO9a\nu4uXvp/4TwcBmIbLw1Jd0j/HoKcnoNZu8aS47RICyk1t9OX7wJhThoS6bem+f3ND\nLr7j386vOgn3WU5t8wtObzSzesVHAss0GrF1t/XoXCusAz7hG8XS2l8ib++7vJat\nYoi9a3GUKTZ2BKp8emYCbA/HofevVTeOh2hZlIQg1DIKTKG7Vxv3jdjJaUWv2kw6\nKA8/42uKoOn1x9M9rZJnJ1buz8EojrfW1lVqc4LWx2eKdeWuNTdWinP4uzWa+HiL\nYVo+7BEP+jZfepJlhrm+k2FHKjUHsJ+zFJYtqxZwG10XxLTPooI+BnzIYvsDVX3c\nqgR7mSw40Ap2zmYF2HVKBy2KpzwZfcH+09ZLqU9oP4tYDNMqzEvogszCUBkfD5jJ\n/gLF82yR0N7ehCeTrRemslKcFdb7x2cHopRJm1NYv2n3vj20GQUFJ4brZowCwtU5\nFfkD51EKR3WEvR5/rhDXj7/VcX3l12JUnMiaxwiwsqytRuKdA8pp2+Horkzf1TO1\nteIt4veHGpcDLG7ijwUI/GlBNeemOk/xKADpBfCss+/Y8UyAycQ=\n=Ba8b\n-----END PGP SIGNATURE-----",
        "payload": "tree fcec428ddc28414137eb84662c69630a2b611d7b\nparent 2f3f1aec1f8aadd4a6fb08ca5da7eeda31eb388f\nauthor fanquake <fanquake@gmail.com> 1603527956 +0800\ncommitter fanquake <fanquake@gmail.com> 1607827104 +0800\n\nnet: remove SetMaxOutboundTimeframe\n\nThis was introduced in 872fee3fccc8b33b9af0a401b5f85ac5504b57eb and it's unclear\nif it's ever been used.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b117eb148678b0fc5be02346cef29d87d4f81af9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b117eb148678b0fc5be02346cef29d87d4f81af9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b117eb148678b0fc5be02346cef29d87d4f81af9/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2f3f1aec1f8aadd4a6fb08ca5da7eeda31eb388f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2f3f1aec1f8aadd4a6fb08ca5da7eeda31eb388f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2f3f1aec1f8aadd4a6fb08ca5da7eeda31eb388f"
      }
    ],
    "stats": {
      "total": 24,
      "additions": 3,
      "deletions": 21
    },
    "files": [
      {
        "sha": "2250bc053012ff4d214f904f2dc4551ac8377b25",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 12,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b117eb148678b0fc5be02346cef29d87d4f81af9/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b117eb148678b0fc5be02346cef29d87d4f81af9/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=b117eb148678b0fc5be02346cef29d87d4f81af9",
        "patch": "@@ -2885,18 +2885,6 @@ uint64_t CConnman::GetMaxOutboundTimeLeftInCycle()\n     return (cycleEndTime < now) ? 0 : cycleEndTime - GetTime();\n }\n \n-void CConnman::SetMaxOutboundTimeframe(uint64_t timeframe)\n-{\n-    LOCK(cs_totalBytesSent);\n-    if (nMaxOutboundTimeframe != timeframe)\n-    {\n-        // reset measure-cycle in case of changing\n-        // the timeframe\n-        nMaxOutboundCycleStartTime = GetTime();\n-    }\n-    nMaxOutboundTimeframe = timeframe;\n-}\n-\n bool CConnman::OutboundTargetReached(bool historicalBlockServingLimit)\n {\n     LOCK(cs_totalBytesSent);"
      },
      {
        "sha": "fd47b5db6a2ac4858429611b1acfdbdf183ef3e6",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b117eb148678b0fc5be02346cef29d87d4f81af9/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b117eb148678b0fc5be02346cef29d87d4f81af9/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=b117eb148678b0fc5be02346cef29d87d4f81af9",
        "patch": "@@ -367,9 +367,6 @@ class CConnman\n     ServiceFlags GetLocalServices() const;\n \n     uint64_t GetMaxOutboundTarget();\n-\n-    //!set the timeframe for the max outbound target\n-    void SetMaxOutboundTimeframe(uint64_t timeframe);\n     uint64_t GetMaxOutboundTimeframe();\n \n     //! check if the outbound target is reached"
      },
      {
        "sha": "af85e7be4c0a7bb0ec75ea2e91799057cfb070fa",
        "filename": "src/test/fuzz/connman.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 6,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b117eb148678b0fc5be02346cef29d87d4f81af9/src/test/fuzz/connman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b117eb148678b0fc5be02346cef29d87d4f81af9/src/test/fuzz/connman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/connman.cpp?ref=b117eb148678b0fc5be02346cef29d87d4f81af9",
        "patch": "@@ -31,7 +31,7 @@ void test_one_input(const std::vector<uint8_t>& buffer)\n     CSubNet random_subnet;\n     std::string random_string;\n     while (fuzzed_data_provider.ConsumeBool()) {\n-        switch (fuzzed_data_provider.ConsumeIntegralInRange<int>(0, 29)) {\n+        switch (fuzzed_data_provider.ConsumeIntegralInRange<int>(0, 28)) {\n         case 0:\n             random_address = ConsumeAddress(fuzzed_data_provider);\n             break;\n@@ -127,15 +127,12 @@ void test_one_input(const std::vector<uint8_t>& buffer)\n             connman.SetBestHeight(fuzzed_data_provider.ConsumeIntegral<int>());\n             break;\n         case 26:\n-            connman.SetMaxOutboundTimeframe(fuzzed_data_provider.ConsumeIntegral<uint64_t>());\n-            break;\n-        case 27:\n             connman.SetNetworkActive(fuzzed_data_provider.ConsumeBool());\n             break;\n-        case 28:\n+        case 27:\n             connman.SetServices(random_service, static_cast<ServiceFlags>(fuzzed_data_provider.ConsumeIntegral<uint64_t>()));\n             break;\n-        case 29:\n+        case 28:\n             connman.SetTryNewOutboundPeer(fuzzed_data_provider.ConsumeBool());\n             break;\n         }"
      }
    ]
  },
  {
    "sha": "173d0d35f1bb271175047c9eb7dd58cc46ed35bf",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxNzNkMGQzNWYxYmIyNzExNzUwNDdjOWViN2RkNThjYzQ2ZWQzNWJm",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2020-10-24T08:33:26Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2020-12-13T03:10:40Z"
      },
      "message": "net: remove nMaxOutboundTimeframe from connection options\n\nIt's not actually possible to change this value, so remove the\nindirection of it being a conn option.\n\nDEFAULT_MAX_UPLOAD_TIMEFRAME is a compile time constant.",
      "tree": {
        "sha": "763e192dc2baaba0305f852d0f2612c90079cd6e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/763e192dc2baaba0305f852d0f2612c90079cd6e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/173d0d35f1bb271175047c9eb7dd58cc46ed35bf",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAl/Vhj4ACgkQLuufXMCV\nJsF/Lw//aLz0f9mdX+TrmgSgTIYWefqCtF1wiMtZ9PGfuizVmUepsGD3jj/LDRrZ\nvlWvgEnQavW3jN+nsvdF6fRPtNLD+DIfNCorb9+4Aij+irGEg3sdEO5Sh+WUiLUF\nS59ujosxlb1XP/M2FRgEq05JKDkgrlCZJTZybYpF42qs1t+i2axRBm2K5xn+0b+B\ndn1kQfaHSwcvFL5ZadkOhOTVFRM6R4OnbzDmMYOQwl+I8dpjKAnLr2cHZ+QU4dnk\nJrWIGxTlbFIyok5H57qKa+bGJgifXipc31RsSPG0SiHCjMBhYtP08vH5uLocZ1Fl\ne9YPrCv0loKqhi3vdg7RGZAhtctonh/3u6VEHpKbRa3AGqJolAUjCV5FFQ3q2mT8\nS0//cBHvtRZOWWP2ovCT8aNLhGYdFnf5w4wemThI+G7RlhMrv51UIG/nbwGKpzkI\nkki+JY3a24HUqMe0BjQLMchEaaWNyTNQrD6OliigI7zR5FBlbkw0chRZxy/8qz87\nXpNdJEvpz32glhIjo8oDjJJ/xGQeDY32b922RbXRBqXDowlu6HMxDVZgZu48ccic\nreQXZFKiEBaYiC3M2wgn6qSWtUTcim5A9yxHj75N4gMx6fxWDib1TVaUcXNGCAch\n860RdFkW3T6p/rPjJP2Y0hXiW4gLg3ddtfgvkpXkegUulSMNDIs=\n=RDTt\n-----END PGP SIGNATURE-----",
        "payload": "tree 763e192dc2baaba0305f852d0f2612c90079cd6e\nparent b117eb148678b0fc5be02346cef29d87d4f81af9\nauthor fanquake <fanquake@gmail.com> 1603528406 +0800\ncommitter fanquake <fanquake@gmail.com> 1607829040 +0800\n\nnet: remove nMaxOutboundTimeframe from connection options\n\nIt's not actually possible to change this value, so remove the\nindirection of it being a conn option.\n\nDEFAULT_MAX_UPLOAD_TIMEFRAME is a compile time constant.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/173d0d35f1bb271175047c9eb7dd58cc46ed35bf",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/173d0d35f1bb271175047c9eb7dd58cc46ed35bf",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/173d0d35f1bb271175047c9eb7dd58cc46ed35bf/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b117eb148678b0fc5be02346cef29d87d4f81af9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b117eb148678b0fc5be02346cef29d87d4f81af9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b117eb148678b0fc5be02346cef29d87d4f81af9"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 7,
      "deletions": 12
    },
    "files": [
      {
        "sha": "7823f96c90856f7afc8a9e1b908fbf04563e7ca7",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/173d0d35f1bb271175047c9eb7dd58cc46ed35bf/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/173d0d35f1bb271175047c9eb7dd58cc46ed35bf/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=173d0d35f1bb271175047c9eb7dd58cc46ed35bf",
        "patch": "@@ -1514,7 +1514,6 @@ bool AppInitMain(const util::Ref& context, NodeContext& node, interfaces::BlockA\n     }\n #endif\n     uint64_t nMaxOutboundLimit = 0; //unlimited unless -maxuploadtarget is set\n-    uint64_t nMaxOutboundTimeframe = MAX_UPLOAD_TIMEFRAME;\n \n     if (args.IsArgSet(\"-maxuploadtarget\")) {\n         nMaxOutboundLimit = args.GetArg(\"-maxuploadtarget\", DEFAULT_MAX_UPLOAD_TARGET) * 1024 * 1024;\n@@ -1921,7 +1920,6 @@ bool AppInitMain(const util::Ref& context, NodeContext& node, interfaces::BlockA\n     connOptions.nReceiveFloodSize = 1000 * args.GetArg(\"-maxreceivebuffer\", DEFAULT_MAXRECEIVEBUFFER);\n     connOptions.m_added_nodes = args.GetArgs(\"-addnode\");\n \n-    connOptions.nMaxOutboundTimeframe = nMaxOutboundTimeframe;\n     connOptions.nMaxOutboundLimit = nMaxOutboundLimit;\n     connOptions.m_peer_connect_timeout = peer_connect_timeout;\n "
      },
      {
        "sha": "56d82cf7e797249a0ac84d1c88fc80343cecab5a",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 5,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/173d0d35f1bb271175047c9eb7dd58cc46ed35bf/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/173d0d35f1bb271175047c9eb7dd58cc46ed35bf/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=173d0d35f1bb271175047c9eb7dd58cc46ed35bf",
        "patch": "@@ -72,6 +72,9 @@ static constexpr std::chrono::seconds DNSSEEDS_DELAY_FEW_PEERS{11};\n static constexpr std::chrono::minutes DNSSEEDS_DELAY_MANY_PEERS{5};\n static constexpr int DNSSEEDS_DELAY_PEER_THRESHOLD = 1000; // \"many\" vs \"few\" peers\n \n+/** The default timeframe for -maxuploadtarget. 1 day. */\n+static constexpr uint64_t MAX_UPLOAD_TIMEFRAME = 60 * 60 * 24;\n+\n // We add a random period time (0 to 1 seconds) to feeler connections to prevent synchronization.\n #define FEELER_SLEEP_WINDOW 1\n \n@@ -2848,7 +2851,7 @@ void CConnman::RecordBytesSent(uint64_t bytes)\n     nTotalBytesSent += bytes;\n \n     uint64_t now = GetTime();\n-    if (nMaxOutboundCycleStartTime + nMaxOutboundTimeframe < now)\n+    if (nMaxOutboundCycleStartTime + MAX_UPLOAD_TIMEFRAME < now)\n     {\n         // timeframe expired, reset cycle\n         nMaxOutboundCycleStartTime = now;\n@@ -2867,8 +2870,7 @@ uint64_t CConnman::GetMaxOutboundTarget()\n \n uint64_t CConnman::GetMaxOutboundTimeframe()\n {\n-    LOCK(cs_totalBytesSent);\n-    return nMaxOutboundTimeframe;\n+    return MAX_UPLOAD_TIMEFRAME;\n }\n \n uint64_t CConnman::GetMaxOutboundTimeLeftInCycle()\n@@ -2878,9 +2880,9 @@ uint64_t CConnman::GetMaxOutboundTimeLeftInCycle()\n         return 0;\n \n     if (nMaxOutboundCycleStartTime == 0)\n-        return nMaxOutboundTimeframe;\n+        return MAX_UPLOAD_TIMEFRAME;\n \n-    uint64_t cycleEndTime = nMaxOutboundCycleStartTime + nMaxOutboundTimeframe;\n+    uint64_t cycleEndTime = nMaxOutboundCycleStartTime + MAX_UPLOAD_TIMEFRAME;\n     uint64_t now = GetTime();\n     return (cycleEndTime < now) ? 0 : cycleEndTime - GetTime();\n }"
      },
      {
        "sha": "31141d96c2444a26e1c4c137a84a86937e22fbca",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/173d0d35f1bb271175047c9eb7dd58cc46ed35bf/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/173d0d35f1bb271175047c9eb7dd58cc46ed35bf/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=173d0d35f1bb271175047c9eb7dd58cc46ed35bf",
        "patch": "@@ -76,8 +76,6 @@ static const bool DEFAULT_UPNP = false;\n static const unsigned int DEFAULT_MAX_PEER_CONNECTIONS = 125;\n /** The default for -maxuploadtarget. 0 = Unlimited */\n static const uint64_t DEFAULT_MAX_UPLOAD_TARGET = 0;\n-/** The default timeframe for -maxuploadtarget. 1 day. */\n-static const uint64_t MAX_UPLOAD_TIMEFRAME = 60 * 60 * 24;\n /** Default for blocks only*/\n static const bool DEFAULT_BLOCKSONLY = false;\n /** -peertimeout default */\n@@ -207,7 +205,6 @@ class CConnman\n         BanMan* m_banman = nullptr;\n         unsigned int nSendBufferMaxSize = 0;\n         unsigned int nReceiveFloodSize = 0;\n-        uint64_t nMaxOutboundTimeframe = 0;\n         uint64_t nMaxOutboundLimit = 0;\n         int64_t m_peer_connect_timeout = DEFAULT_PEER_CONNECT_TIMEOUT;\n         std::vector<std::string> vSeedNodes;\n@@ -239,7 +236,6 @@ class CConnman\n         m_peer_connect_timeout = connOptions.m_peer_connect_timeout;\n         {\n             LOCK(cs_totalBytesSent);\n-            nMaxOutboundTimeframe = connOptions.nMaxOutboundTimeframe;\n             nMaxOutboundLimit = connOptions.nMaxOutboundLimit;\n         }\n         vWhitelistedRange = connOptions.vWhitelistedRange;\n@@ -481,7 +477,6 @@ class CConnman\n     uint64_t nMaxOutboundTotalBytesSentInCycle GUARDED_BY(cs_totalBytesSent) {0};\n     uint64_t nMaxOutboundCycleStartTime GUARDED_BY(cs_totalBytesSent) {0};\n     uint64_t nMaxOutboundLimit GUARDED_BY(cs_totalBytesSent);\n-    uint64_t nMaxOutboundTimeframe GUARDED_BY(cs_totalBytesSent);\n \n     // P2P timeout in seconds\n     int64_t m_peer_connect_timeout;"
      }
    ]
  },
  {
    "sha": "f805933e70d4320e62739f4cecfc08bdbad8afaa",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmODA1OTMzZTcwZDQzMjBlNjI3MzlmNGNlY2ZjMDhiZGJhZDhhZmFh",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2020-10-24T08:38:56Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2020-12-13T03:12:05Z"
      },
      "message": "init: set nMaxOutboundLimit connection option directly\n\nDEFAULT_MAX_UPLOAD_TARGET is a compile time constant.",
      "tree": {
        "sha": "bd063a646c19430534f2bbbf53405861c90dabf2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bd063a646c19430534f2bbbf53405861c90dabf2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f805933e70d4320e62739f4cecfc08bdbad8afaa",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAl/VhowACgkQLuufXMCV\nJsHxQA/+KJ+5TVlSSShMjuwLD01rNzVqsg7JReh0Q0RhtRXjKm+L9lRFCDT7mR7v\n0N7cDzsAnfU9UxkMuZR2XDiAD5cEY3zU6YgHFu00/oyMnKd6FIBYJTzYz5TZpSzL\nlhpMR3xR08UH3tKUKQZwSlELDSMFZ7H7H36UarBP6y+Us77+h3o+Ri4meApKLR7M\nvcq8rMN8e/Wu+iNIfHnVDz1ryG4lbC5jsXFkTiVc5aJrRhAyGxPO4u6/wlCNW7SI\ngzOlyzlkRT10RCprRfjOhZlXWkSw/U6+kMwcv7u+m9X/WTPkGYtGIe8MZ15UDX0N\n3sp1u7aBG6X7iJul8zw0f43JjuhJShsN59weY491wU08TPwN6+95NDKOjmI8wq7r\nnwMLqbbnLfBXT0Q+KqMYb7tdVKU/N05k0aOk3rWjhoasqtqMUuxrqZkh+n7RLwUT\nlkPEJt3McWXTZFGfI4Qn4vaNGUDCfqte9j2qVBtsWNXh4yg1FZ153hOyx3s+NBdO\nfs9L/As21d+b9Kl0Tkzl6lOUjZ1RQMOdtABzTleaNyEubngcZ8GrW2Net3ogvAiA\n5hc8yYzj9Hm1P+InsJdbnieER+BD/NdAO6diQNDOsnuGYLq08nmj1u8kUsk0OOHm\nCVPSADjtXUTx7dlujef3AaleyJgw0qme3t87pX1uGhgiYZCaig4=\n=O0iO\n-----END PGP SIGNATURE-----",
        "payload": "tree bd063a646c19430534f2bbbf53405861c90dabf2\nparent 173d0d35f1bb271175047c9eb7dd58cc46ed35bf\nauthor fanquake <fanquake@gmail.com> 1603528736 +0800\ncommitter fanquake <fanquake@gmail.com> 1607829125 +0800\n\ninit: set nMaxOutboundLimit connection option directly\n\nDEFAULT_MAX_UPLOAD_TARGET is a compile time constant.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f805933e70d4320e62739f4cecfc08bdbad8afaa",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f805933e70d4320e62739f4cecfc08bdbad8afaa",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f805933e70d4320e62739f4cecfc08bdbad8afaa/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "173d0d35f1bb271175047c9eb7dd58cc46ed35bf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/173d0d35f1bb271175047c9eb7dd58cc46ed35bf",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/173d0d35f1bb271175047c9eb7dd58cc46ed35bf"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 2,
      "deletions": 7
    },
    "files": [
      {
        "sha": "48711f9cd2126e8eedadddb9992b86a74d40b570",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 6,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f805933e70d4320e62739f4cecfc08bdbad8afaa/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f805933e70d4320e62739f4cecfc08bdbad8afaa/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=f805933e70d4320e62739f4cecfc08bdbad8afaa",
        "patch": "@@ -1513,11 +1513,6 @@ bool AppInitMain(const util::Ref& context, NodeContext& node, interfaces::BlockA\n         RegisterValidationInterface(g_zmq_notification_interface);\n     }\n #endif\n-    uint64_t nMaxOutboundLimit = 0; //unlimited unless -maxuploadtarget is set\n-\n-    if (args.IsArgSet(\"-maxuploadtarget\")) {\n-        nMaxOutboundLimit = args.GetArg(\"-maxuploadtarget\", DEFAULT_MAX_UPLOAD_TARGET) * 1024 * 1024;\n-    }\n \n     // ********************************************************* Step 7: load block chain\n \n@@ -1920,7 +1915,7 @@ bool AppInitMain(const util::Ref& context, NodeContext& node, interfaces::BlockA\n     connOptions.nReceiveFloodSize = 1000 * args.GetArg(\"-maxreceivebuffer\", DEFAULT_MAXRECEIVEBUFFER);\n     connOptions.m_added_nodes = args.GetArgs(\"-addnode\");\n \n-    connOptions.nMaxOutboundLimit = nMaxOutboundLimit;\n+    connOptions.nMaxOutboundLimit = 1024 * 1024 * args.GetArg(\"-maxuploadtarget\", DEFAULT_MAX_UPLOAD_TARGET);\n     connOptions.m_peer_connect_timeout = peer_connect_timeout;\n \n     for (const std::string& bind_arg : args.GetArgs(\"-bind\")) {"
      },
      {
        "sha": "1b9722fc27e3efb5db41e6685e389c817d2951e2",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f805933e70d4320e62739f4cecfc08bdbad8afaa/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f805933e70d4320e62739f4cecfc08bdbad8afaa/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=f805933e70d4320e62739f4cecfc08bdbad8afaa",
        "patch": "@@ -75,7 +75,7 @@ static const bool DEFAULT_UPNP = false;\n /** The maximum number of peer connections to maintain. */\n static const unsigned int DEFAULT_MAX_PEER_CONNECTIONS = 125;\n /** The default for -maxuploadtarget. 0 = Unlimited */\n-static const uint64_t DEFAULT_MAX_UPLOAD_TARGET = 0;\n+static constexpr uint64_t DEFAULT_MAX_UPLOAD_TARGET = 0;\n /** Default for blocks only*/\n static const bool DEFAULT_BLOCKSONLY = false;\n /** -peertimeout default */"
      }
    ]
  },
  {
    "sha": "0475c8ba4d10dce79092361bc4c23c11dadba39a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowNDc1YzhiYTRkMTBkY2U3OTA5MjM2MWJjNGMyM2MxMWRhZGJhMzlh",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2020-10-24T11:13:42Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2020-12-13T03:41:33Z"
      },
      "message": "net: use std::chrono throughout maxOutbound logic",
      "tree": {
        "sha": "621d4ded7bbd1bd742fc93a0f914166765890d72",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/621d4ded7bbd1bd742fc93a0f914166765890d72"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0475c8ba4d10dce79092361bc4c23c11dadba39a",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAl/VjW4ACgkQLuufXMCV\nJsGZWg//YdNntMcXwrlLwnycLnVkD1KjOQ1bo8M5DOAHyDeVNNwgfbI6fNojJ6wb\nl+3YAKiBc/8CFtMGJP2K1QUAOAb0Ko8LcmTaO/1o3P0y7BtoqJhBeCIjaGVjaYnN\nRR+MA07zpwt8M9qF4uXiDzePv5FHfnfFIRYhbRsg2sxygTqbl/iKRP3prw8wMr7r\nAxgdXFNrGdtzVg0qxydSHv78QeWXOkqPxyuDnViZCIid3fSKMn7ZQqfP24LV4l7C\nv7+vbRJOJjQAb3J6P8Y66p+2TkXCGLKIpMSPfS/Yuz4HxlBUpmYndb1KaPcx+WuJ\nHsrD/AKu+s268j+glE5oJzIcX0uvCmZTREn9V3lGVFGr8IUbqjv2dpnPXQuJhdxH\nkR2+Kh+7fECt07TOMqC2fMDEHXq+n33xTz+I2XAyG3/YHLndp9V8y7W3WdFkPPv7\nXg0z9lFcELdrPBU4FHnexrBGQS0NQVoPn1tyI1K9GhGPBDgeyVl3wDfUB/kpvFxV\nQeJvYQ1ik9pfOX0cSHigLV7BgnunceU4oCxn9+n/fQH++z/Ay+BkKwL/GnHLr51S\nBOs32zwBFLaDCT7DC0MJYj7bBGnnXvGyw8qISLvUiude4/QIEFS1fI7tIIyuulsR\nGXYjsUoH+zFGZlQVR3s2ODOQVtRkPxA3fWFy5w2CV0ky9/ZqhQU=\n=dHPe\n-----END PGP SIGNATURE-----",
        "payload": "tree 621d4ded7bbd1bd742fc93a0f914166765890d72\nparent f805933e70d4320e62739f4cecfc08bdbad8afaa\nauthor fanquake <fanquake@gmail.com> 1603538022 +0800\ncommitter fanquake <fanquake@gmail.com> 1607830893 +0800\n\nnet: use std::chrono throughout maxOutbound logic\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0475c8ba4d10dce79092361bc4c23c11dadba39a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0475c8ba4d10dce79092361bc4c23c11dadba39a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0475c8ba4d10dce79092361bc4c23c11dadba39a/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f805933e70d4320e62739f4cecfc08bdbad8afaa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f805933e70d4320e62739f4cecfc08bdbad8afaa",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f805933e70d4320e62739f4cecfc08bdbad8afaa"
      }
    ],
    "stats": {
      "total": 36,
      "additions": 18,
      "deletions": 18
    },
    "files": [
      {
        "sha": "8588f7841d674804cfbef136db62f429932650d9",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 11,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0475c8ba4d10dce79092361bc4c23c11dadba39a/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0475c8ba4d10dce79092361bc4c23c11dadba39a/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=0475c8ba4d10dce79092361bc4c23c11dadba39a",
        "patch": "@@ -73,7 +73,7 @@ static constexpr std::chrono::minutes DNSSEEDS_DELAY_MANY_PEERS{5};\n static constexpr int DNSSEEDS_DELAY_PEER_THRESHOLD = 1000; // \"many\" vs \"few\" peers\n \n /** The default timeframe for -maxuploadtarget. 1 day. */\n-static constexpr uint64_t MAX_UPLOAD_TIMEFRAME = 60 * 60 * 24;\n+static constexpr std::chrono::seconds MAX_UPLOAD_TIMEFRAME{60 * 60 * 24};\n \n // We add a random period time (0 to 1 seconds) to feeler connections to prevent synchronization.\n #define FEELER_SLEEP_WINDOW 1\n@@ -2850,7 +2850,7 @@ void CConnman::RecordBytesSent(uint64_t bytes)\n     LOCK(cs_totalBytesSent);\n     nTotalBytesSent += bytes;\n \n-    uint64_t now = GetTime();\n+    const auto now = GetTime<std::chrono::seconds>();\n     if (nMaxOutboundCycleStartTime + MAX_UPLOAD_TIMEFRAME < now)\n     {\n         // timeframe expired, reset cycle\n@@ -2868,23 +2868,23 @@ uint64_t CConnman::GetMaxOutboundTarget()\n     return nMaxOutboundLimit;\n }\n \n-uint64_t CConnman::GetMaxOutboundTimeframe()\n+std::chrono::seconds CConnman::GetMaxOutboundTimeframe()\n {\n     return MAX_UPLOAD_TIMEFRAME;\n }\n \n-uint64_t CConnman::GetMaxOutboundTimeLeftInCycle()\n+std::chrono::seconds CConnman::GetMaxOutboundTimeLeftInCycle()\n {\n     LOCK(cs_totalBytesSent);\n     if (nMaxOutboundLimit == 0)\n-        return 0;\n+        return 0s;\n \n-    if (nMaxOutboundCycleStartTime == 0)\n+    if (nMaxOutboundCycleStartTime.count() == 0)\n         return MAX_UPLOAD_TIMEFRAME;\n \n-    uint64_t cycleEndTime = nMaxOutboundCycleStartTime + MAX_UPLOAD_TIMEFRAME;\n-    uint64_t now = GetTime();\n-    return (cycleEndTime < now) ? 0 : cycleEndTime - GetTime();\n+    const std::chrono::seconds cycleEndTime = nMaxOutboundCycleStartTime + MAX_UPLOAD_TIMEFRAME;\n+    const auto now = GetTime<std::chrono::seconds>();\n+    return (cycleEndTime < now) ? 0s : cycleEndTime - now;\n }\n \n bool CConnman::OutboundTargetReached(bool historicalBlockServingLimit)\n@@ -2896,8 +2896,8 @@ bool CConnman::OutboundTargetReached(bool historicalBlockServingLimit)\n     if (historicalBlockServingLimit)\n     {\n         // keep a large enough buffer to at least relay each block once\n-        uint64_t timeLeftInCycle = GetMaxOutboundTimeLeftInCycle();\n-        uint64_t buffer = timeLeftInCycle / 600 * MAX_BLOCK_SERIALIZED_SIZE;\n+        const std::chrono::seconds timeLeftInCycle = GetMaxOutboundTimeLeftInCycle();\n+        const uint64_t buffer = timeLeftInCycle / std::chrono::minutes{10} * MAX_BLOCK_SERIALIZED_SIZE;\n         if (buffer >= nMaxOutboundLimit || nMaxOutboundTotalBytesSentInCycle >= nMaxOutboundLimit - buffer)\n             return true;\n     }"
      },
      {
        "sha": "51cf6f457929b3c08591fdd947c8468d74f569b8",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0475c8ba4d10dce79092361bc4c23c11dadba39a/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0475c8ba4d10dce79092361bc4c23c11dadba39a/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=0475c8ba4d10dce79092361bc4c23c11dadba39a",
        "patch": "@@ -363,7 +363,7 @@ class CConnman\n     ServiceFlags GetLocalServices() const;\n \n     uint64_t GetMaxOutboundTarget();\n-    uint64_t GetMaxOutboundTimeframe();\n+    std::chrono::seconds GetMaxOutboundTimeframe();\n \n     //! check if the outbound target is reached\n     //! if param historicalBlockServingLimit is set true, the function will\n@@ -374,9 +374,9 @@ class CConnman\n     //! in case of no limit, it will always response 0\n     uint64_t GetOutboundTargetBytesLeft();\n \n-    //! response the time in second left in the current max outbound cycle\n-    //! in case of no limit, it will always response 0\n-    uint64_t GetMaxOutboundTimeLeftInCycle();\n+    //! returns the time left in the current max outbound cycle\n+    //! in case of no limit, it will always return 0\n+    std::chrono::seconds GetMaxOutboundTimeLeftInCycle();\n \n     uint64_t GetTotalBytesRecv();\n     uint64_t GetTotalBytesSent();\n@@ -475,7 +475,7 @@ class CConnman\n \n     // outbound limit & stats\n     uint64_t nMaxOutboundTotalBytesSentInCycle GUARDED_BY(cs_totalBytesSent) {0};\n-    uint64_t nMaxOutboundCycleStartTime GUARDED_BY(cs_totalBytesSent) {0};\n+    std::chrono::seconds nMaxOutboundCycleStartTime GUARDED_BY(cs_totalBytesSent) {0};\n     uint64_t nMaxOutboundLimit GUARDED_BY(cs_totalBytesSent);\n \n     // P2P timeout in seconds"
      },
      {
        "sha": "6a2d1ea77fd9b26af0757f65a012bb2aefcaca45",
        "filename": "src/rpc/net.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0475c8ba4d10dce79092361bc4c23c11dadba39a/src/rpc/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0475c8ba4d10dce79092361bc4c23c11dadba39a/src/rpc/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/net.cpp?ref=0475c8ba4d10dce79092361bc4c23c11dadba39a",
        "patch": "@@ -487,12 +487,12 @@ static RPCHelpMan getnettotals()\n     obj.pushKV(\"timemillis\", GetTimeMillis());\n \n     UniValue outboundLimit(UniValue::VOBJ);\n-    outboundLimit.pushKV(\"timeframe\", node.connman->GetMaxOutboundTimeframe());\n+    outboundLimit.pushKV(\"timeframe\", count_seconds(node.connman->GetMaxOutboundTimeframe()));\n     outboundLimit.pushKV(\"target\", node.connman->GetMaxOutboundTarget());\n     outboundLimit.pushKV(\"target_reached\", node.connman->OutboundTargetReached(false));\n     outboundLimit.pushKV(\"serve_historical_blocks\", !node.connman->OutboundTargetReached(true));\n     outboundLimit.pushKV(\"bytes_left_in_cycle\", node.connman->GetOutboundTargetBytesLeft());\n-    outboundLimit.pushKV(\"time_left_in_cycle\", node.connman->GetMaxOutboundTimeLeftInCycle());\n+    outboundLimit.pushKV(\"time_left_in_cycle\", count_seconds(node.connman->GetMaxOutboundTimeLeftInCycle()));\n     obj.pushKV(\"uploadtarget\", outboundLimit);\n     return obj;\n },"
      }
    ]
  }
]