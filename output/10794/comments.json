[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/314473310",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10794#issuecomment-314473310",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10794",
    "id": 314473310,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNDQ3MzMxMA==",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?u=eab5d0cdbb6cc25087cb61d4ca4a6f85255f42a7&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-11T15:02:43Z",
    "updated_at": "2017-07-11T15:02:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "Contains overhauled parts from #9483",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/314473310/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/314508746",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10794#issuecomment-314508746",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10794",
    "id": 314508746,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNDUwODc0Ng==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-11T17:03:13Z",
    "updated_at": "2017-07-11T17:03:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'd like to help out here, and I've spent literally days reviewing previous iterations of this change (#9076 #9483 #9171), but I can't figure out if this is going anywhere and if providing more review now is a good use of time.\r\n\r\nAs I've mentioned previously, I don't think the auxiliary block download class design is great, because it duplicates functionality from the networking layer in a wholly different part of the code, and gives the wallet too much control & responsibility over low level p2p details in the case where it's used to let the wallet code prioritize which blocks to download. I've tried to describe what I think would be better alternatives in my previous review comments, like https://github.com/bitcoin/bitcoin/pull/9483#issuecomment-278799990.\r\n\r\n@jonasschnelli, assuming you don't want to take my previous suggestions, and do want to stick with the current design, I think it would be helpful if you could reach out to some other reviewers and get some concept acks for your current approach. It might help to put together some kind of design document, or at least a detailed comment to the top of `auxiliaryblockrequest.h` that lays out how the class works and what your future plans for it are in as much detail as possible, so someone can understand how it's intended to be used without having to wade through all the PRs.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/314508746/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/314534086",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10794#issuecomment-314534086",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10794",
    "id": 314534086,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNDUzNDA4Ng==",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?u=eab5d0cdbb6cc25087cb61d4ca4a6f85255f42a7&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-11T18:36:31Z",
    "updated_at": "2017-07-11T18:36:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "@ryanofsky:\r\nThank you very much for the reviews in #9483. I implemented almost all of your suggesting and some of them where really great.\r\nHowever, I think the current design of having a dedicated class (`CauxiliaryBlockRequest`) makes sense, because...\r\n\r\n* An out-of-band (auxiliary) block request in an object, you could have multiple in parallel (assume multiwallet, etc.), in future, we may want to serialise them to disk, etc. Therefore I think it should be capsulated in its own class.\r\n\r\n* I think the wallet needs control. For a light-client mode, the wallet is the one that tells the node what it needs. More or less, wallet tells node: \"I need block A to E, give them to me as fast as possible\", then node may call back \"I have block A already ready (on disk), rest will follow soon\", etc. Wallet then may say: \"Okay, thats enough, you can stop at B already\", etc.\r\n\r\n* Having the implementation in a designated file makes code overview simpler. It can result in having slightly more lines of code but it should worth it. Having another `main.cpp` for everything that is network related should be avoided now, early enough. I don't think we have a lot of duplicated code, or can you point out what would be more compact if we would implement it directly in `net_processing.cpp`?\r\n\r\n* Last but not least, it allows to have a patch-set the requires less rebasing. And this is an important one to me. Eventually, this will be something that \"runs along\" with the master branch until there has been reasonable amount of testing before it gets eventually merged.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/314534086/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/314811848",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10794#issuecomment-314811848",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10794",
    "id": 314811848,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNDgxMTg0OA==",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?u=eab5d0cdbb6cc25087cb61d4ca4a6f85255f42a7&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-12T15:47:29Z",
    "updated_at": "2017-07-12T15:47:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "Followed yesterdays discussion we had in #bitcoin-core-dev. Removed the `CAuxiliaryBlockRequests` and added a `std::map blocksToDownloadFirst`.\r\nSuch manually added, priority block downloads will not trigger `ActivateBestChain`.\r\n\r\nThis PR now also adds a new signal `BlockProcessed()`.\r\n\r\nThe scope of this PR is not to make the block download interface flexible for multiple \"users\" (like the validation and eventually the light-client wallet).",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/314811848/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/316785986",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10794#issuecomment-316785986",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10794",
    "id": 316785986,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjc4NTk4Ng==",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?u=eab5d0cdbb6cc25087cb61d4ca4a6f85255f42a7&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-20T18:11:11Z",
    "updated_at": "2017-07-20T18:11:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "fixed @ryanofsky points.\r\nThis does pass travis now. Thanks in advance for reviews...",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/316785986/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/316813092",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10794#issuecomment-316813092",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10794",
    "id": 316813092,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjgxMzA5Mg==",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?u=eab5d0cdbb6cc25087cb61d4ca4a6f85255f42a7&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-20T19:58:12Z",
    "updated_at": "2017-07-20T19:58:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks @ryanofsky. Agree about required conceptual ACKs from other devs.\r\nThe long term goal was sketched in #9483, basically a light client mode for Bitcoin-Core that would allow node/wallet separation.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/316813092/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/317672618",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10794#issuecomment-317672618",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10794",
    "id": 317672618,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNzY3MjYxOA==",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?u=eab5d0cdbb6cc25087cb61d4ca4a6f85255f42a7&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-25T08:50:17Z",
    "updated_at": "2017-07-25T08:50:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "Overhauled and fixed @ryanofsky points (mostly nits), also removed the new (unused) signal.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/317672618/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/318063026",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10794#issuecomment-318063026",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10794",
    "id": 318063026,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxODA2MzAyNg==",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?u=eab5d0cdbb6cc25087cb61d4ca4a6f85255f42a7&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-26T14:04:52Z",
    "updated_at": "2017-07-26T14:04:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "Overhauled first commit to make sure we request blocks in order:\r\nhttps://github.com/bitcoin/bitcoin/pull/10794/commits/5927f7f1d6c7eb1bc7fb7a39dfda277ad5e4474c#diff-eff7adeaec73a769788bb78858815c91R483\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/318063026/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/318296344",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10794#issuecomment-318296344",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10794",
    "id": 318296344,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxODI5NjM0NA==",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?u=eab5d0cdbb6cc25087cb61d4ca4a6f85255f42a7&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-27T08:33:19Z",
    "updated_at": "2017-07-27T08:33:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "* Overhauled once again. Added the processing logic to ensure blocks are processed in order (makes it much simpler to process by \"the other side\").\r\n* Added a new main signal for the processing (reusing BlockChecked seems wrong).\r\n* Priority requests are now pushed through signal\r\n\r\nThis is now tested on my SPV branch and could be the first reviewable step towards light clients / wallet process separation.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/318296344/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/326424712",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10794#issuecomment-326424712",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10794",
    "id": 326424712,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNjQyNDcxMg==",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?u=636a89c913ac407f52bb8d57c4fff384b98f421f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-31T21:24:56Z",
    "updated_at": "2017-08-31T21:24:56Z",
    "author_association": "MEMBER",
    "body": "Needs rebase",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/326424712/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/333929365",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10794#issuecomment-333929365",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10794",
    "id": 333929365,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMzkyOTM2NQ==",
    "user": {
      "login": "nopara73",
      "id": 9156103,
      "node_id": "MDQ6VXNlcjkxNTYxMDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9156103?u=055dc1d02e67f058091e275429c95e9429edce01&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nopara73",
      "html_url": "https://github.com/nopara73",
      "followers_url": "https://api.github.com/users/nopara73/followers",
      "following_url": "https://api.github.com/users/nopara73/following{/other_user}",
      "gists_url": "https://api.github.com/users/nopara73/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nopara73/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nopara73/subscriptions",
      "organizations_url": "https://api.github.com/users/nopara73/orgs",
      "repos_url": "https://api.github.com/users/nopara73/repos",
      "events_url": "https://api.github.com/users/nopara73/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nopara73/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-03T18:06:09Z",
    "updated_at": "2017-10-03T18:06:09Z",
    "author_association": "NONE",
    "body": "@ryanofsky Reflecting to your usefullness concern:  \r\nI wrote a full block downloading SPV wallet ([HiddenWallet](https://github.com/nopara73/HiddenWallet/)), the main reason is, because without such architecture [private transaction retrieval is hard](https://groups.google.com/forum/#!msg/bitcoinj/Ys13qkTwcNg/9qxnhwnkeoIJ), if not impossible.  \r\nWhen some form of light functionality gets into Core I would personally consider porting HiddenWallet to on top of Core, since I cannot compete with Core's speed and stability.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/333929365/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/333941691",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10794#issuecomment-333941691",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10794",
    "id": 333941691,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMzk0MTY5MQ==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-03T18:48:50Z",
    "updated_at": "2017-10-03T18:48:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "That's really interesting. @nopara73, if I understand you correctly, you are saying that if the `requestblocks` JSON-RPC API from this PR is added to bitcoin core, then [HiddenWallet](https://github.com/nopara73/HiddenWallet/) would be able to call it to download blocks instead of depending on [NBitcoin](https://github.com/MetacoSA/NBitcoin)?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/333941691/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/333946305",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10794#issuecomment-333946305",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10794",
    "id": 333946305,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMzk0NjMwNQ==",
    "user": {
      "login": "nopara73",
      "id": 9156103,
      "node_id": "MDQ6VXNlcjkxNTYxMDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9156103?u=055dc1d02e67f058091e275429c95e9429edce01&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nopara73",
      "html_url": "https://github.com/nopara73",
      "followers_url": "https://api.github.com/users/nopara73/followers",
      "following_url": "https://api.github.com/users/nopara73/following{/other_user}",
      "gists_url": "https://api.github.com/users/nopara73/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nopara73/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nopara73/subscriptions",
      "organizations_url": "https://api.github.com/users/nopara73/orgs",
      "repos_url": "https://api.github.com/users/nopara73/repos",
      "events_url": "https://api.github.com/users/nopara73/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nopara73/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-03T19:06:14Z",
    "updated_at": "2017-10-03T19:06:50Z",
    "author_association": "NONE",
    "body": "@ryanofsky \r\n\r\n> you are saying that if the requestblocks JSON-RPC API from this PR is added to bitcoin core, then HiddenWallet would be able to call it to download blocks instead of depending on NBitcoin?\r\n\r\nYes.  ",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/333946305/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/346489035",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10794#issuecomment-346489035",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10794",
    "id": 346489035,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NjQ4OTAzNQ==",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?u=eab5d0cdbb6cc25087cb61d4ca4a6f85255f42a7&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-22T22:23:11Z",
    "updated_at": "2017-11-22T22:23:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "Rebased",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/346489035/reactions",
      "total_count": 4,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 2,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/346684475",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10794#issuecomment-346684475",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10794",
    "id": 346684475,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NjY4NDQ3NQ==",
    "user": {
      "login": "nopara73",
      "id": 9156103,
      "node_id": "MDQ6VXNlcjkxNTYxMDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9156103?u=055dc1d02e67f058091e275429c95e9429edce01&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nopara73",
      "html_url": "https://github.com/nopara73",
      "followers_url": "https://api.github.com/users/nopara73/followers",
      "following_url": "https://api.github.com/users/nopara73/following{/other_user}",
      "gists_url": "https://api.github.com/users/nopara73/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nopara73/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nopara73/subscriptions",
      "organizations_url": "https://api.github.com/users/nopara73/orgs",
      "repos_url": "https://api.github.com/users/nopara73/repos",
      "events_url": "https://api.github.com/users/nopara73/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nopara73/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-23T19:08:56Z",
    "updated_at": "2017-11-23T19:08:56Z",
    "author_association": "NONE",
    "body": "# Simple RPC App Example\r\n\r\nJust to be sure I understand correctly this PR and the application I am considering will work as I expect to work:\r\n\r\nHow would the wallet behave? Best effort or disabled?  \r\n\r\nSo let's say is it possible to write a software, that uses Bitcoin Core's wallet with autorequestblocks=0 in the following way:  \r\n\r\n1. Sync up the header.  \r\n2. Create a wallet, save the creation time (or block height).  \r\n3. Subscribe for new header notifications.  \r\n4. Every time a new header comes call `requestblock add blockhash`\r\n\r\nSo the wallet, from the information it has available executes the rpc commands properly based on best effort, right? And is not supposed to fail.  \r\n\r\nThis gives me the possibility to implement leapfrogging for example. (Enable the user to say: hey, I didn't do or wait for any transaction in the last 3 months and I have no intention to sync it up, it's ok if I get the blocks from now on.)  \r\n\r\n# Other Concerns\r\n\r\n1. Since this mode cannot have up to date utxo set, how do you broadcast transactions? How do you make sure it's valid?  \r\n2. How do you accept transactions to your mempool without making sure it spends an utxo? Are you also propagating them?  \r\n3. What would getblockcount return?\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/346684475/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/346691009",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10794#issuecomment-346691009",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10794",
    "id": 346691009,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NjY5MTAwOQ==",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?u=eab5d0cdbb6cc25087cb61d4ca4a6f85255f42a7&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-23T20:05:30Z",
    "updated_at": "2017-11-23T20:05:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "@nopara73 \r\n* This PR does not touch the wallet (that will come later, would be to large of a PR).\r\n* This PR does allow to disable the auto-download (sync)\r\n* This PR does allow to download random blocks (specified by block-hashes) and have them header-only-validated, ... so you can parse the blocks content\r\n\r\n> Since this mode cannot have up to date utxo set, how do you broadcast transactions? How do you make sure it's valid?\r\n\r\nThis is not done on the PR. But there is a commit available in #9483 https://github.com/bitcoin/bitcoin/pull/9483/commits/7ca1a8738a878078c0d1546f7743a05ee474dd1b that does allow broadcasting transactions without an utxo set.\r\n\r\n> How do you accept transactions to your mempool without making sure it spends an utxo? Are you also propagating them?\r\n\r\nThis is impossible in light client mode. Mempool transactions (zero confirmation txns) are pretty unsafe in light client mode.\r\n\r\n> What would getblockcount return?\r\n\r\nThe same (probably `0` in `autorequestblocks=0` mode).\r\nUse `getchaintips()` to check your headers (not super efficient).",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/346691009/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/346702879",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10794#issuecomment-346702879",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10794",
    "id": 346702879,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NjcwMjg3OQ==",
    "user": {
      "login": "nopara73",
      "id": 9156103,
      "node_id": "MDQ6VXNlcjkxNTYxMDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9156103?u=055dc1d02e67f058091e275429c95e9429edce01&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nopara73",
      "html_url": "https://github.com/nopara73",
      "followers_url": "https://api.github.com/users/nopara73/followers",
      "following_url": "https://api.github.com/users/nopara73/following{/other_user}",
      "gists_url": "https://api.github.com/users/nopara73/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nopara73/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nopara73/subscriptions",
      "organizations_url": "https://api.github.com/users/nopara73/orgs",
      "repos_url": "https://api.github.com/users/nopara73/repos",
      "events_url": "https://api.github.com/users/nopara73/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nopara73/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-23T22:04:48Z",
    "updated_at": "2017-11-23T22:04:48Z",
    "author_association": "NONE",
    "body": "@jonasschnelli I'd like to make the last couple of things clear before I compile and test it, just to know what to expect.  \r\n\r\n# 1\r\n\r\n> there is a commit available in #9483 7ca1a87 that does allow broadcasting transactions without an utxo set.\r\n\r\nMeaning, `sendrawtransaction` will always return null?\r\n\r\n# 2\r\n\r\n> This PR does not touch the wallet (that will come later, would be to large of a PR).  \r\n\r\nMeaning, (1) disables the wallet, (2) makes the wallet rpcs return sometimes incorrect results, (3) you don't know what the rpcs would return?  ",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/346702879/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/347082810",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10794#issuecomment-347082810",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10794",
    "id": 347082810,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NzA4MjgxMA==",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?u=eab5d0cdbb6cc25087cb61d4ca4a6f85255f42a7&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-27T05:32:36Z",
    "updated_at": "2017-11-27T05:32:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Meaning, sendrawtransaction will always return null?\r\n\r\nNo. It will return the txid (as expected). But not in this PR (that would be with something like https://github.com/bitcoin/bitcoin/commit/7ca1a8738a878078c0d1546f7743a05ee474dd1b).\r\n\r\n> Meaning, (1) disables the wallet, (2) makes the wallet rpcs return sometimes incorrect results, (3) you don't know what the rpcs would return?\r\n\r\nThe wallet runs the same way as in master.\r\nAll wallet commands do work exactly the same way as the do in standard IBD mode.\r\nBlocks processed with the new `requestblocks` will be ignored by the wallet (otherwise this PR would be too large).\r\n\r\nThe scope of this PR is to add the necessary network processing infrastructure to later add an SPV mode to the wallet.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/347082810/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/356360346",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10794#issuecomment-356360346",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10794",
    "id": 356360346,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NjM2MDM0Ng==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-09T17:46:43Z",
    "updated_at": "2018-01-09T17:46:43Z",
    "author_association": "CONTRIBUTOR",
    "body": ">> It would be useful to get concept ACKs from @gmaxwell and @sipa to make sure concerns from the earlier design discussion (https://botbot.me/freenode/bitcoin-core-dev/msg/88437543/) are addressed now.\r\n\r\n> Agree about required conceptual ACKs from other devs.\r\n\r\nLast I looked code was in good shape, but I don't think there was ever more design feedback on this. Maybe it should be brought up at an IRC meeting?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/356360346/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/366897388",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10794#issuecomment-366897388",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10794",
    "id": 366897388,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2Njg5NzM4OA==",
    "user": {
      "login": "nopara73",
      "id": 9156103,
      "node_id": "MDQ6VXNlcjkxNTYxMDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9156103?u=055dc1d02e67f058091e275429c95e9429edce01&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nopara73",
      "html_url": "https://github.com/nopara73",
      "followers_url": "https://api.github.com/users/nopara73/followers",
      "following_url": "https://api.github.com/users/nopara73/following{/other_user}",
      "gists_url": "https://api.github.com/users/nopara73/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nopara73/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nopara73/subscriptions",
      "organizations_url": "https://api.github.com/users/nopara73/orgs",
      "repos_url": "https://api.github.com/users/nopara73/repos",
      "events_url": "https://api.github.com/users/nopara73/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nopara73/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-20T08:10:46Z",
    "updated_at": "2018-02-20T08:10:46Z",
    "author_association": "NONE",
    "body": "This will be especially useful when combined with BIP158 (Compact Block Filters for Light Clients.) \r\nhttps://github.com/bitcoin/bips/blob/master/bip-0158.mediawiki\r\n\r\nI imagine, based on this PR someone will eventually make a Bitcoin Core light client after Core starts to serve filters. At least that'll be a low hanging fruit.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/366897388/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/367001197",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10794#issuecomment-367001197",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10794",
    "id": 367001197,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NzAwMTE5Nw==",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-20T14:50:39Z",
    "updated_at": "2018-02-20T14:50:39Z",
    "author_association": "MEMBER",
    "body": "Though I'm not sure what it would do on its own, perhaps the `PriorityBlockRequest` could be a separate PR?\r\n\r\nSame for `requestblocks` RPC; could that be useful in pruned nodes to retrieve a pruned block?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/367001197/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/382303773",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10794#issuecomment-382303773",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10794",
    "id": 382303773,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MjMwMzc3Mw==",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?u=eab5d0cdbb6cc25087cb61d4ca4a6f85255f42a7&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-18T08:15:11Z",
    "updated_at": "2018-04-18T08:15:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "Rebased",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/382303773/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/410031973",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10794#issuecomment-410031973",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10794",
    "id": 410031973,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDAzMTk3Mw==",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-02T18:55:56Z",
    "updated_at": "2018-08-02T19:04:43Z",
    "author_association": "MEMBER",
    "body": "I rebased it here: https://github.com/Sjors/bitcoin/commits/2018/08/spv-rpc (I may have broken the functional test)\r\n\r\n@ryanofsky said:\r\n> I still can't figure out if new RPC is actually supposed to be useful for something other than debugging/testing\r\n\r\nThe bigger picture for me is #9483, the ability for users to get started while IBD happens in the background.\r\n\r\nHowever, a use case I have in mind for `requestblocks add` is https://github.com/ElementsProject/lightning/issues/1297, in particular the ability for a lightning client to re-download historic blocks from a pruned node. This actually works now. Do they get pruned again at some point?\r\n\r\n`-autorequestblocks` is useful when running on a phone (iOs: #11720, Android: [ABCore](https://github.com/greenaddress/abcore)). A native application could use the RPC and only allow fetching blocks when on wifi. Being able to toggle automatic download via RPC would be nice, but can wait.\r\n\r\nBeing able to fetch blocks by height range (or up to a certain height) instead of hashes would be nice, but that's something that can be built on top of this.\r\n\r\nI noticed there's no log entry when you `requestblocks add`.\r\n\r\nCan you explain when `priorityRequest` is `true`?\r\n\r\nDid some light testing and couldn't find problems, but more people should try :-)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/410031973/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/443782791",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10794#issuecomment-443782791",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10794",
    "id": 443782791,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0Mzc4Mjc5MQ==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-03T16:54:20Z",
    "updated_at": "2018-12-03T16:54:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--5fd3d806e98f4a0ca80977bb178665a0-->There hasn't been much activity lately and the patch still needs rebase, so I am closing this for now. Please let me know when you want to continue working on this, so the pull request can be re-opened.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/443782791/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/129047410",
    "pull_request_review_id": 51781600,
    "id": 129047410,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyOTA0NzQxMA==",
    "diff_hunk": "@@ -311,7 +314,11 @@ void FinalizeNode(NodeId nodeid, bool& fUpdateConnectionTime) {\n // Requires cs_main.\n // Returns a bool indicating whether we requested this block.",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 19,
    "commit_id": "77561f7a4b500d0752d64ce931ce1dd613f7ab0d",
    "original_commit_id": "b02b237a0000806dc1e459a4e8e2fce9bbbf4272",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"Add priority block request queue\"\r\n\r\nShould update comment for new return value",
    "created_at": "2017-07-24T14:16:00Z",
    "updated_at": "2018-04-18T08:58:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10794#discussion_r129047410",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10794",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/129047410"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10794#discussion_r129047410"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10794"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/129047410/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 315,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/129049059",
    "pull_request_review_id": 51781600,
    "id": 129049059,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyOTA0OTA1OQ==",
    "diff_hunk": "@@ -466,9 +478,18 @@ void FindNextBlocksToDownload(NodeId nodeid, unsigned int count, std::vector<con\n     // Make sure pindexBestKnownBlock is up to date, we'll need it.\n     ProcessBlockAvailability(nodeid);\n \n+    if (!blocksToDownloadFirst.empty()) {\n+        for (auto& kv : blocksToDownloadFirst) {",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 86,
    "commit_id": "77561f7a4b500d0752d64ce931ce1dd613f7ab0d",
    "original_commit_id": "b02b237a0000806dc1e459a4e8e2fce9bbbf4272",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"Add priority block request queue\"\r\n\r\nCould be const auto",
    "created_at": "2017-07-24T14:21:28Z",
    "updated_at": "2018-04-18T08:58:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10794#discussion_r129049059",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10794",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/129049059"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10794#discussion_r129049059"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10794"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/129049059/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 482,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/129052414",
    "pull_request_review_id": 51781600,
    "id": 129052414,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyOTA1MjQxNA==",
    "diff_hunk": "@@ -640,6 +644,7 @@ UniValue getblockheader(const JSONRPCRequest& request)\n             \"{\\n\"\n             \"  \\\"hash\\\" : \\\"hash\\\",     (string) the block hash (same as provided)\\n\"\n             \"  \\\"confirmations\\\" : n,   (numeric) The number of confirmations, or -1 if the block is not on the main chain\\n\"\n+            \"  \\\"validated\\\" : n,       (boolean) True if the block has been validated (for priority block requests)\\n\"",
    "path": "src/rpc/blockchain.cpp",
    "position": null,
    "original_position": 29,
    "commit_id": "77561f7a4b500d0752d64ce931ce1dd613f7ab0d",
    "original_commit_id": "701014215f6ab579723ff274dde73c115dc67e20",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"Add requestblocks - a simple way to priorize block downloads\"\r\n\r\nMaybe drop part of comment in parentheses, seems to imply value will be true for priority block requests. ",
    "created_at": "2017-07-24T14:32:37Z",
    "updated_at": "2018-04-18T08:58:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10794#discussion_r129052414",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10794",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/129052414"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10794#discussion_r129052414"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10794"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/129052414/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 647,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/129053764",
    "pull_request_review_id": 51781600,
    "id": 129053764,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyOTA1Mzc2NA==",
    "diff_hunk": "@@ -1532,6 +1537,69 @@ UniValue getchaintxstats(const JSONRPCRequest& request)\n     return ret;\n }\n \n+UniValue requestblocks(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 3)\n+        throw std::runtime_error(\n+            \"requestblocks (add|flush|status) ([\\\"hash_0\\\", \\\"hash_1\\\", ...])\\n\"\n+            \"\\nPriorize blocks downloads.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. action            (string, required) the action to execute\\n\"\n+            \"                                        add  = add new blocks to the priority download\\n\"\n+            \"                                        flush = flush the queue (blocks in-flight will still be downloaded)\\n\"\n+            \"                                        status = get info about the queue\\n\"\n+            \"2. blockhashes       (array, optional) the hashes of the blocks to download\\n\"\n+            \"\\nResult:\\n\"\n+            \"   add: <null>\\n\"\n+            \"   flush: <true|false> (if the the queue wasn't empty)\\n\"\n+            \"   status: [\\\"<blockhash in queue>\\\", \\\"<blockhash in queue>\\\" ...]\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"requestblocks\", \"add, \\\"'[\\\"<blockhash>\\\"]'\\\"\")\n+            + HelpExampleRpc(\"requestblocks\", \"add, \\\"'[\\\"<blockhash>\\\"]'\\\"\")\n+            );\n+\n+    if (request.params[0].get_str() == \"flush\")\n+    {\n+        return UniValue(FlushPriorityDownloads());\n+    }\n+    else if (request.params[0].get_str() == \"status\")\n+    {\n+        UniValue ret(UniValue::VARR);\n+        std::map<uint256, const CBlockIndex*> prioBlocks = GetPriorityDownloads();\n+        for(auto& kv: prioBlocks) {\n+            ret.push_back(kv.first.ToString());\n+        }\n+        return ret;\n+    }\n+    else if (request.params[0].get_str() == \"add\")\n+    {\n+        if (request.params.size() < 2)\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Missing blocks array\");\n+        UniValue hash_Uarray = request.params[1].get_array();",
    "path": "src/rpc/blockchain.cpp",
    "position": null,
    "original_position": 75,
    "commit_id": "77561f7a4b500d0752d64ce931ce1dd613f7ab0d",
    "original_commit_id": "701014215f6ab579723ff274dde73c115dc67e20",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"[RPC] Add requestblocks - a simple way to priorize block downloads\"\r\n\r\nCopy is redundant, get_array just returns reference to *this.",
    "created_at": "2017-07-24T14:36:42Z",
    "updated_at": "2018-04-18T08:58:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10794#discussion_r129053764",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10794",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/129053764"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10794#discussion_r129053764"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10794"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/129053764/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1578,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/129054094",
    "pull_request_review_id": 51781600,
    "id": 129054094,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyOTA1NDA5NA==",
    "diff_hunk": "@@ -1532,6 +1537,69 @@ UniValue getchaintxstats(const JSONRPCRequest& request)\n     return ret;\n }\n \n+UniValue requestblocks(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 3)\n+        throw std::runtime_error(\n+            \"requestblocks (add|flush|status) ([\\\"hash_0\\\", \\\"hash_1\\\", ...])\\n\"\n+            \"\\nPriorize blocks downloads.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. action            (string, required) the action to execute\\n\"\n+            \"                                        add  = add new blocks to the priority download\\n\"\n+            \"                                        flush = flush the queue (blocks in-flight will still be downloaded)\\n\"\n+            \"                                        status = get info about the queue\\n\"\n+            \"2. blockhashes       (array, optional) the hashes of the blocks to download\\n\"\n+            \"\\nResult:\\n\"\n+            \"   add: <null>\\n\"\n+            \"   flush: <true|false> (if the the queue wasn't empty)\\n\"\n+            \"   status: [\\\"<blockhash in queue>\\\", \\\"<blockhash in queue>\\\" ...]\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"requestblocks\", \"add, \\\"'[\\\"<blockhash>\\\"]'\\\"\")\n+            + HelpExampleRpc(\"requestblocks\", \"add, \\\"'[\\\"<blockhash>\\\"]'\\\"\")\n+            );\n+\n+    if (request.params[0].get_str() == \"flush\")\n+    {\n+        return UniValue(FlushPriorityDownloads());\n+    }\n+    else if (request.params[0].get_str() == \"status\")\n+    {\n+        UniValue ret(UniValue::VARR);\n+        std::map<uint256, const CBlockIndex*> prioBlocks = GetPriorityDownloads();\n+        for(auto& kv: prioBlocks) {\n+            ret.push_back(kv.first.ToString());\n+        }\n+        return ret;\n+    }\n+    else if (request.params[0].get_str() == \"add\")\n+    {\n+        if (request.params.size() < 2)\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Missing blocks array\");\n+        UniValue hash_Uarray = request.params[1].get_array();\n+        if (!hash_Uarray.isArray())\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Second parameter must be an array\");",
    "path": "src/rpc/blockchain.cpp",
    "position": null,
    "original_position": 77,
    "commit_id": "77561f7a4b500d0752d64ce931ce1dd613f7ab0d",
    "original_commit_id": "701014215f6ab579723ff274dde73c115dc67e20",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"[RPC] Add requestblocks - a simple way to priorize block downloads\"\r\n\r\nCan never happen, get_array call above would have thrown if the hash_Uarray / params[1] value was not an array",
    "created_at": "2017-07-24T14:37:45Z",
    "updated_at": "2018-04-18T08:58:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10794#discussion_r129054094",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10794",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/129054094"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10794#discussion_r129054094"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10794"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/129054094/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1580,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/129054305",
    "pull_request_review_id": 51781600,
    "id": 129054305,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyOTA1NDMwNQ==",
    "diff_hunk": "@@ -1532,6 +1537,69 @@ UniValue getchaintxstats(const JSONRPCRequest& request)\n     return ret;\n }\n \n+UniValue requestblocks(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 3)\n+        throw std::runtime_error(\n+            \"requestblocks (add|flush|status) ([\\\"hash_0\\\", \\\"hash_1\\\", ...])\\n\"\n+            \"\\nPriorize blocks downloads.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. action            (string, required) the action to execute\\n\"\n+            \"                                        add  = add new blocks to the priority download\\n\"\n+            \"                                        flush = flush the queue (blocks in-flight will still be downloaded)\\n\"\n+            \"                                        status = get info about the queue\\n\"\n+            \"2. blockhashes       (array, optional) the hashes of the blocks to download\\n\"\n+            \"\\nResult:\\n\"\n+            \"   add: <null>\\n\"\n+            \"   flush: <true|false> (if the the queue wasn't empty)\\n\"\n+            \"   status: [\\\"<blockhash in queue>\\\", \\\"<blockhash in queue>\\\" ...]\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"requestblocks\", \"add, \\\"'[\\\"<blockhash>\\\"]'\\\"\")\n+            + HelpExampleRpc(\"requestblocks\", \"add, \\\"'[\\\"<blockhash>\\\"]'\\\"\")\n+            );\n+\n+    if (request.params[0].get_str() == \"flush\")\n+    {\n+        return UniValue(FlushPriorityDownloads());\n+    }\n+    else if (request.params[0].get_str() == \"status\")\n+    {\n+        UniValue ret(UniValue::VARR);\n+        std::map<uint256, const CBlockIndex*> prioBlocks = GetPriorityDownloads();\n+        for(auto& kv: prioBlocks) {\n+            ret.push_back(kv.first.ToString());\n+        }\n+        return ret;\n+    }\n+    else if (request.params[0].get_str() == \"add\")\n+    {\n+        if (request.params.size() < 2)\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Missing blocks array\");\n+        UniValue hash_Uarray = request.params[1].get_array();\n+        if (!hash_Uarray.isArray())\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Second parameter must be an array\");\n+\n+        std::vector<const CBlockIndex*> blocksToDownload;\n+        {\n+            LOCK(cs_main); //mapBlockIndex\n+            for (const UniValue& strHashU : hash_Uarray.getValues())\n+            {\n+                uint256 hash(uint256S(strHashU.get_str()));\n+                BlockMap::iterator mi = mapBlockIndex.find(hash);\n+                if (mi == mapBlockIndex.end())\n+                    throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Block not found\");\n+                blocksToDownload.push_back((*mi).second);",
    "path": "src/rpc/blockchain.cpp",
    "position": null,
    "original_position": 88,
    "commit_id": "77561f7a4b500d0752d64ce931ce1dd613f7ab0d",
    "original_commit_id": "701014215f6ab579723ff274dde73c115dc67e20",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"[RPC] Add requestblocks - a simple way to priorize block downloads\"\r\n\r\nProbably should write mi->second",
    "created_at": "2017-07-24T14:38:28Z",
    "updated_at": "2018-04-18T08:58:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10794#discussion_r129054305",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10794",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/129054305"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10794#discussion_r129054305"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10794"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/129054305/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1591,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/129334184",
    "pull_request_review_id": 52096264,
    "id": 129334184,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyOTMzNDE4NA==",
    "diff_hunk": "@@ -1532,6 +1537,63 @@ UniValue getchaintxstats(const JSONRPCRequest& request)\n     return ret;\n }\n \n+UniValue requestblocks(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 3)\n+        throw std::runtime_error(\n+            \"requestblocks (add|flush|status) ([\\\"hash_0\\\", \\\"hash_1\\\", ...])\\n\"\n+            \"\\nPriorize blocks downloads.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. action            (string, required) the action to execute\\n\"\n+            \"                                        add  = add new blocks to the priority download\\n\"\n+            \"                                        flush = flush the queue (blocks in-flight will still be downloaded)\\n\"\n+            \"                                        status = get info about the queue\\n\"\n+            \"2. blockhashes       (array, optional) the hashes of the blocks to download\\n\"\n+            \"\\nResult:\\n\"\n+            \"   add: <null>\\n\"\n+            \"   flush: <true|false> (if the the queue wasn't empty)\\n\"\n+            \"   status: [\\\"<blockhash in queue>\\\", \\\"<blockhash in queue>\\\" ...]\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"requestblocks\", \"add, \\\"'[\\\"<blockhash>\\\"]'\\\"\")\n+            + HelpExampleRpc(\"requestblocks\", \"add, \\\"'[\\\"<blockhash>\\\"]'\\\"\")\n+            );\n+\n+    if (request.params[0].get_str() == \"flush\") {\n+        return UniValue(FlushPriorityDownloads());\n+    }\n+    else if (request.params[0].get_str() == \"status\") {\n+        UniValue ret(UniValue::VARR);\n+        std::map<uint256, const CBlockIndex*> prioBlocks = GetPriorityDownloads();\n+        for(auto& kv: prioBlocks) {\n+            ret.push_back(kv.first.ToString());\n+        }\n+        return ret;\n+    }\n+    else if (request.params[0].get_str() == \"add\") {\n+        if (request.params.size() < 2) {",
    "path": "src/rpc/blockchain.cpp",
    "position": null,
    "original_position": 70,
    "commit_id": "77561f7a4b500d0752d64ce931ce1dd613f7ab0d",
    "original_commit_id": "d3e64f60054a7d904848f53986d80857aacdc692",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"[RPC] Add requestblocks - a simple way to priorize block downloads\"\r\n\r\nDon't really need this check, because the get_array call below will trigger it's own error about the value not being an array. But if you prefer this error, you should change the check to request.params[1].isNull() to avoid making a distinction between a null and a missing value (#10281, #10783).\r\n",
    "created_at": "2017-07-25T15:09:46Z",
    "updated_at": "2018-04-18T08:58:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10794#discussion_r129334184",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10794",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/129334184"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10794#discussion_r129334184"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10794"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/129334184/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1625,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152754098",
    "pull_request_review_id": 78661886,
    "id": 152754098,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1Mjc1NDA5OA==",
    "diff_hunk": "@@ -136,6 +139,13 @@ namespace {\n     MapRelay mapRelay;\n     /** Expiration-time ordered list of (expire time, relay map entry) pairs, protected by cs_main). */\n     std::deque<std::pair<int64_t, MapRelay::iterator>> vRelayExpiration;\n+\n+    struct PriorityBlockRequest {",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 22,
    "commit_id": "77561f7a4b500d0752d64ce931ce1dd613f7ab0d",
    "original_commit_id": "9ee22bf4a07eb3f1735063ad0265af129f5d8bed",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Nit, should be\r\n```cpp\r\nstruct PriorityBlockRequest\r\n{\r\n```",
    "created_at": "2017-11-23T09:37:27Z",
    "updated_at": "2018-04-18T08:58:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10794#discussion_r152754098",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10794",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152754098"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10794#discussion_r152754098"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10794"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152754098/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 143,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152754258",
    "pull_request_review_id": 78661886,
    "id": 152754258,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1Mjc1NDI1OA==",
    "diff_hunk": "@@ -308,9 +318,13 @@ void PushNodeVersion(CNode *pnode, CConnman* connman, int64_t nTime)\n }\n \n // Requires cs_main.\n-// Returns a bool indicating whether we requested this block.\n+// Returns a MarkBlockAsReceivedResult struct to indicating whether we requested this block and if it was via the priority request queue\n // Also used if a block was /not/ received and timed out or started with another peer\n-bool MarkBlockAsReceived(const uint256& hash) {\n+struct MarkBlockAsReceivedResult {\n+    bool fRequested;\n+    bool fPriorityRequest;\n+ };\n+const MarkBlockAsReceivedResult MarkBlockAsReceived(const uint256& hash) {",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 43,
    "commit_id": "77561f7a4b500d0752d64ce931ce1dd613f7ab0d",
    "original_commit_id": "9ee22bf4a07eb3f1735063ad0265af129f5d8bed",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Nit, remove `const` from return?",
    "created_at": "2017-11-23T09:38:10Z",
    "updated_at": "2018-04-18T08:58:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10794#discussion_r152754258",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10794",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152754258"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10794#discussion_r152754258"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10794"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152754258/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 327,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152754462",
    "pull_request_review_id": 78661886,
    "id": 152754462,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1Mjc1NDQ2Mg==",
    "diff_hunk": "@@ -1587,6 +1592,60 @@ UniValue savemempool(const JSONRPCRequest& request)\n     return NullUniValue;\n }\n \n+UniValue requestblocks(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 3)\n+        throw std::runtime_error(\n+            \"requestblocks (add|flush|status) ([\\\"hash_0\\\", \\\"hash_1\\\", ...])\\n\"",
    "path": "src/rpc/blockchain.cpp",
    "position": null,
    "original_position": 41,
    "commit_id": "77561f7a4b500d0752d64ce931ce1dd613f7ab0d",
    "original_commit_id": "9ee22bf4a07eb3f1735063ad0265af129f5d8bed",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Nit, missing spaces after `(` and before `)`.",
    "created_at": "2017-11-23T09:39:06Z",
    "updated_at": "2018-04-18T08:58:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10794#discussion_r152754462",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10794",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152754462"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10794#discussion_r152754462"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10794"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152754462/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1599,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152755122",
    "pull_request_review_id": 78661886,
    "id": 152755122,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1Mjc1NTEyMg==",
    "diff_hunk": "@@ -1587,6 +1592,60 @@ UniValue savemempool(const JSONRPCRequest& request)\n     return NullUniValue;\n }\n \n+UniValue requestblocks(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 3)\n+        throw std::runtime_error(\n+            \"requestblocks (add|flush|status) ([\\\"hash_0\\\", \\\"hash_1\\\", ...])\\n\"\n+            \"\\nPriorize blocks downloads.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. action            (string, required) the action to execute\\n\"\n+            \"                                        add  = add new blocks to the priority download\\n\"\n+            \"                                        flush = flush the queue (blocks in-flight will still be downloaded)\\n\"\n+            \"                                        status = get info about the queue\\n\"\n+            \"2. blockhashes       (array, optional) the hashes of the blocks to download\\n\"\n+            \"\\nResult:\\n\"\n+            \"   add: <null>\\n\"\n+            \"   flush: <true|false> (if the the queue wasn't empty)\\n\"\n+            \"   status: {\\\"count\\\": \\\"<amount of blocks in the queue>\\\"}\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"requestblocks\", \"add, \\\"'[\\\"<blockhash>\\\"]'\\\"\")\n+            + HelpExampleRpc(\"requestblocks\", \"add, \\\"'[\\\"<blockhash>\\\"]'\\\"\")\n+            );\n+\n+    if (request.params[0].get_str() == \"flush\") {\n+        return UniValue(FlushPriorityDownloads());\n+    }\n+    else if (request.params[0].get_str() == \"status\") {",
    "path": "src/rpc/blockchain.cpp",
    "position": 60,
    "original_position": 61,
    "commit_id": "77561f7a4b500d0752d64ce931ce1dd613f7ab0d",
    "original_commit_id": "9ee22bf4a07eb3f1735063ad0265af129f5d8bed",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Nit, remove else's?",
    "created_at": "2017-11-23T09:42:06Z",
    "updated_at": "2018-04-18T08:58:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10794#discussion_r152755122",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10794",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152755122"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10794#discussion_r152755122"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10794"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152755122/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1657,
    "original_line": 1657,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152755544",
    "pull_request_review_id": 78661886,
    "id": 152755544,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1Mjc1NTU0NA==",
    "diff_hunk": "@@ -1587,6 +1592,60 @@ UniValue savemempool(const JSONRPCRequest& request)\n     return NullUniValue;\n }\n \n+UniValue requestblocks(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 3)\n+        throw std::runtime_error(\n+            \"requestblocks (add|flush|status) ([\\\"hash_0\\\", \\\"hash_1\\\", ...])\\n\"\n+            \"\\nPriorize blocks downloads.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. action            (string, required) the action to execute\\n\"\n+            \"                                        add  = add new blocks to the priority download\\n\"\n+            \"                                        flush = flush the queue (blocks in-flight will still be downloaded)\\n\"\n+            \"                                        status = get info about the queue\\n\"\n+            \"2. blockhashes       (array, optional) the hashes of the blocks to download\\n\"\n+            \"\\nResult:\\n\"\n+            \"   add: <null>\\n\"\n+            \"   flush: <true|false> (if the the queue wasn't empty)\\n\"\n+            \"   status: {\\\"count\\\": \\\"<amount of blocks in the queue>\\\"}\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"requestblocks\", \"add, \\\"'[\\\"<blockhash>\\\"]'\\\"\")\n+            + HelpExampleRpc(\"requestblocks\", \"add, \\\"'[\\\"<blockhash>\\\"]'\\\"\")\n+            );\n+\n+    if (request.params[0].get_str() == \"flush\") {\n+        return UniValue(FlushPriorityDownloads());\n+    }\n+    else if (request.params[0].get_str() == \"status\") {\n+        UniValue ret(UniValue::VOBJ);\n+        ret.push_back(Pair(\"count\", (uint64_t)CountPriorityDownloads()));\n+        return ret;\n+    }\n+    else if (request.params[0].get_str() == \"add\") {\n+        if (request.params.size() < 2) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Missing blocks array\");\n+        }\n+        std::vector<const CBlockIndex*> blocksToDownload;\n+        {\n+            LOCK(cs_main); //mapBlockIndex\n+            for (const UniValue& strHashU : request.params[1].get_array().getValues())\n+            {",
    "path": "src/rpc/blockchain.cpp",
    "position": null,
    "original_position": 74,
    "commit_id": "77561f7a4b500d0752d64ce931ce1dd613f7ab0d",
    "original_commit_id": "9ee22bf4a07eb3f1735063ad0265af129f5d8bed",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Nit, move up.",
    "created_at": "2017-11-23T09:43:49Z",
    "updated_at": "2018-04-18T08:58:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10794#discussion_r152755544",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10794",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152755544"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10794#discussion_r152755544"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10794"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152755544/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1632,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152756424",
    "pull_request_review_id": 78661886,
    "id": 152756424,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1Mjc1NjQyNA==",
    "diff_hunk": "@@ -0,0 +1,62 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import *\n+\n+class RequestBlockRequestTest (BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+        self.extra_args = [[], ['-autorequestblocks=0']]\n+\n+    def run_test(self):\n+        self.nodes[0].generate(50)\n+        timeout = 20\n+        ctps = self.nodes[1].getchaintips()\n+        while timeout > 0:\n+            ctps = self.nodes[1].getchaintips()\n+            headerHeightReached = False\n+            for ct in ctps:\n+                if ct['status'] == \"headers-only\":\n+                    if ct['height'] == 50:\n+                        headerHeightReached = True\n+                if ct['status'] == \"active\":\n+                    assert(ct['height'] == 0)\n+            time.sleep(1)\n+            timeout-=1\n+            if headerHeightReached == True:\n+                break\n+        assert(timeout>0)\n+\n+        node0bbhash = self.nodes[0].getbestblockhash()\n+        # best block should not be validated, header must be available\n+        bh = self.nodes[1].getblockheader(node0bbhash, True)\n+\n+        assert(bh['validated'] == False)\n+        # block must not be available\n+        assert_raises_rpc_error(-1, \"Block not found on disk\", self.nodes[1].getblock, node0bbhash)\n+\n+        # request best block (auxiliary)\n+        self.nodes[1].requestblocks(\"add\", [node0bbhash])\n+        timeout = 20\n+        while timeout > 0:",
    "path": "test/functional/requestblocks.py",
    "position": null,
    "original_position": 46,
    "commit_id": "77561f7a4b500d0752d64ce931ce1dd613f7ab0d",
    "original_commit_id": "9ee22bf4a07eb3f1735063ad0265af129f5d8bed",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "use `wait_until`?",
    "created_at": "2017-11-23T09:47:45Z",
    "updated_at": "2018-04-18T08:58:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10794#discussion_r152756424",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10794",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152756424"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10794#discussion_r152756424"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10794"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152756424/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 46,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152756532",
    "pull_request_review_id": 78661886,
    "id": 152756532,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1Mjc1NjUzMg==",
    "diff_hunk": "@@ -0,0 +1,62 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import *\n+\n+class RequestBlockRequestTest (BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+        self.extra_args = [[], ['-autorequestblocks=0']]\n+\n+    def run_test(self):\n+        self.nodes[0].generate(50)\n+        timeout = 20\n+        ctps = self.nodes[1].getchaintips()\n+        while timeout > 0:\n+            ctps = self.nodes[1].getchaintips()\n+            headerHeightReached = False\n+            for ct in ctps:\n+                if ct['status'] == \"headers-only\":\n+                    if ct['height'] == 50:\n+                        headerHeightReached = True\n+                if ct['status'] == \"active\":\n+                    assert(ct['height'] == 0)\n+            time.sleep(1)\n+            timeout-=1\n+            if headerHeightReached == True:\n+                break\n+        assert(timeout>0)\n+\n+        node0bbhash = self.nodes[0].getbestblockhash()\n+        # best block should not be validated, header must be available\n+        bh = self.nodes[1].getblockheader(node0bbhash, True)\n+\n+        assert(bh['validated'] == False)\n+        # block must not be available\n+        assert_raises_rpc_error(-1, \"Block not found on disk\", self.nodes[1].getblock, node0bbhash)\n+\n+        # request best block (auxiliary)\n+        self.nodes[1].requestblocks(\"add\", [node0bbhash])\n+        timeout = 20\n+        while timeout > 0:\n+            if self.nodes[1].requestblocks(\"status\")['count'] == 0:\n+                break;\n+            time.sleep(1)\n+            timeout-=1\n+        assert(timeout>0)\n+\n+        # block must now be available\n+        block = self.nodes[1].getblock(node0bbhash, True)\n+        assert(block['hash'] == node0bbhash)",
    "path": "test/functional/requestblocks.py",
    "position": null,
    "original_position": 55,
    "commit_id": "77561f7a4b500d0752d64ce931ce1dd613f7ab0d",
    "original_commit_id": "9ee22bf4a07eb3f1735063ad0265af129f5d8bed",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "`assert_equal`?",
    "created_at": "2017-11-23T09:48:18Z",
    "updated_at": "2018-04-18T08:58:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10794#discussion_r152756532",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10794",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152756532"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10794#discussion_r152756532"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10794"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152756532/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 55,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152756568",
    "pull_request_review_id": 78661886,
    "id": 152756568,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1Mjc1NjU2OA==",
    "diff_hunk": "@@ -0,0 +1,62 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import *\n+\n+class RequestBlockRequestTest (BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+        self.extra_args = [[], ['-autorequestblocks=0']]\n+\n+    def run_test(self):\n+        self.nodes[0].generate(50)\n+        timeout = 20\n+        ctps = self.nodes[1].getchaintips()\n+        while timeout > 0:\n+            ctps = self.nodes[1].getchaintips()\n+            headerHeightReached = False\n+            for ct in ctps:\n+                if ct['status'] == \"headers-only\":\n+                    if ct['height'] == 50:\n+                        headerHeightReached = True\n+                if ct['status'] == \"active\":\n+                    assert(ct['height'] == 0)\n+            time.sleep(1)\n+            timeout-=1\n+            if headerHeightReached == True:\n+                break\n+        assert(timeout>0)\n+\n+        node0bbhash = self.nodes[0].getbestblockhash()\n+        # best block should not be validated, header must be available\n+        bh = self.nodes[1].getblockheader(node0bbhash, True)\n+\n+        assert(bh['validated'] == False)\n+        # block must not be available\n+        assert_raises_rpc_error(-1, \"Block not found on disk\", self.nodes[1].getblock, node0bbhash)\n+\n+        # request best block (auxiliary)\n+        self.nodes[1].requestblocks(\"add\", [node0bbhash])\n+        timeout = 20\n+        while timeout > 0:\n+            if self.nodes[1].requestblocks(\"status\")['count'] == 0:\n+                break;\n+            time.sleep(1)\n+            timeout-=1\n+        assert(timeout>0)\n+\n+        # block must now be available\n+        block = self.nodes[1].getblock(node0bbhash, True)\n+        assert(block['hash'] == node0bbhash)\n+        assert(block['validated'] == False)",
    "path": "test/functional/requestblocks.py",
    "position": null,
    "original_position": 56,
    "commit_id": "77561f7a4b500d0752d64ce931ce1dd613f7ab0d",
    "original_commit_id": "9ee22bf4a07eb3f1735063ad0265af129f5d8bed",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "`assert_equal`?",
    "created_at": "2017-11-23T09:48:28Z",
    "updated_at": "2018-04-18T08:58:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10794#discussion_r152756568",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10794",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152756568"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10794#discussion_r152756568"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10794"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152756568/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 56,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152757059",
    "pull_request_review_id": 78661886,
    "id": 152757059,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1Mjc1NzA1OQ==",
    "diff_hunk": "@@ -0,0 +1,62 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import *\n+\n+class RequestBlockRequestTest (BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+        self.extra_args = [[], ['-autorequestblocks=0']]\n+\n+    def run_test(self):\n+        self.nodes[0].generate(50)\n+        timeout = 20\n+        ctps = self.nodes[1].getchaintips()\n+        while timeout > 0:\n+            ctps = self.nodes[1].getchaintips()\n+            headerHeightReached = False\n+            for ct in ctps:\n+                if ct['status'] == \"headers-only\":\n+                    if ct['height'] == 50:\n+                        headerHeightReached = True\n+                if ct['status'] == \"active\":\n+                    assert(ct['height'] == 0)\n+            time.sleep(1)\n+            timeout-=1\n+            if headerHeightReached == True:\n+                break\n+        assert(timeout>0)\n+\n+        node0bbhash = self.nodes[0].getbestblockhash()\n+        # best block should not be validated, header must be available\n+        bh = self.nodes[1].getblockheader(node0bbhash, True)\n+\n+        assert(bh['validated'] == False)\n+        # block must not be available\n+        assert_raises_rpc_error(-1, \"Block not found on disk\", self.nodes[1].getblock, node0bbhash)\n+\n+        # request best block (auxiliary)\n+        self.nodes[1].requestblocks(\"add\", [node0bbhash])\n+        timeout = 20\n+        while timeout > 0:",
    "path": "test/functional/requestblocks.py",
    "position": null,
    "original_position": 46,
    "commit_id": "77561f7a4b500d0752d64ce931ce1dd613f7ab0d",
    "original_commit_id": "9ee22bf4a07eb3f1735063ad0265af129f5d8bed",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Another option would be to use `zmq` notification, another PR maybe?",
    "created_at": "2017-11-23T09:50:34Z",
    "updated_at": "2018-04-18T08:58:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10794#discussion_r152757059",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10794",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152757059"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10794#discussion_r152757059"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10794"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152757059/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 46,
    "side": "RIGHT",
    "in_reply_to_id": 152756424
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152757129",
    "pull_request_review_id": 78661886,
    "id": 152757129,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1Mjc1NzEyOQ==",
    "diff_hunk": "@@ -0,0 +1,62 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import *\n+\n+class RequestBlockRequestTest (BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+        self.extra_args = [[], ['-autorequestblocks=0']]\n+\n+    def run_test(self):\n+        self.nodes[0].generate(50)\n+        timeout = 20\n+        ctps = self.nodes[1].getchaintips()\n+        while timeout > 0:\n+            ctps = self.nodes[1].getchaintips()\n+            headerHeightReached = False\n+            for ct in ctps:\n+                if ct['status'] == \"headers-only\":\n+                    if ct['height'] == 50:\n+                        headerHeightReached = True\n+                if ct['status'] == \"active\":\n+                    assert(ct['height'] == 0)\n+            time.sleep(1)\n+            timeout-=1\n+            if headerHeightReached == True:\n+                break\n+        assert(timeout>0)\n+\n+        node0bbhash = self.nodes[0].getbestblockhash()\n+        # best block should not be validated, header must be available\n+        bh = self.nodes[1].getblockheader(node0bbhash, True)\n+\n+        assert(bh['validated'] == False)",
    "path": "test/functional/requestblocks.py",
    "position": null,
    "original_position": 39,
    "commit_id": "77561f7a4b500d0752d64ce931ce1dd613f7ab0d",
    "original_commit_id": "9ee22bf4a07eb3f1735063ad0265af129f5d8bed",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "`assert_equal`?",
    "created_at": "2017-11-23T09:50:50Z",
    "updated_at": "2018-04-18T08:58:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10794#discussion_r152757129",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10794",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152757129"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10794#discussion_r152757129"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10794"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152757129/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 39,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152757221",
    "pull_request_review_id": 78661886,
    "id": 152757221,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1Mjc1NzIyMQ==",
    "diff_hunk": "@@ -0,0 +1,62 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import *\n+\n+class RequestBlockRequestTest (BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+        self.extra_args = [[], ['-autorequestblocks=0']]\n+\n+    def run_test(self):\n+        self.nodes[0].generate(50)\n+        timeout = 20\n+        ctps = self.nodes[1].getchaintips()\n+        while timeout > 0:",
    "path": "test/functional/requestblocks.py",
    "position": null,
    "original_position": 20,
    "commit_id": "77561f7a4b500d0752d64ce931ce1dd613f7ab0d",
    "original_commit_id": "9ee22bf4a07eb3f1735063ad0265af129f5d8bed",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Use `wait_until`?",
    "created_at": "2017-11-23T09:51:20Z",
    "updated_at": "2018-04-18T08:58:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10794#discussion_r152757221",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10794",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152757221"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10794#discussion_r152757221"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10794"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152757221/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 20,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152757315",
    "pull_request_review_id": 78661886,
    "id": 152757315,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1Mjc1NzMxNQ==",
    "diff_hunk": "@@ -0,0 +1,62 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import *\n+\n+class RequestBlockRequestTest (BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+        self.extra_args = [[], ['-autorequestblocks=0']]\n+\n+    def run_test(self):\n+        self.nodes[0].generate(50)\n+        timeout = 20\n+        ctps = self.nodes[1].getchaintips()\n+        while timeout > 0:\n+            ctps = self.nodes[1].getchaintips()\n+            headerHeightReached = False\n+            for ct in ctps:\n+                if ct['status'] == \"headers-only\":\n+                    if ct['height'] == 50:\n+                        headerHeightReached = True\n+                if ct['status'] == \"active\":\n+                    assert(ct['height'] == 0)\n+            time.sleep(1)\n+            timeout-=1\n+            if headerHeightReached == True:\n+                break\n+        assert(timeout>0)\n+\n+        node0bbhash = self.nodes[0].getbestblockhash()\n+        # best block should not be validated, header must be available\n+        bh = self.nodes[1].getblockheader(node0bbhash, True)\n+\n+        assert(bh['validated'] == False)\n+        # block must not be available\n+        assert_raises_rpc_error(-1, \"Block not found on disk\", self.nodes[1].getblock, node0bbhash)\n+\n+        # request best block (auxiliary)\n+        self.nodes[1].requestblocks(\"add\", [node0bbhash])\n+        timeout = 20\n+        while timeout > 0:\n+            if self.nodes[1].requestblocks(\"status\")['count'] == 0:\n+                break;\n+            time.sleep(1)\n+            timeout-=1\n+        assert(timeout>0)\n+\n+        # block must now be available\n+        block = self.nodes[1].getblock(node0bbhash, True)\n+        assert(block['hash'] == node0bbhash)\n+        assert(block['validated'] == False)\n+\n+        #prevblock must not be available\n+        assert_raises_rpc_error(-1, \"Block not found on disk\", self.nodes[1].getblock, block['previousblockhash'])\n+\n+if __name__ == '__main__':\n+    RequestBlockRequestTest ().main ()",
    "path": "test/functional/requestblocks.py",
    "position": null,
    "original_position": 62,
    "commit_id": "77561f7a4b500d0752d64ce931ce1dd613f7ab0d",
    "original_commit_id": "9ee22bf4a07eb3f1735063ad0265af129f5d8bed",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Nit, remove spaces?",
    "created_at": "2017-11-23T09:51:43Z",
    "updated_at": "2018-04-18T08:58:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10794#discussion_r152757315",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10794",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152757315"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10794#discussion_r152757315"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10794"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152757315/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 62,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152757582",
    "pull_request_review_id": 78661886,
    "id": 152757582,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1Mjc1NzU4Mg==",
    "diff_hunk": "@@ -1587,6 +1592,60 @@ UniValue savemempool(const JSONRPCRequest& request)\n     return NullUniValue;\n }\n \n+UniValue requestblocks(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 3)\n+        throw std::runtime_error(\n+            \"requestblocks (add|flush|status) ([\\\"hash_0\\\", \\\"hash_1\\\", ...])\\n\"\n+            \"\\nPriorize blocks downloads.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. action            (string, required) the action to execute\\n\"\n+            \"                                        add  = add new blocks to the priority download\\n\"\n+            \"                                        flush = flush the queue (blocks in-flight will still be downloaded)\\n\"\n+            \"                                        status = get info about the queue\\n\"\n+            \"2. blockhashes       (array, optional) the hashes of the blocks to download\\n\"\n+            \"\\nResult:\\n\"\n+            \"   add: <null>\\n\"\n+            \"   flush: <true|false> (if the the queue wasn't empty)\\n\"",
    "path": "src/rpc/blockchain.cpp",
    "position": 50,
    "original_position": 51,
    "commit_id": "77561f7a4b500d0752d64ce931ce1dd613f7ab0d",
    "original_commit_id": "9ee22bf4a07eb3f1735063ad0265af129f5d8bed",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Missing test for `flush`.",
    "created_at": "2017-11-23T09:53:03Z",
    "updated_at": "2018-04-18T08:58:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10794#discussion_r152757582",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10794",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152757582"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10794#discussion_r152757582"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10794"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152757582/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1647,
    "original_line": 1647,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152758669",
    "pull_request_review_id": 78661886,
    "id": 152758669,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1Mjc1ODY2OQ==",
    "diff_hunk": "@@ -1587,6 +1592,60 @@ UniValue savemempool(const JSONRPCRequest& request)\n     return NullUniValue;\n }\n \n+UniValue requestblocks(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 3)\n+        throw std::runtime_error(\n+            \"requestblocks (add|flush|status) ([\\\"hash_0\\\", \\\"hash_1\\\", ...])\\n\"\n+            \"\\nPriorize blocks downloads.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. action            (string, required) the action to execute\\n\"\n+            \"                                        add  = add new blocks to the priority download\\n\"\n+            \"                                        flush = flush the queue (blocks in-flight will still be downloaded)\\n\"\n+            \"                                        status = get info about the queue\\n\"\n+            \"2. blockhashes       (array, optional) the hashes of the blocks to download\\n\"\n+            \"\\nResult:\\n\"\n+            \"   add: <null>\\n\"\n+            \"   flush: <true|false> (if the the queue wasn't empty)\\n\"\n+            \"   status: {\\\"count\\\": \\\"<amount of blocks in the queue>\\\"}\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"requestblocks\", \"add, \\\"'[\\\"<blockhash>\\\"]'\\\"\")\n+            + HelpExampleRpc(\"requestblocks\", \"add, \\\"'[\\\"<blockhash>\\\"]'\\\"\")\n+            );\n+\n+    if (request.params[0].get_str() == \"flush\") {\n+        return UniValue(FlushPriorityDownloads());\n+    }\n+    else if (request.params[0].get_str() == \"status\") {\n+        UniValue ret(UniValue::VOBJ);\n+        ret.push_back(Pair(\"count\", (uint64_t)CountPriorityDownloads()));\n+        return ret;\n+    }\n+    else if (request.params[0].get_str() == \"add\") {\n+        if (request.params.size() < 2) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Missing blocks array\");",
    "path": "src/rpc/blockchain.cpp",
    "position": null,
    "original_position": 68,
    "commit_id": "77561f7a4b500d0752d64ce931ce1dd613f7ab0d",
    "original_commit_id": "9ee22bf4a07eb3f1735063ad0265af129f5d8bed",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Missing test for this error.",
    "created_at": "2017-11-23T09:57:52Z",
    "updated_at": "2018-04-18T08:58:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10794#discussion_r152758669",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10794",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152758669"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10794#discussion_r152758669"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10794"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152758669/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1664,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152758780",
    "pull_request_review_id": 78661886,
    "id": 152758780,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1Mjc1ODc4MA==",
    "diff_hunk": "@@ -1587,6 +1592,60 @@ UniValue savemempool(const JSONRPCRequest& request)\n     return NullUniValue;\n }\n \n+UniValue requestblocks(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 3)\n+        throw std::runtime_error(\n+            \"requestblocks (add|flush|status) ([\\\"hash_0\\\", \\\"hash_1\\\", ...])\\n\"\n+            \"\\nPriorize blocks downloads.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. action            (string, required) the action to execute\\n\"\n+            \"                                        add  = add new blocks to the priority download\\n\"\n+            \"                                        flush = flush the queue (blocks in-flight will still be downloaded)\\n\"\n+            \"                                        status = get info about the queue\\n\"\n+            \"2. blockhashes       (array, optional) the hashes of the blocks to download\\n\"\n+            \"\\nResult:\\n\"\n+            \"   add: <null>\\n\"\n+            \"   flush: <true|false> (if the the queue wasn't empty)\\n\"\n+            \"   status: {\\\"count\\\": \\\"<amount of blocks in the queue>\\\"}\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"requestblocks\", \"add, \\\"'[\\\"<blockhash>\\\"]'\\\"\")\n+            + HelpExampleRpc(\"requestblocks\", \"add, \\\"'[\\\"<blockhash>\\\"]'\\\"\")\n+            );\n+\n+    if (request.params[0].get_str() == \"flush\") {\n+        return UniValue(FlushPriorityDownloads());\n+    }\n+    else if (request.params[0].get_str() == \"status\") {\n+        UniValue ret(UniValue::VOBJ);\n+        ret.push_back(Pair(\"count\", (uint64_t)CountPriorityDownloads()));\n+        return ret;\n+    }\n+    else if (request.params[0].get_str() == \"add\") {\n+        if (request.params.size() < 2) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Missing blocks array\");\n+        }\n+        std::vector<const CBlockIndex*> blocksToDownload;\n+        {\n+            LOCK(cs_main); //mapBlockIndex\n+            for (const UniValue& strHashU : request.params[1].get_array().getValues())\n+            {\n+                uint256 hash(uint256S(strHashU.get_str()));\n+                BlockMap::iterator mi = mapBlockIndex.find(hash);\n+                if (mi == mapBlockIndex.end())",
    "path": "src/rpc/blockchain.cpp",
    "position": null,
    "original_position": 77,
    "commit_id": "77561f7a4b500d0752d64ce931ce1dd613f7ab0d",
    "original_commit_id": "9ee22bf4a07eb3f1735063ad0265af129f5d8bed",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Nit, add `{ }`",
    "created_at": "2017-11-23T09:58:19Z",
    "updated_at": "2018-04-18T08:58:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10794#discussion_r152758780",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10794",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152758780"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10794#discussion_r152758780"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10794"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152758780/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1635,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152758932",
    "pull_request_review_id": 78661886,
    "id": 152758932,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1Mjc1ODkzMg==",
    "diff_hunk": "@@ -1587,6 +1592,60 @@ UniValue savemempool(const JSONRPCRequest& request)\n     return NullUniValue;\n }\n \n+UniValue requestblocks(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 3)\n+        throw std::runtime_error(\n+            \"requestblocks (add|flush|status) ([\\\"hash_0\\\", \\\"hash_1\\\", ...])\\n\"\n+            \"\\nPriorize blocks downloads.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. action            (string, required) the action to execute\\n\"\n+            \"                                        add  = add new blocks to the priority download\\n\"\n+            \"                                        flush = flush the queue (blocks in-flight will still be downloaded)\\n\"\n+            \"                                        status = get info about the queue\\n\"\n+            \"2. blockhashes       (array, optional) the hashes of the blocks to download\\n\"\n+            \"\\nResult:\\n\"\n+            \"   add: <null>\\n\"\n+            \"   flush: <true|false> (if the the queue wasn't empty)\\n\"\n+            \"   status: {\\\"count\\\": \\\"<amount of blocks in the queue>\\\"}\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"requestblocks\", \"add, \\\"'[\\\"<blockhash>\\\"]'\\\"\")\n+            + HelpExampleRpc(\"requestblocks\", \"add, \\\"'[\\\"<blockhash>\\\"]'\\\"\")\n+            );\n+\n+    if (request.params[0].get_str() == \"flush\") {\n+        return UniValue(FlushPriorityDownloads());\n+    }\n+    else if (request.params[0].get_str() == \"status\") {\n+        UniValue ret(UniValue::VOBJ);\n+        ret.push_back(Pair(\"count\", (uint64_t)CountPriorityDownloads()));\n+        return ret;\n+    }\n+    else if (request.params[0].get_str() == \"add\") {\n+        if (request.params.size() < 2) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Missing blocks array\");\n+        }\n+        std::vector<const CBlockIndex*> blocksToDownload;\n+        {\n+            LOCK(cs_main); //mapBlockIndex\n+            for (const UniValue& strHashU : request.params[1].get_array().getValues())\n+            {\n+                uint256 hash(uint256S(strHashU.get_str()));\n+                BlockMap::iterator mi = mapBlockIndex.find(hash);",
    "path": "src/rpc/blockchain.cpp",
    "position": null,
    "original_position": 76,
    "commit_id": "77561f7a4b500d0752d64ce931ce1dd613f7ab0d",
    "original_commit_id": "9ee22bf4a07eb3f1735063ad0265af129f5d8bed",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "`BlockMap::const_iterator`?",
    "created_at": "2017-11-23T09:58:54Z",
    "updated_at": "2018-04-18T08:58:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10794#discussion_r152758932",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10794",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152758932"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10794#discussion_r152758932"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10794"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152758932/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1634,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152759754",
    "pull_request_review_id": 78661886,
    "id": 152759754,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1Mjc1OTc1NA==",
    "diff_hunk": "@@ -1587,6 +1592,60 @@ UniValue savemempool(const JSONRPCRequest& request)\n     return NullUniValue;\n }\n \n+UniValue requestblocks(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 3)",
    "path": "src/rpc/blockchain.cpp",
    "position": null,
    "original_position": 39,
    "commit_id": "77561f7a4b500d0752d64ce931ce1dd613f7ab0d",
    "original_commit_id": "9ee22bf4a07eb3f1735063ad0265af129f5d8bed",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Should be `> 2`?",
    "created_at": "2017-11-23T10:02:36Z",
    "updated_at": "2018-04-18T08:58:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10794#discussion_r152759754",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10794",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152759754"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10794#discussion_r152759754"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10794"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152759754/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1597,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152760159",
    "pull_request_review_id": 78661886,
    "id": 152760159,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1Mjc2MDE1OQ==",
    "diff_hunk": "@@ -645,6 +649,7 @@ UniValue getblockheader(const JSONRPCRequest& request)\n             \"{\\n\"\n             \"  \\\"hash\\\" : \\\"hash\\\",     (string) the block hash (same as provided)\\n\"\n             \"  \\\"confirmations\\\" : n,   (numeric) The number of confirmations, or -1 if the block is not on the main chain\\n\"\n+            \"  \\\"validated\\\" : n,       (boolean) True if the block has been validated\\n\"",
    "path": "src/rpc/blockchain.cpp",
    "position": 28,
    "original_position": 29,
    "commit_id": "77561f7a4b500d0752d64ce931ce1dd613f7ab0d",
    "original_commit_id": "9ee22bf4a07eb3f1735063ad0265af129f5d8bed",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Should update `getblockheader` test?\r\nhttps://github.com/bitcoin/bitcoin/blob/84fa64598e8b7d6901c546e938fb0eeda625a8e8/test/functional/blockchain.py#L173-L198",
    "created_at": "2017-11-23T10:04:34Z",
    "updated_at": "2018-04-18T08:58:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10794#discussion_r152760159",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10794",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152760159"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10794#discussion_r152760159"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10794"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152760159/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 687,
    "original_line": 687,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152760604",
    "pull_request_review_id": 78661886,
    "id": 152760604,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1Mjc2MDYwNA==",
    "diff_hunk": "@@ -81,4 +83,18 @@ bool GetNodeStateStats(NodeId nodeid, CNodeStateStats &stats);\n /** Increase a node's misbehavior score. */\n void Misbehaving(NodeId nodeid, int howmuch);\n \n+/**\n+ * Prioritize a block for downloading\n+ * Blocks requested with priority will be downloaded and processed first\n+ * Downloaded blocks will not trigger ActivateBestChain\n+ */\n+void AddPriorityDownload(std::vector<const CBlockIndex*>& blocksToDownload);",
    "path": "src/net_processing.h",
    "position": null,
    "original_position": 18,
    "commit_id": "77561f7a4b500d0752d64ce931ce1dd613f7ab0d",
    "original_commit_id": "9ee22bf4a07eb3f1735063ad0265af129f5d8bed",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Arg reference should be const:\r\n```cpp\r\nconst std::vector<const CBlockIndex*>& blocks_to_download\r\n```",
    "created_at": "2017-11-23T10:06:36Z",
    "updated_at": "2018-04-18T08:58:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10794#discussion_r152760604",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10794",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152760604"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10794#discussion_r152760604"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10794"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152760604/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 91,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152760747",
    "pull_request_review_id": 78661886,
    "id": 152760747,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1Mjc2MDc0Nw==",
    "diff_hunk": "@@ -3647,6 +3699,74 @@ bool PeerLogicValidation::SendMessages(CNode* pto, std::atomic<bool>& interruptM\n     return true;\n }\n \n+void AddPriorityDownload(std::vector<const CBlockIndex*>& blocksToDownload) {\n+    LOCK(cs_main);\n+    for (const CBlockIndex* pindex: blocksToDownload) {\n+        // we add blocks regardless of duplicates\n+        blocksToDownloadFirst.push_back({pindex, false});\n+    }\n+}\n+\n+void ProcessPriorityRequests(const std::shared_ptr<CBlock> blockRef) {\n+    LOCK(cs_main);\n+    if (blocksToDownloadFirst.empty()) {\n+        return;\n+    }\n+    auto it = std::begin(blocksToDownloadFirst);\n+    while (it != std::end(blocksToDownloadFirst)) {\n+        std::shared_ptr<const CBlock> currentBlock;\n+        const PriorityBlockRequest &r = *it;\n+        // make sure we process blocks in order\n+        if (!r.downloaded) {\n+            break;\n+        }\n+        if (r.pindex && blockRef && blockRef->GetHash() == r.pindex->GetBlockHash()) {\n+            // the passed in block, no need to load again from disk\n+            currentBlock = blockRef;\n+        }\n+        else if (r.pindex->nStatus & BLOCK_HAVE_DATA) {\n+            CBlock loadBlock;\n+            if (!ReadBlockFromDisk(loadBlock, r.pindex, Params().GetConsensus())) {\n+                throw std::runtime_error(std::string(__func__) + \"Can't read block from disk\");\n+            }\n+            currentBlock = std::make_shared<const CBlock>(loadBlock);\n+        }\n+        else {\n+            break;\n+        }\n+\n+        // allow processing through signal\n+        GetMainSignals().ProcessPriorityRequest(currentBlock, r.pindex);\n+        LogPrint(BCLog::NET, \"process priority block request (%s) height=%d\\n\", r.pindex->GetBlockHash().ToString(), r.pindex->nHeight);\n+\n+        // remove processed block from queue\n+        it = blocksToDownloadFirst.erase(std::remove_if(blocksToDownloadFirst.begin(), blocksToDownloadFirst.end(), [&r](const PriorityBlockRequest &rB) {\n+                                        return rB.pindex == r.pindex;\n+                                    }), blocksToDownloadFirst.end());\n+    }\n+}\n+\n+bool FlushPriorityDownloads() {\n+    LOCK(cs_main);\n+    bool ret = blocksToDownloadFirst.empty();\n+    blocksToDownloadFirst.clear();\n+    return !ret;\n+}\n+\n+size_t CountPriorityDownloads() {\n+    // return a copy",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 290,
    "commit_id": "77561f7a4b500d0752d64ce931ce1dd613f7ab0d",
    "original_commit_id": "9ee22bf4a07eb3f1735063ad0265af129f5d8bed",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Copy of?",
    "created_at": "2017-11-23T10:07:16Z",
    "updated_at": "2018-04-18T08:58:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10794#discussion_r152760747",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10794",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152760747"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10794#discussion_r152760747"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10794"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152760747/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3757,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152761744",
    "pull_request_review_id": 78661886,
    "id": 152761744,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1Mjc2MTc0NA==",
    "diff_hunk": "@@ -3647,6 +3699,74 @@ bool PeerLogicValidation::SendMessages(CNode* pto, std::atomic<bool>& interruptM\n     return true;\n }\n \n+void AddPriorityDownload(std::vector<const CBlockIndex*>& blocksToDownload) {\n+    LOCK(cs_main);\n+    for (const CBlockIndex* pindex: blocksToDownload) {\n+        // we add blocks regardless of duplicates\n+        blocksToDownloadFirst.push_back({pindex, false});\n+    }\n+}\n+\n+void ProcessPriorityRequests(const std::shared_ptr<CBlock> blockRef) {\n+    LOCK(cs_main);\n+    if (blocksToDownloadFirst.empty()) {\n+        return;\n+    }\n+    auto it = std::begin(blocksToDownloadFirst);\n+    while (it != std::end(blocksToDownloadFirst)) {\n+        std::shared_ptr<const CBlock> currentBlock;\n+        const PriorityBlockRequest &r = *it;\n+        // make sure we process blocks in order\n+        if (!r.downloaded) {\n+            break;\n+        }\n+        if (r.pindex && blockRef && blockRef->GetHash() == r.pindex->GetBlockHash()) {\n+            // the passed in block, no need to load again from disk\n+            currentBlock = blockRef;\n+        }\n+        else if (r.pindex->nStatus & BLOCK_HAVE_DATA) {\n+            CBlock loadBlock;\n+            if (!ReadBlockFromDisk(loadBlock, r.pindex, Params().GetConsensus())) {\n+                throw std::runtime_error(std::string(__func__) + \"Can't read block from disk\");\n+            }\n+            currentBlock = std::make_shared<const CBlock>(loadBlock);\n+        }\n+        else {\n+            break;",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 268,
    "commit_id": "77561f7a4b500d0752d64ce931ce1dd613f7ab0d",
    "original_commit_id": "9ee22bf4a07eb3f1735063ad0265af129f5d8bed",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Add comment explaining this case?",
    "created_at": "2017-11-23T10:11:47Z",
    "updated_at": "2018-04-18T08:58:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10794#discussion_r152761744",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10794",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152761744"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10794#discussion_r152761744"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10794"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152761744/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3810,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152761760",
    "pull_request_review_id": 78661886,
    "id": 152761760,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1Mjc2MTc2MA==",
    "diff_hunk": "@@ -3647,6 +3699,74 @@ bool PeerLogicValidation::SendMessages(CNode* pto, std::atomic<bool>& interruptM\n     return true;\n }\n \n+void AddPriorityDownload(std::vector<const CBlockIndex*>& blocksToDownload) {\n+    LOCK(cs_main);\n+    for (const CBlockIndex* pindex: blocksToDownload) {\n+        // we add blocks regardless of duplicates\n+        blocksToDownloadFirst.push_back({pindex, false});\n+    }\n+}\n+\n+void ProcessPriorityRequests(const std::shared_ptr<CBlock> blockRef) {\n+    LOCK(cs_main);",
    "path": "src/net_processing.cpp",
    "position": 246,
    "original_position": 244,
    "commit_id": "77561f7a4b500d0752d64ce931ce1dd613f7ab0d",
    "original_commit_id": "9ee22bf4a07eb3f1735063ad0265af129f5d8bed",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "`cs_main` is locked throughout. It is enough to lock when dequeuing right? If dequeuing fails then return.",
    "created_at": "2017-11-23T10:11:50Z",
    "updated_at": "2018-04-18T08:58:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10794#discussion_r152761760",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10794",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152761760"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10794#discussion_r152761760"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10794"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152761760/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 3785,
    "original_line": 3785,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152761873",
    "pull_request_review_id": 78661886,
    "id": 152761873,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1Mjc2MTg3Mw==",
    "diff_hunk": "@@ -3647,6 +3699,74 @@ bool PeerLogicValidation::SendMessages(CNode* pto, std::atomic<bool>& interruptM\n     return true;\n }\n \n+void AddPriorityDownload(std::vector<const CBlockIndex*>& blocksToDownload) {\n+    LOCK(cs_main);\n+    for (const CBlockIndex* pindex: blocksToDownload) {\n+        // we add blocks regardless of duplicates\n+        blocksToDownloadFirst.push_back({pindex, false});\n+    }\n+}\n+\n+void ProcessPriorityRequests(const std::shared_ptr<CBlock> blockRef) {\n+    LOCK(cs_main);\n+    if (blocksToDownloadFirst.empty()) {\n+        return;\n+    }\n+    auto it = std::begin(blocksToDownloadFirst);\n+    while (it != std::end(blocksToDownloadFirst)) {\n+        std::shared_ptr<const CBlock> currentBlock;\n+        const PriorityBlockRequest &r = *it;\n+        // make sure we process blocks in order\n+        if (!r.downloaded) {\n+            break;\n+        }\n+        if (r.pindex && blockRef && blockRef->GetHash() == r.pindex->GetBlockHash()) {\n+            // the passed in block, no need to load again from disk\n+            currentBlock = blockRef;\n+        }\n+        else if (r.pindex->nStatus & BLOCK_HAVE_DATA) {\n+            CBlock loadBlock;\n+            if (!ReadBlockFromDisk(loadBlock, r.pindex, Params().GetConsensus())) {\n+                throw std::runtime_error(std::string(__func__) + \"Can't read block from disk\");\n+            }\n+            currentBlock = std::make_shared<const CBlock>(loadBlock);\n+        }\n+        else {\n+            break;\n+        }\n+\n+        // allow processing through signal\n+        GetMainSignals().ProcessPriorityRequest(currentBlock, r.pindex);\n+        LogPrint(BCLog::NET, \"process priority block request (%s) height=%d\\n\", r.pindex->GetBlockHash().ToString(), r.pindex->nHeight);",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 273,
    "commit_id": "77561f7a4b500d0752d64ce931ce1dd613f7ab0d",
    "original_commit_id": "9ee22bf4a07eb3f1735063ad0265af129f5d8bed",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Move log before signal?",
    "created_at": "2017-11-23T10:12:22Z",
    "updated_at": "2018-04-18T08:58:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10794#discussion_r152761873",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10794",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152761873"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10794#discussion_r152761873"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10794"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152761873/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3740,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152762352",
    "pull_request_review_id": 78661886,
    "id": 152762352,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1Mjc2MjM1Mg==",
    "diff_hunk": "@@ -3647,6 +3699,74 @@ bool PeerLogicValidation::SendMessages(CNode* pto, std::atomic<bool>& interruptM\n     return true;\n }\n \n+void AddPriorityDownload(std::vector<const CBlockIndex*>& blocksToDownload) {\n+    LOCK(cs_main);\n+    for (const CBlockIndex* pindex: blocksToDownload) {\n+        // we add blocks regardless of duplicates\n+        blocksToDownloadFirst.push_back({pindex, false});\n+    }\n+}\n+\n+void ProcessPriorityRequests(const std::shared_ptr<CBlock> blockRef) {\n+    LOCK(cs_main);\n+    if (blocksToDownloadFirst.empty()) {\n+        return;\n+    }\n+    auto it = std::begin(blocksToDownloadFirst);\n+    while (it != std::end(blocksToDownloadFirst)) {\n+        std::shared_ptr<const CBlock> currentBlock;\n+        const PriorityBlockRequest &r = *it;\n+        // make sure we process blocks in order\n+        if (!r.downloaded) {\n+            break;\n+        }\n+        if (r.pindex && blockRef && blockRef->GetHash() == r.pindex->GetBlockHash()) {\n+            // the passed in block, no need to load again from disk\n+            currentBlock = blockRef;\n+        }\n+        else if (r.pindex->nStatus & BLOCK_HAVE_DATA) {\n+            CBlock loadBlock;\n+            if (!ReadBlockFromDisk(loadBlock, r.pindex, Params().GetConsensus())) {\n+                throw std::runtime_error(std::string(__func__) + \"Can't read block from disk\");\n+            }\n+            currentBlock = std::make_shared<const CBlock>(loadBlock);\n+        }\n+        else {\n+            break;\n+        }\n+\n+        // allow processing through signal\n+        GetMainSignals().ProcessPriorityRequest(currentBlock, r.pindex);\n+        LogPrint(BCLog::NET, \"process priority block request (%s) height=%d\\n\", r.pindex->GetBlockHash().ToString(), r.pindex->nHeight);\n+\n+        // remove processed block from queue\n+        it = blocksToDownloadFirst.erase(std::remove_if(blocksToDownloadFirst.begin(), blocksToDownloadFirst.end(), [&r](const PriorityBlockRequest &rB) {",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 276,
    "commit_id": "77561f7a4b500d0752d64ce931ce1dd613f7ab0d",
    "original_commit_id": "9ee22bf4a07eb3f1735063ad0265af129f5d8bed",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Is removing duplicates here really necessary? Blocks with `BLOCK_HAVE_DATA` will be skipped.",
    "created_at": "2017-11-23T10:14:45Z",
    "updated_at": "2018-04-18T08:58:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10794#discussion_r152762352",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10794",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152762352"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10794#discussion_r152762352"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10794"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152762352/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3818,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152762499",
    "pull_request_review_id": 78661886,
    "id": 152762499,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1Mjc2MjQ5OQ==",
    "diff_hunk": "@@ -1587,6 +1592,60 @@ UniValue savemempool(const JSONRPCRequest& request)\n     return NullUniValue;\n }\n \n+UniValue requestblocks(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 3)\n+        throw std::runtime_error(\n+            \"requestblocks (add|flush|status) ([\\\"hash_0\\\", \\\"hash_1\\\", ...])\\n\"\n+            \"\\nPriorize blocks downloads.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. action            (string, required) the action to execute\\n\"\n+            \"                                        add  = add new blocks to the priority download\\n\"\n+            \"                                        flush = flush the queue (blocks in-flight will still be downloaded)\\n\"\n+            \"                                        status = get info about the queue\\n\"\n+            \"2. blockhashes       (array, optional) the hashes of the blocks to download\\n\"\n+            \"\\nResult:\\n\"\n+            \"   add: <null>\\n\"\n+            \"   flush: <true|false> (if the the queue wasn't empty)\\n\"",
    "path": "src/rpc/blockchain.cpp",
    "position": 50,
    "original_position": 51,
    "commit_id": "77561f7a4b500d0752d64ce931ce1dd613f7ab0d",
    "original_commit_id": "9ee22bf4a07eb3f1735063ad0265af129f5d8bed",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "What is the purpose of the return value?",
    "created_at": "2017-11-23T10:15:28Z",
    "updated_at": "2018-04-18T08:58:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10794#discussion_r152762499",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10794",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152762499"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10794#discussion_r152762499"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10794"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152762499/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1647,
    "original_line": 1647,
    "side": "RIGHT",
    "in_reply_to_id": 152757582
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152762788",
    "pull_request_review_id": 78661886,
    "id": 152762788,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1Mjc2Mjc4OA==",
    "diff_hunk": "@@ -81,4 +83,18 @@ bool GetNodeStateStats(NodeId nodeid, CNodeStateStats &stats);\n /** Increase a node's misbehavior score. */\n void Misbehaving(NodeId nodeid, int howmuch);\n \n+/**\n+ * Prioritize a block for downloading\n+ * Blocks requested with priority will be downloaded and processed first\n+ * Downloaded blocks will not trigger ActivateBestChain\n+ */\n+void AddPriorityDownload(std::vector<const CBlockIndex*>& blocksToDownload);\n+void ProcessPriorityRequests(const std::shared_ptr<CBlock> block);\n+bool FlushPriorityDownloads();\n+size_t CountPriorityDownloads();\n+void ProcessPriorityRequests(const std::shared_ptr<CBlock> block);",
    "path": "src/net_processing.h",
    "position": null,
    "original_position": 22,
    "commit_id": "77561f7a4b500d0752d64ce931ce1dd613f7ab0d",
    "original_commit_id": "9ee22bf4a07eb3f1735063ad0265af129f5d8bed",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Remove, duplicate declaration.",
    "created_at": "2017-11-23T10:16:48Z",
    "updated_at": "2018-04-18T08:58:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10794#discussion_r152762788",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10794",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152762788"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10794#discussion_r152762788"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10794"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152762788/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 95,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152765041",
    "pull_request_review_id": 78661886,
    "id": 152765041,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1Mjc2NTA0MQ==",
    "diff_hunk": "@@ -473,9 +498,26 @@ void FindNextBlocksToDownload(NodeId nodeid, unsigned int count, std::vector<con\n     // Make sure pindexBestKnownBlock is up to date, we'll need it.\n     ProcessBlockAvailability(nodeid);\n \n+    if (!blocksToDownloadFirst.empty()) {\n+        for (const PriorityBlockRequest &r: blocksToDownloadFirst) {\n+            if (r.downloaded) continue;\n+            if (r.pindex && state->pindexBestKnownBlock != NULL && state->pindexBestKnownBlock->nHeight >= r.pindex->nHeight && !mapBlocksInFlight.count(r.pindex->GetBlockHash())) {",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 112,
    "commit_id": "77561f7a4b500d0752d64ce931ce1dd613f7ab0d",
    "original_commit_id": "9ee22bf4a07eb3f1735063ad0265af129f5d8bed",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Split in multiple tests. Suggestion for loop body:\r\n```cpp\r\nif (!r.pindex) continue;\r\nif (state->pindexBestKnownBlock == nullptr) continue;\r\nif (state->pindexBestKnownBlock->nHeight < r.pindex->nHeight) continue;\r\nif (mapBlocksInFlight.count(r.pindex->GetBlockHash())) continue;\r\n\r\nvBlocks.push_back(r.pindex);\r\n\r\nif (vBlocks.size() == count) break;\r\n```\r\nIMHO more readable and more easier to add comments.",
    "created_at": "2017-11-23T10:26:56Z",
    "updated_at": "2018-04-18T08:58:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10794#discussion_r152765041",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10794",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152765041"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10794#discussion_r152765041"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10794"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152765041/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 504,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152765310",
    "pull_request_review_id": 78661886,
    "id": 152765310,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1Mjc2NTMxMA==",
    "diff_hunk": "@@ -473,9 +498,26 @@ void FindNextBlocksToDownload(NodeId nodeid, unsigned int count, std::vector<con\n     // Make sure pindexBestKnownBlock is up to date, we'll need it.\n     ProcessBlockAvailability(nodeid);\n \n+    if (!blocksToDownloadFirst.empty()) {\n+        for (const PriorityBlockRequest &r: blocksToDownloadFirst) {\n+            if (r.downloaded) continue;\n+            if (r.pindex && state->pindexBestKnownBlock != NULL && state->pindexBestKnownBlock->nHeight >= r.pindex->nHeight && !mapBlocksInFlight.count(r.pindex->GetBlockHash())) {",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 112,
    "commit_id": "77561f7a4b500d0752d64ce931ce1dd613f7ab0d",
    "original_commit_id": "9ee22bf4a07eb3f1735063ad0265af129f5d8bed",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Otherwise, replace `NULL` with nullptr and use `break` instead of `return true`.",
    "created_at": "2017-11-23T10:28:10Z",
    "updated_at": "2018-04-18T08:58:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10794#discussion_r152765310",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10794",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152765310"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10794#discussion_r152765310"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10794"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152765310/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 504,
    "side": "RIGHT",
    "in_reply_to_id": 152765041
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152765681",
    "pull_request_review_id": 78675190,
    "id": 152765681,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1Mjc2NTY4MQ==",
    "diff_hunk": "@@ -136,6 +139,13 @@ namespace {\n     MapRelay mapRelay;\n     /** Expiration-time ordered list of (expire time, relay map entry) pairs, protected by cs_main). */\n     std::deque<std::pair<int64_t, MapRelay::iterator>> vRelayExpiration;\n+\n+    struct PriorityBlockRequest {",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 22,
    "commit_id": "77561f7a4b500d0752d64ce931ce1dd613f7ab0d",
    "original_commit_id": "9ee22bf4a07eb3f1735063ad0265af129f5d8bed",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Same for other structs.",
    "created_at": "2017-11-23T10:30:00Z",
    "updated_at": "2018-04-18T08:58:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10794#discussion_r152765681",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10794",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152765681"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10794#discussion_r152765681"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10794"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152765681/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 143,
    "side": "RIGHT",
    "in_reply_to_id": 152754098
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152776819",
    "pull_request_review_id": 78688601,
    "id": 152776819,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1Mjc3NjgxOQ==",
    "diff_hunk": "@@ -1587,6 +1592,60 @@ UniValue savemempool(const JSONRPCRequest& request)\n     return NullUniValue;\n }\n \n+UniValue requestblocks(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 3)\n+        throw std::runtime_error(\n+            \"requestblocks (add|flush|status) ([\\\"hash_0\\\", \\\"hash_1\\\", ...])\\n\"\n+            \"\\nPriorize blocks downloads.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. action            (string, required) the action to execute\\n\"\n+            \"                                        add  = add new blocks to the priority download\\n\"\n+            \"                                        flush = flush the queue (blocks in-flight will still be downloaded)\\n\"\n+            \"                                        status = get info about the queue\\n\"\n+            \"2. blockhashes       (array, optional) the hashes of the blocks to download\\n\"\n+            \"\\nResult:\\n\"\n+            \"   add: <null>\\n\"\n+            \"   flush: <true|false> (if the the queue wasn't empty)\\n\"\n+            \"   status: {\\\"count\\\": \\\"<amount of blocks in the queue>\\\"}\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"requestblocks\", \"add, \\\"'[\\\"<blockhash>\\\"]'\\\"\")\n+            + HelpExampleRpc(\"requestblocks\", \"add, \\\"'[\\\"<blockhash>\\\"]'\\\"\")\n+            );\n+\n+    if (request.params[0].get_str() == \"flush\") {\n+        return UniValue(FlushPriorityDownloads());",
    "path": "src/rpc/blockchain.cpp",
    "position": 58,
    "original_position": 59,
    "commit_id": "77561f7a4b500d0752d64ce931ce1dd613f7ab0d",
    "original_commit_id": "9ee22bf4a07eb3f1735063ad0265af129f5d8bed",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Assert `request.params[1]` is null. Same for status.",
    "created_at": "2017-11-23T11:24:13Z",
    "updated_at": "2018-04-18T08:58:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10794#discussion_r152776819",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10794",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152776819"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10794#discussion_r152776819"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10794"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152776819/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1655,
    "original_line": 1655,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152870033",
    "pull_request_review_id": 78798629,
    "id": 152870033,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1Mjg3MDAzMw==",
    "diff_hunk": "@@ -3647,6 +3699,74 @@ bool PeerLogicValidation::SendMessages(CNode* pto, std::atomic<bool>& interruptM\n     return true;\n }\n \n+void AddPriorityDownload(std::vector<const CBlockIndex*>& blocksToDownload) {\n+    LOCK(cs_main);\n+    for (const CBlockIndex* pindex: blocksToDownload) {\n+        // we add blocks regardless of duplicates\n+        blocksToDownloadFirst.push_back({pindex, false});\n+    }\n+}\n+\n+void ProcessPriorityRequests(const std::shared_ptr<CBlock> blockRef) {\n+    LOCK(cs_main);\n+    if (blocksToDownloadFirst.empty()) {\n+        return;\n+    }\n+    auto it = std::begin(blocksToDownloadFirst);\n+    while (it != std::end(blocksToDownloadFirst)) {\n+        std::shared_ptr<const CBlock> currentBlock;\n+        const PriorityBlockRequest &r = *it;\n+        // make sure we process blocks in order\n+        if (!r.downloaded) {\n+            break;\n+        }\n+        if (r.pindex && blockRef && blockRef->GetHash() == r.pindex->GetBlockHash()) {\n+            // the passed in block, no need to load again from disk\n+            currentBlock = blockRef;\n+        }\n+        else if (r.pindex->nStatus & BLOCK_HAVE_DATA) {\n+            CBlock loadBlock;\n+            if (!ReadBlockFromDisk(loadBlock, r.pindex, Params().GetConsensus())) {\n+                throw std::runtime_error(std::string(__func__) + \"Can't read block from disk\");\n+            }\n+            currentBlock = std::make_shared<const CBlock>(loadBlock);\n+        }\n+        else {\n+            break;\n+        }\n+\n+        // allow processing through signal\n+        GetMainSignals().ProcessPriorityRequest(currentBlock, r.pindex);\n+        LogPrint(BCLog::NET, \"process priority block request (%s) height=%d\\n\", r.pindex->GetBlockHash().ToString(), r.pindex->nHeight);",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 273,
    "commit_id": "77561f7a4b500d0752d64ce931ce1dd613f7ab0d",
    "original_commit_id": "9ee22bf4a07eb3f1735063ad0265af129f5d8bed",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think it's okay after, but should say \"processed\" instead of \"process\".",
    "created_at": "2017-11-23T20:49:22Z",
    "updated_at": "2018-04-18T08:58:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10794#discussion_r152870033",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10794",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152870033"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10794#discussion_r152870033"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10794"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152870033/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3740,
    "side": "RIGHT",
    "in_reply_to_id": 152761873
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152870189",
    "pull_request_review_id": 78798808,
    "id": 152870189,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1Mjg3MDE4OQ==",
    "diff_hunk": "@@ -3647,6 +3699,74 @@ bool PeerLogicValidation::SendMessages(CNode* pto, std::atomic<bool>& interruptM\n     return true;\n }\n \n+void AddPriorityDownload(std::vector<const CBlockIndex*>& blocksToDownload) {\n+    LOCK(cs_main);\n+    for (const CBlockIndex* pindex: blocksToDownload) {\n+        // we add blocks regardless of duplicates\n+        blocksToDownloadFirst.push_back({pindex, false});\n+    }\n+}\n+\n+void ProcessPriorityRequests(const std::shared_ptr<CBlock> blockRef) {\n+    LOCK(cs_main);\n+    if (blocksToDownloadFirst.empty()) {\n+        return;\n+    }\n+    auto it = std::begin(blocksToDownloadFirst);\n+    while (it != std::end(blocksToDownloadFirst)) {\n+        std::shared_ptr<const CBlock> currentBlock;\n+        const PriorityBlockRequest &r = *it;\n+        // make sure we process blocks in order\n+        if (!r.downloaded) {\n+            break;\n+        }\n+        if (r.pindex && blockRef && blockRef->GetHash() == r.pindex->GetBlockHash()) {\n+            // the passed in block, no need to load again from disk\n+            currentBlock = blockRef;\n+        }\n+        else if (r.pindex->nStatus & BLOCK_HAVE_DATA) {\n+            CBlock loadBlock;\n+            if (!ReadBlockFromDisk(loadBlock, r.pindex, Params().GetConsensus())) {\n+                throw std::runtime_error(std::string(__func__) + \"Can't read block from disk\");\n+            }\n+            currentBlock = std::make_shared<const CBlock>(loadBlock);\n+        }\n+        else {\n+            break;\n+        }\n+\n+        // allow processing through signal\n+        GetMainSignals().ProcessPriorityRequest(currentBlock, r.pindex);\n+        LogPrint(BCLog::NET, \"process priority block request (%s) height=%d\\n\", r.pindex->GetBlockHash().ToString(), r.pindex->nHeight);\n+\n+        // remove processed block from queue\n+        it = blocksToDownloadFirst.erase(std::remove_if(blocksToDownloadFirst.begin(), blocksToDownloadFirst.end(), [&r](const PriorityBlockRequest &rB) {",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 276,
    "commit_id": "77561f7a4b500d0752d64ce931ce1dd613f7ab0d",
    "original_commit_id": "9ee22bf4a07eb3f1735063ad0265af129f5d8bed",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "With the current implementation, `blocksToDownloadFirst` can have multiple of the same block. I'd say it should remain here...",
    "created_at": "2017-11-23T20:51:32Z",
    "updated_at": "2018-04-18T08:58:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10794#discussion_r152870189",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10794",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152870189"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10794#discussion_r152870189"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10794"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152870189/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3818,
    "side": "RIGHT",
    "in_reply_to_id": 152762352
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152871012",
    "pull_request_review_id": 78799753,
    "id": 152871012,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1Mjg3MTAxMg==",
    "diff_hunk": "@@ -1587,6 +1592,60 @@ UniValue savemempool(const JSONRPCRequest& request)\n     return NullUniValue;\n }\n \n+UniValue requestblocks(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 3)\n+        throw std::runtime_error(\n+            \"requestblocks (add|flush|status) ([\\\"hash_0\\\", \\\"hash_1\\\", ...])\\n\"\n+            \"\\nPriorize blocks downloads.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. action            (string, required) the action to execute\\n\"\n+            \"                                        add  = add new blocks to the priority download\\n\"\n+            \"                                        flush = flush the queue (blocks in-flight will still be downloaded)\\n\"\n+            \"                                        status = get info about the queue\\n\"\n+            \"2. blockhashes       (array, optional) the hashes of the blocks to download\\n\"\n+            \"\\nResult:\\n\"\n+            \"   add: <null>\\n\"\n+            \"   flush: <true|false> (if the the queue wasn't empty)\\n\"",
    "path": "src/rpc/blockchain.cpp",
    "position": 50,
    "original_position": 51,
    "commit_id": "77561f7a4b500d0752d64ce931ce1dd613f7ab0d",
    "original_commit_id": "9ee22bf4a07eb3f1735063ad0265af129f5d8bed",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "You can determine if you have flushed something or not.",
    "created_at": "2017-11-23T21:01:54Z",
    "updated_at": "2018-04-18T08:58:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10794#discussion_r152871012",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10794",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152871012"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10794#discussion_r152871012"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10794"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152871012/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1647,
    "original_line": 1647,
    "side": "RIGHT",
    "in_reply_to_id": 152757582
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152871309",
    "pull_request_review_id": 78800048,
    "id": 152871309,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1Mjg3MTMwOQ==",
    "diff_hunk": "@@ -1587,6 +1592,60 @@ UniValue savemempool(const JSONRPCRequest& request)\n     return NullUniValue;\n }\n \n+UniValue requestblocks(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 3)\n+        throw std::runtime_error(\n+            \"requestblocks (add|flush|status) ([\\\"hash_0\\\", \\\"hash_1\\\", ...])\\n\"\n+            \"\\nPriorize blocks downloads.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. action            (string, required) the action to execute\\n\"\n+            \"                                        add  = add new blocks to the priority download\\n\"\n+            \"                                        flush = flush the queue (blocks in-flight will still be downloaded)\\n\"\n+            \"                                        status = get info about the queue\\n\"\n+            \"2. blockhashes       (array, optional) the hashes of the blocks to download\\n\"\n+            \"\\nResult:\\n\"\n+            \"   add: <null>\\n\"\n+            \"   flush: <true|false> (if the the queue wasn't empty)\\n\"\n+            \"   status: {\\\"count\\\": \\\"<amount of blocks in the queue>\\\"}\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"requestblocks\", \"add, \\\"'[\\\"<blockhash>\\\"]'\\\"\")\n+            + HelpExampleRpc(\"requestblocks\", \"add, \\\"'[\\\"<blockhash>\\\"]'\\\"\")\n+            );\n+\n+    if (request.params[0].get_str() == \"flush\") {\n+        return UniValue(FlushPriorityDownloads());\n+    }\n+    else if (request.params[0].get_str() == \"status\") {",
    "path": "src/rpc/blockchain.cpp",
    "position": 60,
    "original_position": 61,
    "commit_id": "77561f7a4b500d0752d64ce931ce1dd613f7ab0d",
    "original_commit_id": "9ee22bf4a07eb3f1735063ad0265af129f5d8bed",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Why?",
    "created_at": "2017-11-23T21:03:16Z",
    "updated_at": "2018-04-18T08:58:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10794#discussion_r152871309",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10794",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152871309"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10794#discussion_r152871309"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10794"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152871309/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1657,
    "original_line": 1657,
    "side": "RIGHT",
    "in_reply_to_id": 152755122
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152872525",
    "pull_request_review_id": 78801378,
    "id": 152872525,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1Mjg3MjUyNQ==",
    "diff_hunk": "@@ -645,6 +649,7 @@ UniValue getblockheader(const JSONRPCRequest& request)\n             \"{\\n\"\n             \"  \\\"hash\\\" : \\\"hash\\\",     (string) the block hash (same as provided)\\n\"\n             \"  \\\"confirmations\\\" : n,   (numeric) The number of confirmations, or -1 if the block is not on the main chain\\n\"\n+            \"  \\\"validated\\\" : n,       (boolean) True if the block has been validated\\n\"",
    "path": "src/rpc/blockchain.cpp",
    "position": 28,
    "original_position": 29,
    "commit_id": "77561f7a4b500d0752d64ce931ce1dd613f7ab0d",
    "original_commit_id": "9ee22bf4a07eb3f1735063ad0265af129f5d8bed",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "done",
    "created_at": "2017-11-23T21:15:41Z",
    "updated_at": "2018-04-18T08:58:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10794#discussion_r152872525",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10794",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152872525"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10794#discussion_r152872525"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10794"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152872525/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 687,
    "original_line": 687,
    "side": "RIGHT",
    "in_reply_to_id": 152760159
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/207338739",
    "pull_request_review_id": 142932591,
    "id": 207338739,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzMzODczOQ==",
    "diff_hunk": "@@ -0,0 +1,62 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import *\n+\n+class RequestBlockRequestTest (BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+        self.extra_args = [[], ['-autorequestblocks=0']]\n+\n+    def run_test(self):\n+        self.nodes[0].generate(50)\n+        timeout = 20\n+        ctps = self.nodes[1].getchaintips()\n+        while timeout > 0:\n+            ctps = self.nodes[1].getchaintips()\n+            headerHeightReached = False\n+            for ct in ctps:\n+                if ct['status'] == \"headers-only\":\n+                    if ct['height'] == 50:\n+                        headerHeightReached = True\n+                if ct['status'] == \"active\":\n+                    assert(ct['height'] == 0)\n+            time.sleep(1)\n+            timeout-=1\n+            if headerHeightReached == True:\n+                break\n+        assert(timeout>0)\n+\n+        node0bbhash = self.nodes[0].getbestblockhash()\n+        # best block should not be validated, header must be available\n+        bh = self.nodes[1].getblockheader(node0bbhash, True)\n+\n+        assert_equal(bh['validated'], False)\n+        # block must not be available\n+        assert_raises_rpc_error(-1, \"Block not found on disk\", self.nodes[1].getblock, node0bbhash)\n+\n+        # request best block (auxiliary)\n+        self.nodes[1].requestblocks(\"add\", [node0bbhash])\n+        timeout = 20\n+        while timeout > 0:\n+            if self.nodes[1].requestblocks(\"status\")['count'] == 0:\n+                break\n+            time.sleep(1)\n+            timeout-=1\n+        assert(timeout>0)\n+\n+        # block must now be available\n+        block = self.nodes[1].getblock(node0bbhash, True)\n+        assert_equal(block['hash'], node0bbhash)\n+        assert_equal(block['validated'], False)\n+\n+        #prevblock must not be available\n+        assert_raises_rpc_error(-1, \"Block not found on disk\", self.nodes[1].getblock, block['previousblockhash'])",
    "path": "test/functional/rpc_requestblocks.py",
    "position": 59,
    "original_position": 59,
    "commit_id": "77561f7a4b500d0752d64ce931ce1dd613f7ab0d",
    "original_commit_id": "77561f7a4b500d0752d64ce931ce1dd613f7ab0d",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Maybe do a prune here and then refetch the old block?",
    "created_at": "2018-08-02T19:01:28Z",
    "updated_at": "2018-08-02T19:01:28Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10794#discussion_r207338739",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10794",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/207338739"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10794#discussion_r207338739"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10794"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/207338739/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 59,
    "original_line": 59,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214549039",
    "pull_request_review_id": 151629144,
    "id": 214549039,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDU0OTAzOQ==",
    "diff_hunk": "@@ -1626,6 +1630,60 @@ UniValue savemempool(const JSONRPCRequest& request)\n     return NullUniValue;\n }\n \n+UniValue requestblocks(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2)\n+        throw std::runtime_error(\n+            \"requestblocks ( add | flush | status ) ( [\\\"hash_0\\\", \\\"hash_1\\\", ...] )\\n\"\n+            \"\\nPriorize blocks downloads.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. action            (string, required) the action to execute\\n\"\n+            \"                                        add  = add new blocks to the priority download\\n\"\n+            \"                                        flush = flush the queue (blocks in-flight will still be downloaded)\\n\"\n+            \"                                        status = get info about the queue\\n\"\n+            \"2. blockhashes       (array, optional) the hashes of the blocks to download\\n\"\n+            \"\\nResult:\\n\"\n+            \"   add: <null>\\n\"\n+            \"   flush: <true|false> (if the the queue wasn't empty)\\n\"\n+            \"   status: {\\\"count\\\": \\\"<amount of blocks in the queue>\\\"}\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"requestblocks\", \"add, \\\"'[\\\"<blockhash>\\\"]'\\\"\")\n+            + HelpExampleRpc(\"requestblocks\", \"add, \\\"'[\\\"<blockhash>\\\"]'\\\"\")\n+            );\n+\n+    if (request.params[0].get_str() == \"flush\") {\n+        return UniValue(FlushPriorityDownloads());\n+    }\n+    else if (request.params[0].get_str() == \"status\") {\n+        UniValue ret(UniValue::VOBJ);\n+        ret.push_back(Pair(\"count\", (uint64_t)CountPriorityDownloads()));\n+        return ret;\n+    }\n+    else if (request.params[0].get_str() == \"add\") {\n+        if (request.params[1].isNull()) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Missing blocks array\");\n+        }\n+        std::vector<const CBlockIndex*> blocksToDownload;\n+        {\n+            LOCK(cs_main); //mapBlockIndex\n+            for (const UniValue& strHashU : request.params[1].get_array().getValues()) {\n+                uint256 hash(uint256S(strHashU.get_str()));\n+                BlockMap::const_iterator mi = mapBlockIndex.find(hash);\n+                if (mi == mapBlockIndex.end()) {\n+                    throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Block not found\");\n+                }\n+                blocksToDownload.push_back(mi->second);\n+            }\n+        }\n+\n+        AddPriorityDownload(blocksToDownload);\n+        return NullUniValue;\n+    }\n+    else {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Unkown action\");",
    "path": "src/rpc/blockchain.cpp",
    "position": 86,
    "original_position": 86,
    "commit_id": "77561f7a4b500d0752d64ce931ce1dd613f7ab0d",
    "original_commit_id": "77561f7a4b500d0752d64ce931ce1dd613f7ab0d",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Typo found by `codespell`: Unkown",
    "created_at": "2018-09-02T18:26:42Z",
    "updated_at": "2018-09-02T18:26:43Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10794#discussion_r214549039",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10794",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214549039"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10794#discussion_r214549039"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10794"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/214549039/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1683,
    "original_line": 1683,
    "side": "RIGHT"
  }
]