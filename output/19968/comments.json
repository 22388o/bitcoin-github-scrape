[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/730287410",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19968#issuecomment-730287410",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19968",
    "id": 730287410,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczMDI4NzQxMA==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-19T10:44:17Z",
    "updated_at": "2020-11-19T10:44:17Z",
    "author_association": "MEMBER",
    "body": "ACK d9141a0002bb508b2e94e206a1bd28ef8f97ffde",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/730287410/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/495483350",
    "pull_request_review_id": 497023200,
    "id": 495483350,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ4MzM1MA==",
    "diff_hunk": "@@ -94,7 +94,26 @@ class CBloomFilter\n  * insert()'ed ... but may also return true for items that were not inserted.\n  *\n  * It needs around 1.8 bytes per element per factor 0.1 of false positive rate.\n- * (More accurately: 3/(log(256)*log(2)) * log(1/fpRate) * nElements bytes)\n+ * e.g. for 1000 elements, we'd need:\n+ *     ~1800 bytes for a false positive rate of 0.1\n+ *     ~3600 bytes for a false positive rate of 0.01\n+ *     ~5400 bytes for a false positive rate of 0.001\n+ *\n+ * This Python code calculates the exact filter size in bytes:\n+\n+import math\n+def filterbytes(nel, fprate):\n+    logfp = math.log(fprate)\n+    nhash = max(1, min(round(logfp/math.log(0.5)), 50))\n+    nfilbits = math.ceil(-1.0*nhash*(3*int((nel+1)/2)) / math.log(1.0 - math.exp(logfp / nhash)))\n+    return (nfilbits+63)/64*2*8\n+\n+ * If we make these assumptions:",
    "path": "src/bloom.h",
    "position": null,
    "original_position": 19,
    "commit_id": "d9141a0002bb508b2e94e206a1bd28ef8f97ffde",
    "original_commit_id": "01d14f2bc58fdaf31a6301b3fab5de90d29e86bd",
    "user": {
      "login": "dhruv",
      "id": 856960,
      "node_id": "MDQ6VXNlcjg1Njk2MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/856960?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dhruv",
      "html_url": "https://github.com/dhruv",
      "followers_url": "https://api.github.com/users/dhruv/followers",
      "following_url": "https://api.github.com/users/dhruv/following{/other_user}",
      "gists_url": "https://api.github.com/users/dhruv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dhruv/subscriptions",
      "organizations_url": "https://api.github.com/users/dhruv/orgs",
      "repos_url": "https://api.github.com/users/dhruv/repos",
      "events_url": "https://api.github.com/users/dhruv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dhruv/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Nit: I found these next 6 lines added complexity to something that was very clear thus far. Do you think the simpler formula makes it easier to reason about the size of the bloom filter?",
    "created_at": "2020-09-26T18:36:31Z",
    "updated_at": "2020-10-02T05:28:35Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19968#discussion_r495483350",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19968",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/495483350"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19968#discussion_r495483350"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19968"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/495483350/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 111,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/495483506",
    "pull_request_review_id": 497023200,
    "id": 495483506,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ4MzUwNg==",
    "diff_hunk": "@@ -94,7 +94,26 @@ class CBloomFilter\n  * insert()'ed ... but may also return true for items that were not inserted.\n  *\n  * It needs around 1.8 bytes per element per factor 0.1 of false positive rate.\n- * (More accurately: 3/(log(256)*log(2)) * log(1/fpRate) * nElements bytes)\n+ * e.g. for 1000 elements, we'd need:",
    "path": "src/bloom.h",
    "position": null,
    "original_position": 5,
    "commit_id": "d9141a0002bb508b2e94e206a1bd28ef8f97ffde",
    "original_commit_id": "01d14f2bc58fdaf31a6301b3fab5de90d29e86bd",
    "user": {
      "login": "dhruv",
      "id": 856960,
      "node_id": "MDQ6VXNlcjg1Njk2MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/856960?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dhruv",
      "html_url": "https://github.com/dhruv",
      "followers_url": "https://api.github.com/users/dhruv/followers",
      "following_url": "https://api.github.com/users/dhruv/following{/other_user}",
      "gists_url": "https://api.github.com/users/dhruv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dhruv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dhruv/subscriptions",
      "organizations_url": "https://api.github.com/users/dhruv/orgs",
      "repos_url": "https://api.github.com/users/dhruv/repos",
      "events_url": "https://api.github.com/users/dhruv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dhruv/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Nit: Maybe add \"Lower tolerance for false positives increases the size of the bloom filter manifesting a trade-off between memory and compute (in the case of a false positive).\"",
    "created_at": "2020-09-26T18:38:40Z",
    "updated_at": "2020-10-02T05:28:35Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19968#discussion_r495483506",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19968",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/495483506"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19968#discussion_r495483506"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19968"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/495483506/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 97,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/497433612",
    "pull_request_review_id": 499328737,
    "id": 497433612,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzQzMzYxMg==",
    "diff_hunk": "@@ -94,7 +94,26 @@ class CBloomFilter\n  * insert()'ed ... but may also return true for items that were not inserted.\n  *\n  * It needs around 1.8 bytes per element per factor 0.1 of false positive rate.\n- * (More accurately: 3/(log(256)*log(2)) * log(1/fpRate) * nElements bytes)\n+ * e.g. for 1000 elements, we'd need:\n+ *     ~1800 bytes for a false positive rate of 0.1\n+ *     ~3600 bytes for a false positive rate of 0.01\n+ *     ~5400 bytes for a false positive rate of 0.001\n+ *\n+ * This Python code calculates the exact filter size in bytes:\n+\n+import math\n+def filterbytes(nel, fprate):\n+    logfp = math.log(fprate)\n+    nhash = max(1, min(round(logfp/math.log(0.5)), 50))\n+    nfilbits = math.ceil(-1.0*nhash*(3*int((nel+1)/2)) / math.log(1.0 - math.exp(logfp / nhash)))\n+    return (nfilbits+63)/64*2*8\n+\n+ * If we make these assumptions:",
    "path": "src/bloom.h",
    "position": null,
    "original_position": 19,
    "commit_id": "d9141a0002bb508b2e94e206a1bd28ef8f97ffde",
    "original_commit_id": "01d14f2bc58fdaf31a6301b3fab5de90d29e86bd",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "How does this render on doxygen? If it is markdown style you'd likely want to quote an inline script using triple-backquotes.\r\n\r\nTBH I'm not sure the python script adds much in the first place. Sometimes a simple but good-enough approximation is better for documentation purposes. Is this level of precision necessary?\r\n\r\n(edit: whoops, didn't mean to click the resolve conversation button)",
    "created_at": "2020-09-30T11:23:51Z",
    "updated_at": "2020-10-02T05:28:35Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19968#discussion_r497433612",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19968",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/497433612"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19968#discussion_r497433612"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19968"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/497433612/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 111,
    "side": "RIGHT",
    "in_reply_to_id": 495483350
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/498605464",
    "pull_request_review_id": 500842865,
    "id": 498605464,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODYwNTQ2NA==",
    "diff_hunk": "@@ -94,7 +94,26 @@ class CBloomFilter\n  * insert()'ed ... but may also return true for items that were not inserted.\n  *\n  * It needs around 1.8 bytes per element per factor 0.1 of false positive rate.\n- * (More accurately: 3/(log(256)*log(2)) * log(1/fpRate) * nElements bytes)\n+ * e.g. for 1000 elements, we'd need:\n+ *     ~1800 bytes for a false positive rate of 0.1\n+ *     ~3600 bytes for a false positive rate of 0.01\n+ *     ~5400 bytes for a false positive rate of 0.001\n+ *\n+ * This Python code calculates the exact filter size in bytes:\n+\n+import math\n+def filterbytes(nel, fprate):\n+    logfp = math.log(fprate)\n+    nhash = max(1, min(round(logfp/math.log(0.5)), 50))\n+    nfilbits = math.ceil(-1.0*nhash*(3*int((nel+1)/2)) / math.log(1.0 - math.exp(logfp / nhash)))\n+    return (nfilbits+63)/64*2*8\n+\n+ * If we make these assumptions:",
    "path": "src/bloom.h",
    "position": null,
    "original_position": 19,
    "commit_id": "d9141a0002bb508b2e94e206a1bd28ef8f97ffde",
    "original_commit_id": "01d14f2bc58fdaf31a6301b3fab5de90d29e86bd",
    "user": {
      "login": "robot-dreams",
      "id": 4276679,
      "node_id": "MDQ6VXNlcjQyNzY2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4276679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/robot-dreams",
      "html_url": "https://github.com/robot-dreams",
      "followers_url": "https://api.github.com/users/robot-dreams/followers",
      "following_url": "https://api.github.com/users/robot-dreams/following{/other_user}",
      "gists_url": "https://api.github.com/users/robot-dreams/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/robot-dreams/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/robot-dreams/subscriptions",
      "organizations_url": "https://api.github.com/users/robot-dreams/orgs",
      "repos_url": "https://api.github.com/users/robot-dreams/repos",
      "events_url": "https://api.github.com/users/robot-dreams/events{/privacy}",
      "received_events_url": "https://api.github.com/users/robot-dreams/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yeah, fair question @laanwj . I picked this up from the \"up for grabs\" #19130 but I could go either way\u2014if we think the extra precision doesn't really help then we can close this PR.",
    "created_at": "2020-10-02T03:31:35Z",
    "updated_at": "2020-10-02T05:28:35Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19968#discussion_r498605464",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19968",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/498605464"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19968#discussion_r498605464"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19968"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/498605464/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 111,
    "side": "RIGHT",
    "in_reply_to_id": 495483350
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/498607200",
    "pull_request_review_id": 500845267,
    "id": 498607200,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODYwNzIwMA==",
    "diff_hunk": "@@ -94,7 +94,26 @@ class CBloomFilter\n  * insert()'ed ... but may also return true for items that were not inserted.\n  *\n  * It needs around 1.8 bytes per element per factor 0.1 of false positive rate.\n- * (More accurately: 3/(log(256)*log(2)) * log(1/fpRate) * nElements bytes)\n+ * e.g. for 1000 elements, we'd need:\n+ *     ~1800 bytes for a false positive rate of 0.1\n+ *     ~3600 bytes for a false positive rate of 0.01\n+ *     ~5400 bytes for a false positive rate of 0.001\n+ *\n+ * This Python code calculates the exact filter size in bytes:\n+\n+import math\n+def filterbytes(nel, fprate):\n+    logfp = math.log(fprate)\n+    nhash = max(1, min(round(logfp/math.log(0.5)), 50))\n+    nfilbits = math.ceil(-1.0*nhash*(3*int((nel+1)/2)) / math.log(1.0 - math.exp(logfp / nhash)))\n+    return (nfilbits+63)/64*2*8\n+\n+ * If we make these assumptions:",
    "path": "src/bloom.h",
    "position": null,
    "original_position": 19,
    "commit_id": "d9141a0002bb508b2e94e206a1bd28ef8f97ffde",
    "original_commit_id": "01d14f2bc58fdaf31a6301b3fab5de90d29e86bd",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "See my comment: https://github.com/bitcoin/bitcoin/pull/19130#issuecomment-637176259\r\n\r\nGiven how accurate the formula is in all reasonable cases (at most 0.115% off, and usually much less), I don't think it's worth including the code.\r\n\r\nThe rest of the PR seems useful, though.",
    "created_at": "2020-10-02T03:42:25Z",
    "updated_at": "2020-10-02T05:28:35Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19968#discussion_r498607200",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19968",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/498607200"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19968#discussion_r498607200"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19968"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/498607200/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 111,
    "side": "RIGHT",
    "in_reply_to_id": 495483350
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/498611401",
    "pull_request_review_id": 500850925,
    "id": 498611401,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODYxMTQwMQ==",
    "diff_hunk": "@@ -94,7 +94,26 @@ class CBloomFilter\n  * insert()'ed ... but may also return true for items that were not inserted.\n  *\n  * It needs around 1.8 bytes per element per factor 0.1 of false positive rate.\n- * (More accurately: 3/(log(256)*log(2)) * log(1/fpRate) * nElements bytes)\n+ * e.g. for 1000 elements, we'd need:\n+ *     ~1800 bytes for a false positive rate of 0.1\n+ *     ~3600 bytes for a false positive rate of 0.01\n+ *     ~5400 bytes for a false positive rate of 0.001\n+ *\n+ * This Python code calculates the exact filter size in bytes:\n+\n+import math\n+def filterbytes(nel, fprate):\n+    logfp = math.log(fprate)\n+    nhash = max(1, min(round(logfp/math.log(0.5)), 50))\n+    nfilbits = math.ceil(-1.0*nhash*(3*int((nel+1)/2)) / math.log(1.0 - math.exp(logfp / nhash)))\n+    return (nfilbits+63)/64*2*8\n+\n+ * If we make these assumptions:",
    "path": "src/bloom.h",
    "position": null,
    "original_position": 19,
    "commit_id": "d9141a0002bb508b2e94e206a1bd28ef8f97ffde",
    "original_commit_id": "01d14f2bc58fdaf31a6301b3fab5de90d29e86bd",
    "user": {
      "login": "robot-dreams",
      "id": 4276679,
      "node_id": "MDQ6VXNlcjQyNzY2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4276679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/robot-dreams",
      "html_url": "https://github.com/robot-dreams",
      "followers_url": "https://api.github.com/users/robot-dreams/followers",
      "following_url": "https://api.github.com/users/robot-dreams/following{/other_user}",
      "gists_url": "https://api.github.com/users/robot-dreams/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/robot-dreams/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/robot-dreams/subscriptions",
      "organizations_url": "https://api.github.com/users/robot-dreams/orgs",
      "repos_url": "https://api.github.com/users/robot-dreams/repos",
      "events_url": "https://api.github.com/users/robot-dreams/events{/privacy}",
      "received_events_url": "https://api.github.com/users/robot-dreams/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Thanks for the input! Agreed that the extra complexity from the Python script is not worthwhile for the small accuracy gain; I'll update.",
    "created_at": "2020-10-02T04:10:52Z",
    "updated_at": "2020-10-02T05:28:35Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19968#discussion_r498611401",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19968",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/498611401"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19968#discussion_r498611401"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19968"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/498611401/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 111,
    "side": "RIGHT",
    "in_reply_to_id": 495483350
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/498623768",
    "pull_request_review_id": 500867486,
    "id": 498623768,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODYyMzc2OA==",
    "diff_hunk": "@@ -94,7 +94,26 @@ class CBloomFilter\n  * insert()'ed ... but may also return true for items that were not inserted.\n  *\n  * It needs around 1.8 bytes per element per factor 0.1 of false positive rate.\n- * (More accurately: 3/(log(256)*log(2)) * log(1/fpRate) * nElements bytes)\n+ * e.g. for 1000 elements, we'd need:\n+ *     ~1800 bytes for a false positive rate of 0.1\n+ *     ~3600 bytes for a false positive rate of 0.01\n+ *     ~5400 bytes for a false positive rate of 0.001\n+ *\n+ * This Python code calculates the exact filter size in bytes:\n+\n+import math\n+def filterbytes(nel, fprate):\n+    logfp = math.log(fprate)\n+    nhash = max(1, min(round(logfp/math.log(0.5)), 50))\n+    nfilbits = math.ceil(-1.0*nhash*(3*int((nel+1)/2)) / math.log(1.0 - math.exp(logfp / nhash)))\n+    return (nfilbits+63)/64*2*8\n+\n+ * If we make these assumptions:",
    "path": "src/bloom.h",
    "position": null,
    "original_position": 19,
    "commit_id": "d9141a0002bb508b2e94e206a1bd28ef8f97ffde",
    "original_commit_id": "01d14f2bc58fdaf31a6301b3fab5de90d29e86bd",
    "user": {
      "login": "robot-dreams",
      "id": 4276679,
      "node_id": "MDQ6VXNlcjQyNzY2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4276679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/robot-dreams",
      "html_url": "https://github.com/robot-dreams",
      "followers_url": "https://api.github.com/users/robot-dreams/followers",
      "following_url": "https://api.github.com/users/robot-dreams/following{/other_user}",
      "gists_url": "https://api.github.com/users/robot-dreams/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/robot-dreams/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/robot-dreams/subscriptions",
      "organizations_url": "https://api.github.com/users/robot-dreams/orgs",
      "repos_url": "https://api.github.com/users/robot-dreams/repos",
      "events_url": "https://api.github.com/users/robot-dreams/events{/privacy}",
      "received_events_url": "https://api.github.com/users/robot-dreams/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Ooh, didn't know about doxygen use before, thanks for the reminder! The formatting should be reasonable now:\r\n\r\n<img width=\"807\" alt=\"Doxygen\" src=\"https://user-images.githubusercontent.com/4276679/94890948-9a186580-0435-11eb-808e-4902ae092b69.png\">\r\n",
    "created_at": "2020-10-02T05:30:28Z",
    "updated_at": "2020-10-02T05:30:29Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19968#discussion_r498623768",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19968",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/498623768"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19968#discussion_r498623768"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19968"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/498623768/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 111,
    "side": "RIGHT",
    "in_reply_to_id": 495483350
  }
]