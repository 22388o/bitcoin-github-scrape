laanwj,2015-05-26T06:13:11Z,"This changes the semantics of a function that is used in consensus.\n\nHowever the only uses of `IsFinalTx` with default arguments (before this change) are in the wallet and tests so I think it is ok.\n\nThough now that we're changing this function anyway, I'd prefer splitting up `IsFinalTx` into:\n- A function `IsFinalTx` that takes explicit `nBlockHeight` `nBlockTime` arguments. This is a consen",https://github.com/bitcoin/bitcoin/pull/6183#issuecomment-105410432,105410432,
luke-jr,2015-05-26T06:35:25Z,"@laanwj +1\n\nChanging the behaviour of a function without renaming it or otherwise breaking old code using it, is asking for trouble.\n",https://github.com/bitcoin/bitcoin/pull/6183#issuecomment-105415633,105415633,
laanwj,2015-05-27T08:58:17Z,"See @jtimon's #6063, it sort of does what I'm describing above, apart from renaming the function.\n",https://github.com/bitcoin/bitcoin/pull/6183#issuecomment-105829767,105829767,
petertodd,2015-05-27T10:02:58Z,@laanwj Split into two functions.\n\nIn doing so I also had to add part #6177 \n\nAny thoughts on what should happen at https://github.com/bitcoin/bitcoin/blob/28bf06236d3b385e95fe26a7a742395b30efd6ee/src/test/miner_tests.cpp#L251?\n,https://github.com/bitcoin/bitcoin/pull/6183#issuecomment-105849719,105849719,
jtimon,2015-05-27T12:13:43Z,Any reason not to just rebase on top of #6063 ?\nThat way the function that keeps the old name does what it used to do while the new one has the different name (which will also be more consistent with other consensus functions and will avoid creating unnecessary conflicts with other open PRs [see #6051 ] and other old branches based on them). \n\n> Any thoughts on what should happen at https://git,https://github.com/bitcoin/bitcoin/pull/6183#issuecomment-105886824,105886824,
laanwj,2015-05-27T13:21:45Z,"Looks good to me now.\n\n@jtimon The reason for renaming the function is outlined in my last post, as well as @luke-jr's reply - as this pull changes the functionality of the function, so to be sure that all caller sites are 'aware' of this it makes sense to rename it.\nApart from that I have no opinion on how the functions should be called.\n",https://github.com/bitcoin/bitcoin/pull/6183#issuecomment-105905555,105905555,
jtimon,2015-05-27T14:21:09Z,"@laanwj Well, a caller like IsFinalTx(tx, 0, 0) won't work as expected.\nThe new function could be the consensus-friendly one, as in #6063.\nThat would also make my life easier, although I guess saving developers' time is not that strong of an argument...\nKeeping IsFinalTx functionally identical (before maybe deprecating it) is a stronger argument.\nYou can also create a third one dependent on th",https://github.com/bitcoin/bitcoin/pull/6183#issuecomment-105928917,105928917,
petertodd,2015-05-27T20:55:40Z,"Personally I prefer the terminology ""IsFinalTx()"" for the ""no-context"" consensus-critical check, and ""CheckFinalTx()"" for the context-dependent non-consensus-critical check.\n",https://github.com/bitcoin/bitcoin/pull/6183#issuecomment-106071996,106071996,
jtimon,2015-05-28T06:50:14Z,"> Personally I prefer the terminology ""IsFinalTx()"" for the ""no-context"" consensus-critical check, and ""CheckFinalTx()"" for the context-dependent non-consensus-critical check.\n\nAs said, Check is being used by other consensus functions (stateless) and IsFinalTx was global-state dependent. For consistency, it would be better to have the consensus version start with Check. But since this may be con",https://github.com/bitcoin/bitcoin/pull/6183#issuecomment-106198465,106198465,
petertodd,2015-05-28T11:43:15Z,Something you're probably not aware of re: CheckFinalTx() is that I'll be submitting another pull-req once this is merged to change CheckFinalTx() to use GetMedianTime() rather than GetAdjustedTime(). This is important for a number of security related reasons. (most discussed before on #bitcoin-wizards) After that I'll be proposing a soft-fork enforcing this within blocks themselves.\n\nMy thinkin,https://github.com/bitcoin/bitcoin/pull/6183#issuecomment-106286667,106286667,
jtimon,2015-05-28T15:10:11Z,"> ""just figure out if this transaction is final according to whatever rules exist"" - exactly what you'd expect from a Check*() function! \n\nI would also expect that function to be stateless!\n\n> Anyway, smaller total diffs aren't necessarily always a good thing. In this case, by changing the function name we help clue people in to think ""Why did IsFinalTx() change names?"" ""What's different about",https://github.com/bitcoin/bitcoin/pull/6183#issuecomment-106390582,106390582,
jtimon,2015-05-28T15:18:41Z,"Note that for the last option, CheckFinalTx could optionally take the time (which callers that use it would set as GetAdjustedTime) which is set to pindexTip->GetMedianTime() inside if it's not provided (or 0 is passed).\nThen your softfork would merely consist on removing the optional parameter to always use pindexTip->GetMedianTime.\nI believe that would be the clearest history possible for thos",https://github.com/bitcoin/bitcoin/pull/6183#issuecomment-106399229,106399229,
petertodd,2015-05-28T16:14:02Z,"> Then why keep the name IsFinalTx at all when the function is changing from global-state-dependent to stateless?\n\nAgain, from the point of view of the code that mattered, IsFinalTx() was a stateless function... That it potentially wasn't was an unfortunate bug, not a feature.\n\nEqually, we can't get rid of it after a soft-fork and replace it with some CheckFinalTx() or whatnot that takes block",https://github.com/bitcoin/bitcoin/pull/6183#issuecomment-106453842,106453842,
jtimon,2015-05-28T16:35:19Z,"> Re: adding CBlockIndex's and the like right now, that needs some discussion and thought, so it's not going to happen in this pull-req.\n\nAt least moving up the use of the global chainActive shouldn't generate much discussion.\nForcing the callers to call GetAdjustedTime themselves shouldn't be controversial either, specially since you're already touching those lines.\nAt that point, I would be ",https://github.com/bitcoin/bitcoin/pull/6183#issuecomment-106471202,106471202,
petertodd,2015-05-28T19:12:17Z,"> Forcing the callers to call GetAdjustedTime themselves shouldn't be controversial either, specially since you're already touching those lines.\n\nIf I did that, we'd have to re-touch a whole bunch of code all over again later... Notably, that's the kind of design mistake that lead to the bug this pull-req is fixing (re)appearing in the first place.\n\nAnyway, continuing this discussion is a wast",https://github.com/bitcoin/bitcoin/pull/6183#issuecomment-106569366,106569366,
jtimon,2015-05-28T21:41:38Z,"> If I did that, we'd have to re-touch a whole bunch of code all over again later... Notably, that's the kind of design mistake that lead to the bug this pull-req is fixing (re)appearing in the first place.\n\nFair enough, don't do that then. \nCan we at least avoid the gratuitous use of the global chainActive in the new function?\n",https://github.com/bitcoin/bitcoin/pull/6183#issuecomment-106608088,106608088,
laanwj,2015-06-01T09:36:31Z,"ACK. Merging this as-is. Can discuss naming later but I think the naming is fine.\n(I was about to suggest that the new `CheckFinalTx` can be moved to the wallet, but unfortunately there's one use left in main.cpp itself in `AcceptToMemoryPool`)\n",https://github.com/bitcoin/bitcoin/pull/6183#issuecomment-107381107,107381107,
laanwj,2015-05-27T13:08:53Z,Could just use `IsFinalTx` here with manual arguments instead of `CheckFinalTx` for these tests?\n,https://github.com/bitcoin/bitcoin/pull/6183#discussion_r31130828,31130828,src/test/miner_tests.cpp
laanwj,2015-05-27T13:12:38Z,"Curious that this wasn't set yet, anyhow it makes sense to do it\n",https://github.com/bitcoin/bitcoin/pull/6183#discussion_r31131139,31131139,src/miner.cpp
jtimon,2015-05-27T14:09:15Z,"Are you sure none of the current callers of IsFinalTx pass nBlockHeight or nBlockTime = 0 ?\nSeriously, it seems much safer to keep this function as it is and call the ""new""/consensus-friendly one from that one.\nIf you're breaking the old one, why keep to of them at all?\nThe only reason I maintain the old one in #6063 is to make sure it keeps being functionally identical. If you can't warranty t",https://github.com/bitcoin/bitcoin/pull/6183#discussion_r31136559,31136559,src/main.cpp
petertodd,2015-05-27T20:48:54Z,"You could, but it'd create more code to update if the logic of CheckFinalTx() changes for some reason. Remember that this is really a ""test-the-test"" line of code, not what the test is actually trying to test.\n",https://github.com/bitcoin/bitcoin/pull/6183#discussion_r31178663,31178663,src/test/miner_tests.cpp
petertodd,2015-05-27T20:51:34Z,"I am quite sure of that, particularly since the callers that would do that are all consensus-critical code, and this could lead to a consensus split. Edit: maybe that comes off the wrong way... I mean, because it could lead to a consensus split, I spent a good hour or so examining every call of IsFinalTx() to be sure it'd never be called that way.\n\nFortunately the only block for which nBlockHeig",https://github.com/bitcoin/bitcoin/pull/6183#discussion_r31178955,31178955,src/main.cpp
jtimon,2015-05-28T06:19:44Z,"> I am quite sure of that, particularly since the callers that would do that are all consensus-critical code, and this could lead to a consensus split. Edit: maybe that comes off the wrong way... I mean, because it could lead to a consensus split, I spent a good hour or so examining every call of IsFinalTx() to be sure it'd never be called that way.\n\nThen why maintain a global-state-dependent fu",https://github.com/bitcoin/bitcoin/pull/6183#discussion_r31205880,31205880,src/main.cpp
petertodd,2015-05-28T11:17:24Z,"> Then why maintain a global-state-dependent function at all?\n\nHuh? The global state-dependent function is for the convenience of callers, who just need to know if the tx will be final by the time the next block comes.\n\n> If we're going to review all the calls and change all those lines, let's just have the stateless version of it.\n\nHaving only the stateless IsFinalTx() as an option results ",https://github.com/bitcoin/bitcoin/pull/6183#discussion_r31223440,31223440,src/main.cpp
