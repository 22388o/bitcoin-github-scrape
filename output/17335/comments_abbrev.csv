TheBlueMatt,2019-10-31 23:35:25,Can we turn off these lints? Who cares at all if we have some unused imports in some python tests? This seems entirely useless.,https://github.com/bitcoin/bitcoin/pull/17335#issuecomment-548609825,548609825,
DrahtBot,2019-11-01 02:42:20,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #16756 (test: Connection eviction logic tests by mzumsande)\n\nIf you consider this pull request important, please also he",https://github.com/bitcoin/bitcoin/pull/17335#issuecomment-548644465,548644465,
jnewbery,2019-12-15 16:54:12,Suggeted fixups: https://github.com/jnewbery/bitcoin/commit/3357670144485dcde14ddf98a90fab0fca6965a3 (in branch https://github.com/jnewbery/bitcoin/tree/pr17335.1),https://github.com/bitcoin/bitcoin/pull/17335#issuecomment-565826606,565826606,
DrahtBot,2020-06-12 18:56:28,<!--cf906140f33d8803c4a75a2196329ecb-->\n🐙 This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).,https://github.com/bitcoin/bitcoin/pull/17335#issuecomment-643434300,643434300,
jnewbery,2020-06-12 20:04:50,"This has unaddressed review comments from > 6 months ago. Closing and marking 'up for grabs'.\n\n@TheBlueMatt - if you want to pick this up again, let me know and I'll reopen.",https://github.com/bitcoin/bitcoin/pull/17335#issuecomment-643461161,643461161,
jonatack,2020-06-27 18:07:34,Picked this up in #19397.,https://github.com/bitcoin/bitcoin/pull/17335#issuecomment-650593797,650593797,
instagibbs,2019-11-01 14:06:51,"for p2p, since we already have RPC tests for it(I had to look)",https://github.com/bitcoin/bitcoin/pull/17335#discussion_r341586307,341586307,test/functional/p2p_post_invalidate_sync.py
jnewbery,2019-11-01 18:32:18,"why `-debug`? It's on by default.\n\nPlease comment why `-whitelist` is required",https://github.com/bitcoin/bitcoin/pull/17335#discussion_r341699998,341699998,test/functional/p2p_post_invalidate_sync.py
jnewbery,2019-11-01 18:33:05,Prefer to use file docstrings over code comments for the top-level comment,https://github.com/bitcoin/bitcoin/pull/17335#discussion_r341700327,341700327,test/functional/p2p_post_invalidate_sync.py
jnewbery,2019-11-01 18:42:38,"This comment is wrong. All nodes will generate to a deterministic address (whether wallet is enabled or not).\n\nOther ways to achieve this:\n- call `self.nodes[0].generatetoaddress(17, self.nodes[0].getnewaddress()) to get a new address (and hence new block hash)\n- call `sleep(1)` to get a new timestamp (and hence new block hash)\n- ~use `setmocktime()` to get a new timestamp (and hence new",https://github.com/bitcoin/bitcoin/pull/17335#discussion_r341704009,341704009,test/functional/p2p_post_invalidate_sync.py
jnewbery,2019-11-01 18:44:52,also: I'd gently encourage you not to call other contributors' code 'a little dense',https://github.com/bitcoin/bitcoin/pull/17335#discussion_r341704847,341704847,test/functional/p2p_post_invalidate_sync.py
TheBlueMatt,2019-11-01 19:47:45,"Because that's what was there before, its just a test, and it doesn't seem to hurt anything.",https://github.com/bitcoin/bitcoin/pull/17335#discussion_r341726045,341726045,test/functional/p2p_post_invalidate_sync.py
TheBlueMatt,2019-11-01 19:48:22,I don't know what a docstrng is.,https://github.com/bitcoin/bitcoin/pull/17335#discussion_r341726243,341726243,test/functional/p2p_post_invalidate_sync.py
TheBlueMatt,2019-11-01 19:50:07,"I tried getnewaddress first - sadly this is just an issue for non-wallet nodes. Wallet'd nodes will generate a *new* deterministic address, but the test framework just hard-codes a bunch. That's totally fine, but it is a bit dense. I'm also a bit dense, and so is lots of code I write, cause its just a hack to get it to work. Didn't mean it at all as an insult, just describing the state of it.",https://github.com/bitcoin/bitcoin/pull/17335#discussion_r341726800,341726800,test/functional/p2p_post_invalidate_sync.py
jnewbery,2019-11-01 20:11:43,Here you go: https://www.python.org/dev/peps/pep-0257/,https://github.com/bitcoin/bitcoin/pull/17335#discussion_r341733707,341733707,test/functional/p2p_post_invalidate_sync.py
jnewbery,2019-11-01 20:11:57,How can it be there before if this is a new test?,https://github.com/bitcoin/bitcoin/pull/17335#discussion_r341733765,341733765,test/functional/p2p_post_invalidate_sync.py
jnewbery,2019-11-01 20:13:29,"It's not dense. It's how we get tests to work with wallet enabled and disabled.\n\nCan you remove the incorrect comment please?",https://github.com/bitcoin/bitcoin/pull/17335#discussion_r341734241,341734241,test/functional/p2p_post_invalidate_sync.py
TheBlueMatt,2019-11-01 20:17:12,"The code was taken, almost verbatim from #5806, its not fresh.",https://github.com/bitcoin/bitcoin/pull/17335#discussion_r341735375,341735375,test/functional/p2p_post_invalidate_sync.py
jnewbery,2019-11-01 20:40:56,"Adding '-whitelist=127.0.0.1' to tests seems to me to make them less realistic, more brittle and harder to maintain if different connection options are added. It also changes p2p behaviour so that it's less obvious that the test is testing what you want to test in a focused way. Does whitelisting interact with how blocks are sync'ed in the event of a block being invalidated? I don't know, and by a",https://github.com/bitcoin/bitcoin/pull/17335#discussion_r341743161,341743161,test/functional/p2p_post_invalidate_sync.py
TheBlueMatt,2019-11-04 17:08:24,"Fair, likely should not have used the word ""dense"". I cleared up the comment, though I still think this approach is the easiest?",https://github.com/bitcoin/bitcoin/pull/17335#discussion_r342164614,342164614,test/functional/p2p_post_invalidate_sync.py
jnewbery,2019-11-04 20:55:01,"Take a look at the other tests, particularly https://github.com/bitcoin/bitcoin/blob/master/test/functional/example_test.py#L5 and https://github.com/bitcoin/bitcoin/blob/master/test/functional/README.md#style-guidelines. Documenting what the test is supposed to be testing and why is a courtesy to any other developer who tries to understand this in future. ""Test invalidateblock"" doesn't explain wh",https://github.com/bitcoin/bitcoin/pull/17335#discussion_r342265263,342265263,test/functional/p2p_post_invalidate_sync.py
jnewbery,2019-11-04 20:55:42,'if we have no wallet' is inaccurate. All calls to `generate` in the functional test framework will generate blocks to a hardcoded address.,https://github.com/bitcoin/bitcoin/pull/17335#discussion_r342265530,342265530,test/functional/p2p_post_invalidate_sync.py
jnewbery,2019-11-04 20:55:57,This isn't required if you're not adding any extra args.,https://github.com/bitcoin/bitcoin/pull/17335#discussion_r342265629,342265629,test/functional/p2p_post_invalidate_sync.py
jnewbery,2019-11-04 20:57:46,Use `self.log.info()` rather than `print`,https://github.com/bitcoin/bitcoin/pull/17335#discussion_r342266356,342266356,test/functional/p2p_post_invalidate_sync.py
jnewbery,2019-11-04 20:59:13,"If you remove this line, you can also remove the following lines from `run_test`:\n\n```\n        self.nodes[0].generate(1) # Leave IBD\n        self.sync_all()\n```\n\nThe test will run more quickly and it'll be clearer to readers what the test is for.",https://github.com/bitcoin/bitcoin/pull/17335#discussion_r342266963,342266963,test/functional/p2p_post_invalidate_sync.py
jnewbery,2019-11-04 21:03:06,I think it's _slightly_ clearer if all blocks are generated on node0 and sync'ed to node1. It makes it more obvious to someone reading the test that this is testing node1 being able to resync to an less-work chain if it previously invalidated a different chain.,https://github.com/bitcoin/bitcoin/pull/17335#discussion_r342268521,342268521,test/functional/p2p_post_invalidate_sync.py
