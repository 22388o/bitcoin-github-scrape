[
  {
    "sha": "faf29dd019efef4b05e8e78885926764134d9c04",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWYyOWRkMDE5ZWZlZjRiMDVlOGU3ODg4NTkyNjc2NDEzNGQ5YzA0",
    "commit": {
      "author": {
        "name": "lucash-dev",
        "email": "lucash.dev@gmail.com",
        "date": "2018-12-10T06:03:07Z"
      },
      "committer": {
        "name": "lucash-dev",
        "email": "lucash.dev@gmail.com",
        "date": "2018-12-18T05:02:42Z"
      },
      "message": " Minimal changes to comply with explicit CMutableTransaction -> CTranaction conversion.\n\nThis commit makes the minimal changes necessary to fix compilation once CTransaction(const CMutableTransaction &tx) is made explicit. In each case an explicit call `CTransaction(...)` was added. Shouldn't affect behaviour or performance.",
      "tree": {
        "sha": "984a4c53502b24cb7c901a283e381f2a0c1bd5b5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/984a4c53502b24cb7c901a283e381f2a0c1bd5b5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/faf29dd019efef4b05e8e78885926764134d9c04",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faf29dd019efef4b05e8e78885926764134d9c04",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/faf29dd019efef4b05e8e78885926764134d9c04",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faf29dd019efef4b05e8e78885926764134d9c04/comments",
    "author": {
      "login": "lucash-dev",
      "id": 31627588,
      "node_id": "MDQ6VXNlcjMxNjI3NTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/31627588?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lucash-dev",
      "html_url": "https://github.com/lucash-dev",
      "followers_url": "https://api.github.com/users/lucash-dev/followers",
      "following_url": "https://api.github.com/users/lucash-dev/following{/other_user}",
      "gists_url": "https://api.github.com/users/lucash-dev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lucash-dev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lucash-dev/subscriptions",
      "organizations_url": "https://api.github.com/users/lucash-dev/orgs",
      "repos_url": "https://api.github.com/users/lucash-dev/repos",
      "events_url": "https://api.github.com/users/lucash-dev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lucash-dev/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "lucash-dev",
      "id": 31627588,
      "node_id": "MDQ6VXNlcjMxNjI3NTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/31627588?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lucash-dev",
      "html_url": "https://github.com/lucash-dev",
      "followers_url": "https://api.github.com/users/lucash-dev/followers",
      "following_url": "https://api.github.com/users/lucash-dev/following{/other_user}",
      "gists_url": "https://api.github.com/users/lucash-dev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lucash-dev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lucash-dev/subscriptions",
      "organizations_url": "https://api.github.com/users/lucash-dev/orgs",
      "repos_url": "https://api.github.com/users/lucash-dev/repos",
      "events_url": "https://api.github.com/users/lucash-dev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lucash-dev/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "27f5a295d7409c1811f74339d509ea7a348a2220",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/27f5a295d7409c1811f74339d509ea7a348a2220",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/27f5a295d7409c1811f74339d509ea7a348a2220"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 10,
      "deletions": 10
    },
    "files": [
      {
        "sha": "7c0c674a0026f583a9de6f24c10891c01ef70731",
        "filename": "src/bitcoin-tx.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faf29dd019efef4b05e8e78885926764134d9c04/src/bitcoin-tx.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faf29dd019efef4b05e8e78885926764134d9c04/src/bitcoin-tx.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-tx.cpp?ref=faf29dd019efef4b05e8e78885926764134d9c04",
        "patch": "@@ -818,7 +818,7 @@ static int CommandLineRawTx(int argc, char* argv[])\n             MutateTx(tx, key, value);\n         }\n \n-        OutputTx(tx);\n+        OutputTx(CTransaction(tx));\n     }\n     catch (const std::exception& e) {\n         strPrint = std::string(\"error: \") + e.what();"
      },
      {
        "sha": "f198bedf95c4ee24c8749f8b7bbf9b025a0ebc1f",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faf29dd019efef4b05e8e78885926764134d9c04/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faf29dd019efef4b05e8e78885926764134d9c04/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=faf29dd019efef4b05e8e78885926764134d9c04",
        "patch": "@@ -445,7 +445,7 @@ CMutableTransaction ConstructTransaction(const UniValue& inputs_in, const UniVal\n         }\n     }\n \n-    if (!rbf.isNull() && rawTx.vin.size() > 0 && rbfOptIn != SignalsOptInRBF(rawTx)) {\n+    if (!rbf.isNull() && rawTx.vin.size() > 0 && rbfOptIn != SignalsOptInRBF(CTransaction(rawTx))) {\n         throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter combination: Sequence number(s) contradict replaceable option\");\n     }\n \n@@ -517,7 +517,7 @@ static UniValue createrawtransaction(const JSONRPCRequest& request)\n \n     CMutableTransaction rawTx = ConstructTransaction(request.params[0], request.params[1], request.params[2], request.params[3]);\n \n-    return EncodeHexTx(rawTx);\n+    return EncodeHexTx(CTransaction(rawTx));\n }\n \n static UniValue decoderawtransaction(const JSONRPCRequest& request)\n@@ -773,7 +773,7 @@ static UniValue combinerawtransaction(const JSONRPCRequest& request)\n         UpdateInput(txin, sigdata);\n     }\n \n-    return EncodeHexTx(mergedTx);\n+    return EncodeHexTx(CTransaction(mergedTx));\n }\n \n UniValue SignTransaction(interfaces::Chain& chain, CMutableTransaction& mtx, const UniValue& prevTxsUnival, CBasicKeyStore *keystore, bool is_temp_keystore, const UniValue& hashType)\n@@ -906,7 +906,7 @@ UniValue SignTransaction(interfaces::Chain& chain, CMutableTransaction& mtx, con\n     bool fComplete = vErrors.empty();\n \n     UniValue result(UniValue::VOBJ);\n-    result.pushKV(\"hex\", EncodeHexTx(mtx));\n+    result.pushKV(\"hex\", EncodeHexTx(CTransaction(mtx)));\n     result.pushKV(\"complete\", fComplete);\n     if (!vErrors.empty()) {\n         result.pushKV(\"errors\", vErrors);"
      },
      {
        "sha": "792fb2997fd7b886c387200953b451608fc452bd",
        "filename": "src/script/sign.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faf29dd019efef4b05e8e78885926764134d9c04/src/script/sign.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faf29dd019efef4b05e8e78885926764134d9c04/src/script/sign.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/sign.cpp?ref=faf29dd019efef4b05e8e78885926764134d9c04",
        "patch": "@@ -509,7 +509,7 @@ bool IsSolvable(const SigningProvider& provider, const CScript& script)\n     return false;\n }\n \n-PartiallySignedTransaction::PartiallySignedTransaction(const CTransaction& tx) : tx(tx)\n+PartiallySignedTransaction::PartiallySignedTransaction(const CMutableTransaction& tx) : tx(tx)\n {\n     inputs.resize(tx.vin.size());\n     outputs.resize(tx.vout.size());"
      },
      {
        "sha": "e884f4c48063b4f06f4a7572cfbf5362882dbc73",
        "filename": "src/script/sign.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faf29dd019efef4b05e8e78885926764134d9c04/src/script/sign.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faf29dd019efef4b05e8e78885926764134d9c04/src/script/sign.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/sign.h?ref=faf29dd019efef4b05e8e78885926764134d9c04",
        "patch": "@@ -574,7 +574,7 @@ struct PartiallySignedTransaction\n     bool IsSane() const;\n     PartiallySignedTransaction() {}\n     PartiallySignedTransaction(const PartiallySignedTransaction& psbt_in) : tx(psbt_in.tx), inputs(psbt_in.inputs), outputs(psbt_in.outputs), unknown(psbt_in.unknown) {}\n-    explicit PartiallySignedTransaction(const CTransaction& tx);\n+    explicit PartiallySignedTransaction(const CMutableTransaction& tx);\n \n     // Only checks if they refer to the same transaction\n     friend bool operator==(const PartiallySignedTransaction& a, const PartiallySignedTransaction &b)"
      },
      {
        "sha": "292bb21ccadaea9c061c4b89bb8070a49d38a41b",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faf29dd019efef4b05e8e78885926764134d9c04/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faf29dd019efef4b05e8e78885926764134d9c04/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=faf29dd019efef4b05e8e78885926764134d9c04",
        "patch": "@@ -3058,7 +3058,7 @@ static UniValue fundrawtransaction(const JSONRPCRequest& request)\n     FundTransaction(pwallet, tx, fee, change_position, request.params[1]);\n \n     UniValue result(UniValue::VOBJ);\n-    result.pushKV(\"hex\", EncodeHexTx(tx));\n+    result.pushKV(\"hex\", EncodeHexTx(CTransaction(tx)));\n     result.pushKV(\"fee\", ValueFromAmount(fee));\n     result.pushKV(\"changepos\", change_position);\n "
      },
      {
        "sha": "bbc66b2839c64ffe0be40a3e721624875a5a74e2",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faf29dd019efef4b05e8e78885926764134d9c04/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faf29dd019efef4b05e8e78885926764134d9c04/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=faf29dd019efef4b05e8e78885926764134d9c04",
        "patch": "@@ -1471,7 +1471,7 @@ int64_t CalculateMaximumSignedTxSize(const CTransaction &tx, const CWallet *wall\n         // implies that we can sign for every input.\n         return -1;\n     }\n-    return GetVirtualTransactionSize(txNew);\n+    return GetVirtualTransactionSize(CTransaction(txNew));\n }\n \n int CalculateMaximumSignedInputSize(const CTxOut& txout, const CWallet* wallet, bool use_max_sig)\n@@ -2781,7 +2781,7 @@ bool CWallet::CreateTransaction(interfaces::Chain::Lock& locked_chain, const std\n                     txNew.vin.push_back(CTxIn(coin.outpoint,CScript()));\n                 }\n \n-                nBytes = CalculateMaximumSignedTxSize(txNew, this, coin_control.fAllowWatchOnly);\n+                nBytes = CalculateMaximumSignedTxSize(CTransaction(txNew), this, coin_control.fAllowWatchOnly);\n                 if (nBytes < 0) {\n                     strFailReason = _(\"Signing transaction failed\");\n                     return false;"
      }
    ]
  },
  {
    "sha": "b301950df32443e358bc22ca22c6f9ac09d18219",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiMzAxOTUwZGYzMjQ0M2UzNThiYzIyY2EyMmM2ZjlhYzA5ZDE4MjE5",
    "commit": {
      "author": {
        "name": "lucash-dev",
        "email": "lucash.dev@gmail.com",
        "date": "2018-12-10T06:04:07Z"
      },
      "committer": {
        "name": "lucash-dev",
        "email": "lucash.dev@gmail.com",
        "date": "2018-12-18T05:02:42Z"
      },
      "message": " Made expicit constructor CTransaction(const CMutableTransaction &tx).\n\nThis makes the above constructor explicit. The rationale is that this conversion has very significant performance effects. Making it explicit makes it easier to reason about these performance trade-offs, and helps identify possible functions that need a CMutableTransaction version.",
      "tree": {
        "sha": "db0314b4adb9b38e1c9f6a53bcb1d57fad8136a2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/db0314b4adb9b38e1c9f6a53bcb1d57fad8136a2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b301950df32443e358bc22ca22c6f9ac09d18219",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b301950df32443e358bc22ca22c6f9ac09d18219",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b301950df32443e358bc22ca22c6f9ac09d18219",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b301950df32443e358bc22ca22c6f9ac09d18219/comments",
    "author": {
      "login": "lucash-dev",
      "id": 31627588,
      "node_id": "MDQ6VXNlcjMxNjI3NTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/31627588?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lucash-dev",
      "html_url": "https://github.com/lucash-dev",
      "followers_url": "https://api.github.com/users/lucash-dev/followers",
      "following_url": "https://api.github.com/users/lucash-dev/following{/other_user}",
      "gists_url": "https://api.github.com/users/lucash-dev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lucash-dev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lucash-dev/subscriptions",
      "organizations_url": "https://api.github.com/users/lucash-dev/orgs",
      "repos_url": "https://api.github.com/users/lucash-dev/repos",
      "events_url": "https://api.github.com/users/lucash-dev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lucash-dev/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "lucash-dev",
      "id": 31627588,
      "node_id": "MDQ6VXNlcjMxNjI3NTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/31627588?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lucash-dev",
      "html_url": "https://github.com/lucash-dev",
      "followers_url": "https://api.github.com/users/lucash-dev/followers",
      "following_url": "https://api.github.com/users/lucash-dev/following{/other_user}",
      "gists_url": "https://api.github.com/users/lucash-dev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lucash-dev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lucash-dev/subscriptions",
      "organizations_url": "https://api.github.com/users/lucash-dev/orgs",
      "repos_url": "https://api.github.com/users/lucash-dev/repos",
      "events_url": "https://api.github.com/users/lucash-dev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lucash-dev/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "faf29dd019efef4b05e8e78885926764134d9c04",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faf29dd019efef4b05e8e78885926764134d9c04",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/faf29dd019efef4b05e8e78885926764134d9c04"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "f6f8e3136329a9722be4136b9704650875787739",
        "filename": "src/primitives/transaction.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b301950df32443e358bc22ca22c6f9ac09d18219/src/primitives/transaction.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b301950df32443e358bc22ca22c6f9ac09d18219/src/primitives/transaction.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/primitives/transaction.h?ref=b301950df32443e358bc22ca22c6f9ac09d18219",
        "patch": "@@ -298,7 +298,7 @@ class CTransaction\n     CTransaction();\n \n     /** Convert a CMutableTransaction into a CTransaction. */\n-    CTransaction(const CMutableTransaction &tx);\n+    explicit CTransaction(const CMutableTransaction &tx);\n     CTransaction(CMutableTransaction &&tx);\n \n     template <typename Stream>"
      }
    ]
  }
]