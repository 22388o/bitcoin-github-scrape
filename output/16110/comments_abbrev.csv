laanwj,2019-05-28 09:33:36,"Very cool, concept ACK",https://github.com/bitcoin/bitcoin/pull/16110#issuecomment-496441009,496441009,
fanquake,2019-05-28 13:51:06,Concept ACK,https://github.com/bitcoin/bitcoin/pull/16110#issuecomment-496525218,496525218,
fanquake,2019-05-28 13:52:41,@greenaddress You might be interested in taking a look at this?,https://github.com/bitcoin/bitcoin/pull/16110#issuecomment-496525882,496525882,
laanwj,2019-06-13 12:55:10,"Would be awesome if someone who is building bitcoin core for Android would review and test this. This change is pretty minimal.\n\nI'd love to have a `arm64-android` gitian build at some point so that software such as abcore can include that instead of having to build it out of band with additional patch-sets.\n",https://github.com/bitcoin/bitcoin/pull/16110#issuecomment-501690489,501690489,
greenaddress,2019-06-23 15:02:00,"Google now mandates that all ndk based application ship all 4 binaries armv7a/aarch64/x86/amd64 - should be tested on all (and ideally added to the CI to prevent breakage). Specifically you may have some issue on 32 bit without some extra flags. See https://GitHub.com/GreenAddress/bitcoin_ndk for what's currently required to build core with NDK\n\nHaven't reviewed the PR patches yet, will have a",https://github.com/bitcoin/bitcoin/pull/16110#issuecomment-504759990,504759990,
fanquake,2019-06-24 05:34:06,"I had a quick test of this. Installed the Mac ndk from https://developer.android.com/ndk/downloads/.\n\nCouldn't get Boost 1.70.0 to build correctly, but reverting to 1.64.0 seemed to work.\nI also had to add `andriod_RANLIB=$(ANDROID_TOOLCHAIN_BIN)/$(HOST)-ranlib` to the android host for the build to complete. I was using a command like:\n```bash\nNO_QT=1 NO_WALLET=1 ANDROID_API_LEVEL=29 AND",https://github.com/bitcoin/bitcoin/pull/16110#issuecomment-504864025,504864025,
icota,2019-07-10 12:14:10,"Thanks @fanquake, after adding the `ranlib` line I was able to build on macOS High Sierra (with Boost 1.64.0) by running:\n`make HOST=aarch64-linux-android ANDROID_API_LEVEL=29 ANDROID_TOOLCHAIN_BIN=/Users/igor/Library/Android/sdk/ndk-bundle/toolchains/llvm/prebuilt/darwin-x86_64/bin/ NO_QT=1 NO_WALLET=1`\n\n@greenaddress I believe Google only mandates 64-bit in addition to 32-bit. Pure 64-bit ",https://github.com/bitcoin/bitcoin/pull/16110#issuecomment-510035561,510035561,
BlockMechanic,2019-08-06 15:36:28,"This seems to configure a build that has QT disabled, am I correct ? Also doesnt this :- https://github.com/bitcoin/bitcoin/pull/13696 resolve the QT issue?",https://github.com/bitcoin/bitcoin/pull/16110#issuecomment-518723802,518723802,
icota,2019-08-06 16:04:40,"@BlockMechanic, this is built without Qt. You probably don't want it anyway as the Qt Widgets approach Bitcoin-Qt uses is not really optimised for Android. Qt Quick OTOH would be grand as an official mobile UI but that's a topic for another PR.",https://github.com/bitcoin/bitcoin/pull/16110#issuecomment-518735456,518735456,
BlockMechanic,2019-08-06 17:11:39,"@icota thanks for the response. I'll still try to build it with QT as is though if a project to make it mobile friendly is started, i'd be happy to help ",https://github.com/bitcoin/bitcoin/pull/16110#issuecomment-518760790,518760790,
BlockMechanic,2019-08-07 10:02:59,"Finally got down to it last night , only to see that the example also stipulates NO_WALLET=1 ... why is this ?",https://github.com/bitcoin/bitcoin/pull/16110#issuecomment-519031036,519031036,
icota,2019-08-07 12:37:40,"@BlockMechanic, there is no particular reason. It's just an example. I haven't tested it myself, but I guess you can build with wallet if you wish so.",https://github.com/bitcoin/bitcoin/pull/16110#issuecomment-519077785,519077785,
icota,2019-09-16 12:39:43,Rebased on top of master and added config options and a patch file enabling Android build of Qt. Thanks @BlockMechanic!,https://github.com/bitcoin/bitcoin/pull/16110#issuecomment-531759068,531759068,
icota,2019-09-16 14:14:29,"Thanks for testing @Sjors. The line I'm using to build (with Qt) is:\n```\nANDROID_SDK=/home/user/Android/Sdk ANDROID_NDK=/home/user/Android/Sdk/ndk-bundle make HOST=aarch64-linux-android ANDROID_API_LEVEL=28 ANDROID_TOOLCHAIN_BIN=/home/user/Android/Sdk/ndk-bundle/toolchains/llvm/prebuilt/linux-x86_64/bin\n```\nI'd be thankful if you could retry the build on both Ubuntu and Mac (mine is out of",https://github.com/bitcoin/bitcoin/pull/16110#issuecomment-531796442,531796442,
Sjors,2019-09-16 14:46:58,"I downloaded the sdk-tools from https://developer.android.com/studio#downloads, extract it to `~/dev/android-tools`. I installed Java 8 (instead of 12):\n\n```\nbrew tap adoptopenjdk/openjdk\nbrew cask install adoptopenjdk8\n```\n\nI used `~/dev/android-tools` to download the SDK: `bin/sdkmanager ""build-tools;28.0.3""`\n\nI then added the `ANDROID_SDK` and `ANDROID_NDK` bits:\n\n```\nAN",https://github.com/bitcoin/bitcoin/pull/16110#issuecomment-531810697,531810697,
BlockMechanic,2019-09-16 22:07:31,To get an actual APK there are additional files required such as AndroidManifest.xml and gradle files. Also the final APK in my case was built using androiddeployqt. I'll work a clean PR that highlights this and has appropriate code and notes ,https://github.com/bitcoin/bitcoin/pull/16110#issuecomment-531977179,531977179,
icota,2019-09-17 09:21:16,"I've updated the docs to make it clear where to get the SDK/NDK/Platform packages and what `ANDROID_API_LEVEL` and other options mean. Personally, I targeted and used as an example API level 28 because that was the latest at the time.",https://github.com/bitcoin/bitcoin/pull/16110#issuecomment-532137996,532137996,
Sjors,2019-09-17 12:47:46,"I was missing some pieces: `bin/sdkmanager ""ndk-bundle"" ""platform-tools"" ""platforms;android-28""`. So I guess I didn't have to download this NDK seperately.\n\nIt also looks like it installed the SDK at `~/dev/platforms/android-28`, not in `~/Library/Android` as some articles suggest, in other words in `../platforms` relative to where I extract the SDK tools. Similary I put `ndk-bundle` in `~/dev",https://github.com/bitcoin/bitcoin/pull/16110#issuecomment-532205039,532205039,
icota,2019-09-17 13:06:49,"I think your SDK path is wrong, YMMV but going by my (default, on Linux) setup you should set `ANDROID_SDK=/Users/sjors/dev` because `ndk-bundle` and `platform` folders are directy under SDK root. Or look for `ANDROID_SDK_PATH` variable in your env.",https://github.com/bitcoin/bitcoin/pull/16110#issuecomment-532212219,532212219,
Sjors,2019-09-17 17:12:21,"I don't have `ANDROID_SDK_PATH` in my env. I tried `ANDROID_SDK=/Users/sjors/dev` but that doesn't make the `zlib` error go away.\n\nI wonder if this is related: https://stackoverflow.com/questions/21396988/zlib-build-not-configuring-properly-with-cross-compiler-ignores-ar\n\nI'll try again later now that #16809 is merged.",https://github.com/bitcoin/bitcoin/pull/16110#issuecomment-532314067,532314067,
icota,2019-09-19 08:25:23,I've procured a Mac and I run into the exact same `zlib` error. For completeness I want this to work on macOS so I will investigate.,https://github.com/bitcoin/bitcoin/pull/16110#issuecomment-533024706,533024706,
icota,2019-09-19 09:57:48,"Your hunch was right @Sjors, I had to add a little fix on top of [#16809](https://github.com/bitcoin/bitcoin/pull/16809). I am able to do a full Android depends build on macOS now and this is the incantation:\n```\nANDROID_SDK=/Users/igor/Library/Android/sdk/ ANDROID_NDK=/Users/igor/Library/Android/sdk/ndk-bundle/  make HOST=aarch64-linux-android ANDROID_API_LEVEL=29 ANDROID_TOOLCHAIN_BIN=/Users",https://github.com/bitcoin/bitcoin/pull/16110#issuecomment-533059037,533059037,
Sjors,2019-09-19 11:57:09,"I installed the version 29 SDK and ran my incantation again (`ANDROID_SDK=/Users/sjors/dev`). Depends now builds happily:\n```\ncopying packages: boost openssl libevent qrencode zlib qt bdb miniupnpc zeromq\nto: /Users/sjors/dev/bitcoin/depends/aarch64-linux-android\n```\n\nBut configure doesn't detect QT:\n```\n./configure --prefix=/Users/sjors/dev/bitcoin/depends/aarch64-linux-android\n",https://github.com/bitcoin/bitcoin/pull/16110#issuecomment-533096864,533096864,
icota,2019-09-19 12:14:13,Somehow related to [#9126](https://github.com/bitcoin/bitcoin/issues/9126)? It configures correctly on Linux.,https://github.com/bitcoin/bitcoin/pull/16110#issuecomment-533102091,533102091,
Sjors,2019-09-19 12:56:07,Normally QT from depends does work for me.,https://github.com/bitcoin/bitcoin/pull/16110#issuecomment-533118107,533118107,
BlockMechanic,2019-09-19 13:13:10,"> I installed the version 29 SDK and ran my incantation again (`ANDROID_SDK=/Users/sjors/dev`). Depends now builds happily:\n> \n> ```\n> copying packages: boost openssl libevent qrencode zlib qt bdb miniupnpc zeromq\n> to: /Users/sjors/dev/bitcoin/depends/aarch64-linux-android\n> ```\n> \n> But configure doesn't detect QT:\n> \n> ```\n> ./configure --prefix=/Users/sjors/dev/bitcoin/depe",https://github.com/bitcoin/bitcoin/pull/16110#issuecomment-533124312,533124312,
DrahtBot,2019-09-19 15:22:32,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#17265](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/17265.html) (Remove OpenSSL by fanquake)\n* [#17008](htt",https://github.com/bitcoin/bitcoin/pull/16110#issuecomment-533182109,533182109,
Sjors,2019-09-19 15:36:17,"I cherry-picked 2345330780e251c991a636a6a6e048fd47125a0b on top of this PR, did a `make clean`, `./autogen.sh` and `./configure --prefix=....`  but it didn't help:\n```\nchecking for Qt5Core Qt5Gui Qt5Network Qt5Widgets... yes\nchecking for Qt5Test... yes\nchecking for Qt5DBus... no\nchecking for static Qt... yes\nchecking for Qt5FontDatabaseSupport... yes\nchecking for Qt5EventDispatcherSu",https://github.com/bitcoin/bitcoin/pull/16110#issuecomment-533188013,533188013,
icota,2019-09-22 13:55:27,"I took a look at this and it seems @BlockMechanic's commit neglected to set TARGET_OS but that was easy to fix. I wasn't exactly sure if PR scope should go beyond building depends but since they have just one purpose, which is to build the main binary, I've now added commits to fix macOS configure and build.",https://github.com/bitcoin/bitcoin/pull/16110#issuecomment-533884038,533884038,
fanquake,2019-09-23 02:15:15,"Tested https://github.com/bitcoin/bitcoin/pull/16110/commits/24ffef0c271739a2ca75feecb816f3218c1850bf on macOS 10.14 using macOS NDK r20, Android SDK 10 (API level 29):\n\n```bash\nHOST=aarch64-linux-android ANDROID_API_LEVEL=29 ANDROID_SDK=/Users/michael/Library/Android/sdk/ ANDROID_NDK=/Users/michael/Library/Android/sdk/ndk-bundle/ ANDROID_TOOLCHAIN_BIN=/Users/michael/Library/Android/sdk/ndk-",https://github.com/bitcoin/bitcoin/pull/16110#issuecomment-533941973,533941973,
Sjors,2019-09-23 13:08:21,Same result with e4c319e as @fanquake ,https://github.com/bitcoin/bitcoin/pull/16110#issuecomment-534090963,534090963,
icota,2019-09-23 14:34:09,"I have a clean working tree of https://github.com/bitcoin/bitcoin/commit/e4c319e8a1c6e40a953036b942bd5d732b0bbf69, `ANDROID_SDK=/Users/igor/Library/Android/sdk/ ANDROID_NDK=/Users/igor/Library/Android/sdk/ndk-bundle/  make HOST=aarch64-linux-android ANDROID_API_LEVEL=29 ANDROID_TOOLCHAIN_BIN=/Users/igor/Library/Android/sdk/ndk-bundle/toolchains/llvm/prebuilt/darwin-x86_64/bin` to build depends and",https://github.com/bitcoin/bitcoin/pull/16110#issuecomment-534126705,534126705,
Sjors,2019-09-23 15:01:46,"I used a fresh working tree as well on macOS 10.14.6, so maybe it's a Mojave thing?",https://github.com/bitcoin/bitcoin/pull/16110#issuecomment-534139276,534139276,
MarcoFalke,2019-09-23 15:26:52,Would be nice (if possible) to have one of the `./ci` scripts to cross compile (similar to the macOs cross compile script),https://github.com/bitcoin/bitcoin/pull/16110#issuecomment-534150994,534150994,
icota,2019-10-09 09:24:28,Static linking against Qt for Android is not supported and should not work but with some linker tweaks  to `bitcoin_qt.m4` it does. I'm trying to figure this out [upstream](https://bugreports.qt.io/browse/QTBUG-32618) and I'll report back here.,https://github.com/bitcoin/bitcoin/pull/16110#issuecomment-539917894,539917894,
BlockMechanic,2019-10-13 07:47:31,"> This now compiles for me using:\n> \n> ```shell\n> HOST=aarch64-linux-android ANDROID_API_LEVEL=29 ANDROID_SDK=/Users/michael/Library/Android/sdk/ ANDROID_NDK=/Users/michael/Library/Android/sdk/ndk-bundle/ ANDROID_TOOLCHAIN_BIN=/Users/michael/Library/Android/sdk/ndk-bundle/toolchains/llvm/prebuilt/darwin-x86_64/bin make -C depends/ -j9\n> ```\n> \n> ```shell\n> file src/qt/bitcoin-qt \n>",https://github.com/bitcoin/bitcoin/pull/16110#issuecomment-541395685,541395685,
Sjors,2019-10-14 07:57:16,"I upgraded to macOS Catalina in the mean time.\n\nI can build depends:\n\n```\ncd depends\nANDROID_SDK=/Users/sjors/dev ANDROID_NDK=/Users/sjors/dev/ndk-bundle make HOST=aarch64-linux-android ANDROID_API_LEVEL=29 ANDROID_TOOLCHAIN_BIN=/Users/sjors/dev/ndk-bundle/toolchains/llvm/prebuilt/darwin-x86_64/bin\n```\n\nAnd then build QT:\n\n```\n./configure --prefix=$PWD/depends/aarch64-linux",https://github.com/bitcoin/bitcoin/pull/16110#issuecomment-541538748,541538748,
greenaddress,2019-10-14 21:00:15,"Unless the qt gui as currently in repo can be used on android i think this PR should limit itself to NDK support in the depends builds system *without* qt support. Even if the QT current GUI worked on android i would argue it wouldn't be very useful.\n\nI am aware of a QML PR but I imagine this PR needs to go first anyway and I'd like to think of this PR in the context of master.\n\nQt build s",https://github.com/bitcoin/bitcoin/pull/16110#issuecomment-541918638,541918638,
icota,2019-10-15 06:28:59,"The Qt Widgets GUI as is in master does indeed work. It's a weird look on mobile but it does work and I'd argue it might even be useful for some people:\n![Screenshot_2019-10-12-16-01-32-666_org bitcoin core](https://user-images.githubusercontent.com/762502/66804363-8b822700-ef22-11e9-8c97-e5382ad4481f.png)\n\nI'm working on a PR that I hope will make packaging as easy as `make apk`. So even th",https://github.com/bitcoin/bitcoin/pull/16110#issuecomment-542059030,542059030,
BlockMechanic,2019-10-15 08:42:01,"@icota Supporting all abis in this PR can be done by cherry picking from the one i built atop yours. \n\nI have been using API level 24 specifically because starting from Android API level 24 (Android 7.0 Nougat) ifaddrs.h is supported officially, so the need to use custom implementations as was done for earlier versions is removed. In as far as i can tell API level 24 is the earliest version th",https://github.com/bitcoin/bitcoin/pull/16110#issuecomment-542105584,542105584,
icota,2019-10-15 09:14:15,"> @icota Supporting all abis in this PR can be done by cherry picking from the one i built atop yours.\n\nLooking at the commits in https://github.com/bitcoin/bitcoin/pull/17078 I think they are going to conflict. It's probably better you make a PR to `icota:add-android-to-depends` like we agreed there.\n",https://github.com/bitcoin/bitcoin/pull/16110#issuecomment-542118380,542118380,
greenaddress,2019-10-15 23:15:44,"@icota if the gui is not pretty but otherwise 'usable' then linking qt makes sense - AFAIK 32bit requires some extra flags I think so I think makes sense to covered by this PR (and in CI and gitian ideally)\n\n@BlockMechanic as far as i know you don't need to provide ifaddrs even on lower android versions - see master of https://github.com/greenaddress/bitcoin_ndk and supports android 19 as min ",https://github.com/bitcoin/bitcoin/pull/16110#issuecomment-542443245,542443245,
BlockMechanic,2019-10-16 07:25:08,"@greenaddress during my attempts to produce and test an apk, at first it would not compile properly, then the apk would not start , then it would crash immediately after sync. A lot of the time (using gdb)  I kept getting traces to various aspects of threads and networking. Eventually after a lot of google searches and reading comments across github and stackoverflow, i used api 24 and I got a sta",https://github.com/bitcoin/bitcoin/pull/16110#issuecomment-542562096,542562096,
icota,2019-10-23 13:51:39,"With the latest changes (thanks @BlockMechanic) you can build a prefix for any of the supported Android ABIs (`armv7a-linux-android`, `x86_64-linux-android`, `i686-linux-android` or `aarch64-linux-android`). \n\nTo test the CLI binaries push to a device and run. `bitcoin-qt` however requires https://github.com/bitcoin/bitcoin/pull/17227/commits/629db6189dde6a43922632a9d39cae0c257724a6 and `make ",https://github.com/bitcoin/bitcoin/pull/16110#issuecomment-545454211,545454211,
ryanofsky,2019-10-23 15:23:25,"@dongcarl @theuni do you want to weigh in in the build changes here and maybe concept ACK?\n\nThe changes required are surprisingly small and sensible, and currently let you build for android from both linux and macos, and we should be able to add a travis target too https://github.com/bitcoin/bitcoin/pull/16110#issuecomment-534150994",https://github.com/bitcoin/bitcoin/pull/16110#issuecomment-545497703,545497703,
laanwj,2019-10-28 11:40:30,"> @dongcarl @theuni do you want to weigh in in the build changes here and maybe concept ACK?\n\nAgree, it's also early enough in the merge window of 0.20 to be able to find more subtle problems before release.\n\n",https://github.com/bitcoin/bitcoin/pull/16110#issuecomment-546908565,546908565,
cryptozeny,2019-10-30 13:19:00,AWESOME,https://github.com/bitcoin/bitcoin/pull/16110#issuecomment-547898091,547898091,
laanwj,2019-11-04 12:34:00,"Agree with @sjors. Thanks for testing. \nThe risk of merging this seems to be low, definitely early in the 0.20 release cycle, so going ahead with it.",https://github.com/bitcoin/bitcoin/pull/16110#issuecomment-549333630,549333630,
immense055,2020-07-26 09:51:24,[](url),https://github.com/bitcoin/bitcoin/pull/16110#issuecomment-663967216,663967216,
luke-jr,2019-05-28 02:22:54,"What if it's being built for ARM32, x86, or some other platform entirely?",https://github.com/bitcoin/bitcoin/pull/16110#discussion_r287910284,287910284,depends/packages/openssl.mk
icota,2019-05-28 03:04:23,Google has deprecated both 32-bit apps and GCC in favour of Clang. I tried to use OpenSSL's `android` target instead of `linux-generic` but it assumes GCC and then `Config` script's `-mandroid` flag [breaks](https://github.com/openssl/openssl/issues/1531) Clang.,https://github.com/bitcoin/bitcoin/pull/16110#discussion_r287915792,287915792,depends/packages/openssl.mk
BlockMechanic,2019-08-10 09:30:11,So this :- https://github.com/openssl/openssl/pull/2229 would not work ?,https://github.com/bitcoin/bitcoin/pull/16110#discussion_r312697180,312697180,depends/packages/openssl.mk
BlockMechanic,2019-08-15 15:00:33,"Actualy, i think this does it for both https://github.com/ruslo/hunter/pull/814/files. Is it worth creating a patch ?",https://github.com/bitcoin/bitcoin/pull/16110#discussion_r314350103,314350103,depends/packages/openssl.mk
Sjors,2019-09-16 13:01:30,"Suggest dropping `NO_QT=1` and `NO_WALLET=1`; these options are explained elsewhere, and the current instructions suggest that it doesn't work.",https://github.com/bitcoin/bitcoin/pull/16110#discussion_r324660016,324660016,depends/README.md
Sjors,2019-09-16 13:01:52,Can you add a link where one can obtain the toolchain? I'm guess here: https://developer.android.com/ndk/downloads,https://github.com/bitcoin/bitcoin/pull/16110#discussion_r324660190,324660190,depends/README.md
Sjors,2019-09-16 13:04:59,How does one decide what API level to use? Maybe link to a page with the most recent version?,https://github.com/bitcoin/bitcoin/pull/16110#discussion_r324661788,324661788,depends/README.md
Sjors,2019-09-16 13:06:52,Mention that `linux-x86_64` refers to the platform that you're doing the build on.,https://github.com/bitcoin/bitcoin/pull/16110#discussion_r324662792,324662792,depends/README.md
fanquake,2019-10-12 15:28:51,Can you add some more info here about what this patch is doing / link to somewhere upstream if applicable.,https://github.com/bitcoin/bitcoin/pull/16110#discussion_r334242495,334242495,depends/patches/qt/fix_android_jni_static.patch
icota,2019-10-12 16:41:33,When JVM loads a native lib (via [system.load](https://developer.android.com/reference/java/lang/System#load(java.lang.String))) it invokes its `JNI_OnLoad` function. Qt for Android uses this mechanism to do all kinds of init and register native functions for the Java side to use. The proper and supported way is to dynamically link and then each separate `libqt*.so` inits itself through `JNI_OnLoa,https://github.com/bitcoin/bitcoin/pull/16110#discussion_r334245028,334245028,depends/patches/qt/fix_android_jni_static.patch
greenaddress,2019-10-14 21:07:37,Google has not deprecated 32bit apps afaik. Link? It has deprecated gcc in favour of clang that's correct. Most emulators images are still 32 bit AFAIK.,https://github.com/bitcoin/bitcoin/pull/16110#discussion_r334663202,334663202,depends/packages/openssl.mk
greenaddress,2019-10-14 21:50:23,If you are referring to https://android-developers.googleblog.com/2019/01/get-your-apps-ready-for-64-bit.html they want people to support 64 but they explicitly state that 32 bit support is here to stay.,https://github.com/bitcoin/bitcoin/pull/16110#discussion_r334676829,334676829,depends/packages/openssl.mk
icota,2019-10-15 06:32:17,"My bad, you are right, they haven't deprecated 32-bit. But let's continue this discussion in the main comments.",https://github.com/bitcoin/bitcoin/pull/16110#discussion_r334771619,334771619,depends/packages/openssl.mk
Sjors,2019-11-03 15:06:09,"Don't forget to add the new configurations you added: armv7a-linux-android, x86_64-linux-android, i686-linux-android or aarch64-linux-android\n\nPlease also mention the minimum supported version. I believe you tested down to 24? ",https://github.com/bitcoin/bitcoin/pull/16110#discussion_r341856108,341856108,depends/README.md
