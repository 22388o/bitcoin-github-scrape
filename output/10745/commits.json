[
  {
    "sha": "34066944a90f638adb20ff5f1fe86fd1521ba100",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNDA2Njk0NGE5MGY2MzhhZGIyMGZmNWYxZmU4NmZkMTUyMWJhMTAw",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2017-07-05T02:25:52Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2017-07-05T08:35:45Z"
      },
      "message": "Be consistent in using \"opt_into_rbf\" parameter for Opt-In RBF",
      "tree": {
        "sha": "ea78892e55a6ae5a84b84cbb5fc9e8d92b7e52f8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ea78892e55a6ae5a84b84cbb5fc9e8d92b7e52f8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/34066944a90f638adb20ff5f1fe86fd1521ba100",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/34066944a90f638adb20ff5f1fe86fd1521ba100",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/34066944a90f638adb20ff5f1fe86fd1521ba100",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/34066944a90f638adb20ff5f1fe86fd1521ba100/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9a5a1d7d452eff242be1bfe155a30c1f05b2d5a4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9a5a1d7d452eff242be1bfe155a30c1f05b2d5a4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9a5a1d7d452eff242be1bfe155a30c1f05b2d5a4"
      }
    ],
    "stats": {
      "total": 36,
      "additions": 22,
      "deletions": 14
    },
    "files": [
      {
        "sha": "eaebbdb186c03ffc10b42d83e3639929f0a9eb6f",
        "filename": "src/bitcoin-tx.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/34066944a90f638adb20ff5f1fe86fd1521ba100/src/bitcoin-tx.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/34066944a90f638adb20ff5f1fe86fd1521ba100/src/bitcoin-tx.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-tx.cpp?ref=34066944a90f638adb20ff5f1fe86fd1521ba100",
        "patch": "@@ -78,7 +78,7 @@ static int AppInitRawTx(int argc, char* argv[])\n         strUsage += HelpMessageOpt(\"in=TXID:VOUT(:SEQUENCE_NUMBER)\", _(\"Add input to TX\"));\n         strUsage += HelpMessageOpt(\"locktime=N\", _(\"Set TX lock time to N\"));\n         strUsage += HelpMessageOpt(\"nversion=N\", _(\"Set TX version to N\"));\n-        strUsage += HelpMessageOpt(\"rbfoptin(=N)\", _(\"Set RBF opt-in sequence number for input N (if not provided, opt-in all available inputs)\"));\n+        strUsage += HelpMessageOpt(\"opt_into_rbf(=N)\", _(\"Set RBF opt-in sequence number for input N (if not provided, opt-in all available inputs)\"));\n         strUsage += HelpMessageOpt(\"outaddr=VALUE:ADDRESS\", _(\"Add address-based output to TX\"));\n         strUsage += HelpMessageOpt(\"outpubkey=VALUE:PUBKEY[:FLAGS]\", _(\"Add pay-to-pubkey output to TX\") + \". \" +\n             _(\"Optionally add the \\\"W\\\" flag to produce a pay-to-witness-pubkey-hash output\") + \". \" +\n@@ -671,7 +671,9 @@ static void MutateTx(CMutableTransaction& tx, const std::string& command,\n         MutateTxVersion(tx, commandVal);\n     else if (command == \"locktime\")\n         MutateTxLocktime(tx, commandVal);\n-    else if (command == \"rbfoptin\") {\n+    else if (command == \"opt_into_rbf\") {\n+        MutateTxRBFOptIn(tx, commandVal);\n+    } else if (command == \"rbfoptin\") {\n         MutateTxRBFOptIn(tx, commandVal);\n     }\n "
      },
      {
        "sha": "c8c812faa8c13f32be52da3010b6b307169da763",
        "filename": "src/rpc/client.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/34066944a90f638adb20ff5f1fe86fd1521ba100/src/rpc/client.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/34066944a90f638adb20ff5f1fe86fd1521ba100/src/rpc/client.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/client.cpp?ref=34066944a90f638adb20ff5f1fe86fd1521ba100",
        "patch": "@@ -86,7 +86,7 @@ static const CRPCConvertParam vRPCConvertParams[] =\n     { \"createrawtransaction\", 0, \"inputs\" },\n     { \"createrawtransaction\", 1, \"outputs\" },\n     { \"createrawtransaction\", 2, \"locktime\" },\n-    { \"createrawtransaction\", 3, \"optintorbf\" },\n+    { \"createrawtransaction\", 3, \"opt_into_rbf\" },\n     { \"signrawtransaction\", 1, \"prevtxs\" },\n     { \"signrawtransaction\", 2, \"privkeys\" },\n     { \"sendrawtransaction\", 1, \"allowhighfees\" },"
      },
      {
        "sha": "8fd819f8f1d6f8d5826a2b7025ea06ff0cb050eb",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/34066944a90f638adb20ff5f1fe86fd1521ba100/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/34066944a90f638adb20ff5f1fe86fd1521ba100/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=34066944a90f638adb20ff5f1fe86fd1521ba100",
        "patch": "@@ -292,7 +292,7 @@ UniValue createrawtransaction(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() < 2 || request.params.size() > 4)\n         throw std::runtime_error(\n-            \"createrawtransaction [{\\\"txid\\\":\\\"id\\\",\\\"vout\\\":n},...] {\\\"address\\\":amount,\\\"data\\\":\\\"hex\\\",...} ( locktime ) ( optintorbf )\\n\"\n+            \"createrawtransaction [{\\\"txid\\\":\\\"id\\\",\\\"vout\\\":n},...] {\\\"address\\\":amount,\\\"data\\\":\\\"hex\\\",...} ( locktime ) ( opt_into_rbf )\\n\"\n             \"\\nCreate a transaction spending the given inputs and creating new outputs.\\n\"\n             \"Outputs can be addresses or data.\\n\"\n             \"Returns hex-encoded raw transaction.\\n\"\n@@ -316,7 +316,7 @@ UniValue createrawtransaction(const JSONRPCRequest& request)\n             \"      ,...\\n\"\n             \"    }\\n\"\n             \"3. locktime                  (numeric, optional, default=0) Raw locktime. Non-0 value also locktime-activates inputs\\n\"\n-            \"4. optintorbf                (boolean, optional, default=false) Allow this transaction to be replaced by a transaction with higher fees. If provided, it is an error if explicit sequence numbers are incompatible.\\n\"\n+            \"4. opt_into_rbf              (boolean, optional, default=false) Allow this transaction to be replaced by a transaction with higher fees. If provided, it is an error if explicit sequence numbers are incompatible.\\n\"\n             \"\\nResult:\\n\"\n             \"\\\"transaction\\\"              (string) hex string of the transaction\\n\"\n \n@@ -410,7 +410,7 @@ UniValue createrawtransaction(const JSONRPCRequest& request)\n     }\n \n     if (request.params.size() > 3 && rbfOptIn != SignalsOptInRBF(rawTx)) {\n-        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter combination: Sequence number(s) contradict optintorbf option\");\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid parameter combination: Sequence number(s) contradict opt_into_rbf option\");\n     }\n \n     return EncodeHexTx(rawTx);\n@@ -899,7 +899,7 @@ static const CRPCCommand commands[] =\n { //  category              name                      actor (function)         okSafeMode\n   //  --------------------- ------------------------  -----------------------  ----------\n     { \"rawtransactions\",    \"getrawtransaction\",      &getrawtransaction,      true,  {\"txid\",\"verbose\"} },\n-    { \"rawtransactions\",    \"createrawtransaction\",   &createrawtransaction,   true,  {\"inputs\",\"outputs\",\"locktime\"} },\n+    { \"rawtransactions\",    \"createrawtransaction\",   &createrawtransaction,   true,  {\"inputs\",\"outputs\",\"locktime\",\"opt_into_rbf|optintorbf\"} },\n     { \"rawtransactions\",    \"decoderawtransaction\",   &decoderawtransaction,   true,  {\"hexstring\"} },\n     { \"rawtransactions\",    \"decodescript\",           &decodescript,           true,  {\"hexstring\"} },\n     { \"rawtransactions\",    \"sendrawtransaction\",     &sendrawtransaction,     false, {\"hexstring\",\"allowhighfees\"} },"
      },
      {
        "sha": "0bc4e3815a9c086fa8bb3de07f37f6eeeebe906b",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 4,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/34066944a90f638adb20ff5f1fe86fd1521ba100/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/34066944a90f638adb20ff5f1fe86fd1521ba100/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=34066944a90f638adb20ff5f1fe86fd1521ba100",
        "patch": "@@ -2658,7 +2658,7 @@ UniValue fundrawtransaction(const JSONRPCRequest& request)\n                             \"                              Those recipients will receive less bitcoins than you enter in their corresponding amount field.\\n\"\n                             \"                              If no outputs are specified here, the sender pays the fee.\\n\"\n                             \"                                  [vout_index,...]\\n\"\n-                            \"     \\\"optIntoRbf\\\"             (boolean, optional) Allow this transaction to be replaced by a transaction with higher fees\\n\"\n+                            \"     \\\"opt_into_rbf\\\"           (boolean, optional) Allow this transaction to be replaced by a transaction with higher fees\\n\"\n                             \"   }\\n\"\n                             \"                         for backward compatibility: passing in a true instead of an object will result in {\\\"includeWatching\\\":true}\\n\"\n                             \"\\nResult:\\n\"\n@@ -2710,6 +2710,7 @@ UniValue fundrawtransaction(const JSONRPCRequest& request)\n                 {\"reserveChangeKey\", UniValueType(UniValue::VBOOL)},\n                 {\"feeRate\", UniValueType()}, // will be checked below\n                 {\"subtractFeeFromOutputs\", UniValueType(UniValue::VARR)},\n+                {\"opt_into_rbf\", UniValueType(UniValue::VBOOL)},\n                 {\"optIntoRbf\", UniValueType(UniValue::VBOOL)},\n             },\n             true, true);\n@@ -2744,7 +2745,9 @@ UniValue fundrawtransaction(const JSONRPCRequest& request)\n         if (options.exists(\"subtractFeeFromOutputs\"))\n             subtractFeeFromOutputs = options[\"subtractFeeFromOutputs\"].get_array();\n \n-        if (options.exists(\"optIntoRbf\")) {\n+        if (options.exists(\"opt_into_rbf\")) {\n+            coinControl.signalRbf = options[\"opt_into_rbf\"].get_bool();\n+        } else if (options.exists(\"optIntoRbf\")) {\n             coinControl.signalRbf = options[\"optIntoRbf\"].get_bool();\n         }\n       }\n@@ -2817,7 +2820,7 @@ UniValue bumpfee(const JSONRPCRequest& request)\n             \"                         In rare cases, the actual fee paid might be slightly higher than the specified\\n\"\n             \"                         totalFee if the tx change output has to be removed because it is too close to\\n\"\n             \"                         the dust threshold.\\n\"\n-            \"     \\\"replaceable\\\"       (boolean, optional, default true) Whether the new transaction should still be\\n\"\n+            \"     \\\"opt_into_rbf\\\"      (boolean, optional, default true) Whether the new transaction should still be\\n\"\n             \"                         marked bip-125 replaceable. If true, the sequence numbers in the transaction will\\n\"\n             \"                         be left unchanged from the original. If false, any input sequence numbers in the\\n\"\n             \"                         original transaction that were less than 0xfffffffe will be increased to 0xfffffffe\\n\"\n@@ -2852,6 +2855,7 @@ UniValue bumpfee(const JSONRPCRequest& request)\n             {\n                 {\"confTarget\", UniValueType(UniValue::VNUM)},\n                 {\"totalFee\", UniValueType(UniValue::VNUM)},\n+                {\"opt_into_rbf\", UniValueType(UniValue::VBOOL)},\n                 {\"replaceable\", UniValueType(UniValue::VBOOL)},\n             },\n             true, true);\n@@ -2874,7 +2878,9 @@ UniValue bumpfee(const JSONRPCRequest& request)\n             }\n         }\n \n-        if (options.exists(\"replaceable\")) {\n+        if (options.exists(\"opt_into_rbf\")) {\n+            replaceable = options[\"opt_into_rbf\"].get_bool();\n+        } else if (options.exists(\"replaceable\")) {\n             replaceable = options[\"replaceable\"].get_bool();\n         }\n     }"
      },
      {
        "sha": "00d993d4952bf22cdcc163df7352579c9abc6c9a",
        "filename": "test/functional/bumpfee.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/34066944a90f638adb20ff5f1fe86fd1521ba100/test/functional/bumpfee.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/34066944a90f638adb20ff5f1fe86fd1521ba100/test/functional/bumpfee.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/bumpfee.py?ref=34066944a90f638adb20ff5f1fe86fd1521ba100",
        "patch": "@@ -217,7 +217,7 @@ def test_rebumping(rbf_node, dest_address):\n def test_rebumping_not_replaceable(rbf_node, dest_address):\n     # check that re-bumping a non-replaceable bump tx fails\n     rbfid = spend_one_input(rbf_node, dest_address)\n-    bumped = rbf_node.bumpfee(rbfid, {\"totalFee\": 10000, \"replaceable\": False})\n+    bumped = rbf_node.bumpfee(rbfid, {\"totalFee\": 10000, \"opt_into_rbf\": False})\n     assert_raises_jsonrpc(-4, \"Transaction is not BIP 125 replaceable\", rbf_node.bumpfee, bumped[\"txid\"],\n                           {\"totalFee\": 20000})\n "
      },
      {
        "sha": "7c742f2dfbcc261c6f2cbd8f013ccfed0d1a3d4a",
        "filename": "test/functional/replace-by-fee.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/34066944a90f638adb20ff5f1fe86fd1521ba100/test/functional/replace-by-fee.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/34066944a90f638adb20ff5f1fe86fd1521ba100/test/functional/replace-by-fee.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/replace-by-fee.py?ref=34066944a90f638adb20ff5f1fe86fd1521ba100",
        "patch": "@@ -531,8 +531,8 @@ def test_rpc(self):\n         assert_equal(json1[\"vin\"][0][\"sequence\"], 4294967295)\n \n         rawtx2 = self.nodes[0].createrawtransaction([], outs)\n-        frawtx2a = self.nodes[0].fundrawtransaction(rawtx2, {\"optIntoRbf\": True})\n-        frawtx2b = self.nodes[0].fundrawtransaction(rawtx2, {\"optIntoRbf\": False})\n+        frawtx2a = self.nodes[0].fundrawtransaction(rawtx2, {\"opt_into_rbf\": True})\n+        frawtx2b = self.nodes[0].fundrawtransaction(rawtx2, {\"opt_into_rbf\": False})\n \n         json0  = self.nodes[0].decoderawtransaction(frawtx2a['hex'])\n         json1  = self.nodes[0].decoderawtransaction(frawtx2b['hex'])"
      }
    ]
  }
]