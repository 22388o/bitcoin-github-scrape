[
  {
    "sha": "1168394d759b13af68acec6d5bfa04aaa24561f8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxMTY4Mzk0ZDc1OWIxM2FmNjhhY2VjNmQ1YmZhMDRhYWEyNDU2MWY4",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2019-11-11T15:34:31Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-03-11T22:38:27Z"
      },
      "message": "[wallet] Notify conflicted transactions in TransactionRemovedFromMempool\n\nThe only CValidationInterface client that cares about transactions that\nare removed from the mempool because of CONFLICT is the wallet.\n\nStart using the TransactionRemovedFromMempool method to notify about\nconflicted transactions instead of using the vtxConflicted vector in\nBlockConnected.",
      "tree": {
        "sha": "fbc098f8a571d4b005195cfa88d2f86603726451",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fbc098f8a571d4b005195cfa88d2f86603726451"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1168394d759b13af68acec6d5bfa04aaa24561f8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1168394d759b13af68acec6d5bfa04aaa24561f8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1168394d759b13af68acec6d5bfa04aaa24561f8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1168394d759b13af68acec6d5bfa04aaa24561f8/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "eae48ec84c4deacfe92139d07ee80e51136cb766",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eae48ec84c4deacfe92139d07ee80e51136cb766",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/eae48ec84c4deacfe92139d07ee80e51136cb766"
      }
    ],
    "stats": {
      "total": 39,
      "additions": 31,
      "deletions": 8
    },
    "files": [
      {
        "sha": "f04f13e6e00cf72384a3aadd1678df414561cd86",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1168394d759b13af68acec6d5bfa04aaa24561f8/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1168394d759b13af68acec6d5bfa04aaa24561f8/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=1168394d759b13af68acec6d5bfa04aaa24561f8",
        "patch": "@@ -408,7 +408,11 @@ void CTxMemPool::removeUnchecked(txiter it, MemPoolRemovalReason reason)\n {\n     CTransactionRef ptx = it->GetSharedTx();\n     NotifyEntryRemoved(ptx, reason);\n-    if (reason != MemPoolRemovalReason::BLOCK && reason != MemPoolRemovalReason::CONFLICT) {\n+    if (reason != MemPoolRemovalReason::BLOCK) {\n+        // Notify clients that a transaction has been removed from the mempool\n+        // for any reason except being included in a block. Clients interested\n+        // in transactions included in blocks can subscribe to the BlockConnected\n+        // notification.\n         GetMainSignals().TransactionRemovedFromMempool(ptx);\n     }\n "
      },
      {
        "sha": "3bb4639f470fa43f0865d71e9a16b297c4f39a7b",
        "filename": "src/validationinterface.h",
        "status": "modified",
        "additions": 26,
        "deletions": 4,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1168394d759b13af68acec6d5bfa04aaa24561f8/src/validationinterface.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1168394d759b13af68acec6d5bfa04aaa24561f8/src/validationinterface.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validationinterface.h?ref=1168394d759b13af68acec6d5bfa04aaa24561f8",
        "patch": "@@ -92,10 +92,32 @@ class CValidationInterface {\n     /**\n      * Notifies listeners of a transaction leaving mempool.\n      *\n-     * This only fires for transactions which leave mempool because of expiry,\n-     * size limiting, reorg (changes in lock times/coinbase maturity), or\n-     * replacement. This does not include any transactions which are included\n-     * in BlockConnectedDisconnected either in block->vtx or in txnConflicted.\n+     * This notification fires for transactions that are removed from the\n+     * mempool for the following reasons:\n+     *\n+     * - EXPIRY (expired from mempool after -mempoolexpiry hours)\n+     * - SIZELIMIT (removed in size limiting if the mempool exceeds -maxmempool megabytes)\n+     * - REORG (removed during a reorg)\n+     * - CONFLICT (removed because it conflicts with in-block transaction)\n+     * - REPLACED (removed due to RBF replacement)\n+     *\n+     * This does not fire for transactions that are removed from the mempool\n+     * because they have been included in a block. Any client that is interested\n+     * in transactions removed from the mempool for inclusion in a block can learn\n+     * about those transactions from the BlockConnected notification.\n+     *\n+     * Transactions that are removed from the mempool because they conflict\n+     * with a transaction in the new block will have\n+     * TransactionRemovedFromMempool events fired *before* the BlockConnected\n+     * event is fired. If multiple blocks are connected in one step, then the\n+     * ordering could be:\n+     *\n+     * - TransactionRemovedFromMempool(tx1 from block A)\n+     * - TransactionRemovedFromMempool(tx2 from block A)\n+     * - TransactionRemovedFromMempool(tx1 from block B)\n+     * - TransactionRemovedFromMempool(tx2 from block B)\n+     * - BlockConnected(A)\n+     * - BlockConnected(B)\n      *\n      * Called on a background thread.\n      */"
      },
      {
        "sha": "8c63f5b90703df06061eae8e4cb717d842449193",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1168394d759b13af68acec6d5bfa04aaa24561f8/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1168394d759b13af68acec6d5bfa04aaa24561f8/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=1168394d759b13af68acec6d5bfa04aaa24561f8",
        "patch": "@@ -1123,9 +1123,6 @@ void CWallet::BlockConnected(const CBlock& block, const std::vector<CTransaction\n         SyncTransaction(block.vtx[index], confirm);\n         TransactionRemovedFromMempool(block.vtx[index]);\n     }\n-    for (const CTransactionRef& ptx : vtxConflicted) {\n-        TransactionRemovedFromMempool(ptx);\n-    }\n }\n \n void CWallet::BlockDisconnected(const CBlock& block, int height)"
      }
    ]
  },
  {
    "sha": "cdb893443cc16edf974f099b8485e04b3db1b1d7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjZGI4OTM0NDNjYzE2ZWRmOTc0ZjA5OWI4NDg1ZTA0YjNkYjFiMWQ3",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2019-11-11T15:43:34Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-03-11T22:38:33Z"
      },
      "message": "[validation interface] Remove vtxConflicted from BlockConnected\n\nThe wallet now uses TransactionRemovedFromMempool to be notified about\nconflicted wallet, and no other clients use vtxConflicted.",
      "tree": {
        "sha": "e18f5ecc5fa42220d222a926c47ba702d28bfb44",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e18f5ecc5fa42220d222a926c47ba702d28bfb44"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cdb893443cc16edf974f099b8485e04b3db1b1d7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cdb893443cc16edf974f099b8485e04b3db1b1d7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cdb893443cc16edf974f099b8485e04b3db1b1d7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cdb893443cc16edf974f099b8485e04b3db1b1d7/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1168394d759b13af68acec6d5bfa04aaa24561f8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1168394d759b13af68acec6d5bfa04aaa24561f8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1168394d759b13af68acec6d5bfa04aaa24561f8"
      }
    ],
    "stats": {
      "total": 44,
      "additions": 20,
      "deletions": 24
    },
    "files": [
      {
        "sha": "7ee4bf22b0b3b50cec8390d023887f705d545580",
        "filename": "src/index/base.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cdb893443cc16edf974f099b8485e04b3db1b1d7/src/index/base.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cdb893443cc16edf974f099b8485e04b3db1b1d7/src/index/base.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/index/base.cpp?ref=cdb893443cc16edf974f099b8485e04b3db1b1d7",
        "patch": "@@ -188,8 +188,7 @@ bool BaseIndex::Rewind(const CBlockIndex* current_tip, const CBlockIndex* new_ti\n     return true;\n }\n \n-void BaseIndex::BlockConnected(const std::shared_ptr<const CBlock>& block, const CBlockIndex* pindex,\n-                               const std::vector<CTransactionRef>& txn_conflicted)\n+void BaseIndex::BlockConnected(const std::shared_ptr<const CBlock>& block, const CBlockIndex* pindex)\n {\n     if (!m_synced) {\n         return;"
      },
      {
        "sha": "4e86e1f600dba60e9b48b2c9fa4b1031c2b2b458",
        "filename": "src/index/base.h",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cdb893443cc16edf974f099b8485e04b3db1b1d7/src/index/base.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cdb893443cc16edf974f099b8485e04b3db1b1d7/src/index/base.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/index/base.h?ref=cdb893443cc16edf974f099b8485e04b3db1b1d7",
        "patch": "@@ -64,8 +64,7 @@ class BaseIndex : public CValidationInterface\n     bool Commit();\n \n protected:\n-    void BlockConnected(const std::shared_ptr<const CBlock>& block, const CBlockIndex* pindex,\n-                        const std::vector<CTransactionRef>& txn_conflicted) override;\n+    void BlockConnected(const std::shared_ptr<const CBlock>& block, const CBlockIndex* pindex) override;\n \n     void ChainStateFlushed(const CBlockLocator& locator) override;\n "
      },
      {
        "sha": "d16f4e7ccce47bbe1a30b70bb50bab259b27a641",
        "filename": "src/interfaces/chain.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 4,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cdb893443cc16edf974f099b8485e04b3db1b1d7/src/interfaces/chain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cdb893443cc16edf974f099b8485e04b3db1b1d7/src/interfaces/chain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/chain.cpp?ref=cdb893443cc16edf974f099b8485e04b3db1b1d7",
        "patch": "@@ -172,11 +172,9 @@ class NotificationsHandlerImpl : public Handler, CValidationInterface\n     {\n         m_notifications->TransactionRemovedFromMempool(tx);\n     }\n-    void BlockConnected(const std::shared_ptr<const CBlock>& block,\n-        const CBlockIndex* index,\n-        const std::vector<CTransactionRef>& tx_conflicted) override\n+    void BlockConnected(const std::shared_ptr<const CBlock>& block, const CBlockIndex* index) override\n     {\n-        m_notifications->BlockConnected(*block, tx_conflicted, index->nHeight);\n+        m_notifications->BlockConnected(*block, index->nHeight);\n     }\n     void BlockDisconnected(const std::shared_ptr<const CBlock>& block, const CBlockIndex* index) override\n     {"
      },
      {
        "sha": "03a600d5a3bac7aa657c48a4ccb0a360f776ad4d",
        "filename": "src/interfaces/chain.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cdb893443cc16edf974f099b8485e04b3db1b1d7/src/interfaces/chain.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cdb893443cc16edf974f099b8485e04b3db1b1d7/src/interfaces/chain.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/chain.h?ref=cdb893443cc16edf974f099b8485e04b3db1b1d7",
        "patch": "@@ -219,7 +219,7 @@ class Chain\n         virtual ~Notifications() {}\n         virtual void TransactionAddedToMempool(const CTransactionRef& tx) {}\n         virtual void TransactionRemovedFromMempool(const CTransactionRef& ptx) {}\n-        virtual void BlockConnected(const CBlock& block, const std::vector<CTransactionRef>& tx_conflicted, int height) {}\n+        virtual void BlockConnected(const CBlock& block, int height) {}\n         virtual void BlockDisconnected(const CBlock& block, int height) {}\n         virtual void UpdatedBlockTip() {}\n         virtual void ChainStateFlushed(const CBlockLocator& locator) {}"
      },
      {
        "sha": "80361b381d9bc6f77b06e6a26ea1a68a220930d4",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cdb893443cc16edf974f099b8485e04b3db1b1d7/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cdb893443cc16edf974f099b8485e04b3db1b1d7/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=cdb893443cc16edf974f099b8485e04b3db1b1d7",
        "patch": "@@ -1132,7 +1132,7 @@ PeerLogicValidation::PeerLogicValidation(CConnman* connmanIn, BanMan* banman, CS\n  * Evict orphan txn pool entries (EraseOrphanTx) based on a newly connected\n  * block. Also save the time of the last tip update.\n  */\n-void PeerLogicValidation::BlockConnected(const std::shared_ptr<const CBlock>& pblock, const CBlockIndex* pindex, const std::vector<CTransactionRef>& vtxConflicted)\n+void PeerLogicValidation::BlockConnected(const std::shared_ptr<const CBlock>& pblock, const CBlockIndex* pindex)\n {\n     {\n         LOCK(g_cs_orphans);"
      },
      {
        "sha": "908d645f009d2309d9032c69bbcb7fabab95143e",
        "filename": "src/net_processing.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cdb893443cc16edf974f099b8485e04b3db1b1d7/src/net_processing.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cdb893443cc16edf974f099b8485e04b3db1b1d7/src/net_processing.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.h?ref=cdb893443cc16edf974f099b8485e04b3db1b1d7",
        "patch": "@@ -32,7 +32,7 @@ class PeerLogicValidation final : public CValidationInterface, public NetEventsI\n     /**\n      * Overridden from CValidationInterface.\n      */\n-    void BlockConnected(const std::shared_ptr<const CBlock>& pblock, const CBlockIndex* pindexConnected, const std::vector<CTransactionRef>& vtxConflicted) override;\n+    void BlockConnected(const std::shared_ptr<const CBlock>& pblock, const CBlockIndex* pindexConnected) override;\n     void BlockDisconnected(const std::shared_ptr<const CBlock> &block, const CBlockIndex* pindex) override;\n     /**\n      * Overridden from CValidationInterface."
      },
      {
        "sha": "4c72ed1fc0b20565d89e0a48215e1331aed943c2",
        "filename": "src/test/validation_block_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cdb893443cc16edf974f099b8485e04b3db1b1d7/src/test/validation_block_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cdb893443cc16edf974f099b8485e04b3db1b1d7/src/test/validation_block_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/validation_block_tests.cpp?ref=cdb893443cc16edf974f099b8485e04b3db1b1d7",
        "patch": "@@ -42,7 +42,7 @@ struct TestSubscriber : public CValidationInterface {\n         BOOST_CHECK_EQUAL(m_expected_tip, pindexNew->GetBlockHash());\n     }\n \n-    void BlockConnected(const std::shared_ptr<const CBlock>& block, const CBlockIndex* pindex, const std::vector<CTransactionRef>& txnConflicted) override\n+    void BlockConnected(const std::shared_ptr<const CBlock>& block, const CBlockIndex* pindex) override\n     {\n         BOOST_CHECK_EQUAL(m_expected_tip, block->hashPrevBlock);\n         BOOST_CHECK_EQUAL(m_expected_tip, pindex->pprev->GetBlockHash());"
      },
      {
        "sha": "3f6f358092c406d65b2a7a4ab6ace9709832dcce",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cdb893443cc16edf974f099b8485e04b3db1b1d7/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cdb893443cc16edf974f099b8485e04b3db1b1d7/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=cdb893443cc16edf974f099b8485e04b3db1b1d7",
        "patch": "@@ -2881,7 +2881,7 @@ bool CChainState::ActivateBestChain(BlockValidationState &state, const CChainPar\n \n                 for (const PerBlockConnectTrace& trace : connectTrace.GetBlocksConnected()) {\n                     assert(trace.pblock && trace.pindex);\n-                    GetMainSignals().BlockConnected(trace.pblock, trace.pindex, trace.conflictedTxs);\n+                    GetMainSignals().BlockConnected(trace.pblock, trace.pindex);\n                 }\n             } while (!m_chain.Tip() || (starting_tip && CBlockIndexWorkComparator()(m_chain.Tip(), starting_tip)));\n             if (!blocks_connected) return true;"
      },
      {
        "sha": "2e52de09b4ea943439365380a8cbd76edc08c4d5",
        "filename": "src/validationinterface.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cdb893443cc16edf974f099b8485e04b3db1b1d7/src/validationinterface.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cdb893443cc16edf974f099b8485e04b3db1b1d7/src/validationinterface.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validationinterface.cpp?ref=cdb893443cc16edf974f099b8485e04b3db1b1d7",
        "patch": "@@ -33,7 +33,7 @@ struct ValidationInterfaceConnections {\n struct MainSignalsInstance {\n     boost::signals2::signal<void (const CBlockIndex *, const CBlockIndex *, bool fInitialDownload)> UpdatedBlockTip;\n     boost::signals2::signal<void (const CTransactionRef &)> TransactionAddedToMempool;\n-    boost::signals2::signal<void (const std::shared_ptr<const CBlock> &, const CBlockIndex *pindex, const std::vector<CTransactionRef>&)> BlockConnected;\n+    boost::signals2::signal<void (const std::shared_ptr<const CBlock> &, const CBlockIndex *pindex)> BlockConnected;\n     boost::signals2::signal<void (const std::shared_ptr<const CBlock>&, const CBlockIndex* pindex)> BlockDisconnected;\n     boost::signals2::signal<void (const CTransactionRef &)> TransactionRemovedFromMempool;\n     boost::signals2::signal<void (const CBlockLocator &)> ChainStateFlushed;\n@@ -80,7 +80,7 @@ void RegisterValidationInterface(CValidationInterface* pwalletIn) {\n     ValidationInterfaceConnections& conns = g_signals.m_internals->m_connMainSignals[pwalletIn];\n     conns.UpdatedBlockTip = g_signals.m_internals->UpdatedBlockTip.connect(std::bind(&CValidationInterface::UpdatedBlockTip, pwalletIn, std::placeholders::_1, std::placeholders::_2, std::placeholders::_3));\n     conns.TransactionAddedToMempool = g_signals.m_internals->TransactionAddedToMempool.connect(std::bind(&CValidationInterface::TransactionAddedToMempool, pwalletIn, std::placeholders::_1));\n-    conns.BlockConnected = g_signals.m_internals->BlockConnected.connect(std::bind(&CValidationInterface::BlockConnected, pwalletIn, std::placeholders::_1, std::placeholders::_2, std::placeholders::_3));\n+    conns.BlockConnected = g_signals.m_internals->BlockConnected.connect(std::bind(&CValidationInterface::BlockConnected, pwalletIn, std::placeholders::_1, std::placeholders::_2));\n     conns.BlockDisconnected = g_signals.m_internals->BlockDisconnected.connect(std::bind(&CValidationInterface::BlockDisconnected, pwalletIn, std::placeholders::_1, std::placeholders::_2));\n     conns.TransactionRemovedFromMempool = g_signals.m_internals->TransactionRemovedFromMempool.connect(std::bind(&CValidationInterface::TransactionRemovedFromMempool, pwalletIn, std::placeholders::_1));\n     conns.ChainStateFlushed = g_signals.m_internals->ChainStateFlushed.connect(std::bind(&CValidationInterface::ChainStateFlushed, pwalletIn, std::placeholders::_1));\n@@ -164,9 +164,9 @@ void CMainSignals::TransactionRemovedFromMempool(const CTransactionRef &ptx) {\n                           ptx->GetWitnessHash().ToString());\n }\n \n-void CMainSignals::BlockConnected(const std::shared_ptr<const CBlock> &pblock, const CBlockIndex *pindex, const std::shared_ptr<const std::vector<CTransactionRef>>& pvtxConflicted) {\n-    auto event = [pblock, pindex, pvtxConflicted, this] {\n-        m_internals->BlockConnected(pblock, pindex, *pvtxConflicted);\n+void CMainSignals::BlockConnected(const std::shared_ptr<const CBlock> &pblock, const CBlockIndex *pindex) {\n+    auto event = [pblock, pindex, this] {\n+        m_internals->BlockConnected(pblock, pindex);\n     };\n     ENQUEUE_AND_LOG_EVENT(event, \"%s: block hash=%s block height=%d\", __func__,\n                           pblock->GetHash().ToString(),"
      },
      {
        "sha": "57074226354008524d19b3c5e8fd3b59aa9d14dc",
        "filename": "src/validationinterface.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cdb893443cc16edf974f099b8485e04b3db1b1d7/src/validationinterface.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cdb893443cc16edf974f099b8485e04b3db1b1d7/src/validationinterface.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validationinterface.h?ref=cdb893443cc16edf974f099b8485e04b3db1b1d7",
        "patch": "@@ -128,7 +128,7 @@ class CValidationInterface {\n      *\n      * Called on a background thread.\n      */\n-    virtual void BlockConnected(const std::shared_ptr<const CBlock> &block, const CBlockIndex *pindex, const std::vector<CTransactionRef> &txnConflicted) {}\n+    virtual void BlockConnected(const std::shared_ptr<const CBlock> &block, const CBlockIndex *pindex) {}\n     /**\n      * Notifies listeners of a block being disconnected\n      *\n@@ -192,7 +192,7 @@ class CMainSignals {\n     void UpdatedBlockTip(const CBlockIndex *, const CBlockIndex *, bool fInitialDownload);\n     void TransactionAddedToMempool(const CTransactionRef &);\n     void TransactionRemovedFromMempool(const CTransactionRef &);\n-    void BlockConnected(const std::shared_ptr<const CBlock> &, const CBlockIndex *pindex, const std::shared_ptr<const std::vector<CTransactionRef>> &);\n+    void BlockConnected(const std::shared_ptr<const CBlock> &, const CBlockIndex *pindex);\n     void BlockDisconnected(const std::shared_ptr<const CBlock> &, const CBlockIndex* pindex);\n     void ChainStateFlushed(const CBlockLocator &);\n     void BlockChecked(const CBlock&, const BlockValidationState&);"
      },
      {
        "sha": "4b705f4e777370463340aef7d241b7c8c507de38",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cdb893443cc16edf974f099b8485e04b3db1b1d7/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cdb893443cc16edf974f099b8485e04b3db1b1d7/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=cdb893443cc16edf974f099b8485e04b3db1b1d7",
        "patch": "@@ -1110,7 +1110,7 @@ void CWallet::TransactionRemovedFromMempool(const CTransactionRef &ptx) {\n     }\n }\n \n-void CWallet::BlockConnected(const CBlock& block, const std::vector<CTransactionRef>& vtxConflicted, int height)\n+void CWallet::BlockConnected(const CBlock& block, int height)\n {\n     const uint256& block_hash = block.GetHash();\n     auto locked_chain = chain().lock();"
      },
      {
        "sha": "34c3cd38183e2b6f41f79938ea7f0e77ece8ffa0",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cdb893443cc16edf974f099b8485e04b3db1b1d7/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cdb893443cc16edf974f099b8485e04b3db1b1d7/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=cdb893443cc16edf974f099b8485e04b3db1b1d7",
        "patch": "@@ -874,7 +874,7 @@ class CWallet final : public WalletStorage, private interfaces::Chain::Notificat\n     bool AddToWallet(const CWalletTx& wtxIn, bool fFlushOnClose=true);\n     void LoadToWallet(CWalletTx& wtxIn) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n     void TransactionAddedToMempool(const CTransactionRef& tx) override;\n-    void BlockConnected(const CBlock& block, const std::vector<CTransactionRef>& vtxConflicted, int height) override;\n+    void BlockConnected(const CBlock& block, int height) override;\n     void BlockDisconnected(const CBlock& block, int height) override;\n     void UpdatedBlockTip() override;\n     int64_t RescanFromTime(int64_t startTime, const WalletRescanReserver& reserver, bool update);"
      },
      {
        "sha": "d55b106e04d9a291a3733d04a7f92e5bd9ebd865",
        "filename": "src/zmq/zmqnotificationinterface.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cdb893443cc16edf974f099b8485e04b3db1b1d7/src/zmq/zmqnotificationinterface.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cdb893443cc16edf974f099b8485e04b3db1b1d7/src/zmq/zmqnotificationinterface.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqnotificationinterface.cpp?ref=cdb893443cc16edf974f099b8485e04b3db1b1d7",
        "patch": "@@ -177,7 +177,7 @@ void CZMQNotificationInterface::TransactionAddedToMempool(const CTransactionRef&\n     }\n }\n \n-void CZMQNotificationInterface::BlockConnected(const std::shared_ptr<const CBlock>& pblock, const CBlockIndex* pindexConnected, const std::vector<CTransactionRef>& vtxConflicted)\n+void CZMQNotificationInterface::BlockConnected(const std::shared_ptr<const CBlock>& pblock, const CBlockIndex* pindexConnected)\n {\n     for (const CTransactionRef& ptx : pblock->vtx) {\n         // Do a normal notify for each transaction added in the block"
      },
      {
        "sha": "60f3b6148a78f6d77b201a8b503ebe8886bf9338",
        "filename": "src/zmq/zmqnotificationinterface.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cdb893443cc16edf974f099b8485e04b3db1b1d7/src/zmq/zmqnotificationinterface.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cdb893443cc16edf974f099b8485e04b3db1b1d7/src/zmq/zmqnotificationinterface.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqnotificationinterface.h?ref=cdb893443cc16edf974f099b8485e04b3db1b1d7",
        "patch": "@@ -26,7 +26,7 @@ class CZMQNotificationInterface final : public CValidationInterface\n \n     // CValidationInterface\n     void TransactionAddedToMempool(const CTransactionRef& tx) override;\n-    void BlockConnected(const std::shared_ptr<const CBlock>& pblock, const CBlockIndex* pindexConnected, const std::vector<CTransactionRef>& vtxConflicted) override;\n+    void BlockConnected(const std::shared_ptr<const CBlock>& pblock, const CBlockIndex* pindexConnected) override;\n     void BlockDisconnected(const std::shared_ptr<const CBlock>& pblock, const CBlockIndex* pindexDisconnected) override;\n     void UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockIndex *pindexFork, bool fInitialDownload) override;\n "
      }
    ]
  },
  {
    "sha": "5613f9842b4000fed088b8cf7b99674c328d15e1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NjEzZjk4NDJiNDAwMGZlZDA4OGI4Y2Y3Yjk5Njc0YzMyOGQxNWUx",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2019-11-11T15:46:09Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-03-11T22:38:33Z"
      },
      "message": "[validation] Remove conflictedTxs from PerBlockConnectTrace\n\nSince we don't add a vtxConflicted vector to BlockConnected the\nconflictedTxs member of PerBlockConnectTrace is no longer used.",
      "tree": {
        "sha": "a082607b73b76eaf8ef415f906f466777f5eff39",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a082607b73b76eaf8ef415f906f466777f5eff39"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5613f9842b4000fed088b8cf7b99674c328d15e1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5613f9842b4000fed088b8cf7b99674c328d15e1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5613f9842b4000fed088b8cf7b99674c328d15e1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5613f9842b4000fed088b8cf7b99674c328d15e1/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cdb893443cc16edf974f099b8485e04b3db1b1d7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cdb893443cc16edf974f099b8485e04b3db1b1d7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cdb893443cc16edf974f099b8485e04b3db1b1d7"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 1,
      "deletions": 15
    },
    "files": [
      {
        "sha": "c5318293bc540d3225ca12cb81dc84bae3b861fe",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 15,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5613f9842b4000fed088b8cf7b99674c328d15e1/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5613f9842b4000fed088b8cf7b99674c328d15e1/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=5613f9842b4000fed088b8cf7b99674c328d15e1",
        "patch": "@@ -2505,22 +2505,12 @@ static int64_t nTimePostConnect = 0;\n struct PerBlockConnectTrace {\n     CBlockIndex* pindex = nullptr;\n     std::shared_ptr<const CBlock> pblock;\n-    std::shared_ptr<std::vector<CTransactionRef>> conflictedTxs;\n-    PerBlockConnectTrace() : conflictedTxs(std::make_shared<std::vector<CTransactionRef>>()) {}\n+    PerBlockConnectTrace() {}\n };\n /**\n  * Used to track blocks whose transactions were applied to the UTXO state as a\n  * part of a single ActivateBestChainStep call.\n  *\n- * This class also tracks transactions that are removed from the mempool as\n- * conflicts (per block) and can be used to pass all those transactions\n- * through SyncTransaction.\n- *\n- * This class assumes (and asserts) that the conflicted transactions for a given\n- * block are added via mempool callbacks prior to the BlockConnected() associated\n- * with those transactions. If any transactions are marked conflicted, it is\n- * assumed that an associated block will always be added.\n- *\n  * This class is single-use, once you call GetBlocksConnected() you have to throw\n  * it away and make a new one.\n  */\n@@ -2551,16 +2541,12 @@ class ConnectTrace {\n         // one waiting for the transactions from the next block. We pop\n         // the last entry here to make sure the list we return is sane.\n         assert(!blocksConnected.back().pindex);\n-        assert(blocksConnected.back().conflictedTxs->empty());\n         blocksConnected.pop_back();\n         return blocksConnected;\n     }\n \n     void NotifyEntryRemoved(CTransactionRef txRemoved, MemPoolRemovalReason reason) {\n         assert(!blocksConnected.back().pindex);\n-        if (reason == MemPoolRemovalReason::CONFLICT) {\n-            blocksConnected.back().conflictedTxs->emplace_back(std::move(txRemoved));\n-        }\n     }\n };\n "
      }
    ]
  },
  {
    "sha": "969b65f3f527631ede1a31c7855151e5c5d91f8f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5NjliNjVmM2Y1Mjc2MzFlZGUxYTMxYzc4NTUxNTFlNWM1ZDkxZjhm",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2019-11-11T15:50:21Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-03-11T22:38:33Z"
      },
      "message": "[validation] Remove NotifyEntryRemoved callback from ConnectTrace\n\nConnectTrace used to subscribe to the mempool's NotifyEntryRemoved\ncallback to be notified of transactions removed for conflict. Since\nPerBlockConnectTrace no longer tracks conflicted transactions,\nConnectTrace no longer requires these notifications.",
      "tree": {
        "sha": "df43861b428568cfc204524db7ccfe5dbe951be6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/df43861b428568cfc204524db7ccfe5dbe951be6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/969b65f3f527631ede1a31c7855151e5c5d91f8f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/969b65f3f527631ede1a31c7855151e5c5d91f8f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/969b65f3f527631ede1a31c7855151e5c5d91f8f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/969b65f3f527631ede1a31c7855151e5c5d91f8f/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5613f9842b4000fed088b8cf7b99674c328d15e1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5613f9842b4000fed088b8cf7b99674c328d15e1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5613f9842b4000fed088b8cf7b99674c328d15e1"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 1,
      "deletions": 8
    },
    "files": [
      {
        "sha": "1f1585041abae8fce3709262c24f5383f2f2e16a",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 8,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/969b65f3f527631ede1a31c7855151e5c5d91f8f/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/969b65f3f527631ede1a31c7855151e5c5d91f8f/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=969b65f3f527631ede1a31c7855151e5c5d91f8f",
        "patch": "@@ -2518,12 +2518,9 @@ class ConnectTrace {\n private:\n     std::vector<PerBlockConnectTrace> blocksConnected;\n     CTxMemPool &pool;\n-    boost::signals2::scoped_connection m_connNotifyEntryRemoved;\n \n public:\n-    explicit ConnectTrace(CTxMemPool &_pool) : blocksConnected(1), pool(_pool) {\n-        m_connNotifyEntryRemoved = pool.NotifyEntryRemoved.connect(std::bind(&ConnectTrace::NotifyEntryRemoved, this, std::placeholders::_1, std::placeholders::_2));\n-    }\n+    explicit ConnectTrace(CTxMemPool &_pool) : blocksConnected(1), pool(_pool) {}\n \n     void BlockConnected(CBlockIndex* pindex, std::shared_ptr<const CBlock> pblock) {\n         assert(!blocksConnected.back().pindex);\n@@ -2544,10 +2541,6 @@ class ConnectTrace {\n         blocksConnected.pop_back();\n         return blocksConnected;\n     }\n-\n-    void NotifyEntryRemoved(CTransactionRef txRemoved, MemPoolRemovalReason reason) {\n-        assert(!blocksConnected.back().pindex);\n-    }\n };\n \n /**"
      }
    ]
  },
  {
    "sha": "2dd561f36124972d2364f941de9c3417c65f05b6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyZGQ1NjFmMzYxMjQ5NzJkMjM2NGY5NDFkZTljMzQxN2M2NWYwNWI2",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2019-11-15T20:33:27Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-03-11T22:38:33Z"
      },
      "message": "[validation] Remove pool member from ConnectTrace\n\nIt's no longer used for anything.",
      "tree": {
        "sha": "86da7865a05b2717810e76d0659f3b565a0b613b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/86da7865a05b2717810e76d0659f3b565a0b613b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2dd561f36124972d2364f941de9c3417c65f05b6",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2dd561f36124972d2364f941de9c3417c65f05b6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2dd561f36124972d2364f941de9c3417c65f05b6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2dd561f36124972d2364f941de9c3417c65f05b6/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "969b65f3f527631ede1a31c7855151e5c5d91f8f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/969b65f3f527631ede1a31c7855151e5c5d91f8f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/969b65f3f527631ede1a31c7855151e5c5d91f8f"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 2,
      "deletions": 3
    },
    "files": [
      {
        "sha": "6d6ba80564c765b724b92108f332583a5b294e61",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2dd561f36124972d2364f941de9c3417c65f05b6/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2dd561f36124972d2364f941de9c3417c65f05b6/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=2dd561f36124972d2364f941de9c3417c65f05b6",
        "patch": "@@ -2517,10 +2517,9 @@ struct PerBlockConnectTrace {\n class ConnectTrace {\n private:\n     std::vector<PerBlockConnectTrace> blocksConnected;\n-    CTxMemPool &pool;\n \n public:\n-    explicit ConnectTrace(CTxMemPool &_pool) : blocksConnected(1), pool(_pool) {}\n+    explicit ConnectTrace() : blocksConnected(1) {}\n \n     void BlockConnected(CBlockIndex* pindex, std::shared_ptr<const CBlock> pblock) {\n         assert(!blocksConnected.back().pindex);\n@@ -2833,7 +2832,7 @@ bool CChainState::ActivateBestChain(BlockValidationState &state, const CChainPar\n             do {\n                 // We absolutely may not unlock cs_main until we've made forward progress\n                 // (with the exception of shutdown due to hardware issues, low disk space, etc).\n-                ConnectTrace connectTrace(mempool); // Destructed before cs_main is unlocked\n+                ConnectTrace connectTrace; // Destructed before cs_main is unlocked\n \n                 if (pindexMostWork == nullptr) {\n                     pindexMostWork = FindMostWorkChain();"
      }
    ]
  },
  {
    "sha": "e57980b4738c10344baf136de3e050a3cb958ca5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplNTc5ODBiNDczOGMxMDM0NGJhZjEzNmRlM2UwNTBhM2NiOTU4Y2E1",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2019-11-11T15:53:03Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-03-11T22:38:33Z"
      },
      "message": "[mempool] Remove NotifyEntryAdded and NotifyEntryRemoved callbacks\n\nNotifyEntryAdded never had any subscribers so can be removed.\n\nSince ConnectTrace no longer subscribes to NotifyEntryRemoved, there are\nnow no subscribers.\n\nThe CValidationInterface TransactionAddedToMempool and\nTransactionRemovedFromMempool methods can now provide this\nfunctionality. There's no need for a special notifications framework for\nthe mempool.",
      "tree": {
        "sha": "82c05099fba7de2fb55d62147612b2ca6ddcb3c1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/82c05099fba7de2fb55d62147612b2ca6ddcb3c1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e57980b4738c10344baf136de3e050a3cb958ca5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e57980b4738c10344baf136de3e050a3cb958ca5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e57980b4738c10344baf136de3e050a3cb958ca5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e57980b4738c10344baf136de3e050a3cb958ca5/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2dd561f36124972d2364f941de9c3417c65f05b6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2dd561f36124972d2364f941de9c3417c65f05b6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2dd561f36124972d2364f941de9c3417c65f05b6"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 4,
      "deletions": 8
    },
    "files": [
      {
        "sha": "bcc3d83af8feda731a5cf2cbd27338dcc5f796d4",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e57980b4738c10344baf136de3e050a3cb958ca5/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e57980b4738c10344baf136de3e050a3cb958ca5/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=e57980b4738c10344baf136de3e050a3cb958ca5",
        "patch": "@@ -74,6 +74,7 @@\n #include <boost/algorithm/string/classification.hpp>\n #include <boost/algorithm/string/replace.hpp>\n #include <boost/algorithm/string/split.hpp>\n+#include <boost/signals2/signal.hpp>\n #include <boost/thread.hpp>\n \n #if ENABLE_ZMQ"
      },
      {
        "sha": "b720a63017929c6c202cfd610cb395c4dd2cd848",
        "filename": "src/interfaces/node.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e57980b4738c10344baf136de3e050a3cb958ca5/src/interfaces/node.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e57980b4738c10344baf136de3e050a3cb958ca5/src/interfaces/node.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/node.cpp?ref=e57980b4738c10344baf136de3e050a3cb958ca5",
        "patch": "@@ -37,6 +37,8 @@\n \n #include <univalue.h>\n \n+#include <boost/signals2/signal.hpp>\n+\n class CWallet;\n fs::path GetWalletDir();\n std::vector<fs::path> ListWalletDir();"
      },
      {
        "sha": "47b0d39ea4cfca18cbfcadf6dd55d845a1402c9f",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 4,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e57980b4738c10344baf136de3e050a3cb958ca5/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e57980b4738c10344baf136de3e050a3cb958ca5/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=e57980b4738c10344baf136de3e050a3cb958ca5",
        "patch": "@@ -355,7 +355,6 @@ void CTxMemPool::AddTransactionsUpdated(unsigned int n)\n \n void CTxMemPool::addUnchecked(const CTxMemPoolEntry &entry, setEntries &setAncestors, bool validFeeEstimate)\n {\n-    NotifyEntryAdded(entry.GetSharedTx());\n     // Add to memory pool without checking anything.\n     // Used by AcceptToMemoryPool(), which DOES do\n     // all the appropriate checks.\n@@ -406,14 +405,12 @@ void CTxMemPool::addUnchecked(const CTxMemPoolEntry &entry, setEntries &setAnces\n \n void CTxMemPool::removeUnchecked(txiter it, MemPoolRemovalReason reason)\n {\n-    CTransactionRef ptx = it->GetSharedTx();\n-    NotifyEntryRemoved(ptx, reason);\n     if (reason != MemPoolRemovalReason::BLOCK) {\n         // Notify clients that a transaction has been removed from the mempool\n         // for any reason except being included in a block. Clients interested\n         // in transactions included in blocks can subscribe to the BlockConnected\n         // notification.\n-        GetMainSignals().TransactionRemovedFromMempool(ptx);\n+        GetMainSignals().TransactionRemovedFromMempool(it->GetSharedTx());\n     }\n \n     const uint256 hash = it->GetTx().GetHash();"
      },
      {
        "sha": "38a4667b3176e14eabe1d0e6b2a0a25b3fe0b512",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e57980b4738c10344baf136de3e050a3cb958ca5/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e57980b4738c10344baf136de3e050a3cb958ca5/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=e57980b4738c10344baf136de3e050a3cb958ca5",
        "patch": "@@ -27,7 +27,6 @@\n #include <boost/multi_index/hashed_index.hpp>\n #include <boost/multi_index/ordered_index.hpp>\n #include <boost/multi_index/sequenced_index.hpp>\n-#include <boost/signals2/signal.hpp>\n \n class CBlockIndex;\n extern RecursiveMutex cs_main;\n@@ -699,9 +698,6 @@ class CTxMemPool\n \n     size_t DynamicMemoryUsage() const;\n \n-    boost::signals2::signal<void (CTransactionRef)> NotifyEntryAdded;\n-    boost::signals2::signal<void (CTransactionRef, MemPoolRemovalReason)> NotifyEntryRemoved;\n-\n private:\n     /** UpdateForDescendants is used by UpdateTransactionsFromBlock to update\n      *  the descendants for a single transaction that has been added to the"
      }
    ]
  }
]