gavinandresen,2011-03-28T21:47:20Z,"FYI:  stress-testing bitcoind with this patch using a testnet-in-a-box I managed to hang one RPC server thread.  What I done did:\n\nIn one shell window:\nfor i in 1 2 3 4 5 6 7 8 9 10 11; do ~/src/integration_btc/bitcoind -datadir=/Users/gavin/testnet-box/2 sendfrom """" $(~/src/integration_btc/bitcoind -datadir=/Users/gavin/testnet-box/1 getaccountaddress """")  $i; done\n\nAnd in the other:\nfor i ",https://github.com/bitcoin/bitcoin/pull/136#issuecomment-928245,928245,
jgarzik,2011-03-28T22:05:43Z,Your hang is verified to be a CRITICAL_BLOCK deadlock?\n,https://github.com/bitcoin/bitcoin/pull/136#issuecomment-928313,928313,
gavinandresen,2011-03-28T22:58:26Z,"Update:  yeah, definitely CRITICAL_BLOCK deadlock.  Reproduced  with a hacked CCritcalSection that spits out its name as it waits/locks/unlocks, and hung process is waiting on sequence cs_main / cs_mapWallet, and I see lots of the other order.\n",https://github.com/bitcoin/bitcoin/pull/136#issuecomment-928505,928505,
gavinandresen,2011-03-28T23:34:46Z,Definitely missed a few-- see https://gist.github.com/891544\n,https://github.com/bitcoin/bitcoin/pull/136#issuecomment-928637,928637,
jgarzik,2011-03-31T19:45:29Z,"IMO, cs_main should always be acquired before cs_mapWallet, as it is the ""bigger"" lock.  I'll look at how difficult it is to change the code to follow that ordering.\n",https://github.com/bitcoin/bitcoin/pull/136#issuecomment-942713,942713,
jgarzik,2011-04-05T02:28:11Z,"closing, superceded.\n",https://github.com/bitcoin/bitcoin/pull/136#issuecomment-957134,957134,
