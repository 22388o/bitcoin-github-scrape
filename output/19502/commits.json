[
  {
    "sha": "69f59af54d15ee9800d5df86bcdb0e962c71e7c3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2OWY1OWFmNTRkMTVlZTk4MDBkNWRmODZiY2RiMGU5NjJjNzFlN2Mz",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2020-07-13T03:01:57Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2020-11-06T04:17:54Z"
      },
      "message": "Bugfix: Wallet: Soft-fail exceptions within ListWalletDir file checks",
      "tree": {
        "sha": "ccd75690a44c64790c4d1102ce85472701835f1d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ccd75690a44c64790c4d1102ce85472701835f1d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/69f59af54d15ee9800d5df86bcdb0e962c71e7c3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/69f59af54d15ee9800d5df86bcdb0e962c71e7c3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/69f59af54d15ee9800d5df86bcdb0e962c71e7c3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/69f59af54d15ee9800d5df86bcdb0e962c71e7c3/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f5cdc290d5a41895d2bbaf474c3a951e5141b8a9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f5cdc290d5a41895d2bbaf474c3a951e5141b8a9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f5cdc290d5a41895d2bbaf474c3a951e5141b8a9"
      }
    ],
    "stats": {
      "total": 39,
      "additions": 22,
      "deletions": 17
    },
    "files": [
      {
        "sha": "6563c451348d6b9285cb5314cb08d69c9bb683ea",
        "filename": "src/wallet/walletutil.cpp",
        "status": "modified",
        "additions": 22,
        "deletions": 17,
        "changes": 39,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/69f59af54d15ee9800d5df86bcdb0e962c71e7c3/src/wallet/walletutil.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/69f59af54d15ee9800d5df86bcdb0e962c71e7c3/src/wallet/walletutil.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletutil.cpp?ref=69f59af54d15ee9800d5df86bcdb0e962c71e7c3",
        "patch": "@@ -49,26 +49,31 @@ std::vector<fs::path> ListWalletDir()\n             continue;\n         }\n \n-        // Get wallet path relative to walletdir by removing walletdir from the wallet path.\n-        // This can be replaced by boost::filesystem::lexically_relative once boost is bumped to 1.60.\n-        const fs::path path = it->path().string().substr(offset);\n+        try {\n+            // Get wallet path relative to walletdir by removing walletdir from the wallet path.\n+            // This can be replaced by boost::filesystem::lexically_relative once boost is bumped to 1.60.\n+            const fs::path path = it->path().string().substr(offset);\n \n-        if (it->status().type() == fs::directory_file &&\n-            (ExistsBerkeleyDatabase(it->path()) || ExistsSQLiteDatabase(it->path()))) {\n-            // Found a directory which contains wallet.dat btree file, add it as a wallet.\n-            paths.emplace_back(path);\n-        } else if (it.level() == 0 && it->symlink_status().type() == fs::regular_file && ExistsBerkeleyDatabase(it->path())) {\n-            if (it->path().filename() == \"wallet.dat\") {\n-                // Found top-level wallet.dat btree file, add top level directory \"\"\n-                // as a wallet.\n-                paths.emplace_back();\n-            } else {\n-                // Found top-level btree file not called wallet.dat. Current bitcoin\n-                // software will never create these files but will allow them to be\n-                // opened in a shared database environment for backwards compatibility.\n-                // Add it to the list of available wallets.\n+            if (it->status().type() == fs::directory_file &&\n+                (ExistsBerkeleyDatabase(it->path()) || ExistsSQLiteDatabase(it->path()))) {\n+                // Found a directory which contains wallet.dat btree file, add it as a wallet.\n                 paths.emplace_back(path);\n+            } else if (it.level() == 0 && it->symlink_status().type() == fs::regular_file && ExistsBerkeleyDatabase(it->path())) {\n+                if (it->path().filename() == \"wallet.dat\") {\n+                    // Found top-level wallet.dat btree file, add top level directory \"\"\n+                    // as a wallet.\n+                    paths.emplace_back();\n+                } else {\n+                    // Found top-level btree file not called wallet.dat. Current bitcoin\n+                    // software will never create these files but will allow them to be\n+                    // opened in a shared database environment for backwards compatibility.\n+                    // Add it to the list of available wallets.\n+                    paths.emplace_back(path);\n+                }\n             }\n+        } catch (const std::exception& e) {\n+            LogPrintf(\"%s: Error scanning %s: %s\\n\", __func__, it->path().string(), e.what());\n+            it.no_push();\n         }\n     }\n "
      }
    ]
  },
  {
    "sha": "24d2d3341d07509ad3f37bb6f130446ad20ac807",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyNGQyZDMzNDFkMDc1MDlhZDNmMzdiYjZmMTMwNDQ2YWQyMGFjODA3",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2020-07-13T03:02:26Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2020-11-06T04:35:33Z"
      },
      "message": "QA: wallet_multiwallet: Check that recursive symlink directory and wallet.dat loops are ignored",
      "tree": {
        "sha": "ea56d2f4b33bb67ad2b1946e76256468d859501f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ea56d2f4b33bb67ad2b1946e76256468d859501f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/24d2d3341d07509ad3f37bb6f130446ad20ac807",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/24d2d3341d07509ad3f37bb6f130446ad20ac807",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/24d2d3341d07509ad3f37bb6f130446ad20ac807",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/24d2d3341d07509ad3f37bb6f130446ad20ac807/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "69f59af54d15ee9800d5df86bcdb0e962c71e7c3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/69f59af54d15ee9800d5df86bcdb0e962c71e7c3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/69f59af54d15ee9800d5df86bcdb0e962c71e7c3"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 16,
      "deletions": 1
    },
    "files": [
      {
        "sha": "cf55b28afb094ce79805136071236a1624f4fb7b",
        "filename": "test/functional/wallet_multiwallet.py",
        "status": "modified",
        "additions": 16,
        "deletions": 1,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/24d2d3341d07509ad3f37bb6f130446ad20ac807/test/functional/wallet_multiwallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/24d2d3341d07509ad3f37bb6f130446ad20ac807/test/functional/wallet_multiwallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_multiwallet.py?ref=24d2d3341d07509ad3f37bb6f130446ad20ac807",
        "patch": "@@ -10,6 +10,7 @@\n from threading import Thread\n import os\n import shutil\n+import stat\n import time\n \n from test_framework.authproxy import JSONRPCException\n@@ -78,6 +79,11 @@ def wallet_file(name):\n         os.mkdir(wallet_dir('w7'))\n         os.symlink('w7', wallet_dir('w7_symlink'))\n \n+        os.symlink('..', wallet_dir('recursive_dir_symlink'))\n+\n+        os.mkdir(wallet_dir('self_walletdat_symlink'))\n+        os.symlink('wallet.dat', wallet_dir('self_walletdat_symlink/wallet.dat'))\n+\n         # rename wallet.dat to make sure plain wallet file paths (as opposed to\n         # directory paths) can be loaded\n         # create another dummy wallet for use in testing backups later\n@@ -117,7 +123,16 @@ def wallet_file(name):\n             self.nodes[0].createwallet(wallet_name)\n         for wallet_name in to_load:\n             self.nodes[0].loadwallet(wallet_name)\n-        assert_equal(sorted(map(lambda w: w['name'], self.nodes[0].listwalletdir()['wallets'])), sorted(in_wallet_dir))\n+\n+        os.mkdir(wallet_dir('no_access'))\n+        os.chmod(wallet_dir('no_access'), 0)\n+        try:\n+            with self.nodes[0].assert_debug_log(expected_msgs=['Too many levels of symbolic links', 'Error scanning']):\n+                walletlist = self.nodes[0].listwalletdir()['wallets']\n+        finally:\n+            # Need to ensure access is restored for cleanup\n+            os.chmod(wallet_dir('no_access'), stat.S_IRUSR | stat.S_IWUSR | stat.S_IXUSR)\n+        assert_equal(sorted(map(lambda w: w['name'], walletlist)), sorted(in_wallet_dir))\n \n         assert_equal(set(node.listwallets()), set(wallet_names))\n "
      }
    ]
  }
]