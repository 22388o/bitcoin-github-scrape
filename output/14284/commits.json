[
  {
    "sha": "428823c2cc487412b6448222bdb0d5912450253a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0Mjg4MjNjMmNjNDg3NDEyYjY0NDgyMjJiZGIwZDU5MTI0NTAyNTNh",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2016-09-16T14:45:36Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2018-09-21T13:57:47Z"
      },
      "message": "[PoC] Add wallet inspection and modification tool \"bitcoin-wallet-tool\"",
      "tree": {
        "sha": "7f79e2fd1433b522d628574cf1fc339cb0f95c09",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7f79e2fd1433b522d628574cf1fc339cb0f95c09"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/428823c2cc487412b6448222bdb0d5912450253a",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEZzVyFg4J13cFQnFjzGytZYJ/qnkFAluk+NsACgkQzGytZYJ/\nqnnPAQ//T7gM3DNObTmnFe0xOHicUs6aNp/wuEltaM6fGS+R2aXxLytfCHTNDa0s\nP+wLuYYAQ8LFpc2mM1ggNvy/c/cYiTXMnhDnjCMcOHjJ0vm/CMF7LaW5Yq0BG9qj\npJTZPLEtEq60v8ciAKrbBTtmHJSWgjUrmf0hMDGDK4Ww4d9+y1ntDr2LBNU6TvDf\n5dKkQ5Grd3d6Q5JU8vj3IyQNRY9WN66HR0bIuC2R/FLeg06N4GRWw7IsOn5NWA6f\nSjvvlTyk1zeeMvfQnvL5SAvA56HuY1ACqTdaMAYvVAw3lBZQYCzs8QFLNZoqeXMG\nLB7KNBNkaRwCesljhYvMdk0xGJh0e8iidw59qXK3Zyt1/IQwh/PGo3l7YkJTMeui\nxrwxg1NgeDeC2Ue2OrENvt7QoVBzVCso2w4I3Rgxiy8rNroTVsDOgZbg0TPS+9fq\nCquvuwLTjXyzovAbZEAm2Dhb9ak63g5WN4UtQtFwCjPA3pOn0JG2b2L1KUEaBMIj\nkgD0YBxJuq+GT1EHSKDts5wQVsYMEzY/kHHKOprLc3OXtcjcao/8Lho/9081kuIU\nYyMmgj6QMZVpJxj1NKyZlCCXILGQJwfvsn/sp0xrw+iYjvN/v4AGabvZCquyy7R+\nGAgoXjWyUuDWN0sohuqfFYf7nmdEbXgDMhxQDI7/41HYzZWZkno=\n=lvpI\n-----END PGP SIGNATURE-----",
        "payload": "tree 7f79e2fd1433b522d628574cf1fc339cb0f95c09\nparent 2796c6e5ec9055545e987023b04eb5ebe64d5320\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1474037136 +0200\ncommitter John Newbery <john@johnnewbery.com> 1537538267 -0400\n\n[PoC] Add wallet inspection and modification tool \"bitcoin-wallet-tool\"\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/428823c2cc487412b6448222bdb0d5912450253a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/428823c2cc487412b6448222bdb0d5912450253a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/428823c2cc487412b6448222bdb0d5912450253a/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2796c6e5ec9055545e987023b04eb5ebe64d5320",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2796c6e5ec9055545e987023b04eb5ebe64d5320",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2796c6e5ec9055545e987023b04eb5ebe64d5320"
      }
    ],
    "stats": {
      "total": 366,
      "additions": 356,
      "deletions": 10
    },
    "files": [
      {
        "sha": "d09656427513d49d26ad846881347db17b01e1ec",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/428823c2cc487412b6448222bdb0d5912450253a/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/428823c2cc487412b6448222bdb0d5912450253a/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=428823c2cc487412b6448222bdb0d5912450253a",
        "patch": "@@ -18,6 +18,7 @@ BITCOIN_DAEMON_NAME=bitcoind\n BITCOIN_GUI_NAME=bitcoin-qt\n BITCOIN_CLI_NAME=bitcoin-cli\n BITCOIN_TX_NAME=bitcoin-tx\n+BITCOIN_WALLET_TOOL_NAME=bitcoin-wallet-tool\n \n dnl Unless the user specified ARFLAGS, force it to be cr\n AC_ARG_VAR(ARFLAGS, [Flags for the archiver, defaults to <cr> if not set])\n@@ -402,7 +403,7 @@ CPPFLAGS=\"$CPPFLAGS -DHAVE_BUILD_INFO -D__STDC_FORMAT_MACROS\"\n \n AC_ARG_WITH([utils],\n   [AS_HELP_STRING([--with-utils],\n-  [build bitcoin-cli bitcoin-tx (default=yes)])],\n+  [build bitcoin-cli bitcoin-tx bitcoin-wallet-tool (default=yes)])],\n   [build_bitcoin_utils=$withval],\n   [build_bitcoin_utils=yes])\n \n@@ -1214,7 +1215,7 @@ AC_MSG_CHECKING([whether to build bitcoind])\n AM_CONDITIONAL([BUILD_BITCOIND], [test x$build_bitcoind = xyes])\n AC_MSG_RESULT($build_bitcoind)\n \n-AC_MSG_CHECKING([whether to build utils (bitcoin-cli bitcoin-tx)])\n+AC_MSG_CHECKING([whether to build utils (bitcoin-cli bitcoin-tx bitcoin-wallet-tool)])\n AM_CONDITIONAL([BUILD_BITCOIN_UTILS], [test x$build_bitcoin_utils = xyes])\n AC_MSG_RESULT($build_bitcoin_utils)\n \n@@ -1387,6 +1388,7 @@ AC_SUBST(BITCOIN_DAEMON_NAME)\n AC_SUBST(BITCOIN_GUI_NAME)\n AC_SUBST(BITCOIN_CLI_NAME)\n AC_SUBST(BITCOIN_TX_NAME)\n+AC_SUBST(BITCOIN_WALLET_TOOL_NAME)\n \n AC_SUBST(RELDFLAGS)\n AC_SUBST(DEBUG_CPPFLAGS)"
      },
      {
        "sha": "41cd066fa0f9c83186b0a3add17bd1f571e8cffd",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 40,
        "deletions": 0,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/428823c2cc487412b6448222bdb0d5912450253a/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/428823c2cc487412b6448222bdb0d5912450253a/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=428823c2cc487412b6448222bdb0d5912450253a",
        "patch": "@@ -41,6 +41,7 @@ LIBBITCOINCONSENSUS=libbitcoinconsensus.la\n endif\n if ENABLE_WALLET\n LIBBITCOIN_WALLET=libbitcoin_wallet.a\n+LIBBITCOIN_WALLET_TOOL=libbitcoin_wallet_tool.a\n endif\n \n LIBBITCOIN_CRYPTO= $(LIBBITCOIN_CRYPTO_BASE)\n@@ -70,6 +71,7 @@ EXTRA_LIBRARIES += \\\n   $(LIBBITCOIN_SERVER) \\\n   $(LIBBITCOIN_CLI) \\\n   $(LIBBITCOIN_WALLET) \\\n+  $(LIBBITCOIN_WALLET_TOOL) \\\n   $(LIBBITCOIN_ZMQ)\n \n lib_LTLIBRARIES = $(LIBBITCOINCONSENSUS)\n@@ -85,6 +87,9 @@ endif\n \n if BUILD_BITCOIN_UTILS\n   bin_PROGRAMS += bitcoin-cli bitcoin-tx\n+if ENABLE_WALLET\n+  bin_PROGRAMS += bitcoin-wallet-tool\n+endif\n endif\n \n .PHONY: FORCE check-symbols check-security\n@@ -196,6 +201,7 @@ BITCOIN_CORE_H = \\\n   wallet/rpcwallet.h \\\n   wallet/wallet.h \\\n   wallet/walletdb.h \\\n+  wallet/wallettool.h \\\n   wallet/walletutil.h \\\n   wallet/coinselection.h \\\n   warnings.h \\\n@@ -297,6 +303,12 @@ libbitcoin_wallet_a_SOURCES = \\\n   wallet/coinselection.cpp \\\n   $(BITCOIN_CORE_H)\n \n+libbitcoin_wallet_tool_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n+libbitcoin_wallet_tool_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+libbitcoin_wallet_tool_a_SOURCES = \\\n+  wallet/wallettool.cpp \\\n+  $(BITCOIN_CORE_H)\n+\n # crypto primitives library\n crypto_libbitcoin_crypto_base_a_CPPFLAGS = $(AM_CPPFLAGS)\n crypto_libbitcoin_crypto_base_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n@@ -509,6 +521,34 @@ bitcoin_tx_LDADD = \\\n bitcoin_tx_LDADD += $(BOOST_LIBS) $(CRYPTO_LIBS)\n #\n \n+# bitcoin-wallet-tool binary #\n+bitcoin_wallet_tool_SOURCES = bitcoin-wallet-tool.cpp\n+bitcoin_wallet_tool_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n+bitcoin_wallet_tool_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+bitcoin_wallet_tool_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+\n+if TARGET_WINDOWS\n+bitcoin_wallet_tool_SOURCES += bitcoin-wallet-tool-res.rc\n+endif\n+\n+bitcoin_wallet_tool_LDADD = \\\n+  $(LIBBITCOIN_WALLET_TOOL) \\\n+  $(LIBBITCOIN_WALLET) \\\n+  $(LIBBITCOIN_SERVER) \\\n+  $(LIBBITCOIN_COMMON) \\\n+  $(LIBBITCOIN_CONSENSUS) \\\n+  $(LIBBITCOIN_UTIL) \\\n+  $(LIBBITCOIN_CRYPTO) \\\n+  $(LIBUNIVALUE) \\\n+  $(LIBBITCOIN_ZMQ) \\\n+  $(LIBLEVELDB) \\\n+  $(LIBLEVELDB_SSE42) \\\n+  $(LIBMEMENV) \\\n+  $(LIBSECP256K1)\n+\n+bitcoin_wallet_tool_LDADD += $(BOOST_LIBS) $(BDB_LIBS) $(CRYPTO_LIBS)\n+#\n+\n # bitcoinconsensus library #\n if BUILD_BITCOIN_LIBS\n include_HEADERS = script/bitcoinconsensus.h"
      },
      {
        "sha": "59079376fc4672ec4dbb65666e1bfac5da290cff",
        "filename": "src/bitcoin-wallet-tool-res.rc",
        "status": "added",
        "additions": 35,
        "deletions": 0,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/428823c2cc487412b6448222bdb0d5912450253a/src/bitcoin-wallet-tool-res.rc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/428823c2cc487412b6448222bdb0d5912450253a/src/bitcoin-wallet-tool-res.rc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-wallet-tool-res.rc?ref=428823c2cc487412b6448222bdb0d5912450253a",
        "patch": "@@ -0,0 +1,35 @@\n+#include <windows.h>             // needed for VERSIONINFO\n+#include \"clientversion.h\"       // holds the needed client version information\n+\n+#define VER_PRODUCTVERSION     CLIENT_VERSION_MAJOR,CLIENT_VERSION_MINOR,CLIENT_VERSION_REVISION,CLIENT_VERSION_BUILD\n+#define VER_PRODUCTVERSION_STR STRINGIZE(CLIENT_VERSION_MAJOR) \".\" STRINGIZE(CLIENT_VERSION_MINOR) \".\" STRINGIZE(CLIENT_VERSION_REVISION) \".\" STRINGIZE(CLIENT_VERSION_BUILD)\n+#define VER_FILEVERSION        VER_PRODUCTVERSION\n+#define VER_FILEVERSION_STR    VER_PRODUCTVERSION_STR\n+\n+VS_VERSION_INFO VERSIONINFO\n+FILEVERSION     VER_FILEVERSION\n+PRODUCTVERSION  VER_PRODUCTVERSION\n+FILEOS          VOS_NT_WINDOWS32\n+FILETYPE        VFT_APP\n+BEGIN\n+    BLOCK \"StringFileInfo\"\n+    BEGIN\n+        BLOCK \"040904E4\" // U.S. English - multilingual (hex)\n+        BEGIN\n+            VALUE \"CompanyName\",        \"Bitcoin\"\n+            VALUE \"FileDescription\",    \"bitcoin-wallet-tool (CLI tool for \" PACKAGE_NAME \" wallets)\"\n+            VALUE \"FileVersion\",        VER_FILEVERSION_STR\n+            VALUE \"InternalName\",       \"bitcoin-wallet-tool\"\n+            VALUE \"LegalCopyright\",     COPYRIGHT_STR\n+            VALUE \"LegalTrademarks1\",   \"Distributed under the MIT software license, see the accompanying file COPYING or http://www.opensource.org/licenses/mit-license.php.\"\n+            VALUE \"OriginalFilename\",   \"bitcoin-wallet-tool.exe\"\n+            VALUE \"ProductName\",        \"bitcoin-wallet-tool\"\n+            VALUE \"ProductVersion\",     VER_PRODUCTVERSION_STR\n+        END\n+    END\n+\n+    BLOCK \"VarFileInfo\"\n+    BEGIN\n+        VALUE \"Translation\", 0x0, 1252 // language neutral - multilingual (decimal)\n+    END\n+END"
      },
      {
        "sha": "e82c0b36df82d53ad48504c064a11be3775f9e9a",
        "filename": "src/bitcoin-wallet-tool.cpp",
        "status": "added",
        "additions": 103,
        "deletions": 0,
        "changes": 103,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/428823c2cc487412b6448222bdb0d5912450253a/src/bitcoin-wallet-tool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/428823c2cc487412b6448222bdb0d5912450253a/src/bitcoin-wallet-tool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-wallet-tool.cpp?ref=428823c2cc487412b6448222bdb0d5912450253a",
        "patch": "@@ -0,0 +1,103 @@\n+// Copyright (c) 2016-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <chainparams.h>\n+#include <chainparamsbase.h>\n+#include <consensus/consensus.h>\n+#include <logging.h>\n+#include <util.h>\n+#include <utilstrencodings.h>\n+#include <wallet/wallettool.h>\n+\n+#include <stdio.h>\n+\n+const std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n+\n+static void SetupWalletToolArgs()\n+{\n+    gArgs.AddArg(\"-?\", \"This help message\", false, OptionsCategory::OPTIONS);\n+    gArgs.AddArg(\"-name=<wallet-name>\", \"Specify wallet name\", false, OptionsCategory::OPTIONS);\n+\n+    gArgs.AddArg(\"info\", \"Get wallet info\", false, OptionsCategory::COMMANDS);\n+    gArgs.AddArg(\"create\", \"Create new wallet file\", false, OptionsCategory::COMMANDS);\n+    gArgs.AddArg(\"salvage\", \"Recover readable keypairs\", false, OptionsCategory::COMMANDS);\n+    gArgs.AddArg(\"zaptxs\", \"Remove all transactions including metadata (will keep keys)\", false, OptionsCategory::COMMANDS);\n+\n+    // Hidden\n+    gArgs.AddArg(\"-h\", \"\", false, OptionsCategory::HIDDEN);\n+    gArgs.AddArg(\"-help\", \"\", false, OptionsCategory::HIDDEN);\n+}\n+\n+static bool WalletAppInit(int argc, char* argv[])\n+{\n+    SetupWalletToolArgs();\n+    std::string error;\n+    if (!gArgs.ParseParameters(argc, argv, error)) {\n+        fprintf(stderr, \"Error parsing command line arguments: %s\\n\", error.c_str());\n+        return false;\n+    }\n+    if (argc < 2 || HelpRequested(gArgs)) {\n+        std::string usage = strprintf(_(\"%s wallet-tool version\"), PACKAGE_NAME) + \" \" + FormatFullVersion() + \"\\n\\n\" +\n+                                      _(\"Usage:\") + \"\\n\" +\n+                                     \"  bitcoin-wallet-tool [options] <command>\\n\\n\" +\n+                                     gArgs.GetHelpMessage();\n+\n+        fprintf(stdout, \"%s\", usage.c_str());\n+        return false;\n+    }\n+\n+    // check for printtoconsole, allow -debug\n+    g_logger->m_print_to_console = gArgs.GetBoolArg(\"-printtoconsole\", gArgs.GetBoolArg(\"-debug\", false));\n+\n+    // Check for -testnet or -regtest parameter (Params() calls are only valid after this clause)\n+    try {\n+        SelectParams(gArgs.GetChainName());\n+    } catch (const std::exception& e) {\n+        fprintf(stderr, \"Error: %s\\n\", e.what());\n+        return false;\n+    }\n+\n+    return true;\n+}\n+\n+int main(int argc, char* argv[])\n+{\n+    SetupEnvironment();\n+    RandomInit();\n+    try {\n+        if (!WalletAppInit(argc, argv)) return EXIT_FAILURE;\n+    } catch (const std::exception& e) {\n+        PrintExceptionContinue(&e, \"WalletAppInit()\");\n+        return EXIT_FAILURE;\n+    } catch (...) {\n+        PrintExceptionContinue(nullptr, \"WalletAppInit()\");\n+        return EXIT_FAILURE;\n+    }\n+\n+    while (argc > 1 && IsSwitchChar(argv[1][0])) {\n+        argc--;\n+        argv++;\n+    }\n+    std::vector<std::string> args = std::vector<std::string>(&argv[1], &argv[argc]);\n+    std::string method = args[0];\n+\n+    // A name must be provided when creating a file\n+    if (method == \"create\" && !gArgs.IsArgSet(\"-name\")) {\n+        fprintf(stderr, \"Wallet name must be provided when creating a new wallet.\\n\");\n+        return EXIT_FAILURE;\n+    }\n+\n+    std::string name = gArgs.GetArg(\"-name\", \"\");\n+\n+    ECCVerifyHandle globalVerifyHandle;\n+    ECC_Start();\n+    if (!WalletTool::executeWalletToolFunc(method, name))\n+        return EXIT_FAILURE;\n+    ECC_Stop();\n+    return EXIT_SUCCESS;\n+}"
      },
      {
        "sha": "a4dc1669e5888af3aaa95d0ec93b93cd0bae0d28",
        "filename": "src/wallet/crypter.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/428823c2cc487412b6448222bdb0d5912450253a/src/wallet/crypter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/428823c2cc487412b6448222bdb0d5912450253a/src/wallet/crypter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/crypter.cpp?ref=428823c2cc487412b6448222bdb0d5912450253a",
        "patch": "@@ -175,7 +175,7 @@ bool CCryptoKeyStore::Lock()\n     return true;\n }\n \n-bool CCryptoKeyStore::Unlock(const CKeyingMaterial& vMasterKeyIn)\n+bool CCryptoKeyStore::Unlock(const CKeyingMaterial& vMasterKeyIn, bool accept_no_keys)\n {\n     {\n         LOCK(cs_KeyStore);\n@@ -204,7 +204,7 @@ bool CCryptoKeyStore::Unlock(const CKeyingMaterial& vMasterKeyIn)\n             LogPrintf(\"The wallet is probably corrupted: Some keys decrypt but not all.\\n\");\n             assert(false);\n         }\n-        if (keyFail || !keyPass)\n+        if (keyFail || (!keyPass && !accept_no_keys))\n             return false;\n         vMasterKey = vMasterKeyIn;\n         fDecryptionThoroughlyChecked = true;"
      },
      {
        "sha": "8e195ca8fa07d1bdecf9460849dc1f17a6cf6465",
        "filename": "src/wallet/crypter.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/428823c2cc487412b6448222bdb0d5912450253a/src/wallet/crypter.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/428823c2cc487412b6448222bdb0d5912450253a/src/wallet/crypter.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/crypter.h?ref=428823c2cc487412b6448222bdb0d5912450253a",
        "patch": "@@ -133,7 +133,7 @@ class CCryptoKeyStore : public CBasicKeyStore\n     //! will encrypt previously unencrypted keys\n     bool EncryptKeys(CKeyingMaterial& vMasterKeyIn);\n \n-    bool Unlock(const CKeyingMaterial& vMasterKeyIn);\n+    bool Unlock(const CKeyingMaterial& vMasterKeyIn, bool accept_no_keys = false);\n     CryptedKeyMap mapCryptedKeys GUARDED_BY(cs_KeyStore);\n \n public:"
      },
      {
        "sha": "4e2853bb293119966d7d4784d483d47c0f4c58a5",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 4,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/428823c2cc487412b6448222bdb0d5912450253a/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/428823c2cc487412b6448222bdb0d5912450253a/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=428823c2cc487412b6448222bdb0d5912450253a",
        "patch": "@@ -81,8 +81,7 @@ std::shared_ptr<CWallet> GetWallet(const std::string& name)\n     return nullptr;\n }\n \n-// Custom deleter for shared_ptr<CWallet>.\n-static void ReleaseWallet(CWallet* wallet)\n+void ReleaseWallet(CWallet* wallet)\n {\n     wallet->WalletLogPrintf(\"Releasing wallet\\n\");\n     wallet->BlockUntilSyncedToCurrentChain();\n@@ -408,7 +407,7 @@ bool CWallet::LoadWatchOnly(const CScript &dest)\n     return CCryptoKeyStore::AddWatchOnly(dest);\n }\n \n-bool CWallet::Unlock(const SecureString& strWalletPassphrase)\n+bool CWallet::Unlock(const SecureString& strWalletPassphrase, bool accept_no_keys)\n {\n     CCrypter crypter;\n     CKeyingMaterial _vMasterKey;\n@@ -421,7 +420,7 @@ bool CWallet::Unlock(const SecureString& strWalletPassphrase)\n                 return false;\n             if (!crypter.Decrypt(pMasterKey.second.vchCryptedKey, _vMasterKey))\n                 continue; // try another master key\n-            if (CCryptoKeyStore::Unlock(_vMasterKey))\n+            if (CCryptoKeyStore::Unlock(_vMasterKey, accept_no_keys))\n                 return true;\n         }\n     }"
      },
      {
        "sha": "99cc32bf91c19707a89abdeb572f9f09014e004b",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/428823c2cc487412b6448222bdb0d5912450253a/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/428823c2cc487412b6448222bdb0d5912450253a/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=428823c2cc487412b6448222bdb0d5912450253a",
        "patch": "@@ -38,6 +38,8 @@ bool RemoveWallet(const std::shared_ptr<CWallet>& wallet);\n bool HasWallets();\n std::vector<std::shared_ptr<CWallet>> GetWallets();\n std::shared_ptr<CWallet> GetWallet(const std::string& name);\n+// Custom deleter for shared_ptr<CWallet>.\n+void ReleaseWallet(CWallet* wallet);\n \n //! Default for -keypool\n static const unsigned int DEFAULT_KEYPOOL_SIZE = 1000;\n@@ -840,7 +842,7 @@ class CWallet final : public CCryptoKeyStore, public CValidationInterface\n     //! Holds a timestamp at which point the wallet is scheduled (externally) to be relocked. Caller must arrange for actual relocking to occur via Lock().\n     int64_t nRelockTime = 0;\n \n-    bool Unlock(const SecureString& strWalletPassphrase);\n+    bool Unlock(const SecureString& strWalletPassphrase, bool accept_no_keys = false);\n     bool ChangeWalletPassphrase(const SecureString& strOldWalletPassphrase, const SecureString& strNewWalletPassphrase);\n     bool EncryptWallet(const SecureString& strWalletPassphrase);\n "
      },
      {
        "sha": "cca3e6ef3f159c643e9d09cbf4879c2fdde67999",
        "filename": "src/wallet/wallettool.cpp",
        "status": "added",
        "additions": 145,
        "deletions": 0,
        "changes": 145,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/428823c2cc487412b6448222bdb0d5912450253a/src/wallet/wallettool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/428823c2cc487412b6448222bdb0d5912450253a/src/wallet/wallettool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallettool.cpp?ref=428823c2cc487412b6448222bdb0d5912450253a",
        "patch": "@@ -0,0 +1,145 @@\n+// Copyright (c) 2016-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <base58.h>\n+#include <fs.h>\n+#include <util.h>\n+#include <wallet/wallet.h>\n+#include <wallet/walletutil.h>\n+\n+namespace WalletTool {\n+\n+// The standard wallet deleter function blocks on the validation interface\n+// queue, which doesn't exist for the bitcoin-wallet-tool. Define our own\n+// deleter here.\n+static void WalletToolReleaseWallet(CWallet* wallet)\n+{\n+    wallet->WalletLogPrintf(\"Releasing wallet\\n\");\n+    wallet->Flush();\n+    delete wallet;\n+}\n+\n+static std::shared_ptr<CWallet> CreateWallet(const std::string& name, const fs::path& path)\n+{\n+    if (fs::exists(path)) {\n+        fprintf(stderr, \"Error: File exists already\\n\");\n+        return nullptr;\n+    }\n+    std::shared_ptr<CWallet> wallet_instance(new CWallet(name, WalletDatabase::Create(path)), WalletToolReleaseWallet);\n+    bool first_run = true;\n+    DBErrors load_wallet_ret = wallet_instance->LoadWallet(first_run);\n+    if (load_wallet_ret != DBErrors::LOAD_OK) {\n+        fprintf(stderr, \"Error creating %s\", name.c_str());\n+        return nullptr;\n+    }\n+\n+    wallet_instance->SetMinVersion(FEATURE_HD_SPLIT);\n+\n+    // generate a new HD seed\n+    CPubKey seed = wallet_instance->GenerateNewSeed();\n+    wallet_instance->SetHDSeed(seed);\n+\n+    fprintf(stdout, \"Topping up keypool...\\n\");\n+    wallet_instance->TopUpKeyPool();\n+    return wallet_instance;\n+}\n+\n+static std::shared_ptr<CWallet> LoadWallet(const std::string& name, const fs::path& path)\n+{\n+    if (!fs::exists(path)) {\n+        fprintf(stderr, \"Error: Wallet files does not exist\\n\");\n+        return nullptr;\n+    }\n+\n+    std::shared_ptr<CWallet> wallet_instance(new CWallet(name, WalletDatabase::Create(path)), WalletToolReleaseWallet);\n+    bool first_run;\n+    DBErrors load_wallet_ret = wallet_instance->LoadWallet(first_run);\n+    if (load_wallet_ret != DBErrors::LOAD_OK) {\n+        wallet_instance = nullptr;\n+        if (load_wallet_ret == DBErrors::CORRUPT) {\n+            fprintf(stderr, \"Error loading %s: Wallet corrupted\", name.c_str());\n+            return nullptr;\n+        } else if (load_wallet_ret == DBErrors::NONCRITICAL_ERROR) {\n+            fprintf(stderr, \"Error reading %s! All keys read correctly, but transaction data\"\n+                            \" or address book entries might be missing or incorrect.\",\n+                name.c_str());\n+        } else if (load_wallet_ret == DBErrors::TOO_NEW) {\n+            fprintf(stderr, \"Error loading %s: Wallet requires newer version of %s\",\n+                name.c_str(), PACKAGE_NAME);\n+            return nullptr;\n+        } else if (load_wallet_ret == DBErrors::NEED_REWRITE) {\n+            fprintf(stderr, \"Wallet needed to be rewritten: restart %s to complete\", PACKAGE_NAME);\n+            return nullptr;\n+        } else {\n+            fprintf(stderr, \"Error loading %s\", name.c_str());\n+            return nullptr;\n+        }\n+    }\n+\n+    return wallet_instance;\n+}\n+\n+static void WalletShowInfo(CWallet* wallet_instance)\n+{\n+    // lock required because of some AssertLockHeld()\n+    LOCK(wallet_instance->cs_wallet);\n+\n+    fprintf(stdout, \"Wallet info\\n===========\\n\");\n+    fprintf(stdout, \"Encrypted: %s\\n\", wallet_instance->IsCrypted() ? \"yes\" : \"no\");\n+    fprintf(stdout, \"HD (hd seed available): %s\\n\", wallet_instance->GetHDChain().seed_id.IsNull() ? \"no\" : \"yes\");\n+    fprintf(stdout, \"Keypool Size: %u\\n\", wallet_instance->GetKeyPoolSize());\n+    fprintf(stdout, \"Transactions: %zu\\n\", wallet_instance->mapWallet.size());\n+    fprintf(stdout, \"Address Book: %zu\\n\", wallet_instance->mapAddressBook.size());\n+}\n+\n+bool executeWalletToolFunc(const std::string& method, const std::string& name)\n+{\n+    fs::path path = fs::absolute(name, GetWalletDir());\n+\n+    if (method == \"create\") {\n+        std::shared_ptr<CWallet> wallet_instance = CreateWallet(name, path);\n+        if (wallet_instance) {\n+            WalletShowInfo(wallet_instance.get());\n+            wallet_instance->Flush();\n+        }\n+    } else if (method == \"info\") {\n+        std::shared_ptr<CWallet> wallet_instance = LoadWallet(name, path);\n+        if (!wallet_instance) return false;\n+        WalletShowInfo(wallet_instance.get());\n+        wallet_instance->Flush();\n+    } else if (method == \"salvage\") {\n+        // Recover readable keypairs:\n+        std::string error;\n+        if (!WalletBatch::VerifyEnvironment(path, error)) {\n+            fprintf(stderr, \"WalletBatch::VerifyEnvironment Error: %s\\n\", error.c_str());\n+            return false;\n+        }\n+\n+        CWallet dummyWallet(\"dummy\", WalletDatabase::CreateDummy());\n+        std::string backup_filename;\n+        if (!WalletBatch::Recover(path, (void*)&dummyWallet, WalletBatch::RecoverKeysOnlyFilter, backup_filename)) {\n+            fprintf(stderr, \"Salvage failed\\n\");\n+            return false;\n+        }\n+        //TODO, set wallets best block to genesis to enforce a rescan\n+        fprintf(stdout, \"Salvage successful. Please rescan your wallet.\\n\");\n+    } else if (method == \"zaptxs\") {\n+        // needed to restore wallet transaction meta data after -zapwallettxes\n+        std::vector<CWalletTx> vWtx;\n+\n+        std::unique_ptr<CWallet> tempWallet = MakeUnique<CWallet>(name, WalletDatabase::Create(path));\n+        DBErrors nZapWalletRet = tempWallet->ZapWalletTx(vWtx);\n+        if (nZapWalletRet != DBErrors::LOAD_OK) {\n+            fprintf(stderr, \"Error loading %s: Wallet corrupted\", name.c_str());\n+            return false;\n+        }\n+        fprintf(stdout, \"Zaptxs successful executed. Please rescan your wallet.\\n\");\n+    } else {\n+        fprintf(stderr, \"Unknown command\\n\");\n+        return false;\n+    }\n+\n+    return true;\n+}\n+} // namespace WalletTool"
      },
      {
        "sha": "67eb218ad6cac3ee4957df6c4356e344435b1ab7",
        "filename": "src/wallet/wallettool.h",
        "status": "added",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/428823c2cc487412b6448222bdb0d5912450253a/src/wallet/wallettool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/428823c2cc487412b6448222bdb0d5912450253a/src/wallet/wallettool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallettool.h?ref=428823c2cc487412b6448222bdb0d5912450253a",
        "patch": "@@ -0,0 +1,20 @@\n+// Copyright (c) 2016-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_WALLET_WALLETTOOL_H\n+#define BITCOIN_WALLET_WALLETTOOL_H\n+\n+#include <script/ismine.h>\n+#include <wallet/wallet.h>\n+\n+namespace WalletTool {\n+\n+std::shared_ptr<CWallet> CreateWallet(const std::string& name, const fs::path& path);\n+std::shared_ptr<CWallet> LoadWallet(const std::string& name, const fs::path& path);\n+void WalletShowInfo(CWallet* wallet_instance);\n+bool executeWalletToolFunc(const std::string& method, const std::string& file);\n+\n+} // namespace WalletTool\n+\n+#endif // BITCOIN_WALLET_WALLETTOOL_H"
      }
    ]
  },
  {
    "sha": "fdbb2d58729ede340ee60718b229044971146e93",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmZGJiMmQ1ODcyOWVkZTM0MGVlNjA3MThiMjI5MDQ0OTcxMTQ2ZTkz",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2018-09-21T14:51:32Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2018-09-21T14:51:32Z"
      },
      "message": "fixups",
      "tree": {
        "sha": "f36720df5365bfd76062518d99d4ff49884481f6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f36720df5365bfd76062518d99d4ff49884481f6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fdbb2d58729ede340ee60718b229044971146e93",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEZzVyFg4J13cFQnFjzGytZYJ/qnkFAlulBXQACgkQzGytZYJ/\nqnl1pg/9HI2F4gcPv4qZyfR4jkI5YYDjgXDbifWDVZLBpd9F5nQgRLpqQiW2gql3\n/5cOAFG/4c3Zv17MXqIrBIhG2rQWjav2CTtIAw2npXjd9FKMmESdM4AZoLCsqf1r\nd7Euj4dNt2o25tvRcL00pVu7tvlO56EswXM5vB6ULkphWqJtiFPvhB1ExDcdFDVQ\nYH9bPPaHKnYtxwE61UzAT730hHYA5g2Mr3wBN+NsHkdJXG6mE3BIN4/DgfRkRjW0\no14xMOhvMD1BOqIq9ne7r/hyN0cNEfeUO3irU0dYSvKpziQhcUV/QRUIAAIoO087\nS2l8Q1tzOxDjrn2KFseZA2LJjbOsz2yg7oDxzbmH7MzdjezSzQ754Dp3vfb/+HS0\nNB+oGv5n550TR5JB64n+Q1DEOQGMBDlSU7ZORxgqs5tkvdckeiNb01F7tIo87LLo\n3Y+HPo3CFh2fEJhca5s4gkEKwqWmYasfnkU08/x/myL4ZHa2FPqnsWn5DVPerKnY\ntpCmfPhS8jwCPKmIoqutostZPs4SJhFduTxq5plXXoxeksebzdXErDaJmiP4iqT/\n2vfOdsgQ/kRL2qTX7N+lrh7eA1gEPfh+6Z/uIdnoG5r7z2VnstVTFMI6Xmjb57jT\nlFS+IZZFSqPzeQXZiN1TqOkniHk+rd+utqMAFP9+lr533bK7J6A=\n=cTuk\n-----END PGP SIGNATURE-----",
        "payload": "tree f36720df5365bfd76062518d99d4ff49884481f6\nparent 428823c2cc487412b6448222bdb0d5912450253a\nauthor John Newbery <john@johnnewbery.com> 1537541492 -0400\ncommitter John Newbery <john@johnnewbery.com> 1537541492 -0400\n\nfixups\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fdbb2d58729ede340ee60718b229044971146e93",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fdbb2d58729ede340ee60718b229044971146e93",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fdbb2d58729ede340ee60718b229044971146e93/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "428823c2cc487412b6448222bdb0d5912450253a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/428823c2cc487412b6448222bdb0d5912450253a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/428823c2cc487412b6448222bdb0d5912450253a"
      }
    ],
    "stats": {
      "total": 63,
      "additions": 34,
      "deletions": 29
    },
    "files": [
      {
        "sha": "8f56a541ed1465e95ef772b8e2c00f3ea1ee3647",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fdbb2d58729ede340ee60718b229044971146e93/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fdbb2d58729ede340ee60718b229044971146e93/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=fdbb2d58729ede340ee60718b229044971146e93",
        "patch": "@@ -18,7 +18,7 @@ BITCOIN_DAEMON_NAME=bitcoind\n BITCOIN_GUI_NAME=bitcoin-qt\n BITCOIN_CLI_NAME=bitcoin-cli\n BITCOIN_TX_NAME=bitcoin-tx\n-BITCOIN_WALLET_TOOL_NAME=bitcoin-wallet-tool\n+BITCOIN_WALLET_TOOL_NAME=bitcoin-wallet\n \n dnl Unless the user specified ARFLAGS, force it to be cr\n AC_ARG_VAR(ARFLAGS, [Flags for the archiver, defaults to <cr> if not set])\n@@ -403,7 +403,7 @@ CPPFLAGS=\"$CPPFLAGS -DHAVE_BUILD_INFO -D__STDC_FORMAT_MACROS\"\n \n AC_ARG_WITH([utils],\n   [AS_HELP_STRING([--with-utils],\n-  [build bitcoin-cli bitcoin-tx bitcoin-wallet-tool (default=yes)])],\n+  [build bitcoin-cli bitcoin-tx bitcoin-wallet (default=yes)])],\n   [build_bitcoin_utils=$withval],\n   [build_bitcoin_utils=yes])\n \n@@ -1215,7 +1215,7 @@ AC_MSG_CHECKING([whether to build bitcoind])\n AM_CONDITIONAL([BUILD_BITCOIND], [test x$build_bitcoind = xyes])\n AC_MSG_RESULT($build_bitcoind)\n \n-AC_MSG_CHECKING([whether to build utils (bitcoin-cli bitcoin-tx bitcoin-wallet-tool)])\n+AC_MSG_CHECKING([whether to build utils (bitcoin-cli bitcoin-tx bitcoin-wallet)])\n AM_CONDITIONAL([BUILD_BITCOIN_UTILS], [test x$build_bitcoin_utils = xyes])\n AC_MSG_RESULT($build_bitcoin_utils)\n "
      },
      {
        "sha": "5f8e02171806f1f2958063d2c96c87e518c301fb",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 8,
        "deletions": 10,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fdbb2d58729ede340ee60718b229044971146e93/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fdbb2d58729ede340ee60718b229044971146e93/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=fdbb2d58729ede340ee60718b229044971146e93",
        "patch": "@@ -88,7 +88,7 @@ endif\n if BUILD_BITCOIN_UTILS\n   bin_PROGRAMS += bitcoin-cli bitcoin-tx\n if ENABLE_WALLET\n-  bin_PROGRAMS += bitcoin-wallet-tool\n+  bin_PROGRAMS += bitcoin-wallet\n endif\n endif\n \n@@ -522,31 +522,29 @@ bitcoin_tx_LDADD += $(BOOST_LIBS) $(CRYPTO_LIBS)\n #\n \n # bitcoin-wallet-tool binary #\n-bitcoin_wallet_tool_SOURCES = bitcoin-wallet-tool.cpp\n-bitcoin_wallet_tool_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-bitcoin_wallet_tool_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-bitcoin_wallet_tool_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+bitcoin_wallet_SOURCES = bitcoin-wallet.cpp\n+bitcoin_wallet_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n+bitcoin_wallet_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+bitcoin_wallet_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n \n if TARGET_WINDOWS\n-bitcoin_wallet_tool_SOURCES += bitcoin-wallet-tool-res.rc\n+bitcoin_wallet_SOURCES += bitcoin-wallet-res.rc\n endif\n \n-bitcoin_wallet_tool_LDADD = \\\n+bitcoin_wallet_LDADD = \\\n   $(LIBBITCOIN_WALLET_TOOL) \\\n   $(LIBBITCOIN_WALLET) \\\n   $(LIBBITCOIN_SERVER) \\\n   $(LIBBITCOIN_COMMON) \\\n   $(LIBBITCOIN_CONSENSUS) \\\n   $(LIBBITCOIN_UTIL) \\\n   $(LIBBITCOIN_CRYPTO) \\\n-  $(LIBUNIVALUE) \\\n-  $(LIBBITCOIN_ZMQ) \\\n   $(LIBLEVELDB) \\\n   $(LIBLEVELDB_SSE42) \\\n   $(LIBMEMENV) \\\n   $(LIBSECP256K1)\n \n-bitcoin_wallet_tool_LDADD += $(BOOST_LIBS) $(BDB_LIBS) $(CRYPTO_LIBS)\n+bitcoin_wallet_LDADD += $(BOOST_LIBS) $(BDB_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS)\n #\n \n # bitcoinconsensus library #"
      },
      {
        "sha": "e9fa2dbb40d89dd106c1e78f72286ab7bc7ebc73",
        "filename": "src/bitcoin-wallet-res.rc",
        "status": "renamed",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fdbb2d58729ede340ee60718b229044971146e93/src/bitcoin-wallet-res.rc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fdbb2d58729ede340ee60718b229044971146e93/src/bitcoin-wallet-res.rc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-wallet-res.rc?ref=fdbb2d58729ede340ee60718b229044971146e93",
        "patch": "@@ -17,13 +17,13 @@ BEGIN\n         BLOCK \"040904E4\" // U.S. English - multilingual (hex)\n         BEGIN\n             VALUE \"CompanyName\",        \"Bitcoin\"\n-            VALUE \"FileDescription\",    \"bitcoin-wallet-tool (CLI tool for \" PACKAGE_NAME \" wallets)\"\n+            VALUE \"FileDescription\",    \"bitcoin-wallet (CLI tool for \" PACKAGE_NAME \" wallets)\"\n             VALUE \"FileVersion\",        VER_FILEVERSION_STR\n-            VALUE \"InternalName\",       \"bitcoin-wallet-tool\"\n+            VALUE \"InternalName\",       \"bitcoin-wallet\"\n             VALUE \"LegalCopyright\",     COPYRIGHT_STR\n             VALUE \"LegalTrademarks1\",   \"Distributed under the MIT software license, see the accompanying file COPYING or http://www.opensource.org/licenses/mit-license.php.\"\n-            VALUE \"OriginalFilename\",   \"bitcoin-wallet-tool.exe\"\n-            VALUE \"ProductName\",        \"bitcoin-wallet-tool\"\n+            VALUE \"OriginalFilename\",   \"bitcoin-wallet.exe\"\n+            VALUE \"ProductName\",        \"bitcoin-wallet\"\n             VALUE \"ProductVersion\",     VER_PRODUCTVERSION_STR\n         END\n     END",
        "previous_filename": "src/bitcoin-wallet-tool-res.rc"
      },
      {
        "sha": "0082ecb88fede664c07d1a34cda2d3fde6e8517b",
        "filename": "src/bitcoin-wallet.cpp",
        "status": "renamed",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fdbb2d58729ede340ee60718b229044971146e93/src/bitcoin-wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fdbb2d58729ede340ee60718b229044971146e93/src/bitcoin-wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-wallet.cpp?ref=fdbb2d58729ede340ee60718b229044971146e93",
        "patch": "@@ -44,7 +44,7 @@ static bool WalletAppInit(int argc, char* argv[])\n     if (argc < 2 || HelpRequested(gArgs)) {\n         std::string usage = strprintf(_(\"%s wallet-tool version\"), PACKAGE_NAME) + \" \" + FormatFullVersion() + \"\\n\\n\" +\n                                       _(\"Usage:\") + \"\\n\" +\n-                                     \"  bitcoin-wallet-tool [options] <command>\\n\\n\" +\n+                                     \"  bitcoin-wallet [options] <command>\\n\\n\" +\n                                      gArgs.GetHelpMessage();\n \n         fprintf(stdout, \"%s\", usage.c_str());\n@@ -96,7 +96,7 @@ int main(int argc, char* argv[])\n \n     ECCVerifyHandle globalVerifyHandle;\n     ECC_Start();\n-    if (!WalletTool::executeWalletToolFunc(method, name))\n+    if (!WalletTool::ExecuteWalletToolFunc(method, name))\n         return EXIT_FAILURE;\n     ECC_Stop();\n     return EXIT_SUCCESS;",
        "previous_filename": "src/bitcoin-wallet-tool.cpp"
      },
      {
        "sha": "908a364d60d97a16b4498a2d2611b6010ca3a68b",
        "filename": "src/wallet/wallettool.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 9,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fdbb2d58729ede340ee60718b229044971146e93/src/wallet/wallettool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fdbb2d58729ede340ee60718b229044971146e93/src/wallet/wallettool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallettool.cpp?ref=fdbb2d58729ede340ee60718b229044971146e93",
        "patch": "@@ -11,7 +11,7 @@\n namespace WalletTool {\n \n // The standard wallet deleter function blocks on the validation interface\n-// queue, which doesn't exist for the bitcoin-wallet-tool. Define our own\n+// queue, which doesn't exist for the bitcoin-wallet. Define our own\n // deleter here.\n static void WalletToolReleaseWallet(CWallet* wallet)\n {\n@@ -54,7 +54,14 @@ static std::shared_ptr<CWallet> LoadWallet(const std::string& name, const fs::pa\n \n     std::shared_ptr<CWallet> wallet_instance(new CWallet(name, WalletDatabase::Create(path)), WalletToolReleaseWallet);\n     bool first_run;\n-    DBErrors load_wallet_ret = wallet_instance->LoadWallet(first_run);\n+    DBErrors load_wallet_ret;\n+    try {\n+        load_wallet_ret = wallet_instance->LoadWallet(first_run);\n+    } catch (const std::runtime_error) {\n+        fprintf(stderr, \"Error loading %s. Is wallet being used by other process?\\n\", name.c_str());\n+        return nullptr;\n+    }\n+\n     if (load_wallet_ret != DBErrors::LOAD_OK) {\n         wallet_instance = nullptr;\n         if (load_wallet_ret == DBErrors::CORRUPT) {\n@@ -93,22 +100,22 @@ static void WalletShowInfo(CWallet* wallet_instance)\n     fprintf(stdout, \"Address Book: %zu\\n\", wallet_instance->mapAddressBook.size());\n }\n \n-bool executeWalletToolFunc(const std::string& method, const std::string& name)\n+bool ExecuteWalletToolFunc(const std::string& command, const std::string& name)\n {\n     fs::path path = fs::absolute(name, GetWalletDir());\n \n-    if (method == \"create\") {\n+    if (command == \"create\") {\n         std::shared_ptr<CWallet> wallet_instance = CreateWallet(name, path);\n         if (wallet_instance) {\n             WalletShowInfo(wallet_instance.get());\n             wallet_instance->Flush();\n         }\n-    } else if (method == \"info\") {\n+    } else if (command == \"info\") {\n         std::shared_ptr<CWallet> wallet_instance = LoadWallet(name, path);\n         if (!wallet_instance) return false;\n         WalletShowInfo(wallet_instance.get());\n         wallet_instance->Flush();\n-    } else if (method == \"salvage\") {\n+    } else if (command == \"salvage\") {\n         // Recover readable keypairs:\n         std::string error;\n         if (!WalletBatch::VerifyEnvironment(path, error)) {\n@@ -124,19 +131,19 @@ bool executeWalletToolFunc(const std::string& method, const std::string& name)\n         }\n         //TODO, set wallets best block to genesis to enforce a rescan\n         fprintf(stdout, \"Salvage successful. Please rescan your wallet.\\n\");\n-    } else if (method == \"zaptxs\") {\n+    } else if (command == \"zaptxs\") {\n         // needed to restore wallet transaction meta data after -zapwallettxes\n         std::vector<CWalletTx> vWtx;\n \n-        std::unique_ptr<CWallet> tempWallet = MakeUnique<CWallet>(name, WalletDatabase::Create(path));\n+        std::shared_ptr<CWallet> tempWallet = MakeUnique<CWallet>(name, WalletDatabase::Create(path));\n         DBErrors nZapWalletRet = tempWallet->ZapWalletTx(vWtx);\n         if (nZapWalletRet != DBErrors::LOAD_OK) {\n             fprintf(stderr, \"Error loading %s: Wallet corrupted\", name.c_str());\n             return false;\n         }\n         fprintf(stdout, \"Zaptxs successful executed. Please rescan your wallet.\\n\");\n     } else {\n-        fprintf(stderr, \"Unknown command\\n\");\n+        fprintf(stderr, \"Invalid command: %s\\n\", command.c_str());\n         return false;\n     }\n "
      },
      {
        "sha": "5b06fd17929e48358a13da642e6eeb102703f86a",
        "filename": "src/wallet/wallettool.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fdbb2d58729ede340ee60718b229044971146e93/src/wallet/wallettool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fdbb2d58729ede340ee60718b229044971146e93/src/wallet/wallettool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallettool.h?ref=fdbb2d58729ede340ee60718b229044971146e93",
        "patch": "@@ -13,7 +13,7 @@ namespace WalletTool {\n std::shared_ptr<CWallet> CreateWallet(const std::string& name, const fs::path& path);\n std::shared_ptr<CWallet> LoadWallet(const std::string& name, const fs::path& path);\n void WalletShowInfo(CWallet* wallet_instance);\n-bool executeWalletToolFunc(const std::string& method, const std::string& file);\n+bool ExecuteWalletToolFunc(const std::string& command, const std::string& file);\n \n } // namespace WalletTool\n "
      }
    ]
  },
  {
    "sha": "44a11b0da89fcff11efcdd40fd786a4ff756c693",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0NGExMWIwZGE4OWZjZmYxMWVmY2RkNDBmZDc4NmE0ZmY3NTZjNjkz",
    "commit": {
      "author": {
        "name": "Chun Kuan Lee",
        "email": "ken2812221@gmail.com",
        "date": "2018-09-20T17:20:41Z"
      },
      "committer": {
        "name": "Chun Kuan Lee",
        "email": "ken2812221@gmail.com",
        "date": "2018-09-24T13:13:56Z"
      },
      "message": "build: Add MSVC project files for bitcoin-wallet-tool",
      "tree": {
        "sha": "3a38f81345bd66913025231e7b1b90553e8c6efd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3a38f81345bd66913025231e7b1b90553e8c6efd"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/44a11b0da89fcff11efcdd40fd786a4ff756c693",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/44a11b0da89fcff11efcdd40fd786a4ff756c693",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/44a11b0da89fcff11efcdd40fd786a4ff756c693",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/44a11b0da89fcff11efcdd40fd786a4ff756c693/comments",
    "author": {
      "login": "ken2812221",
      "id": 11154118,
      "node_id": "MDQ6VXNlcjExMTU0MTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/11154118?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ken2812221",
      "html_url": "https://github.com/ken2812221",
      "followers_url": "https://api.github.com/users/ken2812221/followers",
      "following_url": "https://api.github.com/users/ken2812221/following{/other_user}",
      "gists_url": "https://api.github.com/users/ken2812221/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ken2812221/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ken2812221/subscriptions",
      "organizations_url": "https://api.github.com/users/ken2812221/orgs",
      "repos_url": "https://api.github.com/users/ken2812221/repos",
      "events_url": "https://api.github.com/users/ken2812221/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ken2812221/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ken2812221",
      "id": 11154118,
      "node_id": "MDQ6VXNlcjExMTU0MTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/11154118?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ken2812221",
      "html_url": "https://github.com/ken2812221",
      "followers_url": "https://api.github.com/users/ken2812221/followers",
      "following_url": "https://api.github.com/users/ken2812221/following{/other_user}",
      "gists_url": "https://api.github.com/users/ken2812221/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ken2812221/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ken2812221/subscriptions",
      "organizations_url": "https://api.github.com/users/ken2812221/orgs",
      "repos_url": "https://api.github.com/users/ken2812221/repos",
      "events_url": "https://api.github.com/users/ken2812221/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ken2812221/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fdbb2d58729ede340ee60718b229044971146e93",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fdbb2d58729ede340ee60718b229044971146e93",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fdbb2d58729ede340ee60718b229044971146e93"
      }
    ],
    "stats": {
      "total": 382,
      "additions": 382,
      "deletions": 0
    },
    "files": [
      {
        "sha": "b618aca817aebce9474398e81e0dcfbc69ec4e6e",
        "filename": "build_msvc/bitcoin-wallet/bitcoin-wallet.vcxproj",
        "status": "added",
        "additions": 195,
        "deletions": 0,
        "changes": 195,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44a11b0da89fcff11efcdd40fd786a4ff756c693/build_msvc/bitcoin-wallet/bitcoin-wallet.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44a11b0da89fcff11efcdd40fd786a4ff756c693/build_msvc/bitcoin-wallet/bitcoin-wallet.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/bitcoin-wallet/bitcoin-wallet.vcxproj?ref=44a11b0da89fcff11efcdd40fd786a4ff756c693",
        "patch": "@@ -0,0 +1,195 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" ToolsVersion=\"15.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Label=\"configInitTarget\" Project=\"..\\common.init.vcxproj\" />\n+  <ItemGroup Label=\"ProjectConfigurations\">\n+    <ProjectConfiguration Include=\"Debug|Win32\">\n+      <Configuration>Debug</Configuration>\n+      <Platform>Win32</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Release|Win32\">\n+      <Configuration>Release</Configuration>\n+      <Platform>Win32</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Debug|x64\">\n+      <Configuration>Debug</Configuration>\n+      <Platform>x64</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Release|x64\">\n+      <Configuration>Release</Configuration>\n+      <Platform>x64</Platform>\n+    </ProjectConfiguration>\n+  </ItemGroup>\n+  <ItemGroup>\n+    <ClCompile Include=\"..\\..\\src\\bitcoin-wallet.cpp\" />\n+  </ItemGroup>\n+  <ItemGroup>\n+    <ProjectReference Include=\"..\\libbitcoinconsensus\\libbitcoinconsensus.vcxproj\">\n+      <Project>{2b384fa8-9ee1-4544-93cb-0d733c25e8ce}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_cli\\libbitcoin_cli.vcxproj\">\n+      <Project>{0667528c-d734-4009-adf9-c0d6c4a5a5a6}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_common\\libbitcoin_common.vcxproj\">\n+      <Project>{7c87e378-df58-482e-aa2f-1bc129bc19ce}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_crypto\\libbitcoin_crypto.vcxproj\">\n+      <Project>{6190199c-6cf4-4dad-bfbd-93fa72a760c1}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_server\\libbitcoin_server.vcxproj\">\n+      <Project>{460fee33-1fe1-483f-b3bf-931ff8e969a5}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_util\\libbitcoin_util.vcxproj\">\n+      <Project>{b53a5535-ee9d-4c6f-9a26-f79ee3bc3754}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_wallet\\libbitcoin_wallet.vcxproj\">\n+      <Project>{93b86837-b543-48a5-a89b-7c87abb77df2}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_zmq\\libbitcoin_zmq.vcxproj\">\n+      <Project>{792d487f-f14c-49fc-a9de-3fc150f31c3f}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libunivalue\\libunivalue.vcxproj\">\n+      <Project>{5724ba7d-a09a-4ba8-800b-c4c1561b3d69}</Project>\n+    </ProjectReference>\n+    <ProjectReference Include=\"..\\libbitcoin_wallet_tool\\libbitcoin_wallet_tool.vcxproj\">\n+      <Project>{f91ac55e-6f5e-4c58-9ac5-b40db7deef93}</Project>\n+    </ProjectReference>\n+  </ItemGroup>\n+  <PropertyGroup Label=\"Globals\">\n+    <VCProjectVersion>15.0</VCProjectVersion>\n+    <ProjectGuid>{84DE8790-EDE3-4483-81AC-C32F15E861F4}</ProjectGuid>\n+    <Keyword>Win32Proj</Keyword>\n+    <RootNamespace>bitcointx</RootNamespace>\n+    <VcpkgTriplet Condition=\"'$(Platform)'=='Win32'\">x86-windows-static</VcpkgTriplet>\n+    <VcpkgTriplet Condition=\"'$(Platform)'=='x64'\">x64-windows-static</VcpkgTriplet>\n+  </PropertyGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.Default.props\" />\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <UseDebugLibraries>true</UseDebugLibraries>\n+    <PlatformToolset>v141</PlatformToolset>\n+    <CharacterSet>Unicode</CharacterSet>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <UseDebugLibraries>false</UseDebugLibraries>\n+    <PlatformToolset>v141</PlatformToolset>\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\n+    <CharacterSet>Unicode</CharacterSet>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <UseDebugLibraries>true</UseDebugLibraries>\n+    <PlatformToolset>v141</PlatformToolset>\n+    <CharacterSet>Unicode</CharacterSet>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"Configuration\">\n+    <ConfigurationType>Application</ConfigurationType>\n+    <UseDebugLibraries>false</UseDebugLibraries>\n+    <PlatformToolset>v141</PlatformToolset>\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\n+    <CharacterSet>Unicode</CharacterSet>\n+  </PropertyGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <ImportGroup Label=\"ExtensionSettings\">\n+  </ImportGroup>\n+  <ImportGroup Label=\"Shared\">\n+  </ImportGroup>\n+  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <PropertyGroup Label=\"UserMacros\" />\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n+    <LinkIncremental>false</LinkIncremental>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n+    <LinkIncremental>true</LinkIncremental>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n+    <LinkIncremental>true</LinkIncremental>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n+    <LinkIncremental>false</LinkIncremental>\n+  </PropertyGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n+    <ClCompile>\n+      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n+      <WarningLevel>Level3</WarningLevel>\n+      <Optimization>MaxSpeed</Optimization>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <IntrinsicFunctions>true</IntrinsicFunctions>\n+      <PreprocessorDefinitions>HAVE_CONFIG_H;_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS;WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <SDLCheck>true</SDLCheck>\n+      <AdditionalIncludeDirectories>..\\..\\src;..\\..\\src\\univalue\\include;</AdditionalIncludeDirectories>\n+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\n+    </ClCompile>\n+    <Link>\n+      <SubSystem>Console</SubSystem>\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n+      <OptimizeReferences>true</OptimizeReferences>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <AdditionalDependencies>crypt32.lib;Iphlpapi.lib;ws2_32.lib;Shlwapi.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;comdlg32.lib;advapi32.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;odbc32.lib;odbccp32.lib;%(AdditionalDependencies)</AdditionalDependencies>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n+    <ClCompile>\n+      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n+      <WarningLevel>Level3</WarningLevel>\n+      <Optimization>Disabled</Optimization>\n+      <PreprocessorDefinitions>HAVE_CONFIG_H;_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS;WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <SDLCheck>true</SDLCheck>\n+      <AdditionalIncludeDirectories>..\\..\\src;..\\..\\src\\univalue\\include;</AdditionalIncludeDirectories>\n+      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>\n+    </ClCompile>\n+    <Link>\n+      <SubSystem>Console</SubSystem>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <AdditionalDependencies>crypt32.lib;Iphlpapi.lib;ws2_32.lib;Shlwapi.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;comdlg32.lib;advapi32.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;odbc32.lib;odbccp32.lib;%(AdditionalDependencies)</AdditionalDependencies>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n+    <ClCompile>\n+      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n+      <WarningLevel>Level3</WarningLevel>\n+      <Optimization>Disabled</Optimization>\n+      <PreprocessorDefinitions>HAVE_CONFIG_H;_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS;WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <SDLCheck>true</SDLCheck>\n+      <AdditionalIncludeDirectories>..\\..\\src;..\\..\\src\\univalue\\include;</AdditionalIncludeDirectories>\n+      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>\n+    </ClCompile>\n+    <Link>\n+      <SubSystem>Console</SubSystem>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <AdditionalDependencies>crypt32.lib;Iphlpapi.lib;ws2_32.lib;Shlwapi.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;comdlg32.lib;advapi32.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;odbc32.lib;odbccp32.lib;%(AdditionalDependencies)</AdditionalDependencies>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n+    <ClCompile>\n+      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n+      <WarningLevel>Level3</WarningLevel>\n+      <Optimization>MaxSpeed</Optimization>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <IntrinsicFunctions>true</IntrinsicFunctions>\n+      <PreprocessorDefinitions>HAVE_CONFIG_H;_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS;WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <SDLCheck>true</SDLCheck>\n+      <AdditionalIncludeDirectories>..\\..\\src;..\\..\\src\\univalue\\include;</AdditionalIncludeDirectories>\n+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\n+    </ClCompile>\n+    <Link>\n+      <SubSystem>Console</SubSystem>\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n+      <OptimizeReferences>true</OptimizeReferences>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <AdditionalDependencies>crypt32.lib;Iphlpapi.lib;ws2_32.lib;Shlwapi.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;comdlg32.lib;advapi32.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;odbc32.lib;odbccp32.lib;%(AdditionalDependencies)</AdditionalDependencies>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <Import Label=\"configTarget\" Project=\"..\\common.vcxproj\" />\n+</Project>"
      },
      {
        "sha": "b84a525afa77b00459adbd87a81d20bdfbb1464b",
        "filename": "build_msvc/bitcoin.sln",
        "status": "modified",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44a11b0da89fcff11efcdd40fd786a4ff756c693/build_msvc/bitcoin.sln",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44a11b0da89fcff11efcdd40fd786a4ff756c693/build_msvc/bitcoin.sln",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/bitcoin.sln?ref=44a11b0da89fcff11efcdd40fd786a4ff756c693",
        "patch": "@@ -32,6 +32,10 @@ Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"bench_bitcoin\", \"bench_bitc\n EndProject\n Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"bitcoin-tx\", \"bitcoin-tx\\bitcoin-tx.vcxproj\", \"{D3022AF6-AD33-4CE3-B358-87CB6A1B29CF}\"\n EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"bitcoin-wallet\", \"bitcoin-wallet\\bitcoin-wallet.vcxproj\", \"{84DE8790-EDE3-4483-81AC-C32F15E861F4}\"\n+EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libbitcoin_wallet_tool\", \"libbitcoin_wallet_tool\\libbitcoin_wallet_tool.vcxproj\", \"{F91AC55E-6F5E-4C58-9AC5-B40DB7DEEF93}\"\n+EndProject\n Global\n     GlobalSection(SolutionConfigurationPlatforms) = preSolution\n         Debug|x64 = Debug|x64\n@@ -160,6 +164,22 @@ Global\n         {D3022AF6-AD33-4CE3-B358-87CB6A1B29CF}.Release|x64.Build.0 = Release|x64\n         {D3022AF6-AD33-4CE3-B358-87CB6A1B29CF}.Release|x86.ActiveCfg = Release|Win32\n         {D3022AF6-AD33-4CE3-B358-87CB6A1B29CF}.Release|x86.Build.0 = Release|Win32\n+        {84DE8790-EDE3-4483-81AC-C32F15E861F4}.Debug|x64.ActiveCfg = Debug|x64\n+        {84DE8790-EDE3-4483-81AC-C32F15E861F4}.Debug|x64.Build.0 = Debug|x64\n+        {84DE8790-EDE3-4483-81AC-C32F15E861F4}.Debug|x86.ActiveCfg = Debug|Win32\n+        {84DE8790-EDE3-4483-81AC-C32F15E861F4}.Debug|x86.Build.0 = Debug|Win32\n+        {84DE8790-EDE3-4483-81AC-C32F15E861F4}.Release|x64.ActiveCfg = Release|x64\n+        {84DE8790-EDE3-4483-81AC-C32F15E861F4}.Release|x64.Build.0 = Release|x64\n+        {84DE8790-EDE3-4483-81AC-C32F15E861F4}.Release|x86.ActiveCfg = Release|Win32\n+        {84DE8790-EDE3-4483-81AC-C32F15E861F4}.Release|x86.Build.0 = Release|Win32\n+        {F91AC55E-6F5E-4C58-9AC5-B40DB7DEEF93}.Debug|x64.ActiveCfg = Debug|x64\n+        {F91AC55E-6F5E-4C58-9AC5-B40DB7DEEF93}.Debug|x64.Build.0 = Debug|x64\n+        {F91AC55E-6F5E-4C58-9AC5-B40DB7DEEF93}.Debug|x86.ActiveCfg = Debug|Win32\n+        {F91AC55E-6F5E-4C58-9AC5-B40DB7DEEF93}.Debug|x86.Build.0 = Debug|Win32\n+        {F91AC55E-6F5E-4C58-9AC5-B40DB7DEEF93}.Release|x64.ActiveCfg = Release|x64\n+        {F91AC55E-6F5E-4C58-9AC5-B40DB7DEEF93}.Release|x64.Build.0 = Release|x64\n+        {F91AC55E-6F5E-4C58-9AC5-B40DB7DEEF93}.Release|x86.ActiveCfg = Release|Win32\n+        {F91AC55E-6F5E-4C58-9AC5-B40DB7DEEF93}.Release|x86.Build.0 = Release|Win32\n     EndGlobalSection\n     GlobalSection(SolutionProperties) = preSolution\n         HideSolutionNode = FALSE"
      },
      {
        "sha": "b9cf68aee08d23a5ac8d58b9f660523ff948db18",
        "filename": "build_msvc/libbitcoin_wallet_tool/libbitcoin_wallet_tool.vcxproj.in",
        "status": "added",
        "additions": 166,
        "deletions": 0,
        "changes": 166,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44a11b0da89fcff11efcdd40fd786a4ff756c693/build_msvc/libbitcoin_wallet_tool/libbitcoin_wallet_tool.vcxproj.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44a11b0da89fcff11efcdd40fd786a4ff756c693/build_msvc/libbitcoin_wallet_tool/libbitcoin_wallet_tool.vcxproj.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libbitcoin_wallet_tool/libbitcoin_wallet_tool.vcxproj.in?ref=44a11b0da89fcff11efcdd40fd786a4ff756c693",
        "patch": "@@ -0,0 +1,166 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" ToolsVersion=\"15.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Label=\"configInitTarget\" Project=\"..\\common.init.vcxproj\" />\n+  <ItemGroup Label=\"ProjectConfigurations\">\n+    <ProjectConfiguration Include=\"Debug|Win32\">\n+      <Configuration>Debug</Configuration>\n+      <Platform>Win32</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Release|Win32\">\n+      <Configuration>Release</Configuration>\n+      <Platform>Win32</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Debug|x64\">\n+      <Configuration>Debug</Configuration>\n+      <Platform>x64</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=\"Release|x64\">\n+      <Configuration>Release</Configuration>\n+      <Platform>x64</Platform>\n+    </ProjectConfiguration>\n+  </ItemGroup>\n+  <ItemGroup>\n+@SOURCE_FILES@\n+  </ItemGroup>\n+  <ItemGroup>\n+    <None Include=\"packages.config\" />\n+  </ItemGroup>\n+  <PropertyGroup Label=\"Globals\">\n+    <VCProjectVersion>15.0</VCProjectVersion>\n+    <ProjectGuid>{F91AC55E-6F5E-4C58-9AC5-B40DB7DEEF93}</ProjectGuid>\n+    <Keyword>Win32Proj</Keyword>\n+    <RootNamespace>libbitcoin_zmq</RootNamespace>\n+    <VcpkgTriplet Condition=\"'$(Platform)'=='Win32'\">x86-windows-static</VcpkgTriplet>\n+    <VcpkgTriplet Condition=\"'$(Platform)'=='x64'\">x64-windows-static</VcpkgTriplet>\n+  </PropertyGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.Default.props\" />\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+    <UseDebugLibraries>true</UseDebugLibraries>\n+    <PlatformToolset>v141</PlatformToolset>\n+    <CharacterSet>Unicode</CharacterSet>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+    <UseDebugLibraries>false</UseDebugLibraries>\n+    <PlatformToolset>v141</PlatformToolset>\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\n+    <CharacterSet>Unicode</CharacterSet>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\" Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+    <UseDebugLibraries>true</UseDebugLibraries>\n+    <PlatformToolset>v141</PlatformToolset>\n+    <CharacterSet>Unicode</CharacterSet>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\" Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+    <UseDebugLibraries>false</UseDebugLibraries>\n+    <PlatformToolset>v141</PlatformToolset>\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\n+    <CharacterSet>Unicode</CharacterSet>\n+  </PropertyGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <ImportGroup Label=\"ExtensionSettings\">\n+  </ImportGroup>\n+  <ImportGroup Label=\"Shared\">\n+  </ImportGroup>\n+  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <ImportGroup Label=\"PropertySheets\" Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n+    <Import Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\n+  </ImportGroup>\n+  <PropertyGroup Label=\"UserMacros\" />\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n+    <LinkIncremental>true</LinkIncremental>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n+    <LinkIncremental>true</LinkIncremental>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n+    <LinkIncremental>false</LinkIncremental>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n+    <LinkIncremental>false</LinkIncremental>\n+  </PropertyGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">\n+    <ClCompile>\n+      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n+      <WarningLevel>Level3</WarningLevel>\n+      <Optimization>Disabled</Optimization>\n+      <PreprocessorDefinitions>NOMINMAX;ZMQ_STATIC;HAVE_CONFIG_H;_SCL_SECURE_NO_WARNINGS;WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <SDLCheck>true</SDLCheck>\n+      <AdditionalIncludeDirectories>..\\..\\src;..\\..\\src\\univalue\\include;</AdditionalIncludeDirectories>\n+      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>\n+      <SuppressStartupBanner>false</SuppressStartupBanner>\n+    </ClCompile>\n+    <Link>\n+      <SubSystem>Console</SubSystem>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|x64'\">\n+    <ClCompile>\n+      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n+      <WarningLevel>Level3</WarningLevel>\n+      <Optimization>Disabled</Optimization>\n+      <PreprocessorDefinitions>NOMINMAX;ZMQ_STATIC;HAVE_CONFIG_H;_SCL_SECURE_NO_WARNINGS;WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <SDLCheck>true</SDLCheck>\n+      <AdditionalIncludeDirectories>..\\..\\src;..\\..\\src\\univalue\\include;</AdditionalIncludeDirectories>\n+      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>\n+      <SuppressStartupBanner>false</SuppressStartupBanner>\n+    </ClCompile>\n+    <Link>\n+      <SubSystem>Console</SubSystem>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\n+    <ClCompile>\n+      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n+      <WarningLevel>Level3</WarningLevel>\n+      <Optimization>MaxSpeed</Optimization>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <IntrinsicFunctions>true</IntrinsicFunctions>\n+      <PreprocessorDefinitions>NOMINMAX;ZMQ_STATIC;HAVE_CONFIG_H;_SCL_SECURE_NO_WARNINGS;WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <SDLCheck>true</SDLCheck>\n+      <AdditionalIncludeDirectories>..\\..\\src;..\\..\\src\\univalue\\include;</AdditionalIncludeDirectories>\n+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\n+      <SuppressStartupBanner>false</SuppressStartupBanner>\n+    </ClCompile>\n+    <Link>\n+      <SubSystem>Console</SubSystem>\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n+      <OptimizeReferences>true</OptimizeReferences>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|x64'\">\n+    <ClCompile>\n+      <PrecompiledHeader>NotUsing</PrecompiledHeader>\n+      <WarningLevel>Level3</WarningLevel>\n+      <Optimization>MaxSpeed</Optimization>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <IntrinsicFunctions>true</IntrinsicFunctions>\n+      <PreprocessorDefinitions>NOMINMAX;ZMQ_STATIC;HAVE_CONFIG_H;_SCL_SECURE_NO_WARNINGS;WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <SDLCheck>true</SDLCheck>\n+      <AdditionalIncludeDirectories>..\\..\\src;..\\..\\src\\univalue\\include;</AdditionalIncludeDirectories>\n+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\n+      <SuppressStartupBanner>false</SuppressStartupBanner>\n+    </ClCompile>\n+    <Link>\n+      <SubSystem>Console</SubSystem>\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n+      <OptimizeReferences>true</OptimizeReferences>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <Import Label=\"configTarget\" Project=\"..\\common.vcxproj\" />\n+</Project>"
      },
      {
        "sha": "045e642505b66155fd5002b5d18631761ab2b6b3",
        "filename": "build_msvc/msvc-autogen.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/44a11b0da89fcff11efcdd40fd786a4ff756c693/build_msvc/msvc-autogen.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/44a11b0da89fcff11efcdd40fd786a4ff756c693/build_msvc/msvc-autogen.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/msvc-autogen.py?ref=44a11b0da89fcff11efcdd40fd786a4ff756c693",
        "patch": "@@ -11,6 +11,7 @@\n     'libbitcoin_crypto',\n     'libbitcoin_server',\n     'libbitcoin_util',\n+    'libbitcoin_wallet_tool',\n     'libbitcoin_wallet',\n     'libbitcoin_zmq',\n ]"
      }
    ]
  }
]