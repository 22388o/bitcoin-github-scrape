mikehearn,2013-05-08T15:57:53Z,The pull tester fails because I deleted the now obsolete patch file it relies on. Matt said he'll update pull tester after it's merged to use the new flag.\n,https://github.com/bitcoin/bitcoin/pull/2632#issuecomment-17615232,17615232,
sipa,2013-05-09T14:50:20Z,"ACK on the general idea, but if we're going this way, we should probably do it all the way. Given that 0.8.2 becomes sort-of urgent, I'd rather pull this afterwards.\n",https://github.com/bitcoin/bitcoin/pull/2632#issuecomment-17668331,17668331,
mikehearn,2013-05-09T14:52:51Z,"That's fine, I can finish it off in the coming weeks.\n",https://github.com/bitcoin/bitcoin/pull/2632#issuecomment-17668467,17668467,
petertodd,2013-05-09T18:30:21Z,Nice!\n\nAn option to set the network magic bytes would be good to allow you to setup a temporary private testnet easily if you are doing something that shouldn't be broadcast to testnet main. (like creating large bloat-blocks that you don't want to burden everyone else with) I found out the hard way a while back when I was playing with max-sized blocks that information is easy to spread and diffi,https://github.com/bitcoin/bitcoin/pull/2632#issuecomment-17681060,17681060,
mikehearn,2013-05-17T22:07:23Z,"Maybe too many little commits here, but essentially this completes removal of fTestNet. You can still find out if you're on testnet (or a derivative) with a simple if test, so it's not any less convenient, but most of the variable stuff has moved to CChainParams. The few places that didn't move are things like the alternative block rules for testnet or the checkpoint definitions, where trying to r",https://github.com/bitcoin/bitcoin/pull/2632#issuecomment-18088549,18088549,
mikehearn,2013-06-05T11:57:08Z,Rebased onto latest master.\n,https://github.com/bitcoin/bitcoin/pull/2632#issuecomment-18970888,18970888,
mikehearn,2013-06-06T10:04:31Z,Ugh. It looks I screwed up with a force push and the work I did on another machine got lost. The last commits I worked on in the states are gone and I can't find a way to get them back. So don't review or merge this right now. I'll have to redo the last parts of removing fTestNet again :-(\n,https://github.com/bitcoin/bitcoin/pull/2632#issuecomment-19035701,19035701,
laanwj,2013-06-06T11:40:51Z,Nothing left of it in your local git reflog? That usually saves me in cases\nlike this.\n,https://github.com/bitcoin/bitcoin/pull/2632#issuecomment-19039663,19039663,
mikehearn,2013-06-06T13:49:30Z,"Unfortunately the work was done on a laptop I don't have access to anymore and was since wiped. If there's no copy retrievable from github servers then the work is gone :-( It was only a few commits extra to clear out the last uses of fTestNet, nothing I can't quickly reproduce. But it's annoying.\n",https://github.com/bitcoin/bitcoin/pull/2632#issuecomment-19046059,19046059,
sipa,2013-06-07T16:40:32Z,"@mikehearn If you don't expect this pull to be ready soon, you'll likely need to rebase on top of #2154.\n",https://github.com/bitcoin/bitcoin/pull/2632#issuecomment-19118334,19118334,
mikehearn,2013-06-14T09:37:37Z,I've rebased this and finished off the whole thing. Could I get a review for the last set of commits and some LGTMs/ACKs please?\n,https://github.com/bitcoin/bitcoin/pull/2632#issuecomment-19447864,19447864,
sipa,2013-06-15T15:24:39Z,ACK apart from a few minor nits (see inline).\n,https://github.com/bitcoin/bitcoin/pull/2632#issuecomment-19498146,19498146,
mikehearn,2013-06-17T08:12:14Z,Thanks. Looking for one more ACK. Gavin/Jeff?\n,https://github.com/bitcoin/bitcoin/pull/2632#issuecomment-19531355,19531355,
mikehearn,2013-06-17T10:54:38Z,"Sorry Pieter, two more commits to look at. First fixes a bug I introduced and I could squash it back down. The second is new - I noticed that ""bitcoind -regtest help"" didn't work any more and noticed that chain params were never being configured properly for sending RPCs. The reason it used to work is that in my old code regtest mode used the mainnet rpc port. Seemed better to configure params pro",https://github.com/bitcoin/bitcoin/pull/2632#issuecomment-19538047,19538047,
mikehearn,2013-06-17T13:03:45Z,"OK, replaced the last commits with one that fixes the unsigned warning, fixes a bug with repeated spamming of fixed seed nodes I noticed whilst testing regtest mode and makes ""./bitcoind -regtest help"" work by using the params for command line rpcs too.\n",https://github.com/bitcoin/bitcoin/pull/2632#issuecomment-19543161,19543161,
jgarzik,2013-06-17T15:32:39Z,"ACK, with some taste complaints\n",https://github.com/bitcoin/bitcoin/pull/2632#issuecomment-19552965,19552965,
petertodd,2013-06-17T16:02:42Z,"ACK, though all I did was review the code line-by-line - no testing.\n",https://github.com/bitcoin/bitcoin/pull/2632#issuecomment-19555051,19555051,
sipa,2013-06-19T10:01:50Z,@mikehearn You'll need to fix the Qt code too:\n\n```\nsrc/qt/clientmodel.cpp: In member function ‘bool ClientModel::isTestNet() const’:\nsrc/qt/clientmodel.cpp:113:12: error: ‘fTestNet’ was not declared in this scope\n```\n,https://github.com/bitcoin/bitcoin/pull/2632#issuecomment-19673598,19673598,
mikehearn,2013-06-19T11:20:38Z,"Oops, how did I forget that? It turns out that the Qt code not only uses fTestNet, but in some places also just calls GetBoolArg as well. What a mess. Will work on it.\n",https://github.com/bitcoin/bitcoin/pull/2632#issuecomment-19677606,19677606,
mikehearn,2013-06-19T11:55:00Z,"OK, I tested the gui in main and testnet mode, it seems to be working.\n\nProbably now the reviews are done, it's simpler to squash all the commits before merging. Otherwise the Qt GUI will be broken between some range of the commits and it's a pain to go back and fix that.\n",https://github.com/bitcoin/bitcoin/pull/2632#issuecomment-19678972,19678972,
BitcoinPullTester,2013-06-19T12:06:54Z,"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/39cdc2d76159a02b47fa23b3d15359b869a17959 for binaries and test log.\n\nThis could happen for one of several reasons:\n1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that made them incompatible with the automated testing scripts (please tweak those patches in contrib/tes",https://github.com/bitcoin/bitcoin/pull/2632#issuecomment-19679513,19679513,
laanwj,2013-06-19T12:35:17Z,"The only place it just calls GetBoolArg should be in main, on purpose: to\nshow the right icon immediately it needs to know whether the program is\nstarting in testnet mode before the fTestNet flag is set in Init.\n",https://github.com/bitcoin/bitcoin/pull/2632#issuecomment-19680804,19680804,
sipa,2013-06-19T12:54:23Z,"@mikehearn Yes, please try to keep every commit a usable state - otherwise you risk breaking git bisect.\n\nAlso can you have a look at @petertodd's nits?\n\nAfter that, I think we can merge.\n",https://github.com/bitcoin/bitcoin/pull/2632#issuecomment-19681748,19681748,
mikehearn,2013-06-19T14:31:42Z,"OK, I addressed Peter's comments and squashed into one commit. Thanks for the reviews, everyone.\n",https://github.com/bitcoin/bitcoin/pull/2632#issuecomment-19687648,19687648,
BitcoinPullTester,2013-06-19T14:42:34Z,"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/0e4b31755534fac4ea6c20a60f719e3694252220 for binaries and test log.\n\nThis could happen for one of several reasons:\n1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that made them incompatible with the automated testing scripts (please tweak those patches in contrib/tes",https://github.com/bitcoin/bitcoin/pull/2632#issuecomment-19688320,19688320,
jgarzik,2013-06-19T14:45:46Z,"ACK\n\nNote that @sipa only said each commit needs to build on its own -- which does not necessarily imply all commits must be squashed together, only that commits should each be able to exist on their own, buildable and testable.\n",https://github.com/bitcoin/bitcoin/pull/2632#issuecomment-19688539,19688539,
sipa,2013-06-19T15:03:47Z,"Well, ""move chain-specifc stuff to separate class"" is reasonable to have in one commit - it could be multiple as well, I don't care. I only asked that the CBlockLocation move to .cpp remained separate as it's not related.\n",https://github.com/bitcoin/bitcoin/pull/2632#issuecomment-19689764,19689764,
sipa,2013-06-19T15:09:46Z,ACK\n\n@laanwj You have any comments still?\n,https://github.com/bitcoin/bitcoin/pull/2632#issuecomment-19690176,19690176,
mikehearn,2013-06-19T15:11:38Z,Note that the pull tester will need fixing after this goes in.\n,https://github.com/bitcoin/bitcoin/pull/2632#issuecomment-19690312,19690312,
laanwj,2013-06-05T16:41:59Z,"Not really against this, but it feels a bit strange to have the RPC security settings depend on the chain.\n",https://github.com/bitcoin/bitcoin/pull/2632#discussion_r4549504,4549504,src/bitcoinrpc.cpp
sipa,2013-06-14T09:50:30Z,"This again introduces an implicit everything-depends-on-main issue, which #2154 solved. Would it be possible to write CChainParams without needing CBlock? Alternatively, maybe wait/rebase for #2758 so CBlock is in core.h.\n",https://github.com/bitcoin/bitcoin/pull/2632#discussion_r4698303,4698303,src/chainparams.cpp
mikehearn,2013-06-14T09:58:28Z,"Presumably whoever wants to move CBlock can solve that? I mean, main.cpp is\npretty fundamental in the current codebase. I don't see a way to avoid\nusing CBlock without having a really weird design.\n",https://github.com/bitcoin/bitcoin/pull/2632#discussion_r4698392,4698392,src/chainparams.cpp
sipa,2013-06-14T10:28:50Z,"Ok, let's take care of that in #2758.\n",https://github.com/bitcoin/bitcoin/pull/2632#discussion_r4698769,4698769,src/chainparams.cpp
sipa,2013-06-15T15:06:49Z,Agree.\n,https://github.com/bitcoin/bitcoin/pull/2632#discussion_r4714152,4714152,src/bitcoinrpc.cpp
sipa,2013-06-15T15:18:43Z,"Is this guaranteed to be a no-op on every platform, when the appended string is """"?\n",https://github.com/bitcoin/bitcoin/pull/2632#discussion_r4714173,4714173,src/util.cpp
sipa,2013-06-15T15:23:13Z,"I'd feel more comfortable with just a much lower sleep timeout, like 10ms. Just to prevent excessive CPU usage when for some reason the peer doesn't appear.\n",https://github.com/bitcoin/bitcoin/pull/2632#discussion_r4714179,4714179,src/main.cpp
mikehearn,2013-06-17T08:11:01Z,"According to the documentation, yes it's a no-op:\n\nhttp://www.boost.org/doc/libs/1_46_1/libs/filesystem/v3/doc/reference.html#path-appends\n\nAppends the preferred directory separator to the contained pathname, unless ...... p.empty()\n",https://github.com/bitcoin/bitcoin/pull/2632#discussion_r4719354,4719354,src/util.cpp
mikehearn,2013-06-17T08:11:55Z,"Maybe so, but it's a separate patch I think.\n",https://github.com/bitcoin/bitcoin/pull/2632#discussion_r4719361,4719361,src/main.cpp
sipa,2013-06-17T08:46:22Z,"Great, no problem in that case.\n",https://github.com/bitcoin/bitcoin/pull/2632#discussion_r4719754,4719754,src/util.cpp
petertodd,2013-06-17T15:26:49Z,"Given that regtest mode uses a different data directory, and thus different wallet, I'll grudgingly accept this. Feels like a security issue waiting to happen though, albeit a very rare one.\n",https://github.com/bitcoin/bitcoin/pull/2632#discussion_r4726459,4726459,src/bitcoinrpc.cpp
petertodd,2013-06-17T15:53:24Z,nitpick: add a fRegTest && fTestNet error message to be clear both options aren't valid.\n,https://github.com/bitcoin/bitcoin/pull/2632#discussion_r4727125,4727125,src/chainparams.cpp
petertodd,2013-06-17T15:54:11Z,nitpick: add a newline here\n,https://github.com/bitcoin/bitcoin/pull/2632#discussion_r4727142,4727142,src/chainparams.h
laanwj,2013-06-18T10:01:55Z,"I agree it's a security issue waiting to happen in a future code change.\nI'd strongly prefer a different solution here, ie one where the password is\nset to empty in the testing code instead of bypassing the check.\n",https://github.com/bitcoin/bitcoin/pull/2632#discussion_r4744506,4744506,src/bitcoinrpc.cpp
mikehearn,2013-06-18T10:13:49Z,"As pointed out, everything is compartmentalised. Do you have a specific security concern here or not? To repeat the reasons for this - regtest mode is not only for running regression tests (perhaps it should be renamed), but also useful for ad-hoc app development. In that situation it's very convenient to not have to mess around with RPC users or passwords. Because no real money is at stake, havin",https://github.com/bitcoin/bitcoin/pull/2632#discussion_r4744656,4744656,src/bitcoinrpc.cpp
laanwj,2013-06-18T10:48:21Z,I agree it is convenient for testing. But the extent in which testing and\nproduction code are mixed worries me a bit. I have no specific security\nconcern but it feels fragile.\n,https://github.com/bitcoin/bitcoin/pull/2632#discussion_r4745049,4745049,src/bitcoinrpc.cpp
sipa,2013-06-18T13:29:06Z,"I I'd prefer not having the network config not influence client-level config like this. A --unsafe-allow-empty-rpc-password option would be a better fit, but I don't care that much.\n",https://github.com/bitcoin/bitcoin/pull/2632#discussion_r4747442,4747442,src/bitcoinrpc.cpp
sipa,2013-06-18T13:30:14Z,"Well you're introducing the busy loop; I'd prefer not having it in the code in the first place.\n\nEDIT: never mind, the context shown by github for this patch confused me. You're just not waiting for the network to come online in regtest mode - that's fine.\n",https://github.com/bitcoin/bitcoin/pull/2632#discussion_r4747467,4747467,src/main.cpp
