[
  {
    "sha": "f8b7aa862519ab2efd1ce327d2ed4bea1325dc11",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmOGI3YWE4NjI1MTlhYjJlZmQxY2UzMjdkMmVkNGJlYTEzMjVkYzEx",
    "commit": {
      "author": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2013-09-09T09:11:11Z"
      },
      "committer": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2013-09-09T09:11:11Z"
      },
      "message": "Longer term workaround for chainstate corruption from negative versions.\n\nThis also makes negative transaction versions non-standard.\n\nThis avoids an issue triggered in block 256818 where transactions with\nnegative version numbers were incorrectly serialized into the UTXO set.\n\nOn restart nodes detect the inconsistency and refuse to start so long as\na block with these transactions is inside the self-consistency check\nwindow, logging \"coin database inconsistencies found\". The software\nrecommends reindexing, but reindexing does not correct the problem.\n\nThis should be fixed by changing the chainstate serialization, but\nworking around it seems harmless for now because the version is not\nused by any network rule currently.\n\nA patch free workaround is to start with -checklevel=2 which skips\nthe consistency checks, but the IsStandard change is important for\nminers in order to protect unpatched nodes.",
      "tree": {
        "sha": "1a0cd0aab0b06ccf3b0b2b4013b834ed501228f2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1a0cd0aab0b06ccf3b0b2b4013b834ed501228f2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f8b7aa862519ab2efd1ce327d2ed4bea1325dc11",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f8b7aa862519ab2efd1ce327d2ed4bea1325dc11",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f8b7aa862519ab2efd1ce327d2ed4bea1325dc11",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f8b7aa862519ab2efd1ce327d2ed4bea1325dc11/comments",
    "author": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4c723841e25650f045ed55b1e6a619d6d43398d5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4c723841e25650f045ed55b1e6a619d6d43398d5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4c723841e25650f045ed55b1e6a619d6d43398d5"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 6,
      "deletions": 1
    },
    "files": [
      {
        "sha": "c4e08e15d94a030852c0aa1ee0d4b2b174f3de46",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f8b7aa862519ab2efd1ce327d2ed4bea1325dc11/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f8b7aa862519ab2efd1ce327d2ed4bea1325dc11/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=f8b7aa862519ab2efd1ce327d2ed4bea1325dc11",
        "patch": "@@ -466,7 +466,7 @@ unsigned int LimitOrphanTxSize(unsigned int nMaxOrphans)\n \n bool IsStandardTx(const CTransaction& tx, string& reason)\n {\n-    if (tx.nVersion > CTransaction::CURRENT_VERSION) {\n+    if (tx.nVersion > CTransaction::CURRENT_VERSION || tx.nVersion < 1) {\n         reason = \"version\";\n         return false;\n     }\n@@ -1778,6 +1778,11 @@ bool DisconnectBlock(CBlock& block, CValidationState& state, CBlockIndex* pindex\n         CCoins &outs = view.GetCoins(hash);\n \n         CCoins outsBlock = CCoins(tx, pindex->nHeight);\n+        // The CCoins serialization does not serialize negative numbers.\n+        // No network rules currently depend on the version here, so an inconsistency is harmless\n+        // but it must be corrected before txout nversion ever influences a network rule.\n+        if (outsBlock.nVersion < 0)\n+            outs.nVersion = outsBlock.nVersion;\n         if (outs != outsBlock)\n             fClean = fClean && error(\"DisconnectBlock() : added transaction mismatch? database corrupted\");\n "
      }
    ]
  }
]