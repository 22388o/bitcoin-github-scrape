Sjors,2019-09-27 15:51:14,"Concept ACK. Could add a test for knapsack vs. branch and bound solution, if you can get the coins organized for that. ",https://github.com/bitcoin/bitcoin/pull/16972#issuecomment-535995975,535995975,
instagibbs,2019-09-27 17:13:13,Yes I was thinking about some test-only hidden RPC where you can hack  block estimates to be some function you provide. Then we can put this test somewhere nicer and do more tests like this,https://github.com/bitcoin/bitcoin/pull/16972#issuecomment-536024189,536024189,
instagibbs,2020-08-10 19:04:07,all comments addressed (and rebased on master since it's so ancient),https://github.com/bitcoin/bitcoin/pull/16972#issuecomment-671532907,671532907,
MarcoFalke,2020-08-11 06:11:10,"It looks like you are sending the whole balance. Maybe also add a test for the case ""The sum of my specified output amounts was exactly equal to the value of the single unlocked UTxO in my wallet."" (https://github.com/bitcoin/bitcoin/issues/16072#issuecomment-671668011). No strong opinion though.\n\nBig Concept ACK on adding the test",https://github.com/bitcoin/bitcoin/pull/16972#issuecomment-671749049,671749049,
instagibbs,2020-08-11 13:15:58,"@MarcoFalke The test first pipes all utxos into one, then does exactly that(although there's literally only one wallet utxo left).\n\nOne thing I can test is `sendmany` with `subtractfeefromoutput` index working properly since that's the latest report",https://github.com/bitcoin/bitcoin/pull/16972#issuecomment-671940392,671940392,
aarmoa,2021-03-21 13:03:42,"I tried testing the change, but I never got to execute the new validations because the test fails after starting. It seems like in line 210 it is trying to split an empty list of unspent inputs.\n\n> 2021-03-21T12:59:24.685000Z TestFramework (INFO): Initializing test directory /tmp/bitcoin_func_test_bsz8pvt2\n> 2021-03-21T12:59:26.988000Z TestFramework (INFO): This test is time consuming, pleas",https://github.com/bitcoin/bitcoin/pull/16972#issuecomment-803575577,803575577,
instagibbs,2021-03-22 04:39:19,"closing due to inattention on my part, please put it up for grabs",https://github.com/bitcoin/bitcoin/pull/16972#issuecomment-803754719,803754719,
laanwj,2019-10-02 08:13:28,indentation error,https://github.com/bitcoin/bitcoin/pull/16972#discussion_r330420106,330420106,test/functional/feature_fee_estimation.py
MarcoFalke,2019-10-10 21:11:51,should use a helper like `assert_approx` to print the values in case of failure,https://github.com/bitcoin/bitcoin/pull/16972#discussion_r333737492,333737492,test/functional/feature_fee_estimation.py
MarcoFalke,2019-10-10 21:12:18,should use named args for unnamed integer types and bools,https://github.com/bitcoin/bitcoin/pull/16972#discussion_r333737664,333737664,test/functional/feature_fee_estimation.py
MarcoFalke,2020-08-30 09:12:48,"fails\n\nhttps://travis-ci.org/github/bitcoin/bitcoin/jobs/716915333#L8855",https://github.com/bitcoin/bitcoin/pull/16972#discussion_r479744258,479744258,test/functional/feature_fee_estimation.py
instagibbs,2020-08-30 19:29:13,"hmm swore I ran it locally, looks like it's *just* outside the approx range. I'll do some log-hunting to make sure nothing is especially weird and relax the range a bit if not.",https://github.com/bitcoin/bitcoin/pull/16972#discussion_r479806721,479806721,test/functional/feature_fee_estimation.py
instagibbs,2020-08-31 13:51:36,"Seems like a really internal piece of fee estimation machinery difference that only happens every other time:\n\n```\n2020-08-31T13:47:22.928489Z [httpworker.3] [default wallet] Fee Calculation: Fee:17062 Bytes:208 Needed:17062 Tgt:2 (requested 2) Reason:""Double Target 95% Threshold"" Decay 0.96200: Estimation: (80730.4 - 93455.5) 97.69% 28.8/(29.4 0 mem 0.0 out) Fail: (76886.1 - 80730.4) 93.58%",https://github.com/bitcoin/bitcoin/pull/16972#discussion_r480144998,480144998,test/functional/feature_fee_estimation.py
