[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/535995975",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16972#issuecomment-535995975",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16972",
    "id": 535995975,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzNTk5NTk3NQ==",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-27T15:51:14Z",
    "updated_at": "2019-09-27T16:49:41Z",
    "author_association": "MEMBER",
    "body": "Concept ACK. Could add a test for knapsack vs. branch and bound solution, if you can get the coins organized for that. ",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/535995975/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/536024189",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16972#issuecomment-536024189",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16972",
    "id": 536024189,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzNjAyNDE4OQ==",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-27T17:13:13Z",
    "updated_at": "2019-09-27T17:13:13Z",
    "author_association": "MEMBER",
    "body": "Yes I was thinking about some test-only hidden RPC where you can hack  block estimates to be some function you provide. Then we can put this test somewhere nicer and do more tests like this",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/536024189/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/671532907",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16972#issuecomment-671532907",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16972",
    "id": 671532907,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3MTUzMjkwNw==",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-10T19:04:07Z",
    "updated_at": "2020-08-10T19:04:26Z",
    "author_association": "MEMBER",
    "body": "all comments addressed (and rebased on master since it's so ancient)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/671532907/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/671749049",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16972#issuecomment-671749049",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16972",
    "id": 671749049,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3MTc0OTA0OQ==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-11T06:11:10Z",
    "updated_at": "2020-08-11T06:11:10Z",
    "author_association": "MEMBER",
    "body": "It looks like you are sending the whole balance. Maybe also add a test for the case \"The sum of my specified output amounts was exactly equal to the value of the single unlocked UTxO in my wallet.\" (https://github.com/bitcoin/bitcoin/issues/16072#issuecomment-671668011). No strong opinion though.\r\n\r\nBig Concept ACK on adding the test",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/671749049/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/671940392",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16972#issuecomment-671940392",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16972",
    "id": 671940392,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3MTk0MDM5Mg==",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-11T13:15:58Z",
    "updated_at": "2020-08-11T13:15:58Z",
    "author_association": "MEMBER",
    "body": "@MarcoFalke The test first pipes all utxos into one, then does exactly that(although there's literally only one wallet utxo left).\r\n\r\nOne thing I can test is `sendmany` with `subtractfeefromoutput` index working properly since that's the latest report",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/671940392/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/803575577",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16972#issuecomment-803575577",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16972",
    "id": 803575577,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwMzU3NTU3Nw==",
    "user": {
      "login": "aarmoa",
      "id": 30988000,
      "node_id": "MDQ6VXNlcjMwOTg4MDAw",
      "avatar_url": "https://avatars.githubusercontent.com/u/30988000?u=9b690d0ec5d8dd7168be5e397e391adba9baf8c5&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aarmoa",
      "html_url": "https://github.com/aarmoa",
      "followers_url": "https://api.github.com/users/aarmoa/followers",
      "following_url": "https://api.github.com/users/aarmoa/following{/other_user}",
      "gists_url": "https://api.github.com/users/aarmoa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aarmoa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aarmoa/subscriptions",
      "organizations_url": "https://api.github.com/users/aarmoa/orgs",
      "repos_url": "https://api.github.com/users/aarmoa/repos",
      "events_url": "https://api.github.com/users/aarmoa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aarmoa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-21T13:03:42Z",
    "updated_at": "2021-03-21T13:03:42Z",
    "author_association": "NONE",
    "body": "I tried testing the change, but I never got to execute the new validations because the test fails after starting. It seems like in line 210 it is trying to split an empty list of unspent inputs.\r\n\r\n> 2021-03-21T12:59:24.685000Z TestFramework (INFO): Initializing test directory /tmp/bitcoin_func_test_bsz8pvt2\r\n> 2021-03-21T12:59:26.988000Z TestFramework (INFO): This test is time consuming, please be patient\r\n> 2021-03-21T12:59:26.988000Z TestFramework (INFO): Splitting inputs so we can generate tx's\r\n> 2021-03-21T12:59:27.497000Z TestFramework (ERROR): Unexpected exception caught during testing\r\n> Traceback (most recent call last):\r\n>   File \"/bitcoin_core/bitcoin/test/functional/test_framework/test_framework.py\", line 118, in main\r\n>     self.run_test()\r\n>   File \"/bitcoin_core/bitcoin/test/functional/feature_fee_estimation.py\", line 210, in run_test\r\n>     split_inputs(self.nodes[0], self.nodes[0].listunspent(0), self.txouts, True)\r\n>   File \"/bitcoin_core/bitcoin/test/functional/feature_fee_estimation.py\", line 84, in split_inputs\r\n>     prevtxout = txins.pop()\r\n> IndexError: pop from empty list\r\n> 2021-03-21T12:59:27.548000Z TestFramework (INFO): Stopping nodes\r\n> 2021-03-21T12:59:27.850000Z TestFramework (WARNING): Not cleaning up dir /tmp/bitcoin_func_test_bsz8pvt2\r\n> 2021-03-21T12:59:27.850000Z TestFramework (ERROR): Test failed. Test logging available at /tmp/bitcoin_func_test_bsz8pvt2/test_framework.log\r\n> 2021-03-21T12:59:27.850000Z TestFramework (ERROR): \r\n> 2021-03-21T12:59:27.851000Z TestFramework (ERROR): Hint: Call /home/abel/projects/bitcoin_core/bitcoin/test/functional/combine_logs.py '/tmp/bitcoin_func_test_bsz8pvt2' to consolidate all logs\r\n> 2021-03-21T12:59:27.851000Z TestFramework (ERROR): \r\n> 2021-03-21T12:59:27.851000Z TestFramework (ERROR): If this failure happened unexpectedly or intermittently, please file a bug and provide a link or upload of the combined log.\r\n> 2021-03-21T12:59:27.851000Z TestFramework (ERROR): https://github.com/bitcoin/bitcoin/issues\r\n> 2021-03-21T12:59:27.851000Z TestFramework (ERROR): \r\n> \r\n> Process finished with exit code 1\r\n\r\nTested in Linux Mint 20 Cinnamon",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/803575577/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/803754719",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16972#issuecomment-803754719",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16972",
    "id": 803754719,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwMzc1NDcxOQ==",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-22T04:39:19Z",
    "updated_at": "2021-03-22T04:39:19Z",
    "author_association": "MEMBER",
    "body": "closing due to inattention on my part, please put it up for grabs",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/803754719/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/330420106",
    "pull_request_review_id": 296074949,
    "id": 330420106,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzMDQyMDEwNg==",
    "diff_hunk": "@@ -240,6 +240,28 @@ def run_test(self):\n             self.transact_and_mine(10, self.nodes[1])\n             check_estimates(self.nodes[1], self.fees_per_kb)\n \n+        # Test the conf_target argument for sendtoaddress when whole coins are spent\n+        # and subtractfeefromamount is used\n+        low_count = 288\n+        high_count = 2\n+        low_feerate = self.nodes[1].estimatesmartfee(low_count, \"ECONOMICAL\")\n+        high_feerate = self.nodes[1].estimatesmartfee(high_count, \"ECONOMICAL\")\n+        assert high_feerate[\"feerate\"]/2 > low_feerate[\"feerate\"] # comfortably larger\n+        assert high_feerate[\"blocks\"] < low_feerate[\"blocks\"]\n+\n+        # Spend all coins at once\n+        self.nodes[1].sendtoaddress(self.nodes[1].getnewaddress(), self.nodes[1].getbalance(), \"\", \"\", True, True, low_count, \"ECONOMICAL\")\n+       # Then re-spend the change a couple times to test close as possible scenarios",
    "path": "test/functional/feature_fee_estimation.py",
    "position": null,
    "original_position": 15,
    "commit_id": "c099cf502bd55bf5c6aebcaa4ed0e9d6e3143288",
    "original_commit_id": "24bc1a21748aca6f790e26b93323cd799485076f",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "indentation error",
    "created_at": "2019-10-02T08:13:28Z",
    "updated_at": "2020-08-11T13:53:43Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16972#discussion_r330420106",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16972",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/330420106"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16972#discussion_r330420106"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16972"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/330420106/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 254,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/333737492",
    "pull_request_review_id": 300354927,
    "id": 333737492,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzMzczNzQ5Mg==",
    "diff_hunk": "@@ -240,6 +240,28 @@ def run_test(self):\n             self.transact_and_mine(10, self.nodes[1])\n             check_estimates(self.nodes[1], self.fees_per_kb)\n \n+        # Test the conf_target argument for sendtoaddress when whole coins are spent\n+        # and subtractfeefromamount is used\n+        low_count = 288\n+        high_count = 2\n+        low_feerate = self.nodes[1].estimatesmartfee(low_count, \"ECONOMICAL\")\n+        high_feerate = self.nodes[1].estimatesmartfee(high_count, \"ECONOMICAL\")\n+        assert high_feerate[\"feerate\"]/2 > low_feerate[\"feerate\"] # comfortably larger\n+        assert high_feerate[\"blocks\"] < low_feerate[\"blocks\"]\n+\n+        # Spend all coins at once\n+        self.nodes[1].sendtoaddress(self.nodes[1].getnewaddress(), self.nodes[1].getbalance(), \"\", \"\", True, True, low_count, \"ECONOMICAL\")\n+       # Then re-spend the change a couple times to test close as possible scenarios\n+        low_txid = self.nodes[1].sendtoaddress(self.nodes[1].getnewaddress(), self.nodes[1].getbalance(), \"\", \"\", True, True, low_count, \"ECONOMICAL\")\n+        high_txid = self.nodes[1].sendtoaddress(self.nodes[1].getnewaddress(), self.nodes[1].getbalance(), \"\", \"\", True, True, high_count, \"ECONOMICAL\")\n+\n+        low_info = self.nodes[1].getmempoolentry(low_txid)\n+        high_info = self.nodes[1].getmempoolentry(high_txid)\n+\n+        # Total fee should be really close\n+        assert abs(low_info[\"vsize\"]*low_feerate[\"feerate\"]/1000 - low_info[\"fee\"]) < 0.00000001\n+        assert abs(high_info[\"vsize\"]*high_feerate[\"feerate\"]/1000 - high_info[\"fee\"]) < 0.00000001",
    "path": "test/functional/feature_fee_estimation.py",
    "position": null,
    "original_position": 24,
    "commit_id": "c099cf502bd55bf5c6aebcaa4ed0e9d6e3143288",
    "original_commit_id": "24bc1a21748aca6f790e26b93323cd799485076f",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "should use a helper like `assert_approx` to print the values in case of failure",
    "created_at": "2019-10-10T21:11:51Z",
    "updated_at": "2020-08-11T13:53:43Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16972#discussion_r333737492",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16972",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/333737492"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16972#discussion_r333737492"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16972"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/333737492/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 263,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/333737664",
    "pull_request_review_id": 300355143,
    "id": 333737664,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMzMzczNzY2NA==",
    "diff_hunk": "@@ -240,6 +240,28 @@ def run_test(self):\n             self.transact_and_mine(10, self.nodes[1])\n             check_estimates(self.nodes[1], self.fees_per_kb)\n \n+        # Test the conf_target argument for sendtoaddress when whole coins are spent\n+        # and subtractfeefromamount is used\n+        low_count = 288\n+        high_count = 2\n+        low_feerate = self.nodes[1].estimatesmartfee(low_count, \"ECONOMICAL\")\n+        high_feerate = self.nodes[1].estimatesmartfee(high_count, \"ECONOMICAL\")\n+        assert high_feerate[\"feerate\"]/2 > low_feerate[\"feerate\"] # comfortably larger\n+        assert high_feerate[\"blocks\"] < low_feerate[\"blocks\"]\n+\n+        # Spend all coins at once\n+        self.nodes[1].sendtoaddress(self.nodes[1].getnewaddress(), self.nodes[1].getbalance(), \"\", \"\", True, True, low_count, \"ECONOMICAL\")\n+       # Then re-spend the change a couple times to test close as possible scenarios\n+        low_txid = self.nodes[1].sendtoaddress(self.nodes[1].getnewaddress(), self.nodes[1].getbalance(), \"\", \"\", True, True, low_count, \"ECONOMICAL\")\n+        high_txid = self.nodes[1].sendtoaddress(self.nodes[1].getnewaddress(), self.nodes[1].getbalance(), \"\", \"\", True, True, high_count, \"ECONOMICAL\")",
    "path": "test/functional/feature_fee_estimation.py",
    "position": null,
    "original_position": 17,
    "commit_id": "c099cf502bd55bf5c6aebcaa4ed0e9d6e3143288",
    "original_commit_id": "24bc1a21748aca6f790e26b93323cd799485076f",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "should use named args for unnamed integer types and bools",
    "created_at": "2019-10-10T21:12:18Z",
    "updated_at": "2020-08-11T13:53:43Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16972#discussion_r333737664",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16972",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/333737664"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16972#discussion_r333737664"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16972"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/333737664/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 256,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479744258",
    "pull_request_review_id": 478185613,
    "id": 479744258,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTc0NDI1OA==",
    "diff_hunk": "@@ -255,9 +257,44 @@ def run_test(self):\n             self.transact_and_mine(10, self.nodes[1])\n             check_estimates(self.nodes[1], self.fees_per_kb)\n \n+        # Test the conf_target argument for sendtoaddress when whole coins are spent\n+        # and subtractfeefromamount is used\n+        low_count = 288\n+        high_count = 2\n+        low_feerate = self.nodes[1].estimatesmartfee(low_count, \"ECONOMICAL\")\n+        high_feerate = self.nodes[1].estimatesmartfee(high_count, \"ECONOMICAL\")\n+        assert high_feerate[\"feerate\"]/2 > low_feerate[\"feerate\"] # comfortably larger\n+        assert high_feerate[\"blocks\"] < low_feerate[\"blocks\"]\n+\n+        # Spend all coins at once\n+        self.nodes[1].sendtoaddress(address=self.nodes[1].getnewaddress(), amount=self.nodes[1].getbalance(), subtractfeefromamount=True, conf_target=low_count, estimate_mode=\"ECONOMICAL\")\n+        self.nodes[1].generatetoaddress(1, ADDRESS_BCRT1_UNSPENDABLE)\n+        # Then re-spend the change a couple times to test close as possible scenarios\n+        low_txid = self.nodes[1].sendtoaddress(address=self.nodes[1].getnewaddress(), amount=self.nodes[1].getbalance(), subtractfeefromamount=True, conf_target=low_count, estimate_mode=\"ECONOMICAL\")\n+        high_txid = self.nodes[1].sendtoaddress(address=self.nodes[1].getnewaddress(), amount=self.nodes[1].getbalance(), subtractfeefromamount=True, conf_target=high_count, estimate_mode=\"ECONOMICAL\")\n+        # Send exactly the UTXO amount to multiple destinations, with one output paying the fee\n+        sum_total = self.nodes[1].getbalances()[\"mine\"][\"trusted\"]\n+        subtract_address = self.nodes[1].getnewaddress()\n+        low_many_txid = self.nodes[1].sendmany(amounts={self.nodes[1].getnewaddress(): sum_total-10, subtract_address: 10}, subtractfeefrom=[subtract_address], conf_target=low_count, estimate_mode=\"ECONOMICAL\")\n+        sum_total = self.nodes[1].getbalances()[\"mine\"][\"trusted\"]\n+        high_many_txid = self.nodes[1].sendmany(amounts={self.nodes[1].getnewaddress(): sum_total-10, subtract_address: 10}, subtractfeefrom=[subtract_address], conf_target=high_count, estimate_mode=\"ECONOMICAL\")\n+\n+\n+        # Total fee should be really close to one-off estimates\n+        low_info = self.nodes[1].getmempoolentry(low_txid)\n+        high_info = self.nodes[1].getmempoolentry(high_txid)\n+        low_many_info = self.nodes[1].getmempoolentry(low_many_txid)\n+        high_many_info = self.nodes[1].getmempoolentry(high_many_txid)\n+\n+        assert_approx(low_info[\"vsize\"]*low_feerate[\"feerate\"]/1000, float(low_info[\"fee\"]))\n+        assert_approx(high_info[\"vsize\"]*high_feerate[\"feerate\"]/1000, float(high_info[\"fee\"]))\n+        assert_approx(low_many_info[\"vsize\"]*low_feerate[\"feerate\"]/1000, float(low_many_info[\"fee\"]))",
    "path": "test/functional/feature_fee_estimation.py",
    "position": 50,
    "original_position": 50,
    "commit_id": "c099cf502bd55bf5c6aebcaa4ed0e9d6e3143288",
    "original_commit_id": "c099cf502bd55bf5c6aebcaa4ed0e9d6e3143288",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "fails\r\n\r\nhttps://travis-ci.org/github/bitcoin/bitcoin/jobs/716915333#L8855",
    "created_at": "2020-08-30T09:12:48Z",
    "updated_at": "2020-08-30T09:12:48Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16972#discussion_r479744258",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16972",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479744258"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16972#discussion_r479744258"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16972"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479744258/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 291,
    "original_line": 291,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479806721",
    "pull_request_review_id": 478228346,
    "id": 479806721,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTgwNjcyMQ==",
    "diff_hunk": "@@ -255,9 +257,44 @@ def run_test(self):\n             self.transact_and_mine(10, self.nodes[1])\n             check_estimates(self.nodes[1], self.fees_per_kb)\n \n+        # Test the conf_target argument for sendtoaddress when whole coins are spent\n+        # and subtractfeefromamount is used\n+        low_count = 288\n+        high_count = 2\n+        low_feerate = self.nodes[1].estimatesmartfee(low_count, \"ECONOMICAL\")\n+        high_feerate = self.nodes[1].estimatesmartfee(high_count, \"ECONOMICAL\")\n+        assert high_feerate[\"feerate\"]/2 > low_feerate[\"feerate\"] # comfortably larger\n+        assert high_feerate[\"blocks\"] < low_feerate[\"blocks\"]\n+\n+        # Spend all coins at once\n+        self.nodes[1].sendtoaddress(address=self.nodes[1].getnewaddress(), amount=self.nodes[1].getbalance(), subtractfeefromamount=True, conf_target=low_count, estimate_mode=\"ECONOMICAL\")\n+        self.nodes[1].generatetoaddress(1, ADDRESS_BCRT1_UNSPENDABLE)\n+        # Then re-spend the change a couple times to test close as possible scenarios\n+        low_txid = self.nodes[1].sendtoaddress(address=self.nodes[1].getnewaddress(), amount=self.nodes[1].getbalance(), subtractfeefromamount=True, conf_target=low_count, estimate_mode=\"ECONOMICAL\")\n+        high_txid = self.nodes[1].sendtoaddress(address=self.nodes[1].getnewaddress(), amount=self.nodes[1].getbalance(), subtractfeefromamount=True, conf_target=high_count, estimate_mode=\"ECONOMICAL\")\n+        # Send exactly the UTXO amount to multiple destinations, with one output paying the fee\n+        sum_total = self.nodes[1].getbalances()[\"mine\"][\"trusted\"]\n+        subtract_address = self.nodes[1].getnewaddress()\n+        low_many_txid = self.nodes[1].sendmany(amounts={self.nodes[1].getnewaddress(): sum_total-10, subtract_address: 10}, subtractfeefrom=[subtract_address], conf_target=low_count, estimate_mode=\"ECONOMICAL\")\n+        sum_total = self.nodes[1].getbalances()[\"mine\"][\"trusted\"]\n+        high_many_txid = self.nodes[1].sendmany(amounts={self.nodes[1].getnewaddress(): sum_total-10, subtract_address: 10}, subtractfeefrom=[subtract_address], conf_target=high_count, estimate_mode=\"ECONOMICAL\")\n+\n+\n+        # Total fee should be really close to one-off estimates\n+        low_info = self.nodes[1].getmempoolentry(low_txid)\n+        high_info = self.nodes[1].getmempoolentry(high_txid)\n+        low_many_info = self.nodes[1].getmempoolentry(low_many_txid)\n+        high_many_info = self.nodes[1].getmempoolentry(high_many_txid)\n+\n+        assert_approx(low_info[\"vsize\"]*low_feerate[\"feerate\"]/1000, float(low_info[\"fee\"]))\n+        assert_approx(high_info[\"vsize\"]*high_feerate[\"feerate\"]/1000, float(high_info[\"fee\"]))\n+        assert_approx(low_many_info[\"vsize\"]*low_feerate[\"feerate\"]/1000, float(low_many_info[\"fee\"]))",
    "path": "test/functional/feature_fee_estimation.py",
    "position": 50,
    "original_position": 50,
    "commit_id": "c099cf502bd55bf5c6aebcaa4ed0e9d6e3143288",
    "original_commit_id": "c099cf502bd55bf5c6aebcaa4ed0e9d6e3143288",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "hmm swore I ran it locally, looks like it's *just* outside the approx range. I'll do some log-hunting to make sure nothing is especially weird and relax the range a bit if not.",
    "created_at": "2020-08-30T19:29:13Z",
    "updated_at": "2020-08-30T19:29:13Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16972#discussion_r479806721",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16972",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479806721"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16972#discussion_r479806721"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16972"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/479806721/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 291,
    "original_line": 291,
    "side": "RIGHT",
    "in_reply_to_id": 479744258
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/480144998",
    "pull_request_review_id": 478634271,
    "id": 480144998,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDE0NDk5OA==",
    "diff_hunk": "@@ -255,9 +257,44 @@ def run_test(self):\n             self.transact_and_mine(10, self.nodes[1])\n             check_estimates(self.nodes[1], self.fees_per_kb)\n \n+        # Test the conf_target argument for sendtoaddress when whole coins are spent\n+        # and subtractfeefromamount is used\n+        low_count = 288\n+        high_count = 2\n+        low_feerate = self.nodes[1].estimatesmartfee(low_count, \"ECONOMICAL\")\n+        high_feerate = self.nodes[1].estimatesmartfee(high_count, \"ECONOMICAL\")\n+        assert high_feerate[\"feerate\"]/2 > low_feerate[\"feerate\"] # comfortably larger\n+        assert high_feerate[\"blocks\"] < low_feerate[\"blocks\"]\n+\n+        # Spend all coins at once\n+        self.nodes[1].sendtoaddress(address=self.nodes[1].getnewaddress(), amount=self.nodes[1].getbalance(), subtractfeefromamount=True, conf_target=low_count, estimate_mode=\"ECONOMICAL\")\n+        self.nodes[1].generatetoaddress(1, ADDRESS_BCRT1_UNSPENDABLE)\n+        # Then re-spend the change a couple times to test close as possible scenarios\n+        low_txid = self.nodes[1].sendtoaddress(address=self.nodes[1].getnewaddress(), amount=self.nodes[1].getbalance(), subtractfeefromamount=True, conf_target=low_count, estimate_mode=\"ECONOMICAL\")\n+        high_txid = self.nodes[1].sendtoaddress(address=self.nodes[1].getnewaddress(), amount=self.nodes[1].getbalance(), subtractfeefromamount=True, conf_target=high_count, estimate_mode=\"ECONOMICAL\")\n+        # Send exactly the UTXO amount to multiple destinations, with one output paying the fee\n+        sum_total = self.nodes[1].getbalances()[\"mine\"][\"trusted\"]\n+        subtract_address = self.nodes[1].getnewaddress()\n+        low_many_txid = self.nodes[1].sendmany(amounts={self.nodes[1].getnewaddress(): sum_total-10, subtract_address: 10}, subtractfeefrom=[subtract_address], conf_target=low_count, estimate_mode=\"ECONOMICAL\")\n+        sum_total = self.nodes[1].getbalances()[\"mine\"][\"trusted\"]\n+        high_many_txid = self.nodes[1].sendmany(amounts={self.nodes[1].getnewaddress(): sum_total-10, subtract_address: 10}, subtractfeefrom=[subtract_address], conf_target=high_count, estimate_mode=\"ECONOMICAL\")\n+\n+\n+        # Total fee should be really close to one-off estimates\n+        low_info = self.nodes[1].getmempoolentry(low_txid)\n+        high_info = self.nodes[1].getmempoolentry(high_txid)\n+        low_many_info = self.nodes[1].getmempoolentry(low_many_txid)\n+        high_many_info = self.nodes[1].getmempoolentry(high_many_txid)\n+\n+        assert_approx(low_info[\"vsize\"]*low_feerate[\"feerate\"]/1000, float(low_info[\"fee\"]))\n+        assert_approx(high_info[\"vsize\"]*high_feerate[\"feerate\"]/1000, float(high_info[\"fee\"]))\n+        assert_approx(low_many_info[\"vsize\"]*low_feerate[\"feerate\"]/1000, float(low_many_info[\"fee\"]))",
    "path": "test/functional/feature_fee_estimation.py",
    "position": 50,
    "original_position": 50,
    "commit_id": "c099cf502bd55bf5c6aebcaa4ed0e9d6e3143288",
    "original_commit_id": "c099cf502bd55bf5c6aebcaa4ed0e9d6e3143288",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Seems like a really internal piece of fee estimation machinery difference that only happens every other time:\r\n\r\n```\r\n2020-08-31T13:47:22.928489Z [httpworker.3] [default wallet] Fee Calculation: Fee:17062 Bytes:208 Needed:17062 Tgt:2 (requested 2) Reason:\"Double Target 95% Threshold\" Decay 0.96200: Estimation: (80730.4 - 93455.5) 97.69% 28.8/(29.4 0 mem 0.0 out) Fail: (76886.1 - 80730.4) 93.58% 39.6/(42.3 0 mem 0.0 out)\r\n```\r\n\r\nvs\r\n\r\n```\r\n node1 2020-08-11T14:14:23.348964Z [default wallet] Fee Calculation: Fee:23514 Bytes:208 Needed:23514 Tgt:2 (requested 2) Reason:\"Target 85% Threshold\" Decay 0.96200: Estimation: (108186 - 113596) 91.18% 38.1/(41.8 0 mem 0.0 out) Fail: (93455.5 - 108186) 80.72% 50.3/(62.4 0 mem 0.0 out) \r\n```\r\n\r\ndoesn't explain why the estimatesmartfee returns something different... need to investigate more sometime\r\n\r\nNormally I'd say this difference was because change was being tossed to miner fee, but this cannot happen in this case.",
    "created_at": "2020-08-31T13:51:36Z",
    "updated_at": "2020-08-31T14:09:42Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16972#discussion_r480144998",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16972",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/480144998"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/16972#discussion_r480144998"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16972"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/480144998/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 291,
    "original_line": 291,
    "side": "RIGHT",
    "in_reply_to_id": 479744258
  }
]