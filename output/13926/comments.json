[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/411811324",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#issuecomment-411811324",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13926",
    "id": 411811324,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMTgxMTMyNA==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-09T16:08:08Z",
    "updated_at": "2018-09-07T11:36:42Z",
    "author_association": "MEMBER",
    "body": "This is currently a work in progress. It is a rebase of @jonasschnelli's #8745. Please see that PR for history and context. I've volunteered to maintain this through to merge. Thanks Jonas for your work in writing and maintaining this branch so far!\r\n\r\n~It is currently rebased on top of #12490, which removes a circular dependency and allows it to build. Only the _Add wallet inspection and modification tool \"bitcoin-wallet-tool\"_ commit is relevant here.~\r\n\r\n~#12490 can't be merged until after the V0.17 branch is forked, so detailed review at this point would be immature. Concept and high-level comments most definitely welcomed.~",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/411811324/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/411830595",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#issuecomment-411830595",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13926",
    "id": 411830595,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMTgzMDU5NQ==",
    "user": {
      "login": "domob1812",
      "id": 4943644,
      "node_id": "MDQ6VXNlcjQ5NDM2NDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4943644?u=e81e2a7da2b6e14d523d137b92a3202387134531&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/domob1812",
      "html_url": "https://github.com/domob1812",
      "followers_url": "https://api.github.com/users/domob1812/followers",
      "following_url": "https://api.github.com/users/domob1812/following{/other_user}",
      "gists_url": "https://api.github.com/users/domob1812/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/domob1812/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/domob1812/subscriptions",
      "organizations_url": "https://api.github.com/users/domob1812/orgs",
      "repos_url": "https://api.github.com/users/domob1812/repos",
      "events_url": "https://api.github.com/users/domob1812/events{/privacy}",
      "received_events_url": "https://api.github.com/users/domob1812/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-09T17:11:47Z",
    "updated_at": "2018-08-09T17:11:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "Concept ACK, looks useful.  Will that tool also support things like creating addresses or dumping privkeys in the future, or \"just\" actual maintenance of the wallet file?  That's something that might be useful for offline systems (although you can of course spin up the daemon with an empty data dir).",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/411830595/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/411851645",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#issuecomment-411851645",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13926",
    "id": 411851645,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMTg1MTY0NQ==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-09T18:23:39Z",
    "updated_at": "2019-01-17T11:50:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#14372](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14372.html) (msvc: build secp256k1 and leveldb locally by ken2812221)\n* [#13787](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/13787.html) (Test for Windows encoding issue by ken2812221)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/411851645/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/412037838",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#issuecomment-412037838",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13926",
    "id": 412037838,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjAzNzgzOA==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-10T10:01:23Z",
    "updated_at": "2018-08-10T10:01:23Z",
    "author_association": "MEMBER",
    "body": "> Will that tool also support things like creating addresses or dumping privkeys in the future\r\n\r\nPotentially, yes. That would be a discussion for a future PR though :)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/412037838/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/412079231",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#issuecomment-412079231",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13926",
    "id": 412079231,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjA3OTIzMQ==",
    "user": {
      "login": "domob1812",
      "id": 4943644,
      "node_id": "MDQ6VXNlcjQ5NDM2NDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4943644?u=e81e2a7da2b6e14d523d137b92a3202387134531&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/domob1812",
      "html_url": "https://github.com/domob1812",
      "followers_url": "https://api.github.com/users/domob1812/followers",
      "following_url": "https://api.github.com/users/domob1812/following{/other_user}",
      "gists_url": "https://api.github.com/users/domob1812/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/domob1812/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/domob1812/subscriptions",
      "organizations_url": "https://api.github.com/users/domob1812/orgs",
      "repos_url": "https://api.github.com/users/domob1812/repos",
      "events_url": "https://api.github.com/users/domob1812/events{/privacy}",
      "received_events_url": "https://api.github.com/users/domob1812/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-10T13:17:21Z",
    "updated_at": "2018-08-10T13:17:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jnewbery:  Yes, of course - let's go in steps.  For me, those functions would have been useful from time to time, though, so I'd love to see that added in some follow up.  (And am happy to work on it myself if that helps.)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/412079231/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/412874470",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#issuecomment-412874470",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13926",
    "id": 412874470,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjg3NDQ3MA==",
    "user": {
      "login": "meshcollider",
      "id": 3211283,
      "node_id": "MDQ6VXNlcjMyMTEyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3211283?u=447cdc9e2966cbee415545c8ff452954ee1209af&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meshcollider",
      "html_url": "https://github.com/meshcollider",
      "followers_url": "https://api.github.com/users/meshcollider/followers",
      "following_url": "https://api.github.com/users/meshcollider/following{/other_user}",
      "gists_url": "https://api.github.com/users/meshcollider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
      "organizations_url": "https://api.github.com/users/meshcollider/orgs",
      "repos_url": "https://api.github.com/users/meshcollider/repos",
      "events_url": "https://api.github.com/users/meshcollider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meshcollider/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-14T13:37:58Z",
    "updated_at": "2018-08-14T13:37:58Z",
    "author_association": "MEMBER",
    "body": "Concept ACK, does seem clean and useful to have these as a separate tool.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/412874470/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/414967066",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#issuecomment-414967066",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13926",
    "id": 414967066,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDk2NzA2Ng==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-22T09:13:11Z",
    "updated_at": "2018-08-22T09:13:11Z",
    "author_association": "MEMBER",
    "body": "Thanks for picking this up, I agree an external wallet manipulation/recovery tool is useful",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/414967066/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/415024893",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#issuecomment-415024893",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13926",
    "id": 415024893,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTAyNDg5Mw==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-22T13:06:25Z",
    "updated_at": "2018-08-22T13:06:25Z",
    "author_association": "MEMBER",
    "body": "Thanks all concept ACKers! If you want to help with this PR, please review #12490, since that's a pre-req to get this to build. That PR just removes deprecated code, so it should be an easy review.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/415024893/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/419246052",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#issuecomment-419246052",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13926",
    "id": 419246052,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTI0NjA1Mg==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-06T21:24:15Z",
    "updated_at": "2018-09-07T11:36:18Z",
    "author_association": "MEMBER",
    "body": "Thanks for the review @practicalswift . I've fixed your review comments and rebased on the latest #12490.\r\n\r\n~Since this PR depends on that one, do you mind reviewing that PR?~",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/419246052/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/419412917",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#issuecomment-419412917",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13926",
    "id": 419412917,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTQxMjkxNw==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-07T11:37:07Z",
    "updated_at": "2018-09-07T11:37:07Z",
    "author_association": "MEMBER",
    "body": "#12490 has been merged. I've rebased on master and removed the [WIP] tag.\r\n\r\nThis is ready for review.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/419412917/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/419560365",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#issuecomment-419560365",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13926",
    "id": 419560365,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTU2MDM2NQ==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-07T20:43:29Z",
    "updated_at": "2018-09-07T20:43:29Z",
    "author_association": "MEMBER",
    "body": "Rebased on master and fixed @MarcoFalke's comments.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/419560365/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/419644207",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#issuecomment-419644207",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13926",
    "id": 419644207,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTY0NDIwNw==",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-08T14:03:09Z",
    "updated_at": "2018-09-08T14:03:09Z",
    "author_association": "MEMBER",
    "body": "How does this compare to #10102 (@ryanofsky) which also creates an independent wallet executable that could, with some tweaks, be used offline? Obviously this change is much simpler.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/419644207/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/419935244",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#issuecomment-419935244",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13926",
    "id": 419935244,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTkzNTI0NA==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-10T14:34:15Z",
    "updated_at": "2018-09-10T14:34:15Z",
    "author_association": "MEMBER",
    "body": "> How does this compare to #10102\r\n\r\nVery different. 10102 is much more ambitious and is a change to the overall architecture of bitcoind. It has dependency on #10973, so I don't expect it to be merged any time soon. It also doesn't currently support running the wallet executable separately as far as I'm aware.\r\n\r\nThis is a small, self-contained tool for created, inspecting and updating wallet files.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/419935244/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/420064394",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#issuecomment-420064394",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13926",
    "id": 420064394,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMDA2NDM5NA==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-10T21:17:58Z",
    "updated_at": "2018-09-10T21:17:58Z",
    "author_association": "MEMBER",
    "body": "> Are you planning adding tests? In this PR or other?\r\n\r\nYes, I plan to add tests to this PR.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/420064394/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/420379727",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#issuecomment-420379727",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13926",
    "id": 420379727,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMDM3OTcyNw==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-11T18:46:09Z",
    "updated_at": "2018-09-11T18:46:09Z",
    "author_association": "MEMBER",
    "body": "Thanks for the review @promag and @practicalswift . All comments addressed in the fixup commit. I'll squash if you're happy with the changes.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/420379727/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/420387619",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#issuecomment-420387619",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13926",
    "id": 420387619,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMDM4NzYxOQ==",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?u=eab5d0cdbb6cc25087cb61d4ca4a6f85255f42a7&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-11T19:09:21Z",
    "updated_at": "2018-09-11T19:09:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "Concept ACK\r\nThanks for picking this up... ",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/420387619/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/420458259",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#issuecomment-420458259",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13926",
    "id": 420458259,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMDQ1ODI1OQ==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-11T23:19:17Z",
    "updated_at": "2018-09-11T23:19:17Z",
    "author_association": "MEMBER",
    "body": "Segfault with invalid parameter:\r\n```\r\nbitcoin-wallet-tool -foo\r\nError parsing command line arguments: Invalid parameter -foo\r\n[1]    16474 segmentation fault  ./src/bitcoin-wallet-tool -foo\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/420458259/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/420670947",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#issuecomment-420670947",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13926",
    "id": 420670947,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMDY3MDk0Nw==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-12T14:33:24Z",
    "updated_at": "2018-09-12T14:33:24Z",
    "author_association": "MEMBER",
    "body": "Thanks @promag . I've fixed the segfault and squashed everything into one commit.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/420670947/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/421029603",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#issuecomment-421029603",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13926",
    "id": 421029603,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTAyOTYwMw==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-13T14:35:11Z",
    "updated_at": "2018-09-13T14:35:11Z",
    "author_association": "MEMBER",
    "body": "@practicalswift - I've fixed the CWallet leaks in f81d8c8ad4718e2158434bf330962a08d9219b61. Please review - I'll squash if you're happy.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/421029603/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/421035690",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#issuecomment-421035690",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13926",
    "id": 421035690,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTAzNTY5MA==",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-13T14:52:15Z",
    "updated_at": "2018-09-13T14:52:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jnewbery Leaks gone :-)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/421035690/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/421044022",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#issuecomment-421044022",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13926",
    "id": 421044022,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTA0NDAyMg==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-13T15:15:19Z",
    "updated_at": "2018-09-13T15:15:19Z",
    "author_association": "MEMBER",
    "body": "Addressed https://github.com/bitcoin/bitcoin/pull/13926#discussion_r217413912 , squashed and pushed.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/421044022/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/422937271",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#issuecomment-422937271",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13926",
    "id": 422937271,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMjkzNzI3MQ==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-19T19:56:25Z",
    "updated_at": "2018-09-19T19:57:01Z",
    "author_association": "MEMBER",
    "body": "@jnewbery \r\n```\r\n\u279c  bitcoin git:(wallet_tool) \u2717 ./src/bitcoin-wallet-tool -name=/tmp/w1 create\r\nTopping up keypool...\r\nWallet info\r\n===========\r\nEncrypted: no\r\nHD (hd seed available): yes\r\nKeypool Size: 2000\r\nTransactions: 0\r\nAddress Book: 0\r\n\u279c  bitcoin git:(wallet_tool) \u2717 ./src/bitcoin-wallet-tool -name=/tmp/w1 create\r\nError: File exists already\r\n\u279c  bitcoin git:(wallet_tool) \u2717 ./src/bitcoin-wallet-tool -name=/tmp/w1/foo/.. create\r\nTopping up keypool...\r\nWallet info\r\n===========\r\nEncrypted: no\r\nHD (hd seed available): yes\r\nKeypool Size: 2000\r\nTransactions: 0\r\nAddress Book: 0\r\n\u279c  bitcoin git:(wallet_tool) \u2717 ls /tmp/w1\r\ndatabase   db.log     foo        wallet.dat\r\n```\r\nthe 3rd run should fail right?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/422937271/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/422941848",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#issuecomment-422941848",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13926",
    "id": 422941848,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMjk0MTg0OA==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-19T20:11:35Z",
    "updated_at": "2018-09-19T20:11:35Z",
    "author_association": "MEMBER",
    "body": "@promag Would be better to write these up as python tests?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/422941848/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/422942669",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#issuecomment-422942669",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13926",
    "id": 422942669,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMjk0MjY2OQ==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-19T20:14:31Z",
    "updated_at": "2018-09-19T20:14:31Z",
    "author_association": "MEMBER",
    "body": "@MarcoFalke ok, I'll push a commit with the above tests and for the remaining commands.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/422942669/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/422963648",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#issuecomment-422963648",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13926",
    "id": 422963648,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMjk2MzY0OA==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-19T21:23:59Z",
    "updated_at": "2018-09-19T21:23:59Z",
    "author_association": "MEMBER",
    "body": "@MarcoFalke @promag Thanks for the review. Will address in due course.\r\n\r\n> I'll push a commit with the above tests and for the remaining commands.\r\n\r\nAwesome. Thanks @promag!\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/422963648/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/423326338",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#issuecomment-423326338",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13926",
    "id": 423326338,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMzMyNjMzOA==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-20T20:42:42Z",
    "updated_at": "2018-09-20T20:42:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think it'd be nice to call the executable `bitcoin-wallet` instead of `bitcoin-wallet-tool`. I seems unusual to give a command an extra suffix like `-tool`, though I guess `bitcoin-cli` also has a similarly descriptive suffix.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/423326338/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/423339677",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#issuecomment-423339677",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13926",
    "id": 423339677,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMzMzOTY3Nw==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-20T21:28:53Z",
    "updated_at": "2018-09-20T21:28:53Z",
    "author_association": "MEMBER",
    "body": "> I think it'd be nice to call the executable bitcoin-wallet instead of bitcoin-wallet-tool\r\n\r\nSeems reasonable to me. We already have `bitcoin-tx` and not `bitcoin-tx-tool`. I'll change the name to `bitcoin-wallet`.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/423339677/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/423457615",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#issuecomment-423457615",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13926",
    "id": 423457615,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMzQ1NzYxNQ==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-21T08:33:51Z",
    "updated_at": "2018-09-21T08:33:51Z",
    "author_association": "MEMBER",
    "body": "@jnewbery should disallow multiple `-name`, like `-name=/tmp/w1  -name=/tmp/w2 info`?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/423457615/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/423559517",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#issuecomment-423559517",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13926",
    "id": 423559517,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMzU1OTUxNw==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-21T14:51:14Z",
    "updated_at": "2018-09-21T14:51:14Z",
    "author_association": "MEMBER",
    "body": "> While running\r\n>\r\n> [...]\r\n>\r\n> This happens:\r\n>\r\n> [...]\r\n\r\nI now catch the exception in LoadWallet in wallettool.cpp",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/423559517/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/423559799",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#issuecomment-423559799",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13926",
    "id": 423559799,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMzU1OTc5OQ==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-21T14:52:02Z",
    "updated_at": "2018-09-21T14:52:02Z",
    "author_association": "MEMBER",
    "body": "Rebased on master and fixed all review comments so far.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/423559799/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/423687771",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#issuecomment-423687771",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13926",
    "id": 423687771,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMzY4Nzc3MQ==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-21T22:29:59Z",
    "updated_at": "2018-09-21T22:29:59Z",
    "author_association": "MEMBER",
    "body": "nit, add src/bitcoin-wallet to .gitignore.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/423687771/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/424446230",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#issuecomment-424446230",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13926",
    "id": 424446230,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDQ0NjIzMA==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-25T18:11:33Z",
    "updated_at": "2018-09-25T18:11:33Z",
    "author_association": "MEMBER",
    "body": "Mind to cherry-pick the tests from  #14283, so that they can be reviewed in one go with the current code?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/424446230/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/424457300",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#issuecomment-424457300",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13926",
    "id": 424457300,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDQ1NzMwMA==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-25T18:45:40Z",
    "updated_at": "2018-09-25T18:45:40Z",
    "author_association": "MEMBER",
    "body": "@MarcoFalke if the test strategy looks good then I should clean it before.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/424457300/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/425009333",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#issuecomment-425009333",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13926",
    "id": 425009333,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNTAwOTMzMw==",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?u=eab5d0cdbb6cc25087cb61d4ca4a6f85255f42a7&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-27T08:43:39Z",
    "updated_at": "2018-09-27T08:43:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "Tested a bit...\r\nI think the help should mention that the created wallet is relative to the Bitcoin data dir (from reading the help, I would have expected that the wallet will be created in the current directory).\r\n\r\n**I personally would prefer that the tool does not interact with the datadir.** (specify path or expect current dir).\r\n\r\nAlso, how can you create a new wallet in the regtest or testnet subdirectory?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/425009333/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/425062616",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#issuecomment-425062616",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13926",
    "id": 425062616,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNTA2MjYxNg==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-27T11:56:15Z",
    "updated_at": "2018-09-27T11:57:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I personally would prefer that the tool does not interact with the datadir. \r\n\r\nI think that would be a sensible idea for a low-level wallet debugging tool, but a bad idea for a tool that can replace `bitcoind` and `bitcoin-qt` as a way of accessing wallets. I think the least confusing way for bitcoin-wallet to work is for it to use the same configuration `bitcoind` and `bitcoin-qt` do, and to open and locate wallets in exactly the same way (with exact same `-wallet` `-walletdir` `-datadir` `-regtest` `-conf` etc parameters and defaults).\r\n\r\nLets think about an actual use case. If a user who runs `bitcoind` or `bitcoin-qt` normally encounters a problem that requires them to run \"salvage\" or \"zaptxs\", it would be nice if they could just run `bitcoin-wallet salvage` or `bitcoin-wallet zaptxs` from the command line directly, without having to `cd` into weird directories or specify long data paths or learn an new set of command line arguments different from the existing ones.\r\n\r\nThe `bitcoin-wallet` tool is also going to be extended in the future. I think it'd be nice if it had `dump` and `load` subcommands that could be a safe for backing up and transferring wallets into flat files without the user having to know anything about the internal structure of their data dir. I think it'd be nice if there were a `shell` subcommand that would drop into an rpcconsole like shell and allow running wallets rpc commands in an offline mode.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/425062616/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/425111414",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#issuecomment-425111414",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13926",
    "id": 425111414,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNTExMTQxNA==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-27T14:21:45Z",
    "updated_at": "2018-09-27T14:21:45Z",
    "author_association": "MEMBER",
    "body": "Cherry picked the changes from #14283 and #14284 and squashed fixup commits. Thanks to @promag and @ken2812221 !",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/425111414/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/425197997",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#issuecomment-425197997",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13926",
    "id": 425197997,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNTE5Nzk5Nw==",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?u=eab5d0cdbb6cc25087cb61d4ca4a6f85255f42a7&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-27T18:33:16Z",
    "updated_at": "2018-09-27T18:33:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I think that would be a sensible idea for a low-level wallet debugging tool, but a bad idea for a tool that can replace bitcoind and bitcoin-qt as a way of accessing wallets.\r\n\r\nI'm not sure about this but I can follow your thoughts. I think one can also argue that the wallet-tool is a low-level accessing tool for experts.\r\n\r\n> Lets think about an actual use case. If a user who runs bitcoind or bitcoin-qt normally encounters a problem that requires them to run \"salvage\" or \"zaptxs\".\r\n\r\nIf you have to salvage or zap transactions, you are in low-level debug mode IMO.\r\n\r\n\r\nHowever, I think we should...\r\na) ... interpret the provided wallet name as filename (with optional path components)\r\nb) ... if wallet has not been found, check the default datadir/walletdir if it contains the wallet\r\nc) ... allow -regtest/-testnet switch\r\nd) ... describe the path behaviour in the help-text",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/425197997/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/425217486",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#issuecomment-425217486",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13926",
    "id": 425217486,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNTIxNzQ4Ng==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-27T19:38:21Z",
    "updated_at": "2018-09-27T19:38:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "What you're suggesting sounds good, as long as it doesn't mean (part (a) is vague) that `bitcoin-wallet` should interpret the `-wallet=<path>` option differently from `bitcoind` and `bitcoin-qt`\r\n\r\nThe `salvage` and `zaptxs` subcommands are somewhat low level, but I don't think a `dump` command would be so obscure, and I think it would be nice if different various tools understood the same options so for example:\r\n\r\n```sh\r\nbitcoin-qt -testnet -wallet=foo\r\nbitcoin-wallet -testnet -wallet=foo dump > foo.txt\r\n```\r\n\r\ncould just work without the without the user having to figure out where their datadir is located, where the testnet directory lives inside datadir, whether the testnet directory contains a \"wallets\" subdirectory, or is from a legacy install that preceded it, and so on.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/425217486/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/425253225",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#issuecomment-425253225",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13926",
    "id": 425253225,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNTI1MzIyNQ==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-27T21:45:17Z",
    "updated_at": "2018-09-27T21:45:17Z",
    "author_association": "MEMBER",
    "body": "Rebased on master. tool_wallet.py is failing.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/425253225/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/425402248",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#issuecomment-425402248",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13926",
    "id": 425402248,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNTQwMjI0OA==",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-28T11:07:33Z",
    "updated_at": "2018-09-28T11:07:33Z",
    "author_association": "MEMBER",
    "body": "What happens if you run this tool on a wallet that's currently opened by `bitcoind`?\r\n\r\n`zapwallettxes` is [sometimes](https://www.reddit.com/r/Bitcoin/comments/59h8f4/how_to_delete_unconfirmed_transactions_on_bitcoin/) recommended to deal with stuck transactions. Especially before the GUI had basic RBF support, but might still be useful (though it's a pretty blunt instrument).",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/425402248/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/430790208",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#issuecomment-430790208",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13926",
    "id": 430790208,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDc5MDIwOA==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-17T21:07:45Z",
    "updated_at": "2018-10-17T21:07:45Z",
    "author_association": "MEMBER",
    "body": "I've updated the tool to treat `-datadir`, `-wallet`, `-regtest` and `-testnet` arguments in the same way that bitcoind treats those arguments. I've also added help text to explain where it looks for wallet files:\r\n\r\n```\r\nwallet-tool is an offline tool for creating and interacting with Bitcoin Core wallet files.\r\nBy default wallet-tool will act on wallets in the default wallet directory in the datadir.\r\nTo change the target wallet, use the -datadir, -wallet and -testnet/-regtest arguments.\r\n```\r\n\r\nI believe all comments so far are now addressed.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/430790208/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/430817386",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#issuecomment-430817386",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13926",
    "id": 430817386,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDgxNzM4Ng==",
    "user": {
      "login": "ken2812221",
      "id": 11154118,
      "node_id": "MDQ6VXNlcjExMTU0MTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/11154118?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ken2812221",
      "html_url": "https://github.com/ken2812221",
      "followers_url": "https://api.github.com/users/ken2812221/followers",
      "following_url": "https://api.github.com/users/ken2812221/following{/other_user}",
      "gists_url": "https://api.github.com/users/ken2812221/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ken2812221/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ken2812221/subscriptions",
      "organizations_url": "https://api.github.com/users/ken2812221/orgs",
      "repos_url": "https://api.github.com/users/ken2812221/repos",
      "events_url": "https://api.github.com/users/ken2812221/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ken2812221/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-17T22:55:22Z",
    "updated_at": "2018-10-17T22:55:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jnewbery the filelock on Windows is broken now, so the test would fail. See #14426",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/430817386/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/431057478",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#issuecomment-431057478",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13926",
    "id": 431057478,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMTA1NzQ3OA==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-18T15:38:07Z",
    "updated_at": "2018-10-18T15:38:07Z",
    "author_association": "MEMBER",
    "body": "New push:\r\n\r\n- Fix the build failure with --disable-wallet\r\n- skip the test if wallet is not compiled\r\n- Catch when the wallet file can't be opened earlier\r\n- rebased on #14426 to try to fix the windows failure\r\n\r\nThis PR now depends on #14426 .",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/431057478/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/431620814",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#issuecomment-431620814",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13926",
    "id": 431620814,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMTYyMDgxNA==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-20T21:51:59Z",
    "updated_at": "2018-10-20T21:51:59Z",
    "author_association": "MEMBER",
    "body": "rebased",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/431620814/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/437896810",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#issuecomment-437896810",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13926",
    "id": 437896810,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNzg5NjgxMA==",
    "user": {
      "login": "meshcollider",
      "id": 3211283,
      "node_id": "MDQ6VXNlcjMyMTEyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3211283?u=447cdc9e2966cbee415545c8ff452954ee1209af&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meshcollider",
      "html_url": "https://github.com/meshcollider",
      "followers_url": "https://api.github.com/users/meshcollider/followers",
      "following_url": "https://api.github.com/users/meshcollider/following{/other_user}",
      "gists_url": "https://api.github.com/users/meshcollider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
      "organizations_url": "https://api.github.com/users/meshcollider/orgs",
      "repos_url": "https://api.github.com/users/meshcollider/repos",
      "events_url": "https://api.github.com/users/meshcollider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meshcollider/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-12T14:16:42Z",
    "updated_at": "2018-11-12T14:17:53Z",
    "author_association": "MEMBER",
    "body": "I think this will be a really useful tool to add more functionality too that isn't really suited to adding to bitcoind itself. Just testing this (have done some light code review, didn't look at the `build_msvc/` files or `configure.ac` & `Makefile.am` changes).  A few early comments:\r\n\r\nSome of @ryanofsky's comments mentioned above still need addressing, e.g. that the `-printtoconsole` and `-debug` args still aren't recognized and error if they are tried to be used. I am slightly worried about the code duplication too but I think its ok.\r\n\r\nCalling `info` or `zaptxs` on a non-existent wallet should throw and error, but instead it creates a file and prints info of a wallet containing no keys, transactions, etc. Then calling create on the same wallet name will error that the file already exists.\r\n\r\nOne other note, the tool should check a command was provided. Currently it just exits without doing anything if no command is provided.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/437896810/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/437908860",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#issuecomment-437908860",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13926",
    "id": 437908860,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNzkwODg2MA==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-12T14:50:30Z",
    "updated_at": "2018-11-12T14:50:30Z",
    "author_association": "MEMBER",
    "body": "Thanks for testing @MeshCollider. I intend to pick this up again next week and address all feedback.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/437908860/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/445161171",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#issuecomment-445161171",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13926",
    "id": 445161171,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NTE2MTE3MQ==",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-07T08:37:37Z",
    "updated_at": "2018-12-07T08:37:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm afraid this PR doesn't compile when rebased on `master` :-)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/445161171/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/453609457",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#issuecomment-453609457",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13926",
    "id": 453609457,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MzYwOTQ1Nw==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-11T18:19:28Z",
    "updated_at": "2019-01-11T18:19:28Z",
    "author_association": "MEMBER",
    "body": "Rebased on master: https://github.com/bitcoin/bitcoin/compare/ebd8417a6b8fbb1575140f0f04b568f17a47914a..bd8875b50fd2d774cb98263450c0ad150aa374d7\r\nFixed build issues from rebase: https://github.com/bitcoin/bitcoin/compare/bd8875b50fd2d774cb98263450c0ad150aa374d7..21b4b35a8ecf879ec5909820ab36b3aa29358fe7",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/453609457/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/453639069",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#issuecomment-453639069",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13926",
    "id": 453639069,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MzYzOTA2OQ==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-11T19:59:30Z",
    "updated_at": "2019-01-11T19:59:30Z",
    "author_association": "MEMBER",
    "body": "Addressing @MeshCollider's feedback:\r\n\r\n> Some of @ryanofsky's comments mentioned above still need addressing, e.g. that the -printtoconsole and -debug args still aren't recognized and error if they are tried to be used. I am slightly worried about the code duplication too but I think its ok.\r\n\r\nThese should all be addressed now.\r\n\r\n> Calling info or zaptxs on a non-existent wallet should throw and error, but instead it creates a file and prints info of a wallet containing no keys, transactions, etc. Then calling create on the same wallet name will error that the file already exists.\r\n\r\nThis is fixed.\r\n\r\n> One other note, the tool should check a command was provided. Currently it just exits without doing anything if no command is provided.\r\n\r\nThis is fixed.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/453639069/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/453639452",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#issuecomment-453639452",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13926",
    "id": 453639452,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MzYzOTQ1Mg==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-11T20:00:37Z",
    "updated_at": "2019-01-11T20:00:37Z",
    "author_association": "MEMBER",
    "body": "Latest force-push should address all remaining feedback: https://github.com/bitcoin/bitcoin/compare/21b4b35a8ecf879ec5909820ab36b3aa29358fe7..d05ec61f7659466e911ea3ae48aa583c792d8849\r\n\r\nThanks everyone for review! Please let me know if I've missed anything.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/453639452/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/454453770",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#issuecomment-454453770",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13926",
    "id": 454453770,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDQ1Mzc3MA==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-15T16:22:10Z",
    "updated_at": "2019-01-15T16:22:10Z",
    "author_association": "MEMBER",
    "body": "rebased",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/454453770/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/455174640",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#issuecomment-455174640",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13926",
    "id": 455174640,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTE3NDY0MA==",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-17T13:38:18Z",
    "updated_at": "2019-01-17T13:38:18Z",
    "author_association": "MEMBER",
    "body": "I find the following behavior a bit scary:\r\n\r\n```sh\r\n$ src/bitcoin-wallet help zaptxs\r\nZaptxs successful executed. Please rescan your wallet.\r\n```\r\n\r\nI understand that we don't want to duplicate the `help` in this initial version, but it should probably throw an error.\r\n\r\nI'm also confused how `zaptxs` is supposed to work here. In `bitcoind` `-zapwallettxes` takes an argument and actually leads to a rescan. When I call `bitcoin-wallet zaptxs` and then open the zapped wallet the transactions and labels are still there.\r\n\r\nI'm not sure how to test `salvage`.\r\n\r\nIf `bitcoin.conf` sets `testnet=1` there's no way to acces a mainnet wallet (not a big deal).\r\n\r\nThe wallet creation command doesn't take arguments (like watch-only). I suppose that's fine for this initial version.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/455174640/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/455183742",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#issuecomment-455183742",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13926",
    "id": 455183742,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTE4Mzc0Mg==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-17T14:07:48Z",
    "updated_at": "2019-01-17T14:07:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think it would be good to merge wallet tool and make a new issue or set of issues to keep track of the usability problems and feature deficits Sjors is bringing up.\r\n\r\nI don't think we should be trying to perfect this tool in a single github PR. I think it would be better to merge it, mark it as experimental, and continue to develop it in git. This would make any proposed changes easier to understand and discuss.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/455183742/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/455187379",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#issuecomment-455187379",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13926",
    "id": 455187379,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTE4NzM3OQ==",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-17T14:19:18Z",
    "updated_at": "2019-01-17T14:19:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "> The wallet creation command doesn't take arguments (like watch-only). I suppose that's fine for this initial version.\r\n\r\nOne idea for this might be to remove most functionality from the wallet tool, and just allow it to fill `JSONRPCRequest` objects and call the limited subset of RPC methods that work offline. This would also let it share named/positional argument parsing code with bitcoin-cli.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/455187379/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/455191268",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#issuecomment-455191268",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13926",
    "id": 455191268,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTE5MTI2OA==",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-17T14:30:43Z",
    "updated_at": "2019-01-17T14:30:43Z",
    "author_association": "MEMBER",
    "body": "Either marking as experimental or reducing feature set works for me, though I think the latter is a safer approach.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/455191268/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/455214480",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#issuecomment-455214480",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13926",
    "id": 455214480,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTIxNDQ4MA==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-17T15:33:24Z",
    "updated_at": "2019-01-17T15:33:24Z",
    "author_association": "MEMBER",
    "body": "Thanks for the input @Sjors and @ryanofsky .\r\n\r\n> I find the following behavior a bit scary:\r\n> ...\r\n\r\nGood catch! I've added that as an error condition (with test) in https://github.com/bitcoin/bitcoin/pull/13926/commits/c904860a24aade9a59f9948eb5e8e3da80a7b12f\r\n\r\n> I don't think we should be trying to perfect this tool in a single github PR\r\n\r\nYes. Good point. I've removed the `salvage` and `zaptxs` commands in this PR, so this tool now can only provide info or create a wallet. I'll move the `salvage` and `zaptxs` commands to a follow-up PR. Done in https://github.com/bitcoin/bitcoin/pull/13926/commits/3519b2f0fb0f8fa22a788471d32917cefad61d82.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/455214480/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/455215163",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#issuecomment-455215163",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13926",
    "id": 455215163,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTIxNTE2Mw==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-17T15:35:15Z",
    "updated_at": "2019-01-17T15:35:15Z",
    "author_association": "MEMBER",
    "body": "Squashed fixup commits: https://github.com/bitcoin/bitcoin/compare/3519b2f0fb0f8fa22a788471d32917cefad61d82..a92b6085ea1c371bde447d96f22f6f17d3357348",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/455215163/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/455216862",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#issuecomment-455216862",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13926",
    "id": 455216862,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTIxNjg2Mg==",
    "user": {
      "login": "jgarzik",
      "id": 494411,
      "node_id": "MDQ6VXNlcjQ5NDQxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/494411?u=0b02049ec38b6bb7d55c5c66d9bbeb0d4b822129&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jgarzik",
      "html_url": "https://github.com/jgarzik",
      "followers_url": "https://api.github.com/users/jgarzik/followers",
      "following_url": "https://api.github.com/users/jgarzik/following{/other_user}",
      "gists_url": "https://api.github.com/users/jgarzik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jgarzik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jgarzik/subscriptions",
      "organizations_url": "https://api.github.com/users/jgarzik/orgs",
      "repos_url": "https://api.github.com/users/jgarzik/repos",
      "events_url": "https://api.github.com/users/jgarzik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jgarzik/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-17T15:39:56Z",
    "updated_at": "2019-01-17T15:39:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "@ryanofsky 's suggestion matches the original intent when the new tools (e.g. `bitcoin-tx`) were introduced, and plans were made for others (`bitcoin-script`, `bitcoin-key`, and `bitcoin-wallet`):\r\n\r\n* Start small.\r\n* Get it in-tree.\r\n* Discuss and grow from there.\r\n\r\nOnce of Linus's favorite wisdoms was that the Internet is the best test lab in the world, and your goal should be to accelerate changes to the point where they are being tested in the field by real users.  Wider audience = more testing and real world feedback.\r\n\r\nSmall+shipping is a good risk-adjusting model that maximizes the amount of field testing and review.   And the common pattern in OSS of endlessly nitpicking small details winds up being counter-productive to higher code quality (by restricting testing to The People Who Follow This Unmerged PR).  \r\n\r\nGetting software into the field also validates basic developer assumptions of the software's value, utility and design.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/455216862/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/455221385",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#issuecomment-455221385",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13926",
    "id": 455221385,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTIyMTM4NQ==",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-17T15:50:11Z",
    "updated_at": "2019-01-17T15:50:22Z",
    "author_association": "MEMBER",
    "body": "One more thing: `src/bitcoin-wallet` needs to be added to `.gitignore`.\r\n\r\nOtherwise tACK a92b608",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/455221385/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 1,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/455223365",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#issuecomment-455223365",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13926",
    "id": 455223365,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTIyMzM2NQ==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-17T15:54:41Z",
    "updated_at": "2019-01-17T15:54:41Z",
    "author_association": "MEMBER",
    "body": "> src/bitcoin-wallet needs to be added to .gitignore.\r\n\r\nDone: https://github.com/bitcoin/bitcoin/compare/a92b6085ea1c371bde447d96f22f6f17d3357348..2aeac46d17dc74d488494c77b9d1852faeb7dc16",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/455223365/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/455226152",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#issuecomment-455226152",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13926",
    "id": 455226152,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTIyNjE1Mg==",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-17T16:01:34Z",
    "updated_at": "2019-01-17T16:01:34Z",
    "author_association": "MEMBER",
    "body": "re-tACK 2aeac46",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/455226152/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/459116000",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#issuecomment-459116000",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13926",
    "id": 459116000,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1OTExNjAwMA==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-30T21:27:38Z",
    "updated_at": "2019-01-30T21:27:38Z",
    "author_association": "MEMBER",
    "body": "Fixed @MarcoFalke comment https://github.com/bitcoin/bitcoin/pull/13926#discussion_r252014014: https://github.com/bitcoin/bitcoin/compare/2aeac46d17dc74d488494c77b9d1852faeb7dc16..3c3e31c3a49c657093cacdff2c1c5e25363902ce",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/459116000/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/459117766",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#issuecomment-459117766",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13926",
    "id": 459117766,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1OTExNzc2Ng==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-30T21:33:03Z",
    "updated_at": "2019-01-30T21:33:03Z",
    "author_association": "MEMBER",
    "body": "Concept ACK. Going to test and merge this this week. Should be safe, since the only methods are `info` and `create`",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/459117766/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 1,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215156875",
    "pull_request_review_id": 152359475,
    "id": 215156875,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNTE1Njg3NQ==",
    "diff_hunk": "@@ -0,0 +1,106 @@\n+// Copyright (c) 2016 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <chainparams.h>\n+#include <chainparamsbase.h>\n+#include <consensus/consensus.h>\n+#include <logging.h>\n+#include <util.h>\n+#include <utilstrencodings.h>\n+#include <wallet/wallettool.h>\n+\n+#include <stdio.h>\n+\n+\n+static void SetupWalletToolArgs()\n+{\n+    std::string usage;",
    "path": "src/bitcoin-wallet-tool.cpp",
    "position": null,
    "original_position": 22,
    "commit_id": "3c3e31c3a49c657093cacdff2c1c5e25363902ce",
    "original_commit_id": "3610183415f4ffdfd5284c036d806c5acb53b868",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Unused variable :-)",
    "created_at": "2018-09-05T07:09:16Z",
    "updated_at": "2019-01-30T21:27:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r215156875",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215156875"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r215156875"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215156875/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 22,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215157057",
    "pull_request_review_id": 152359716,
    "id": 215157057,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNTE1NzA1Nw==",
    "diff_hunk": "@@ -0,0 +1,19 @@\n+// Copyright (c) 2016 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_WALLET_WALLETTOOL_H\n+#define BITCOIN_WALLET_WALLETTOOL_H\n+\n+#include <script/ismine.h>\n+#include <wallet/wallet.h>\n+\n+namespace WalletTool {\n+CWallet* CreateWallet(const std::string name, const fs::path& path);",
    "path": "src/wallet/wallettool.h",
    "position": null,
    "original_position": 12,
    "commit_id": "3c3e31c3a49c657093cacdff2c1c5e25363902ce",
    "original_commit_id": "3610183415f4ffdfd5284c036d806c5acb53b868",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "`name` should be passed by const reference?",
    "created_at": "2018-09-05T07:10:13Z",
    "updated_at": "2019-01-30T21:27:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r215157057",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215157057"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r215157057"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215157057/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 12,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215157078",
    "pull_request_review_id": 152359745,
    "id": 215157078,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNTE1NzA3OA==",
    "diff_hunk": "@@ -0,0 +1,19 @@\n+// Copyright (c) 2016 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_WALLET_WALLETTOOL_H\n+#define BITCOIN_WALLET_WALLETTOOL_H\n+\n+#include <script/ismine.h>\n+#include <wallet/wallet.h>\n+\n+namespace WalletTool {\n+CWallet* CreateWallet(const std::string name, const fs::path& path);\n+CWallet* LoadWallet(const std::string name, const fs::path& path);",
    "path": "src/wallet/wallettool.h",
    "position": null,
    "original_position": 13,
    "commit_id": "3c3e31c3a49c657093cacdff2c1c5e25363902ce",
    "original_commit_id": "3610183415f4ffdfd5284c036d806c5acb53b868",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "`name` should be passed by const reference?",
    "created_at": "2018-09-05T07:10:19Z",
    "updated_at": "2019-01-30T21:27:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r215157078",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215157078"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r215157078"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215157078/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 13,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215783243",
    "pull_request_review_id": 153127701,
    "id": 215783243,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNTc4MzI0Mw==",
    "diff_hunk": "@@ -0,0 +1,106 @@\n+// Copyright (c) 2016 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <chainparams.h>\n+#include <chainparamsbase.h>\n+#include <consensus/consensus.h>\n+#include <logging.h>\n+#include <util.h>\n+#include <utilstrencodings.h>\n+#include <wallet/wallettool.h>\n+\n+#include <stdio.h>\n+\n+\n+static void SetupWalletToolArgs()\n+{\n+    std::string usage;",
    "path": "src/bitcoin-wallet-tool.cpp",
    "position": null,
    "original_position": 22,
    "commit_id": "3c3e31c3a49c657093cacdff2c1c5e25363902ce",
    "original_commit_id": "3610183415f4ffdfd5284c036d806c5acb53b868",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "removed",
    "created_at": "2018-09-06T21:23:23Z",
    "updated_at": "2019-01-30T21:27:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r215783243",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215783243"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r215783243"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215783243/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 22,
    "side": "RIGHT",
    "in_reply_to_id": 215156875
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215783266",
    "pull_request_review_id": 153127724,
    "id": 215783266,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNTc4MzI2Ng==",
    "diff_hunk": "@@ -0,0 +1,19 @@\n+// Copyright (c) 2016 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_WALLET_WALLETTOOL_H\n+#define BITCOIN_WALLET_WALLETTOOL_H\n+\n+#include <script/ismine.h>\n+#include <wallet/wallet.h>\n+\n+namespace WalletTool {\n+CWallet* CreateWallet(const std::string name, const fs::path& path);",
    "path": "src/wallet/wallettool.h",
    "position": null,
    "original_position": 12,
    "commit_id": "3c3e31c3a49c657093cacdff2c1c5e25363902ce",
    "original_commit_id": "3610183415f4ffdfd5284c036d806c5acb53b868",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "updated",
    "created_at": "2018-09-06T21:23:28Z",
    "updated_at": "2019-01-30T21:27:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r215783266",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215783266"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r215783266"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215783266/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 12,
    "side": "RIGHT",
    "in_reply_to_id": 215157057
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215783290",
    "pull_request_review_id": 153127760,
    "id": 215783290,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNTc4MzI5MA==",
    "diff_hunk": "@@ -0,0 +1,19 @@\n+// Copyright (c) 2016 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_WALLET_WALLETTOOL_H\n+#define BITCOIN_WALLET_WALLETTOOL_H\n+\n+#include <script/ismine.h>\n+#include <wallet/wallet.h>\n+\n+namespace WalletTool {\n+CWallet* CreateWallet(const std::string name, const fs::path& path);\n+CWallet* LoadWallet(const std::string name, const fs::path& path);",
    "path": "src/wallet/wallettool.h",
    "position": null,
    "original_position": 13,
    "commit_id": "3c3e31c3a49c657093cacdff2c1c5e25363902ce",
    "original_commit_id": "3610183415f4ffdfd5284c036d806c5acb53b868",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "updated",
    "created_at": "2018-09-06T21:23:33Z",
    "updated_at": "2019-01-30T21:27:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r215783290",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215783290"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r215783290"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215783290/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 13,
    "side": "RIGHT",
    "in_reply_to_id": 215157078
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215943663",
    "pull_request_review_id": 153322518,
    "id": 215943663,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNTk0MzY2Mw==",
    "diff_hunk": "@@ -0,0 +1,35 @@\n+#include <windows.h>             // needed for VERSIONINFO\n+#include \"clientversion.h\"       // holds the needed client version information\n+\n+#define VER_PRODUCTVERSION     CLIENT_VERSION_MAJOR,CLIENT_VERSION_MINOR,CLIENT_VERSION_REVISION,CLIENT_VERSION_BUILD\n+#define VER_PRODUCTVERSION_STR STRINGIZE(CLIENT_VERSION_MAJOR) \".\" STRINGIZE(CLIENT_VERSION_MINOR) \".\" STRINGIZE(CLIENT_VERSION_REVISION) \".\" STRINGIZE(CLIENT_VERSION_BUILD)\n+#define VER_FILEVERSION        VER_PRODUCTVERSION\n+#define VER_FILEVERSION_STR    VER_PRODUCTVERSION_STR\n+\n+VS_VERSION_INFO VERSIONINFO\n+FILEVERSION     VER_FILEVERSION\n+PRODUCTVERSION  VER_PRODUCTVERSION\n+FILEOS          VOS_NT_WINDOWS32\n+FILETYPE        VFT_APP\n+BEGIN\n+    BLOCK \"StringFileInfo\"\n+    BEGIN\n+        BLOCK \"040904E4\" // U.S. English - multilingual (hex)\n+        BEGIN\n+            VALUE \"CompanyName\",        \"Bitcoin\"\n+            VALUE \"FileDescription\",    \"bitcoin-wallet-tool (CLI Bitcoin wallet editor utility)\"",
    "path": "src/bitcoin-wallet-tool-res.rc",
    "position": null,
    "original_position": 20,
    "commit_id": "3c3e31c3a49c657093cacdff2c1c5e25363902ce",
    "original_commit_id": "5c1a59df819233e06431c2b6708e5c0113394c78",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: replace `Bitcoin` with `\"PACKAGE_NAME \"`, since it doesn't work on other Bitcoin wallets.",
    "created_at": "2018-09-07T12:34:41Z",
    "updated_at": "2019-01-30T21:27:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r215943663",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215943663"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r215943663"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215943663/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 20,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215944535",
    "pull_request_review_id": 153322518,
    "id": 215944535,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNTk0NDUzNQ==",
    "diff_hunk": "@@ -0,0 +1,105 @@\n+// Copyright (c) 2016 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <chainparams.h>\n+#include <chainparamsbase.h>\n+#include <consensus/consensus.h>\n+#include <logging.h>\n+#include <util.h>\n+#include <utilstrencodings.h>\n+#include <wallet/wallettool.h>\n+\n+#include <stdio.h>\n+\n+const std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n+\n+static void SetupWalletToolArgs()\n+{\n+    gArgs.AddArg(\"-?\", \"This help message\", false, OptionsCategory::OPTIONS);\n+    gArgs.AddArg(\"-name=<wallet-name>\", \"Specify wallet name\", false, OptionsCategory::OPTIONS);\n+\n+    gArgs.AddArg(\"info\", \"Get wallet info\", false, OptionsCategory::COMMANDS);\n+    gArgs.AddArg(\"create\", \"Create new wallet file\", false, OptionsCategory::COMMANDS);\n+    gArgs.AddArg(\"salvage\", \"Recover readable keypairs\", false, OptionsCategory::COMMANDS);\n+    gArgs.AddArg(\"zaptxs\", \"Remove all transactions including metadata (will keep keys)\", false, OptionsCategory::COMMANDS);\n+\n+    // Hidden\n+    gArgs.AddArg(\"-h\", \"\", false, OptionsCategory::HIDDEN);\n+    gArgs.AddArg(\"-help\", \"\", false, OptionsCategory::HIDDEN);\n+}\n+\n+static bool WalletAppInit(int argc, char* argv[])\n+{\n+    SetupWalletToolArgs();\n+    std::string error;\n+    if (!gArgs.ParseParameters(argc, argv, error)) {\n+        fprintf(stderr, \"Error parsing command line arguments: %s\\n\", error.c_str());\n+        return EXIT_FAILURE;\n+    }\n+    if (argc < 2 || HelpRequested(gArgs)) {\n+        std::string usage = strprintf(_(\"%s wallet-tool version\"), PACKAGE_NAME) + \" \" + FormatFullVersion() + \"\\n\" +\n+        usage += \"\\n\" + _(\"Usage:\") + \"\\n\" +\n+        \"  bitcoin-wallet-tool [options] <command>\\n\" +\n+        \"\\n\" + gArgs.GetHelpMessage();\n+\n+        fprintf(stdout, \"%s\", usage.c_str());\n+        return false;\n+    }\n+\n+    // check for printtoconsole, allow -debug\n+    g_logger->m_print_to_console = gArgs.GetBoolArg(\"-printtoconsole\", gArgs.GetBoolArg(\"-debug\", false));\n+\n+    // Check for -testnet or -regtest parameter (Params() calls are only valid after this clause)\n+    try {\n+        SelectParams(gArgs.GetChainName());\n+    } catch (const std::exception& e) {\n+        fprintf(stderr, \"Error: %s\\n\", e.what());\n+        return EXIT_FAILURE;\n+    }\n+\n+    return true;\n+}\n+\n+int main(int argc, char* argv[])\n+{\n+    SetupEnvironment();\n+    RandomInit();\n+    try {\n+        if(!WalletAppInit(argc, argv))\n+        return EXIT_FAILURE;",
    "path": "src/bitcoin-wallet-tool.cpp",
    "position": null,
    "original_position": 74,
    "commit_id": "3c3e31c3a49c657093cacdff2c1c5e25363902ce",
    "original_commit_id": "5c1a59df819233e06431c2b6708e5c0113394c78",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: This indentation is misleading. Should probably use the clang-format-diff script to fix all of these.",
    "created_at": "2018-09-07T12:38:30Z",
    "updated_at": "2019-01-30T21:27:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r215944535",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215944535"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r215944535"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/215944535/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 74,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216081898",
    "pull_request_review_id": 153496347,
    "id": 216081898,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNjA4MTg5OA==",
    "diff_hunk": "@@ -0,0 +1,35 @@\n+#include <windows.h>             // needed for VERSIONINFO\n+#include \"clientversion.h\"       // holds the needed client version information\n+\n+#define VER_PRODUCTVERSION     CLIENT_VERSION_MAJOR,CLIENT_VERSION_MINOR,CLIENT_VERSION_REVISION,CLIENT_VERSION_BUILD\n+#define VER_PRODUCTVERSION_STR STRINGIZE(CLIENT_VERSION_MAJOR) \".\" STRINGIZE(CLIENT_VERSION_MINOR) \".\" STRINGIZE(CLIENT_VERSION_REVISION) \".\" STRINGIZE(CLIENT_VERSION_BUILD)\n+#define VER_FILEVERSION        VER_PRODUCTVERSION\n+#define VER_FILEVERSION_STR    VER_PRODUCTVERSION_STR\n+\n+VS_VERSION_INFO VERSIONINFO\n+FILEVERSION     VER_FILEVERSION\n+PRODUCTVERSION  VER_PRODUCTVERSION\n+FILEOS          VOS_NT_WINDOWS32\n+FILETYPE        VFT_APP\n+BEGIN\n+    BLOCK \"StringFileInfo\"\n+    BEGIN\n+        BLOCK \"040904E4\" // U.S. English - multilingual (hex)\n+        BEGIN\n+            VALUE \"CompanyName\",        \"Bitcoin\"\n+            VALUE \"FileDescription\",    \"bitcoin-wallet-tool (CLI Bitcoin wallet editor utility)\"",
    "path": "src/bitcoin-wallet-tool-res.rc",
    "position": null,
    "original_position": 20,
    "commit_id": "3c3e31c3a49c657093cacdff2c1c5e25363902ce",
    "original_commit_id": "5c1a59df819233e06431c2b6708e5c0113394c78",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "agree. Changed",
    "created_at": "2018-09-07T20:42:53Z",
    "updated_at": "2019-01-30T21:27:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r216081898",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216081898"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r216081898"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216081898/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 20,
    "side": "RIGHT",
    "in_reply_to_id": 215943663
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216081973",
    "pull_request_review_id": 153496443,
    "id": 216081973,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNjA4MTk3Mw==",
    "diff_hunk": "@@ -0,0 +1,105 @@\n+// Copyright (c) 2016 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <chainparams.h>\n+#include <chainparamsbase.h>\n+#include <consensus/consensus.h>\n+#include <logging.h>\n+#include <util.h>\n+#include <utilstrencodings.h>\n+#include <wallet/wallettool.h>\n+\n+#include <stdio.h>\n+\n+const std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n+\n+static void SetupWalletToolArgs()\n+{\n+    gArgs.AddArg(\"-?\", \"This help message\", false, OptionsCategory::OPTIONS);\n+    gArgs.AddArg(\"-name=<wallet-name>\", \"Specify wallet name\", false, OptionsCategory::OPTIONS);\n+\n+    gArgs.AddArg(\"info\", \"Get wallet info\", false, OptionsCategory::COMMANDS);\n+    gArgs.AddArg(\"create\", \"Create new wallet file\", false, OptionsCategory::COMMANDS);\n+    gArgs.AddArg(\"salvage\", \"Recover readable keypairs\", false, OptionsCategory::COMMANDS);\n+    gArgs.AddArg(\"zaptxs\", \"Remove all transactions including metadata (will keep keys)\", false, OptionsCategory::COMMANDS);\n+\n+    // Hidden\n+    gArgs.AddArg(\"-h\", \"\", false, OptionsCategory::HIDDEN);\n+    gArgs.AddArg(\"-help\", \"\", false, OptionsCategory::HIDDEN);\n+}\n+\n+static bool WalletAppInit(int argc, char* argv[])\n+{\n+    SetupWalletToolArgs();\n+    std::string error;\n+    if (!gArgs.ParseParameters(argc, argv, error)) {\n+        fprintf(stderr, \"Error parsing command line arguments: %s\\n\", error.c_str());\n+        return EXIT_FAILURE;\n+    }\n+    if (argc < 2 || HelpRequested(gArgs)) {\n+        std::string usage = strprintf(_(\"%s wallet-tool version\"), PACKAGE_NAME) + \" \" + FormatFullVersion() + \"\\n\" +\n+        usage += \"\\n\" + _(\"Usage:\") + \"\\n\" +\n+        \"  bitcoin-wallet-tool [options] <command>\\n\" +\n+        \"\\n\" + gArgs.GetHelpMessage();\n+\n+        fprintf(stdout, \"%s\", usage.c_str());\n+        return false;\n+    }\n+\n+    // check for printtoconsole, allow -debug\n+    g_logger->m_print_to_console = gArgs.GetBoolArg(\"-printtoconsole\", gArgs.GetBoolArg(\"-debug\", false));\n+\n+    // Check for -testnet or -regtest parameter (Params() calls are only valid after this clause)\n+    try {\n+        SelectParams(gArgs.GetChainName());\n+    } catch (const std::exception& e) {\n+        fprintf(stderr, \"Error: %s\\n\", e.what());\n+        return EXIT_FAILURE;\n+    }\n+\n+    return true;\n+}\n+\n+int main(int argc, char* argv[])\n+{\n+    SetupEnvironment();\n+    RandomInit();\n+    try {\n+        if(!WalletAppInit(argc, argv))\n+        return EXIT_FAILURE;",
    "path": "src/bitcoin-wallet-tool.cpp",
    "position": null,
    "original_position": 74,
    "commit_id": "3c3e31c3a49c657093cacdff2c1c5e25363902ce",
    "original_commit_id": "5c1a59df819233e06431c2b6708e5c0113394c78",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Thanks. I've used clang-format-diff to fix these.",
    "created_at": "2018-09-07T20:43:12Z",
    "updated_at": "2019-01-30T21:27:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r216081973",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216081973"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r216081973"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216081973/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 74,
    "side": "RIGHT",
    "in_reply_to_id": 215944535
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216346058",
    "pull_request_review_id": 153804733,
    "id": 216346058,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNjM0NjA1OA==",
    "diff_hunk": "@@ -0,0 +1,103 @@\n+// Copyright (c) 2016 The Bitcoin Core developers",
    "path": "src/bitcoin-wallet-tool.cpp",
    "position": null,
    "original_position": 1,
    "commit_id": "3c3e31c3a49c657093cacdff2c1c5e25363902ce",
    "original_commit_id": "f5cb78518a9ee5998a0a41c7df3375a70bf72f14",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit, 2018 \u2014 2 more below.",
    "created_at": "2018-09-10T14:36:49Z",
    "updated_at": "2019-01-30T21:27:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r216346058",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216346058"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r216346058"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216346058/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216471081",
    "pull_request_review_id": 153804733,
    "id": 216471081,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNjQ3MTA4MQ==",
    "diff_hunk": "@@ -0,0 +1,134 @@\n+// Copyright (c) 2016 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <base58.h>\n+#include <fs.h>\n+#include <util.h>\n+#include <wallet/wallet.h>\n+#include <wallet/walletutil.h>\n+\n+namespace WalletTool {\n+\n+static CWallet* CreateWallet(const std::string& name, const fs::path& path)\n+{\n+    if (fs::exists(path)) {\n+        fprintf(stderr, \"Error: File exists already\\n\");\n+        return NULL;\n+    }\n+    CWallet* wallet_instance = new CWallet(name, WalletDatabase::Create(path));\n+    bool first_run = true;\n+    DBErrors load_wallet_ret = wallet_instance->LoadWallet(first_run);\n+    if (load_wallet_ret != DBErrors::LOAD_OK) {\n+        fprintf(stderr, \"Error creating %s\", name.c_str());\n+        return NULL;\n+    }\n+\n+    wallet_instance->SetMinVersion(FEATURE_HD_SPLIT);\n+\n+    // generate a new HD seed\n+    CPubKey seed = wallet_instance->GenerateNewSeed();\n+    wallet_instance->SetHDSeed(seed);\n+\n+    fprintf(stdout, \"Topping up keypool...\\n\");\n+    wallet_instance->TopUpKeyPool();\n+    return wallet_instance;\n+}\n+\n+static CWallet* LoadWallet(const std::string& name, const fs::path& path)\n+{\n+    if (!fs::exists(path)) {\n+        fprintf(stderr, \"Error: Wallet files does not exist\\n\");\n+        return NULL;\n+    }\n+\n+    CWallet* wallet_instance = new CWallet(name, WalletDatabase::Create(path));\n+    bool first_run;\n+    DBErrors load_wallet_ret = wallet_instance->LoadWallet(first_run);\n+    if (load_wallet_ret != DBErrors::LOAD_OK) {\n+        wallet_instance = NULL;\n+        if (load_wallet_ret == DBErrors::CORRUPT) {\n+            fprintf(stderr, \"Error loading %s: Wallet corrupted\", name.c_str());\n+            return NULL;\n+        } else if (load_wallet_ret == DBErrors::NONCRITICAL_ERROR) {\n+            fprintf(stderr, \"Error reading %s! All keys read correctly, but transaction data\"\n+                            \" or address book entries might be missing or incorrect.\",\n+                name.c_str());\n+        } else if (load_wallet_ret == DBErrors::TOO_NEW) {\n+            fprintf(stderr, \"Error loading %s: Wallet requires newer version of %s\",\n+                name.c_str(), PACKAGE_NAME);\n+            return NULL;\n+        } else if (load_wallet_ret == DBErrors::NEED_REWRITE) {\n+            fprintf(stderr, \"Wallet needed to be rewritten: restart %s to complete\", PACKAGE_NAME);\n+            return NULL;\n+        } else {\n+            fprintf(stderr, \"Error loading %s\", name.c_str());\n+            return NULL;\n+        }\n+    }\n+\n+    return wallet_instance;\n+}\n+\n+static void WalletShowInfo(CWallet* wallet_instance)\n+{\n+    // lock required because of some AssertLockHeld()\n+    LOCK(wallet_instance->cs_wallet);\n+\n+    fprintf(stdout, \"Wallet info\\n===========\\n\");\n+    fprintf(stdout, \"Encrypted: %s\\n\", wallet_instance->IsCrypted() ? \"yes\" : \"no\");\n+    fprintf(stdout, \"HD (hd seed available): %s\\n\", wallet_instance->GetHDChain().seed_id.IsNull() ? \"no\" : \"yes\");\n+    fprintf(stdout, \"Keypool Size: %lu\\n\", (unsigned long)wallet_instance->GetKeyPoolSize());\n+    fprintf(stdout, \"Transactions: %lu\\n\", (unsigned long)wallet_instance->mapWallet.size());\n+    fprintf(stdout, \"Address Book: %lu\\n\", (unsigned long)wallet_instance->mapAddressBook.size());\n+}\n+\n+bool executeWalletToolFunc(const std::string& method, const std::string& name)\n+{\n+    fs::path path = fs::absolute(name, GetWalletDir());\n+\n+    if (method == \"create\") {\n+        CWallet* wallet_instance = CreateWallet(name, path);\n+        if (wallet_instance) {\n+            WalletShowInfo(wallet_instance);\n+            wallet_instance->Flush();\n+        }\n+    } else if (method == \"info\") {\n+        CWallet* wallet_instance = LoadWallet(name, path);\n+        if (!wallet_instance) return false;\n+        WalletShowInfo(wallet_instance);\n+        wallet_instance->Flush();\n+    } else if (method == \"salvage\") {\n+        // Recover readable keypairs:\n+        std::string error;\n+        if (!WalletBatch::VerifyEnvironment(path, error)) {\n+            fprintf(stderr, \"WalletBatch::VerifyEnvironment Error: %s\\n\", error.c_str());\n+            return false;\n+        }\n+\n+        CWallet dummyWallet(\"dummy\", WalletDatabase::CreateDummy());\n+        std::string backup_filename;\n+        if (!WalletBatch::Recover(path, (void*)&dummyWallet, WalletBatch::RecoverKeysOnlyFilter, backup_filename)) {\n+            fprintf(stderr, \"Salvage failed\\n\");\n+            return false;\n+        }\n+        //TODO, set wallets best block to genesis to enforce a rescan\n+        fprintf(stdout, \"Salvage successful. Please rescan your wallet.\\n\");\n+    } else if (method == \"zaptxs\") {\n+        // needed to restore wallet transaction meta data after -zapwallettxes\n+        std::vector<CWalletTx> vWtx;\n+\n+        std::unique_ptr<CWallet> tempWallet = MakeUnique<CWallet>(name, WalletDatabase::Create(path));\n+        DBErrors nZapWalletRet = tempWallet->ZapWalletTx(vWtx);\n+        if (nZapWalletRet != DBErrors::LOAD_OK) {\n+            fprintf(stderr, \"Error loading %s: Wallet corrupted\", name.c_str());\n+            return false;\n+        }\n+        fprintf(stdout, \"Zaptxs successful executed. Please rescan your wallet.\\n\");\n+    } else {\n+        fprintf(stderr, \"Unknown command\\n\");",
    "path": "src/wallet/wallettool.cpp",
    "position": null,
    "original_position": 129,
    "commit_id": "3c3e31c3a49c657093cacdff2c1c5e25363902ce",
    "original_commit_id": "f5cb78518a9ee5998a0a41c7df3375a70bf72f14",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "return false?",
    "created_at": "2018-09-10T20:59:53Z",
    "updated_at": "2019-01-30T21:27:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r216471081",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216471081"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r216471081"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216471081/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 139,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216570351",
    "pull_request_review_id": 154079809,
    "id": 216570351,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNjU3MDM1MQ==",
    "diff_hunk": "@@ -0,0 +1,103 @@\n+// Copyright (c) 2016 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <chainparams.h>\n+#include <chainparamsbase.h>\n+#include <consensus/consensus.h>\n+#include <logging.h>\n+#include <util.h>\n+#include <utilstrencodings.h>\n+#include <wallet/wallettool.h>\n+\n+#include <stdio.h>\n+\n+const std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n+\n+static void SetupWalletToolArgs()\n+{\n+    gArgs.AddArg(\"-?\", \"This help message\", false, OptionsCategory::OPTIONS);\n+    gArgs.AddArg(\"-name=<wallet-name>\", \"Specify wallet name\", false, OptionsCategory::OPTIONS);\n+\n+    gArgs.AddArg(\"info\", \"Get wallet info\", false, OptionsCategory::COMMANDS);\n+    gArgs.AddArg(\"create\", \"Create new wallet file\", false, OptionsCategory::COMMANDS);\n+    gArgs.AddArg(\"salvage\", \"Recover readable keypairs\", false, OptionsCategory::COMMANDS);\n+    gArgs.AddArg(\"zaptxs\", \"Remove all transactions including metadata (will keep keys)\", false, OptionsCategory::COMMANDS);\n+\n+    // Hidden\n+    gArgs.AddArg(\"-h\", \"\", false, OptionsCategory::HIDDEN);\n+    gArgs.AddArg(\"-help\", \"\", false, OptionsCategory::HIDDEN);\n+}\n+\n+static bool WalletAppInit(int argc, char* argv[])\n+{\n+    SetupWalletToolArgs();\n+    std::string error;\n+    if (!gArgs.ParseParameters(argc, argv, error)) {\n+        fprintf(stderr, \"Error parsing command line arguments: %s\\n\", error.c_str());\n+        return EXIT_FAILURE;\n+    }\n+    if (argc < 2 || HelpRequested(gArgs)) {\n+        std::string usage = strprintf(_(\"%s wallet-tool version\"), PACKAGE_NAME) + \" \" + FormatFullVersion() + \"\\n\" +",
    "path": "src/bitcoin-wallet-tool.cpp",
    "position": null,
    "original_position": 45,
    "commit_id": "3c3e31c3a49c657093cacdff2c1c5e25363902ce",
    "original_commit_id": "f5cb78518a9ee5998a0a41c7df3375a70bf72f14",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```\r\nbitcoin-wallet-tool.cpp:46:29: warning: variable 'usage' is uninitialized when used within its own initialization [-Wuninitialized]\r\n                            usage += \"\\n\" + _(\"Usage:\") + \"\\n\" +\r\n                            ^~~~~\r\n```\r\n\r\nShould be `;` instead of ` +` at the end of the line?",
    "created_at": "2018-09-11T07:31:31Z",
    "updated_at": "2019-01-30T21:27:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r216570351",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216570351"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r216570351"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216570351/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 45,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216570493",
    "pull_request_review_id": 154079979,
    "id": 216570493,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNjU3MDQ5Mw==",
    "diff_hunk": "@@ -0,0 +1,103 @@\n+// Copyright (c) 2016 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <chainparams.h>\n+#include <chainparamsbase.h>\n+#include <consensus/consensus.h>\n+#include <logging.h>\n+#include <util.h>\n+#include <utilstrencodings.h>\n+#include <wallet/wallettool.h>\n+\n+#include <stdio.h>\n+\n+const std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n+\n+static void SetupWalletToolArgs()\n+{\n+    gArgs.AddArg(\"-?\", \"This help message\", false, OptionsCategory::OPTIONS);\n+    gArgs.AddArg(\"-name=<wallet-name>\", \"Specify wallet name\", false, OptionsCategory::OPTIONS);\n+\n+    gArgs.AddArg(\"info\", \"Get wallet info\", false, OptionsCategory::COMMANDS);\n+    gArgs.AddArg(\"create\", \"Create new wallet file\", false, OptionsCategory::COMMANDS);\n+    gArgs.AddArg(\"salvage\", \"Recover readable keypairs\", false, OptionsCategory::COMMANDS);\n+    gArgs.AddArg(\"zaptxs\", \"Remove all transactions including metadata (will keep keys)\", false, OptionsCategory::COMMANDS);\n+\n+    // Hidden\n+    gArgs.AddArg(\"-h\", \"\", false, OptionsCategory::HIDDEN);\n+    gArgs.AddArg(\"-help\", \"\", false, OptionsCategory::HIDDEN);\n+}\n+\n+static bool WalletAppInit(int argc, char* argv[])\n+{\n+    SetupWalletToolArgs();\n+    std::string error;\n+    if (!gArgs.ParseParameters(argc, argv, error)) {\n+        fprintf(stderr, \"Error parsing command line arguments: %s\\n\", error.c_str());\n+        return EXIT_FAILURE;\n+    }\n+    if (argc < 2 || HelpRequested(gArgs)) {\n+        std::string usage = strprintf(_(\"%s wallet-tool version\"), PACKAGE_NAME) + \" \" + FormatFullVersion() + \"\\n\" +\n+                            usage += \"\\n\" + _(\"Usage:\") + \"\\n\" +\n+                                     \"  bitcoin-wallet-tool [options] <command>\\n\" +\n+                                     \"\\n\" + gArgs.GetHelpMessage();\n+\n+        fprintf(stdout, \"%s\", usage.c_str());\n+        return false;\n+    }\n+\n+    // check for printtoconsole, allow -debug\n+    g_logger->m_print_to_console = gArgs.GetBoolArg(\"-printtoconsole\", gArgs.GetBoolArg(\"-debug\", false));\n+\n+    // Check for -testnet or -regtest parameter (Params() calls are only valid after this clause)\n+    try {\n+        SelectParams(gArgs.GetChainName());\n+    } catch (const std::exception& e) {\n+        fprintf(stderr, \"Error: %s\\n\", e.what());\n+        return EXIT_FAILURE;\n+    }\n+\n+    return true;\n+}\n+\n+int main(int argc, char* argv[])\n+{\n+    SetupEnvironment();\n+    RandomInit();\n+    try {\n+        if (!WalletAppInit(argc, argv)) return EXIT_FAILURE;\n+    } catch (const std::exception& e) {\n+        PrintExceptionContinue(&e, \"WalletAppInit()\");\n+        return EXIT_FAILURE;\n+    } catch (...) {\n+        PrintExceptionContinue(NULL, \"WalletAppInit()\");\n+        return EXIT_FAILURE;\n+    }\n+\n+    while (argc > 1 && IsSwitchChar(argv[1][0])) {\n+        argc--;\n+        argv++;\n+    }\n+    std::vector<std::string> args = std::vector<std::string>(&argv[1], &argv[argc]);\n+    std::string method = args[0];\n+\n+    // A name must be provided when creating a file\n+    if (method == \"create\" && !gArgs.IsArgSet(\"-name\")) {\n+        fprintf(stderr, \"Wallet name must be provided when creating a new wallet.\\n\");\n+        return EXIT_FAILURE;\n+    }\n+\n+    std::string name = gArgs.GetArg(\"-name\", \"\");\n+\n+    ECCVerifyHandle globalVerifyHandle;\n+    ECC_Start();\n+    if (!WalletTool::executeWalletToolFunc(method, name))\n+        return EXIT_FAILURE;\n+    ECC_Stop();\n+    return true;",
    "path": "src/bitcoin-wallet-tool.cpp",
    "position": null,
    "original_position": 102,
    "commit_id": "3c3e31c3a49c657093cacdff2c1c5e25363902ce",
    "original_commit_id": "f5cb78518a9ee5998a0a41c7df3375a70bf72f14",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```\r\nbitcoin-wallet-tool.cpp:102:5: warning: bool literal returned from 'main' [-Wmain]\r\n    return true;\r\n    ^      ~~~~\r\n```",
    "created_at": "2018-09-11T07:32:09Z",
    "updated_at": "2019-01-30T21:27:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r216570493",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216570493"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r216570493"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216570493/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 102,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216570657",
    "pull_request_review_id": 154080185,
    "id": 216570657,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNjU3MDY1Nw==",
    "diff_hunk": "@@ -0,0 +1,134 @@\n+// Copyright (c) 2016 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <base58.h>\n+#include <fs.h>\n+#include <util.h>\n+#include <wallet/wallet.h>\n+#include <wallet/walletutil.h>\n+\n+namespace WalletTool {\n+\n+static CWallet* CreateWallet(const std::string& name, const fs::path& path)\n+{\n+    if (fs::exists(path)) {\n+        fprintf(stderr, \"Error: File exists already\\n\");\n+        return NULL;",
    "path": "src/wallet/wallettool.cpp",
    "position": null,
    "original_position": 17,
    "commit_id": "3c3e31c3a49c657093cacdff2c1c5e25363902ce",
    "original_commit_id": "f5cb78518a9ee5998a0a41c7df3375a70bf72f14",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```\r\nsrc/wallet/wallettool.cpp:17:16: warning: use nullptr [modernize-use-nullptr]\r\n```\r\n\r\nPlease replace `NULL` with `nullptr` throughout :-)",
    "created_at": "2018-09-11T07:32:54Z",
    "updated_at": "2019-01-30T21:27:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r216570657",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216570657"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r216570657"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216570657/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 17,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216571282",
    "pull_request_review_id": 154080938,
    "id": 216571282,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNjU3MTI4Mg==",
    "diff_hunk": "@@ -0,0 +1,134 @@\n+// Copyright (c) 2016 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <base58.h>\n+#include <fs.h>\n+#include <util.h>\n+#include <wallet/wallet.h>\n+#include <wallet/walletutil.h>\n+\n+namespace WalletTool {\n+\n+static CWallet* CreateWallet(const std::string& name, const fs::path& path)\n+{\n+    if (fs::exists(path)) {\n+        fprintf(stderr, \"Error: File exists already\\n\");\n+        return NULL;\n+    }\n+    CWallet* wallet_instance = new CWallet(name, WalletDatabase::Create(path));\n+    bool first_run = true;\n+    DBErrors load_wallet_ret = wallet_instance->LoadWallet(first_run);\n+    if (load_wallet_ret != DBErrors::LOAD_OK) {\n+        fprintf(stderr, \"Error creating %s\", name.c_str());\n+        return NULL;\n+    }\n+\n+    wallet_instance->SetMinVersion(FEATURE_HD_SPLIT);\n+\n+    // generate a new HD seed\n+    CPubKey seed = wallet_instance->GenerateNewSeed();\n+    wallet_instance->SetHDSeed(seed);\n+\n+    fprintf(stdout, \"Topping up keypool...\\n\");\n+    wallet_instance->TopUpKeyPool();\n+    return wallet_instance;\n+}\n+\n+static CWallet* LoadWallet(const std::string& name, const fs::path& path)\n+{\n+    if (!fs::exists(path)) {\n+        fprintf(stderr, \"Error: Wallet files does not exist\\n\");\n+        return NULL;\n+    }\n+\n+    CWallet* wallet_instance = new CWallet(name, WalletDatabase::Create(path));\n+    bool first_run;\n+    DBErrors load_wallet_ret = wallet_instance->LoadWallet(first_run);\n+    if (load_wallet_ret != DBErrors::LOAD_OK) {\n+        wallet_instance = NULL;\n+        if (load_wallet_ret == DBErrors::CORRUPT) {\n+            fprintf(stderr, \"Error loading %s: Wallet corrupted\", name.c_str());\n+            return NULL;\n+        } else if (load_wallet_ret == DBErrors::NONCRITICAL_ERROR) {\n+            fprintf(stderr, \"Error reading %s! All keys read correctly, but transaction data\"\n+                            \" or address book entries might be missing or incorrect.\",\n+                name.c_str());\n+        } else if (load_wallet_ret == DBErrors::TOO_NEW) {\n+            fprintf(stderr, \"Error loading %s: Wallet requires newer version of %s\",\n+                name.c_str(), PACKAGE_NAME);\n+            return NULL;\n+        } else if (load_wallet_ret == DBErrors::NEED_REWRITE) {\n+            fprintf(stderr, \"Wallet needed to be rewritten: restart %s to complete\", PACKAGE_NAME);\n+            return NULL;\n+        } else {\n+            fprintf(stderr, \"Error loading %s\", name.c_str());\n+            return NULL;\n+        }\n+    }\n+\n+    return wallet_instance;\n+}\n+\n+static void WalletShowInfo(CWallet* wallet_instance)\n+{\n+    // lock required because of some AssertLockHeld()\n+    LOCK(wallet_instance->cs_wallet);\n+\n+    fprintf(stdout, \"Wallet info\\n===========\\n\");\n+    fprintf(stdout, \"Encrypted: %s\\n\", wallet_instance->IsCrypted() ? \"yes\" : \"no\");\n+    fprintf(stdout, \"HD (hd seed available): %s\\n\", wallet_instance->GetHDChain().seed_id.IsNull() ? \"no\" : \"yes\");\n+    fprintf(stdout, \"Keypool Size: %lu\\n\", (unsigned long)wallet_instance->GetKeyPoolSize());",
    "path": "src/wallet/wallettool.cpp",
    "position": null,
    "original_position": 81,
    "commit_id": "3c3e31c3a49c657093cacdff2c1c5e25363902ce",
    "original_commit_id": "f5cb78518a9ee5998a0a41c7df3375a70bf72f14",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Why the cast?",
    "created_at": "2018-09-11T07:35:27Z",
    "updated_at": "2019-01-30T21:27:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r216571282",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216571282"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r216571282"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216571282/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 81,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216779616",
    "pull_request_review_id": 154343537,
    "id": 216779616,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNjc3OTYxNg==",
    "diff_hunk": "@@ -0,0 +1,134 @@\n+// Copyright (c) 2016 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <base58.h>\n+#include <fs.h>\n+#include <util.h>\n+#include <wallet/wallet.h>\n+#include <wallet/walletutil.h>\n+\n+namespace WalletTool {\n+\n+static CWallet* CreateWallet(const std::string& name, const fs::path& path)\n+{\n+    if (fs::exists(path)) {\n+        fprintf(stderr, \"Error: File exists already\\n\");\n+        return NULL;\n+    }\n+    CWallet* wallet_instance = new CWallet(name, WalletDatabase::Create(path));\n+    bool first_run = true;\n+    DBErrors load_wallet_ret = wallet_instance->LoadWallet(first_run);\n+    if (load_wallet_ret != DBErrors::LOAD_OK) {\n+        fprintf(stderr, \"Error creating %s\", name.c_str());\n+        return NULL;\n+    }\n+\n+    wallet_instance->SetMinVersion(FEATURE_HD_SPLIT);\n+\n+    // generate a new HD seed\n+    CPubKey seed = wallet_instance->GenerateNewSeed();\n+    wallet_instance->SetHDSeed(seed);\n+\n+    fprintf(stdout, \"Topping up keypool...\\n\");\n+    wallet_instance->TopUpKeyPool();\n+    return wallet_instance;\n+}\n+\n+static CWallet* LoadWallet(const std::string& name, const fs::path& path)\n+{\n+    if (!fs::exists(path)) {\n+        fprintf(stderr, \"Error: Wallet files does not exist\\n\");\n+        return NULL;\n+    }\n+\n+    CWallet* wallet_instance = new CWallet(name, WalletDatabase::Create(path));\n+    bool first_run;\n+    DBErrors load_wallet_ret = wallet_instance->LoadWallet(first_run);\n+    if (load_wallet_ret != DBErrors::LOAD_OK) {\n+        wallet_instance = NULL;\n+        if (load_wallet_ret == DBErrors::CORRUPT) {\n+            fprintf(stderr, \"Error loading %s: Wallet corrupted\", name.c_str());\n+            return NULL;\n+        } else if (load_wallet_ret == DBErrors::NONCRITICAL_ERROR) {\n+            fprintf(stderr, \"Error reading %s! All keys read correctly, but transaction data\"\n+                            \" or address book entries might be missing or incorrect.\",\n+                name.c_str());\n+        } else if (load_wallet_ret == DBErrors::TOO_NEW) {\n+            fprintf(stderr, \"Error loading %s: Wallet requires newer version of %s\",\n+                name.c_str(), PACKAGE_NAME);\n+            return NULL;\n+        } else if (load_wallet_ret == DBErrors::NEED_REWRITE) {\n+            fprintf(stderr, \"Wallet needed to be rewritten: restart %s to complete\", PACKAGE_NAME);\n+            return NULL;\n+        } else {\n+            fprintf(stderr, \"Error loading %s\", name.c_str());\n+            return NULL;\n+        }\n+    }\n+\n+    return wallet_instance;\n+}\n+\n+static void WalletShowInfo(CWallet* wallet_instance)\n+{\n+    // lock required because of some AssertLockHeld()\n+    LOCK(wallet_instance->cs_wallet);\n+\n+    fprintf(stdout, \"Wallet info\\n===========\\n\");\n+    fprintf(stdout, \"Encrypted: %s\\n\", wallet_instance->IsCrypted() ? \"yes\" : \"no\");\n+    fprintf(stdout, \"HD (hd seed available): %s\\n\", wallet_instance->GetHDChain().seed_id.IsNull() ? \"no\" : \"yes\");\n+    fprintf(stdout, \"Keypool Size: %lu\\n\", (unsigned long)wallet_instance->GetKeyPoolSize());\n+    fprintf(stdout, \"Transactions: %lu\\n\", (unsigned long)wallet_instance->mapWallet.size());\n+    fprintf(stdout, \"Address Book: %lu\\n\", (unsigned long)wallet_instance->mapAddressBook.size());\n+}\n+\n+bool executeWalletToolFunc(const std::string& method, const std::string& name)\n+{\n+    fs::path path = fs::absolute(name, GetWalletDir());\n+\n+    if (method == \"create\") {\n+        CWallet* wallet_instance = CreateWallet(name, path);\n+        if (wallet_instance) {\n+            WalletShowInfo(wallet_instance);\n+            wallet_instance->Flush();\n+        }\n+    } else if (method == \"info\") {\n+        CWallet* wallet_instance = LoadWallet(name, path);\n+        if (!wallet_instance) return false;\n+        WalletShowInfo(wallet_instance);\n+        wallet_instance->Flush();\n+    } else if (method == \"salvage\") {\n+        // Recover readable keypairs:\n+        std::string error;\n+        if (!WalletBatch::VerifyEnvironment(path, error)) {\n+            fprintf(stderr, \"WalletBatch::VerifyEnvironment Error: %s\\n\", error.c_str());\n+            return false;\n+        }\n+\n+        CWallet dummyWallet(\"dummy\", WalletDatabase::CreateDummy());\n+        std::string backup_filename;\n+        if (!WalletBatch::Recover(path, (void*)&dummyWallet, WalletBatch::RecoverKeysOnlyFilter, backup_filename)) {\n+            fprintf(stderr, \"Salvage failed\\n\");\n+            return false;\n+        }\n+        //TODO, set wallets best block to genesis to enforce a rescan\n+        fprintf(stdout, \"Salvage successful. Please rescan your wallet.\\n\");\n+    } else if (method == \"zaptxs\") {\n+        // needed to restore wallet transaction meta data after -zapwallettxes\n+        std::vector<CWalletTx> vWtx;\n+\n+        std::unique_ptr<CWallet> tempWallet = MakeUnique<CWallet>(name, WalletDatabase::Create(path));\n+        DBErrors nZapWalletRet = tempWallet->ZapWalletTx(vWtx);\n+        if (nZapWalletRet != DBErrors::LOAD_OK) {\n+            fprintf(stderr, \"Error loading %s: Wallet corrupted\", name.c_str());\n+            return false;\n+        }\n+        fprintf(stdout, \"Zaptxs successful executed. Please rescan your wallet.\\n\");\n+    } else {\n+        fprintf(stderr, \"Unknown command\\n\");",
    "path": "src/wallet/wallettool.cpp",
    "position": null,
    "original_position": 129,
    "commit_id": "3c3e31c3a49c657093cacdff2c1c5e25363902ce",
    "original_commit_id": "f5cb78518a9ee5998a0a41c7df3375a70bf72f14",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "done",
    "created_at": "2018-09-11T18:46:25Z",
    "updated_at": "2019-01-30T21:27:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r216779616",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216779616"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r216779616"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/216779616/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 139,
    "side": "RIGHT",
    "in_reply_to_id": 216471081
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217175217",
    "pull_request_review_id": 154827135,
    "id": 217175217,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzE3NTIxNw==",
    "diff_hunk": "@@ -0,0 +1,135 @@\n+// Copyright (c) 2016-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <base58.h>\n+#include <fs.h>\n+#include <util.h>\n+#include <wallet/wallet.h>\n+#include <wallet/walletutil.h>\n+\n+namespace WalletTool {\n+\n+static CWallet* CreateWallet(const std::string& name, const fs::path& path)\n+{\n+    if (fs::exists(path)) {\n+        fprintf(stderr, \"Error: File exists already\\n\");\n+        return nullptr;\n+    }\n+    CWallet* wallet_instance = new CWallet(name, WalletDatabase::Create(path));\n+    bool first_run = true;\n+    DBErrors load_wallet_ret = wallet_instance->LoadWallet(first_run);\n+    if (load_wallet_ret != DBErrors::LOAD_OK) {\n+        fprintf(stderr, \"Error creating %s\", name.c_str());\n+        return nullptr;\n+    }\n+\n+    wallet_instance->SetMinVersion(FEATURE_HD_SPLIT);\n+\n+    // generate a new HD seed\n+    CPubKey seed = wallet_instance->GenerateNewSeed();\n+    wallet_instance->SetHDSeed(seed);\n+\n+    fprintf(stdout, \"Topping up keypool...\\n\");\n+    wallet_instance->TopUpKeyPool();\n+    return wallet_instance;\n+}\n+\n+static CWallet* LoadWallet(const std::string& name, const fs::path& path)\n+{\n+    if (!fs::exists(path)) {\n+        fprintf(stderr, \"Error: Wallet files does not exist\\n\");\n+        return nullptr;\n+    }\n+\n+    CWallet* wallet_instance = new CWallet(name, WalletDatabase::Create(path));\n+    bool first_run;\n+    DBErrors load_wallet_ret = wallet_instance->LoadWallet(first_run);\n+    if (load_wallet_ret != DBErrors::LOAD_OK) {\n+        wallet_instance = nullptr;\n+        if (load_wallet_ret == DBErrors::CORRUPT) {\n+            fprintf(stderr, \"Error loading %s: Wallet corrupted\", name.c_str());\n+            return nullptr;\n+        } else if (load_wallet_ret == DBErrors::NONCRITICAL_ERROR) {\n+            fprintf(stderr, \"Error reading %s! All keys read correctly, but transaction data\"\n+                            \" or address book entries might be missing or incorrect.\",\n+                name.c_str());\n+        } else if (load_wallet_ret == DBErrors::TOO_NEW) {\n+            fprintf(stderr, \"Error loading %s: Wallet requires newer version of %s\",\n+                name.c_str(), PACKAGE_NAME);\n+            return nullptr;\n+        } else if (load_wallet_ret == DBErrors::NEED_REWRITE) {\n+            fprintf(stderr, \"Wallet needed to be rewritten: restart %s to complete\", PACKAGE_NAME);\n+            return nullptr;\n+        } else {\n+            fprintf(stderr, \"Error loading %s\", name.c_str());\n+            return nullptr;\n+        }\n+    }\n+\n+    return wallet_instance;\n+}\n+\n+static void WalletShowInfo(CWallet* wallet_instance)\n+{\n+    // lock required because of some AssertLockHeld()\n+    LOCK(wallet_instance->cs_wallet);\n+\n+    fprintf(stdout, \"Wallet info\\n===========\\n\");\n+    fprintf(stdout, \"Encrypted: %s\\n\", wallet_instance->IsCrypted() ? \"yes\" : \"no\");\n+    fprintf(stdout, \"HD (hd seed available): %s\\n\", wallet_instance->GetHDChain().seed_id.IsNull() ? \"no\" : \"yes\");\n+    fprintf(stdout, \"Keypool Size: %u\\n\", wallet_instance->GetKeyPoolSize());\n+    fprintf(stdout, \"Transactions: %zu\\n\", wallet_instance->mapWallet.size());\n+    fprintf(stdout, \"Address Book: %zu\\n\", wallet_instance->mapAddressBook.size());\n+}\n+\n+bool executeWalletToolFunc(const std::string& method, const std::string& name)\n+{\n+    fs::path path = fs::absolute(name, GetWalletDir());\n+\n+    if (method == \"create\") {\n+        CWallet* wallet_instance = CreateWallet(name, path);",
    "path": "src/wallet/wallettool.cpp",
    "position": null,
    "original_position": 91,
    "commit_id": "3c3e31c3a49c657093cacdff2c1c5e25363902ce",
    "original_commit_id": "7c9a7d2ece9d932f9fa2c42d0836011b11aca212",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "`wallet_instance` leaks?",
    "created_at": "2018-09-12T20:21:46Z",
    "updated_at": "2019-01-30T21:27:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r217175217",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217175217"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r217175217"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217175217/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 91,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217175271",
    "pull_request_review_id": 154827206,
    "id": 217175271,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzE3NTI3MQ==",
    "diff_hunk": "@@ -0,0 +1,135 @@\n+// Copyright (c) 2016-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <base58.h>\n+#include <fs.h>\n+#include <util.h>\n+#include <wallet/wallet.h>\n+#include <wallet/walletutil.h>\n+\n+namespace WalletTool {\n+\n+static CWallet* CreateWallet(const std::string& name, const fs::path& path)\n+{\n+    if (fs::exists(path)) {\n+        fprintf(stderr, \"Error: File exists already\\n\");\n+        return nullptr;\n+    }\n+    CWallet* wallet_instance = new CWallet(name, WalletDatabase::Create(path));\n+    bool first_run = true;\n+    DBErrors load_wallet_ret = wallet_instance->LoadWallet(first_run);\n+    if (load_wallet_ret != DBErrors::LOAD_OK) {\n+        fprintf(stderr, \"Error creating %s\", name.c_str());\n+        return nullptr;\n+    }\n+\n+    wallet_instance->SetMinVersion(FEATURE_HD_SPLIT);\n+\n+    // generate a new HD seed\n+    CPubKey seed = wallet_instance->GenerateNewSeed();\n+    wallet_instance->SetHDSeed(seed);\n+\n+    fprintf(stdout, \"Topping up keypool...\\n\");\n+    wallet_instance->TopUpKeyPool();\n+    return wallet_instance;\n+}\n+\n+static CWallet* LoadWallet(const std::string& name, const fs::path& path)\n+{\n+    if (!fs::exists(path)) {\n+        fprintf(stderr, \"Error: Wallet files does not exist\\n\");\n+        return nullptr;\n+    }\n+\n+    CWallet* wallet_instance = new CWallet(name, WalletDatabase::Create(path));\n+    bool first_run;\n+    DBErrors load_wallet_ret = wallet_instance->LoadWallet(first_run);\n+    if (load_wallet_ret != DBErrors::LOAD_OK) {\n+        wallet_instance = nullptr;\n+        if (load_wallet_ret == DBErrors::CORRUPT) {\n+            fprintf(stderr, \"Error loading %s: Wallet corrupted\", name.c_str());\n+            return nullptr;\n+        } else if (load_wallet_ret == DBErrors::NONCRITICAL_ERROR) {\n+            fprintf(stderr, \"Error reading %s! All keys read correctly, but transaction data\"\n+                            \" or address book entries might be missing or incorrect.\",\n+                name.c_str());\n+        } else if (load_wallet_ret == DBErrors::TOO_NEW) {\n+            fprintf(stderr, \"Error loading %s: Wallet requires newer version of %s\",\n+                name.c_str(), PACKAGE_NAME);\n+            return nullptr;\n+        } else if (load_wallet_ret == DBErrors::NEED_REWRITE) {\n+            fprintf(stderr, \"Wallet needed to be rewritten: restart %s to complete\", PACKAGE_NAME);\n+            return nullptr;\n+        } else {\n+            fprintf(stderr, \"Error loading %s\", name.c_str());\n+            return nullptr;\n+        }\n+    }\n+\n+    return wallet_instance;\n+}\n+\n+static void WalletShowInfo(CWallet* wallet_instance)\n+{\n+    // lock required because of some AssertLockHeld()\n+    LOCK(wallet_instance->cs_wallet);\n+\n+    fprintf(stdout, \"Wallet info\\n===========\\n\");\n+    fprintf(stdout, \"Encrypted: %s\\n\", wallet_instance->IsCrypted() ? \"yes\" : \"no\");\n+    fprintf(stdout, \"HD (hd seed available): %s\\n\", wallet_instance->GetHDChain().seed_id.IsNull() ? \"no\" : \"yes\");\n+    fprintf(stdout, \"Keypool Size: %u\\n\", wallet_instance->GetKeyPoolSize());\n+    fprintf(stdout, \"Transactions: %zu\\n\", wallet_instance->mapWallet.size());\n+    fprintf(stdout, \"Address Book: %zu\\n\", wallet_instance->mapAddressBook.size());\n+}\n+\n+bool executeWalletToolFunc(const std::string& method, const std::string& name)\n+{\n+    fs::path path = fs::absolute(name, GetWalletDir());\n+\n+    if (method == \"create\") {\n+        CWallet* wallet_instance = CreateWallet(name, path);\n+        if (wallet_instance) {\n+            WalletShowInfo(wallet_instance);\n+            wallet_instance->Flush();\n+        }\n+    } else if (method == \"info\") {\n+        CWallet* wallet_instance = LoadWallet(name, path);",
    "path": "src/wallet/wallettool.cpp",
    "position": null,
    "original_position": 97,
    "commit_id": "3c3e31c3a49c657093cacdff2c1c5e25363902ce",
    "original_commit_id": "7c9a7d2ece9d932f9fa2c42d0836011b11aca212",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "`wallet_instance` leaks?",
    "created_at": "2018-09-12T20:21:58Z",
    "updated_at": "2019-01-30T21:27:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r217175271",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217175271"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r217175271"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217175271/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 97,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217413912",
    "pull_request_review_id": 155120156,
    "id": 217413912,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzQxMzkxMg==",
    "diff_hunk": "@@ -505,6 +517,34 @@ bitcoin_tx_LDADD = \\\n bitcoin_tx_LDADD += $(BOOST_LIBS) $(CRYPTO_LIBS)\n #\n \n+# bitcoin-wallet-tool binary #\n+bitcoin_wallet_tool_SOURCES = bitcoin-wallet-tool.cpp\n+bitcoin_wallet_tool_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n+bitcoin_wallet_tool_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+bitcoin_wallet_tool_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+\n+if TARGET_WINDOWS\n+bitcoin_wallet_tool_SOURCES += bitcoin-wallet-tool-res.rc\n+endif\n+\n+bitcoin_wallet_tool_LDADD = \\\n+  $(LIBBITCOIN_WALLET_TOOL) \\\n+  $(LIBBITCOIN_WALLET) \\\n+  $(LIBBITCOIN_SERVER) \\\n+  $(LIBBITCOIN_COMMON) \\\n+  $(LIBBITCOIN_CONSENSUS) \\\n+  $(LIBBITCOIN_UTIL) \\\n+  $(LIBBITCOIN_CRYPTO) \\\n+  $(LIBUNIVALUE) \\\n+  $(LIBBITCOIN_ZMQ) \\\n+  $(LIBLEVELDB) \\\n+  $(LIBLEVELDB_SSE42) \\\n+  $(LIBMEMENV) \\\n+  $(LIBSECP256K1)\n+\n+bitcoin_wallet_tool_LDADD += $(BOOST_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS) $(ZMQ_LIBS)",
    "path": "src/Makefile.am",
    "position": null,
    "original_position": 76,
    "commit_id": "3c3e31c3a49c657093cacdff2c1c5e25363902ce",
    "original_commit_id": "f81d8c8ad4718e2158434bf330962a08d9219b61",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "No need to attempt to link `SSL_LIBS`. If the tool wanted to upload the private keys, might as well do it without TLS",
    "created_at": "2018-09-13T14:49:39Z",
    "updated_at": "2019-01-30T21:27:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r217413912",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217413912"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r217413912"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217413912/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 545,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217414140",
    "pull_request_review_id": 155120481,
    "id": 217414140,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzQxNDE0MA==",
    "diff_hunk": "@@ -505,6 +517,34 @@ bitcoin_tx_LDADD = \\\n bitcoin_tx_LDADD += $(BOOST_LIBS) $(CRYPTO_LIBS)\n #\n \n+# bitcoin-wallet-tool binary #\n+bitcoin_wallet_tool_SOURCES = bitcoin-wallet-tool.cpp\n+bitcoin_wallet_tool_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n+bitcoin_wallet_tool_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+bitcoin_wallet_tool_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+\n+if TARGET_WINDOWS\n+bitcoin_wallet_tool_SOURCES += bitcoin-wallet-tool-res.rc\n+endif\n+\n+bitcoin_wallet_tool_LDADD = \\\n+  $(LIBBITCOIN_WALLET_TOOL) \\\n+  $(LIBBITCOIN_WALLET) \\\n+  $(LIBBITCOIN_SERVER) \\\n+  $(LIBBITCOIN_COMMON) \\\n+  $(LIBBITCOIN_CONSENSUS) \\\n+  $(LIBBITCOIN_UTIL) \\\n+  $(LIBBITCOIN_CRYPTO) \\\n+  $(LIBUNIVALUE) \\\n+  $(LIBBITCOIN_ZMQ) \\\n+  $(LIBLEVELDB) \\\n+  $(LIBLEVELDB_SSE42) \\\n+  $(LIBMEMENV) \\\n+  $(LIBSECP256K1)\n+\n+bitcoin_wallet_tool_LDADD += $(BOOST_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS) $(ZMQ_LIBS)",
    "path": "src/Makefile.am",
    "position": null,
    "original_position": 76,
    "commit_id": "3c3e31c3a49c657093cacdff2c1c5e25363902ce",
    "original_commit_id": "f81d8c8ad4718e2158434bf330962a08d9219b61",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Probably the same for `$(MINIUPNPC_LIBS) $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS) $(ZMQ_LIBS)`?",
    "created_at": "2018-09-13T14:50:14Z",
    "updated_at": "2019-01-30T21:27:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r217414140",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217414140"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r217414140"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217414140/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 545,
    "side": "RIGHT",
    "in_reply_to_id": 217413912
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217424343",
    "pull_request_review_id": 155133072,
    "id": 217424343,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzQyNDM0Mw==",
    "diff_hunk": "@@ -505,6 +517,34 @@ bitcoin_tx_LDADD = \\\n bitcoin_tx_LDADD += $(BOOST_LIBS) $(CRYPTO_LIBS)\n #\n \n+# bitcoin-wallet-tool binary #\n+bitcoin_wallet_tool_SOURCES = bitcoin-wallet-tool.cpp\n+bitcoin_wallet_tool_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n+bitcoin_wallet_tool_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+bitcoin_wallet_tool_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+\n+if TARGET_WINDOWS\n+bitcoin_wallet_tool_SOURCES += bitcoin-wallet-tool-res.rc\n+endif\n+\n+bitcoin_wallet_tool_LDADD = \\\n+  $(LIBBITCOIN_WALLET_TOOL) \\\n+  $(LIBBITCOIN_WALLET) \\\n+  $(LIBBITCOIN_SERVER) \\\n+  $(LIBBITCOIN_COMMON) \\\n+  $(LIBBITCOIN_CONSENSUS) \\\n+  $(LIBBITCOIN_UTIL) \\\n+  $(LIBBITCOIN_CRYPTO) \\\n+  $(LIBUNIVALUE) \\\n+  $(LIBBITCOIN_ZMQ) \\\n+  $(LIBLEVELDB) \\\n+  $(LIBLEVELDB_SSE42) \\\n+  $(LIBMEMENV) \\\n+  $(LIBSECP256K1)\n+\n+bitcoin_wallet_tool_LDADD += $(BOOST_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS) $(ZMQ_LIBS)",
    "path": "src/Makefile.am",
    "position": null,
    "original_position": 76,
    "commit_id": "3c3e31c3a49c657093cacdff2c1c5e25363902ce",
    "original_commit_id": "f81d8c8ad4718e2158434bf330962a08d9219b61",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Thanks Marco. Fixed.",
    "created_at": "2018-09-13T15:15:03Z",
    "updated_at": "2019-01-30T21:27:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r217424343",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217424343"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r217424343"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217424343/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 545,
    "side": "RIGHT",
    "in_reply_to_id": 217413912
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/218943652",
    "pull_request_review_id": 156996373,
    "id": 218943652,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxODk0MzY1Mg==",
    "diff_hunk": "@@ -0,0 +1,145 @@\n+// Copyright (c) 2016-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <base58.h>\n+#include <fs.h>\n+#include <util.h>\n+#include <wallet/wallet.h>\n+#include <wallet/walletutil.h>\n+\n+namespace WalletTool {\n+\n+// The standard wallet deleter function blocks on the validation interface\n+// queue, which doesn't exist for the bitcoin-wallet-tool. Define our own\n+// deleter here.\n+static void WalletToolReleaseWallet(CWallet* wallet)\n+{\n+    wallet->WalletLogPrintf(\"Releasing wallet\\n\");\n+    wallet->Flush();\n+    delete wallet;\n+}\n+\n+static std::shared_ptr<CWallet> CreateWallet(const std::string& name, const fs::path& path)\n+{\n+    if (fs::exists(path)) {\n+        fprintf(stderr, \"Error: File exists already\\n\");\n+        return nullptr;\n+    }\n+    std::shared_ptr<CWallet> wallet_instance(new CWallet(name, WalletDatabase::Create(path)), WalletToolReleaseWallet);\n+    bool first_run = true;\n+    DBErrors load_wallet_ret = wallet_instance->LoadWallet(first_run);\n+    if (load_wallet_ret != DBErrors::LOAD_OK) {\n+        fprintf(stderr, \"Error creating %s\", name.c_str());\n+        return nullptr;\n+    }\n+\n+    wallet_instance->SetMinVersion(FEATURE_HD_SPLIT);\n+\n+    // generate a new HD seed\n+    CPubKey seed = wallet_instance->GenerateNewSeed();\n+    wallet_instance->SetHDSeed(seed);\n+\n+    fprintf(stdout, \"Topping up keypool...\\n\");\n+    wallet_instance->TopUpKeyPool();\n+    return wallet_instance;\n+}\n+\n+static std::shared_ptr<CWallet> LoadWallet(const std::string& name, const fs::path& path)\n+{\n+    if (!fs::exists(path)) {\n+        fprintf(stderr, \"Error: Wallet files does not exist\\n\");\n+        return nullptr;\n+    }\n+\n+    std::shared_ptr<CWallet> wallet_instance(new CWallet(name, WalletDatabase::Create(path)), WalletToolReleaseWallet);\n+    bool first_run;\n+    DBErrors load_wallet_ret = wallet_instance->LoadWallet(first_run);\n+    if (load_wallet_ret != DBErrors::LOAD_OK) {\n+        wallet_instance = nullptr;\n+        if (load_wallet_ret == DBErrors::CORRUPT) {\n+            fprintf(stderr, \"Error loading %s: Wallet corrupted\", name.c_str());\n+            return nullptr;\n+        } else if (load_wallet_ret == DBErrors::NONCRITICAL_ERROR) {\n+            fprintf(stderr, \"Error reading %s! All keys read correctly, but transaction data\"\n+                            \" or address book entries might be missing or incorrect.\",\n+                name.c_str());\n+        } else if (load_wallet_ret == DBErrors::TOO_NEW) {\n+            fprintf(stderr, \"Error loading %s: Wallet requires newer version of %s\",\n+                name.c_str(), PACKAGE_NAME);\n+            return nullptr;\n+        } else if (load_wallet_ret == DBErrors::NEED_REWRITE) {\n+            fprintf(stderr, \"Wallet needed to be rewritten: restart %s to complete\", PACKAGE_NAME);\n+            return nullptr;\n+        } else {\n+            fprintf(stderr, \"Error loading %s\", name.c_str());\n+            return nullptr;\n+        }\n+    }\n+\n+    return wallet_instance;\n+}\n+\n+static void WalletShowInfo(CWallet* wallet_instance)\n+{\n+    // lock required because of some AssertLockHeld()\n+    LOCK(wallet_instance->cs_wallet);\n+\n+    fprintf(stdout, \"Wallet info\\n===========\\n\");\n+    fprintf(stdout, \"Encrypted: %s\\n\", wallet_instance->IsCrypted() ? \"yes\" : \"no\");\n+    fprintf(stdout, \"HD (hd seed available): %s\\n\", wallet_instance->GetHDChain().seed_id.IsNull() ? \"no\" : \"yes\");\n+    fprintf(stdout, \"Keypool Size: %u\\n\", wallet_instance->GetKeyPoolSize());\n+    fprintf(stdout, \"Transactions: %zu\\n\", wallet_instance->mapWallet.size());\n+    fprintf(stdout, \"Address Book: %zu\\n\", wallet_instance->mapAddressBook.size());\n+}\n+\n+bool executeWalletToolFunc(const std::string& method, const std::string& name)",
    "path": "src/wallet/wallettool.cpp",
    "position": null,
    "original_position": 96,
    "commit_id": "3c3e31c3a49c657093cacdff2c1c5e25363902ce",
    "original_commit_id": "db2678145afc6d1a99d745b43f06e92169e10e6f",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit, s/method/command?",
    "created_at": "2018-09-19T19:59:25Z",
    "updated_at": "2019-01-30T21:27:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r218943652",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/218943652"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r218943652"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/218943652/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 96,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/218943852",
    "pull_request_review_id": 156996373,
    "id": 218943852,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxODk0Mzg1Mg==",
    "diff_hunk": "@@ -0,0 +1,145 @@\n+// Copyright (c) 2016-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <base58.h>\n+#include <fs.h>\n+#include <util.h>\n+#include <wallet/wallet.h>\n+#include <wallet/walletutil.h>\n+\n+namespace WalletTool {\n+\n+// The standard wallet deleter function blocks on the validation interface\n+// queue, which doesn't exist for the bitcoin-wallet-tool. Define our own\n+// deleter here.\n+static void WalletToolReleaseWallet(CWallet* wallet)\n+{\n+    wallet->WalletLogPrintf(\"Releasing wallet\\n\");\n+    wallet->Flush();\n+    delete wallet;\n+}\n+\n+static std::shared_ptr<CWallet> CreateWallet(const std::string& name, const fs::path& path)\n+{\n+    if (fs::exists(path)) {\n+        fprintf(stderr, \"Error: File exists already\\n\");\n+        return nullptr;\n+    }\n+    std::shared_ptr<CWallet> wallet_instance(new CWallet(name, WalletDatabase::Create(path)), WalletToolReleaseWallet);\n+    bool first_run = true;\n+    DBErrors load_wallet_ret = wallet_instance->LoadWallet(first_run);\n+    if (load_wallet_ret != DBErrors::LOAD_OK) {\n+        fprintf(stderr, \"Error creating %s\", name.c_str());\n+        return nullptr;\n+    }\n+\n+    wallet_instance->SetMinVersion(FEATURE_HD_SPLIT);\n+\n+    // generate a new HD seed\n+    CPubKey seed = wallet_instance->GenerateNewSeed();\n+    wallet_instance->SetHDSeed(seed);\n+\n+    fprintf(stdout, \"Topping up keypool...\\n\");\n+    wallet_instance->TopUpKeyPool();\n+    return wallet_instance;\n+}\n+\n+static std::shared_ptr<CWallet> LoadWallet(const std::string& name, const fs::path& path)\n+{\n+    if (!fs::exists(path)) {\n+        fprintf(stderr, \"Error: Wallet files does not exist\\n\");\n+        return nullptr;\n+    }\n+\n+    std::shared_ptr<CWallet> wallet_instance(new CWallet(name, WalletDatabase::Create(path)), WalletToolReleaseWallet);\n+    bool first_run;\n+    DBErrors load_wallet_ret = wallet_instance->LoadWallet(first_run);\n+    if (load_wallet_ret != DBErrors::LOAD_OK) {\n+        wallet_instance = nullptr;\n+        if (load_wallet_ret == DBErrors::CORRUPT) {\n+            fprintf(stderr, \"Error loading %s: Wallet corrupted\", name.c_str());\n+            return nullptr;\n+        } else if (load_wallet_ret == DBErrors::NONCRITICAL_ERROR) {\n+            fprintf(stderr, \"Error reading %s! All keys read correctly, but transaction data\"\n+                            \" or address book entries might be missing or incorrect.\",\n+                name.c_str());\n+        } else if (load_wallet_ret == DBErrors::TOO_NEW) {\n+            fprintf(stderr, \"Error loading %s: Wallet requires newer version of %s\",\n+                name.c_str(), PACKAGE_NAME);\n+            return nullptr;\n+        } else if (load_wallet_ret == DBErrors::NEED_REWRITE) {\n+            fprintf(stderr, \"Wallet needed to be rewritten: restart %s to complete\", PACKAGE_NAME);\n+            return nullptr;\n+        } else {\n+            fprintf(stderr, \"Error loading %s\", name.c_str());\n+            return nullptr;\n+        }\n+    }\n+\n+    return wallet_instance;\n+}\n+\n+static void WalletShowInfo(CWallet* wallet_instance)\n+{\n+    // lock required because of some AssertLockHeld()\n+    LOCK(wallet_instance->cs_wallet);\n+\n+    fprintf(stdout, \"Wallet info\\n===========\\n\");\n+    fprintf(stdout, \"Encrypted: %s\\n\", wallet_instance->IsCrypted() ? \"yes\" : \"no\");\n+    fprintf(stdout, \"HD (hd seed available): %s\\n\", wallet_instance->GetHDChain().seed_id.IsNull() ? \"no\" : \"yes\");\n+    fprintf(stdout, \"Keypool Size: %u\\n\", wallet_instance->GetKeyPoolSize());\n+    fprintf(stdout, \"Transactions: %zu\\n\", wallet_instance->mapWallet.size());\n+    fprintf(stdout, \"Address Book: %zu\\n\", wallet_instance->mapAddressBook.size());\n+}\n+\n+bool executeWalletToolFunc(const std::string& method, const std::string& name)\n+{\n+    fs::path path = fs::absolute(name, GetWalletDir());\n+\n+    if (method == \"create\") {\n+        std::shared_ptr<CWallet> wallet_instance = CreateWallet(name, path);\n+        if (wallet_instance) {\n+            WalletShowInfo(wallet_instance.get());\n+            wallet_instance->Flush();\n+        }\n+    } else if (method == \"info\") {\n+        std::shared_ptr<CWallet> wallet_instance = LoadWallet(name, path);\n+        if (!wallet_instance) return false;\n+        WalletShowInfo(wallet_instance.get());\n+        wallet_instance->Flush();\n+    } else if (method == \"salvage\") {\n+        // Recover readable keypairs:\n+        std::string error;\n+        if (!WalletBatch::VerifyEnvironment(path, error)) {\n+            fprintf(stderr, \"WalletBatch::VerifyEnvironment Error: %s\\n\", error.c_str());\n+            return false;\n+        }\n+\n+        CWallet dummyWallet(\"dummy\", WalletDatabase::CreateDummy());\n+        std::string backup_filename;\n+        if (!WalletBatch::Recover(path, (void*)&dummyWallet, WalletBatch::RecoverKeysOnlyFilter, backup_filename)) {\n+            fprintf(stderr, \"Salvage failed\\n\");\n+            return false;\n+        }\n+        //TODO, set wallets best block to genesis to enforce a rescan\n+        fprintf(stdout, \"Salvage successful. Please rescan your wallet.\\n\");\n+    } else if (method == \"zaptxs\") {\n+        // needed to restore wallet transaction meta data after -zapwallettxes\n+        std::vector<CWalletTx> vWtx;\n+\n+        std::unique_ptr<CWallet> tempWallet = MakeUnique<CWallet>(name, WalletDatabase::Create(path));\n+        DBErrors nZapWalletRet = tempWallet->ZapWalletTx(vWtx);\n+        if (nZapWalletRet != DBErrors::LOAD_OK) {\n+            fprintf(stderr, \"Error loading %s: Wallet corrupted\", name.c_str());\n+            return false;\n+        }\n+        fprintf(stdout, \"Zaptxs successful executed. Please rescan your wallet.\\n\");\n+    } else {\n+        fprintf(stderr, \"Unknown command\\n\");",
    "path": "src/wallet/wallettool.cpp",
    "position": null,
    "original_position": 139,
    "commit_id": "3c3e31c3a49c657093cacdff2c1c5e25363902ce",
    "original_commit_id": "db2678145afc6d1a99d745b43f06e92169e10e6f",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit\r\n```cpp\r\nfprintf(stderr, \"Invalid command: %s\\n\", method.c_str());\r\n```",
    "created_at": "2018-09-19T19:59:55Z",
    "updated_at": "2019-01-30T21:27:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r218943852",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/218943852"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r218943852"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/218943852/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 139,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/218944806",
    "pull_request_review_id": 156996373,
    "id": 218944806,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxODk0NDgwNg==",
    "diff_hunk": "@@ -0,0 +1,145 @@\n+// Copyright (c) 2016-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <base58.h>\n+#include <fs.h>\n+#include <util.h>\n+#include <wallet/wallet.h>\n+#include <wallet/walletutil.h>\n+\n+namespace WalletTool {\n+\n+// The standard wallet deleter function blocks on the validation interface\n+// queue, which doesn't exist for the bitcoin-wallet-tool. Define our own\n+// deleter here.\n+static void WalletToolReleaseWallet(CWallet* wallet)\n+{\n+    wallet->WalletLogPrintf(\"Releasing wallet\\n\");\n+    wallet->Flush();\n+    delete wallet;\n+}\n+\n+static std::shared_ptr<CWallet> CreateWallet(const std::string& name, const fs::path& path)",
    "path": "src/wallet/wallettool.cpp",
    "position": 24,
    "original_position": 23,
    "commit_id": "3c3e31c3a49c657093cacdff2c1c5e25363902ce",
    "original_commit_id": "db2678145afc6d1a99d745b43f06e92169e10e6f",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "These could return `std::unique_ptr`?",
    "created_at": "2018-09-19T20:03:34Z",
    "updated_at": "2019-01-30T21:27:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r218944806",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/218944806"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r218944806"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/218944806/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 24,
    "original_line": 24,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/218945014",
    "pull_request_review_id": 156996373,
    "id": 218945014,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxODk0NTAxNA==",
    "diff_hunk": "@@ -0,0 +1,20 @@\n+// Copyright (c) 2016-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_WALLET_WALLETTOOL_H\n+#define BITCOIN_WALLET_WALLETTOOL_H\n+\n+#include <script/ismine.h>\n+#include <wallet/wallet.h>\n+\n+namespace WalletTool {\n+\n+std::shared_ptr<CWallet> CreateWallet(const std::string& name, const fs::path& path);\n+std::shared_ptr<CWallet> LoadWallet(const std::string& name, const fs::path& path);\n+void WalletShowInfo(CWallet* wallet_instance);\n+bool executeWalletToolFunc(const std::string& method, const std::string& file);",
    "path": "src/wallet/wallettool.h",
    "position": null,
    "original_position": 16,
    "commit_id": "3c3e31c3a49c657093cacdff2c1c5e25363902ce",
    "original_commit_id": "db2678145afc6d1a99d745b43f06e92169e10e6f",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit, `bool ExecuteWalletToolFunc...`.",
    "created_at": "2018-09-19T20:04:10Z",
    "updated_at": "2019-01-30T21:27:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r218945014",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/218945014"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r218945014"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/218945014/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 16,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/218946278",
    "pull_request_review_id": 156999830,
    "id": 218946278,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxODk0NjI3OA==",
    "diff_hunk": "@@ -505,6 +517,34 @@ bitcoin_tx_LDADD = \\\n bitcoin_tx_LDADD += $(BOOST_LIBS) $(CRYPTO_LIBS)\n #\n \n+# bitcoin-wallet-tool binary #\n+bitcoin_wallet_tool_SOURCES = bitcoin-wallet-tool.cpp\n+bitcoin_wallet_tool_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n+bitcoin_wallet_tool_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+bitcoin_wallet_tool_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+\n+if TARGET_WINDOWS\n+bitcoin_wallet_tool_SOURCES += bitcoin-wallet-tool-res.rc\n+endif\n+\n+bitcoin_wallet_tool_LDADD = \\\n+  $(LIBBITCOIN_WALLET_TOOL) \\\n+  $(LIBBITCOIN_WALLET) \\\n+  $(LIBBITCOIN_SERVER) \\\n+  $(LIBBITCOIN_COMMON) \\\n+  $(LIBBITCOIN_CONSENSUS) \\\n+  $(LIBBITCOIN_UTIL) \\\n+  $(LIBBITCOIN_CRYPTO) \\\n+  $(LIBUNIVALUE) \\\n+  $(LIBBITCOIN_ZMQ) \\",
    "path": "src/Makefile.am",
    "position": null,
    "original_position": 70,
    "commit_id": "3c3e31c3a49c657093cacdff2c1c5e25363902ce",
    "original_commit_id": "db2678145afc6d1a99d745b43f06e92169e10e6f",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Could also remove these:\r\n\r\n```diff\r\ndiff --git a/src/Makefile.am b/src/Makefile.am\r\nindex 41cd066fa0..fc398a5fd9 100644\r\n--- a/src/Makefile.am\r\n+++ b/src/Makefile.am\r\n@@ -539,8 +539,6 @@ bitcoin_wallet_tool_LDADD = \\\r\n   $(LIBBITCOIN_CONSENSUS) \\\r\n   $(LIBBITCOIN_UTIL) \\\r\n   $(LIBBITCOIN_CRYPTO) \\\r\n-  $(LIBUNIVALUE) \\\r\n-  $(LIBBITCOIN_ZMQ) \\\r\n   $(LIBLEVELDB) \\\r\n   $(LIBLEVELDB_SSE42) \\\r\n   $(LIBMEMENV) \\\r\n",
    "created_at": "2018-09-19T20:08:37Z",
    "updated_at": "2019-01-30T21:27:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r218946278",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/218946278"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r218946278"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/218946278/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 539,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/218947017",
    "pull_request_review_id": 157000685,
    "id": 218947017,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxODk0NzAxNw==",
    "diff_hunk": "@@ -505,6 +517,34 @@ bitcoin_tx_LDADD = \\\n bitcoin_tx_LDADD += $(BOOST_LIBS) $(CRYPTO_LIBS)\n #\n \n+# bitcoin-wallet-tool binary #\n+bitcoin_wallet_tool_SOURCES = bitcoin-wallet-tool.cpp\n+bitcoin_wallet_tool_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n+bitcoin_wallet_tool_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+bitcoin_wallet_tool_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+\n+if TARGET_WINDOWS\n+bitcoin_wallet_tool_SOURCES += bitcoin-wallet-tool-res.rc\n+endif\n+\n+bitcoin_wallet_tool_LDADD = \\\n+  $(LIBBITCOIN_WALLET_TOOL) \\\n+  $(LIBBITCOIN_WALLET) \\\n+  $(LIBBITCOIN_SERVER) \\\n+  $(LIBBITCOIN_COMMON) \\\n+  $(LIBBITCOIN_CONSENSUS) \\\n+  $(LIBBITCOIN_UTIL) \\\n+  $(LIBBITCOIN_CRYPTO) \\\n+  $(LIBUNIVALUE) \\\n+  $(LIBBITCOIN_ZMQ) \\\n+  $(LIBLEVELDB) \\\n+  $(LIBLEVELDB_SSE42) \\\n+  $(LIBMEMENV) \\\n+  $(LIBSECP256K1)\n+\n+bitcoin_wallet_tool_LDADD += $(BOOST_LIBS) $(BDB_LIBS) $(CRYPTO_LIBS)",
    "path": "src/Makefile.am",
    "position": null,
    "original_position": 76,
    "commit_id": "3c3e31c3a49c657093cacdff2c1c5e25363902ce",
    "original_commit_id": "db2678145afc6d1a99d745b43f06e92169e10e6f",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Might need `$(MINIUPNPC_LIBS)` to pass travis? ",
    "created_at": "2018-09-19T20:10:56Z",
    "updated_at": "2019-01-30T21:27:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r218947017",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/218947017"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r218947017"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/218947017/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 545,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219507273",
    "pull_request_review_id": 157703155,
    "id": 219507273,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTUwNzI3Mw==",
    "diff_hunk": "@@ -0,0 +1,145 @@\n+// Copyright (c) 2016-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <base58.h>\n+#include <fs.h>\n+#include <util.h>\n+#include <wallet/wallet.h>\n+#include <wallet/walletutil.h>\n+\n+namespace WalletTool {\n+\n+// The standard wallet deleter function blocks on the validation interface\n+// queue, which doesn't exist for the bitcoin-wallet-tool. Define our own\n+// deleter here.\n+static void WalletToolReleaseWallet(CWallet* wallet)\n+{\n+    wallet->WalletLogPrintf(\"Releasing wallet\\n\");\n+    wallet->Flush();\n+    delete wallet;\n+}\n+\n+static std::shared_ptr<CWallet> CreateWallet(const std::string& name, const fs::path& path)\n+{\n+    if (fs::exists(path)) {\n+        fprintf(stderr, \"Error: File exists already\\n\");\n+        return nullptr;\n+    }\n+    std::shared_ptr<CWallet> wallet_instance(new CWallet(name, WalletDatabase::Create(path)), WalletToolReleaseWallet);\n+    bool first_run = true;\n+    DBErrors load_wallet_ret = wallet_instance->LoadWallet(first_run);\n+    if (load_wallet_ret != DBErrors::LOAD_OK) {\n+        fprintf(stderr, \"Error creating %s\", name.c_str());\n+        return nullptr;\n+    }\n+\n+    wallet_instance->SetMinVersion(FEATURE_HD_SPLIT);\n+\n+    // generate a new HD seed\n+    CPubKey seed = wallet_instance->GenerateNewSeed();\n+    wallet_instance->SetHDSeed(seed);\n+\n+    fprintf(stdout, \"Topping up keypool...\\n\");\n+    wallet_instance->TopUpKeyPool();\n+    return wallet_instance;\n+}\n+\n+static std::shared_ptr<CWallet> LoadWallet(const std::string& name, const fs::path& path)\n+{\n+    if (!fs::exists(path)) {\n+        fprintf(stderr, \"Error: Wallet files does not exist\\n\");\n+        return nullptr;\n+    }\n+\n+    std::shared_ptr<CWallet> wallet_instance(new CWallet(name, WalletDatabase::Create(path)), WalletToolReleaseWallet);\n+    bool first_run;\n+    DBErrors load_wallet_ret = wallet_instance->LoadWallet(first_run);\n+    if (load_wallet_ret != DBErrors::LOAD_OK) {\n+        wallet_instance = nullptr;\n+        if (load_wallet_ret == DBErrors::CORRUPT) {\n+            fprintf(stderr, \"Error loading %s: Wallet corrupted\", name.c_str());\n+            return nullptr;\n+        } else if (load_wallet_ret == DBErrors::NONCRITICAL_ERROR) {\n+            fprintf(stderr, \"Error reading %s! All keys read correctly, but transaction data\"\n+                            \" or address book entries might be missing or incorrect.\",\n+                name.c_str());\n+        } else if (load_wallet_ret == DBErrors::TOO_NEW) {\n+            fprintf(stderr, \"Error loading %s: Wallet requires newer version of %s\",\n+                name.c_str(), PACKAGE_NAME);\n+            return nullptr;\n+        } else if (load_wallet_ret == DBErrors::NEED_REWRITE) {\n+            fprintf(stderr, \"Wallet needed to be rewritten: restart %s to complete\", PACKAGE_NAME);\n+            return nullptr;\n+        } else {\n+            fprintf(stderr, \"Error loading %s\", name.c_str());\n+            return nullptr;\n+        }\n+    }\n+\n+    return wallet_instance;\n+}\n+\n+static void WalletShowInfo(CWallet* wallet_instance)\n+{\n+    // lock required because of some AssertLockHeld()\n+    LOCK(wallet_instance->cs_wallet);\n+\n+    fprintf(stdout, \"Wallet info\\n===========\\n\");\n+    fprintf(stdout, \"Encrypted: %s\\n\", wallet_instance->IsCrypted() ? \"yes\" : \"no\");\n+    fprintf(stdout, \"HD (hd seed available): %s\\n\", wallet_instance->GetHDChain().seed_id.IsNull() ? \"no\" : \"yes\");\n+    fprintf(stdout, \"Keypool Size: %u\\n\", wallet_instance->GetKeyPoolSize());\n+    fprintf(stdout, \"Transactions: %zu\\n\", wallet_instance->mapWallet.size());\n+    fprintf(stdout, \"Address Book: %zu\\n\", wallet_instance->mapAddressBook.size());\n+}\n+\n+bool executeWalletToolFunc(const std::string& method, const std::string& name)",
    "path": "src/wallet/wallettool.cpp",
    "position": null,
    "original_position": 96,
    "commit_id": "3c3e31c3a49c657093cacdff2c1c5e25363902ce",
    "original_commit_id": "db2678145afc6d1a99d745b43f06e92169e10e6f",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "changed",
    "created_at": "2018-09-21T13:59:31Z",
    "updated_at": "2019-01-30T21:27:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r219507273",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219507273"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r219507273"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219507273/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 96,
    "side": "RIGHT",
    "in_reply_to_id": 218943652
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219507674",
    "pull_request_review_id": 157703685,
    "id": 219507674,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTUwNzY3NA==",
    "diff_hunk": "@@ -0,0 +1,145 @@\n+// Copyright (c) 2016-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <base58.h>\n+#include <fs.h>\n+#include <util.h>\n+#include <wallet/wallet.h>\n+#include <wallet/walletutil.h>\n+\n+namespace WalletTool {\n+\n+// The standard wallet deleter function blocks on the validation interface\n+// queue, which doesn't exist for the bitcoin-wallet-tool. Define our own\n+// deleter here.\n+static void WalletToolReleaseWallet(CWallet* wallet)\n+{\n+    wallet->WalletLogPrintf(\"Releasing wallet\\n\");\n+    wallet->Flush();\n+    delete wallet;\n+}\n+\n+static std::shared_ptr<CWallet> CreateWallet(const std::string& name, const fs::path& path)\n+{\n+    if (fs::exists(path)) {\n+        fprintf(stderr, \"Error: File exists already\\n\");\n+        return nullptr;\n+    }\n+    std::shared_ptr<CWallet> wallet_instance(new CWallet(name, WalletDatabase::Create(path)), WalletToolReleaseWallet);\n+    bool first_run = true;\n+    DBErrors load_wallet_ret = wallet_instance->LoadWallet(first_run);\n+    if (load_wallet_ret != DBErrors::LOAD_OK) {\n+        fprintf(stderr, \"Error creating %s\", name.c_str());\n+        return nullptr;\n+    }\n+\n+    wallet_instance->SetMinVersion(FEATURE_HD_SPLIT);\n+\n+    // generate a new HD seed\n+    CPubKey seed = wallet_instance->GenerateNewSeed();\n+    wallet_instance->SetHDSeed(seed);\n+\n+    fprintf(stdout, \"Topping up keypool...\\n\");\n+    wallet_instance->TopUpKeyPool();\n+    return wallet_instance;\n+}\n+\n+static std::shared_ptr<CWallet> LoadWallet(const std::string& name, const fs::path& path)\n+{\n+    if (!fs::exists(path)) {\n+        fprintf(stderr, \"Error: Wallet files does not exist\\n\");\n+        return nullptr;\n+    }\n+\n+    std::shared_ptr<CWallet> wallet_instance(new CWallet(name, WalletDatabase::Create(path)), WalletToolReleaseWallet);\n+    bool first_run;\n+    DBErrors load_wallet_ret = wallet_instance->LoadWallet(first_run);\n+    if (load_wallet_ret != DBErrors::LOAD_OK) {\n+        wallet_instance = nullptr;\n+        if (load_wallet_ret == DBErrors::CORRUPT) {\n+            fprintf(stderr, \"Error loading %s: Wallet corrupted\", name.c_str());\n+            return nullptr;\n+        } else if (load_wallet_ret == DBErrors::NONCRITICAL_ERROR) {\n+            fprintf(stderr, \"Error reading %s! All keys read correctly, but transaction data\"\n+                            \" or address book entries might be missing or incorrect.\",\n+                name.c_str());\n+        } else if (load_wallet_ret == DBErrors::TOO_NEW) {\n+            fprintf(stderr, \"Error loading %s: Wallet requires newer version of %s\",\n+                name.c_str(), PACKAGE_NAME);\n+            return nullptr;\n+        } else if (load_wallet_ret == DBErrors::NEED_REWRITE) {\n+            fprintf(stderr, \"Wallet needed to be rewritten: restart %s to complete\", PACKAGE_NAME);\n+            return nullptr;\n+        } else {\n+            fprintf(stderr, \"Error loading %s\", name.c_str());\n+            return nullptr;\n+        }\n+    }\n+\n+    return wallet_instance;\n+}\n+\n+static void WalletShowInfo(CWallet* wallet_instance)\n+{\n+    // lock required because of some AssertLockHeld()\n+    LOCK(wallet_instance->cs_wallet);\n+\n+    fprintf(stdout, \"Wallet info\\n===========\\n\");\n+    fprintf(stdout, \"Encrypted: %s\\n\", wallet_instance->IsCrypted() ? \"yes\" : \"no\");\n+    fprintf(stdout, \"HD (hd seed available): %s\\n\", wallet_instance->GetHDChain().seed_id.IsNull() ? \"no\" : \"yes\");\n+    fprintf(stdout, \"Keypool Size: %u\\n\", wallet_instance->GetKeyPoolSize());\n+    fprintf(stdout, \"Transactions: %zu\\n\", wallet_instance->mapWallet.size());\n+    fprintf(stdout, \"Address Book: %zu\\n\", wallet_instance->mapAddressBook.size());\n+}\n+\n+bool executeWalletToolFunc(const std::string& method, const std::string& name)\n+{\n+    fs::path path = fs::absolute(name, GetWalletDir());\n+\n+    if (method == \"create\") {\n+        std::shared_ptr<CWallet> wallet_instance = CreateWallet(name, path);\n+        if (wallet_instance) {\n+            WalletShowInfo(wallet_instance.get());\n+            wallet_instance->Flush();\n+        }\n+    } else if (method == \"info\") {\n+        std::shared_ptr<CWallet> wallet_instance = LoadWallet(name, path);\n+        if (!wallet_instance) return false;\n+        WalletShowInfo(wallet_instance.get());\n+        wallet_instance->Flush();\n+    } else if (method == \"salvage\") {\n+        // Recover readable keypairs:\n+        std::string error;\n+        if (!WalletBatch::VerifyEnvironment(path, error)) {\n+            fprintf(stderr, \"WalletBatch::VerifyEnvironment Error: %s\\n\", error.c_str());\n+            return false;\n+        }\n+\n+        CWallet dummyWallet(\"dummy\", WalletDatabase::CreateDummy());\n+        std::string backup_filename;\n+        if (!WalletBatch::Recover(path, (void*)&dummyWallet, WalletBatch::RecoverKeysOnlyFilter, backup_filename)) {\n+            fprintf(stderr, \"Salvage failed\\n\");\n+            return false;\n+        }\n+        //TODO, set wallets best block to genesis to enforce a rescan\n+        fprintf(stdout, \"Salvage successful. Please rescan your wallet.\\n\");\n+    } else if (method == \"zaptxs\") {\n+        // needed to restore wallet transaction meta data after -zapwallettxes\n+        std::vector<CWalletTx> vWtx;\n+\n+        std::unique_ptr<CWallet> tempWallet = MakeUnique<CWallet>(name, WalletDatabase::Create(path));\n+        DBErrors nZapWalletRet = tempWallet->ZapWalletTx(vWtx);\n+        if (nZapWalletRet != DBErrors::LOAD_OK) {\n+            fprintf(stderr, \"Error loading %s: Wallet corrupted\", name.c_str());\n+            return false;\n+        }\n+        fprintf(stdout, \"Zaptxs successful executed. Please rescan your wallet.\\n\");\n+    } else {\n+        fprintf(stderr, \"Unknown command\\n\");",
    "path": "src/wallet/wallettool.cpp",
    "position": null,
    "original_position": 139,
    "commit_id": "3c3e31c3a49c657093cacdff2c1c5e25363902ce",
    "original_commit_id": "db2678145afc6d1a99d745b43f06e92169e10e6f",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "yep. Better",
    "created_at": "2018-09-21T14:00:41Z",
    "updated_at": "2019-01-30T21:27:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r219507674",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219507674"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r219507674"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219507674/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 139,
    "side": "RIGHT",
    "in_reply_to_id": 218943852
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219507722",
    "pull_request_review_id": 157703745,
    "id": 219507722,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTUwNzcyMg==",
    "diff_hunk": "@@ -0,0 +1,145 @@\n+// Copyright (c) 2016-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <base58.h>\n+#include <fs.h>\n+#include <util.h>\n+#include <wallet/wallet.h>\n+#include <wallet/walletutil.h>\n+\n+namespace WalletTool {\n+\n+// The standard wallet deleter function blocks on the validation interface\n+// queue, which doesn't exist for the bitcoin-wallet-tool. Define our own\n+// deleter here.\n+static void WalletToolReleaseWallet(CWallet* wallet)\n+{\n+    wallet->WalletLogPrintf(\"Releasing wallet\\n\");\n+    wallet->Flush();\n+    delete wallet;\n+}\n+\n+static std::shared_ptr<CWallet> CreateWallet(const std::string& name, const fs::path& path)",
    "path": "src/wallet/wallettool.cpp",
    "position": 24,
    "original_position": 23,
    "commit_id": "3c3e31c3a49c657093cacdff2c1c5e25363902ce",
    "original_commit_id": "db2678145afc6d1a99d745b43f06e92169e10e6f",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Indeed. Fixed",
    "created_at": "2018-09-21T14:00:48Z",
    "updated_at": "2019-01-30T21:27:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r219507722",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219507722"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r219507722"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219507722/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 24,
    "original_line": 24,
    "side": "RIGHT",
    "in_reply_to_id": 218944806
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219508097",
    "pull_request_review_id": 157704243,
    "id": 219508097,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTUwODA5Nw==",
    "diff_hunk": "@@ -0,0 +1,20 @@\n+// Copyright (c) 2016-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_WALLET_WALLETTOOL_H\n+#define BITCOIN_WALLET_WALLETTOOL_H\n+\n+#include <script/ismine.h>\n+#include <wallet/wallet.h>\n+\n+namespace WalletTool {\n+\n+std::shared_ptr<CWallet> CreateWallet(const std::string& name, const fs::path& path);\n+std::shared_ptr<CWallet> LoadWallet(const std::string& name, const fs::path& path);\n+void WalletShowInfo(CWallet* wallet_instance);\n+bool executeWalletToolFunc(const std::string& method, const std::string& file);",
    "path": "src/wallet/wallettool.h",
    "position": null,
    "original_position": 16,
    "commit_id": "3c3e31c3a49c657093cacdff2c1c5e25363902ce",
    "original_commit_id": "db2678145afc6d1a99d745b43f06e92169e10e6f",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "fixed",
    "created_at": "2018-09-21T14:01:54Z",
    "updated_at": "2019-01-30T21:27:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r219508097",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219508097"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r219508097"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219508097/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 16,
    "side": "RIGHT",
    "in_reply_to_id": 218945014
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219508374",
    "pull_request_review_id": 157704614,
    "id": 219508374,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTUwODM3NA==",
    "diff_hunk": "@@ -505,6 +517,34 @@ bitcoin_tx_LDADD = \\\n bitcoin_tx_LDADD += $(BOOST_LIBS) $(CRYPTO_LIBS)\n #\n \n+# bitcoin-wallet-tool binary #\n+bitcoin_wallet_tool_SOURCES = bitcoin-wallet-tool.cpp\n+bitcoin_wallet_tool_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n+bitcoin_wallet_tool_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+bitcoin_wallet_tool_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+\n+if TARGET_WINDOWS\n+bitcoin_wallet_tool_SOURCES += bitcoin-wallet-tool-res.rc\n+endif\n+\n+bitcoin_wallet_tool_LDADD = \\\n+  $(LIBBITCOIN_WALLET_TOOL) \\\n+  $(LIBBITCOIN_WALLET) \\\n+  $(LIBBITCOIN_SERVER) \\\n+  $(LIBBITCOIN_COMMON) \\\n+  $(LIBBITCOIN_CONSENSUS) \\\n+  $(LIBBITCOIN_UTIL) \\\n+  $(LIBBITCOIN_CRYPTO) \\\n+  $(LIBUNIVALUE) \\\n+  $(LIBBITCOIN_ZMQ) \\",
    "path": "src/Makefile.am",
    "position": null,
    "original_position": 70,
    "commit_id": "3c3e31c3a49c657093cacdff2c1c5e25363902ce",
    "original_commit_id": "db2678145afc6d1a99d745b43f06e92169e10e6f",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "removed",
    "created_at": "2018-09-21T14:02:41Z",
    "updated_at": "2019-01-30T21:27:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r219508374",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219508374"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r219508374"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219508374/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 539,
    "side": "RIGHT",
    "in_reply_to_id": 218946278
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219508407",
    "pull_request_review_id": 157704653,
    "id": 219508407,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTUwODQwNw==",
    "diff_hunk": "@@ -505,6 +517,34 @@ bitcoin_tx_LDADD = \\\n bitcoin_tx_LDADD += $(BOOST_LIBS) $(CRYPTO_LIBS)\n #\n \n+# bitcoin-wallet-tool binary #\n+bitcoin_wallet_tool_SOURCES = bitcoin-wallet-tool.cpp\n+bitcoin_wallet_tool_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n+bitcoin_wallet_tool_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+bitcoin_wallet_tool_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+\n+if TARGET_WINDOWS\n+bitcoin_wallet_tool_SOURCES += bitcoin-wallet-tool-res.rc\n+endif\n+\n+bitcoin_wallet_tool_LDADD = \\\n+  $(LIBBITCOIN_WALLET_TOOL) \\\n+  $(LIBBITCOIN_WALLET) \\\n+  $(LIBBITCOIN_SERVER) \\\n+  $(LIBBITCOIN_COMMON) \\\n+  $(LIBBITCOIN_CONSENSUS) \\\n+  $(LIBBITCOIN_UTIL) \\\n+  $(LIBBITCOIN_CRYPTO) \\\n+  $(LIBUNIVALUE) \\\n+  $(LIBBITCOIN_ZMQ) \\\n+  $(LIBLEVELDB) \\\n+  $(LIBLEVELDB_SSE42) \\\n+  $(LIBMEMENV) \\\n+  $(LIBSECP256K1)\n+\n+bitcoin_wallet_tool_LDADD += $(BOOST_LIBS) $(BDB_LIBS) $(CRYPTO_LIBS)",
    "path": "src/Makefile.am",
    "position": null,
    "original_position": 76,
    "commit_id": "3c3e31c3a49c657093cacdff2c1c5e25363902ce",
    "original_commit_id": "db2678145afc6d1a99d745b43f06e92169e10e6f",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "added",
    "created_at": "2018-09-21T14:02:45Z",
    "updated_at": "2019-01-30T21:27:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r219508407",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219508407"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r219508407"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219508407/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 545,
    "side": "RIGHT",
    "in_reply_to_id": 218947017
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219517501",
    "pull_request_review_id": 157716895,
    "id": 219517501,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTUxNzUwMQ==",
    "diff_hunk": "@@ -0,0 +1,145 @@\n+// Copyright (c) 2016-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <base58.h>\n+#include <fs.h>\n+#include <util.h>\n+#include <wallet/wallet.h>\n+#include <wallet/walletutil.h>\n+\n+namespace WalletTool {\n+\n+// The standard wallet deleter function blocks on the validation interface\n+// queue, which doesn't exist for the bitcoin-wallet-tool. Define our own\n+// deleter here.\n+static void WalletToolReleaseWallet(CWallet* wallet)\n+{\n+    wallet->WalletLogPrintf(\"Releasing wallet\\n\");\n+    wallet->Flush();\n+    delete wallet;\n+}\n+\n+static std::shared_ptr<CWallet> CreateWallet(const std::string& name, const fs::path& path)",
    "path": "src/wallet/wallettool.cpp",
    "position": 24,
    "original_position": 23,
    "commit_id": "3c3e31c3a49c657093cacdff2c1c5e25363902ce",
    "original_commit_id": "db2678145afc6d1a99d745b43f06e92169e10e6f",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Actually, I'll keep these as shared",
    "created_at": "2018-09-21T14:29:52Z",
    "updated_at": "2019-01-30T21:27:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r219517501",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219517501"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r219517501"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219517501/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 24,
    "original_line": 24,
    "side": "RIGHT",
    "in_reply_to_id": 218944806
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219518749",
    "pull_request_review_id": 157718544,
    "id": 219518749,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTUxODc0OQ==",
    "diff_hunk": "@@ -0,0 +1,145 @@\n+// Copyright (c) 2016-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <base58.h>\n+#include <fs.h>\n+#include <util.h>\n+#include <wallet/wallet.h>\n+#include <wallet/walletutil.h>\n+\n+namespace WalletTool {\n+\n+// The standard wallet deleter function blocks on the validation interface\n+// queue, which doesn't exist for the bitcoin-wallet-tool. Define our own\n+// deleter here.\n+static void WalletToolReleaseWallet(CWallet* wallet)\n+{\n+    wallet->WalletLogPrintf(\"Releasing wallet\\n\");\n+    wallet->Flush();\n+    delete wallet;\n+}\n+\n+static std::shared_ptr<CWallet> CreateWallet(const std::string& name, const fs::path& path)",
    "path": "src/wallet/wallettool.cpp",
    "position": 24,
    "original_position": 23,
    "commit_id": "3c3e31c3a49c657093cacdff2c1c5e25363902ce",
    "original_commit_id": "db2678145afc6d1a99d745b43f06e92169e10e6f",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Why?",
    "created_at": "2018-09-21T14:33:30Z",
    "updated_at": "2019-01-30T21:27:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r219518749",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219518749"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r219518749"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219518749/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 24,
    "original_line": 24,
    "side": "RIGHT",
    "in_reply_to_id": 218944806
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219541838",
    "pull_request_review_id": 157749097,
    "id": 219541838,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTU0MTgzOA==",
    "diff_hunk": "@@ -0,0 +1,103 @@\n+// Copyright (c) 2016-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <chainparams.h>\n+#include <chainparamsbase.h>\n+#include <consensus/consensus.h>\n+#include <logging.h>\n+#include <util.h>\n+#include <utilstrencodings.h>\n+#include <wallet/wallettool.h>\n+\n+#include <stdio.h>\n+\n+const std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n+\n+static void SetupWalletToolArgs()\n+{\n+    gArgs.AddArg(\"-?\", \"This help message\", false, OptionsCategory::OPTIONS);\n+    gArgs.AddArg(\"-name=<wallet-name>\", \"Specify wallet name\", false, OptionsCategory::OPTIONS);",
    "path": "src/bitcoin-wallet.cpp",
    "position": null,
    "original_position": 24,
    "commit_id": "3c3e31c3a49c657093cacdff2c1c5e25363902ce",
    "original_commit_id": "fdbb2d58729ede340ee60718b229044971146e93",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think `bitcoin-wallet` should take the exact same `-walletdir=<dir>` and `-wallet=<path>` options as `bitcoind` and `bitcoin-gui`. I don't think there are benefits to giving this tool a new way of locating and referring to wallets. It just seems inconsistent and confusing.",
    "created_at": "2018-09-21T15:42:44Z",
    "updated_at": "2019-01-30T21:27:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r219541838",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219541838"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r219541838"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219541838/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 24,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219542572",
    "pull_request_review_id": 157749097,
    "id": 219542572,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTU0MjU3Mg==",
    "diff_hunk": "@@ -0,0 +1,103 @@\n+// Copyright (c) 2016-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <chainparams.h>\n+#include <chainparamsbase.h>\n+#include <consensus/consensus.h>\n+#include <logging.h>\n+#include <util.h>\n+#include <utilstrencodings.h>\n+#include <wallet/wallettool.h>\n+\n+#include <stdio.h>\n+\n+const std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n+\n+static void SetupWalletToolArgs()\n+{\n+    gArgs.AddArg(\"-?\", \"This help message\", false, OptionsCategory::OPTIONS);\n+    gArgs.AddArg(\"-name=<wallet-name>\", \"Specify wallet name\", false, OptionsCategory::OPTIONS);\n+\n+    gArgs.AddArg(\"info\", \"Get wallet info\", false, OptionsCategory::COMMANDS);\n+    gArgs.AddArg(\"create\", \"Create new wallet file\", false, OptionsCategory::COMMANDS);\n+    gArgs.AddArg(\"salvage\", \"Recover readable keypairs\", false, OptionsCategory::COMMANDS);\n+    gArgs.AddArg(\"zaptxs\", \"Remove all transactions including metadata (will keep keys)\", false, OptionsCategory::COMMANDS);\n+\n+    // Hidden\n+    gArgs.AddArg(\"-h\", \"\", false, OptionsCategory::HIDDEN);\n+    gArgs.AddArg(\"-help\", \"\", false, OptionsCategory::HIDDEN);\n+}\n+\n+static bool WalletAppInit(int argc, char* argv[])\n+{\n+    SetupWalletToolArgs();\n+    std::string error;\n+    if (!gArgs.ParseParameters(argc, argv, error)) {\n+        fprintf(stderr, \"Error parsing command line arguments: %s\\n\", error.c_str());\n+        return false;\n+    }\n+    if (argc < 2 || HelpRequested(gArgs)) {\n+        std::string usage = strprintf(_(\"%s wallet-tool version\"), PACKAGE_NAME) + \" \" + FormatFullVersion() + \"\\n\\n\" +\n+                                      _(\"Usage:\") + \"\\n\" +\n+                                     \"  bitcoin-wallet [options] <command>\\n\\n\" +\n+                                     gArgs.GetHelpMessage();\n+\n+        fprintf(stdout, \"%s\", usage.c_str());\n+        return false;\n+    }\n+\n+    // check for printtoconsole, allow -debug\n+    g_logger->m_print_to_console = gArgs.GetBoolArg(\"-printtoconsole\", gArgs.GetBoolArg(\"-debug\", false));",
    "path": "src/bitcoin-wallet.cpp",
    "position": 61,
    "original_position": 55,
    "commit_id": "3c3e31c3a49c657093cacdff2c1c5e25363902ce",
    "original_commit_id": "fdbb2d58729ede340ee60718b229044971146e93",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think you might need to add these arguments to SetupWalletToolArgs to prevent them from being rejected.",
    "created_at": "2018-09-21T15:45:04Z",
    "updated_at": "2019-01-30T21:27:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r219542572",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219542572"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r219542572"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219542572/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 61,
    "original_line": 61,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219543868",
    "pull_request_review_id": 157749097,
    "id": 219543868,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTU0Mzg2OA==",
    "diff_hunk": "@@ -0,0 +1,103 @@\n+// Copyright (c) 2016-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <chainparams.h>\n+#include <chainparamsbase.h>\n+#include <consensus/consensus.h>\n+#include <logging.h>\n+#include <util.h>\n+#include <utilstrencodings.h>\n+#include <wallet/wallettool.h>\n+\n+#include <stdio.h>\n+\n+const std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n+\n+static void SetupWalletToolArgs()\n+{\n+    gArgs.AddArg(\"-?\", \"This help message\", false, OptionsCategory::OPTIONS);\n+    gArgs.AddArg(\"-name=<wallet-name>\", \"Specify wallet name\", false, OptionsCategory::OPTIONS);\n+\n+    gArgs.AddArg(\"info\", \"Get wallet info\", false, OptionsCategory::COMMANDS);\n+    gArgs.AddArg(\"create\", \"Create new wallet file\", false, OptionsCategory::COMMANDS);\n+    gArgs.AddArg(\"salvage\", \"Recover readable keypairs\", false, OptionsCategory::COMMANDS);\n+    gArgs.AddArg(\"zaptxs\", \"Remove all transactions including metadata (will keep keys)\", false, OptionsCategory::COMMANDS);\n+\n+    // Hidden\n+    gArgs.AddArg(\"-h\", \"\", false, OptionsCategory::HIDDEN);\n+    gArgs.AddArg(\"-help\", \"\", false, OptionsCategory::HIDDEN);\n+}\n+\n+static bool WalletAppInit(int argc, char* argv[])\n+{\n+    SetupWalletToolArgs();\n+    std::string error;\n+    if (!gArgs.ParseParameters(argc, argv, error)) {\n+        fprintf(stderr, \"Error parsing command line arguments: %s\\n\", error.c_str());\n+        return false;\n+    }\n+    if (argc < 2 || HelpRequested(gArgs)) {\n+        std::string usage = strprintf(_(\"%s wallet-tool version\"), PACKAGE_NAME) + \" \" + FormatFullVersion() + \"\\n\\n\" +\n+                                      _(\"Usage:\") + \"\\n\" +\n+                                     \"  bitcoin-wallet [options] <command>\\n\\n\" +\n+                                     gArgs.GetHelpMessage();\n+\n+        fprintf(stdout, \"%s\", usage.c_str());\n+        return false;\n+    }\n+\n+    // check for printtoconsole, allow -debug\n+    g_logger->m_print_to_console = gArgs.GetBoolArg(\"-printtoconsole\", gArgs.GetBoolArg(\"-debug\", false));\n+\n+    // Check for -testnet or -regtest parameter (Params() calls are only valid after this clause)\n+    try {\n+        SelectParams(gArgs.GetChainName());\n+    } catch (const std::exception& e) {",
    "path": "src/bitcoin-wallet.cpp",
    "position": null,
    "original_position": 60,
    "commit_id": "3c3e31c3a49c657093cacdff2c1c5e25363902ce",
    "original_commit_id": "fdbb2d58729ede340ee60718b229044971146e93",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This seem to be catching and printing same exception that the caller already catches and prints. I think it'd make sense to drop this catch and just let the caller handle the error, unless this is adding going to add extra information or do something useful.",
    "created_at": "2018-09-21T15:48:45Z",
    "updated_at": "2019-01-30T21:27:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r219543868",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219543868"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r219543868"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219543868/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 70,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219545741",
    "pull_request_review_id": 157749097,
    "id": 219545741,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTU0NTc0MQ==",
    "diff_hunk": "@@ -0,0 +1,103 @@\n+// Copyright (c) 2016-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <chainparams.h>\n+#include <chainparamsbase.h>\n+#include <consensus/consensus.h>\n+#include <logging.h>\n+#include <util.h>\n+#include <utilstrencodings.h>\n+#include <wallet/wallettool.h>\n+\n+#include <stdio.h>\n+\n+const std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n+\n+static void SetupWalletToolArgs()\n+{\n+    gArgs.AddArg(\"-?\", \"This help message\", false, OptionsCategory::OPTIONS);\n+    gArgs.AddArg(\"-name=<wallet-name>\", \"Specify wallet name\", false, OptionsCategory::OPTIONS);\n+\n+    gArgs.AddArg(\"info\", \"Get wallet info\", false, OptionsCategory::COMMANDS);\n+    gArgs.AddArg(\"create\", \"Create new wallet file\", false, OptionsCategory::COMMANDS);\n+    gArgs.AddArg(\"salvage\", \"Recover readable keypairs\", false, OptionsCategory::COMMANDS);\n+    gArgs.AddArg(\"zaptxs\", \"Remove all transactions including metadata (will keep keys)\", false, OptionsCategory::COMMANDS);\n+\n+    // Hidden\n+    gArgs.AddArg(\"-h\", \"\", false, OptionsCategory::HIDDEN);\n+    gArgs.AddArg(\"-help\", \"\", false, OptionsCategory::HIDDEN);\n+}\n+\n+static bool WalletAppInit(int argc, char* argv[])\n+{\n+    SetupWalletToolArgs();\n+    std::string error;\n+    if (!gArgs.ParseParameters(argc, argv, error)) {\n+        fprintf(stderr, \"Error parsing command line arguments: %s\\n\", error.c_str());\n+        return false;\n+    }\n+    if (argc < 2 || HelpRequested(gArgs)) {\n+        std::string usage = strprintf(_(\"%s wallet-tool version\"), PACKAGE_NAME) + \" \" + FormatFullVersion() + \"\\n\\n\" +\n+                                      _(\"Usage:\") + \"\\n\" +\n+                                     \"  bitcoin-wallet [options] <command>\\n\\n\" +\n+                                     gArgs.GetHelpMessage();\n+\n+        fprintf(stdout, \"%s\", usage.c_str());\n+        return false;\n+    }\n+\n+    // check for printtoconsole, allow -debug\n+    g_logger->m_print_to_console = gArgs.GetBoolArg(\"-printtoconsole\", gArgs.GetBoolArg(\"-debug\", false));\n+\n+    // Check for -testnet or -regtest parameter (Params() calls are only valid after this clause)\n+    try {\n+        SelectParams(gArgs.GetChainName());\n+    } catch (const std::exception& e) {\n+        fprintf(stderr, \"Error: %s\\n\", e.what());\n+        return false;\n+    }\n+\n+    return true;\n+}\n+\n+int main(int argc, char* argv[])\n+{\n+    SetupEnvironment();\n+    RandomInit();\n+    try {\n+        if (!WalletAppInit(argc, argv)) return EXIT_FAILURE;\n+    } catch (const std::exception& e) {\n+        PrintExceptionContinue(&e, \"WalletAppInit()\");\n+        return EXIT_FAILURE;\n+    } catch (...) {\n+        PrintExceptionContinue(nullptr, \"WalletAppInit()\");\n+        return EXIT_FAILURE;\n+    }\n+\n+    while (argc > 1 && IsSwitchChar(argv[1][0])) {\n+        argc--;\n+        argv++;\n+    }\n+    std::vector<std::string> args = std::vector<std::string>(&argv[1], &argv[argc]);",
    "path": "src/bitcoin-wallet.cpp",
    "position": null,
    "original_position": 86,
    "commit_id": "3c3e31c3a49c657093cacdff2c1c5e25363902ce",
    "original_commit_id": "fdbb2d58729ede340ee60718b229044971146e93",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Would probably make sense to pass this vector to ExecuteWalletToolFunc, instead of constructing it and throwing away.",
    "created_at": "2018-09-21T15:55:04Z",
    "updated_at": "2019-01-30T21:27:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r219545741",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219545741"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r219545741"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219545741/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 100,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219547220",
    "pull_request_review_id": 157749097,
    "id": 219547220,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTU0NzIyMA==",
    "diff_hunk": "@@ -0,0 +1,152 @@\n+// Copyright (c) 2016-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <base58.h>\n+#include <fs.h>\n+#include <util.h>\n+#include <wallet/wallet.h>\n+#include <wallet/walletutil.h>\n+\n+namespace WalletTool {\n+\n+// The standard wallet deleter function blocks on the validation interface\n+// queue, which doesn't exist for the bitcoin-wallet. Define our own\n+// deleter here.\n+static void WalletToolReleaseWallet(CWallet* wallet)\n+{\n+    wallet->WalletLogPrintf(\"Releasing wallet\\n\");\n+    wallet->Flush();\n+    delete wallet;\n+}\n+\n+static std::shared_ptr<CWallet> CreateWallet(const std::string& name, const fs::path& path)\n+{\n+    if (fs::exists(path)) {\n+        fprintf(stderr, \"Error: File exists already\\n\");\n+        return nullptr;\n+    }\n+    std::shared_ptr<CWallet> wallet_instance(new CWallet(name, WalletDatabase::Create(path)), WalletToolReleaseWallet);\n+    bool first_run = true;\n+    DBErrors load_wallet_ret = wallet_instance->LoadWallet(first_run);\n+    if (load_wallet_ret != DBErrors::LOAD_OK) {\n+        fprintf(stderr, \"Error creating %s\", name.c_str());\n+        return nullptr;\n+    }\n+\n+    wallet_instance->SetMinVersion(FEATURE_HD_SPLIT);\n+\n+    // generate a new HD seed\n+    CPubKey seed = wallet_instance->GenerateNewSeed();\n+    wallet_instance->SetHDSeed(seed);\n+\n+    fprintf(stdout, \"Topping up keypool...\\n\");\n+    wallet_instance->TopUpKeyPool();\n+    return wallet_instance;\n+}\n+\n+static std::shared_ptr<CWallet> LoadWallet(const std::string& name, const fs::path& path)",
    "path": "src/wallet/wallettool.cpp",
    "position": 51,
    "original_position": 48,
    "commit_id": "3c3e31c3a49c657093cacdff2c1c5e25363902ce",
    "original_commit_id": "fdbb2d58729ede340ee60718b229044971146e93",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Isn't this duplicating a bunch of code already in bitcoind? It seems fragile for bitcoind and bitcoin-wallet to have different code for loading and locating wallets and handling errors.",
    "created_at": "2018-09-21T15:59:50Z",
    "updated_at": "2019-01-30T21:27:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r219547220",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219547220"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r219547220"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219547220/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 51,
    "original_line": 51,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/220175413",
    "pull_request_review_id": 158519867,
    "id": 220175413,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMDE3NTQxMw==",
    "diff_hunk": "@@ -509,6 +521,32 @@ bitcoin_tx_LDADD = \\\n bitcoin_tx_LDADD += $(BOOST_LIBS) $(CRYPTO_LIBS)\n #\n \n+# bitcoin-wallet-tool binary #",
    "path": "src/Makefile.am",
    "position": null,
    "original_position": 51,
    "commit_id": "3c3e31c3a49c657093cacdff2c1c5e25363902ce",
    "original_commit_id": "fdbb2d58729ede340ee60718b229044971146e93",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: bitcoin-wallet",
    "created_at": "2018-09-25T12:42:56Z",
    "updated_at": "2019-01-30T21:27:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r220175413",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/220175413"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r220175413"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/220175413/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 539,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/220178473",
    "pull_request_review_id": 158519867,
    "id": 220178473,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMDE3ODQ3Mw==",
    "diff_hunk": "@@ -0,0 +1,103 @@\n+// Copyright (c) 2016-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <chainparams.h>\n+#include <chainparamsbase.h>\n+#include <consensus/consensus.h>\n+#include <logging.h>\n+#include <util.h>\n+#include <utilstrencodings.h>\n+#include <wallet/wallettool.h>\n+\n+#include <stdio.h>\n+\n+const std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n+\n+static void SetupWalletToolArgs()\n+{\n+    gArgs.AddArg(\"-?\", \"This help message\", false, OptionsCategory::OPTIONS);\n+    gArgs.AddArg(\"-name=<wallet-name>\", \"Specify wallet name\", false, OptionsCategory::OPTIONS);",
    "path": "src/bitcoin-wallet.cpp",
    "position": null,
    "original_position": 24,
    "commit_id": "3c3e31c3a49c657093cacdff2c1c5e25363902ce",
    "original_commit_id": "fdbb2d58729ede340ee60718b229044971146e93",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "There is no `-walletdir` command for this tool afaik, though that would be useful (no rush).\r\n\r\n`-wallet` indeed seems better than `-name`, especially if we ever decide to give wallets names. However for this tool I have a light preference for making it a positional argument, e.g. `./bitcoin-wallet create blah` seems more intuitive to me than `./bitcoin-wallet -wallet=blah create`.",
    "created_at": "2018-09-25T12:51:53Z",
    "updated_at": "2019-01-30T21:27:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r220178473",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/220178473"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r220178473"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/220178473/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 24,
    "side": "RIGHT",
    "in_reply_to_id": 219541838
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/220274631",
    "pull_request_review_id": 158645101,
    "id": 220274631,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMDI3NDYzMQ==",
    "diff_hunk": "@@ -0,0 +1,103 @@\n+// Copyright (c) 2016-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <chainparams.h>\n+#include <chainparamsbase.h>\n+#include <consensus/consensus.h>\n+#include <logging.h>\n+#include <util.h>\n+#include <utilstrencodings.h>\n+#include <wallet/wallettool.h>\n+\n+#include <stdio.h>\n+\n+const std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n+\n+static void SetupWalletToolArgs()\n+{\n+    gArgs.AddArg(\"-?\", \"This help message\", false, OptionsCategory::OPTIONS);\n+    gArgs.AddArg(\"-name=<wallet-name>\", \"Specify wallet name\", false, OptionsCategory::OPTIONS);",
    "path": "src/bitcoin-wallet.cpp",
    "position": null,
    "original_position": 24,
    "commit_id": "3c3e31c3a49c657093cacdff2c1c5e25363902ce",
    "original_commit_id": "fdbb2d58729ede340ee60718b229044971146e93",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Also have mixed feeling here. IMO it should be consistent with `bitcoind` to begin with. For instance, with `psql` (postgres client) you can set the database in multiple ways: env var, `-d` option or positional argument.",
    "created_at": "2018-09-25T17:00:26Z",
    "updated_at": "2019-01-30T21:27:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r220274631",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/220274631"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r220274631"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/220274631/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 24,
    "side": "RIGHT",
    "in_reply_to_id": 219541838
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/220958310",
    "pull_request_review_id": 159490341,
    "id": 220958310,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMDk1ODMxMA==",
    "diff_hunk": "@@ -0,0 +1,101 @@\n+#!/usr/bin/env python3",
    "path": "test/functional/tool_wallet.py",
    "position": 1,
    "original_position": 1,
    "commit_id": "3c3e31c3a49c657093cacdff2c1c5e25363902ce",
    "original_commit_id": "793cd32ba7b7fbbc918da981b92120ee776e2b0a",
    "user": {
      "login": "ken2812221",
      "id": 11154118,
      "node_id": "MDQ6VXNlcjExMTU0MTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/11154118?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ken2812221",
      "html_url": "https://github.com/ken2812221",
      "followers_url": "https://api.github.com/users/ken2812221/followers",
      "following_url": "https://api.github.com/users/ken2812221/following{/other_user}",
      "gists_url": "https://api.github.com/users/ken2812221/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ken2812221/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ken2812221/subscriptions",
      "organizations_url": "https://api.github.com/users/ken2812221/orgs",
      "repos_url": "https://api.github.com/users/ken2812221/repos",
      "events_url": "https://api.github.com/users/ken2812221/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ken2812221/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Add this file into test_runner.py script list?",
    "created_at": "2018-09-27T14:57:11Z",
    "updated_at": "2019-01-30T21:27:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r220958310",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/220958310"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r220958310"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/220958310/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1,
    "original_line": 1,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/221222197",
    "pull_request_review_id": 159819925,
    "id": 221222197,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMTIyMjE5Nw==",
    "diff_hunk": "@@ -0,0 +1,101 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test bitcoint-wallet-tool.\n+\"\"\"\n+\n+import os\n+import subprocess\n+import textwrap\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+class ToolWalletTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def process(self, *args):\n+        binary = self.config[\"environment\"][\"BUILDDIR\"] + '/src/bitcoin-wallet' + self.config[\"environment\"][\"EXEEXT\"]\n+        return subprocess.Popen([binary] + list(args), stdin=subprocess.PIPE, stdout=subprocess.PIPE, stderr=subprocess.PIPE, universal_newlines=True)\n+\n+    def assert_raises_tool_error(self, error, *args):\n+        process = self.process(*args)\n+        stdout, stderr = process.communicate()\n+        assert_equal(process.poll(), 1)\n+        assert_equal(stdout, '')\n+        assert_equal(stderr.strip(), error)\n+\n+    def assert_tool_output(self, output, *args):\n+        process = self.process(*args)\n+        stdout, stderr = process.communicate()\n+        assert_equal(process.poll(), 0)\n+        assert_equal(stderr, '')\n+        assert_equal(stdout, output)\n+\n+    def run_test(self):\n+\n+        self.assert_raises_tool_error('Invalid command: foo', 'foo')\n+        self.assert_raises_tool_error('Error parsing command line arguments: Invalid parameter -foo', '-foo')\n+\n+        wallet_dir = lambda *p: data_dir('wallets', *p)\n+        data_dir = lambda *p: os.path.join(self.nodes[0].datadir, 'regtest', *p)\n+\n+        # TODO calling info on a wallet already opened results in the segfault:\n+        #  `libc++abi.dylib: terminating with uncaught exception of type std::runtime_error: BerkeleyBatch: Failed to open database environment`\n+        #  the error must be fixed and tested here",
    "path": "test/functional/tool_wallet.py",
    "position": null,
    "original_position": 47,
    "commit_id": "3c3e31c3a49c657093cacdff2c1c5e25363902ce",
    "original_commit_id": "9258bb73e2bb432e03c6762d341e9cdcb69efb9e",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "> What happens if you run this tool on a wallet that's currently opened by bitcoind?\r\n\r\n@Sjors FYI",
    "created_at": "2018-09-28T11:26:37Z",
    "updated_at": "2019-01-30T21:27:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r221222197",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/221222197"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r221222197"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/221222197/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 47,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/221753323",
    "pull_request_review_id": 160481126,
    "id": 221753323,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMTc1MzMyMw==",
    "diff_hunk": "@@ -0,0 +1,152 @@\n+// Copyright (c) 2016-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <base58.h>\n+#include <fs.h>\n+#include <util.h>\n+#include <wallet/wallet.h>\n+#include <wallet/walletutil.h>\n+\n+namespace WalletTool {\n+\n+// The standard wallet deleter function blocks on the validation interface\n+// queue, which doesn't exist for the bitcoin-wallet. Define our own\n+// deleter here.\n+static void WalletToolReleaseWallet(CWallet* wallet)\n+{\n+    wallet->WalletLogPrintf(\"Releasing wallet\\n\");\n+    wallet->Flush();\n+    delete wallet;\n+}\n+\n+static std::shared_ptr<CWallet> CreateWallet(const std::string& name, const fs::path& path)\n+{\n+    if (fs::exists(path)) {\n+        fprintf(stderr, \"Error: File exists already\\n\");\n+        return nullptr;\n+    }\n+    std::shared_ptr<CWallet> wallet_instance(new CWallet(name, WalletDatabase::Create(path)), WalletToolReleaseWallet);\n+    bool first_run = true;\n+    DBErrors load_wallet_ret = wallet_instance->LoadWallet(first_run);\n+    if (load_wallet_ret != DBErrors::LOAD_OK) {\n+        fprintf(stderr, \"Error creating %s\", name.c_str());\n+        return nullptr;\n+    }\n+\n+    wallet_instance->SetMinVersion(FEATURE_HD_SPLIT);\n+\n+    // generate a new HD seed\n+    CPubKey seed = wallet_instance->GenerateNewSeed();\n+    wallet_instance->SetHDSeed(seed);\n+\n+    fprintf(stdout, \"Topping up keypool...\\n\");\n+    wallet_instance->TopUpKeyPool();\n+    return wallet_instance;\n+}\n+\n+static std::shared_ptr<CWallet> LoadWallet(const std::string& name, const fs::path& path)\n+{\n+    if (!fs::exists(path)) {\n+        fprintf(stderr, \"Error: Wallet files does not exist\\n\");\n+        return nullptr;\n+    }\n+\n+    std::shared_ptr<CWallet> wallet_instance(new CWallet(name, WalletDatabase::Create(path)), WalletToolReleaseWallet);\n+    bool first_run;\n+    DBErrors load_wallet_ret;\n+    try {\n+        load_wallet_ret = wallet_instance->LoadWallet(first_run);\n+    } catch (const std::runtime_error) {\n+        fprintf(stderr, \"Error loading %s. Is wallet being used by other process?\\n\", name.c_str());\n+        return nullptr;\n+    }\n+\n+    if (load_wallet_ret != DBErrors::LOAD_OK) {\n+        wallet_instance = nullptr;\n+        if (load_wallet_ret == DBErrors::CORRUPT) {\n+            fprintf(stderr, \"Error loading %s: Wallet corrupted\", name.c_str());\n+            return nullptr;\n+        } else if (load_wallet_ret == DBErrors::NONCRITICAL_ERROR) {\n+            fprintf(stderr, \"Error reading %s! All keys read correctly, but transaction data\"\n+                            \" or address book entries might be missing or incorrect.\",\n+                name.c_str());\n+        } else if (load_wallet_ret == DBErrors::TOO_NEW) {\n+            fprintf(stderr, \"Error loading %s: Wallet requires newer version of %s\",\n+                name.c_str(), PACKAGE_NAME);\n+            return nullptr;\n+        } else if (load_wallet_ret == DBErrors::NEED_REWRITE) {\n+            fprintf(stderr, \"Wallet needed to be rewritten: restart %s to complete\", PACKAGE_NAME);\n+            return nullptr;\n+        } else {\n+            fprintf(stderr, \"Error loading %s\", name.c_str());\n+            return nullptr;\n+        }\n+    }\n+\n+    return wallet_instance;\n+}\n+\n+static void WalletShowInfo(CWallet* wallet_instance)\n+{\n+    // lock required because of some AssertLockHeld()\n+    LOCK(wallet_instance->cs_wallet);\n+\n+    fprintf(stdout, \"Wallet info\\n===========\\n\");\n+    fprintf(stdout, \"Encrypted: %s\\n\", wallet_instance->IsCrypted() ? \"yes\" : \"no\");\n+    fprintf(stdout, \"HD (hd seed available): %s\\n\", wallet_instance->GetHDChain().seed_id.IsNull() ? \"no\" : \"yes\");\n+    fprintf(stdout, \"Keypool Size: %u\\n\", wallet_instance->GetKeyPoolSize());\n+    fprintf(stdout, \"Transactions: %zu\\n\", wallet_instance->mapWallet.size());\n+    fprintf(stdout, \"Address Book: %zu\\n\", wallet_instance->mapAddressBook.size());\n+}\n+\n+bool ExecuteWalletToolFunc(const std::string& command, const std::string& name)\n+{\n+    fs::path path = fs::absolute(name, GetWalletDir());\n+\n+    if (command == \"create\") {\n+        std::shared_ptr<CWallet> wallet_instance = CreateWallet(name, path);\n+        if (wallet_instance) {\n+            WalletShowInfo(wallet_instance.get());\n+            wallet_instance->Flush();\n+        }\n+    } else if (command == \"info\") {\n+        std::shared_ptr<CWallet> wallet_instance = LoadWallet(name, path);\n+        if (!wallet_instance) return false;\n+        WalletShowInfo(wallet_instance.get());\n+        wallet_instance->Flush();\n+    } else if (command == \"salvage\") {\n+        // Recover readable keypairs:\n+        std::string error;\n+        if (!WalletBatch::VerifyEnvironment(path, error)) {\n+            fprintf(stderr, \"WalletBatch::VerifyEnvironment Error: %s\\n\", error.c_str());\n+            return false;\n+        }\n+\n+        CWallet dummyWallet(\"dummy\", WalletDatabase::CreateDummy());\n+        std::string backup_filename;\n+        if (!WalletBatch::Recover(path, (void*)&dummyWallet, WalletBatch::RecoverKeysOnlyFilter, backup_filename)) {\n+            fprintf(stderr, \"Salvage failed\\n\");\n+            return false;\n+        }\n+        //TODO, set wallets best block to genesis to enforce a rescan",
    "path": "src/wallet/wallettool.cpp",
    "position": null,
    "original_position": 132,
    "commit_id": "3c3e31c3a49c657093cacdff2c1c5e25363902ce",
    "original_commit_id": "9258bb73e2bb432e03c6762d341e9cdcb69efb9e",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: Should have a space between `//` and comment.",
    "created_at": "2018-10-01T20:54:23Z",
    "updated_at": "2019-01-30T21:27:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r221753323",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/221753323"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r221753323"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/221753323/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 132,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/223248975",
    "pull_request_review_id": 162329580,
    "id": 223248975,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyMzI0ODk3NQ==",
    "diff_hunk": "@@ -0,0 +1,103 @@\n+// Copyright (c) 2016-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <chainparams.h>\n+#include <chainparamsbase.h>\n+#include <consensus/consensus.h>\n+#include <logging.h>\n+#include <util.h>\n+#include <utilstrencodings.h>\n+#include <wallet/wallettool.h>\n+\n+#include <stdio.h>\n+\n+const std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n+\n+static void SetupWalletToolArgs()\n+{\n+    gArgs.AddArg(\"-?\", \"This help message\", false, OptionsCategory::OPTIONS);\n+    gArgs.AddArg(\"-name=<wallet-name>\", \"Specify wallet name\", false, OptionsCategory::OPTIONS);\n+\n+    gArgs.AddArg(\"info\", \"Get wallet info\", false, OptionsCategory::COMMANDS);\n+    gArgs.AddArg(\"create\", \"Create new wallet file\", false, OptionsCategory::COMMANDS);\n+    gArgs.AddArg(\"salvage\", \"Recover readable keypairs\", false, OptionsCategory::COMMANDS);\n+    gArgs.AddArg(\"zaptxs\", \"Remove all transactions including metadata (will keep keys)\", false, OptionsCategory::COMMANDS);\n+\n+    // Hidden\n+    gArgs.AddArg(\"-h\", \"\", false, OptionsCategory::HIDDEN);\n+    gArgs.AddArg(\"-help\", \"\", false, OptionsCategory::HIDDEN);\n+}\n+\n+static bool WalletAppInit(int argc, char* argv[])\n+{\n+    SetupWalletToolArgs();\n+    std::string error;\n+    if (!gArgs.ParseParameters(argc, argv, error)) {\n+        fprintf(stderr, \"Error parsing command line arguments: %s\\n\", error.c_str());\n+        return false;\n+    }\n+    if (argc < 2 || HelpRequested(gArgs)) {\n+        std::string usage = strprintf(_(\"%s wallet-tool version\"), PACKAGE_NAME) + \" \" + FormatFullVersion() + \"\\n\\n\" +\n+                                      _(\"Usage:\") + \"\\n\" +\n+                                     \"  bitcoin-wallet [options] <command>\\n\\n\" +\n+                                     gArgs.GetHelpMessage();\n+\n+        fprintf(stdout, \"%s\", usage.c_str());\n+        return false;\n+    }\n+\n+    // check for printtoconsole, allow -debug\n+    g_logger->m_print_to_console = gArgs.GetBoolArg(\"-printtoconsole\", gArgs.GetBoolArg(\"-debug\", false));\n+\n+    // Check for -testnet or -regtest parameter (Params() calls are only valid after this clause)\n+    try {\n+        SelectParams(gArgs.GetChainName());\n+    } catch (const std::exception& e) {\n+        fprintf(stderr, \"Error: %s\\n\", e.what());\n+        return false;\n+    }\n+\n+    return true;\n+}\n+\n+int main(int argc, char* argv[])\n+{\n+    SetupEnvironment();",
    "path": "src/bitcoin-wallet.cpp",
    "position": 79,
    "original_position": 70,
    "commit_id": "3c3e31c3a49c657093cacdff2c1c5e25363902ce",
    "original_commit_id": "9258bb73e2bb432e03c6762d341e9cdcb69efb9e",
    "user": {
      "login": "ken2812221",
      "id": 11154118,
      "node_id": "MDQ6VXNlcjExMTU0MTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/11154118?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ken2812221",
      "html_url": "https://github.com/ken2812221",
      "followers_url": "https://api.github.com/users/ken2812221/followers",
      "following_url": "https://api.github.com/users/ken2812221/following{/other_user}",
      "gists_url": "https://api.github.com/users/ken2812221/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ken2812221/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ken2812221/subscriptions",
      "organizations_url": "https://api.github.com/users/ken2812221/orgs",
      "repos_url": "https://api.github.com/users/ken2812221/repos",
      "events_url": "https://api.github.com/users/ken2812221/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ken2812221/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Could you follow #13883 to add a Windows argument handler here?",
    "created_at": "2018-10-08T05:10:20Z",
    "updated_at": "2019-01-30T21:27:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r223248975",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/223248975"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r223248975"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/223248975/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 79,
    "original_line": 79,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/225695497",
    "pull_request_review_id": 165351938,
    "id": 225695497,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNTY5NTQ5Nw==",
    "diff_hunk": "@@ -0,0 +1,101 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test bitcoint-wallet-tool.",
    "path": "test/functional/tool_wallet.py",
    "position": null,
    "original_position": 5,
    "commit_id": "3c3e31c3a49c657093cacdff2c1c5e25363902ce",
    "original_commit_id": "9258bb73e2bb432e03c6762d341e9cdcb69efb9e",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Should be \"bitcoin-wallet-tool\"? :-)",
    "created_at": "2018-10-16T20:25:43Z",
    "updated_at": "2019-01-30T21:27:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r225695497",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/225695497"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r225695497"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/225695497/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 5,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/226068513",
    "pull_request_review_id": 165803028,
    "id": 226068513,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNjA2ODUxMw==",
    "diff_hunk": "@@ -0,0 +1,101 @@\n+#!/usr/bin/env python3",
    "path": "test/functional/tool_wallet.py",
    "position": 1,
    "original_position": 1,
    "commit_id": "3c3e31c3a49c657093cacdff2c1c5e25363902ce",
    "original_commit_id": "793cd32ba7b7fbbc918da981b92120ee776e2b0a",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "done",
    "created_at": "2018-10-17T19:40:35Z",
    "updated_at": "2019-01-30T21:27:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r226068513",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/226068513"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r226068513"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/226068513/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1,
    "original_line": 1,
    "side": "RIGHT",
    "in_reply_to_id": 220958310
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/226069593",
    "pull_request_review_id": 165804445,
    "id": 226069593,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNjA2OTU5Mw==",
    "diff_hunk": "@@ -0,0 +1,152 @@\n+// Copyright (c) 2016-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <base58.h>\n+#include <fs.h>\n+#include <util.h>\n+#include <wallet/wallet.h>\n+#include <wallet/walletutil.h>\n+\n+namespace WalletTool {\n+\n+// The standard wallet deleter function blocks on the validation interface\n+// queue, which doesn't exist for the bitcoin-wallet. Define our own\n+// deleter here.\n+static void WalletToolReleaseWallet(CWallet* wallet)\n+{\n+    wallet->WalletLogPrintf(\"Releasing wallet\\n\");\n+    wallet->Flush();\n+    delete wallet;\n+}\n+\n+static std::shared_ptr<CWallet> CreateWallet(const std::string& name, const fs::path& path)\n+{\n+    if (fs::exists(path)) {\n+        fprintf(stderr, \"Error: File exists already\\n\");\n+        return nullptr;\n+    }\n+    std::shared_ptr<CWallet> wallet_instance(new CWallet(name, WalletDatabase::Create(path)), WalletToolReleaseWallet);\n+    bool first_run = true;\n+    DBErrors load_wallet_ret = wallet_instance->LoadWallet(first_run);\n+    if (load_wallet_ret != DBErrors::LOAD_OK) {\n+        fprintf(stderr, \"Error creating %s\", name.c_str());\n+        return nullptr;\n+    }\n+\n+    wallet_instance->SetMinVersion(FEATURE_HD_SPLIT);\n+\n+    // generate a new HD seed\n+    CPubKey seed = wallet_instance->GenerateNewSeed();\n+    wallet_instance->SetHDSeed(seed);\n+\n+    fprintf(stdout, \"Topping up keypool...\\n\");\n+    wallet_instance->TopUpKeyPool();\n+    return wallet_instance;\n+}\n+\n+static std::shared_ptr<CWallet> LoadWallet(const std::string& name, const fs::path& path)\n+{\n+    if (!fs::exists(path)) {\n+        fprintf(stderr, \"Error: Wallet files does not exist\\n\");\n+        return nullptr;\n+    }\n+\n+    std::shared_ptr<CWallet> wallet_instance(new CWallet(name, WalletDatabase::Create(path)), WalletToolReleaseWallet);\n+    bool first_run;\n+    DBErrors load_wallet_ret;\n+    try {\n+        load_wallet_ret = wallet_instance->LoadWallet(first_run);\n+    } catch (const std::runtime_error) {\n+        fprintf(stderr, \"Error loading %s. Is wallet being used by other process?\\n\", name.c_str());\n+        return nullptr;\n+    }\n+\n+    if (load_wallet_ret != DBErrors::LOAD_OK) {\n+        wallet_instance = nullptr;\n+        if (load_wallet_ret == DBErrors::CORRUPT) {\n+            fprintf(stderr, \"Error loading %s: Wallet corrupted\", name.c_str());\n+            return nullptr;\n+        } else if (load_wallet_ret == DBErrors::NONCRITICAL_ERROR) {\n+            fprintf(stderr, \"Error reading %s! All keys read correctly, but transaction data\"\n+                            \" or address book entries might be missing or incorrect.\",\n+                name.c_str());\n+        } else if (load_wallet_ret == DBErrors::TOO_NEW) {\n+            fprintf(stderr, \"Error loading %s: Wallet requires newer version of %s\",\n+                name.c_str(), PACKAGE_NAME);\n+            return nullptr;\n+        } else if (load_wallet_ret == DBErrors::NEED_REWRITE) {\n+            fprintf(stderr, \"Wallet needed to be rewritten: restart %s to complete\", PACKAGE_NAME);\n+            return nullptr;\n+        } else {\n+            fprintf(stderr, \"Error loading %s\", name.c_str());\n+            return nullptr;\n+        }\n+    }\n+\n+    return wallet_instance;\n+}\n+\n+static void WalletShowInfo(CWallet* wallet_instance)\n+{\n+    // lock required because of some AssertLockHeld()\n+    LOCK(wallet_instance->cs_wallet);\n+\n+    fprintf(stdout, \"Wallet info\\n===========\\n\");\n+    fprintf(stdout, \"Encrypted: %s\\n\", wallet_instance->IsCrypted() ? \"yes\" : \"no\");\n+    fprintf(stdout, \"HD (hd seed available): %s\\n\", wallet_instance->GetHDChain().seed_id.IsNull() ? \"no\" : \"yes\");\n+    fprintf(stdout, \"Keypool Size: %u\\n\", wallet_instance->GetKeyPoolSize());\n+    fprintf(stdout, \"Transactions: %zu\\n\", wallet_instance->mapWallet.size());\n+    fprintf(stdout, \"Address Book: %zu\\n\", wallet_instance->mapAddressBook.size());\n+}\n+\n+bool ExecuteWalletToolFunc(const std::string& command, const std::string& name)\n+{\n+    fs::path path = fs::absolute(name, GetWalletDir());\n+\n+    if (command == \"create\") {\n+        std::shared_ptr<CWallet> wallet_instance = CreateWallet(name, path);\n+        if (wallet_instance) {\n+            WalletShowInfo(wallet_instance.get());\n+            wallet_instance->Flush();\n+        }\n+    } else if (command == \"info\") {\n+        std::shared_ptr<CWallet> wallet_instance = LoadWallet(name, path);\n+        if (!wallet_instance) return false;\n+        WalletShowInfo(wallet_instance.get());\n+        wallet_instance->Flush();\n+    } else if (command == \"salvage\") {\n+        // Recover readable keypairs:\n+        std::string error;\n+        if (!WalletBatch::VerifyEnvironment(path, error)) {\n+            fprintf(stderr, \"WalletBatch::VerifyEnvironment Error: %s\\n\", error.c_str());\n+            return false;\n+        }\n+\n+        CWallet dummyWallet(\"dummy\", WalletDatabase::CreateDummy());\n+        std::string backup_filename;\n+        if (!WalletBatch::Recover(path, (void*)&dummyWallet, WalletBatch::RecoverKeysOnlyFilter, backup_filename)) {\n+            fprintf(stderr, \"Salvage failed\\n\");\n+            return false;\n+        }\n+        //TODO, set wallets best block to genesis to enforce a rescan",
    "path": "src/wallet/wallettool.cpp",
    "position": null,
    "original_position": 132,
    "commit_id": "3c3e31c3a49c657093cacdff2c1c5e25363902ce",
    "original_commit_id": "9258bb73e2bb432e03c6762d341e9cdcb69efb9e",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "fixed",
    "created_at": "2018-10-17T19:44:15Z",
    "updated_at": "2019-01-30T21:27:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r226069593",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/226069593"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r226069593"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/226069593/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 132,
    "side": "RIGHT",
    "in_reply_to_id": 221753323
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/226069635",
    "pull_request_review_id": 165804490,
    "id": 226069635,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNjA2OTYzNQ==",
    "diff_hunk": "@@ -0,0 +1,101 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test bitcoint-wallet-tool.",
    "path": "test/functional/tool_wallet.py",
    "position": null,
    "original_position": 5,
    "commit_id": "3c3e31c3a49c657093cacdff2c1c5e25363902ce",
    "original_commit_id": "9258bb73e2bb432e03c6762d341e9cdcb69efb9e",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "fixed",
    "created_at": "2018-10-17T19:44:24Z",
    "updated_at": "2019-01-30T21:27:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r226069635",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/226069635"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r226069635"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/226069635/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 5,
    "side": "RIGHT",
    "in_reply_to_id": 225695497
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/226070318",
    "pull_request_review_id": 165805413,
    "id": 226070318,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNjA3MDMxOA==",
    "diff_hunk": "@@ -0,0 +1,103 @@\n+// Copyright (c) 2016-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <chainparams.h>\n+#include <chainparamsbase.h>\n+#include <consensus/consensus.h>\n+#include <logging.h>\n+#include <util.h>\n+#include <utilstrencodings.h>\n+#include <wallet/wallettool.h>\n+\n+#include <stdio.h>\n+\n+const std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n+\n+static void SetupWalletToolArgs()\n+{\n+    gArgs.AddArg(\"-?\", \"This help message\", false, OptionsCategory::OPTIONS);\n+    gArgs.AddArg(\"-name=<wallet-name>\", \"Specify wallet name\", false, OptionsCategory::OPTIONS);\n+\n+    gArgs.AddArg(\"info\", \"Get wallet info\", false, OptionsCategory::COMMANDS);\n+    gArgs.AddArg(\"create\", \"Create new wallet file\", false, OptionsCategory::COMMANDS);\n+    gArgs.AddArg(\"salvage\", \"Recover readable keypairs\", false, OptionsCategory::COMMANDS);\n+    gArgs.AddArg(\"zaptxs\", \"Remove all transactions including metadata (will keep keys)\", false, OptionsCategory::COMMANDS);\n+\n+    // Hidden\n+    gArgs.AddArg(\"-h\", \"\", false, OptionsCategory::HIDDEN);\n+    gArgs.AddArg(\"-help\", \"\", false, OptionsCategory::HIDDEN);\n+}\n+\n+static bool WalletAppInit(int argc, char* argv[])\n+{\n+    SetupWalletToolArgs();\n+    std::string error;\n+    if (!gArgs.ParseParameters(argc, argv, error)) {\n+        fprintf(stderr, \"Error parsing command line arguments: %s\\n\", error.c_str());\n+        return false;\n+    }\n+    if (argc < 2 || HelpRequested(gArgs)) {\n+        std::string usage = strprintf(_(\"%s wallet-tool version\"), PACKAGE_NAME) + \" \" + FormatFullVersion() + \"\\n\\n\" +\n+                                      _(\"Usage:\") + \"\\n\" +\n+                                     \"  bitcoin-wallet [options] <command>\\n\\n\" +\n+                                     gArgs.GetHelpMessage();\n+\n+        fprintf(stdout, \"%s\", usage.c_str());\n+        return false;\n+    }\n+\n+    // check for printtoconsole, allow -debug\n+    g_logger->m_print_to_console = gArgs.GetBoolArg(\"-printtoconsole\", gArgs.GetBoolArg(\"-debug\", false));\n+\n+    // Check for -testnet or -regtest parameter (Params() calls are only valid after this clause)\n+    try {\n+        SelectParams(gArgs.GetChainName());\n+    } catch (const std::exception& e) {\n+        fprintf(stderr, \"Error: %s\\n\", e.what());\n+        return false;\n+    }\n+\n+    return true;\n+}\n+\n+int main(int argc, char* argv[])\n+{\n+    SetupEnvironment();",
    "path": "src/bitcoin-wallet.cpp",
    "position": 79,
    "original_position": 70,
    "commit_id": "3c3e31c3a49c657093cacdff2c1c5e25363902ce",
    "original_commit_id": "9258bb73e2bb432e03c6762d341e9cdcb69efb9e",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "done",
    "created_at": "2018-10-17T19:46:55Z",
    "updated_at": "2019-01-30T21:27:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r226070318",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/226070318"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r226070318"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/226070318/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 79,
    "original_line": 79,
    "side": "RIGHT",
    "in_reply_to_id": 223248975
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/226094452",
    "pull_request_review_id": 165836277,
    "id": 226094452,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNjA5NDQ1Mg==",
    "diff_hunk": "@@ -0,0 +1,101 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test bitcoint-wallet-tool.\n+\"\"\"\n+\n+import os\n+import subprocess\n+import textwrap\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+class ToolWalletTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def process(self, *args):\n+        binary = self.config[\"environment\"][\"BUILDDIR\"] + '/src/bitcoin-wallet' + self.config[\"environment\"][\"EXEEXT\"]\n+        return subprocess.Popen([binary] + list(args), stdin=subprocess.PIPE, stdout=subprocess.PIPE, stderr=subprocess.PIPE, universal_newlines=True)\n+\n+    def assert_raises_tool_error(self, error, *args):\n+        process = self.process(*args)\n+        stdout, stderr = process.communicate()\n+        assert_equal(process.poll(), 1)\n+        assert_equal(stdout, '')\n+        assert_equal(stderr.strip(), error)\n+\n+    def assert_tool_output(self, output, *args):\n+        process = self.process(*args)\n+        stdout, stderr = process.communicate()\n+        assert_equal(process.poll(), 0)\n+        assert_equal(stderr, '')\n+        assert_equal(stdout, output)\n+\n+    def run_test(self):\n+\n+        self.assert_raises_tool_error('Invalid command: foo', 'foo')\n+        self.assert_raises_tool_error('Error parsing command line arguments: Invalid parameter -foo', '-foo')\n+\n+        wallet_dir = lambda *p: data_dir('wallets', *p)\n+        data_dir = lambda *p: os.path.join(self.nodes[0].datadir, 'regtest', *p)\n+\n+        # TODO calling info on a wallet already opened results in the segfault:\n+        #  `libc++abi.dylib: terminating with uncaught exception of type std::runtime_error: BerkeleyBatch: Failed to open database environment`\n+        #  the error must be fixed and tested here",
    "path": "test/functional/tool_wallet.py",
    "position": null,
    "original_position": 47,
    "commit_id": "3c3e31c3a49c657093cacdff2c1c5e25363902ce",
    "original_commit_id": "9258bb73e2bb432e03c6762d341e9cdcb69efb9e",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This is now fixed, and the test case has been added to `tool_wallet.py`",
    "created_at": "2018-10-17T21:05:09Z",
    "updated_at": "2019-01-30T21:27:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r226094452",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/226094452"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r226094452"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/226094452/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 47,
    "side": "RIGHT",
    "in_reply_to_id": 221222197
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/227249444",
    "pull_request_review_id": 167244749,
    "id": 227249444,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNzI0OTQ0NA==",
    "diff_hunk": "@@ -509,6 +521,32 @@ bitcoin_tx_LDADD = \\\n bitcoin_tx_LDADD += $(BOOST_LIBS) $(CRYPTO_LIBS)\n #\n \n+# bitcoin-wallet-tool binary #",
    "path": "src/Makefile.am",
    "position": null,
    "original_position": 51,
    "commit_id": "3c3e31c3a49c657093cacdff2c1c5e25363902ce",
    "original_commit_id": "fdbb2d58729ede340ee60718b229044971146e93",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Nag nit (though don't bother if there's no other changes needed)",
    "created_at": "2018-10-23T07:03:10Z",
    "updated_at": "2019-01-30T21:27:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r227249444",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/227249444"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r227249444"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/227249444/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 539,
    "side": "RIGHT",
    "in_reply_to_id": 220175413
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/227259780",
    "pull_request_review_id": 167244749,
    "id": 227259780,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNzI1OTc4MA==",
    "diff_hunk": "@@ -0,0 +1,117 @@\n+// Copyright (c) 2016-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <chainparams.h>\n+#include <chainparamsbase.h>\n+#include <consensus/consensus.h>\n+#include <logging.h>\n+#include <util.h>\n+#include <utilstrencodings.h>\n+#include <wallet/wallettool.h>\n+\n+#include <stdio.h>\n+\n+const std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n+\n+static void SetupWalletToolArgs()\n+{\n+    SetupChainParamsBaseOptions();\n+\n+    gArgs.AddArg(\"-?\", \"This help message\", false, OptionsCategory::OPTIONS);\n+    gArgs.AddArg(\"-datadir=<dir>\", \"Specify data directory\", false, OptionsCategory::OPTIONS);\n+    gArgs.AddArg(\"-wallet=<wallet-name>\", \"Specify wallet name\", false, OptionsCategory::OPTIONS);\n+\n+    gArgs.AddArg(\"info\", \"Get wallet info\", false, OptionsCategory::COMMANDS);\n+    gArgs.AddArg(\"create\", \"Create new wallet file\", false, OptionsCategory::COMMANDS);\n+    gArgs.AddArg(\"salvage\", \"Recover readable keypairs\", false, OptionsCategory::COMMANDS);\n+    gArgs.AddArg(\"zaptxs\", \"Remove all transactions including metadata (will keep keys)\", false, OptionsCategory::COMMANDS);\n+\n+    // Hidden\n+    gArgs.AddArg(\"-h\", \"\", false, OptionsCategory::HIDDEN);\n+    gArgs.AddArg(\"-help\", \"\", false, OptionsCategory::HIDDEN);\n+}\n+\n+static bool WalletAppInit(int argc, char* argv[])\n+{\n+    SetupWalletToolArgs();\n+    std::string error;\n+    if (!gArgs.ParseParameters(argc, argv, error)) {\n+        fprintf(stderr, \"Error parsing command line arguments: %s\\n\", error.c_str());\n+        return false;\n+    }\n+    if (argc < 2 || HelpRequested(gArgs)) {\n+        std::string usage = strprintf(\"%s bitcoin-wallet version\", PACKAGE_NAME) + \" \" + FormatFullVersion() + \"\\n\\n\" +\n+                                      \"wallet-tool is an offline tool for creating and interacting with Bitcoin Core wallet files.\\n\" +\n+                                      \"By default wallet-tool will act on wallets in the default wallet directory in the datadir.\\n\" +",
    "path": "src/bitcoin-wallet.cpp",
    "position": null,
    "original_position": 50,
    "commit_id": "3c3e31c3a49c657093cacdff2c1c5e25363902ce",
    "original_commit_id": "ebd8417a6b8fbb1575140f0f04b568f17a47914a",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Nit: \"the datadir for mainnet\" (since `testnet=1` in `bitcoin.conf` is ignored)",
    "created_at": "2018-10-23T07:36:50Z",
    "updated_at": "2019-01-30T21:27:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r227259780",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/227259780"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r227259780"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/227259780/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 50,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/231685847",
    "pull_request_review_id": 172710869,
    "id": 231685847,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMTY4NTg0Nw==",
    "diff_hunk": "@@ -1111,7 +1118,7 @@ else\n   AC_CHECK_HEADER([openssl/ssl.h],, AC_MSG_ERROR(libssl headers missing),)\n   AC_CHECK_LIB([ssl],         [main],SSL_LIBS=-lssl, AC_MSG_ERROR(libssl missing))\n \n-  if test x$build_bitcoin_cli$build_bitcoin_tx$build_bitcoind$bitcoin_enable_qt$use_tests != xnonononono; then\n+  if test x$build_bitcoin_wallet$build_bitcoin_cli$build_bitcoin_tx$build_bitcoind$bitcoin_enable_qt$use_tests != xnononononono; then",
    "path": "configure.ac",
    "position": null,
    "original_position": 53,
    "commit_id": "3c3e31c3a49c657093cacdff2c1c5e25363902ce",
    "original_commit_id": "ebd8417a6b8fbb1575140f0f04b568f17a47914a",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think you no longer link against libevent, so this could be removed?",
    "created_at": "2018-11-07T21:37:01Z",
    "updated_at": "2019-01-30T21:27:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r231685847",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/231685847"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r231685847"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/231685847/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1136,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/232175138",
    "pull_request_review_id": 173314486,
    "id": 232175138,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMjE3NTEzOA==",
    "diff_hunk": "@@ -0,0 +1,157 @@\n+// Copyright (c) 2016-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <base58.h>\n+#include <fs.h>\n+#include <util.h>\n+#include <wallet/wallet.h>\n+#include <wallet/walletutil.h>\n+\n+namespace WalletTool {\n+\n+// The standard wallet deleter function blocks on the validation interface\n+// queue, which doesn't exist for the bitcoin-wallet. Define our own\n+// deleter here.\n+static void WalletToolReleaseWallet(CWallet* wallet)\n+{\n+    wallet->WalletLogPrintf(\"Releasing wallet\\n\");\n+    wallet->Flush();\n+    delete wallet;\n+}\n+\n+static std::shared_ptr<CWallet> CreateWallet(const std::string& name, const fs::path& path)\n+{\n+    if (fs::exists(path)) {\n+        fprintf(stderr, \"Error: File exists already\\n\");\n+        return nullptr;\n+    }\n+    std::shared_ptr<CWallet> wallet_instance(new CWallet(name, WalletDatabase::Create(path)), WalletToolReleaseWallet);\n+    bool first_run = true;\n+    DBErrors load_wallet_ret = wallet_instance->LoadWallet(first_run);\n+    if (load_wallet_ret != DBErrors::LOAD_OK) {\n+        fprintf(stderr, \"Error creating %s\", name.c_str());\n+        return nullptr;\n+    }\n+\n+    wallet_instance->SetMinVersion(FEATURE_HD_SPLIT);\n+\n+    // generate a new HD seed\n+    CPubKey seed = wallet_instance->GenerateNewSeed();\n+    wallet_instance->SetHDSeed(seed);\n+\n+    fprintf(stdout, \"Topping up keypool...\\n\");\n+    wallet_instance->TopUpKeyPool();\n+    return wallet_instance;\n+}\n+\n+static std::shared_ptr<CWallet> LoadWallet(const std::string& name, const fs::path& path)\n+{\n+    if (!fs::exists(path)) {\n+        fprintf(stderr, \"Error: Wallet files does not exist\\n\");\n+        return nullptr;\n+    }\n+\n+    std::shared_ptr<CWallet> wallet_instance(new CWallet(name, WalletDatabase::Create(path)), WalletToolReleaseWallet);\n+    bool first_run;",
    "path": "src/wallet/wallettool.cpp",
    "position": null,
    "original_position": 56,
    "commit_id": "3c3e31c3a49c657093cacdff2c1c5e25363902ce",
    "original_commit_id": "ebd8417a6b8fbb1575140f0f04b568f17a47914a",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Reduce scope of `first_run` :-)",
    "created_at": "2018-11-09T08:39:25Z",
    "updated_at": "2019-01-30T21:27:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r232175138",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/232175138"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r232175138"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/232175138/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 61,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/232673767",
    "pull_request_review_id": 173920140,
    "id": 232673767,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMjY3Mzc2Nw==",
    "diff_hunk": "@@ -0,0 +1,157 @@\n+// Copyright (c) 2016-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <base58.h>\n+#include <fs.h>\n+#include <util.h>\n+#include <wallet/wallet.h>\n+#include <wallet/walletutil.h>\n+\n+namespace WalletTool {\n+\n+// The standard wallet deleter function blocks on the validation interface\n+// queue, which doesn't exist for the bitcoin-wallet. Define our own\n+// deleter here.\n+static void WalletToolReleaseWallet(CWallet* wallet)\n+{\n+    wallet->WalletLogPrintf(\"Releasing wallet\\n\");\n+    wallet->Flush();\n+    delete wallet;\n+}\n+\n+static std::shared_ptr<CWallet> CreateWallet(const std::string& name, const fs::path& path)\n+{\n+    if (fs::exists(path)) {\n+        fprintf(stderr, \"Error: File exists already\\n\");\n+        return nullptr;\n+    }\n+    std::shared_ptr<CWallet> wallet_instance(new CWallet(name, WalletDatabase::Create(path)), WalletToolReleaseWallet);\n+    bool first_run = true;\n+    DBErrors load_wallet_ret = wallet_instance->LoadWallet(first_run);\n+    if (load_wallet_ret != DBErrors::LOAD_OK) {\n+        fprintf(stderr, \"Error creating %s\", name.c_str());\n+        return nullptr;\n+    }\n+\n+    wallet_instance->SetMinVersion(FEATURE_HD_SPLIT);\n+\n+    // generate a new HD seed\n+    CPubKey seed = wallet_instance->GenerateNewSeed();\n+    wallet_instance->SetHDSeed(seed);\n+\n+    fprintf(stdout, \"Topping up keypool...\\n\");\n+    wallet_instance->TopUpKeyPool();\n+    return wallet_instance;\n+}\n+\n+static std::shared_ptr<CWallet> LoadWallet(const std::string& name, const fs::path& path)\n+{\n+    if (!fs::exists(path)) {\n+        fprintf(stderr, \"Error: Wallet files does not exist\\n\");\n+        return nullptr;\n+    }\n+\n+    std::shared_ptr<CWallet> wallet_instance(new CWallet(name, WalletDatabase::Create(path)), WalletToolReleaseWallet);\n+    bool first_run;\n+    DBErrors load_wallet_ret;\n+    try {\n+        load_wallet_ret = wallet_instance->LoadWallet(first_run);\n+    } catch (const std::runtime_error) {\n+        fprintf(stderr, \"Error loading %s. Is wallet being used by other process?\\n\", name.c_str());\n+        return nullptr;\n+    }\n+\n+    if (load_wallet_ret != DBErrors::LOAD_OK) {\n+        wallet_instance = nullptr;\n+        if (load_wallet_ret == DBErrors::CORRUPT) {\n+            fprintf(stderr, \"Error loading %s: Wallet corrupted\", name.c_str());\n+            return nullptr;\n+        } else if (load_wallet_ret == DBErrors::NONCRITICAL_ERROR) {\n+            fprintf(stderr, \"Error reading %s! All keys read correctly, but transaction data\"\n+                            \" or address book entries might be missing or incorrect.\",\n+                name.c_str());\n+        } else if (load_wallet_ret == DBErrors::TOO_NEW) {\n+            fprintf(stderr, \"Error loading %s: Wallet requires newer version of %s\",\n+                name.c_str(), PACKAGE_NAME);\n+            return nullptr;\n+        } else if (load_wallet_ret == DBErrors::NEED_REWRITE) {\n+            fprintf(stderr, \"Wallet needed to be rewritten: restart %s to complete\", PACKAGE_NAME);\n+            return nullptr;\n+        } else {\n+            fprintf(stderr, \"Error loading %s\", name.c_str());\n+            return nullptr;\n+        }\n+    }\n+\n+    return wallet_instance;\n+}\n+\n+static void WalletShowInfo(CWallet* wallet_instance)\n+{\n+    // lock required because of some AssertLockHeld()\n+    LOCK(wallet_instance->cs_wallet);\n+\n+    fprintf(stdout, \"Wallet info\\n===========\\n\");\n+    fprintf(stdout, \"Encrypted: %s\\n\", wallet_instance->IsCrypted() ? \"yes\" : \"no\");\n+    fprintf(stdout, \"HD (hd seed available): %s\\n\", wallet_instance->GetHDChain().seed_id.IsNull() ? \"no\" : \"yes\");\n+    fprintf(stdout, \"Keypool Size: %u\\n\", wallet_instance->GetKeyPoolSize());\n+    fprintf(stdout, \"Transactions: %zu\\n\", wallet_instance->mapWallet.size());\n+    fprintf(stdout, \"Address Book: %zu\\n\", wallet_instance->mapAddressBook.size());\n+}\n+\n+bool ExecuteWalletToolFunc(const std::string& command, const std::string& name)\n+{\n+    fs::path path = fs::absolute(name, GetWalletDir());\n+\n+    if (command == \"create\") {\n+        std::shared_ptr<CWallet> wallet_instance = CreateWallet(name, path);\n+        if (wallet_instance) {\n+            WalletShowInfo(wallet_instance.get());\n+            wallet_instance->Flush();\n+        }\n+    } else if (command == \"info\") {\n+        std::string error;\n+        if (!WalletBatch::VerifyEnvironment(path, error)) {\n+            fprintf(stderr, \"Error loading %s. Is wallet being used by other process?\\n\", name.c_str());",
    "path": "src/wallet/wallettool.cpp",
    "position": 125,
    "original_position": 116,
    "commit_id": "3c3e31c3a49c657093cacdff2c1c5e25363902ce",
    "original_commit_id": "4359b0a96ee68d538315ad0bdd56909d16ca8850",
    "user": {
      "login": "meshcollider",
      "id": 3211283,
      "node_id": "MDQ6VXNlcjMyMTEyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meshcollider",
      "html_url": "https://github.com/meshcollider",
      "followers_url": "https://api.github.com/users/meshcollider/followers",
      "following_url": "https://api.github.com/users/meshcollider/following{/other_user}",
      "gists_url": "https://api.github.com/users/meshcollider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
      "organizations_url": "https://api.github.com/users/meshcollider/orgs",
      "repos_url": "https://api.github.com/users/meshcollider/repos",
      "events_url": "https://api.github.com/users/meshcollider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meshcollider/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: \"another process\"",
    "created_at": "2018-11-12T14:19:34Z",
    "updated_at": "2019-01-30T21:27:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r232673767",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/232673767"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r232673767"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/232673767/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 125,
    "original_line": 125,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245673729",
    "pull_request_review_id": 189833305,
    "id": 245673729,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NTY3MzcyOQ==",
    "diff_hunk": "@@ -0,0 +1,117 @@\n+// Copyright (c) 2016-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <chainparams.h>\n+#include <chainparamsbase.h>\n+#include <consensus/consensus.h>\n+#include <logging.h>\n+#include <util.h>\n+#include <utilstrencodings.h>\n+#include <wallet/wallettool.h>\n+\n+#include <stdio.h>\n+\n+const std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n+\n+static void SetupWalletToolArgs()\n+{\n+    SetupChainParamsBaseOptions();\n+\n+    gArgs.AddArg(\"-?\", \"This help message\", false, OptionsCategory::OPTIONS);\n+    gArgs.AddArg(\"-datadir=<dir>\", \"Specify data directory\", false, OptionsCategory::OPTIONS);\n+    gArgs.AddArg(\"-wallet=<wallet-name>\", \"Specify wallet name\", false, OptionsCategory::OPTIONS);\n+\n+    gArgs.AddArg(\"info\", \"Get wallet info\", false, OptionsCategory::COMMANDS);\n+    gArgs.AddArg(\"create\", \"Create new wallet file\", false, OptionsCategory::COMMANDS);\n+    gArgs.AddArg(\"salvage\", \"Recover readable keypairs\", false, OptionsCategory::COMMANDS);\n+    gArgs.AddArg(\"zaptxs\", \"Remove all transactions including metadata (will keep keys)\", false, OptionsCategory::COMMANDS);\n+\n+    // Hidden\n+    gArgs.AddArg(\"-h\", \"\", false, OptionsCategory::HIDDEN);\n+    gArgs.AddArg(\"-help\", \"\", false, OptionsCategory::HIDDEN);\n+}\n+\n+static bool WalletAppInit(int argc, char* argv[])\n+{\n+    SetupWalletToolArgs();\n+    std::string error;",
    "path": "src/bitcoin-wallet.cpp",
    "position": null,
    "original_position": 42,
    "commit_id": "3c3e31c3a49c657093cacdff2c1c5e25363902ce",
    "original_commit_id": "ebd8417a6b8fbb1575140f0f04b568f17a47914a",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Could use variable name `errorMessage` instead to avoid shadowing `error` from `src/util/system.h`?",
    "created_at": "2019-01-07T14:38:44Z",
    "updated_at": "2019-01-30T21:27:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r245673729",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245673729"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r245673729"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245673729/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 42,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247211175",
    "pull_request_review_id": 191786315,
    "id": 247211175,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NzIxMTE3NQ==",
    "diff_hunk": "@@ -0,0 +1,103 @@\n+// Copyright (c) 2016-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <chainparams.h>\n+#include <chainparamsbase.h>\n+#include <consensus/consensus.h>\n+#include <logging.h>\n+#include <util.h>\n+#include <utilstrencodings.h>\n+#include <wallet/wallettool.h>\n+\n+#include <stdio.h>\n+\n+const std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n+\n+static void SetupWalletToolArgs()\n+{\n+    gArgs.AddArg(\"-?\", \"This help message\", false, OptionsCategory::OPTIONS);\n+    gArgs.AddArg(\"-name=<wallet-name>\", \"Specify wallet name\", false, OptionsCategory::OPTIONS);\n+\n+    gArgs.AddArg(\"info\", \"Get wallet info\", false, OptionsCategory::COMMANDS);\n+    gArgs.AddArg(\"create\", \"Create new wallet file\", false, OptionsCategory::COMMANDS);\n+    gArgs.AddArg(\"salvage\", \"Recover readable keypairs\", false, OptionsCategory::COMMANDS);\n+    gArgs.AddArg(\"zaptxs\", \"Remove all transactions including metadata (will keep keys)\", false, OptionsCategory::COMMANDS);\n+\n+    // Hidden\n+    gArgs.AddArg(\"-h\", \"\", false, OptionsCategory::HIDDEN);\n+    gArgs.AddArg(\"-help\", \"\", false, OptionsCategory::HIDDEN);\n+}\n+\n+static bool WalletAppInit(int argc, char* argv[])\n+{\n+    SetupWalletToolArgs();\n+    std::string error;\n+    if (!gArgs.ParseParameters(argc, argv, error)) {\n+        fprintf(stderr, \"Error parsing command line arguments: %s\\n\", error.c_str());\n+        return false;\n+    }\n+    if (argc < 2 || HelpRequested(gArgs)) {\n+        std::string usage = strprintf(_(\"%s wallet-tool version\"), PACKAGE_NAME) + \" \" + FormatFullVersion() + \"\\n\\n\" +\n+                                      _(\"Usage:\") + \"\\n\" +\n+                                     \"  bitcoin-wallet [options] <command>\\n\\n\" +\n+                                     gArgs.GetHelpMessage();\n+\n+        fprintf(stdout, \"%s\", usage.c_str());\n+        return false;\n+    }\n+\n+    // check for printtoconsole, allow -debug\n+    g_logger->m_print_to_console = gArgs.GetBoolArg(\"-printtoconsole\", gArgs.GetBoolArg(\"-debug\", false));",
    "path": "src/bitcoin-wallet.cpp",
    "position": 61,
    "original_position": 55,
    "commit_id": "3c3e31c3a49c657093cacdff2c1c5e25363902ce",
    "original_commit_id": "fdbb2d58729ede340ee60718b229044971146e93",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "done",
    "created_at": "2019-01-11T18:25:51Z",
    "updated_at": "2019-01-30T21:27:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r247211175",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247211175"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r247211175"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247211175/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 61,
    "original_line": 61,
    "side": "RIGHT",
    "in_reply_to_id": 219542572
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247211443",
    "pull_request_review_id": 191786682,
    "id": 247211443,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NzIxMTQ0Mw==",
    "diff_hunk": "@@ -0,0 +1,103 @@\n+// Copyright (c) 2016-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <chainparams.h>\n+#include <chainparamsbase.h>\n+#include <consensus/consensus.h>\n+#include <logging.h>\n+#include <util.h>\n+#include <utilstrencodings.h>\n+#include <wallet/wallettool.h>\n+\n+#include <stdio.h>\n+\n+const std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n+\n+static void SetupWalletToolArgs()\n+{\n+    gArgs.AddArg(\"-?\", \"This help message\", false, OptionsCategory::OPTIONS);\n+    gArgs.AddArg(\"-name=<wallet-name>\", \"Specify wallet name\", false, OptionsCategory::OPTIONS);\n+\n+    gArgs.AddArg(\"info\", \"Get wallet info\", false, OptionsCategory::COMMANDS);\n+    gArgs.AddArg(\"create\", \"Create new wallet file\", false, OptionsCategory::COMMANDS);\n+    gArgs.AddArg(\"salvage\", \"Recover readable keypairs\", false, OptionsCategory::COMMANDS);\n+    gArgs.AddArg(\"zaptxs\", \"Remove all transactions including metadata (will keep keys)\", false, OptionsCategory::COMMANDS);\n+\n+    // Hidden\n+    gArgs.AddArg(\"-h\", \"\", false, OptionsCategory::HIDDEN);\n+    gArgs.AddArg(\"-help\", \"\", false, OptionsCategory::HIDDEN);\n+}\n+\n+static bool WalletAppInit(int argc, char* argv[])\n+{\n+    SetupWalletToolArgs();\n+    std::string error;\n+    if (!gArgs.ParseParameters(argc, argv, error)) {\n+        fprintf(stderr, \"Error parsing command line arguments: %s\\n\", error.c_str());\n+        return false;\n+    }\n+    if (argc < 2 || HelpRequested(gArgs)) {\n+        std::string usage = strprintf(_(\"%s wallet-tool version\"), PACKAGE_NAME) + \" \" + FormatFullVersion() + \"\\n\\n\" +\n+                                      _(\"Usage:\") + \"\\n\" +\n+                                     \"  bitcoin-wallet [options] <command>\\n\\n\" +\n+                                     gArgs.GetHelpMessage();\n+\n+        fprintf(stdout, \"%s\", usage.c_str());\n+        return false;\n+    }\n+\n+    // check for printtoconsole, allow -debug\n+    g_logger->m_print_to_console = gArgs.GetBoolArg(\"-printtoconsole\", gArgs.GetBoolArg(\"-debug\", false));\n+\n+    // Check for -testnet or -regtest parameter (Params() calls are only valid after this clause)\n+    try {\n+        SelectParams(gArgs.GetChainName());\n+    } catch (const std::exception& e) {",
    "path": "src/bitcoin-wallet.cpp",
    "position": null,
    "original_position": 60,
    "commit_id": "3c3e31c3a49c657093cacdff2c1c5e25363902ce",
    "original_commit_id": "fdbb2d58729ede340ee60718b229044971146e93",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "fixed",
    "created_at": "2019-01-11T18:26:51Z",
    "updated_at": "2019-01-30T21:27:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r247211443",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247211443"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r247211443"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247211443/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 70,
    "side": "RIGHT",
    "in_reply_to_id": 219543868
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247219099",
    "pull_request_review_id": 191796712,
    "id": 247219099,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NzIxOTA5OQ==",
    "diff_hunk": "@@ -509,6 +521,32 @@ bitcoin_tx_LDADD = \\\n bitcoin_tx_LDADD += $(BOOST_LIBS) $(CRYPTO_LIBS)\n #\n \n+# bitcoin-wallet-tool binary #",
    "path": "src/Makefile.am",
    "position": null,
    "original_position": 51,
    "commit_id": "3c3e31c3a49c657093cacdff2c1c5e25363902ce",
    "original_commit_id": "fdbb2d58729ede340ee60718b229044971146e93",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "fixed!",
    "created_at": "2019-01-11T18:53:52Z",
    "updated_at": "2019-01-30T21:27:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r247219099",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247219099"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r247219099"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247219099/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 539,
    "side": "RIGHT",
    "in_reply_to_id": 220175413
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247230103",
    "pull_request_review_id": 191810728,
    "id": 247230103,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NzIzMDEwMw==",
    "diff_hunk": "@@ -0,0 +1,152 @@\n+// Copyright (c) 2016-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <base58.h>\n+#include <fs.h>\n+#include <util.h>\n+#include <wallet/wallet.h>\n+#include <wallet/walletutil.h>\n+\n+namespace WalletTool {\n+\n+// The standard wallet deleter function blocks on the validation interface\n+// queue, which doesn't exist for the bitcoin-wallet. Define our own\n+// deleter here.\n+static void WalletToolReleaseWallet(CWallet* wallet)\n+{\n+    wallet->WalletLogPrintf(\"Releasing wallet\\n\");\n+    wallet->Flush();\n+    delete wallet;\n+}\n+\n+static std::shared_ptr<CWallet> CreateWallet(const std::string& name, const fs::path& path)\n+{\n+    if (fs::exists(path)) {\n+        fprintf(stderr, \"Error: File exists already\\n\");\n+        return nullptr;\n+    }\n+    std::shared_ptr<CWallet> wallet_instance(new CWallet(name, WalletDatabase::Create(path)), WalletToolReleaseWallet);\n+    bool first_run = true;\n+    DBErrors load_wallet_ret = wallet_instance->LoadWallet(first_run);\n+    if (load_wallet_ret != DBErrors::LOAD_OK) {\n+        fprintf(stderr, \"Error creating %s\", name.c_str());\n+        return nullptr;\n+    }\n+\n+    wallet_instance->SetMinVersion(FEATURE_HD_SPLIT);\n+\n+    // generate a new HD seed\n+    CPubKey seed = wallet_instance->GenerateNewSeed();\n+    wallet_instance->SetHDSeed(seed);\n+\n+    fprintf(stdout, \"Topping up keypool...\\n\");\n+    wallet_instance->TopUpKeyPool();\n+    return wallet_instance;\n+}\n+\n+static std::shared_ptr<CWallet> LoadWallet(const std::string& name, const fs::path& path)",
    "path": "src/wallet/wallettool.cpp",
    "position": 51,
    "original_position": 48,
    "commit_id": "3c3e31c3a49c657093cacdff2c1c5e25363902ce",
    "original_commit_id": "fdbb2d58729ede340ee60718b229044971146e93",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yes. I agree that this could be refactored to remove duplicate code. Can we save that for a follow-up PR?",
    "created_at": "2019-01-11T19:30:17Z",
    "updated_at": "2019-01-30T21:27:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r247230103",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247230103"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r247230103"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247230103/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 51,
    "original_line": 51,
    "side": "RIGHT",
    "in_reply_to_id": 219547220
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247230168",
    "pull_request_review_id": 191810816,
    "id": 247230168,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NzIzMDE2OA==",
    "diff_hunk": "@@ -0,0 +1,103 @@\n+// Copyright (c) 2016-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <chainparams.h>\n+#include <chainparamsbase.h>\n+#include <consensus/consensus.h>\n+#include <logging.h>\n+#include <util.h>\n+#include <utilstrencodings.h>\n+#include <wallet/wallettool.h>\n+\n+#include <stdio.h>\n+\n+const std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n+\n+static void SetupWalletToolArgs()\n+{\n+    gArgs.AddArg(\"-?\", \"This help message\", false, OptionsCategory::OPTIONS);\n+    gArgs.AddArg(\"-name=<wallet-name>\", \"Specify wallet name\", false, OptionsCategory::OPTIONS);\n+\n+    gArgs.AddArg(\"info\", \"Get wallet info\", false, OptionsCategory::COMMANDS);\n+    gArgs.AddArg(\"create\", \"Create new wallet file\", false, OptionsCategory::COMMANDS);\n+    gArgs.AddArg(\"salvage\", \"Recover readable keypairs\", false, OptionsCategory::COMMANDS);\n+    gArgs.AddArg(\"zaptxs\", \"Remove all transactions including metadata (will keep keys)\", false, OptionsCategory::COMMANDS);\n+\n+    // Hidden\n+    gArgs.AddArg(\"-h\", \"\", false, OptionsCategory::HIDDEN);\n+    gArgs.AddArg(\"-help\", \"\", false, OptionsCategory::HIDDEN);\n+}\n+\n+static bool WalletAppInit(int argc, char* argv[])\n+{\n+    SetupWalletToolArgs();\n+    std::string error;\n+    if (!gArgs.ParseParameters(argc, argv, error)) {\n+        fprintf(stderr, \"Error parsing command line arguments: %s\\n\", error.c_str());\n+        return false;\n+    }\n+    if (argc < 2 || HelpRequested(gArgs)) {\n+        std::string usage = strprintf(_(\"%s wallet-tool version\"), PACKAGE_NAME) + \" \" + FormatFullVersion() + \"\\n\\n\" +\n+                                      _(\"Usage:\") + \"\\n\" +\n+                                     \"  bitcoin-wallet [options] <command>\\n\\n\" +\n+                                     gArgs.GetHelpMessage();\n+\n+        fprintf(stdout, \"%s\", usage.c_str());\n+        return false;\n+    }\n+\n+    // check for printtoconsole, allow -debug\n+    g_logger->m_print_to_console = gArgs.GetBoolArg(\"-printtoconsole\", gArgs.GetBoolArg(\"-debug\", false));\n+\n+    // Check for -testnet or -regtest parameter (Params() calls are only valid after this clause)\n+    try {\n+        SelectParams(gArgs.GetChainName());\n+    } catch (const std::exception& e) {\n+        fprintf(stderr, \"Error: %s\\n\", e.what());\n+        return false;\n+    }\n+\n+    return true;\n+}\n+\n+int main(int argc, char* argv[])\n+{\n+    SetupEnvironment();\n+    RandomInit();\n+    try {\n+        if (!WalletAppInit(argc, argv)) return EXIT_FAILURE;\n+    } catch (const std::exception& e) {\n+        PrintExceptionContinue(&e, \"WalletAppInit()\");\n+        return EXIT_FAILURE;\n+    } catch (...) {\n+        PrintExceptionContinue(nullptr, \"WalletAppInit()\");\n+        return EXIT_FAILURE;\n+    }\n+\n+    while (argc > 1 && IsSwitchChar(argv[1][0])) {\n+        argc--;\n+        argv++;\n+    }\n+    std::vector<std::string> args = std::vector<std::string>(&argv[1], &argv[argc]);",
    "path": "src/bitcoin-wallet.cpp",
    "position": null,
    "original_position": 86,
    "commit_id": "3c3e31c3a49c657093cacdff2c1c5e25363902ce",
    "original_commit_id": "fdbb2d58729ede340ee60718b229044971146e93",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Changed to not construct a vector at all.",
    "created_at": "2019-01-11T19:30:31Z",
    "updated_at": "2019-01-30T21:27:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r247230168",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247230168"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r247230168"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247230168/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 100,
    "side": "RIGHT",
    "in_reply_to_id": 219545741
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247231071",
    "pull_request_review_id": 191811945,
    "id": 247231071,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NzIzMTA3MQ==",
    "diff_hunk": "@@ -0,0 +1,117 @@\n+// Copyright (c) 2016-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <chainparams.h>\n+#include <chainparamsbase.h>\n+#include <consensus/consensus.h>\n+#include <logging.h>\n+#include <util.h>\n+#include <utilstrencodings.h>\n+#include <wallet/wallettool.h>\n+\n+#include <stdio.h>\n+\n+const std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n+\n+static void SetupWalletToolArgs()\n+{\n+    SetupChainParamsBaseOptions();\n+\n+    gArgs.AddArg(\"-?\", \"This help message\", false, OptionsCategory::OPTIONS);\n+    gArgs.AddArg(\"-datadir=<dir>\", \"Specify data directory\", false, OptionsCategory::OPTIONS);\n+    gArgs.AddArg(\"-wallet=<wallet-name>\", \"Specify wallet name\", false, OptionsCategory::OPTIONS);\n+\n+    gArgs.AddArg(\"info\", \"Get wallet info\", false, OptionsCategory::COMMANDS);\n+    gArgs.AddArg(\"create\", \"Create new wallet file\", false, OptionsCategory::COMMANDS);\n+    gArgs.AddArg(\"salvage\", \"Recover readable keypairs\", false, OptionsCategory::COMMANDS);\n+    gArgs.AddArg(\"zaptxs\", \"Remove all transactions including metadata (will keep keys)\", false, OptionsCategory::COMMANDS);\n+\n+    // Hidden\n+    gArgs.AddArg(\"-h\", \"\", false, OptionsCategory::HIDDEN);\n+    gArgs.AddArg(\"-help\", \"\", false, OptionsCategory::HIDDEN);\n+}\n+\n+static bool WalletAppInit(int argc, char* argv[])\n+{\n+    SetupWalletToolArgs();\n+    std::string error;\n+    if (!gArgs.ParseParameters(argc, argv, error)) {\n+        fprintf(stderr, \"Error parsing command line arguments: %s\\n\", error.c_str());\n+        return false;\n+    }\n+    if (argc < 2 || HelpRequested(gArgs)) {\n+        std::string usage = strprintf(\"%s bitcoin-wallet version\", PACKAGE_NAME) + \" \" + FormatFullVersion() + \"\\n\\n\" +\n+                                      \"wallet-tool is an offline tool for creating and interacting with Bitcoin Core wallet files.\\n\" +\n+                                      \"By default wallet-tool will act on wallets in the default wallet directory in the datadir.\\n\" +",
    "path": "src/bitcoin-wallet.cpp",
    "position": null,
    "original_position": 50,
    "commit_id": "3c3e31c3a49c657093cacdff2c1c5e25363902ce",
    "original_commit_id": "ebd8417a6b8fbb1575140f0f04b568f17a47914a",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "fixed",
    "created_at": "2019-01-11T19:33:33Z",
    "updated_at": "2019-01-30T21:27:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r247231071",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247231071"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r247231071"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247231071/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 50,
    "side": "RIGHT",
    "in_reply_to_id": 227259780
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247231873",
    "pull_request_review_id": 191812996,
    "id": 247231873,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NzIzMTg3Mw==",
    "diff_hunk": "@@ -0,0 +1,157 @@\n+// Copyright (c) 2016-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <base58.h>\n+#include <fs.h>\n+#include <util.h>\n+#include <wallet/wallet.h>\n+#include <wallet/walletutil.h>\n+\n+namespace WalletTool {\n+\n+// The standard wallet deleter function blocks on the validation interface\n+// queue, which doesn't exist for the bitcoin-wallet. Define our own\n+// deleter here.\n+static void WalletToolReleaseWallet(CWallet* wallet)\n+{\n+    wallet->WalletLogPrintf(\"Releasing wallet\\n\");\n+    wallet->Flush();\n+    delete wallet;\n+}\n+\n+static std::shared_ptr<CWallet> CreateWallet(const std::string& name, const fs::path& path)\n+{\n+    if (fs::exists(path)) {\n+        fprintf(stderr, \"Error: File exists already\\n\");\n+        return nullptr;\n+    }\n+    std::shared_ptr<CWallet> wallet_instance(new CWallet(name, WalletDatabase::Create(path)), WalletToolReleaseWallet);\n+    bool first_run = true;\n+    DBErrors load_wallet_ret = wallet_instance->LoadWallet(first_run);\n+    if (load_wallet_ret != DBErrors::LOAD_OK) {\n+        fprintf(stderr, \"Error creating %s\", name.c_str());\n+        return nullptr;\n+    }\n+\n+    wallet_instance->SetMinVersion(FEATURE_HD_SPLIT);\n+\n+    // generate a new HD seed\n+    CPubKey seed = wallet_instance->GenerateNewSeed();\n+    wallet_instance->SetHDSeed(seed);\n+\n+    fprintf(stdout, \"Topping up keypool...\\n\");\n+    wallet_instance->TopUpKeyPool();\n+    return wallet_instance;\n+}\n+\n+static std::shared_ptr<CWallet> LoadWallet(const std::string& name, const fs::path& path)\n+{\n+    if (!fs::exists(path)) {\n+        fprintf(stderr, \"Error: Wallet files does not exist\\n\");\n+        return nullptr;\n+    }\n+\n+    std::shared_ptr<CWallet> wallet_instance(new CWallet(name, WalletDatabase::Create(path)), WalletToolReleaseWallet);\n+    bool first_run;",
    "path": "src/wallet/wallettool.cpp",
    "position": null,
    "original_position": 56,
    "commit_id": "3c3e31c3a49c657093cacdff2c1c5e25363902ce",
    "original_commit_id": "ebd8417a6b8fbb1575140f0f04b568f17a47914a",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "fixed :)",
    "created_at": "2019-01-11T19:36:18Z",
    "updated_at": "2019-01-30T21:27:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r247231873",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247231873"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r247231873"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247231873/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 61,
    "side": "RIGHT",
    "in_reply_to_id": 232175138
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247231906",
    "pull_request_review_id": 191813042,
    "id": 247231906,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NzIzMTkwNg==",
    "diff_hunk": "@@ -1111,7 +1118,7 @@ else\n   AC_CHECK_HEADER([openssl/ssl.h],, AC_MSG_ERROR(libssl headers missing),)\n   AC_CHECK_LIB([ssl],         [main],SSL_LIBS=-lssl, AC_MSG_ERROR(libssl missing))\n \n-  if test x$build_bitcoin_cli$build_bitcoin_tx$build_bitcoind$bitcoin_enable_qt$use_tests != xnonononono; then\n+  if test x$build_bitcoin_wallet$build_bitcoin_cli$build_bitcoin_tx$build_bitcoind$bitcoin_enable_qt$use_tests != xnononononono; then",
    "path": "configure.ac",
    "position": null,
    "original_position": 53,
    "commit_id": "3c3e31c3a49c657093cacdff2c1c5e25363902ce",
    "original_commit_id": "ebd8417a6b8fbb1575140f0f04b568f17a47914a",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "removed",
    "created_at": "2019-01-11T19:36:25Z",
    "updated_at": "2019-01-30T21:27:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r247231906",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247231906"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r247231906"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247231906/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1136,
    "side": "RIGHT",
    "in_reply_to_id": 231685847
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247232040",
    "pull_request_review_id": 191813192,
    "id": 247232040,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NzIzMjA0MA==",
    "diff_hunk": "@@ -0,0 +1,157 @@\n+// Copyright (c) 2016-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <base58.h>\n+#include <fs.h>\n+#include <util.h>\n+#include <wallet/wallet.h>\n+#include <wallet/walletutil.h>\n+\n+namespace WalletTool {\n+\n+// The standard wallet deleter function blocks on the validation interface\n+// queue, which doesn't exist for the bitcoin-wallet. Define our own\n+// deleter here.\n+static void WalletToolReleaseWallet(CWallet* wallet)\n+{\n+    wallet->WalletLogPrintf(\"Releasing wallet\\n\");\n+    wallet->Flush();\n+    delete wallet;\n+}\n+\n+static std::shared_ptr<CWallet> CreateWallet(const std::string& name, const fs::path& path)\n+{\n+    if (fs::exists(path)) {\n+        fprintf(stderr, \"Error: File exists already\\n\");\n+        return nullptr;\n+    }\n+    std::shared_ptr<CWallet> wallet_instance(new CWallet(name, WalletDatabase::Create(path)), WalletToolReleaseWallet);\n+    bool first_run = true;\n+    DBErrors load_wallet_ret = wallet_instance->LoadWallet(first_run);\n+    if (load_wallet_ret != DBErrors::LOAD_OK) {\n+        fprintf(stderr, \"Error creating %s\", name.c_str());\n+        return nullptr;\n+    }\n+\n+    wallet_instance->SetMinVersion(FEATURE_HD_SPLIT);\n+\n+    // generate a new HD seed\n+    CPubKey seed = wallet_instance->GenerateNewSeed();\n+    wallet_instance->SetHDSeed(seed);\n+\n+    fprintf(stdout, \"Topping up keypool...\\n\");\n+    wallet_instance->TopUpKeyPool();\n+    return wallet_instance;\n+}\n+\n+static std::shared_ptr<CWallet> LoadWallet(const std::string& name, const fs::path& path)\n+{\n+    if (!fs::exists(path)) {\n+        fprintf(stderr, \"Error: Wallet files does not exist\\n\");\n+        return nullptr;\n+    }\n+\n+    std::shared_ptr<CWallet> wallet_instance(new CWallet(name, WalletDatabase::Create(path)), WalletToolReleaseWallet);\n+    bool first_run;\n+    DBErrors load_wallet_ret;\n+    try {\n+        load_wallet_ret = wallet_instance->LoadWallet(first_run);\n+    } catch (const std::runtime_error) {\n+        fprintf(stderr, \"Error loading %s. Is wallet being used by other process?\\n\", name.c_str());\n+        return nullptr;\n+    }\n+\n+    if (load_wallet_ret != DBErrors::LOAD_OK) {\n+        wallet_instance = nullptr;\n+        if (load_wallet_ret == DBErrors::CORRUPT) {\n+            fprintf(stderr, \"Error loading %s: Wallet corrupted\", name.c_str());\n+            return nullptr;\n+        } else if (load_wallet_ret == DBErrors::NONCRITICAL_ERROR) {\n+            fprintf(stderr, \"Error reading %s! All keys read correctly, but transaction data\"\n+                            \" or address book entries might be missing or incorrect.\",\n+                name.c_str());\n+        } else if (load_wallet_ret == DBErrors::TOO_NEW) {\n+            fprintf(stderr, \"Error loading %s: Wallet requires newer version of %s\",\n+                name.c_str(), PACKAGE_NAME);\n+            return nullptr;\n+        } else if (load_wallet_ret == DBErrors::NEED_REWRITE) {\n+            fprintf(stderr, \"Wallet needed to be rewritten: restart %s to complete\", PACKAGE_NAME);\n+            return nullptr;\n+        } else {\n+            fprintf(stderr, \"Error loading %s\", name.c_str());\n+            return nullptr;\n+        }\n+    }\n+\n+    return wallet_instance;\n+}\n+\n+static void WalletShowInfo(CWallet* wallet_instance)\n+{\n+    // lock required because of some AssertLockHeld()\n+    LOCK(wallet_instance->cs_wallet);\n+\n+    fprintf(stdout, \"Wallet info\\n===========\\n\");\n+    fprintf(stdout, \"Encrypted: %s\\n\", wallet_instance->IsCrypted() ? \"yes\" : \"no\");\n+    fprintf(stdout, \"HD (hd seed available): %s\\n\", wallet_instance->GetHDChain().seed_id.IsNull() ? \"no\" : \"yes\");\n+    fprintf(stdout, \"Keypool Size: %u\\n\", wallet_instance->GetKeyPoolSize());\n+    fprintf(stdout, \"Transactions: %zu\\n\", wallet_instance->mapWallet.size());\n+    fprintf(stdout, \"Address Book: %zu\\n\", wallet_instance->mapAddressBook.size());\n+}\n+\n+bool ExecuteWalletToolFunc(const std::string& command, const std::string& name)\n+{\n+    fs::path path = fs::absolute(name, GetWalletDir());\n+\n+    if (command == \"create\") {\n+        std::shared_ptr<CWallet> wallet_instance = CreateWallet(name, path);\n+        if (wallet_instance) {\n+            WalletShowInfo(wallet_instance.get());\n+            wallet_instance->Flush();\n+        }\n+    } else if (command == \"info\") {\n+        std::string error;\n+        if (!WalletBatch::VerifyEnvironment(path, error)) {\n+            fprintf(stderr, \"Error loading %s. Is wallet being used by other process?\\n\", name.c_str());",
    "path": "src/wallet/wallettool.cpp",
    "position": 125,
    "original_position": 116,
    "commit_id": "3c3e31c3a49c657093cacdff2c1c5e25363902ce",
    "original_commit_id": "4359b0a96ee68d538315ad0bdd56909d16ca8850",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "fixed",
    "created_at": "2019-01-11T19:36:51Z",
    "updated_at": "2019-01-30T21:27:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r247232040",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247232040"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r247232040"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247232040/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 125,
    "original_line": 125,
    "side": "RIGHT",
    "in_reply_to_id": 232673767
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247237192",
    "pull_request_review_id": 191829357,
    "id": 247237192,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NzIzNzE5Mg==",
    "diff_hunk": "@@ -0,0 +1,117 @@\n+// Copyright (c) 2016-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <chainparams.h>\n+#include <chainparamsbase.h>\n+#include <consensus/consensus.h>\n+#include <logging.h>\n+#include <util.h>\n+#include <utilstrencodings.h>\n+#include <wallet/wallettool.h>\n+\n+#include <stdio.h>\n+\n+const std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n+\n+static void SetupWalletToolArgs()\n+{\n+    SetupChainParamsBaseOptions();\n+\n+    gArgs.AddArg(\"-?\", \"This help message\", false, OptionsCategory::OPTIONS);\n+    gArgs.AddArg(\"-datadir=<dir>\", \"Specify data directory\", false, OptionsCategory::OPTIONS);\n+    gArgs.AddArg(\"-wallet=<wallet-name>\", \"Specify wallet name\", false, OptionsCategory::OPTIONS);\n+\n+    gArgs.AddArg(\"info\", \"Get wallet info\", false, OptionsCategory::COMMANDS);\n+    gArgs.AddArg(\"create\", \"Create new wallet file\", false, OptionsCategory::COMMANDS);\n+    gArgs.AddArg(\"salvage\", \"Recover readable keypairs\", false, OptionsCategory::COMMANDS);\n+    gArgs.AddArg(\"zaptxs\", \"Remove all transactions including metadata (will keep keys)\", false, OptionsCategory::COMMANDS);\n+\n+    // Hidden\n+    gArgs.AddArg(\"-h\", \"\", false, OptionsCategory::HIDDEN);\n+    gArgs.AddArg(\"-help\", \"\", false, OptionsCategory::HIDDEN);\n+}\n+\n+static bool WalletAppInit(int argc, char* argv[])\n+{\n+    SetupWalletToolArgs();\n+    std::string error;",
    "path": "src/bitcoin-wallet.cpp",
    "position": null,
    "original_position": 42,
    "commit_id": "3c3e31c3a49c657093cacdff2c1c5e25363902ce",
    "original_commit_id": "ebd8417a6b8fbb1575140f0f04b568f17a47914a",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "fixed",
    "created_at": "2019-01-11T19:58:47Z",
    "updated_at": "2019-01-30T21:27:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r247237192",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247237192"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r247237192"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/247237192/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 42,
    "side": "RIGHT",
    "in_reply_to_id": 245673729
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252014014",
    "pull_request_review_id": 197779779,
    "id": 252014014,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MjAxNDAxNA==",
    "diff_hunk": "@@ -0,0 +1,121 @@\n+// Copyright (c) 2016-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <chainparams.h>\n+#include <chainparamsbase.h>\n+#include <consensus/consensus.h>\n+#include <logging.h>\n+#include <util/system.h>\n+#include <util/strencodings.h>\n+#include <wallet/wallettool.h>\n+\n+#include <stdio.h>\n+\n+const std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n+\n+static void SetupWalletToolArgs()\n+{\n+    SetupChainParamsBaseOptions();\n+\n+    gArgs.AddArg(\"-?\", \"This help message\", false, OptionsCategory::OPTIONS);\n+    gArgs.AddArg(\"-datadir=<dir>\", \"Specify data directory\", false, OptionsCategory::OPTIONS);\n+    gArgs.AddArg(\"-wallet=<wallet-name>\", \"Specify wallet name\", false, OptionsCategory::OPTIONS);\n+    gArgs.AddArg(\"-debug=<category>\", \"Output debugging information (default: 0).\", false, OptionsCategory::DEBUG_TEST);\n+    gArgs.AddArg(\"-printtoconsole\", \"Send trace/debug info to console (default: 1 when no -debug is true, 0 otherwise.\", false, OptionsCategory::DEBUG_TEST);\n+\n+    gArgs.AddArg(\"info\", \"Get wallet info\", false, OptionsCategory::COMMANDS);\n+    gArgs.AddArg(\"create\", \"Create new wallet file\", false, OptionsCategory::COMMANDS);\n+\n+    // Hidden\n+    gArgs.AddArg(\"-h\", \"\", false, OptionsCategory::HIDDEN);\n+    gArgs.AddArg(\"-help\", \"\", false, OptionsCategory::HIDDEN);\n+}\n+\n+static bool WalletAppInit(int argc, char* argv[])\n+{\n+    SetupWalletToolArgs();\n+    std::string error_message;\n+    if (!gArgs.ParseParameters(argc, argv, error_message)) {\n+        fprintf(stderr, \"Error parsing command line arguments: %s\\n\", error_message.c_str());\n+        return false;\n+    }\n+    if (argc < 2 || HelpRequested(gArgs)) {\n+        std::string usage = strprintf(\"%s bitcoin-wallet version\", PACKAGE_NAME) + \" \" + FormatFullVersion() + \"\\n\\n\" +\n+                                      \"wallet-tool is an offline tool for creating and interacting with Bitcoin Core wallet files.\\n\" +\n+                                      \"By default wallet-tool will act on wallets in the default mainnet wallet directory in the datadir.\\n\" +\n+                                      \"To change the target wallet, use the -datadir, -wallet and -testnet/-regtest arguments.\\n\\n\" +\n+                                      \"Usage:\\n\" +\n+                                     \"  bitcoin-wallet [options] <command>\\n\\n\" +\n+                                     gArgs.GetHelpMessage();\n+\n+        fprintf(stdout, \"%s\", usage.c_str());\n+        return false;\n+    }\n+\n+    // check for printtoconsole, allow -debug\n+    g_logger->m_print_to_console = gArgs.GetBoolArg(\"-printtoconsole\", gArgs.GetBoolArg(\"-debug\", false));\n+\n+    if (!fs::is_directory(GetDataDir(false))) {\n+        fprintf(stderr, \"Error: Specified data directory \\\"%s\\\" does not exist.\\n\", gArgs.GetArg(\"-datadir\", \"\").c_str());\n+        return EXIT_FAILURE;",
    "path": "src/bitcoin-wallet.cpp",
    "position": null,
    "original_position": 65,
    "commit_id": "3c3e31c3a49c657093cacdff2c1c5e25363902ce",
    "original_commit_id": "2aeac46d17dc74d488494c77b9d1852faeb7dc16",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This is not defined behavior, since EXIT_FAILURE has no defined type nor value, but you need a bool(false). c.f. https://en.cppreference.com/w/c/program/EXIT_status\r\n\r\n",
    "created_at": "2019-01-29T20:57:34Z",
    "updated_at": "2019-01-30T21:27:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r252014014",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252014014"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r252014014"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252014014/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 65,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252029560",
    "pull_request_review_id": 197799232,
    "id": 252029560,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MjAyOTU2MA==",
    "diff_hunk": "@@ -0,0 +1,121 @@\n+// Copyright (c) 2016-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <chainparams.h>\n+#include <chainparamsbase.h>\n+#include <consensus/consensus.h>\n+#include <logging.h>\n+#include <util/system.h>\n+#include <util/strencodings.h>\n+#include <wallet/wallettool.h>\n+\n+#include <stdio.h>\n+\n+const std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n+\n+static void SetupWalletToolArgs()\n+{\n+    SetupChainParamsBaseOptions();\n+\n+    gArgs.AddArg(\"-?\", \"This help message\", false, OptionsCategory::OPTIONS);\n+    gArgs.AddArg(\"-datadir=<dir>\", \"Specify data directory\", false, OptionsCategory::OPTIONS);\n+    gArgs.AddArg(\"-wallet=<wallet-name>\", \"Specify wallet name\", false, OptionsCategory::OPTIONS);\n+    gArgs.AddArg(\"-debug=<category>\", \"Output debugging information (default: 0).\", false, OptionsCategory::DEBUG_TEST);\n+    gArgs.AddArg(\"-printtoconsole\", \"Send trace/debug info to console (default: 1 when no -debug is true, 0 otherwise.\", false, OptionsCategory::DEBUG_TEST);\n+\n+    gArgs.AddArg(\"info\", \"Get wallet info\", false, OptionsCategory::COMMANDS);\n+    gArgs.AddArg(\"create\", \"Create new wallet file\", false, OptionsCategory::COMMANDS);\n+\n+    // Hidden\n+    gArgs.AddArg(\"-h\", \"\", false, OptionsCategory::HIDDEN);\n+    gArgs.AddArg(\"-help\", \"\", false, OptionsCategory::HIDDEN);\n+}\n+\n+static bool WalletAppInit(int argc, char* argv[])\n+{\n+    SetupWalletToolArgs();\n+    std::string error_message;\n+    if (!gArgs.ParseParameters(argc, argv, error_message)) {\n+        fprintf(stderr, \"Error parsing command line arguments: %s\\n\", error_message.c_str());\n+        return false;\n+    }\n+    if (argc < 2 || HelpRequested(gArgs)) {\n+        std::string usage = strprintf(\"%s bitcoin-wallet version\", PACKAGE_NAME) + \" \" + FormatFullVersion() + \"\\n\\n\" +\n+                                      \"wallet-tool is an offline tool for creating and interacting with Bitcoin Core wallet files.\\n\" +\n+                                      \"By default wallet-tool will act on wallets in the default mainnet wallet directory in the datadir.\\n\" +\n+                                      \"To change the target wallet, use the -datadir, -wallet and -testnet/-regtest arguments.\\n\\n\" +\n+                                      \"Usage:\\n\" +\n+                                     \"  bitcoin-wallet [options] <command>\\n\\n\" +\n+                                     gArgs.GetHelpMessage();\n+\n+        fprintf(stdout, \"%s\", usage.c_str());\n+        return false;\n+    }\n+\n+    // check for printtoconsole, allow -debug\n+    g_logger->m_print_to_console = gArgs.GetBoolArg(\"-printtoconsole\", gArgs.GetBoolArg(\"-debug\", false));\n+\n+    if (!fs::is_directory(GetDataDir(false))) {\n+        fprintf(stderr, \"Error: Specified data directory \\\"%s\\\" does not exist.\\n\", gArgs.GetArg(\"-datadir\", \"\").c_str());\n+        return EXIT_FAILURE;",
    "path": "src/bitcoin-wallet.cpp",
    "position": null,
    "original_position": 65,
    "commit_id": "3c3e31c3a49c657093cacdff2c1c5e25363902ce",
    "original_commit_id": "2aeac46d17dc74d488494c77b9d1852faeb7dc16",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I don't understand this. There are plenty of other locations where `return EXIT_FAILURE` is used (and even a couple of PRs where `return false` has been changed to `return EXIT_FAILURE` - #9067 and #13349)",
    "created_at": "2019-01-29T21:42:19Z",
    "updated_at": "2019-01-30T21:27:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r252029560",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252029560"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r252029560"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252029560/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 65,
    "side": "RIGHT",
    "in_reply_to_id": 252014014
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252053490",
    "pull_request_review_id": 197828726,
    "id": 252053490,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MjA1MzQ5MA==",
    "diff_hunk": "@@ -0,0 +1,121 @@\n+// Copyright (c) 2016-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <chainparams.h>\n+#include <chainparamsbase.h>\n+#include <consensus/consensus.h>\n+#include <logging.h>\n+#include <util/system.h>\n+#include <util/strencodings.h>\n+#include <wallet/wallettool.h>\n+\n+#include <stdio.h>\n+\n+const std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n+\n+static void SetupWalletToolArgs()\n+{\n+    SetupChainParamsBaseOptions();\n+\n+    gArgs.AddArg(\"-?\", \"This help message\", false, OptionsCategory::OPTIONS);\n+    gArgs.AddArg(\"-datadir=<dir>\", \"Specify data directory\", false, OptionsCategory::OPTIONS);\n+    gArgs.AddArg(\"-wallet=<wallet-name>\", \"Specify wallet name\", false, OptionsCategory::OPTIONS);\n+    gArgs.AddArg(\"-debug=<category>\", \"Output debugging information (default: 0).\", false, OptionsCategory::DEBUG_TEST);\n+    gArgs.AddArg(\"-printtoconsole\", \"Send trace/debug info to console (default: 1 when no -debug is true, 0 otherwise.\", false, OptionsCategory::DEBUG_TEST);\n+\n+    gArgs.AddArg(\"info\", \"Get wallet info\", false, OptionsCategory::COMMANDS);\n+    gArgs.AddArg(\"create\", \"Create new wallet file\", false, OptionsCategory::COMMANDS);\n+\n+    // Hidden\n+    gArgs.AddArg(\"-h\", \"\", false, OptionsCategory::HIDDEN);\n+    gArgs.AddArg(\"-help\", \"\", false, OptionsCategory::HIDDEN);\n+}\n+\n+static bool WalletAppInit(int argc, char* argv[])\n+{\n+    SetupWalletToolArgs();\n+    std::string error_message;\n+    if (!gArgs.ParseParameters(argc, argv, error_message)) {\n+        fprintf(stderr, \"Error parsing command line arguments: %s\\n\", error_message.c_str());\n+        return false;\n+    }\n+    if (argc < 2 || HelpRequested(gArgs)) {\n+        std::string usage = strprintf(\"%s bitcoin-wallet version\", PACKAGE_NAME) + \" \" + FormatFullVersion() + \"\\n\\n\" +\n+                                      \"wallet-tool is an offline tool for creating and interacting with Bitcoin Core wallet files.\\n\" +\n+                                      \"By default wallet-tool will act on wallets in the default mainnet wallet directory in the datadir.\\n\" +\n+                                      \"To change the target wallet, use the -datadir, -wallet and -testnet/-regtest arguments.\\n\\n\" +\n+                                      \"Usage:\\n\" +\n+                                     \"  bitcoin-wallet [options] <command>\\n\\n\" +\n+                                     gArgs.GetHelpMessage();\n+\n+        fprintf(stdout, \"%s\", usage.c_str());\n+        return false;\n+    }\n+\n+    // check for printtoconsole, allow -debug\n+    g_logger->m_print_to_console = gArgs.GetBoolArg(\"-printtoconsole\", gArgs.GetBoolArg(\"-debug\", false));\n+\n+    if (!fs::is_directory(GetDataDir(false))) {\n+        fprintf(stderr, \"Error: Specified data directory \\\"%s\\\" does not exist.\\n\", gArgs.GetArg(\"-datadir\", \"\").c_str());\n+        return EXIT_FAILURE;",
    "path": "src/bitcoin-wallet.cpp",
    "position": null,
    "original_position": 65,
    "commit_id": "3c3e31c3a49c657093cacdff2c1c5e25363902ce",
    "original_commit_id": "2aeac46d17dc74d488494c77b9d1852faeb7dc16",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "We are not in `main` here, which has a return type `int`. The function signature here is `static bool WalletAppInit`, so the return type is `bool`. Commonly `EXIT_FAILURE` is `1`, so `bool(1) == true`, which is off-by-one.\r\n\r\nYou can also test this trivially by providing a datadir that does not exist. It will print an error, but continue and print garbage.",
    "created_at": "2019-01-29T22:57:39Z",
    "updated_at": "2019-01-30T21:27:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r252053490",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252053490"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r252053490"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252053490/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 65,
    "side": "RIGHT",
    "in_reply_to_id": 252014014
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252056325",
    "pull_request_review_id": 197832224,
    "id": 252056325,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MjA1NjMyNQ==",
    "diff_hunk": "@@ -0,0 +1,121 @@\n+// Copyright (c) 2016-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <chainparams.h>\n+#include <chainparamsbase.h>\n+#include <consensus/consensus.h>\n+#include <logging.h>\n+#include <util/system.h>\n+#include <util/strencodings.h>\n+#include <wallet/wallettool.h>\n+\n+#include <stdio.h>\n+\n+const std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n+\n+static void SetupWalletToolArgs()\n+{\n+    SetupChainParamsBaseOptions();\n+\n+    gArgs.AddArg(\"-?\", \"This help message\", false, OptionsCategory::OPTIONS);\n+    gArgs.AddArg(\"-datadir=<dir>\", \"Specify data directory\", false, OptionsCategory::OPTIONS);\n+    gArgs.AddArg(\"-wallet=<wallet-name>\", \"Specify wallet name\", false, OptionsCategory::OPTIONS);\n+    gArgs.AddArg(\"-debug=<category>\", \"Output debugging information (default: 0).\", false, OptionsCategory::DEBUG_TEST);\n+    gArgs.AddArg(\"-printtoconsole\", \"Send trace/debug info to console (default: 1 when no -debug is true, 0 otherwise.\", false, OptionsCategory::DEBUG_TEST);\n+\n+    gArgs.AddArg(\"info\", \"Get wallet info\", false, OptionsCategory::COMMANDS);\n+    gArgs.AddArg(\"create\", \"Create new wallet file\", false, OptionsCategory::COMMANDS);\n+\n+    // Hidden\n+    gArgs.AddArg(\"-h\", \"\", false, OptionsCategory::HIDDEN);\n+    gArgs.AddArg(\"-help\", \"\", false, OptionsCategory::HIDDEN);\n+}\n+\n+static bool WalletAppInit(int argc, char* argv[])\n+{\n+    SetupWalletToolArgs();\n+    std::string error_message;\n+    if (!gArgs.ParseParameters(argc, argv, error_message)) {\n+        fprintf(stderr, \"Error parsing command line arguments: %s\\n\", error_message.c_str());\n+        return false;\n+    }\n+    if (argc < 2 || HelpRequested(gArgs)) {\n+        std::string usage = strprintf(\"%s bitcoin-wallet version\", PACKAGE_NAME) + \" \" + FormatFullVersion() + \"\\n\\n\" +\n+                                      \"wallet-tool is an offline tool for creating and interacting with Bitcoin Core wallet files.\\n\" +\n+                                      \"By default wallet-tool will act on wallets in the default mainnet wallet directory in the datadir.\\n\" +\n+                                      \"To change the target wallet, use the -datadir, -wallet and -testnet/-regtest arguments.\\n\\n\" +\n+                                      \"Usage:\\n\" +\n+                                     \"  bitcoin-wallet [options] <command>\\n\\n\" +\n+                                     gArgs.GetHelpMessage();\n+\n+        fprintf(stdout, \"%s\", usage.c_str());\n+        return false;\n+    }\n+\n+    // check for printtoconsole, allow -debug\n+    g_logger->m_print_to_console = gArgs.GetBoolArg(\"-printtoconsole\", gArgs.GetBoolArg(\"-debug\", false));\n+\n+    if (!fs::is_directory(GetDataDir(false))) {\n+        fprintf(stderr, \"Error: Specified data directory \\\"%s\\\" does not exist.\\n\", gArgs.GetArg(\"-datadir\", \"\").c_str());\n+        return EXIT_FAILURE;",
    "path": "src/bitcoin-wallet.cpp",
    "position": null,
    "original_position": 65,
    "commit_id": "3c3e31c3a49c657093cacdff2c1c5e25363902ce",
    "original_commit_id": "2aeac46d17dc74d488494c77b9d1852faeb7dc16",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Duh. Thanks! I only looked at the github snippet. Will fix.",
    "created_at": "2019-01-29T23:08:04Z",
    "updated_at": "2019-01-30T21:27:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r252056325",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252056325"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r252056325"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252056325/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 65,
    "side": "RIGHT",
    "in_reply_to_id": 252014014
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252444486",
    "pull_request_review_id": 198315310,
    "id": 252444486,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MjQ0NDQ4Ng==",
    "diff_hunk": "@@ -0,0 +1,121 @@\n+// Copyright (c) 2016-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <chainparams.h>\n+#include <chainparamsbase.h>\n+#include <consensus/consensus.h>\n+#include <logging.h>\n+#include <util/system.h>\n+#include <util/strencodings.h>\n+#include <wallet/wallettool.h>\n+\n+#include <stdio.h>\n+\n+const std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n+\n+static void SetupWalletToolArgs()\n+{\n+    SetupChainParamsBaseOptions();\n+\n+    gArgs.AddArg(\"-?\", \"This help message\", false, OptionsCategory::OPTIONS);\n+    gArgs.AddArg(\"-datadir=<dir>\", \"Specify data directory\", false, OptionsCategory::OPTIONS);\n+    gArgs.AddArg(\"-wallet=<wallet-name>\", \"Specify wallet name\", false, OptionsCategory::OPTIONS);\n+    gArgs.AddArg(\"-debug=<category>\", \"Output debugging information (default: 0).\", false, OptionsCategory::DEBUG_TEST);\n+    gArgs.AddArg(\"-printtoconsole\", \"Send trace/debug info to console (default: 1 when no -debug is true, 0 otherwise.\", false, OptionsCategory::DEBUG_TEST);\n+\n+    gArgs.AddArg(\"info\", \"Get wallet info\", false, OptionsCategory::COMMANDS);\n+    gArgs.AddArg(\"create\", \"Create new wallet file\", false, OptionsCategory::COMMANDS);\n+\n+    // Hidden\n+    gArgs.AddArg(\"-h\", \"\", false, OptionsCategory::HIDDEN);\n+    gArgs.AddArg(\"-help\", \"\", false, OptionsCategory::HIDDEN);\n+}\n+\n+static bool WalletAppInit(int argc, char* argv[])\n+{\n+    SetupWalletToolArgs();\n+    std::string error_message;\n+    if (!gArgs.ParseParameters(argc, argv, error_message)) {\n+        fprintf(stderr, \"Error parsing command line arguments: %s\\n\", error_message.c_str());\n+        return false;\n+    }\n+    if (argc < 2 || HelpRequested(gArgs)) {\n+        std::string usage = strprintf(\"%s bitcoin-wallet version\", PACKAGE_NAME) + \" \" + FormatFullVersion() + \"\\n\\n\" +\n+                                      \"wallet-tool is an offline tool for creating and interacting with Bitcoin Core wallet files.\\n\" +\n+                                      \"By default wallet-tool will act on wallets in the default mainnet wallet directory in the datadir.\\n\" +\n+                                      \"To change the target wallet, use the -datadir, -wallet and -testnet/-regtest arguments.\\n\\n\" +\n+                                      \"Usage:\\n\" +\n+                                     \"  bitcoin-wallet [options] <command>\\n\\n\" +\n+                                     gArgs.GetHelpMessage();\n+\n+        fprintf(stdout, \"%s\", usage.c_str());\n+        return false;\n+    }\n+\n+    // check for printtoconsole, allow -debug\n+    g_logger->m_print_to_console = gArgs.GetBoolArg(\"-printtoconsole\", gArgs.GetBoolArg(\"-debug\", false));\n+\n+    if (!fs::is_directory(GetDataDir(false))) {\n+        fprintf(stderr, \"Error: Specified data directory \\\"%s\\\" does not exist.\\n\", gArgs.GetArg(\"-datadir\", \"\").c_str());\n+        return EXIT_FAILURE;",
    "path": "src/bitcoin-wallet.cpp",
    "position": null,
    "original_position": 65,
    "commit_id": "3c3e31c3a49c657093cacdff2c1c5e25363902ce",
    "original_commit_id": "2aeac46d17dc74d488494c77b9d1852faeb7dc16",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "fixed",
    "created_at": "2019-01-30T21:27:13Z",
    "updated_at": "2019-01-30T21:27:13Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r252444486",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252444486"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r252444486"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/252444486/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 65,
    "side": "RIGHT",
    "in_reply_to_id": 252014014
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254392476",
    "pull_request_review_id": 200731286,
    "id": 254392476,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NDM5MjQ3Ng==",
    "diff_hunk": "@@ -0,0 +1,139 @@\n+// Copyright (c) 2016-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <base58.h>\n+#include <fs.h>\n+#include <interfaces/chain.h>\n+#include <util/system.h>\n+#include <wallet/wallet.h>\n+#include <wallet/walletutil.h>\n+\n+namespace WalletTool {\n+\n+// The standard wallet deleter function blocks on the validation interface\n+// queue, which doesn't exist for the bitcoin-wallet. Define our own\n+// deleter here.\n+static void WalletToolReleaseWallet(CWallet* wallet)\n+{\n+    wallet->WalletLogPrintf(\"Releasing wallet\\n\");\n+    wallet->Flush();",
    "path": "src/wallet/wallettool.cpp",
    "position": 20,
    "original_position": 20,
    "commit_id": "3c3e31c3a49c657093cacdff2c1c5e25363902ce",
    "original_commit_id": "3c3e31c3a49c657093cacdff2c1c5e25363902ce",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "question: The `Flush()` calls in this file accept a bool that should be set to true on shutdown?",
    "created_at": "2019-02-06T18:25:12Z",
    "updated_at": "2019-02-06T18:25:13Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r254392476",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254392476"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r254392476"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254392476/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 20,
    "original_line": 20,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256075002",
    "pull_request_review_id": 202818626,
    "id": 256075002,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NjA3NTAwMg==",
    "diff_hunk": "@@ -0,0 +1,139 @@\n+// Copyright (c) 2016-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <base58.h>\n+#include <fs.h>\n+#include <interfaces/chain.h>\n+#include <util/system.h>\n+#include <wallet/wallet.h>\n+#include <wallet/walletutil.h>\n+\n+namespace WalletTool {\n+\n+// The standard wallet deleter function blocks on the validation interface\n+// queue, which doesn't exist for the bitcoin-wallet. Define our own\n+// deleter here.\n+static void WalletToolReleaseWallet(CWallet* wallet)\n+{\n+    wallet->WalletLogPrintf(\"Releasing wallet\\n\");\n+    wallet->Flush();",
    "path": "src/wallet/wallettool.cpp",
    "position": 20,
    "original_position": 20,
    "commit_id": "3c3e31c3a49c657093cacdff2c1c5e25363902ce",
    "original_commit_id": "3c3e31c3a49c657093cacdff2c1c5e25363902ce",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yes, you're right. This got missed out when rebasing on a commit that changed the function signature for `Wallet::Flush()`.\r\n\r\n~I think the same is true for~ https://github.com/bitcoin/bitcoin/blob/d8794a78a887a920276c7124f1c46d69592c6c4e/src/wallet/wallet.cpp#L96\r\n\r\nEDIT: ignore point about wallet.cpp above\r\n\r\nFixed: #15390",
    "created_at": "2019-02-12T17:57:35Z",
    "updated_at": "2019-02-12T18:28:13Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r256075002",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256075002"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/13926#discussion_r256075002"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/256075002/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 20,
    "original_line": 20,
    "side": "RIGHT",
    "in_reply_to_id": 254392476
  }
]