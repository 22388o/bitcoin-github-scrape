[
  {
    "sha": "e51321fb75f00194425e5ecc8ad77fd6762ec221",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplNTEzMjFmYjc1ZjAwMTk0NDI1ZTVlY2M4YWQ3N2ZkNjc2MmVjMjIx",
    "commit": {
      "author": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2013-09-18T08:03:21Z"
      },
      "committer": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2013-09-18T10:39:24Z"
      },
      "message": "Refactor: OutputDebugStringF -> LogPrint(category, ...)",
      "tree": {
        "sha": "586ba556ba95900b8bb5b5440cb957a096e77528",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/586ba556ba95900b8bb5b5440cb957a096e77528"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e51321fb75f00194425e5ecc8ad77fd6762ec221",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e51321fb75f00194425e5ecc8ad77fd6762ec221",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e51321fb75f00194425e5ecc8ad77fd6762ec221",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e51321fb75f00194425e5ecc8ad77fd6762ec221/comments",
    "author": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b16e9f02c82b98635da53c7e485614cba766f0a9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b16e9f02c82b98635da53c7e485614cba766f0a9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b16e9f02c82b98635da53c7e485614cba766f0a9"
      }
    ],
    "stats": {
      "total": 24,
      "additions": 16,
      "deletions": 8
    },
    "files": [
      {
        "sha": "0819e0dcaa63d46b23d5f85e71be0177d586f365",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e51321fb75f00194425e5ecc8ad77fd6762ec221/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e51321fb75f00194425e5ecc8ad77fd6762ec221/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=e51321fb75f00194425e5ecc8ad77fd6762ec221",
        "patch": "@@ -426,7 +426,7 @@ bool AppInit2(boost::thread_group& threadGroup)\n \n     // ********************************************************* Step 3: parameter-to-internal-flags\n \n-    fDebug = GetBoolArg(\"-debug\", false);\n+    if (mapMultiArgs.count(\"-debug\")) fDebug = true;\n     fBenchmark = GetBoolArg(\"-benchmark\", false);\n     mempool.fChecks = GetBoolArg(\"-checkmempool\", RegTest());\n     Checkpoints::fEnabled = GetBoolArg(\"-checkpoints\", true);"
      },
      {
        "sha": "3ebf90439419ee45d14573fb2cd945dba36f5b5a",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e51321fb75f00194425e5ecc8ad77fd6762ec221/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e51321fb75f00194425e5ecc8ad77fd6762ec221/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=e51321fb75f00194425e5ecc8ad77fd6762ec221",
        "patch": "@@ -155,12 +155,12 @@ static void initTranslations(QTranslator &qtTranslatorBase, QTranslator &qtTrans\n #if QT_VERSION < 0x050000\n void DebugMessageHandler(QtMsgType type, const char * msg)\n {\n-    OutputDebugStringF(\"Bitcoin-Qt: %s\\n\", msg);\n+    LogPrint(\"qt\", \"Bitcoin-Qt: %s\\n\", msg);\n }\n #else\n void DebugMessageHandler(QtMsgType type, const QMessageLogContext& context, const QString &msg)\n {\n-    OutputDebugStringF(\"Bitcoin-Qt: %s\\n\", qPrintable(msg));\n+    LogPrint(\"qt\", \"Bitcoin-Qt: %s\\n\", qPrintable(msg));\n }\n #endif\n "
      },
      {
        "sha": "a6e2de6101ed8579dca8f8c45cd6c9346a02caa2",
        "filename": "src/rpcdump.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e51321fb75f00194425e5ecc8ad77fd6762ec221/src/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e51321fb75f00194425e5ecc8ad77fd6762ec221/src/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcdump.cpp?ref=e51321fb75f00194425e5ecc8ad77fd6762ec221",
        "patch": "@@ -15,8 +15,6 @@\n #include <boost/variant/get.hpp>\n #include <boost/algorithm/string.hpp>\n \n-#define printf OutputDebugStringF\n-\n using namespace json_spirit;\n using namespace std;\n "
      },
      {
        "sha": "466f6ddff6aab4c80068ba6239c52c1aed6066ee",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 1,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e51321fb75f00194425e5ecc8ad77fd6762ec221/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e51321fb75f00194425e5ecc8ad77fd6762ec221/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=e51321fb75f00194425e5ecc8ad77fd6762ec221",
        "patch": "@@ -233,8 +233,16 @@ static void DebugPrintInit()\n     mutexDebugLog = new boost::mutex();\n }\n \n-int OutputDebugStringF(const char* pszFormat, ...)\n+int LogPrint(const char* category, const char* pszFormat, ...)\n {\n+    if (category != NULL)\n+    {\n+        if (!fDebug) return 0;\n+        const vector<string>& categories = mapMultiArgs[\"-debug\"];\n+        if (find(categories.begin(), categories.end(), string(category)) == categories.end())\n+            return 0;\n+    }\n+\n     int ret = 0; // Returns total number of characters written\n     if (fPrintToConsole)\n     {"
      },
      {
        "sha": "a1b6c7fcdd17784fb0a3c2e8a21e4d92afaf3730",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e51321fb75f00194425e5ecc8ad77fd6762ec221/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e51321fb75f00194425e5ecc8ad77fd6762ec221/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=e51321fb75f00194425e5ecc8ad77fd6762ec221",
        "patch": "@@ -153,7 +153,9 @@ extern volatile bool fReopenDebugLog;\n \n void RandAddSeed();\n void RandAddSeedPerfmon();\n-int ATTR_WARN_PRINTF(1,2) OutputDebugStringF(const char* pszFormat, ...);\n+\n+// Print to debug.log if -debug=category switch is given OR category is NULL.\n+int ATTR_WARN_PRINTF(2,3) LogPrint(const char* category, const char* pszFormat, ...);\n \n /*\n   Rationale for the real_strprintf / strprintf construction:\n@@ -179,7 +181,7 @@ bool ATTR_WARN_PRINTF(1,2) error(const char *format, ...);\n  * __attribute__((format(printf,X,Y))) gets expanded to __attribute__((format(OutputDebugStringF,X,Y)))\n  * which confuses gcc.\n  */\n-#define printf OutputDebugStringF\n+#define printf(...) LogPrint(NULL, __VA_ARGS__)\n \n void LogException(std::exception* pex, const char* pszThread);\n void PrintException(std::exception* pex, const char* pszThread);"
      }
    ]
  },
  {
    "sha": "881a85a22d76c875f519cd54388a419ec6f70857",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4ODFhODVhMjJkNzZjODc1ZjUxOWNkNTQzODhhNDE5ZWM2ZjcwODU3",
    "commit": {
      "author": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2013-09-18T10:38:08Z"
      },
      "committer": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2013-09-18T10:39:25Z"
      },
      "message": "Replace printf with LogPrintf / LogPrint",
      "tree": {
        "sha": "3f71daa59ac35c5dda44747c0b62dbc8602d8f1c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3f71daa59ac35c5dda44747c0b62dbc8602d8f1c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/881a85a22d76c875f519cd54388a419ec6f70857",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/881a85a22d76c875f519cd54388a419ec6f70857",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/881a85a22d76c875f519cd54388a419ec6f70857",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/881a85a22d76c875f519cd54388a419ec6f70857/comments",
    "author": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e51321fb75f00194425e5ecc8ad77fd6762ec221",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e51321fb75f00194425e5ecc8ad77fd6762ec221",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e51321fb75f00194425e5ecc8ad77fd6762ec221"
      }
    ],
    "stats": {
      "total": 766,
      "additions": 374,
      "deletions": 392
    },
    "files": [
      {
        "sha": "731ff2abed33b78f3f89b595dd8c191dc4024a95",
        "filename": "src/addrman.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 4,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/881a85a22d76c875f519cd54388a419ec6f70857/src/addrman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/881a85a22d76c875f519cd54388a419ec6f70857/src/addrman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrman.cpp?ref=881a85a22d76c875f519cd54388a419ec6f70857",
        "patch": "@@ -261,8 +261,6 @@ void CAddrMan::MakeTried(CAddrInfo& info, int nId, int nOrigin)\n \n void CAddrMan::Good_(const CService &addr, int64 nTime)\n {\n-//    printf(\"Good: addr=%s\\n\", addr.ToString().c_str());\n-\n     int nId;\n     CAddrInfo *pinfo = Find(addr, &nId);\n \n@@ -304,7 +302,7 @@ void CAddrMan::Good_(const CService &addr, int64 nTime)\n     // TODO: maybe re-add the node, but for now, just bail out\n     if (nUBucket == -1) return;\n \n-    printf(\"Moving %s to tried\\n\", addr.ToString().c_str());\n+    LogPrint(\"addrman\", \"Moving %s to tried\\n\", addr.ToString().c_str());\n \n     // move nId to the tried tables\n     MakeTried(info, nId, nUBucket);\n@@ -351,7 +349,6 @@ bool CAddrMan::Add_(const CAddress &addr, const CNetAddr& source, int64 nTimePen\n     } else {\n         pinfo = Create(addr, source, &nId);\n         pinfo->nTime = max((int64)0, (int64)pinfo->nTime - nTimePenalty);\n-//        printf(\"Added %s [nTime=%fhr]\\n\", pinfo->ToString().c_str(), (GetAdjustedTime() - pinfo->nTime) / 3600.0);\n         nNew++;\n         fNew = true;\n     }"
      },
      {
        "sha": "081543ace40e9a50dd02f10967e0c813a8e81180",
        "filename": "src/addrman.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/881a85a22d76c875f519cd54388a419ec6f70857/src/addrman.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/881a85a22d76c875f519cd54388a419ec6f70857/src/addrman.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrman.h?ref=881a85a22d76c875f519cd54388a419ec6f70857",
        "patch": "@@ -403,7 +403,7 @@ class CAddrMan\n             LOCK(cs);\n             int err;\n             if ((err=Check_()))\n-                printf(\"ADDRMAN CONSISTENCY CHECK FAILED!!! err=%i\\n\", err);\n+                LogPrintf(\"ADDRMAN CONSISTENCY CHECK FAILED!!! err=%i\\n\", err);\n         }\n #endif\n     }\n@@ -419,7 +419,7 @@ class CAddrMan\n             Check();\n         }\n         if (fRet)\n-            printf(\"Added %s from %s: %i tried, %i new\\n\", addr.ToStringIPPort().c_str(), source.ToString().c_str(), nTried, nNew);\n+            LogPrint(\"addr\", \"Added %s from %s: %i tried, %i new\\n\", addr.ToStringIPPort().c_str(), source.ToString().c_str(), nTried, nNew);\n         return fRet;\n     }\n \n@@ -435,7 +435,7 @@ class CAddrMan\n             Check();\n         }\n         if (nAdd)\n-            printf(\"Added %i addresses from %s: %i tried, %i new\\n\", nAdd, source.ToString().c_str(), nTried, nNew);\n+            LogPrint(\"addr\", \"Added %i addresses from %s: %i tried, %i new\\n\", nAdd, source.ToString().c_str(), nTried, nNew);\n         return nAdd > 0;\n     }\n "
      },
      {
        "sha": "c9cde179551d309f97b21c004e8f09e233862423",
        "filename": "src/alert.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/881a85a22d76c875f519cd54388a419ec6f70857/src/alert.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/881a85a22d76c875f519cd54388a419ec6f70857/src/alert.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/alert.cpp?ref=881a85a22d76c875f519cd54388a419ec6f70857",
        "patch": "@@ -76,7 +76,7 @@ std::string CUnsignedAlert::ToString() const\n \n void CUnsignedAlert::print() const\n {\n-    printf(\"%s\", ToString().c_str());\n+    LogPrintf(\"%s\", ToString().c_str());\n }\n \n void CAlert::SetNull()\n@@ -200,13 +200,13 @@ bool CAlert::ProcessAlert(bool fThread)\n             const CAlert& alert = (*mi).second;\n             if (Cancels(alert))\n             {\n-                printf(\"cancelling alert %d\\n\", alert.nID);\n+                LogPrint(\"alert\", \"cancelling alert %d\\n\", alert.nID);\n                 uiInterface.NotifyAlertChanged((*mi).first, CT_DELETED);\n                 mapAlerts.erase(mi++);\n             }\n             else if (!alert.IsInEffect())\n             {\n-                printf(\"expiring alert %d\\n\", alert.nID);\n+                LogPrint(\"alert\", \"expiring alert %d\\n\", alert.nID);\n                 uiInterface.NotifyAlertChanged((*mi).first, CT_DELETED);\n                 mapAlerts.erase(mi++);\n             }\n@@ -220,7 +220,7 @@ bool CAlert::ProcessAlert(bool fThread)\n             const CAlert& alert = item.second;\n             if (alert.Cancels(*this))\n             {\n-                printf(\"alert already cancelled by %d\\n\", alert.nID);\n+                LogPrint(\"alert\", \"alert already cancelled by %d\\n\", alert.nID);\n                 return false;\n             }\n         }\n@@ -258,6 +258,6 @@ bool CAlert::ProcessAlert(bool fThread)\n         }\n     }\n \n-    printf(\"accepted alert %d, AppliesToMe()=%d\\n\", nID, AppliesToMe());\n+    LogPrint(\"alert\", \"accepted alert %d, AppliesToMe()=%d\\n\", nID, AppliesToMe());\n     return true;\n }"
      },
      {
        "sha": "b61e0d37abc8a52449e274a1fba750d67699465f",
        "filename": "src/bitcoinrpc.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/881a85a22d76c875f519cd54388a419ec6f70857/src/bitcoinrpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/881a85a22d76c875f519cd54388a419ec6f70857/src/bitcoinrpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoinrpc.cpp?ref=881a85a22d76c875f519cd54388a419ec6f70857",
        "patch": "@@ -796,12 +796,12 @@ void StartRPCThreads()\n         filesystem::path pathCertFile(GetArg(\"-rpcsslcertificatechainfile\", \"server.cert\"));\n         if (!pathCertFile.is_complete()) pathCertFile = filesystem::path(GetDataDir()) / pathCertFile;\n         if (filesystem::exists(pathCertFile)) rpc_ssl_context->use_certificate_chain_file(pathCertFile.string());\n-        else printf(\"ThreadRPCServer ERROR: missing server certificate file %s\\n\", pathCertFile.string().c_str());\n+        else LogPrintf(\"ThreadRPCServer ERROR: missing server certificate file %s\\n\", pathCertFile.string().c_str());\n \n         filesystem::path pathPKFile(GetArg(\"-rpcsslprivatekeyfile\", \"server.pem\"));\n         if (!pathPKFile.is_complete()) pathPKFile = filesystem::path(GetDataDir()) / pathPKFile;\n         if (filesystem::exists(pathPKFile)) rpc_ssl_context->use_private_key_file(pathPKFile.string(), ssl::context::pem);\n-        else printf(\"ThreadRPCServer ERROR: missing server private key file %s\\n\", pathPKFile.string().c_str());\n+        else LogPrintf(\"ThreadRPCServer ERROR: missing server private key file %s\\n\", pathPKFile.string().c_str());\n \n         string strCiphers = GetArg(\"-rpcsslciphers\", \"TLSv1+HIGH:!SSLv2:!aNULL:!eNULL:!AH:!3DES:@STRENGTH\");\n         SSL_CTX_set_cipher_list(rpc_ssl_context->impl(), strCiphers.c_str());\n@@ -931,7 +931,7 @@ void JSONRequest::parse(const Value& valRequest)\n         throw JSONRPCError(RPC_INVALID_REQUEST, \"Method must be a string\");\n     strMethod = valMethod.get_str();\n     if (strMethod != \"getwork\" && strMethod != \"getblocktemplate\")\n-        printf(\"ThreadRPCServer method=%s\\n\", strMethod.c_str());\n+        LogPrint(\"rpc\", \"ThreadRPCServer method=%s\\n\", strMethod.c_str());\n \n     // Parse params\n     Value valParams = find_value(request, \"params\");\n@@ -1005,7 +1005,7 @@ void ServiceConnection(AcceptedConnection *conn)\n         }\n         if (!HTTPAuthorized(mapHeaders))\n         {\n-            printf(\"ThreadRPCServer incorrect password attempt from %s\\n\", conn->peer_address_to_string().c_str());\n+            LogPrintf(\"ThreadRPCServer incorrect password attempt from %s\\n\", conn->peer_address_to_string().c_str());\n             /* Deter brute-forcing short passwords.\n                If this results in a DOS the user really\n                shouldn't have their RPC port exposed.*/\n@@ -1319,7 +1319,7 @@ int main(int argc, char *argv[])\n     {\n         if (argc >= 2 && string(argv[1]) == \"-server\")\n         {\n-            printf(\"server ready\\n\");\n+            LogPrintf(\"server ready\\n\");\n             ThreadRPCServer(NULL);\n         }\n         else"
      },
      {
        "sha": "99b5c6641a54d7a9cae8711629d7d63395034583",
        "filename": "src/core.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 9,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/881a85a22d76c875f519cd54388a419ec6f70857/src/core.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/881a85a22d76c875f519cd54388a419ec6f70857/src/core.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core.cpp?ref=881a85a22d76c875f519cd54388a419ec6f70857",
        "patch": "@@ -13,7 +13,7 @@ std::string COutPoint::ToString() const\n \n void COutPoint::print() const\n {\n-    printf(\"%s\\n\", ToString().c_str());\n+    LogPrintf(\"%s\\n\", ToString().c_str());\n }\n \n CTxIn::CTxIn(COutPoint prevoutIn, CScript scriptSigIn, unsigned int nSequenceIn)\n@@ -47,7 +47,7 @@ std::string CTxIn::ToString() const\n \n void CTxIn::print() const\n {\n-    printf(\"%s\\n\", ToString().c_str());\n+    LogPrintf(\"%s\\n\", ToString().c_str());\n }\n \n CTxOut::CTxOut(int64 nValueIn, CScript scriptPubKeyIn)\n@@ -70,7 +70,7 @@ std::string CTxOut::ToString() const\n \n void CTxOut::print() const\n {\n-    printf(\"%s\\n\", ToString().c_str());\n+    LogPrintf(\"%s\\n\", ToString().c_str());\n }\n \n uint256 CTransaction::GetHash() const\n@@ -125,7 +125,7 @@ std::string CTransaction::ToString() const\n \n void CTransaction::print() const\n {\n-    printf(\"%s\", ToString().c_str());\n+    LogPrintf(\"%s\", ToString().c_str());\n }\n \n // Amount compression:\n@@ -282,7 +282,7 @@ uint256 CBlock::CheckMerkleBranch(uint256 hash, const std::vector<uint256>& vMer\n \n void CBlock::print() const\n {\n-    printf(\"CBlock(hash=%s, ver=%d, hashPrevBlock=%s, hashMerkleRoot=%s, nTime=%u, nBits=%08x, nNonce=%u, vtx=%\"PRIszu\")\\n\",\n+    LogPrintf(\"CBlock(hash=%s, ver=%d, hashPrevBlock=%s, hashMerkleRoot=%s, nTime=%u, nBits=%08x, nNonce=%u, vtx=%\"PRIszu\")\\n\",\n         GetHash().ToString().c_str(),\n         nVersion,\n         hashPrevBlock.ToString().c_str(),\n@@ -291,11 +291,11 @@ void CBlock::print() const\n         vtx.size());\n     for (unsigned int i = 0; i < vtx.size(); i++)\n     {\n-        printf(\"  \");\n+        LogPrintf(\"  \");\n         vtx[i].print();\n     }\n-    printf(\"  vMerkleTree: \");\n+    LogPrintf(\"  vMerkleTree: \");\n     for (unsigned int i = 0; i < vMerkleTree.size(); i++)\n-        printf(\"%s \", vMerkleTree[i].ToString().c_str());\n-    printf(\"\\n\");\n+        LogPrintf(\"%s \", vMerkleTree[i].ToString().c_str());\n+    LogPrintf(\"\\n\");\n }"
      },
      {
        "sha": "f722c52e930dbf5d04cee1d987f25c68e14e6bfe",
        "filename": "src/db.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 15,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/881a85a22d76c875f519cd54388a419ec6f70857/src/db.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/881a85a22d76c875f519cd54388a419ec6f70857/src/db.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/db.cpp?ref=881a85a22d76c875f519cd54388a419ec6f70857",
        "patch": "@@ -38,7 +38,7 @@ void CDBEnv::EnvShutdown()\n     fDbEnvInit = false;\n     int ret = dbenv.close(0);\n     if (ret != 0)\n-        printf(\"EnvShutdown exception: %s (%d)\\n\", DbEnv::strerror(ret), ret);\n+        LogPrintf(\"EnvShutdown exception: %s (%d)\\n\", DbEnv::strerror(ret), ret);\n     if (!fMockDb)\n         DbEnv(0).remove(path.string().c_str(), 0);\n }\n@@ -70,7 +70,7 @@ bool CDBEnv::Open(const boost::filesystem::path& pathIn)\n     filesystem::path pathLogDir = path / \"database\";\n     filesystem::create_directory(pathLogDir);\n     filesystem::path pathErrorFile = path / \"db.log\";\n-    printf(\"dbenv.open LogDir=%s ErrorFile=%s\\n\", pathLogDir.string().c_str(), pathErrorFile.string().c_str());\n+    LogPrintf(\"dbenv.open LogDir=%s ErrorFile=%s\\n\", pathLogDir.string().c_str(), pathErrorFile.string().c_str());\n \n     unsigned int nEnvFlags = 0;\n     if (GetBoolArg(\"-privdb\", true))\n@@ -111,7 +111,7 @@ void CDBEnv::MakeMock()\n \n     boost::this_thread::interruption_point();\n \n-    printf(\"CDBEnv::MakeMock()\\n\");\n+    LogPrint(\"db\", \"CDBEnv::MakeMock()\\n\");\n \n     dbenv.set_cachesize(1, 0, 1);\n     dbenv.set_lg_bsize(10485760*4);\n@@ -168,16 +168,16 @@ bool CDBEnv::Salvage(std::string strFile, bool fAggressive,\n     int result = db.verify(strFile.c_str(), NULL, &strDump, flags);\n     if (result == DB_VERIFY_BAD)\n     {\n-        printf(\"Error: Salvage found errors, all data may not be recoverable.\\n\");\n+        LogPrintf(\"Error: Salvage found errors, all data may not be recoverable.\\n\");\n         if (!fAggressive)\n         {\n-            printf(\"Error: Rerun with aggressive mode to ignore errors and continue.\\n\");\n+            LogPrintf(\"Error: Rerun with aggressive mode to ignore errors and continue.\\n\");\n             return false;\n         }\n     }\n     if (result != 0 && result != DB_VERIFY_BAD)\n     {\n-        printf(\"ERROR: db salvage failed: %d\\n\",result);\n+        LogPrintf(\"ERROR: db salvage failed: %d\\n\",result);\n         return false;\n     }\n \n@@ -348,7 +348,7 @@ bool CDB::Rewrite(const string& strFile, const char* pszSkip)\n                 bitdb.mapFileUseCount.erase(strFile);\n \n                 bool fSuccess = true;\n-                printf(\"Rewriting %s...\\n\", strFile.c_str());\n+                LogPrintf(\"Rewriting %s...\\n\", strFile.c_str());\n                 string strFileRes = strFile + \".rewrite\";\n                 { // surround usage of db with extra {}\n                     CDB db(strFile.c_str(), \"r\");\n@@ -362,7 +362,7 @@ bool CDB::Rewrite(const string& strFile, const char* pszSkip)\n                                             0);\n                     if (ret > 0)\n                     {\n-                        printf(\"Cannot create database file %s\\n\", strFileRes.c_str());\n+                        LogPrintf(\"Cannot create database file %s\\n\", strFileRes.c_str());\n                         fSuccess = false;\n                     }\n \n@@ -418,7 +418,7 @@ bool CDB::Rewrite(const string& strFile, const char* pszSkip)\n                         fSuccess = false;\n                 }\n                 if (!fSuccess)\n-                    printf(\"Rewriting of %s FAILED!\\n\", strFileRes.c_str());\n+                    LogPrintf(\"Rewriting of %s FAILED!\\n\", strFileRes.c_str());\n                 return fSuccess;\n             }\n         }\n@@ -433,7 +433,7 @@ void CDBEnv::Flush(bool fShutdown)\n     int64 nStart = GetTimeMillis();\n     // Flush log data to the actual data file\n     //  on all files that are not in use\n-    printf(\"Flush(%s)%s\\n\", fShutdown ? \"true\" : \"false\", fDbEnvInit ? \"\" : \" db not started\");\n+    LogPrint(\"db\", \"Flush(%s)%s\\n\", fShutdown ? \"true\" : \"false\", fDbEnvInit ? \"\" : \" db not started\");\n     if (!fDbEnvInit)\n         return;\n     {\n@@ -443,23 +443,23 @@ void CDBEnv::Flush(bool fShutdown)\n         {\n             string strFile = (*mi).first;\n             int nRefCount = (*mi).second;\n-            printf(\"%s refcount=%d\\n\", strFile.c_str(), nRefCount);\n+            LogPrint(\"db\", \"%s refcount=%d\\n\", strFile.c_str(), nRefCount);\n             if (nRefCount == 0)\n             {\n                 // Move log data to the dat file\n                 CloseDb(strFile);\n-                printf(\"%s checkpoint\\n\", strFile.c_str());\n+                LogPrint(\"db\", \"%s checkpoint\\n\", strFile.c_str());\n                 dbenv.txn_checkpoint(0, 0, 0);\n-                printf(\"%s detach\\n\", strFile.c_str());\n+                LogPrint(\"db\", \"%s detach\\n\", strFile.c_str());\n                 if (!fMockDb)\n                     dbenv.lsn_reset(strFile.c_str(), 0);\n-                printf(\"%s closed\\n\", strFile.c_str());\n+                LogPrint(\"db\", \"%s closed\\n\", strFile.c_str());\n                 mapFileUseCount.erase(mi++);\n             }\n             else\n                 mi++;\n         }\n-        printf(\"DBFlush(%s)%s ended %15\"PRI64d\"ms\\n\", fShutdown ? \"true\" : \"false\", fDbEnvInit ? \"\" : \" db not started\", GetTimeMillis() - nStart);\n+        LogPrint(\"db\", \"DBFlush(%s)%s ended %15\"PRI64d\"ms\\n\", fShutdown ? \"true\" : \"false\", fDbEnvInit ? \"\" : \" db not started\", GetTimeMillis() - nStart);\n         if (fShutdown)\n         {\n             char** listp;"
      },
      {
        "sha": "fb03e7b663019ce933902c94689d4f81cf4d7ffc",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 35,
        "deletions": 35,
        "changes": 70,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/881a85a22d76c875f519cd54388a419ec6f70857/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/881a85a22d76c875f519cd54388a419ec6f70857/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=881a85a22d76c875f519cd54388a419ec6f70857",
        "patch": "@@ -284,13 +284,13 @@ void ThreadImport(std::vector<boost::filesystem::path> vImportFiles)\n             FILE *file = OpenBlockFile(pos, true);\n             if (!file)\n                 break;\n-            printf(\"Reindexing block file blk%05u.dat...\\n\", (unsigned int)nFile);\n+            LogPrintf(\"Reindexing block file blk%05u.dat...\\n\", (unsigned int)nFile);\n             LoadExternalBlockFile(file, &pos);\n             nFile++;\n         }\n         pblocktree->WriteReindexing(false);\n         fReindex = false;\n-        printf(\"Reindexing finished\\n\");\n+        LogPrintf(\"Reindexing finished\\n\");\n         // To avoid ending up in a situation without genesis block, re-try initializing (no-op if reindexing worked):\n         InitBlockIndex();\n     }\n@@ -302,7 +302,7 @@ void ThreadImport(std::vector<boost::filesystem::path> vImportFiles)\n         if (file) {\n             CImportingNow imp;\n             filesystem::path pathBootstrapOld = GetDataDir() / \"bootstrap.dat.old\";\n-            printf(\"Importing bootstrap.dat...\\n\");\n+            LogPrintf(\"Importing bootstrap.dat...\\n\");\n             LoadExternalBlockFile(file);\n             RenameOver(pathBootstrap, pathBootstrapOld);\n         }\n@@ -313,7 +313,7 @@ void ThreadImport(std::vector<boost::filesystem::path> vImportFiles)\n         FILE *file = fopen(path.string().c_str(), \"rb\");\n         if (file) {\n             CImportingNow imp;\n-            printf(\"Importing %s...\\n\", path.string().c_str());\n+            LogPrintf(\"Importing %s...\\n\", path.string().c_str());\n             LoadExternalBlockFile(file);\n         }\n     }\n@@ -522,21 +522,21 @@ bool AppInit2(boost::thread_group& threadGroup)\n \n     if (GetBoolArg(\"-shrinkdebugfile\", !fDebug))\n         ShrinkDebugFile();\n-    printf(\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\");\n-    printf(\"Bitcoin version %s (%s)\\n\", FormatFullVersion().c_str(), CLIENT_DATE.c_str());\n-    printf(\"Using OpenSSL version %s\\n\", SSLeay_version(SSLEAY_VERSION));\n+    LogPrintf(\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\");\n+    LogPrintf(\"Bitcoin version %s (%s)\\n\", FormatFullVersion().c_str(), CLIENT_DATE.c_str());\n+    LogPrintf(\"Using OpenSSL version %s\\n\", SSLeay_version(SSLEAY_VERSION));\n     if (!fLogTimestamps)\n-        printf(\"Startup time: %s\\n\", DateTimeStrFormat(\"%Y-%m-%d %H:%M:%S\", GetTime()).c_str());\n-    printf(\"Default data directory %s\\n\", GetDefaultDataDir().string().c_str());\n-    printf(\"Using data directory %s\\n\", strDataDir.c_str());\n-    printf(\"Using at most %i connections (%i file descriptors available)\\n\", nMaxConnections, nFD);\n+        LogPrintf(\"Startup time: %s\\n\", DateTimeStrFormat(\"%Y-%m-%d %H:%M:%S\", GetTime()).c_str());\n+    LogPrintf(\"Default data directory %s\\n\", GetDefaultDataDir().string().c_str());\n+    LogPrintf(\"Using data directory %s\\n\", strDataDir.c_str());\n+    LogPrintf(\"Using at most %i connections (%i file descriptors available)\\n\", nMaxConnections, nFD);\n     std::ostringstream strErrors;\n \n     if (fDaemon)\n         fprintf(stdout, \"Bitcoin server starting\\n\");\n \n     if (nScriptCheckThreads) {\n-        printf(\"Using %u threads for script verification\\n\", nScriptCheckThreads);\n+        LogPrintf(\"Using %u threads for script verification\\n\", nScriptCheckThreads);\n         for (int i=0; i<nScriptCheckThreads-1; i++)\n             threadGroup.create_thread(&ThreadScriptCheck);\n     }\n@@ -554,7 +554,7 @@ bool AppInit2(boost::thread_group& threadGroup)\n         boost::filesystem::path pathDatabaseBak = GetDataDir() / strprintf(\"database.%\"PRI64d\".bak\", GetTime());\n         try {\n             boost::filesystem::rename(pathDatabase, pathDatabaseBak);\n-            printf(\"Moved old %s to %s. Retrying.\\n\", pathDatabase.string().c_str(), pathDatabaseBak.string().c_str());\n+            LogPrintf(\"Moved old %s to %s. Retrying.\\n\", pathDatabase.string().c_str(), pathDatabaseBak.string().c_str());\n         } catch(boost::filesystem::filesystem_error &error) {\n              // failure is ok (well, not really, but it's not worse than what we started with)\n         }\n@@ -705,12 +705,12 @@ bool AppInit2(boost::thread_group& threadGroup)\n             filesystem::path dest = blocksDir / strprintf(\"blk%05u.dat\", i-1);\n             try {\n                 filesystem::create_hard_link(source, dest);\n-                printf(\"Hardlinked %s -> %s\\n\", source.string().c_str(), dest.string().c_str());\n+                LogPrintf(\"Hardlinked %s -> %s\\n\", source.string().c_str(), dest.string().c_str());\n                 linked = true;\n             } catch (filesystem::filesystem_error & e) {\n                 // Note: hardlink creation failing is not a disaster, it just means\n                 // blocks will get re-downloaded from peers.\n-                printf(\"Error hardlinking blk%04u.dat : %s\\n\", i, e.what());\n+                LogPrintf(\"Error hardlinking blk%04u.dat : %s\\n\", i, e.what());\n                 break;\n             }\n         }\n@@ -783,7 +783,7 @@ bool AppInit2(boost::thread_group& threadGroup)\n                     break;\n                 }\n             } catch(std::exception &e) {\n-                if (fDebug) printf(\"%s\\n\", e.what());\n+                if (fDebug) LogPrintf(\"%s\\n\", e.what());\n                 strLoadError = _(\"Error opening block database\");\n                 break;\n             }\n@@ -801,7 +801,7 @@ bool AppInit2(boost::thread_group& threadGroup)\n                     fReindex = true;\n                     fRequestShutdown = false;\n                 } else {\n-                    printf(\"Aborted block database rebuild. Exiting.\\n\");\n+                    LogPrintf(\"Aborted block database rebuild. Exiting.\\n\");\n                     return false;\n                 }\n             } else {\n@@ -815,10 +815,10 @@ bool AppInit2(boost::thread_group& threadGroup)\n     // As the program has not fully started yet, Shutdown() is possibly overkill.\n     if (fRequestShutdown)\n     {\n-        printf(\"Shutdown requested. Exiting.\\n\");\n+        LogPrintf(\"Shutdown requested. Exiting.\\n\");\n         return false;\n     }\n-    printf(\" block index %15\"PRI64d\"ms\\n\", GetTimeMillis() - nStart);\n+    LogPrintf(\" block index %15\"PRI64d\"ms\\n\", GetTimeMillis() - nStart);\n \n     if (GetBoolArg(\"-printblockindex\", false) || GetBoolArg(\"-printblocktree\", false))\n     {\n@@ -840,12 +840,12 @@ bool AppInit2(boost::thread_group& threadGroup)\n                 ReadBlockFromDisk(block, pindex);\n                 block.BuildMerkleTree();\n                 block.print();\n-                printf(\"\\n\");\n+                LogPrintf(\"\\n\");\n                 nFound++;\n             }\n         }\n         if (nFound == 0)\n-            printf(\"No blocks matching %s were found\\n\", strMatch.c_str());\n+            LogPrintf(\"No blocks matching %s were found\\n\", strMatch.c_str());\n         return false;\n     }\n \n@@ -872,7 +872,7 @@ bool AppInit2(boost::thread_group& threadGroup)\n         else if (nLoadWalletRet == DB_NEED_REWRITE)\n         {\n             strErrors << _(\"Wallet needed to be rewritten: restart Bitcoin to complete\") << \"\\n\";\n-            printf(\"%s\", strErrors.str().c_str());\n+            LogPrintf(\"%s\", strErrors.str().c_str());\n             return InitError(strErrors.str());\n         }\n         else\n@@ -884,12 +884,12 @@ bool AppInit2(boost::thread_group& threadGroup)\n         int nMaxVersion = GetArg(\"-upgradewallet\", 0);\n         if (nMaxVersion == 0) // the -upgradewallet without argument case\n         {\n-            printf(\"Performing wallet upgrade to %i\\n\", FEATURE_LATEST);\n+            LogPrintf(\"Performing wallet upgrade to %i\\n\", FEATURE_LATEST);\n             nMaxVersion = CLIENT_VERSION;\n             pwalletMain->SetMinVersion(FEATURE_LATEST); // permanently upgrade the wallet immediately\n         }\n         else\n-            printf(\"Allowing wallet upgrade up to %i\\n\", nMaxVersion);\n+            LogPrintf(\"Allowing wallet upgrade up to %i\\n\", nMaxVersion);\n         if (nMaxVersion < pwalletMain->GetVersion())\n             strErrors << _(\"Cannot downgrade wallet\") << \"\\n\";\n         pwalletMain->SetMaxVersion(nMaxVersion);\n@@ -910,8 +910,8 @@ bool AppInit2(boost::thread_group& threadGroup)\n         pwalletMain->SetBestChain(CBlockLocator(pindexBest));\n     }\n \n-    printf(\"%s\", strErrors.str().c_str());\n-    printf(\" wallet      %15\"PRI64d\"ms\\n\", GetTimeMillis() - nStart);\n+    LogPrintf(\"%s\", strErrors.str().c_str());\n+    LogPrintf(\" wallet      %15\"PRI64d\"ms\\n\", GetTimeMillis() - nStart);\n \n     RegisterWallet(pwalletMain);\n \n@@ -930,10 +930,10 @@ bool AppInit2(boost::thread_group& threadGroup)\n     if (pindexBest && pindexBest != pindexRescan)\n     {\n         uiInterface.InitMessage(_(\"Rescanning...\"));\n-        printf(\"Rescanning last %i blocks (from block %i)...\\n\", pindexBest->nHeight - pindexRescan->nHeight, pindexRescan->nHeight);\n+        LogPrintf(\"Rescanning last %i blocks (from block %i)...\\n\", pindexBest->nHeight - pindexRescan->nHeight, pindexRescan->nHeight);\n         nStart = GetTimeMillis();\n         pwalletMain->ScanForWalletTransactions(pindexRescan, true);\n-        printf(\" rescan      %15\"PRI64d\"ms\\n\", GetTimeMillis() - nStart);\n+        LogPrintf(\" rescan      %15\"PRI64d\"ms\\n\", GetTimeMillis() - nStart);\n         pwalletMain->SetBestChain(CBlockLocator(pindexBest));\n         nWalletDBUpdated++;\n     }\n@@ -962,10 +962,10 @@ bool AppInit2(boost::thread_group& threadGroup)\n     {\n         CAddrDB adb;\n         if (!adb.Read(addrman))\n-            printf(\"Invalid or missing peers.dat; recreating\\n\");\n+            LogPrintf(\"Invalid or missing peers.dat; recreating\\n\");\n     }\n \n-    printf(\"Loaded %i addresses from peers.dat  %\"PRI64d\"ms\\n\",\n+    LogPrintf(\"Loaded %i addresses from peers.dat  %\"PRI64d\"ms\\n\",\n            addrman.size(), GetTimeMillis() - nStart);\n \n     // ********************************************************* Step 11: start node\n@@ -979,11 +979,11 @@ bool AppInit2(boost::thread_group& threadGroup)\n     RandAddSeedPerfmon();\n \n     //// debug print\n-    printf(\"mapBlockIndex.size() = %\"PRIszu\"\\n\",   mapBlockIndex.size());\n-    printf(\"nBestHeight = %d\\n\",                   nBestHeight);\n-    printf(\"setKeyPool.size() = %\"PRIszu\"\\n\",      pwalletMain->setKeyPool.size());\n-    printf(\"mapWallet.size() = %\"PRIszu\"\\n\",       pwalletMain->mapWallet.size());\n-    printf(\"mapAddressBook.size() = %\"PRIszu\"\\n\",  pwalletMain->mapAddressBook.size());\n+    LogPrintf(\"mapBlockIndex.size() = %\"PRIszu\"\\n\",   mapBlockIndex.size());\n+    LogPrintf(\"nBestHeight = %d\\n\",                   nBestHeight);\n+    LogPrintf(\"setKeyPool.size() = %\"PRIszu\"\\n\",      pwalletMain->setKeyPool.size());\n+    LogPrintf(\"mapWallet.size() = %\"PRIszu\"\\n\",       pwalletMain->mapWallet.size());\n+    LogPrintf(\"mapAddressBook.size() = %\"PRIszu\"\\n\",  pwalletMain->mapAddressBook.size());\n \n     StartNode(threadGroup);\n "
      },
      {
        "sha": "fb202367c4db61f8c7d921c02a67fb28e9932bcd",
        "filename": "src/leveldb.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/881a85a22d76c875f519cd54388a419ec6f70857/src/leveldb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/881a85a22d76c875f519cd54388a419ec6f70857/src/leveldb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb.cpp?ref=881a85a22d76c875f519cd54388a419ec6f70857",
        "patch": "@@ -15,7 +15,7 @@\n void HandleError(const leveldb::Status &status) throw(leveldb_error) {\n     if (status.ok())\n         return;\n-    printf(\"%s\\n\", status.ToString().c_str());\n+    LogPrintf(\"%s\\n\", status.ToString().c_str());\n     if (status.IsCorruption())\n         throw leveldb_error(\"Database corrupted\");\n     if (status.IsIOError())\n@@ -48,15 +48,15 @@ CLevelDB::CLevelDB(const boost::filesystem::path &path, size_t nCacheSize, bool\n         options.env = penv;\n     } else {\n         if (fWipe) {\n-            printf(\"Wiping LevelDB in %s\\n\", path.string().c_str());\n+            LogPrintf(\"Wiping LevelDB in %s\\n\", path.string().c_str());\n             leveldb::DestroyDB(path.string(), options);\n         }\n         boost::filesystem::create_directory(path);\n-        printf(\"Opening LevelDB in %s\\n\", path.string().c_str());\n+        LogPrintf(\"Opening LevelDB in %s\\n\", path.string().c_str());\n     }\n     leveldb::Status status = leveldb::DB::Open(options, path.string(), &pdb);\n     HandleError(status);\n-    printf(\"Opened LevelDB successfully\\n\");\n+    LogPrintf(\"Opened LevelDB successfully\\n\");\n }\n \n CLevelDB::~CLevelDB() {"
      },
      {
        "sha": "7daddeb493261c94dca66c38c1853a3bdc96b50e",
        "filename": "src/leveldb.h",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/881a85a22d76c875f519cd54388a419ec6f70857/src/leveldb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/881a85a22d76c875f519cd54388a419ec6f70857/src/leveldb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldb.h?ref=881a85a22d76c875f519cd54388a419ec6f70857",
        "patch": "@@ -5,6 +5,7 @@\n #define BITCOIN_LEVELDB_H\n \n #include \"serialize.h\"\n+#include \"util.h\"\n \n #include <leveldb/db.h>\n #include <leveldb/write_batch.h>\n@@ -91,7 +92,7 @@ class CLevelDB\n         if (!status.ok()) {\n             if (status.IsNotFound())\n                 return false;\n-            printf(\"LevelDB read failure: %s\\n\", status.ToString().c_str());\n+            LogPrintf(\"LevelDB read failure: %s\\n\", status.ToString().c_str());\n             HandleError(status);\n         }\n         try {\n@@ -120,7 +121,7 @@ class CLevelDB\n         if (!status.ok()) {\n             if (status.IsNotFound())\n                 return false;\n-            printf(\"LevelDB read failure: %s\\n\", status.ToString().c_str());\n+            LogPrintf(\"LevelDB read failure: %s\\n\", status.ToString().c_str());\n             HandleError(status);\n         }\n         return true;"
      },
      {
        "sha": "61d457eafc2a5300f5581440c73eaa566d206519",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 74,
        "deletions": 76,
        "changes": 150,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/881a85a22d76c875f519cd54388a419ec6f70857/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/881a85a22d76c875f519cd54388a419ec6f70857/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=881a85a22d76c875f519cd54388a419ec6f70857",
        "patch": "@@ -415,15 +415,15 @@ bool AddOrphanTx(const CTransaction& tx)\n     unsigned int sz = tx.GetSerializeSize(SER_NETWORK, CTransaction::CURRENT_VERSION);\n     if (sz > 5000)\n     {\n-        printf(\"ignoring large orphan tx (size: %u, hash: %s)\\n\", sz, hash.ToString().c_str());\n+        LogPrint(\"mempool\", \"ignoring large orphan tx (size: %u, hash: %s)\\n\", sz, hash.ToString().c_str());\n         return false;\n     }\n \n     mapOrphanTransactions[hash] = tx;\n     BOOST_FOREACH(const CTxIn& txin, tx.vin)\n         mapOrphanTransactionsByPrev[txin.prevout.hash].insert(hash);\n \n-    printf(\"stored orphan tx %s (mapsz %\"PRIszu\")\\n\", hash.ToString().c_str(),\n+    LogPrint(\"mempool\", \"stored orphan tx %s (mapsz %\"PRIszu\")\\n\", hash.ToString().c_str(),\n         mapOrphanTransactions.size());\n     return true;\n }\n@@ -668,7 +668,7 @@ int CMerkleTx::SetMerkleBranch(const CBlock* pblock)\n         {\n             vMerkleBranch.clear();\n             nIndex = -1;\n-            printf(\"ERROR: SetMerkleBranch() : couldn't find tx in block\\n\");\n+            LogPrintf(\"ERROR: SetMerkleBranch() : couldn't find tx in block\\n\");\n             return 0;\n         }\n \n@@ -917,7 +917,7 @@ bool CTxMemPool::accept(CValidationState &state, const CTransaction &tx, bool fL\n             if (dFreeCount >= GetArg(\"-limitfreerelay\", 15)*10*1000)\n                 return error(\"CTxMemPool::accept() : free transaction rejected by rate limiter\");\n             if (fDebug)\n-                printf(\"Rate limit dFreeCount: %g => %g\\n\", dFreeCount, dFreeCount+nSize);\n+                LogPrint(\"mempool\", \"Rate limit dFreeCount: %g => %g\\n\", dFreeCount, dFreeCount+nSize);\n             dFreeCount += nSize;\n         }\n \n@@ -934,7 +934,7 @@ bool CTxMemPool::accept(CValidationState &state, const CTransaction &tx, bool fL\n         LOCK(cs);\n         if (ptxOld)\n         {\n-            printf(\"CTxMemPool::accept() : replacing tx %s with new version\\n\", ptxOld->GetHash().ToString().c_str());\n+            LogPrint(\"mempool\", \"CTxMemPool::accept() : replacing tx %s with new version\\n\", ptxOld->GetHash().ToString().c_str());\n             remove(*ptxOld);\n         }\n         addUnchecked(hash, tx);\n@@ -946,7 +946,7 @@ bool CTxMemPool::accept(CValidationState &state, const CTransaction &tx, bool fL\n         EraseFromWallets(ptxOld->GetHash());\n     SyncWithWallets(hash, tx, NULL, true);\n \n-    printf(\"CTxMemPool::accept() : accepted %s (poolsz %\"PRIszu\")\\n\",\n+    LogPrint(\"mempool\", \"CTxMemPool::accept() : accepted %s (poolsz %\"PRIszu\")\\n\",\n            hash.ToString().c_str(),\n            mapTx.size());\n     return true;\n@@ -1021,7 +1021,7 @@ void CTxMemPool::check(CCoinsViewCache *pcoins) const\n     if (!fChecks)\n         return;\n \n-    printf(\"Checking mempool with %u transactions and %u inputs\\n\", (unsigned int)mapTx.size(), (unsigned int)mapNextTx.size());\n+    LogPrintf(\"Checking mempool with %u transactions and %u inputs\\n\", (unsigned int)mapTx.size(), (unsigned int)mapNextTx.size());\n \n     LOCK(cs);\n     for (std::map<uint256, CTransaction>::const_iterator it = mapTx.begin(); it != mapTx.end(); it++) {\n@@ -1354,7 +1354,7 @@ unsigned int GetNextWorkRequired(const CBlockIndex* pindexLast, const CBlockHead\n \n     // Limit adjustment step\n     int64 nActualTimespan = pindexLast->GetBlockTime() - pindexFirst->GetBlockTime();\n-    printf(\"  nActualTimespan = %\"PRI64d\"  before bounds\\n\", nActualTimespan);\n+    LogPrintf(\"  nActualTimespan = %\"PRI64d\"  before bounds\\n\", nActualTimespan);\n     if (nActualTimespan < nTargetTimespan/4)\n         nActualTimespan = nTargetTimespan/4;\n     if (nActualTimespan > nTargetTimespan*4)\n@@ -1370,10 +1370,10 @@ unsigned int GetNextWorkRequired(const CBlockIndex* pindexLast, const CBlockHead\n         bnNew = Params().ProofOfWorkLimit();\n \n     /// debug print\n-    printf(\"GetNextWorkRequired RETARGET\\n\");\n-    printf(\"nTargetTimespan = %\"PRI64d\"    nActualTimespan = %\"PRI64d\"\\n\", nTargetTimespan, nActualTimespan);\n-    printf(\"Before: %08x  %s\\n\", pindexLast->nBits, CBigNum().SetCompact(pindexLast->nBits).getuint256().ToString().c_str());\n-    printf(\"After:  %08x  %s\\n\", bnNew.GetCompact(), bnNew.getuint256().ToString().c_str());\n+    LogPrintf(\"GetNextWorkRequired RETARGET\\n\");\n+    LogPrintf(\"nTargetTimespan = %\"PRI64d\"    nActualTimespan = %\"PRI64d\"\\n\", nTargetTimespan, nActualTimespan);\n+    LogPrintf(\"Before: %08x  %s\\n\", pindexLast->nBits, CBigNum().SetCompact(pindexLast->nBits).getuint256().ToString().c_str());\n+    LogPrintf(\"After:  %08x  %s\\n\", bnNew.GetCompact(), bnNew.getuint256().ToString().c_str());\n \n     return bnNew.GetCompact();\n }\n@@ -1446,14 +1446,14 @@ void CheckForkWarningConditions()\n         }\n         if (pindexBestForkTip)\n         {\n-            printf(\"CheckForkWarningConditions: Warning: Large valid fork found\\n  forking the chain at height %d (%s)\\n  lasting to height %d (%s).\\nChain state database corruption likely.\\n\",\n+            LogPrintf(\"CheckForkWarningConditions: Warning: Large valid fork found\\n  forking the chain at height %d (%s)\\n  lasting to height %d (%s).\\nChain state database corruption likely.\\n\",\n                    pindexBestForkBase->nHeight, pindexBestForkBase->phashBlock->ToString().c_str(),\n                    pindexBestForkTip->nHeight, pindexBestForkTip->phashBlock->ToString().c_str());\n             fLargeWorkForkFound = true;\n         }\n         else\n         {\n-            printf(\"CheckForkWarningConditions: Warning: Found invalid chain at least ~6 blocks longer than our best chain.\\nChain state database corruption likely.\\n\");\n+            LogPrintf(\"CheckForkWarningConditions: Warning: Found invalid chain at least ~6 blocks longer than our best chain.\\nChain state database corruption likely.\\n\");\n             fLargeWorkInvalidChainFound = true;\n         }\n     }\n@@ -1504,11 +1504,11 @@ void static InvalidChainFound(CBlockIndex* pindexNew)\n         pblocktree->WriteBestInvalidWork(CBigNum(nBestInvalidWork));\n         uiInterface.NotifyBlocksChanged();\n     }\n-    printf(\"InvalidChainFound: invalid block=%s  height=%d  log2_work=%.8g  date=%s\\n\",\n+    LogPrintf(\"InvalidChainFound: invalid block=%s  height=%d  log2_work=%.8g  date=%s\\n\",\n       pindexNew->GetBlockHash().ToString().c_str(), pindexNew->nHeight,\n       log(pindexNew->nChainWork.getdouble())/log(2.0), DateTimeStrFormat(\"%Y-%m-%d %H:%M:%S\",\n       pindexNew->GetBlockTime()).c_str());\n-    printf(\"InvalidChainFound:  current best=%s  height=%d  log2_work=%.8g  date=%s\\n\",\n+    LogPrintf(\"InvalidChainFound:  current best=%s  height=%d  log2_work=%.8g  date=%s\\n\",\n       hashBestChain.ToString().c_str(), nBestHeight, log(nBestChainWork.getdouble())/log(2.0),\n       DateTimeStrFormat(\"%Y-%m-%d %H:%M:%S\", pindexBest->GetBlockTime()).c_str());\n     CheckForkWarningConditions();\n@@ -1967,7 +1967,7 @@ bool ConnectBlock(CBlock& block, CValidationState& state, CBlockIndex* pindex, C\n     }\n     int64 nTime = GetTimeMicros() - nStart;\n     if (fBenchmark)\n-        printf(\"- Connect %u transactions: %.2fms (%.3fms/tx, %.3fms/txin)\\n\", (unsigned)block.vtx.size(), 0.001 * nTime, 0.001 * nTime / block.vtx.size(), nInputs <= 1 ? 0 : 0.001 * nTime / (nInputs-1));\n+        LogPrintf(\"- Connect %u transactions: %.2fms (%.3fms/tx, %.3fms/txin)\\n\", (unsigned)block.vtx.size(), 0.001 * nTime, 0.001 * nTime / block.vtx.size(), nInputs <= 1 ? 0 : 0.001 * nTime / (nInputs-1));\n \n     if (GetValueOut(block.vtx[0]) > GetBlockValue(pindex->nHeight, nFees))\n         return state.DoS(100, error(\"ConnectBlock() : coinbase pays too much (actual=%\"PRI64d\" vs limit=%\"PRI64d\")\", GetValueOut(block.vtx[0]), GetBlockValue(pindex->nHeight, nFees)));\n@@ -1976,7 +1976,7 @@ bool ConnectBlock(CBlock& block, CValidationState& state, CBlockIndex* pindex, C\n         return state.DoS(100, false);\n     int64 nTime2 = GetTimeMicros() - nStart;\n     if (fBenchmark)\n-        printf(\"- Verify %u txins: %.2fms (%.3fms/txin)\\n\", nInputs - 1, 0.001 * nTime2, nInputs <= 1 ? 0 : 0.001 * nTime2 / (nInputs-1));\n+        LogPrintf(\"- Verify %u txins: %.2fms (%.3fms/txin)\\n\", nInputs - 1, 0.001 * nTime2, nInputs <= 1 ? 0 : 0.001 * nTime2 / (nInputs-1));\n \n     if (fJustCheck)\n         return true;\n@@ -2052,8 +2052,8 @@ bool SetBestChain(CValidationState &state, CBlockIndex* pindexNew)\n     reverse(vConnect.begin(), vConnect.end());\n \n     if (vDisconnect.size() > 0) {\n-        printf(\"REORGANIZE: Disconnect %\"PRIszu\" blocks; %s...\\n\", vDisconnect.size(), pfork->GetBlockHash().ToString().c_str());\n-        printf(\"REORGANIZE: Connect %\"PRIszu\" blocks; ...%s\\n\", vConnect.size(), pindexNew->GetBlockHash().ToString().c_str());\n+        LogPrintf(\"REORGANIZE: Disconnect %\"PRIszu\" blocks; %s...\\n\", vDisconnect.size(), pfork->GetBlockHash().ToString().c_str());\n+        LogPrintf(\"REORGANIZE: Connect %\"PRIszu\" blocks; ...%s\\n\", vConnect.size(), pindexNew->GetBlockHash().ToString().c_str());\n     }\n \n     // Disconnect shorter branch\n@@ -2066,7 +2066,7 @@ bool SetBestChain(CValidationState &state, CBlockIndex* pindexNew)\n         if (!DisconnectBlock(block, state, pindex, view))\n             return error(\"SetBestBlock() : DisconnectBlock %s failed\", pindex->GetBlockHash().ToString().c_str());\n         if (fBenchmark)\n-            printf(\"- Disconnect: %.2fms\\n\", (GetTimeMicros() - nStart) * 0.001);\n+            LogPrintf(\"- Disconnect: %.2fms\\n\", (GetTimeMicros() - nStart) * 0.001);\n \n         // Queue memory transactions to resurrect.\n         // We only do this for blocks after the last checkpoint (reorganisation before that\n@@ -2091,7 +2091,7 @@ bool SetBestChain(CValidationState &state, CBlockIndex* pindexNew)\n             return error(\"SetBestBlock() : ConnectBlock %s failed\", pindex->GetBlockHash().ToString().c_str());\n         }\n         if (fBenchmark)\n-            printf(\"- Connect: %.2fms\\n\", (GetTimeMicros() - nStart) * 0.001);\n+            LogPrintf(\"- Connect: %.2fms\\n\", (GetTimeMicros() - nStart) * 0.001);\n \n         // Queue memory transactions to delete\n         BOOST_FOREACH(const CTransaction& tx, block.vtx)\n@@ -2104,7 +2104,7 @@ bool SetBestChain(CValidationState &state, CBlockIndex* pindexNew)\n     assert(view.Flush());\n     int64 nTime = GetTimeMicros() - nStart;\n     if (fBenchmark)\n-        printf(\"- Flush %i transactions: %.2fms (%.4fms/tx)\\n\", nModified, 0.001 * nTime, 0.001 * nTime / nModified);\n+        LogPrintf(\"- Flush %i transactions: %.2fms (%.4fms/tx)\\n\", nModified, 0.001 * nTime, 0.001 * nTime / nModified);\n \n     // Make sure it's successfully written to disk before changing memory structure\n     bool fIsInitialDownload = IsInitialBlockDownload();\n@@ -2161,7 +2161,7 @@ bool SetBestChain(CValidationState &state, CBlockIndex* pindexNew)\n     nBestChainWork = pindexNew->nChainWork;\n     nTimeBestReceived = GetTime();\n     nTransactionsUpdated++;\n-    printf(\"SetBestChain: new best=%s  height=%d  log2_work=%.8g  tx=%lu  date=%s progress=%f\\n\",\n+    LogPrintf(\"SetBestChain: new best=%s  height=%d  log2_work=%.8g  tx=%lu  date=%s progress=%f\\n\",\n       hashBestChain.ToString().c_str(), nBestHeight, log(nBestChainWork.getdouble())/log(2.0), (unsigned long)pindexNew->nChainTx,\n       DateTimeStrFormat(\"%Y-%m-%d %H:%M:%S\", pindexBest->GetBlockTime()).c_str(),\n       Checkpoints::GuessVerificationProgress(pindexBest));\n@@ -2178,7 +2178,7 @@ bool SetBestChain(CValidationState &state, CBlockIndex* pindexNew)\n             pindex = pindex->pprev;\n         }\n         if (nUpgraded > 0)\n-            printf(\"SetBestChain: %d of last 100 blocks above version %d\\n\", nUpgraded, CBlock::CURRENT_VERSION);\n+            LogPrintf(\"SetBestChain: %d of last 100 blocks above version %d\\n\", nUpgraded, CBlock::CURRENT_VERSION);\n         if (nUpgraded > 100/2)\n             // strMiscWarning is read by GetWarnings(), called by Qt and the JSON-RPC code to warn the user:\n             strMiscWarning = _(\"Warning: This version is obsolete, upgrade required!\");\n@@ -2264,7 +2264,7 @@ bool FindBlockPos(CValidationState &state, CDiskBlockPos &pos, unsigned int nAdd\n         }\n     } else {\n         while (infoLastBlockFile.nSize + nAddSize >= MAX_BLOCKFILE_SIZE) {\n-            printf(\"Leaving block file %i: %s\\n\", nLastBlockFile, infoLastBlockFile.ToString().c_str());\n+            LogPrintf(\"Leaving block file %i: %s\\n\", nLastBlockFile, infoLastBlockFile.ToString().c_str());\n             FlushBlockFile(true);\n             nLastBlockFile++;\n             infoLastBlockFile.SetNull();\n@@ -2285,7 +2285,7 @@ bool FindBlockPos(CValidationState &state, CDiskBlockPos &pos, unsigned int nAdd\n             if (CheckDiskSpace(nNewChunks * BLOCKFILE_CHUNK_SIZE - pos.nPos)) {\n                 FILE *file = OpenBlockFile(pos);\n                 if (file) {\n-                    printf(\"Pre-allocating up to position 0x%x in blk%05u.dat\\n\", nNewChunks * BLOCKFILE_CHUNK_SIZE, pos.nFile);\n+                    LogPrintf(\"Pre-allocating up to position 0x%x in blk%05u.dat\\n\", nNewChunks * BLOCKFILE_CHUNK_SIZE, pos.nFile);\n                     AllocateFileRange(file, pos.nPos, nNewChunks * BLOCKFILE_CHUNK_SIZE - pos.nPos);\n                     fclose(file);\n                 }\n@@ -2331,7 +2331,7 @@ bool FindUndoPos(CValidationState &state, int nFile, CDiskBlockPos &pos, unsigne\n         if (CheckDiskSpace(nNewChunks * UNDOFILE_CHUNK_SIZE - pos.nPos)) {\n             FILE *file = OpenUndoFile(pos);\n             if (file) {\n-                printf(\"Pre-allocating up to position 0x%x in rev%05u.dat\\n\", nNewChunks * UNDOFILE_CHUNK_SIZE, pos.nFile);\n+                LogPrintf(\"Pre-allocating up to position 0x%x in rev%05u.dat\\n\", nNewChunks * UNDOFILE_CHUNK_SIZE, pos.nFile);\n                 AllocateFileRange(file, pos.nPos, nNewChunks * UNDOFILE_CHUNK_SIZE - pos.nPos);\n                 fclose(file);\n             }\n@@ -2549,7 +2549,7 @@ bool ProcessBlock(CValidationState &state, CNode* pfrom, CBlock* pblock, CDiskBl\n     // If we don't already have its previous block, shunt it off to holding area until we get it\n     if (pblock->hashPrevBlock != 0 && !mapBlockIndex.count(pblock->hashPrevBlock))\n     {\n-        printf(\"ProcessBlock: ORPHAN BLOCK, prev=%s\\n\", pblock->hashPrevBlock.ToString().c_str());\n+        LogPrintf(\"ProcessBlock: ORPHAN BLOCK, prev=%s\\n\", pblock->hashPrevBlock.ToString().c_str());\n \n         // Accept orphans as long as there is a node to request its parents from\n         if (pfrom) {\n@@ -2588,7 +2588,7 @@ bool ProcessBlock(CValidationState &state, CNode* pfrom, CBlock* pblock, CDiskBl\n         mapOrphanBlocksByPrev.erase(hashPrev);\n     }\n \n-    printf(\"ProcessBlock: ACCEPTED\\n\");\n+    LogPrintf(\"ProcessBlock: ACCEPTED\\n\");\n     return true;\n }\n \n@@ -2754,7 +2754,7 @@ uint256 CPartialMerkleTree::ExtractMatches(std::vector<uint256> &vMatch) {\n \n bool AbortNode(const std::string &strMessage) {\n     strMiscWarning = strMessage;\n-    printf(\"*** %s\\n\", strMessage.c_str());\n+    LogPrintf(\"*** %s\\n\", strMessage.c_str());\n     uiInterface.ThreadSafeMessageBox(strMessage, \"\", CClientUIInterface::MSG_ERROR);\n     StartShutdown();\n     return false;\n@@ -2785,12 +2785,12 @@ FILE* OpenDiskFile(const CDiskBlockPos &pos, const char *prefix, bool fReadOnly)\n     if (!file && !fReadOnly)\n         file = fopen(path.string().c_str(), \"wb+\");\n     if (!file) {\n-        printf(\"Unable to open file %s\\n\", path.string().c_str());\n+        LogPrintf(\"Unable to open file %s\\n\", path.string().c_str());\n         return NULL;\n     }\n     if (pos.nPos) {\n         if (fseek(file, pos.nPos, SEEK_SET)) {\n-            printf(\"Unable to seek to position %u of %s\\n\", pos.nPos, path.string().c_str());\n+            LogPrintf(\"Unable to seek to position %u of %s\\n\", pos.nPos, path.string().c_str());\n             fclose(file);\n             return NULL;\n         }\n@@ -2853,9 +2853,9 @@ bool static LoadBlockIndexDB()\n \n     // Load block file info\n     pblocktree->ReadLastBlockFile(nLastBlockFile);\n-    printf(\"LoadBlockIndexDB(): last block file = %i\\n\", nLastBlockFile);\n+    LogPrintf(\"LoadBlockIndexDB(): last block file = %i\\n\", nLastBlockFile);\n     if (pblocktree->ReadBlockFileInfo(nLastBlockFile, infoLastBlockFile))\n-        printf(\"LoadBlockIndexDB(): last block file info: %s\\n\", infoLastBlockFile.ToString().c_str());\n+        LogPrintf(\"LoadBlockIndexDB(): last block file info: %s\\n\", infoLastBlockFile.ToString().c_str());\n \n     // Load nBestInvalidWork, OK if it doesn't exist\n     CBigNum bnBestInvalidWork;\n@@ -2869,7 +2869,7 @@ bool static LoadBlockIndexDB()\n \n     // Check whether we have a transaction index\n     pblocktree->ReadFlag(\"txindex\", fTxIndex);\n-    printf(\"LoadBlockIndexDB(): transaction index %s\\n\", fTxIndex ? \"enabled\" : \"disabled\");\n+    LogPrintf(\"LoadBlockIndexDB(): transaction index %s\\n\", fTxIndex ? \"enabled\" : \"disabled\");\n \n     // Load hashBestChain pointer to end of best chain\n     pindexBest = pcoinsTip->GetBestBlock();\n@@ -2886,7 +2886,7 @@ bool static LoadBlockIndexDB()\n          vBlockIndexByHeight[pindex->nHeight] = pindex;\n          pindex = pindex->pprev;\n     }\n-    printf(\"LoadBlockIndexDB(): hashBestChain=%s  height=%d date=%s\\n\",\n+    LogPrintf(\"LoadBlockIndexDB(): hashBestChain=%s  height=%d date=%s\\n\",\n         hashBestChain.ToString().c_str(), nBestHeight,\n         DateTimeStrFormat(\"%Y-%m-%d %H:%M:%S\", pindexBest->GetBlockTime()).c_str());\n \n@@ -2904,7 +2904,7 @@ bool VerifyDB(int nCheckLevel, int nCheckDepth)\n     if (nCheckDepth > nBestHeight)\n         nCheckDepth = nBestHeight;\n     nCheckLevel = std::max(0, std::min(4, nCheckLevel));\n-    printf(\"Verifying last %i blocks at level %i\\n\", nCheckDepth, nCheckLevel);\n+    LogPrintf(\"Verifying last %i blocks at level %i\\n\", nCheckDepth, nCheckLevel);\n     CCoinsViewCache coins(*pcoinsTip, true);\n     CBlockIndex* pindexState = pindexBest;\n     CBlockIndex* pindexFailure = NULL;\n@@ -2961,7 +2961,7 @@ bool VerifyDB(int nCheckLevel, int nCheckDepth)\n         }\n     }\n \n-    printf(\"No coin database inconsistencies in last %i blocks (%i transactions)\\n\", pindexBest->nHeight - pindexState->nHeight, nGoodTransactions);\n+    LogPrintf(\"No coin database inconsistencies in last %i blocks (%i transactions)\\n\", pindexBest->nHeight - pindexState->nHeight, nGoodTransactions);\n \n     return true;\n }\n@@ -2995,7 +2995,7 @@ bool InitBlockIndex() {\n     // Use the provided setting for -txindex in the new database\n     fTxIndex = GetBoolArg(\"-txindex\", false);\n     pblocktree->WriteFlag(\"txindex\", fTxIndex);\n-    printf(\"Initializing databases...\\n\");\n+    LogPrintf(\"Initializing databases...\\n\");\n \n     // Only add the genesis block if not reindexing (in which case we reuse the one already on disk)\n     if (!fReindex) {\n@@ -3048,25 +3048,25 @@ void PrintBlockTree()\n         if (nCol > nPrevCol)\n         {\n             for (int i = 0; i < nCol-1; i++)\n-                printf(\"| \");\n-            printf(\"|\\\\\\n\");\n+                LogPrintf(\"| \");\n+            LogPrintf(\"|\\\\\\n\");\n         }\n         else if (nCol < nPrevCol)\n         {\n             for (int i = 0; i < nCol; i++)\n-                printf(\"| \");\n-            printf(\"|\\n\");\n+                LogPrintf(\"| \");\n+            LogPrintf(\"|\\n\");\n        }\n         nPrevCol = nCol;\n \n         // print columns\n         for (int i = 0; i < nCol; i++)\n-            printf(\"| \");\n+            LogPrintf(\"| \");\n \n         // print item\n         CBlock block;\n         ReadBlockFromDisk(block, pindex);\n-        printf(\"%d (blk%05u.dat:0x%x)  %s  tx %\"PRIszu\"\",\n+        LogPrintf(\"%d (blk%05u.dat:0x%x)  %s  tx %\"PRIszu\"\",\n             pindex->nHeight,\n             pindex->GetBlockPos().nFile, pindex->GetBlockPos().nPos,\n             DateTimeStrFormat(\"%Y-%m-%d %H:%M:%S\", block.GetBlockTime()).c_str(),\n@@ -3151,15 +3151,15 @@ bool LoadExternalBlockFile(FILE* fileIn, CDiskBlockPos *dbp)\n                         break;\n                 }\n             } catch (std::exception &e) {\n-                printf(\"%s() : Deserialize or I/O error caught during load\\n\", __PRETTY_FUNCTION__);\n+                LogPrintf(\"%s() : Deserialize or I/O error caught during load\\n\", __PRETTY_FUNCTION__);\n             }\n         }\n         fclose(fileIn);\n     } catch(std::runtime_error &e) {\n         AbortNode(_(\"Error: system error: \") + e.what());\n     }\n     if (nLoaded > 0)\n-        printf(\"Loaded %i blocks from external file in %\"PRI64d\"ms\\n\", nLoaded, GetTimeMillis() - nStart);\n+        LogPrintf(\"Loaded %i blocks from external file in %\"PRI64d\"ms\\n\", nLoaded, GetTimeMillis() - nStart);\n     return nLoaded > 0;\n }\n \n@@ -3381,11 +3381,10 @@ void static ProcessGetData(CNode* pfrom)\n bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n {\n     RandAddSeedPerfmon();\n-    if (fDebug)\n-        printf(\"received: %s (%\"PRIszu\" bytes)\\n\", strCommand.c_str(), vRecv.size());\n+    LogPrint(\"net\", \"received: %s (%\"PRIszu\" bytes)\\n\", strCommand.c_str(), vRecv.size());\n     if (mapArgs.count(\"-dropmessagestest\") && GetRand(atoi(mapArgs[\"-dropmessagestest\"])) == 0)\n     {\n-        printf(\"dropmessagestest DROPPING RECV MESSAGE\\n\");\n+        LogPrintf(\"dropmessagestest DROPPING RECV MESSAGE\\n\");\n         return true;\n     }\n \n@@ -3411,7 +3410,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n         {\n             // Since February 20, 2012, the protocol is initiated at version 209,\n             // and earlier versions are no longer supported\n-            printf(\"partner %s using obsolete version %i; disconnecting\\n\", pfrom->addr.ToString().c_str(), pfrom->nVersion);\n+            LogPrintf(\"partner %s using obsolete version %i; disconnecting\\n\", pfrom->addr.ToString().c_str(), pfrom->nVersion);\n             pfrom->fDisconnect = true;\n             return false;\n         }\n@@ -3438,7 +3437,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n         // Disconnect if we connected to ourself\n         if (nNonce == nLocalHostNonce && nNonce > 1)\n         {\n-            printf(\"connected to self at %s, disconnecting\\n\", pfrom->addr.ToString().c_str());\n+            LogPrintf(\"connected to self at %s, disconnecting\\n\", pfrom->addr.ToString().c_str());\n             pfrom->fDisconnect = true;\n             return true;\n         }\n@@ -3489,7 +3488,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n \n         pfrom->fSuccessfullyConnected = true;\n \n-        printf(\"receive version message: version %d, blocks=%d, us=%s, them=%s, peer=%s\\n\", pfrom->nVersion, pfrom->nStartingHeight, addrMe.ToString().c_str(), addrFrom.ToString().c_str(), pfrom->addr.ToString().c_str());\n+        LogPrintf(\"receive version message: version %d, blocks=%d, us=%s, them=%s, peer=%s\\n\", pfrom->nVersion, pfrom->nStartingHeight, addrMe.ToString().c_str(), addrFrom.ToString().c_str(), pfrom->addr.ToString().c_str());\n \n         cPeerBlockCounts.input(pfrom->nStartingHeight);\n     }\n@@ -3602,8 +3601,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n             pfrom->AddInventoryKnown(inv);\n \n             bool fAlreadyHave = AlreadyHave(inv);\n-            if (fDebug)\n-                printf(\"  got inventory: %s  %s\\n\", inv.ToString().c_str(), fAlreadyHave ? \"have\" : \"new\");\n+            LogPrint(\"net\", \"  got inventory: %s  %s\\n\", inv.ToString().c_str(), fAlreadyHave ? \"have\" : \"new\");\n \n             if (!fAlreadyHave) {\n                 if (!fImporting && !fReindex)\n@@ -3616,7 +3614,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n                 // this situation and push another getblocks to continue.\n                 PushGetBlocks(pfrom, mapBlockIndex[inv.hash], uint256(0));\n                 if (fDebug)\n-                    printf(\"force request: %s\\n\", inv.ToString().c_str());\n+                    LogPrintf(\"force request: %s\\n\", inv.ToString().c_str());\n             }\n \n             // Track requests for our stuff\n@@ -3636,10 +3634,10 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n         }\n \n         if (fDebugNet || (vInv.size() != 1))\n-            printf(\"received getdata (%\"PRIszu\" invsz)\\n\", vInv.size());\n+            LogPrint(\"net\", \"received getdata (%\"PRIszu\" invsz)\\n\", vInv.size());\n \n         if ((fDebugNet && vInv.size() > 0) || (vInv.size() == 1))\n-            printf(\"received getdata for: %s\\n\", vInv[0].ToString().c_str());\n+            LogPrint(\"net\", \"received getdata for: %s\\n\", vInv[0].ToString().c_str());\n \n         pfrom->vRecvGetData.insert(pfrom->vRecvGetData.end(), vInv.begin(), vInv.end());\n         ProcessGetData(pfrom);\n@@ -3659,20 +3657,20 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n         if (pindex)\n             pindex = pindex->GetNextInMainChain();\n         int nLimit = 500;\n-        printf(\"getblocks %d to %s limit %d\\n\", (pindex ? pindex->nHeight : -1), hashStop.ToString().c_str(), nLimit);\n+        LogPrint(\"net\", \"getblocks %d to %s limit %d\\n\", (pindex ? pindex->nHeight : -1), hashStop.ToString().c_str(), nLimit);\n         for (; pindex; pindex = pindex->GetNextInMainChain())\n         {\n             if (pindex->GetBlockHash() == hashStop)\n             {\n-                printf(\"  getblocks stopping at %d %s\\n\", pindex->nHeight, pindex->GetBlockHash().ToString().c_str());\n+                LogPrint(\"net\", \"  getblocks stopping at %d %s\\n\", pindex->nHeight, pindex->GetBlockHash().ToString().c_str());\n                 break;\n             }\n             pfrom->PushInventory(CInv(MSG_BLOCK, pindex->GetBlockHash()));\n             if (--nLimit <= 0)\n             {\n                 // When this block is requested, we'll send an inv that'll make them\n                 // getblocks the next batch of inventory.\n-                printf(\"  getblocks stopping at limit %d %s\\n\", pindex->nHeight, pindex->GetBlockHash().ToString().c_str());\n+                LogPrint(\"net\", \"  getblocks stopping at limit %d %s\\n\", pindex->nHeight, pindex->GetBlockHash().ToString().c_str());\n                 pfrom->hashContinue = pindex->GetBlockHash();\n                 break;\n             }\n@@ -3706,7 +3704,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n         // we must use CBlocks, as CBlockHeaders won't include the 0x00 nTx count at the end\n         vector<CBlock> vHeaders;\n         int nLimit = 2000;\n-        printf(\"getheaders %d to %s\\n\", (pindex ? pindex->nHeight : -1), hashStop.ToString().c_str());\n+        LogPrint(\"net\", \"getheaders %d to %s\\n\", (pindex ? pindex->nHeight : -1), hashStop.ToString().c_str());\n         for (; pindex; pindex = pindex->GetNextInMainChain())\n         {\n             vHeaders.push_back(pindex->GetBlockHeader());\n@@ -3756,7 +3754,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n \n                     if (mempool.accept(stateDummy, orphanTx, true, &fMissingInputs2))\n                     {\n-                        printf(\"   accepted orphan tx %s\\n\", orphanHash.ToString().c_str());\n+                        LogPrint(\"mempool\", \"   accepted orphan tx %s\\n\", orphanHash.ToString().c_str());\n                         RelayTransaction(orphanTx, orphanHash);\n                         mapAlreadyAskedFor.erase(CInv(MSG_TX, orphanHash));\n                         vWorkQueue.push_back(orphanHash);\n@@ -3766,7 +3764,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n                     {\n                         // invalid or too-little-fee orphan\n                         vEraseQueue.push_back(orphanHash);\n-                        printf(\"   removed orphan tx %s\\n\", orphanHash.ToString().c_str());\n+                        LogPrint(\"mempool\", \"   removed orphan tx %s\\n\", orphanHash.ToString().c_str());\n                     }\n                     mempool.check(pcoinsTip);\n                 }\n@@ -3782,7 +3780,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n             // DoS prevention: do not allow mapOrphanTransactions to grow unbounded\n             unsigned int nEvicted = LimitOrphanTxSize(MAX_ORPHAN_TRANSACTIONS);\n             if (nEvicted > 0)\n-                printf(\"mapOrphan overflow, removed %u tx\\n\", nEvicted);\n+                LogPrint(\"mempool\", \"mapOrphan overflow, removed %u tx\\n\", nEvicted);\n         }\n         int nDoS;\n         if (state.IsInvalid(nDoS))\n@@ -3795,7 +3793,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n         CBlock block;\n         vRecv >> block;\n \n-        printf(\"received block %s\\n\", block.GetHash().ToString().c_str());\n+        LogPrint(\"net\", \"received block %s\\n\", block.GetHash().ToString().c_str());\n         // block.print();\n \n         CInv inv(MSG_BLOCK, block.GetHash());\n@@ -3958,7 +3956,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n bool ProcessMessages(CNode* pfrom)\n {\n     //if (fDebug)\n-    //    printf(\"ProcessMessages(%zu messages)\\n\", pfrom->vRecvMsg.size());\n+    //    LogPrintf(\"ProcessMessages(%zu messages)\\n\", pfrom->vRecvMsg.size());\n \n     //\n     // Message format\n@@ -3983,7 +3981,7 @@ bool ProcessMessages(CNode* pfrom)\n         CNetMessage& msg = *it;\n \n         //if (fDebug)\n-        //    printf(\"ProcessMessages(message %u msgsz, %zu bytes, complete:%s)\\n\",\n+        //    LogPrintf(\"ProcessMessages(message %u msgsz, %zu bytes, complete:%s)\\n\",\n         //            msg.hdr.nMessageSize, msg.vRecv.size(),\n         //            msg.complete() ? \"Y\" : \"N\");\n \n@@ -3996,7 +3994,7 @@ bool ProcessMessages(CNode* pfrom)\n \n         // Scan for message start\n         if (memcmp(msg.hdr.pchMessageStart, Params().MessageStart(), MESSAGE_START_SIZE) != 0) {\n-            printf(\"\\n\\nPROCESSMESSAGE: INVALID MESSAGESTART\\n\\n\");\n+            LogPrintf(\"\\n\\nPROCESSMESSAGE: INVALID MESSAGESTART\\n\\n\");\n             fOk = false;\n             break;\n         }\n@@ -4005,7 +4003,7 @@ bool ProcessMessages(CNode* pfrom)\n         CMessageHeader& hdr = msg.hdr;\n         if (!hdr.IsValid())\n         {\n-            printf(\"\\n\\nPROCESSMESSAGE: ERRORS IN HEADER %s\\n\\n\\n\", hdr.GetCommand().c_str());\n+            LogPrintf(\"\\n\\nPROCESSMESSAGE: ERRORS IN HEADER %s\\n\\n\\n\", hdr.GetCommand().c_str());\n             continue;\n         }\n         string strCommand = hdr.GetCommand();\n@@ -4020,7 +4018,7 @@ bool ProcessMessages(CNode* pfrom)\n         memcpy(&nChecksum, &hash, sizeof(nChecksum));\n         if (nChecksum != hdr.nChecksum)\n         {\n-            printf(\"ProcessMessages(%s, %u bytes) : CHECKSUM ERROR nChecksum=%08x hdr.nChecksum=%08x\\n\",\n+            LogPrintf(\"ProcessMessages(%s, %u bytes) : CHECKSUM ERROR nChecksum=%08x hdr.nChecksum=%08x\\n\",\n                strCommand.c_str(), nMessageSize, nChecksum, hdr.nChecksum);\n             continue;\n         }\n@@ -4040,12 +4038,12 @@ bool ProcessMessages(CNode* pfrom)\n             if (strstr(e.what(), \"end of data\"))\n             {\n                 // Allow exceptions from under-length message on vRecv\n-                printf(\"ProcessMessages(%s, %u bytes) : Exception '%s' caught, normally caused by a message being shorter than its stated length\\n\", strCommand.c_str(), nMessageSize, e.what());\n+                LogPrintf(\"ProcessMessages(%s, %u bytes) : Exception '%s' caught, normally caused by a message being shorter than its stated length\\n\", strCommand.c_str(), nMessageSize, e.what());\n             }\n             else if (strstr(e.what(), \"size too large\"))\n             {\n                 // Allow exceptions from over-long size\n-                printf(\"ProcessMessages(%s, %u bytes) : Exception '%s' caught\\n\", strCommand.c_str(), nMessageSize, e.what());\n+                LogPrintf(\"ProcessMessages(%s, %u bytes) : Exception '%s' caught\\n\", strCommand.c_str(), nMessageSize, e.what());\n             }\n             else\n             {\n@@ -4062,7 +4060,7 @@ bool ProcessMessages(CNode* pfrom)\n         }\n \n         if (!fRet)\n-            printf(\"ProcessMessage(%s, %u bytes) FAILED\\n\", strCommand.c_str(), nMessageSize);\n+            LogPrintf(\"ProcessMessage(%s, %u bytes) FAILED\\n\", strCommand.c_str(), nMessageSize);\n     }\n \n     // In case the connection got shut down, its receive buffer was wiped\n@@ -4225,7 +4223,7 @@ bool SendMessages(CNode* pto, bool fSendTrickle)\n             if (!AlreadyHave(inv))\n             {\n                 if (fDebugNet)\n-                    printf(\"sending getdata: %s\\n\", inv.ToString().c_str());\n+                    LogPrint(\"net\", \"sending getdata: %s\\n\", inv.ToString().c_str());\n                 vGetData.push_back(inv);\n                 if (vGetData.size() >= 1000)\n                 {"
      },
      {
        "sha": "952917cebe681f0e1325d5a686f377fd3dab0c13",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/881a85a22d76c875f519cd54388a419ec6f70857/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/881a85a22d76c875f519cd54388a419ec6f70857/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=881a85a22d76c875f519cd54388a419ec6f70857",
        "patch": "@@ -880,7 +880,7 @@ class CBlockIndex\n \n     void print() const\n     {\n-        printf(\"%s\\n\", ToString().c_str());\n+        LogPrintf(\"%s\\n\", ToString().c_str());\n     }\n };\n \n@@ -962,7 +962,7 @@ class CDiskBlockIndex : public CBlockIndex\n \n     void print() const\n     {\n-        printf(\"%s\\n\", ToString().c_str());\n+        LogPrintf(\"%s\\n\", ToString().c_str());\n     }\n };\n "
      },
      {
        "sha": "5f79fedba2423c937aaba471816148a923a8f3c7",
        "filename": "src/miner.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 12,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/881a85a22d76c875f519cd54388a419ec6f70857/src/miner.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/881a85a22d76c875f519cd54388a419ec6f70857/src/miner.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.cpp?ref=881a85a22d76c875f519cd54388a419ec6f70857",
        "patch": "@@ -106,10 +106,10 @@ class COrphan\n \n     void print() const\n     {\n-        printf(\"COrphan(hash=%s, dPriority=%.1f, dFeePerKb=%.1f)\\n\",\n+        LogPrintf(\"COrphan(hash=%s, dPriority=%.1f, dFeePerKb=%.1f)\\n\",\n                ptx->GetHash().ToString().c_str(), dPriority, dFeePerKb);\n         BOOST_FOREACH(uint256 hash, setDependsOn)\n-            printf(\"   setDependsOn %s\\n\", hash.ToString().c_str());\n+            LogPrintf(\"   setDependsOn %s\\n\", hash.ToString().c_str());\n     }\n };\n \n@@ -211,7 +211,7 @@ CBlockTemplate* CreateNewBlock(const CScript& scriptPubKeyIn)\n                     // or other transactions in the memory pool.\n                     if (!mempool.mapTx.count(txin.prevout.hash))\n                     {\n-                        printf(\"ERROR: mempool transaction missing input\\n\");\n+                        LogPrintf(\"ERROR: mempool transaction missing input\\n\");\n                         if (fDebug) assert(\"mempool transaction missing input\" == 0);\n                         fMissingInputs = true;\n                         if (porphan)\n@@ -331,7 +331,7 @@ CBlockTemplate* CreateNewBlock(const CScript& scriptPubKeyIn)\n \n             if (fPrintPriority)\n             {\n-                printf(\"priority %.1f feeperkb %.1f txid %s\\n\",\n+                LogPrintf(\"priority %.1f feeperkb %.1f txid %s\\n\",\n                        dPriority, dFeePerKb, tx.GetHash().ToString().c_str());\n             }\n \n@@ -355,7 +355,7 @@ CBlockTemplate* CreateNewBlock(const CScript& scriptPubKeyIn)\n \n         nLastBlockTx = nBlockTx;\n         nLastBlockSize = nBlockSize;\n-        printf(\"CreateNewBlock(): total size %\"PRI64u\"\\n\", nBlockSize);\n+        LogPrintf(\"CreateNewBlock(): total size %\"PRI64u\"\\n\", nBlockSize);\n \n         pblock->vtx[0].vout[0].nValue = GetBlockValue(pindexPrev->nHeight+1, nFees);\n         pblocktemplate->vTxFees[0] = -nFees;\n@@ -463,10 +463,10 @@ bool CheckWork(CBlock* pblock, CWallet& wallet, CReserveKey& reservekey)\n         return false;\n \n     //// debug print\n-    printf(\"BitcoinMiner:\\n\");\n-    printf(\"proof-of-work found  \\n  hash: %s  \\ntarget: %s\\n\", hash.GetHex().c_str(), hashTarget.GetHex().c_str());\n+    LogPrintf(\"BitcoinMiner:\\n\");\n+    LogPrintf(\"proof-of-work found  \\n  hash: %s  \\ntarget: %s\\n\", hash.GetHex().c_str(), hashTarget.GetHex().c_str());\n     pblock->print();\n-    printf(\"generated %s\\n\", FormatMoney(pblock->vtx[0].vout[0].nValue).c_str());\n+    LogPrintf(\"generated %s\\n\", FormatMoney(pblock->vtx[0].vout[0].nValue).c_str());\n \n     // Found a solution\n     {\n@@ -494,7 +494,7 @@ bool CheckWork(CBlock* pblock, CWallet& wallet, CReserveKey& reservekey)\n \n void static BitcoinMiner(CWallet *pwallet)\n {\n-    printf(\"BitcoinMiner started\\n\");\n+    LogPrintf(\"BitcoinMiner started\\n\");\n     SetThreadPriority(THREAD_PRIORITY_LOWEST);\n     RenameThread(\"bitcoin-miner\");\n \n@@ -522,7 +522,7 @@ void static BitcoinMiner(CWallet *pwallet)\n         CBlock *pblock = &pblocktemplate->block;\n         IncrementExtraNonce(pblock, pindexPrev, nExtraNonce);\n \n-        printf(\"Running BitcoinMiner with %\"PRIszu\" transactions in block (%u bytes)\\n\", pblock->vtx.size(),\n+        LogPrintf(\"Running BitcoinMiner with %\"PRIszu\" transactions in block (%u bytes)\\n\", pblock->vtx.size(),\n                ::GetSerializeSize(*pblock, SER_NETWORK, PROTOCOL_VERSION));\n \n         //\n@@ -603,7 +603,7 @@ void static BitcoinMiner(CWallet *pwallet)\n                         if (GetTime() - nLogTime > 30 * 60)\n                         {\n                             nLogTime = GetTime();\n-                            printf(\"hashmeter %6.0f khash/s\\n\", dHashesPerSec/1000.0);\n+                            LogPrintf(\"hashmeter %6.0f khash/s\\n\", dHashesPerSec/1000.0);\n                         }\n                     }\n                 }\n@@ -633,7 +633,7 @@ void static BitcoinMiner(CWallet *pwallet)\n     } }\n     catch (boost::thread_interrupted)\n     {\n-        printf(\"BitcoinMiner terminated\\n\");\n+        LogPrintf(\"BitcoinMiner terminated\\n\");\n         throw;\n     }\n }"
      },
      {
        "sha": "781dbfadca4a996f737a0ea3c08cd002698ac820",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 47,
        "deletions": 48,
        "changes": 95,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/881a85a22d76c875f519cd54388a419ec6f70857/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/881a85a22d76c875f519cd54388a419ec6f70857/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=881a85a22d76c875f519cd54388a419ec6f70857",
        "patch": "@@ -173,14 +173,14 @@ bool RecvLine(SOCKET hSocket, string& strLine)\n             if (nBytes == 0)\n             {\n                 // socket closed\n-                printf(\"socket closed\\n\");\n+                LogPrint(\"net\", \"socket closed\\n\");\n                 return false;\n             }\n             else\n             {\n                 // socket error\n                 int nErr = WSAGetLastError();\n-                printf(\"recv failed: %d\\n\", nErr);\n+                LogPrint(\"net\", \"recv failed: %d\\n\", nErr);\n                 return false;\n             }\n         }\n@@ -226,7 +226,7 @@ bool AddLocal(const CService& addr, int nScore)\n     if (IsLimited(addr))\n         return false;\n \n-    printf(\"AddLocal(%s,%i)\\n\", addr.ToString().c_str(), nScore);\n+    LogPrintf(\"AddLocal(%s,%i)\\n\", addr.ToString().c_str(), nScore);\n \n     {\n         LOCK(cs_mapLocalHost);\n@@ -334,7 +334,7 @@ bool GetMyExternalIP2(const CService& addrConnect, const char* pszGet, const cha\n             while (strLine.size() > 0 && isspace(strLine[strLine.size()-1]))\n                 strLine.resize(strLine.size()-1);\n             CService addr(strLine,0,true);\n-            printf(\"GetMyExternalIP() received [%s] %s\\n\", strLine.c_str(), addr.ToString().c_str());\n+            LogPrintf(\"GetMyExternalIP() received [%s] %s\\n\", strLine.c_str(), addr.ToString().c_str());\n             if (!addr.IsValid() || !addr.IsRoutable())\n                 return false;\n             ipRet.SetIP(addr);\n@@ -409,7 +409,7 @@ void ThreadGetMyExternalIP()\n     CNetAddr addrLocalHost;\n     if (GetMyExternalIP(addrLocalHost))\n     {\n-        printf(\"GetMyExternalIP() returned %s\\n\", addrLocalHost.ToStringIP().c_str());\n+        LogPrintf(\"GetMyExternalIP() returned %s\\n\", addrLocalHost.ToStringIP().c_str());\n         AddLocal(addrLocalHost, LOCAL_HTTP);\n     }\n }\n@@ -473,7 +473,7 @@ CNode* ConnectNode(CAddress addrConnect, const char *pszDest)\n \n \n     /// debug print\n-    printf(\"trying connection %s lastseen=%.1fhrs\\n\",\n+    LogPrint(\"net\", \"trying connection %s lastseen=%.1fhrs\\n\",\n         pszDest ? pszDest : addrConnect.ToString().c_str(),\n         pszDest ? 0 : (double)(GetAdjustedTime() - addrConnect.nTime)/3600.0);\n \n@@ -483,17 +483,16 @@ CNode* ConnectNode(CAddress addrConnect, const char *pszDest)\n     {\n         addrman.Attempt(addrConnect);\n \n-        /// debug print\n-        printf(\"connected %s\\n\", pszDest ? pszDest : addrConnect.ToString().c_str());\n+        LogPrint(\"net\", \"connected %s\\n\", pszDest ? pszDest : addrConnect.ToString().c_str());\n \n         // Set to non-blocking\n #ifdef WIN32\n         u_long nOne = 1;\n         if (ioctlsocket(hSocket, FIONBIO, &nOne) == SOCKET_ERROR)\n-            printf(\"ConnectSocket() : ioctlsocket non-blocking setting failed, error %d\\n\", WSAGetLastError());\n+            LogPrintf(\"ConnectSocket() : ioctlsocket non-blocking setting failed, error %d\\n\", WSAGetLastError());\n #else\n         if (fcntl(hSocket, F_SETFL, O_NONBLOCK) == SOCKET_ERROR)\n-            printf(\"ConnectSocket() : fcntl non-blocking setting failed, error %d\\n\", errno);\n+            LogPrintf(\"ConnectSocket() : fcntl non-blocking setting failed, error %d\\n\", errno);\n #endif\n \n         // Add node\n@@ -519,7 +518,7 @@ void CNode::CloseSocketDisconnect()\n     fDisconnect = true;\n     if (hSocket != INVALID_SOCKET)\n     {\n-        printf(\"disconnecting node %s\\n\", addrName.c_str());\n+        LogPrint(\"net\", \"disconnecting node %s\\n\", addrName.c_str());\n         closesocket(hSocket);\n         hSocket = INVALID_SOCKET;\n     }\n@@ -546,7 +545,7 @@ void CNode::PushVersion()\n     CAddress addrYou = (addr.IsRoutable() && !IsProxy(addr) ? addr : CAddress(CService(\"0.0.0.0\",0)));\n     CAddress addrMe = GetLocalAddress(&addr);\n     RAND_bytes((unsigned char*)&nLocalHostNonce, sizeof(nLocalHostNonce));\n-    printf(\"send version message: version %d, blocks=%d, us=%s, them=%s, peer=%s\\n\", PROTOCOL_VERSION, nBestHeight, addrMe.ToString().c_str(), addrYou.ToString().c_str(), addr.ToString().c_str());\n+    LogPrint(\"net\", \"send version message: version %d, blocks=%d, us=%s, them=%s, peer=%s\\n\", PROTOCOL_VERSION, nBestHeight, addrMe.ToString().c_str(), addrYou.ToString().c_str(), addr.ToString().c_str());\n     PushMessage(\"version\", PROTOCOL_VERSION, nLocalServices, nTime, addrYou, addrMe,\n                 nLocalHostNonce, FormatSubVersion(CLIENT_NAME, CLIENT_VERSION, std::vector<string>()), nBestHeight, true);\n }\n@@ -583,15 +582,15 @@ bool CNode::Misbehaving(int howmuch)\n {\n     if (addr.IsLocal())\n     {\n-        printf(\"Warning: Local node %s misbehaving (delta: %d)!\\n\", addrName.c_str(), howmuch);\n+        LogPrintf(\"Warning: Local node %s misbehaving (delta: %d)!\\n\", addrName.c_str(), howmuch);\n         return false;\n     }\n \n     nMisbehavior += howmuch;\n     if (nMisbehavior >= GetArg(\"-banscore\", 100))\n     {\n         int64 banTime = GetTime()+GetArg(\"-bantime\", 60*60*24);  // Default 24-hour ban\n-        printf(\"Misbehaving: %s (%d -> %d) DISCONNECTING\\n\", addr.ToString().c_str(), nMisbehavior-howmuch, nMisbehavior);\n+        LogPrintf(\"Misbehaving: %s (%d -> %d) DISCONNECTING\\n\", addr.ToString().c_str(), nMisbehavior-howmuch, nMisbehavior);\n         {\n             LOCK(cs_setBanned);\n             if (setBanned[addr] < banTime)\n@@ -600,7 +599,7 @@ bool CNode::Misbehaving(int howmuch)\n         CloseSocketDisconnect();\n         return true;\n     } else\n-        printf(\"Misbehaving: %s (%d -> %d)\\n\", addr.ToString().c_str(), nMisbehavior-howmuch, nMisbehavior);\n+        LogPrintf(\"Misbehaving: %s (%d -> %d)\\n\", addr.ToString().c_str(), nMisbehavior-howmuch, nMisbehavior);\n     return false;\n }\n \n@@ -731,7 +730,7 @@ void SocketSendData(CNode *pnode)\n                 int nErr = WSAGetLastError();\n                 if (nErr != WSAEWOULDBLOCK && nErr != WSAEMSGSIZE && nErr != WSAEINTR && nErr != WSAEINPROGRESS)\n                 {\n-                    printf(\"socket send error %d\\n\", nErr);\n+                    LogPrintf(\"socket send error %d\\n\", nErr);\n                     pnode->CloseSocketDisconnect();\n                 }\n             }\n@@ -891,7 +890,7 @@ void ThreadSocketHandler()\n             if (have_fds)\n             {\n                 int nErr = WSAGetLastError();\n-                printf(\"socket select error %d\\n\", nErr);\n+                LogPrintf(\"socket select error %d\\n\", nErr);\n                 for (unsigned int i = 0; i <= hSocketMax; i++)\n                     FD_SET(i, &fdsetRecv);\n             }\n@@ -919,7 +918,7 @@ void ThreadSocketHandler()\n \n             if (hSocket != INVALID_SOCKET)\n                 if (!addr.SetSockAddr((const struct sockaddr*)&sockaddr))\n-                    printf(\"Warning: Unknown socket family\\n\");\n+                    LogPrintf(\"Warning: Unknown socket family\\n\");\n \n             {\n                 LOCK(cs_vNodes);\n@@ -932,7 +931,7 @@ void ThreadSocketHandler()\n             {\n                 int nErr = WSAGetLastError();\n                 if (nErr != WSAEWOULDBLOCK)\n-                    printf(\"socket error accept failed: %d\\n\", nErr);\n+                    LogPrintf(\"socket error accept failed: %d\\n\", nErr);\n             }\n             else if (nInbound >= nMaxConnections - MAX_OUTBOUND_CONNECTIONS)\n             {\n@@ -944,12 +943,12 @@ void ThreadSocketHandler()\n             }\n             else if (CNode::IsBanned(addr))\n             {\n-                printf(\"connection from %s dropped (banned)\\n\", addr.ToString().c_str());\n+                LogPrintf(\"connection from %s dropped (banned)\\n\", addr.ToString().c_str());\n                 closesocket(hSocket);\n             }\n             else\n             {\n-                printf(\"accepted connection %s\\n\", addr.ToString().c_str());\n+                LogPrint(\"net\", \"accepted connection %s\\n\", addr.ToString().c_str());\n                 CNode* pnode = new CNode(hSocket, addr, \"\", true);\n                 pnode->AddRef();\n                 {\n@@ -999,7 +998,7 @@ void ThreadSocketHandler()\n                         {\n                             // socket closed gracefully\n                             if (!pnode->fDisconnect)\n-                                printf(\"socket closed\\n\");\n+                                LogPrint(\"net\", \"socket closed\\n\");\n                             pnode->CloseSocketDisconnect();\n                         }\n                         else if (nBytes < 0)\n@@ -1009,7 +1008,7 @@ void ThreadSocketHandler()\n                             if (nErr != WSAEWOULDBLOCK && nErr != WSAEMSGSIZE && nErr != WSAEINTR && nErr != WSAEINPROGRESS)\n                             {\n                                 if (!pnode->fDisconnect)\n-                                    printf(\"socket recv error %d\\n\", nErr);\n+                                    LogPrintf(\"socket recv error %d\\n\", nErr);\n                                 pnode->CloseSocketDisconnect();\n                             }\n                         }\n@@ -1038,17 +1037,17 @@ void ThreadSocketHandler()\n             {\n                 if (pnode->nLastRecv == 0 || pnode->nLastSend == 0)\n                 {\n-                    printf(\"socket no message in first 60 seconds, %d %d\\n\", pnode->nLastRecv != 0, pnode->nLastSend != 0);\n+                    LogPrint(\"net\", \"socket no message in first 60 seconds, %d %d\\n\", pnode->nLastRecv != 0, pnode->nLastSend != 0);\n                     pnode->fDisconnect = true;\n                 }\n                 else if (GetTime() - pnode->nLastSend > 90*60 && GetTime() - pnode->nLastSendEmpty > 90*60)\n                 {\n-                    printf(\"socket not sending\\n\");\n+                    LogPrintf(\"socket not sending\\n\");\n                     pnode->fDisconnect = true;\n                 }\n                 else if (GetTime() - pnode->nLastRecv > 90*60)\n                 {\n-                    printf(\"socket inactivity timeout\\n\");\n+                    LogPrintf(\"socket inactivity timeout\\n\");\n                     pnode->fDisconnect = true;\n                 }\n             }\n@@ -1100,16 +1099,16 @@ void ThreadMapPort()\n             char externalIPAddress[40];\n             r = UPNP_GetExternalIPAddress(urls.controlURL, data.first.servicetype, externalIPAddress);\n             if(r != UPNPCOMMAND_SUCCESS)\n-                printf(\"UPnP: GetExternalIPAddress() returned %d\\n\", r);\n+                LogPrintf(\"UPnP: GetExternalIPAddress() returned %d\\n\", r);\n             else\n             {\n                 if(externalIPAddress[0])\n                 {\n-                    printf(\"UPnP: ExternalIPAddress = %s\\n\", externalIPAddress);\n+                    LogPrintf(\"UPnP: ExternalIPAddress = %s\\n\", externalIPAddress);\n                     AddLocal(CNetAddr(externalIPAddress), LOCAL_UPNP);\n                 }\n                 else\n-                    printf(\"UPnP: GetExternalIPAddress failed.\\n\");\n+                    LogPrintf(\"UPnP: GetExternalIPAddress failed.\\n\");\n             }\n         }\n \n@@ -1128,24 +1127,24 @@ void ThreadMapPort()\n #endif\n \n                 if(r!=UPNPCOMMAND_SUCCESS)\n-                    printf(\"AddPortMapping(%s, %s, %s) failed with code %d (%s)\\n\",\n+                    LogPrintf(\"AddPortMapping(%s, %s, %s) failed with code %d (%s)\\n\",\n                         port.c_str(), port.c_str(), lanaddr, r, strupnperror(r));\n                 else\n-                    printf(\"UPnP Port Mapping successful.\\n\");;\n+                    LogPrintf(\"UPnP Port Mapping successful.\\n\");;\n \n                 MilliSleep(20*60*1000); // Refresh every 20 minutes\n             }\n         }\n         catch (boost::thread_interrupted)\n         {\n             r = UPNP_DeletePortMapping(urls.controlURL, data.first.servicetype, port.c_str(), \"TCP\", 0);\n-            printf(\"UPNP_DeletePortMapping() returned : %d\\n\", r);\n+            LogPrintf(\"UPNP_DeletePortMapping() returned : %d\\n\", r);\n             freeUPNPDevlist(devlist); devlist = 0;\n             FreeUPNPUrls(&urls);\n             throw;\n         }\n     } else {\n-        printf(\"No valid UPnP IGDs found\\n\");\n+        LogPrintf(\"No valid UPnP IGDs found\\n\");\n         freeUPNPDevlist(devlist); devlist = 0;\n         if (r != 0)\n             FreeUPNPUrls(&urls);\n@@ -1190,7 +1189,7 @@ void ThreadDNSAddressSeed()\n     const vector<CDNSSeedData> &vSeeds = Params().DNSSeeds();\n     int found = 0;\n \n-    printf(\"Loading addresses from DNS seeds (could take a while)\\n\");\n+    LogPrintf(\"Loading addresses from DNS seeds (could take a while)\\n\");\n \n     BOOST_FOREACH(const CDNSSeedData &seed, vSeeds) {\n         if (HaveNameProxy()) {\n@@ -1213,7 +1212,7 @@ void ThreadDNSAddressSeed()\n         }\n     }\n \n-    printf(\"%d addresses found from DNS seeds\\n\", found);\n+    LogPrintf(\"%d addresses found from DNS seeds\\n\", found);\n }\n \n \n@@ -1234,7 +1233,7 @@ void DumpAddresses()\n     CAddrDB adb;\n     adb.Write(addrman);\n \n-    printf(\"Flushed %d addresses to peers.dat  %\"PRI64d\"ms\\n\",\n+    LogPrint(\"net\", \"Flushed %d addresses to peers.dat  %\"PRI64d\"ms\\n\",\n            addrman.size(), GetTimeMillis() - nStart);\n }\n \n@@ -1292,7 +1291,7 @@ void ThreadOpenConnections()\n         if (addrman.size() == 0 && (GetTime() - nStart > 60)) {\n             static bool done = false;\n             if (!done) {\n-                printf(\"Adding fixed seed nodes as DNS doesn't seem to be available.\\n\");\n+                LogPrintf(\"Adding fixed seed nodes as DNS doesn't seem to be available.\\n\");\n                 addrman.Add(Params().FixedSeeds(), CNetAddr(\"127.0.0.1\"));\n                 done = true;\n             }\n@@ -1568,15 +1567,15 @@ bool BindListenPort(const CService &addrBind, string& strError)\n     if (!addrBind.GetSockAddr((struct sockaddr*)&sockaddr, &len))\n     {\n         strError = strprintf(\"Error: bind address family for %s not supported\", addrBind.ToString().c_str());\n-        printf(\"%s\\n\", strError.c_str());\n+        LogPrintf(\"%s\\n\", strError.c_str());\n         return false;\n     }\n \n     SOCKET hListenSocket = socket(((struct sockaddr*)&sockaddr)->sa_family, SOCK_STREAM, IPPROTO_TCP);\n     if (hListenSocket == INVALID_SOCKET)\n     {\n         strError = strprintf(\"Error: Couldn't open socket for incoming connections (socket returned error %d)\", WSAGetLastError());\n-        printf(\"%s\\n\", strError.c_str());\n+        LogPrintf(\"%s\\n\", strError.c_str());\n         return false;\n     }\n \n@@ -1600,7 +1599,7 @@ bool BindListenPort(const CService &addrBind, string& strError)\n #endif\n     {\n         strError = strprintf(\"Error: Couldn't set properties on socket for incoming connections (error %d)\", WSAGetLastError());\n-        printf(\"%s\\n\", strError.c_str());\n+        LogPrintf(\"%s\\n\", strError.c_str());\n         return false;\n     }\n \n@@ -1631,16 +1630,16 @@ bool BindListenPort(const CService &addrBind, string& strError)\n             strError = strprintf(_(\"Unable to bind to %s on this computer. Bitcoin is probably already running.\"), addrBind.ToString().c_str());\n         else\n             strError = strprintf(_(\"Unable to bind to %s on this computer (bind returned error %d, %s)\"), addrBind.ToString().c_str(), nErr, strerror(nErr));\n-        printf(\"%s\\n\", strError.c_str());\n+        LogPrintf(\"%s\\n\", strError.c_str());\n         return false;\n     }\n-    printf(\"Bound to %s\\n\", addrBind.ToString().c_str());\n+    LogPrintf(\"Bound to %s\\n\", addrBind.ToString().c_str());\n \n     // Listen for incoming connections\n     if (listen(hListenSocket, SOMAXCONN) == SOCKET_ERROR)\n     {\n         strError = strprintf(\"Error: Listening for incoming connections failed (listen returned error %d)\", WSAGetLastError());\n-        printf(\"%s\\n\", strError.c_str());\n+        LogPrintf(\"%s\\n\", strError.c_str());\n         return false;\n     }\n \n@@ -1687,15 +1686,15 @@ void static Discover()\n                 struct sockaddr_in* s4 = (struct sockaddr_in*)(ifa->ifa_addr);\n                 CNetAddr addr(s4->sin_addr);\n                 if (AddLocal(addr, LOCAL_IF))\n-                    printf(\"IPv4 %s: %s\\n\", ifa->ifa_name, addr.ToString().c_str());\n+                    LogPrintf(\"IPv4 %s: %s\\n\", ifa->ifa_name, addr.ToString().c_str());\n             }\n #ifdef USE_IPV6\n             else if (ifa->ifa_addr->sa_family == AF_INET6)\n             {\n                 struct sockaddr_in6* s6 = (struct sockaddr_in6*)(ifa->ifa_addr);\n                 CNetAddr addr(s6->sin6_addr);\n                 if (AddLocal(addr, LOCAL_IF))\n-                    printf(\"IPv6 %s: %s\\n\", ifa->ifa_name, addr.ToString().c_str());\n+                    LogPrintf(\"IPv6 %s: %s\\n\", ifa->ifa_name, addr.ToString().c_str());\n             }\n #endif\n         }\n@@ -1726,7 +1725,7 @@ void StartNode(boost::thread_group& threadGroup)\n     //\n \n     if (!GetBoolArg(\"-dnsseed\", true))\n-        printf(\"DNS seeding disabled\\n\");\n+        LogPrintf(\"DNS seeding disabled\\n\");\n     else\n         threadGroup.create_thread(boost::bind(&TraceThread<void (*)()>, \"dnsseed\", &ThreadDNSAddressSeed));\n \n@@ -1753,7 +1752,7 @@ void StartNode(boost::thread_group& threadGroup)\n \n bool StopNode()\n {\n-    printf(\"StopNode()\\n\");\n+    LogPrintf(\"StopNode()\\n\");\n     MapPort(false);\n     if (semOutbound)\n         for (int i=0; i<MAX_OUTBOUND_CONNECTIONS; i++)\n@@ -1779,7 +1778,7 @@ class CNetCleanup\n         BOOST_FOREACH(SOCKET hListenSocket, vhListenSocket)\n             if (hListenSocket != INVALID_SOCKET)\n                 if (closesocket(hListenSocket) == SOCKET_ERROR)\n-                    printf(\"closesocket(hListenSocket) failed with error %d\\n\", WSAGetLastError());\n+                    LogPrintf(\"closesocket(hListenSocket) failed with error %d\\n\", WSAGetLastError());\n \n         // clean up some globals (to help leak detection)\n         BOOST_FOREACH(CNode *pnode, vNodes)"
      },
      {
        "sha": "49415f6502683d8fe1c4d93de92e92770da8d3c3",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 5,
        "deletions": 10,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/881a85a22d76c875f519cd54388a419ec6f70857/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/881a85a22d76c875f519cd54388a419ec6f70857/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=881a85a22d76c875f519cd54388a419ec6f70857",
        "patch": "@@ -372,8 +372,7 @@ class CNode\n             nRequestTime = it->second;\n         else\n             nRequestTime = 0;\n-        if (fDebugNet)\n-            printf(\"askfor %s   %\"PRI64d\" (%s)\\n\", inv.ToString().c_str(), nRequestTime, DateTimeStrFormat(\"%H:%M:%S\", nRequestTime/1000000).c_str());\n+        LogPrint(\"net\", \"askfor %s   %\"PRI64d\" (%s)\\n\", inv.ToString().c_str(), nRequestTime, DateTimeStrFormat(\"%H:%M:%S\", nRequestTime/1000000).c_str());\n \n         // Make sure not to reuse time indexes to keep things in the same order\n         int64 nNow = (GetTime() - 1) * 1000000;\n@@ -399,8 +398,7 @@ class CNode\n         ENTER_CRITICAL_SECTION(cs_vSend);\n         assert(ssSend.size() == 0);\n         ssSend << CMessageHeader(pszCommand, 0);\n-        if (fDebug)\n-            printf(\"sending: %s \", pszCommand);\n+        LogPrint(\"net\", \"sending: %s \", pszCommand);\n     }\n \n     // TODO: Document the precondition of this function.  Is cs_vSend locked?\n@@ -410,16 +408,15 @@ class CNode\n \n         LEAVE_CRITICAL_SECTION(cs_vSend);\n \n-        if (fDebug)\n-            printf(\"(aborted)\\n\");\n+        LogPrint(\"net\", \"(aborted)\\n\");\n     }\n \n     // TODO: Document the precondition of this function.  Is cs_vSend locked?\n     void EndMessage() UNLOCK_FUNCTION(cs_vSend)\n     {\n         if (mapArgs.count(\"-dropmessagestest\") && GetRand(atoi(mapArgs[\"-dropmessagestest\"])) == 0)\n         {\n-            printf(\"dropmessages DROPPING SEND MESSAGE\\n\");\n+            LogPrint(\"net\", \"dropmessages DROPPING SEND MESSAGE\\n\");\n             AbortMessage();\n             return;\n         }\n@@ -438,9 +435,7 @@ class CNode\n         assert(ssSend.size () >= CMessageHeader::CHECKSUM_OFFSET + sizeof(nChecksum));\n         memcpy((char*)&ssSend[CMessageHeader::CHECKSUM_OFFSET], &nChecksum, sizeof(nChecksum));\n \n-        if (fDebug) {\n-            printf(\"(%d bytes)\\n\", nSize);\n-        }\n+        LogPrint(\"net\", \"(%d bytes)\\n\", nSize);\n \n         std::deque<CSerializeData>::iterator it = vSendMsg.insert(vSendMsg.end(), CSerializeData());\n         ssSend.GetAndClear(*it);"
      },
      {
        "sha": "acc2ae32aa0595b0ae42d645e125d7db5e54b9d5",
        "filename": "src/netbase.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 13,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/881a85a22d76c875f519cd54388a419ec6f70857/src/netbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/881a85a22d76c875f519cd54388a419ec6f70857/src/netbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.cpp?ref=881a85a22d76c875f519cd54388a419ec6f70857",
        "patch": "@@ -169,7 +169,7 @@ bool LookupNumeric(const char *pszName, CService& addr, int portDefault)\n \n bool static Socks4(const CService &addrDest, SOCKET& hSocket)\n {\n-    printf(\"SOCKS4 connecting %s\\n\", addrDest.ToString().c_str());\n+    LogPrintf(\"SOCKS4 connecting %s\\n\", addrDest.ToString().c_str());\n     if (!addrDest.IsIPv4())\n     {\n         closesocket(hSocket);\n@@ -204,16 +204,16 @@ bool static Socks4(const CService &addrDest, SOCKET& hSocket)\n     {\n         closesocket(hSocket);\n         if (pchRet[1] != 0x5b)\n-            printf(\"ERROR: Proxy returned error %d\\n\", pchRet[1]);\n+            LogPrintf(\"ERROR: Proxy returned error %d\\n\", pchRet[1]);\n         return false;\n     }\n-    printf(\"SOCKS4 connected %s\\n\", addrDest.ToString().c_str());\n+    LogPrintf(\"SOCKS4 connected %s\\n\", addrDest.ToString().c_str());\n     return true;\n }\n \n bool static Socks5(string strDest, int port, SOCKET& hSocket)\n {\n-    printf(\"SOCKS5 connecting %s\\n\", strDest.c_str());\n+    LogPrintf(\"SOCKS5 connecting %s\\n\", strDest.c_str());\n     if (strDest.size() > 255)\n     {\n         closesocket(hSocket);\n@@ -309,7 +309,7 @@ bool static Socks5(string strDest, int port, SOCKET& hSocket)\n         closesocket(hSocket);\n         return error(\"Error reading from proxy\");\n     }\n-    printf(\"SOCKS5 connected %s\\n\", strDest.c_str());\n+    LogPrintf(\"SOCKS5 connected %s\\n\", strDest.c_str());\n     return true;\n }\n \n@@ -324,7 +324,7 @@ bool static ConnectSocketDirectly(const CService &addrConnect, SOCKET& hSocketRe\n #endif\n     socklen_t len = sizeof(sockaddr);\n     if (!addrConnect.GetSockAddr((struct sockaddr*)&sockaddr, &len)) {\n-        printf(\"Cannot connect to %s: unsupported network\\n\", addrConnect.ToString().c_str());\n+        LogPrintf(\"Cannot connect to %s: unsupported network\\n\", addrConnect.ToString().c_str());\n         return false;\n     }\n \n@@ -363,13 +363,13 @@ bool static ConnectSocketDirectly(const CService &addrConnect, SOCKET& hSocketRe\n             int nRet = select(hSocket + 1, NULL, &fdset, NULL, &timeout);\n             if (nRet == 0)\n             {\n-                printf(\"connection timeout\\n\");\n+                LogPrint(\"net\", \"connection timeout\\n\");\n                 closesocket(hSocket);\n                 return false;\n             }\n             if (nRet == SOCKET_ERROR)\n             {\n-                printf(\"select() for connection failed: %i\\n\",WSAGetLastError());\n+                LogPrintf(\"select() for connection failed: %i\\n\",WSAGetLastError());\n                 closesocket(hSocket);\n                 return false;\n             }\n@@ -380,13 +380,13 @@ bool static ConnectSocketDirectly(const CService &addrConnect, SOCKET& hSocketRe\n             if (getsockopt(hSocket, SOL_SOCKET, SO_ERROR, &nRet, &nRetSize) == SOCKET_ERROR)\n #endif\n             {\n-                printf(\"getsockopt() for connection failed: %i\\n\",WSAGetLastError());\n+                LogPrintf(\"getsockopt() for connection failed: %i\\n\",WSAGetLastError());\n                 closesocket(hSocket);\n                 return false;\n             }\n             if (nRet != 0)\n             {\n-                printf(\"connect() failed after select(): %s\\n\",strerror(nRet));\n+                LogPrintf(\"connect() failed after select(): %s\\n\",strerror(nRet));\n                 closesocket(hSocket);\n                 return false;\n             }\n@@ -397,7 +397,7 @@ bool static ConnectSocketDirectly(const CService &addrConnect, SOCKET& hSocketRe\n         else\n #endif\n         {\n-            printf(\"connect() failed: %i\\n\",WSAGetLastError());\n+            LogPrintf(\"connect() failed: %i\\n\",WSAGetLastError());\n             closesocket(hSocket);\n             return false;\n         }\n@@ -893,7 +893,7 @@ uint64 CNetAddr::GetHash() const\n \n void CNetAddr::print() const\n {\n-    printf(\"CNetAddr(%s)\\n\", ToString().c_str());\n+    LogPrintf(\"CNetAddr(%s)\\n\", ToString().c_str());\n }\n \n // private extensions to enum Network, only returned by GetExtNetwork,\n@@ -1134,7 +1134,7 @@ std::string CService::ToString() const\n \n void CService::print() const\n {\n-    printf(\"CService(%s)\\n\", ToString().c_str());\n+    LogPrintf(\"CService(%s)\\n\", ToString().c_str());\n }\n \n void CService::SetPort(unsigned short portIn)"
      },
      {
        "sha": "67eac944c6989b50a638fce6286ad3ce585e0395",
        "filename": "src/noui.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/881a85a22d76c875f519cd54388a419ec6f70857/src/noui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/881a85a22d76c875f519cd54388a419ec6f70857/src/noui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/noui.cpp?ref=881a85a22d76c875f519cd54388a419ec6f70857",
        "patch": "@@ -27,7 +27,7 @@ static bool noui_ThreadSafeMessageBox(const std::string& message, const std::str\n         strCaption += caption; // Use supplied caption (can be empty)\n     }\n \n-    printf(\"%s: %s\\n\", strCaption.c_str(), message.c_str());\n+    LogPrintf(\"%s: %s\\n\", strCaption.c_str(), message.c_str());\n     fprintf(stderr, \"%s: %s\\n\", strCaption.c_str(), message.c_str());\n     return false;\n }\n@@ -39,7 +39,7 @@ static bool noui_ThreadSafeAskFee(int64 /*nFeeRequired*/)\n \n static void noui_InitMessage(const std::string &message)\n {\n-    printf(\"init message: %s\\n\", message.c_str());\n+    LogPrintf(\"init message: %s\\n\", message.c_str());\n }\n \n void noui_connect()"
      },
      {
        "sha": "ba254be3e15ecb4333f227e1651d27eecc95bbf1",
        "filename": "src/protocol.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/881a85a22d76c875f519cd54388a419ec6f70857/src/protocol.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/881a85a22d76c875f519cd54388a419ec6f70857/src/protocol.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/protocol.cpp?ref=881a85a22d76c875f519cd54388a419ec6f70857",
        "patch": "@@ -67,7 +67,7 @@ bool CMessageHeader::IsValid() const\n     // Message size\n     if (nMessageSize > MAX_SIZE)\n     {\n-        printf(\"CMessageHeader::IsValid() : (%s, %u bytes) nMessageSize > MAX_SIZE\\n\", GetCommand().c_str(), nMessageSize);\n+        LogPrintf(\"CMessageHeader::IsValid() : (%s, %u bytes) nMessageSize > MAX_SIZE\\n\", GetCommand().c_str(), nMessageSize);\n         return false;\n     }\n \n@@ -146,6 +146,6 @@ std::string CInv::ToString() const\n \n void CInv::print() const\n {\n-    printf(\"CInv(%s)\\n\", ToString().c_str());\n+    LogPrintf(\"CInv(%s)\\n\", ToString().c_str());\n }\n "
      },
      {
        "sha": "f184fb9ef0675c45e41a02254c4a757619a48d77",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/881a85a22d76c875f519cd54388a419ec6f70857/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/881a85a22d76c875f519cd54388a419ec6f70857/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=881a85a22d76c875f519cd54388a419ec6f70857",
        "patch": "@@ -62,7 +62,7 @@ static bool ThreadSafeMessageBox(const std::string& message, const std::string&\n     }\n     else\n     {\n-        printf(\"%s: %s\\n\", caption.c_str(), message.c_str());\n+        LogPrintf(\"%s: %s\\n\", caption.c_str(), message.c_str());\n         fprintf(stderr, \"%s: %s\\n\", caption.c_str(), message.c_str());\n         return false;\n     }\n@@ -91,7 +91,7 @@ static void InitMessage(const std::string &message)\n         splashref->showMessage(QString::fromStdString(message), Qt::AlignBottom|Qt::AlignHCenter, QColor(55,55,55));\n         qApp->processEvents();\n     }\n-    printf(\"init message: %s\\n\", message.c_str());\n+    LogPrintf(\"init message: %s\\n\", message.c_str());\n }\n \n /*"
      },
      {
        "sha": "842910c7e0afa8181b06fb31bc4aa65387170408",
        "filename": "src/rpcdump.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/881a85a22d76c875f519cd54388a419ec6f70857/src/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/881a85a22d76c875f519cd54388a419ec6f70857/src/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcdump.cpp?ref=881a85a22d76c875f519cd54388a419ec6f70857",
        "patch": "@@ -145,7 +145,7 @@ Value importwallet(const Array& params, bool fHelp)\n         CPubKey pubkey = key.GetPubKey();\n         CKeyID keyid = pubkey.GetID();\n         if (pwalletMain->HaveKey(keyid)) {\n-            printf(\"Skipping import of %s (key already present)\\n\", CBitcoinAddress(keyid).ToString().c_str());\n+            LogPrintf(\"Skipping import of %s (key already present)\\n\", CBitcoinAddress(keyid).ToString().c_str());\n             continue;\n         }\n         int64 nTime = DecodeDumpTime(vstr[1]);\n@@ -163,7 +163,7 @@ Value importwallet(const Array& params, bool fHelp)\n                 fLabel = true;\n             }\n         }\n-        printf(\"Importing %s...\\n\", CBitcoinAddress(keyid).ToString().c_str());\n+        LogPrintf(\"Importing %s...\\n\", CBitcoinAddress(keyid).ToString().c_str());\n         if (!pwalletMain->AddKeyPubKey(key, pubkey)) {\n             fGood = false;\n             continue;\n@@ -179,7 +179,7 @@ Value importwallet(const Array& params, bool fHelp)\n     while (pindex && pindex->pprev && pindex->nTime > nTimeBegin - 7200)\n         pindex = pindex->pprev;\n \n-    printf(\"Rescanning last %i blocks\\n\", pindexBest->nHeight - pindex->nHeight + 1);\n+    LogPrintf(\"Rescanning last %i blocks\\n\", pindexBest->nHeight - pindex->nHeight + 1);\n     pwalletMain->ScanForWalletTransactions(pindex);\n     pwalletMain->ReacceptWalletTransactions();\n     pwalletMain->MarkDirty();"
      },
      {
        "sha": "0fe2953548fb0bc96778fed9ec3fc8c446862700",
        "filename": "src/script.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/881a85a22d76c875f519cd54388a419ec6f70857/src/script.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/881a85a22d76c875f519cd54388a419ec6f70857/src/script.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script.cpp?ref=881a85a22d76c875f519cd54388a419ec6f70857",
        "patch": "@@ -977,7 +977,7 @@ uint256 SignatureHash(CScript scriptCode, const CTransaction& txTo, unsigned int\n {\n     if (nIn >= txTo.vin.size())\n     {\n-        printf(\"ERROR: SignatureHash() : nIn=%d out of range\\n\", nIn);\n+        LogPrintf(\"ERROR: SignatureHash() : nIn=%d out of range\\n\", nIn);\n         return 1;\n     }\n     CTransaction txTmp(txTo);\n@@ -1008,7 +1008,7 @@ uint256 SignatureHash(CScript scriptCode, const CTransaction& txTo, unsigned int\n         unsigned int nOut = nIn;\n         if (nOut >= txTmp.vout.size())\n         {\n-            printf(\"ERROR: SignatureHash() : nOut=%d out of range\\n\", nOut);\n+            LogPrintf(\"ERROR: SignatureHash() : nOut=%d out of range\\n\", nOut);\n             return 1;\n         }\n         txTmp.vout.resize(nOut+1);"
      },
      {
        "sha": "f5ed611548f6a15892a8c55f8451a01abd5c0d41",
        "filename": "src/script.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/881a85a22d76c875f519cd54388a419ec6f70857/src/script.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/881a85a22d76c875f519cd54388a419ec6f70857/src/script.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script.h?ref=881a85a22d76c875f519cd54388a419ec6f70857",
        "patch": "@@ -560,7 +560,7 @@ class CScript : public std::vector<unsigned char>\n \n     void PrintHex() const\n     {\n-        printf(\"CScript(%s)\\n\", HexStr(begin(), end(), true).c_str());\n+        LogPrintf(\"CScript(%s)\\n\", HexStr(begin(), end(), true).c_str());\n     }\n \n     std::string ToString() const\n@@ -588,7 +588,7 @@ class CScript : public std::vector<unsigned char>\n \n     void print() const\n     {\n-        printf(\"%s\\n\", ToString().c_str());\n+        LogPrintf(\"%s\\n\", ToString().c_str());\n     }\n \n     CScriptID GetID() const"
      },
      {
        "sha": "29a455f9b255231b1cced41b408692bf0b61294e",
        "filename": "src/sync.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 13,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/881a85a22d76c875f519cd54388a419ec6f70857/src/sync.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/881a85a22d76c875f519cd54388a419ec6f70857/src/sync.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/sync.cpp?ref=881a85a22d76c875f519cd54388a419ec6f70857",
        "patch": "@@ -10,8 +10,8 @@\n #ifdef DEBUG_LOCKCONTENTION\n void PrintLockContention(const char* pszName, const char* pszFile, int nLine)\n {\n-    printf(\"LOCKCONTENTION: %s\\n\", pszName);\n-    printf(\"Locker: %s:%d\\n\", pszFile, nLine);\n+    LogPrintf(\"LOCKCONTENTION: %s\\n\", pszName);\n+    LogPrintf(\"Locker: %s:%d\\n\", pszFile, nLine);\n }\n #endif /* DEBUG_LOCKCONTENTION */\n \n@@ -56,20 +56,20 @@ static boost::thread_specific_ptr<LockStack> lockstack;\n \n static void potential_deadlock_detected(const std::pair<void*, void*>& mismatch, const LockStack& s1, const LockStack& s2)\n {\n-    printf(\"POTENTIAL DEADLOCK DETECTED\\n\");\n-    printf(\"Previous lock order was:\\n\");\n+    LogPrintf(\"POTENTIAL DEADLOCK DETECTED\\n\");\n+    LogPrintf(\"Previous lock order was:\\n\");\n     BOOST_FOREACH(const PAIRTYPE(void*, CLockLocation)& i, s2)\n     {\n-        if (i.first == mismatch.first) printf(\" (1)\");\n-        if (i.first == mismatch.second) printf(\" (2)\");\n-        printf(\" %s\\n\", i.second.ToString().c_str());\n+        if (i.first == mismatch.first) LogPrintf(\" (1)\");\n+        if (i.first == mismatch.second) LogPrintf(\" (2)\");\n+        LogPrintf(\" %s\\n\", i.second.ToString().c_str());\n     }\n-    printf(\"Current lock order is:\\n\");\n+    LogPrintf(\"Current lock order is:\\n\");\n     BOOST_FOREACH(const PAIRTYPE(void*, CLockLocation)& i, s1)\n     {\n-        if (i.first == mismatch.first) printf(\" (1)\");\n-        if (i.first == mismatch.second) printf(\" (2)\");\n-        printf(\" %s\\n\", i.second.ToString().c_str());\n+        if (i.first == mismatch.first) LogPrintf(\" (1)\");\n+        if (i.first == mismatch.second) LogPrintf(\" (2)\");\n+        LogPrintf(\" %s\\n\", i.second.ToString().c_str());\n     }\n }\n \n@@ -78,7 +78,7 @@ static void push_lock(void* c, const CLockLocation& locklocation, bool fTry)\n     if (lockstack.get() == NULL)\n         lockstack.reset(new LockStack);\n \n-    if (fDebug) printf(\"Locking: %s\\n\", locklocation.ToString().c_str());\n+    if (fDebug) LogPrintf(\"Locking: %s\\n\", locklocation.ToString().c_str());\n     dd_mutex.lock();\n \n     (*lockstack).push_back(std::make_pair(c, locklocation));\n@@ -108,7 +108,7 @@ static void pop_lock()\n     if (fDebug)\n     {\n         const CLockLocation& locklocation = (*lockstack).rbegin()->second;\n-        printf(\"Unlocked: %s\\n\", locklocation.ToString().c_str());\n+        LogPrintf(\"Unlocked: %s\\n\", locklocation.ToString().c_str());\n     }\n     dd_mutex.lock();\n     (*lockstack).pop_back();"
      },
      {
        "sha": "0d2fdc2887469a80f1cc6d87c05f790d20083bbf",
        "filename": "src/txdb.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/881a85a22d76c875f519cd54388a419ec6f70857/src/txdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/881a85a22d76c875f519cd54388a419ec6f70857/src/txdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txdb.cpp?ref=881a85a22d76c875f519cd54388a419ec6f70857",
        "patch": "@@ -55,7 +55,7 @@ bool CCoinsViewDB::SetBestBlock(CBlockIndex *pindex) {\n }\n \n bool CCoinsViewDB::BatchWrite(const std::map<uint256, CCoins> &mapCoins, CBlockIndex *pindex) {\n-    printf(\"Committing %u changed transactions to coin database...\\n\", (unsigned int)mapCoins.size());\n+    LogPrint(\"coindb\", \"Committing %u changed transactions to coin database...\\n\", (unsigned int)mapCoins.size());\n \n     CLevelDBBatch batch;\n     for (std::map<uint256, CCoins>::const_iterator it = mapCoins.begin(); it != mapCoins.end(); it++)"
      },
      {
        "sha": "45ab8abb5ed1aa7cc0947c0b424bd112b9cd8a5e",
        "filename": "src/uint256.h",
        "status": "modified",
        "additions": 47,
        "deletions": 47,
        "changes": 94,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/881a85a22d76c875f519cd54388a419ec6f70857/src/uint256.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/881a85a22d76c875f519cd54388a419ec6f70857/src/uint256.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/uint256.h?ref=881a85a22d76c875f519cd54388a419ec6f70857",
        "patch": "@@ -654,126 +654,126 @@ inline int Testuint256AdHoc(std::vector<std::string> vArg)\n     uint256 g(0);\n \n \n-    printf(\"%s\\n\", g.ToString().c_str());\n-    g--;  printf(\"g--\\n\");\n-    printf(\"%s\\n\", g.ToString().c_str());\n-    g--;  printf(\"g--\\n\");\n-    printf(\"%s\\n\", g.ToString().c_str());\n-    g++;  printf(\"g++\\n\");\n-    printf(\"%s\\n\", g.ToString().c_str());\n-    g++;  printf(\"g++\\n\");\n-    printf(\"%s\\n\", g.ToString().c_str());\n-    g++;  printf(\"g++\\n\");\n-    printf(\"%s\\n\", g.ToString().c_str());\n-    g++;  printf(\"g++\\n\");\n-    printf(\"%s\\n\", g.ToString().c_str());\n+    LogPrintf(\"%s\\n\", g.ToString().c_str());\n+    g--;  LogPrintf(\"g--\\n\");\n+    LogPrintf(\"%s\\n\", g.ToString().c_str());\n+    g--;  LogPrintf(\"g--\\n\");\n+    LogPrintf(\"%s\\n\", g.ToString().c_str());\n+    g++;  LogPrintf(\"g++\\n\");\n+    LogPrintf(\"%s\\n\", g.ToString().c_str());\n+    g++;  LogPrintf(\"g++\\n\");\n+    LogPrintf(\"%s\\n\", g.ToString().c_str());\n+    g++;  LogPrintf(\"g++\\n\");\n+    LogPrintf(\"%s\\n\", g.ToString().c_str());\n+    g++;  LogPrintf(\"g++\\n\");\n+    LogPrintf(\"%s\\n\", g.ToString().c_str());\n \n \n \n     uint256 a(7);\n-    printf(\"a=7\\n\");\n-    printf(\"%s\\n\", a.ToString().c_str());\n+    LogPrintf(\"a=7\\n\");\n+    LogPrintf(\"%s\\n\", a.ToString().c_str());\n \n     uint256 b;\n-    printf(\"b undefined\\n\");\n-    printf(\"%s\\n\", b.ToString().c_str());\n+    LogPrintf(\"b undefined\\n\");\n+    LogPrintf(\"%s\\n\", b.ToString().c_str());\n     int c = 3;\n \n     a = c;\n     a.pn[3] = 15;\n-    printf(\"%s\\n\", a.ToString().c_str());\n+    LogPrintf(\"%s\\n\", a.ToString().c_str());\n     uint256 k(c);\n \n     a = 5;\n     a.pn[3] = 15;\n-    printf(\"%s\\n\", a.ToString().c_str());\n+    LogPrintf(\"%s\\n\", a.ToString().c_str());\n     b = 1;\n     b <<= 52;\n \n     a |= b;\n \n     a ^= 0x500;\n \n-    printf(\"a %s\\n\", a.ToString().c_str());\n+    LogPrintf(\"a %s\\n\", a.ToString().c_str());\n \n     a = a | b | (uint256)0x1000;\n \n \n-    printf(\"a %s\\n\", a.ToString().c_str());\n-    printf(\"b %s\\n\", b.ToString().c_str());\n+    LogPrintf(\"a %s\\n\", a.ToString().c_str());\n+    LogPrintf(\"b %s\\n\", b.ToString().c_str());\n \n     a = 0xfffffffe;\n     a.pn[4] = 9;\n \n-    printf(\"%s\\n\", a.ToString().c_str());\n+    LogPrintf(\"%s\\n\", a.ToString().c_str());\n     a++;\n-    printf(\"%s\\n\", a.ToString().c_str());\n+    LogPrintf(\"%s\\n\", a.ToString().c_str());\n     a++;\n-    printf(\"%s\\n\", a.ToString().c_str());\n+    LogPrintf(\"%s\\n\", a.ToString().c_str());\n     a++;\n-    printf(\"%s\\n\", a.ToString().c_str());\n+    LogPrintf(\"%s\\n\", a.ToString().c_str());\n     a++;\n-    printf(\"%s\\n\", a.ToString().c_str());\n+    LogPrintf(\"%s\\n\", a.ToString().c_str());\n \n     a--;\n-    printf(\"%s\\n\", a.ToString().c_str());\n+    LogPrintf(\"%s\\n\", a.ToString().c_str());\n     a--;\n-    printf(\"%s\\n\", a.ToString().c_str());\n+    LogPrintf(\"%s\\n\", a.ToString().c_str());\n     a--;\n-    printf(\"%s\\n\", a.ToString().c_str());\n+    LogPrintf(\"%s\\n\", a.ToString().c_str());\n     uint256 d = a--;\n-    printf(\"%s\\n\", d.ToString().c_str());\n-    printf(\"%s\\n\", a.ToString().c_str());\n+    LogPrintf(\"%s\\n\", d.ToString().c_str());\n+    LogPrintf(\"%s\\n\", a.ToString().c_str());\n     a--;\n-    printf(\"%s\\n\", a.ToString().c_str());\n+    LogPrintf(\"%s\\n\", a.ToString().c_str());\n     a--;\n-    printf(\"%s\\n\", a.ToString().c_str());\n+    LogPrintf(\"%s\\n\", a.ToString().c_str());\n \n     d = a;\n \n-    printf(\"%s\\n\", d.ToString().c_str());\n-    for (int i = uint256::WIDTH-1; i >= 0; i--) printf(\"%08x\", d.pn[i]); printf(\"\\n\");\n+    LogPrintf(\"%s\\n\", d.ToString().c_str());\n+    for (int i = uint256::WIDTH-1; i >= 0; i--) LogPrintf(\"%08x\", d.pn[i]); LogPrintf(\"\\n\");\n \n     uint256 neg = d;\n     neg = ~neg;\n-    printf(\"%s\\n\", neg.ToString().c_str());\n+    LogPrintf(\"%s\\n\", neg.ToString().c_str());\n \n \n     uint256 e = uint256(\"0xABCDEF123abcdef12345678909832180000011111111\");\n-    printf(\"\\n\");\n-    printf(\"%s\\n\", e.ToString().c_str());\n+    LogPrintf(\"\\n\");\n+    LogPrintf(\"%s\\n\", e.ToString().c_str());\n \n \n-    printf(\"\\n\");\n+    LogPrintf(\"\\n\");\n     uint256 x1 = uint256(\"0xABCDEF123abcdef12345678909832180000011111111\");\n     uint256 x2;\n-    printf(\"%s\\n\", x1.ToString().c_str());\n+    LogPrintf(\"%s\\n\", x1.ToString().c_str());\n     for (int i = 0; i < 270; i += 4)\n     {\n         x2 = x1 << i;\n-        printf(\"%s\\n\", x2.ToString().c_str());\n+        LogPrintf(\"%s\\n\", x2.ToString().c_str());\n     }\n \n-    printf(\"\\n\");\n-    printf(\"%s\\n\", x1.ToString().c_str());\n+    LogPrintf(\"\\n\");\n+    LogPrintf(\"%s\\n\", x1.ToString().c_str());\n     for (int i = 0; i < 270; i += 4)\n     {\n         x2 = x1;\n         x2 >>= i;\n-        printf(\"%s\\n\", x2.ToString().c_str());\n+        LogPrintf(\"%s\\n\", x2.ToString().c_str());\n     }\n \n \n     for (int i = 0; i < 100; i++)\n     {\n         uint256 k = (~uint256(0) >> i);\n-        printf(\"%s\\n\", k.ToString().c_str());\n+        LogPrintf(\"%s\\n\", k.ToString().c_str());\n     }\n \n     for (int i = 0; i < 100; i++)\n     {\n         uint256 k = (~uint256(0) << i);\n-        printf(\"%s\\n\", k.ToString().c_str());\n+        LogPrintf(\"%s\\n\", k.ToString().c_str());\n     }\n \n     return (0);"
      },
      {
        "sha": "281ced2fa9cb26ca024026a5612c569925bd4b43",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 13,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/881a85a22d76c875f519cd54388a419ec6f70857/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/881a85a22d76c875f519cd54388a419ec6f70857/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=881a85a22d76c875f519cd54388a419ec6f70857",
        "patch": "@@ -166,7 +166,7 @@ void RandAddSeedPerfmon()\n     {\n         RAND_add(pdata, nSize, nSize/100.0);\n         OPENSSL_cleanse(pdata, nSize);\n-        printf(\"RandAddSeed() %lu bytes\\n\", nSize);\n+        LogPrint(\"rand\", \"RandAddSeed() %lu bytes\\n\", nSize);\n     }\n #endif\n }\n@@ -368,7 +368,7 @@ bool error(const char *format, ...)\n     va_start(arg_ptr, format);\n     std::string str = vstrprintf(format, arg_ptr);\n     va_end(arg_ptr);\n-    printf(\"ERROR: %s\\n\", str.c_str());\n+    LogPrintf(\"ERROR: %s\\n\", str.c_str());\n     return false;\n }\n \n@@ -1002,13 +1002,13 @@ static std::string FormatException(std::exception* pex, const char* pszThread)\n void LogException(std::exception* pex, const char* pszThread)\n {\n     std::string message = FormatException(pex, pszThread);\n-    printf(\"\\n%s\", message.c_str());\n+    LogPrintf(\"\\n%s\", message.c_str());\n }\n \n void PrintException(std::exception* pex, const char* pszThread)\n {\n     std::string message = FormatException(pex, pszThread);\n-    printf(\"\\n\\n************************\\n%s\\n\", message.c_str());\n+    LogPrintf(\"\\n\\n************************\\n%s\\n\", message.c_str());\n     fprintf(stderr, \"\\n\\n************************\\n%s\\n\", message.c_str());\n     strMiscWarning = message;\n     throw;\n@@ -1017,7 +1017,7 @@ void PrintException(std::exception* pex, const char* pszThread)\n void PrintExceptionContinue(std::exception* pex, const char* pszThread)\n {\n     std::string message = FormatException(pex, pszThread);\n-    printf(\"\\n\\n************************\\n%s\\n\", message.c_str());\n+    LogPrintf(\"\\n\\n************************\\n%s\\n\", message.c_str());\n     fprintf(stderr, \"\\n\\n************************\\n%s\\n\", message.c_str());\n     strMiscWarning = message;\n }\n@@ -1330,7 +1330,7 @@ void AddTimeData(const CNetAddr& ip, int64 nTime)\n \n     // Add data\n     vTimeOffsets.input(nOffsetSample);\n-    printf(\"Added time data, samples %d, offset %+\"PRI64d\" (%+\"PRI64d\" minutes)\\n\", vTimeOffsets.size(), nOffsetSample, nOffsetSample/60);\n+    LogPrintf(\"Added time data, samples %d, offset %+\"PRI64d\" (%+\"PRI64d\" minutes)\\n\", vTimeOffsets.size(), nOffsetSample, nOffsetSample/60);\n     if (vTimeOffsets.size() >= 5 && vTimeOffsets.size() % 2 == 1)\n     {\n         int64 nMedian = vTimeOffsets.median();\n@@ -1358,17 +1358,17 @@ void AddTimeData(const CNetAddr& ip, int64 nTime)\n                     fDone = true;\n                     string strMessage = _(\"Warning: Please check that your computer's date and time are correct! If your clock is wrong Bitcoin will not work properly.\");\n                     strMiscWarning = strMessage;\n-                    printf(\"*** %s\\n\", strMessage.c_str());\n+                    LogPrintf(\"*** %s\\n\", strMessage.c_str());\n                     uiInterface.ThreadSafeMessageBox(strMessage, \"\", CClientUIInterface::MSG_WARNING);\n                 }\n             }\n         }\n         if (fDebug) {\n             BOOST_FOREACH(int64 n, vSorted)\n-                printf(\"%+\"PRI64d\"  \", n);\n-            printf(\"|  \");\n+                LogPrintf(\"%+\"PRI64d\"  \", n);\n+            LogPrintf(\"|  \");\n         }\n-        printf(\"nTimeOffset = %+\"PRI64d\"  (%+\"PRI64d\" minutes)\\n\", nTimeOffset, nTimeOffset/60);\n+        LogPrintf(\"nTimeOffset = %+\"PRI64d\"  (%+\"PRI64d\" minutes)\\n\", nTimeOffset, nTimeOffset/60);\n     }\n }\n \n@@ -1430,7 +1430,7 @@ boost::filesystem::path GetSpecialFolderPath(int nFolder, bool fCreate)\n         return fs::path(pszPath);\n     }\n \n-    printf(\"SHGetSpecialFolderPathA() failed, could not obtain requested path.\\n\");\n+    LogPrintf(\"SHGetSpecialFolderPathA() failed, could not obtain requested path.\\n\");\n     return fs::path(\"\");\n }\n #endif\n@@ -1450,7 +1450,7 @@ boost::filesystem::path GetTempPath() {\n     path = boost::filesystem::path(\"/tmp\");\n #endif\n     if (path.empty() || !boost::filesystem::is_directory(path)) {\n-        printf(\"GetTempPath(): failed to find temp path\\n\");\n+        LogPrintf(\"GetTempPath(): failed to find temp path\\n\");\n         return boost::filesystem::path(\"\");\n     }\n     return path;\n@@ -1461,7 +1461,7 @@ void runCommand(std::string strCommand)\n {\n     int nErr = ::system(strCommand.c_str());\n     if (nErr)\n-        printf(\"runCommand error: system(%s) returned %d\\n\", strCommand.c_str(), nErr);\n+        LogPrintf(\"runCommand error: system(%s) returned %d\\n\", strCommand.c_str(), nErr);\n }\n \n void RenameThread(const char* name)"
      },
      {
        "sha": "a216aacdc9fabe33506ec64feeb7cebe68b0d95b",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 8,
        "deletions": 15,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/881a85a22d76c875f519cd54388a419ec6f70857/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/881a85a22d76c875f519cd54388a419ec6f70857/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=881a85a22d76c875f519cd54388a419ec6f70857",
        "patch": "@@ -156,6 +156,7 @@ void RandAddSeedPerfmon();\n \n // Print to debug.log if -debug=category switch is given OR category is NULL.\n int ATTR_WARN_PRINTF(2,3) LogPrint(const char* category, const char* pszFormat, ...);\n+#define LogPrintf(...) LogPrint(NULL, __VA_ARGS__)\n \n /*\n   Rationale for the real_strprintf / strprintf construction:\n@@ -175,14 +176,6 @@ std::string vstrprintf(const char *format, va_list ap);\n \n bool ATTR_WARN_PRINTF(1,2) error(const char *format, ...);\n \n-/* Redefine printf so that it directs output to debug.log\n- *\n- * Do this *after* defining the other printf-like functions, because otherwise the\n- * __attribute__((format(printf,X,Y))) gets expanded to __attribute__((format(OutputDebugStringF,X,Y)))\n- * which confuses gcc.\n- */\n-#define printf(...) LogPrint(NULL, __VA_ARGS__)\n-\n void LogException(std::exception* pex, const char* pszThread);\n void PrintException(std::exception* pex, const char* pszThread);\n void PrintExceptionContinue(std::exception* pex, const char* pszThread);\n@@ -319,12 +312,12 @@ inline std::string HexStr(const T& vch, bool fSpaces=false)\n template<typename T>\n void PrintHex(const T pbegin, const T pend, const char* pszFormat=\"%s\", bool fSpaces=true)\n {\n-    printf(pszFormat, HexStr(pbegin, pend, fSpaces).c_str());\n+    LogPrintf(pszFormat, HexStr(pbegin, pend, fSpaces).c_str());\n }\n \n inline void PrintHex(const std::vector<unsigned char>& vch, const char* pszFormat=\"%s\", bool fSpaces=true)\n {\n-    printf(pszFormat, HexStr(vch, fSpaces).c_str());\n+    LogPrintf(pszFormat, HexStr(vch, fSpaces).c_str());\n }\n \n inline int64 GetPerformanceCounter()\n@@ -562,7 +555,7 @@ template <typename Callable> void LoopForever(const char* name,  Callable func,\n {\n     std::string s = strprintf(\"bitcoin-%s\", name);\n     RenameThread(s.c_str());\n-    printf(\"%s thread start\\n\", name);\n+    LogPrintf(\"%s thread start\\n\", name);\n     try\n     {\n         while (1)\n@@ -573,7 +566,7 @@ template <typename Callable> void LoopForever(const char* name,  Callable func,\n     }\n     catch (boost::thread_interrupted)\n     {\n-        printf(\"%s thread stop\\n\", name);\n+        LogPrintf(\"%s thread stop\\n\", name);\n         throw;\n     }\n     catch (std::exception& e) {\n@@ -590,13 +583,13 @@ template <typename Callable> void TraceThread(const char* name,  Callable func)\n     RenameThread(s.c_str());\n     try\n     {\n-        printf(\"%s thread start\\n\", name);\n+        LogPrintf(\"%s thread start\\n\", name);\n         func();\n-        printf(\"%s thread exit\\n\", name);\n+        LogPrintf(\"%s thread exit\\n\", name);\n     }\n     catch (boost::thread_interrupted)\n     {\n-        printf(\"%s thread interrupt\\n\", name);\n+        LogPrintf(\"%s thread interrupt\\n\", name);\n         throw;\n     }\n     catch (std::exception& e) {"
      },
      {
        "sha": "91de93da7aa0cf9b11535069bddf4a61bef0c9b8",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 28,
        "deletions": 29,
        "changes": 57,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/881a85a22d76c875f519cd54388a419ec6f70857/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/881a85a22d76c875f519cd54388a419ec6f70857/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=881a85a22d76c875f519cd54388a419ec6f70857",
        "patch": "@@ -159,7 +159,7 @@ bool CWallet::ChangeWalletPassphrase(const SecureString& strOldWalletPassphrase,\n                 if (pMasterKey.second.nDeriveIterations < 25000)\n                     pMasterKey.second.nDeriveIterations = 25000;\n \n-                printf(\"Wallet passphrase changed to an nDeriveIterations of %i\\n\", pMasterKey.second.nDeriveIterations);\n+                LogPrintf(\"Wallet passphrase changed to an nDeriveIterations of %i\\n\", pMasterKey.second.nDeriveIterations);\n \n                 if (!crypter.SetKeyFromPassphrase(strNewWalletPassphrase, pMasterKey.second.vchSalt, pMasterKey.second.nDeriveIterations, pMasterKey.second.nDerivationMethod))\n                     return false;\n@@ -267,7 +267,7 @@ bool CWallet::EncryptWallet(const SecureString& strWalletPassphrase)\n     if (kMasterKey.nDeriveIterations < 25000)\n         kMasterKey.nDeriveIterations = 25000;\n \n-    printf(\"Encrypting Wallet with an nDeriveIterations of %i\\n\", kMasterKey.nDeriveIterations);\n+    LogPrintf(\"Encrypting Wallet with an nDeriveIterations of %i\\n\", kMasterKey.nDeriveIterations);\n \n     if (!crypter.SetKeyFromPassphrase(strWalletPassphrase, kMasterKey.vchSalt, kMasterKey.nDeriveIterations, kMasterKey.nDerivationMethod))\n         return false;\n@@ -368,10 +368,10 @@ void CWallet::WalletUpdateSpent(const CTransaction &tx)\n             {\n                 CWalletTx& wtx = (*mi).second;\n                 if (txin.prevout.n >= wtx.vout.size())\n-                    printf(\"WalletUpdateSpent: bad wtx %s\\n\", wtx.GetHash().ToString().c_str());\n+                    LogPrintf(\"WalletUpdateSpent: bad wtx %s\\n\", wtx.GetHash().ToString().c_str());\n                 else if (!wtx.IsSpent(txin.prevout.n) && IsMine(wtx.vout[txin.prevout.n]))\n                 {\n-                    printf(\"WalletUpdateSpent found spent coin %sbc %s\\n\", FormatMoney(wtx.GetCredit()).c_str(), wtx.GetHash().ToString().c_str());\n+                    LogPrintf(\"WalletUpdateSpent found spent coin %sbc %s\\n\", FormatMoney(wtx.GetCredit()).c_str(), wtx.GetHash().ToString().c_str());\n                     wtx.MarkSpent(txin.prevout.n);\n                     wtx.WriteToDisk();\n                     NotifyTransactionChanged(this, txin.prevout.hash, CT_UPDATED);\n@@ -446,9 +446,9 @@ bool CWallet::AddToWallet(const CWalletTx& wtxIn)\n                     wtx.nTimeSmart = std::max(latestEntry, std::min(blocktime, latestNow));\n                 }\n                 else\n-                    printf(\"AddToWallet() : found %s in block %s not in index\\n\",\n-                           wtxIn.GetHash().ToString().c_str(),\n-                           wtxIn.hashBlock.ToString().c_str());\n+                    LogPrintf(\"AddToWallet() : found %s in block %s not in index\\n\",\n+                             wtxIn.GetHash().ToString().c_str(),\n+                             wtxIn.hashBlock.ToString().c_str());\n             }\n         }\n \n@@ -476,7 +476,7 @@ bool CWallet::AddToWallet(const CWalletTx& wtxIn)\n         }\n \n         //// debug print\n-        printf(\"AddToWallet %s  %s%s\\n\", wtxIn.GetHash().ToString().c_str(), (fInsertedNew ? \"new\" : \"\"), (fUpdated ? \"update\" : \"\"));\n+        LogPrintf(\"AddToWallet %s  %s%s\\n\", wtxIn.GetHash().ToString().c_str(), (fInsertedNew ? \"new\" : \"\"), (fUpdated ? \"update\" : \"\"));\n \n         // Write to disk\n         if (fInsertedNew || fUpdated)\n@@ -677,8 +677,8 @@ void CWalletTx::GetAmounts(list<pair<CTxDestination, int64> >& listReceived,\n         vector<unsigned char> vchPubKey;\n         if (!ExtractDestination(txout.scriptPubKey, address))\n         {\n-            printf(\"CWalletTx::GetAmounts: Unknown transaction type found, txid %s\\n\",\n-                   this->GetHash().ToString().c_str());\n+            LogPrintf(\"CWalletTx::GetAmounts: Unknown transaction type found, txid %s\\n\",\n+                     this->GetHash().ToString().c_str());\n         }\n \n         // Don't report 'change' txouts\n@@ -849,7 +849,7 @@ void CWallet::ReacceptWalletTransactions()\n                 }\n                 if (fUpdated)\n                 {\n-                    printf(\"ReacceptWalletTransactions found spent coin %sbc %s\\n\", FormatMoney(wtx.GetCredit()).c_str(), wtx.GetHash().ToString().c_str());\n+                    LogPrintf(\"ReacceptWalletTransactions found spent coin %sbc %s\\n\", FormatMoney(wtx.GetCredit()).c_str(), wtx.GetHash().ToString().c_str());\n                     wtx.MarkDirty();\n                     wtx.WriteToDisk();\n                 }\n@@ -882,7 +882,7 @@ void CWalletTx::RelayWalletTransaction()\n     {\n         if (GetDepthInMainChain() == 0) {\n             uint256 hash = GetHash();\n-            printf(\"Relaying wtx %s\\n\", hash.ToString().c_str());\n+            LogPrintf(\"Relaying wtx %s\\n\", hash.ToString().c_str());\n             RelayTransaction((CTransaction)*this, hash);\n         }\n     }\n@@ -905,7 +905,7 @@ void CWallet::ResendWalletTransactions()\n     nLastResend = GetTime();\n \n     // Rebroadcast any of our txes that aren't in a block yet\n-    printf(\"ResendWalletTransactions()\\n\");\n+    LogPrintf(\"ResendWalletTransactions()\\n\");\n     {\n         LOCK(cs_wallet);\n         // Sort them in chronological order\n@@ -1145,12 +1145,11 @@ bool CWallet::SelectCoinsMinConf(int64 nTargetValue, int nConfMine, int nConfThe\n                 nValueRet += vValue[i].first;\n             }\n \n-        //// debug print\n-        printf(\"SelectCoins() best subset: \");\n+        LogPrintf(\"selectcoins\", \"SelectCoins() best subset: \");\n         for (unsigned int i = 0; i < vValue.size(); i++)\n             if (vfBest[i])\n-                printf(\"%s \", FormatMoney(vValue[i].first).c_str());\n-        printf(\"total %s\\n\", FormatMoney(nBest).c_str());\n+                LogPrintf(\"selectcoins\", \"%s \", FormatMoney(vValue[i].first).c_str());\n+        LogPrintf(\"selectcoins\", \"total %s\\n\", FormatMoney(nBest).c_str());\n     }\n \n     return true;\n@@ -1336,7 +1335,7 @@ bool CWallet::CommitTransaction(CWalletTx& wtxNew, CReserveKey& reservekey)\n {\n     {\n         LOCK2(cs_main, cs_wallet);\n-        printf(\"CommitTransaction:\\n%s\", wtxNew.ToString().c_str());\n+        LogPrintf(\"CommitTransaction:\\n%s\", wtxNew.ToString().c_str());\n         {\n             // This is only to keep the database open to defeat the auto-flush for the\n             // duration of this scope.  This is the only place where this optimization\n@@ -1372,7 +1371,7 @@ bool CWallet::CommitTransaction(CWalletTx& wtxNew, CReserveKey& reservekey)\n         if (!wtxNew.AcceptToMemoryPool(false))\n         {\n             // This must not fail. The transaction has already been signed and recorded.\n-            printf(\"CommitTransaction() : Error: Transaction not valid\");\n+            LogPrintf(\"CommitTransaction() : Error: Transaction not valid\");\n             return false;\n         }\n         wtxNew.RelayWalletTransaction();\n@@ -1391,15 +1390,15 @@ string CWallet::SendMoney(CScript scriptPubKey, int64 nValue, CWalletTx& wtxNew,\n     if (IsLocked())\n     {\n         string strError = _(\"Error: Wallet locked, unable to create transaction!\");\n-        printf(\"SendMoney() : %s\", strError.c_str());\n+        LogPrintf(\"SendMoney() : %s\", strError.c_str());\n         return strError;\n     }\n     string strError;\n     if (!CreateTransaction(scriptPubKey, nValue, wtxNew, reservekey, nFeeRequired, strError))\n     {\n         if (nValue + nFeeRequired > GetBalance())\n             strError = strprintf(_(\"Error: This transaction requires a transaction fee of at least %s because of its amount, complexity, or use of recently received funds!\"), FormatMoney(nFeeRequired).c_str());\n-        printf(\"SendMoney() : %s\\n\", strError.c_str());\n+        LogPrintf(\"SendMoney() : %s\\n\", strError.c_str());\n         return strError;\n     }\n \n@@ -1490,10 +1489,10 @@ void CWallet::PrintWallet(const CBlock& block)\n         if (mapWallet.count(block.vtx[0].GetHash()))\n         {\n             CWalletTx& wtx = mapWallet[block.vtx[0].GetHash()];\n-            printf(\"    mine:  %d  %d  %\"PRI64d\"\", wtx.GetDepthInMainChain(), wtx.GetBlocksToMaturity(), wtx.GetCredit());\n+            LogPrintf(\"    mine:  %d  %d  %\"PRI64d\"\", wtx.GetDepthInMainChain(), wtx.GetBlocksToMaturity(), wtx.GetCredit());\n         }\n     }\n-    printf(\"\\n\");\n+    LogPrintf(\"\\n\");\n }\n \n bool CWallet::GetTransaction(const uint256 &hashTx, CWalletTx& wtx)\n@@ -1552,7 +1551,7 @@ bool CWallet::NewKeyPool()\n             walletdb.WritePool(nIndex, CKeyPool(GenerateNewKey()));\n             setKeyPool.insert(nIndex);\n         }\n-        printf(\"CWallet::NewKeyPool wrote %\"PRI64d\" new keys\\n\", nKeys);\n+        LogPrintf(\"CWallet::NewKeyPool wrote %\"PRI64d\" new keys\\n\", nKeys);\n     }\n     return true;\n }\n@@ -1582,7 +1581,7 @@ bool CWallet::TopUpKeyPool(unsigned int kpSize)\n             if (!walletdb.WritePool(nEnd, CKeyPool(GenerateNewKey())))\n                 throw runtime_error(\"TopUpKeyPool() : writing generated key failed\");\n             setKeyPool.insert(nEnd);\n-            printf(\"keypool added key %\"PRI64d\", size=%\"PRIszu\"\\n\", nEnd, setKeyPool.size());\n+            LogPrintf(\"keypool added key %\"PRI64d\", size=%\"PRIszu\"\\n\", nEnd, setKeyPool.size());\n         }\n     }\n     return true;\n@@ -1611,7 +1610,7 @@ void CWallet::ReserveKeyFromKeyPool(int64& nIndex, CKeyPool& keypool)\n         if (!HaveKey(keypool.vchPubKey.GetID()))\n             throw runtime_error(\"ReserveKeyFromKeyPool() : unknown key in key pool\");\n         assert(keypool.vchPubKey.IsValid());\n-        printf(\"keypool reserve %\"PRI64d\"\\n\", nIndex);\n+        LogPrintf(\"keypool reserve %\"PRI64d\"\\n\", nIndex);\n     }\n }\n \n@@ -1638,7 +1637,7 @@ void CWallet::KeepKey(int64 nIndex)\n         CWalletDB walletdb(strWalletFile);\n         walletdb.ErasePool(nIndex);\n     }\n-    printf(\"keypool keep %\"PRI64d\"\\n\", nIndex);\n+    LogPrintf(\"keypool keep %\"PRI64d\"\\n\", nIndex);\n }\n \n void CWallet::ReturnKey(int64 nIndex)\n@@ -1648,7 +1647,7 @@ void CWallet::ReturnKey(int64 nIndex)\n         LOCK(cs_wallet);\n         setKeyPool.insert(nIndex);\n     }\n-    printf(\"keypool return %\"PRI64d\"\\n\", nIndex);\n+    LogPrintf(\"keypool return %\"PRI64d\"\\n\", nIndex);\n }\n \n bool CWallet::GetKeyFromPool(CPubKey& result)\n@@ -1836,7 +1835,7 @@ bool CReserveKey::GetReservedKey(CPubKey& pubkey)\n             vchPubKey = keypool.vchPubKey;\n         else {\n             if (pwallet->vchDefaultKey.IsValid()) {\n-                printf(\"CReserveKey::GetReservedKey(): Warning: Using default key instead of a new key, top up your keypool!\");\n+                LogPrintf(\"CReserveKey::GetReservedKey(): Warning: Using default key instead of a new key, top up your keypool!\");\n                 vchPubKey = pwallet->vchDefaultKey;\n             } else\n                 return false;"
      },
      {
        "sha": "51bc9f67c43e0d7b5e577995ed7fa18bdb720a58",
        "filename": "src/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/881a85a22d76c875f519cd54388a419ec6f70857/src/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/881a85a22d76c875f519cd54388a419ec6f70857/src/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.h?ref=881a85a22d76c875f519cd54388a419ec6f70857",
        "patch": "@@ -745,7 +745,7 @@ class COutput\n \n     void print() const\n     {\n-        printf(\"%s\\n\", ToString().c_str());\n+        LogPrintf(\"%s\\n\", ToString().c_str());\n     }\n };\n "
      },
      {
        "sha": "635fda1b42fad51e6eec7496b5d004eb0baee6e6",
        "filename": "src/walletdb.cpp",
        "status": "modified",
        "additions": 17,
        "deletions": 17,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/881a85a22d76c875f519cd54388a419ec6f70857/src/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/881a85a22d76c875f519cd54388a419ec6f70857/src/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/walletdb.cpp?ref=881a85a22d76c875f519cd54388a419ec6f70857",
        "patch": "@@ -271,8 +271,8 @@ ReadKeyValue(CWallet* pwallet, CDataStream& ssKey, CDataStream& ssValue,\n                 wss.fAnyUnordered = true;\n \n             //// debug print\n-            //printf(\"LoadWallet  %s\\n\", wtx.GetHash().ToString().c_str());\n-            //printf(\" %12\"PRI64d\"  %s  %s  %s\\n\",\n+            //LogPrintf(\"LoadWallet  %s\\n\", wtx.GetHash().ToString().c_str());\n+            //LogPrintf(\" %12\"PRI64d\"  %s  %s  %s\\n\",\n             //    wtx.vout[0].nValue,\n             //    DateTimeStrFormat(\"%Y-%m-%d %H:%M:%S\", wtx.GetBlockTime()).c_str(),\n             //    wtx.hashBlock.ToString().c_str(),\n@@ -451,7 +451,7 @@ DBErrors CWalletDB::LoadWallet(CWallet* pwallet)\n         Dbc* pcursor = GetCursor();\n         if (!pcursor)\n         {\n-            printf(\"Error getting wallet database cursor\\n\");\n+            LogPrintf(\"Error getting wallet database cursor\\n\");\n             return DB_CORRUPT;\n         }\n \n@@ -465,7 +465,7 @@ DBErrors CWalletDB::LoadWallet(CWallet* pwallet)\n                 break;\n             else if (ret != 0)\n             {\n-                printf(\"Error reading next record from wallet database\\n\");\n+                LogPrintf(\"Error reading next record from wallet database\\n\");\n                 return DB_CORRUPT;\n             }\n \n@@ -487,7 +487,7 @@ DBErrors CWalletDB::LoadWallet(CWallet* pwallet)\n                 }\n             }\n             if (!strErr.empty())\n-                printf(\"%s\\n\", strErr.c_str());\n+                LogPrintf(\"%s\\n\", strErr.c_str());\n         }\n         pcursor->close();\n     }\n@@ -506,9 +506,9 @@ DBErrors CWalletDB::LoadWallet(CWallet* pwallet)\n     if (result != DB_LOAD_OK)\n         return result;\n \n-    printf(\"nFileVersion = %d\\n\", wss.nFileVersion);\n+    LogPrintf(\"nFileVersion = %d\\n\", wss.nFileVersion);\n \n-    printf(\"Keys: %u plaintext, %u encrypted, %u w/ metadata, %u total\\n\",\n+    LogPrintf(\"Keys: %u plaintext, %u encrypted, %u w/ metadata, %u total\\n\",\n            wss.nKeys, wss.nCKeys, wss.nKeyMeta, wss.nKeys + wss.nCKeys);\n \n     // nTimeFirstKey is only reliable if all keys have metadata\n@@ -576,7 +576,7 @@ void ThreadFlushWalletDB(const string& strFile)\n                     map<string, int>::iterator mi = bitdb.mapFileUseCount.find(strFile);\n                     if (mi != bitdb.mapFileUseCount.end())\n                     {\n-                        printf(\"Flushing wallet.dat\\n\");\n+                        LogPrint(\"db\", \"Flushing wallet.dat\\n\");\n                         nLastFlushed = nWalletDBUpdated;\n                         int64 nStart = GetTimeMillis();\n \n@@ -585,7 +585,7 @@ void ThreadFlushWalletDB(const string& strFile)\n                         bitdb.CheckpointLSN(strFile);\n \n                         bitdb.mapFileUseCount.erase(mi++);\n-                        printf(\"Flushed wallet.dat %\"PRI64d\"ms\\n\", GetTimeMillis() - nStart);\n+                        LogPrint(\"db\", \"Flushed wallet.dat %\"PRI64d\"ms\\n\", GetTimeMillis() - nStart);\n                     }\n                 }\n             }\n@@ -620,10 +620,10 @@ bool BackupWallet(const CWallet& wallet, const string& strDest)\n #else\n                     filesystem::copy_file(pathSrc, pathDest);\n #endif\n-                    printf(\"copied wallet.dat to %s\\n\", pathDest.string().c_str());\n+                    LogPrintf(\"copied wallet.dat to %s\\n\", pathDest.string().c_str());\n                     return true;\n                 } catch(const filesystem::filesystem_error &e) {\n-                    printf(\"error copying wallet.dat to %s - %s\\n\", pathDest.string().c_str(), e.what());\n+                    LogPrintf(\"error copying wallet.dat to %s - %s\\n\", pathDest.string().c_str(), e.what());\n                     return false;\n                 }\n             }\n@@ -651,21 +651,21 @@ bool CWalletDB::Recover(CDBEnv& dbenv, std::string filename, bool fOnlyKeys)\n     int result = dbenv.dbenv.dbrename(NULL, filename.c_str(), NULL,\n                                       newFilename.c_str(), DB_AUTO_COMMIT);\n     if (result == 0)\n-        printf(\"Renamed %s to %s\\n\", filename.c_str(), newFilename.c_str());\n+        LogPrintf(\"Renamed %s to %s\\n\", filename.c_str(), newFilename.c_str());\n     else\n     {\n-        printf(\"Failed to rename %s to %s\\n\", filename.c_str(), newFilename.c_str());\n+        LogPrintf(\"Failed to rename %s to %s\\n\", filename.c_str(), newFilename.c_str());\n         return false;\n     }\n \n     std::vector<CDBEnv::KeyValPair> salvagedData;\n     bool allOK = dbenv.Salvage(newFilename, true, salvagedData);\n     if (salvagedData.empty())\n     {\n-        printf(\"Salvage(aggressive) found no records in %s.\\n\", newFilename.c_str());\n+        LogPrintf(\"Salvage(aggressive) found no records in %s.\\n\", newFilename.c_str());\n         return false;\n     }\n-    printf(\"Salvage(aggressive) found %\"PRIszu\" records\\n\", salvagedData.size());\n+    LogPrintf(\"Salvage(aggressive) found %\"PRIszu\" records\\n\", salvagedData.size());\n \n     bool fSuccess = allOK;\n     Db* pdbCopy = new Db(&dbenv.dbenv, 0);\n@@ -677,7 +677,7 @@ bool CWalletDB::Recover(CDBEnv& dbenv, std::string filename, bool fOnlyKeys)\n                             0);\n     if (ret > 0)\n     {\n-        printf(\"Cannot create database file %s\\n\", filename.c_str());\n+        LogPrintf(\"Cannot create database file %s\\n\", filename.c_str());\n         return false;\n     }\n     CWallet dummyWallet;\n@@ -697,7 +697,7 @@ bool CWalletDB::Recover(CDBEnv& dbenv, std::string filename, bool fOnlyKeys)\n                 continue;\n             if (!fReadOK)\n             {\n-                printf(\"WARNING: CWalletDB::Recover skipping %s: %s\\n\", strType.c_str(), strErr.c_str());\n+                LogPrintf(\"WARNING: CWalletDB::Recover skipping %s: %s\\n\", strType.c_str(), strErr.c_str());\n                 continue;\n             }\n         }"
      }
    ]
  }
]