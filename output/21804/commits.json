[
  {
    "sha": "a33bdb52d192d3e1f4697c98d0e80b2fa2bbe53a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphMzNiZGI1MmQxOTJkM2UxZjQ2OTdjOThkMGU4MGIyZmEyYmJlNTNh",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2021-04-29T08:17:56Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2021-04-29T08:17:56Z"
      },
      "message": "[tests] Speed up p2p_segwit.py\n\nNever sleep for more than 5 seconds when waiting for an\ninv-getdata exchange to time out.",
      "tree": {
        "sha": "6efab3213ddd714d182dfcf2bfa9f36651f1e3c3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6efab3213ddd714d182dfcf2bfa9f36651f1e3c3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a33bdb52d192d3e1f4697c98d0e80b2fa2bbe53a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a33bdb52d192d3e1f4697c98d0e80b2fa2bbe53a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a33bdb52d192d3e1f4697c98d0e80b2fa2bbe53a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a33bdb52d192d3e1f4697c98d0e80b2fa2bbe53a/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fb66dbe786ff3028d8f2b0be503ddd3b36541798",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fb66dbe786ff3028d8f2b0be503ddd3b36541798",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fb66dbe786ff3028d8f2b0be503ddd3b36541798"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 6,
      "deletions": 6
    },
    "files": [
      {
        "sha": "1b6e122ee4686f8b79f4dfc386b9b013ec68195a",
        "filename": "test/functional/p2p_segwit.py",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a33bdb52d192d3e1f4697c98d0e80b2fa2bbe53a/test/functional/p2p_segwit.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a33bdb52d192d3e1f4697c98d0e80b2fa2bbe53a/test/functional/p2p_segwit.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_segwit.py?ref=a33bdb52d192d3e1f4697c98d0e80b2fa2bbe53a",
        "patch": "@@ -164,7 +164,7 @@ def on_getdata(self, message):\n     def on_wtxidrelay(self, message):\n         self.last_wtxidrelay.append(message)\n \n-    def announce_tx_and_wait_for_getdata(self, tx, timeout=60, success=True, use_wtxid=False):\n+    def announce_tx_and_wait_for_getdata(self, tx, success=True, use_wtxid=False):\n         if success:\n             # sanity check\n             assert (self.wtxidrelay and use_wtxid) or (not self.wtxidrelay and not use_wtxid)\n@@ -178,11 +178,11 @@ def announce_tx_and_wait_for_getdata(self, tx, timeout=60, success=True, use_wtx\n \n         if success:\n             if use_wtxid:\n-                self.wait_for_getdata([wtxid], timeout)\n+                self.wait_for_getdata([wtxid])\n             else:\n-                self.wait_for_getdata([tx.sha256], timeout)\n+                self.wait_for_getdata([tx.sha256])\n         else:\n-            time.sleep(timeout)\n+            time.sleep(5)\n             assert not self.last_message.get(\"getdata\")\n \n     def announce_block_and_wait_for_getdata(self, block, use_header, timeout=60):\n@@ -604,7 +604,7 @@ def test_witness_tx_relay_before_segwit_activation(self):\n \n         # Since we haven't delivered the tx yet, inv'ing the same tx from\n         # a witness transaction ought not result in a getdata.\n-        self.test_node.announce_tx_and_wait_for_getdata(tx, timeout=2, success=False)\n+        self.test_node.announce_tx_and_wait_for_getdata(tx, success=False)\n \n         # Delivering this transaction with witness should fail (no matter who\n         # its from)\n@@ -1461,7 +1461,7 @@ def test_segwit_versions(self):\n         self.std_node.announce_tx_and_wait_for_getdata(tx3)\n         test_transaction_acceptance(self.nodes[1], self.std_node, tx3, with_witness=True, accepted=False, reason=\"bad-txns-nonstandard-inputs\")\n         # Now the node will no longer ask for getdata of this transaction when advertised by same txid\n-        self.std_node.announce_tx_and_wait_for_getdata(tx3, timeout=5, success=False)\n+        self.std_node.announce_tx_and_wait_for_getdata(tx3, success=False)\n \n         # Spending a higher version witness output is not allowed by policy,\n         # even with fRequireStandard=false."
      }
    ]
  }
]