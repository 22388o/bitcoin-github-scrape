DrahtBot,2021-06-04 03:32:18,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19438 (Introduce deploymentstatus by ajtowns)\n* #15606 ([experimental] UTXO snapshots by jamesob)\n\nIf you consider thi",https://github.com/bitcoin/bitcoin/pull/22141#issuecomment-854332605,854332605,
practicalswift,2021-06-07 19:41:46,Concept ACK,https://github.com/bitcoin/bitcoin/pull/22141#issuecomment-856205750,856205750,
mjdietzx,2021-06-07 22:09:32,crACK 2f4ad6b7efa408b8a858e87499bf6cfcdf936d73,https://github.com/bitcoin/bitcoin/pull/22141#issuecomment-856296379,856296379,
jnewbery,2021-06-09 09:42:58,Thanks for the review @mjdietzx. I've answered your review questions. Feel free to ask more if there's anything that's still unclear about this PR.,https://github.com/bitcoin/bitcoin/pull/22141#issuecomment-857549760,857549760,
sipa,2021-06-04 04:40:23,How dare you make this ancient code so... readable?,https://github.com/bitcoin/bitcoin/pull/22141#discussion_r645283961,645283961,src/net_processing.cpp
mjdietzx,2021-06-07 17:10:52,"Interesting, I didn't even know you could do `+=` `true`/`false` like this. Anyways, I like this simplfiication",https://github.com/bitcoin/bitcoin/pull/22141#discussion_r646788631,646788631,src/net_processing.cpp
mjdietzx,2021-06-07 17:26:49,"So I guess here, since we know `state.vBlocksInFlight.size() > 0` you're able to get rid of this condition in the subtraction: `state.nBlocksInFlightValidHeaders > 0`?\n\nIs it always true that `state.vBlocksInFlight.size()` == `state->nBlocksInFlight`? ",https://github.com/bitcoin/bitcoin/pull/22141#discussion_r646798914,646798914,src/net_processing.cpp
mjdietzx,2021-06-07 22:06:44,"Along these lines, is `mapBlocksInFlight` and `vBlocksInFlight` tracking the same underlying state, just as different data structures? I think the ordering of `vBlocksInFlight` is important though?",https://github.com/bitcoin/bitcoin/pull/22141#discussion_r646972724,646972724,src/net_processing.cpp
jnewbery,2021-06-09 09:42:05,"> Is it always true that state.vBlocksInFlight.size() == state->nBlocksInFlight?\n\nYes. There are only two places where `vBlocksInFlight` is updated, and `nBlocksInFlight` is updated at the same time. if `vBlocksInFlight.size()` was not the same as `nBlocksInFlight`, it'd be a bug.\n\n> is mapBlocksInFlight and vBlocksInFlight tracking the same underlying state, just as different data structu",https://github.com/bitcoin/bitcoin/pull/22141#discussion_r648141171,648141171,src/net_processing.cpp
mjdietzx,2021-06-09 14:22:01,"Thanks for the explanations - makes sense.\n\n> Eventually, I'd like to extract all of the block request tracking logic and state into its own submodule like the txrequest module, which was added in #19988. A boost multi-index might be the right way to track this state if we did that.\n\nSounds great, I was trying to figure out if something like this can/should be done with these questions and",https://github.com/bitcoin/bitcoin/pull/22141#discussion_r648359645,648359645,src/net_processing.cpp
MarcoFalke,2021-06-09 14:49:58,"85e058b19145b5068f2f71a90c1182bf2a93c473: I think an easier way to enforce this is to pass a reference from the call site. If needed, you can use `&` to get a pointer.",https://github.com/bitcoin/bitcoin/pull/22141#discussion_r648387765,648387765,src/net_processing.cpp
jnewbery,2021-06-09 15:29:58,Totally agree. I'll do this in a follow-up or here if I need to retouch the branch.,https://github.com/bitcoin/bitcoin/pull/22141#discussion_r648426932,648426932,src/net_processing.cpp
MarcoFalke,2021-06-11 08:01:58,Done in #22221,https://github.com/bitcoin/bitcoin/pull/22141#discussion_r649775120,649775120,src/net_processing.cpp
