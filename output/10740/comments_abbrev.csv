jnewbery,2017-07-07T10:30:35Z,This overlaps significantly with #10762. Not sure how I should ask for review. Perhaps find out which one people think is the priority? Or I could split the `walletinit.cpp` commits into their own PR.,https://github.com/bitcoin/bitcoin/pull/10740#issuecomment-313646695,313646695,
promag,2017-07-07T10:43:28Z,@jnewbery IMO this one should rebase on the other.,https://github.com/bitcoin/bitcoin/pull/10740#issuecomment-313649091,313649091,
jnewbery,2017-07-07T10:46:52Z,"> IMO this one should rebase on the other.\n\nMakes logical sense. Downside is that the other is a more significant change, so may take longer to get merged.",https://github.com/bitcoin/bitcoin/pull/10740#issuecomment-313649650,313649650,
promag,2017-07-07T10:54:19Z,If this really depends on that work then there's no other way than waiting. The other downside is that the other commits will show up here too.,https://github.com/bitcoin/bitcoin/pull/10740#issuecomment-313650941,313650941,
jnewbery,2017-07-07T15:09:16Z,"I've changed the PR sequence, so this will now depend on #10767. If I get positive concept feedbac on #10767 I'll rebase this on top of it.\n\nFor now, I'm still just looking for concept feedback.",https://github.com/bitcoin/bitcoin/pull/10740#issuecomment-313709042,313709042,
jnewbery,2017-08-28T21:21:22Z,"Rebased on #10767 . Reviewers, please review #10767 first.",https://github.com/bitcoin/bitcoin/pull/10740#issuecomment-325485732,325485732,
jnewbery,2017-09-11T16:31:21Z,Rebased now that #10767 is merged. Still a work in progress. PR text updated.,https://github.com/bitcoin/bitcoin/pull/10740#issuecomment-328584502,328584502,
jnewbery,2017-09-20T14:16:16Z,Bad automatic merge of the testcase. Re-merged manually.,https://github.com/bitcoin/bitcoin/pull/10740#issuecomment-330865431,330865431,
jnewbery,2017-09-20T16:51:34Z,"Manual rebase fixed the test bug. Travis now passes.\n\nThis is ready for initial review.",https://github.com/bitcoin/bitcoin/pull/10740#issuecomment-330913386,330913386,
jnewbery,2017-09-21T13:43:28Z,"Thanks for the review @promag!\n\nRegarding the locking: Yes, I've implemented this as a mutex for now, which as you point out would limit wallet RPCs to be single-threaded. I'd like to update this to be something a bit better before v0.16. Suggestions are either a shared mutex or (suggested by @theuni) a version of the decay pointers in #10738. The problem with using a shared mutex is that C++ ",https://github.com/bitcoin/bitcoin/pull/10740#issuecomment-331160327,331160327,
luke-jr,2017-09-21T20:03:51Z,"This seems to ignore the whole issue of long-term wallet references, and probably locks `cs_wallets` too long.",https://github.com/bitcoin/bitcoin/pull/10740#issuecomment-331265958,331265958,
laanwj,2017-09-28T06:44:13Z,"Adding 0.16.0 milestone, I think this should be merged after 0.15.1 to prevent extra rebasing in the wallet code when porting back to 0.15.1.",https://github.com/bitcoin/bitcoin/pull/10740#issuecomment-332742893,332742893,
promag,2017-10-11T14:31:38Z,"Needs rebase.\n\nThe `openwallet` should rescan?",https://github.com/bitcoin/bitcoin/pull/10740#issuecomment-335830369,335830369,
Sjors,2017-11-20T15:56:16Z,"Concept ACK.\n\nI was able to use `openwallet` and `closewallet`.\n\nI wonder how this interacts with #11383. E.g. I'm guessing the UI wouldn't pick up on this (not a big issue). I can try once both are rebased.\n\nIt would be nice if `bitcoin-cli -rpcwallet=X` would open `X` if it's not open yet, maybe close it when done (future PR). \n\n> Should there be a separate RPC for creating a new",https://github.com/bitcoin/bitcoin/pull/10740#issuecomment-345738713,345738713,
promag,2017-11-20T16:29:14Z,@Sjors this PR must be rebased with #11383 (probably when that gets merged).,https://github.com/bitcoin/bitcoin/pull/10740#issuecomment-345749571,345749571,
wtogami,2017-12-30T09:03:09Z,"Needs rebase\n\n> Should there be a separate RPC for creating a new wallet or should that be done using openwallet? (my initial thoughts are that there should be a separate RPC)\n\nI suggest there should be a new RPC command to create new wallets. Aside from least surprise, there is more than one type of wallet that the user could want created.",https://github.com/bitcoin/bitcoin/pull/10740#issuecomment-354535414,354535414,
jonasschnelli,2018-01-04T07:22:31Z,Needs rebase and issues (@ryanofsky) addressed.,https://github.com/bitcoin/bitcoin/pull/10740#issuecomment-355215094,355215094,
achow101,2018-02-14T04:13:47Z,Closing the wallet that is in use by qt (the one at `vpwallets[0]` will result in a crash. So additional handling for Qt stuff is needed.,https://github.com/bitcoin/bitcoin/pull/10740#issuecomment-365491018,365491018,
jnewbery,2018-04-10T20:15:04Z,"I plan to pick this up again in the next few days. it requires:\n\n- rebasing on top of all the recent wallet refactors\n- addressing the locking issues (potentially pulling in #11402)\n- considering how this interacts with multiwallet in the GUI #12610\n- potentially pulling out the Verify and Flush refactoring commits into their own PR (https://github.com/bitcoin/bitcoin/pull/10740#pullrequ",https://github.com/bitcoin/bitcoin/pull/10740#issuecomment-380232134,380232134,
Sjors,2018-04-11T10:40:46Z,"> considering how this interacts with multiwallet in the GUI\n\nA good enough first step would be if the dropdowns update when wallets are loaded / unloaded through the console. Adding UI to load and unload wallets can be a followup PR.",https://github.com/bitcoin/bitcoin/pull/10740#issuecomment-380407710,380407710,
jnewbery,2018-04-12T21:28:49Z,"This was discussed in the IRC meeting today: https://botbot.me/freenode/bitcoin-core-dev/2018-04-12/?msg=98919702&page=5\n\n```\n15:26 < wumpus> #topic dynamic wallet load/unload (promag)\n15:26 < Randolf> Ack.\n15:26 < promag> not sure what you guys think\n15:26 < instagibbs_> what's the controversy in this topic :)\n15:27 < jonasschnelli> #10740\n15:27 < sipa> it should happen, duh\n15:",https://github.com/bitcoin/bitcoin/pull/10740#issuecomment-380950109,380950109,
jnewbery,2018-04-18T21:03:10Z,"Updated PR text since this PR is now only for loading wallets (not creating or unloading).\n\nOriginal text also had the following motivation:\n\n> Main motivation for this was the fact that several wallet parameters are actions for individual wallet load/creation, rather than properties of the wallet component. Examples are `-salvagewallet`, `-rescan`, `-usehd` and `-upgradewallet`. Continuin",https://github.com/bitcoin/bitcoin/pull/10740#issuecomment-382528523,382528523,
jnewbery,2018-04-18T21:06:29Z,"Overhauled this PR to just contain the `loadwallet` functionality.\n\nIt is built on @promag's PR #13017. Please review that first.\n\nThis also needs the `cs_wallets` locking functionality from #11402 to be thread-safe.\n\nI'll rebase once those PRs are merged. I've pushed the branch now in case anyone wants to do early review.",https://github.com/bitcoin/bitcoin/pull/10740#issuecomment-382529488,382529488,
promag,2018-04-18T21:11:22Z,@jnewbery Nice. BTW I was thinking creating a different PR to just make #13017 thread safe.,https://github.com/bitcoin/bitcoin/pull/10740#issuecomment-382530777,382530777,
jnewbery,2018-04-18T21:13:00Z,"> I was thinking creating a different PR to just make #13017 thread safe.\n\nGreat. I'll keep an eye out and rebase on top of that when it's ready.",https://github.com/bitcoin/bitcoin/pull/10740#issuecomment-382531192,382531192,
jnewbery,2018-04-19T21:54:31Z,"Thanks for the review @promag - I've done as you suggested and called `CWallet::postInitProcess()`. Because rpc doesn't have the CScheduler reference when loading the wallet, I had to change the `WalletInit::Start()` function to always schedule background wallet flushes, even when started with no wallets (ie `-nowallet`). Note that when started with `-disablewallet`, the entire wallet module is di",https://github.com/bitcoin/bitcoin/pull/10740#issuecomment-382892700,382892700,
promag,2018-04-20T01:09:35Z,"> I had to change the WalletInit::Start() function to always schedule background wallet flushes\n\nMuch better out of CWallet IMO.\n\n",https://github.com/bitcoin/bitcoin/pull/10740#issuecomment-382931195,382931195,
jonasschnelli,2018-04-23T11:51:05Z,Needs rebase again.,https://github.com/bitcoin/bitcoin/pull/10740#issuecomment-383548182,383548182,
jnewbery,2018-04-23T16:44:46Z,Rebased on #13028,https://github.com/bitcoin/bitcoin/pull/10740#issuecomment-383643125,383643125,
jnewbery,2018-04-24T18:42:20Z,Rebased on master and addressed @promag's comments.,https://github.com/bitcoin/bitcoin/pull/10740#issuecomment-384038119,384038119,
conscott,2018-04-27T06:20:00Z,Test ACK 0569d2cd1324304ba2d78d1299454126c9d82b51 - just left a small test nit,https://github.com/bitcoin/bitcoin/pull/10740#issuecomment-384875747,384875747,
promag,2018-04-27T09:10:28Z,"@conscott thanks for the review, mind review #13028 too (this is rebased on that one)?",https://github.com/bitcoin/bitcoin/pull/10740#issuecomment-384913084,384913084,
jnewbery,2018-04-30T15:59:31Z,Updated test following @conscott's suggestion and rebased on master to get #13028,https://github.com/bitcoin/bitcoin/pull/10740#issuecomment-385443897,385443897,
promag,2018-05-02T15:07:11Z,"Consider:\n```\nmkdir /tmp/ws\nbitcoind -regtest -walletdir=/tmp/ws -wallet=w1 -wallet=w2\nbitcoin-cli -regtest listwallets\n[\n  ""w1"",\n  ""w2""\n]\n```\nThen:\n```\nbitcoind -regtest -walletdir=/tmp/ws -wallet=w1\nbitcoin-cli -regtest loadwallet /tmp/ws/w2\nbitcoin-cli -regtest listwallets\n[\n  ""w1"",\n  ""/tmp/ws/w2""\n]\n```\nAlso\n```\nbitcoind -regtest -walletdir=/tmp/ws -w",https://github.com/bitcoin/bitcoin/pull/10740#issuecomment-386010918,386010918,
jnewbery,2018-05-02T22:12:59Z,"> Is this fine or should the outputs be the same?\n> Should it be possible to specify an absolute path if it's in the walletdir?\n\nI think that question is orthogonal to this PR. As you've noted, this is pre-existing behaviour and is exhibited when specifying wallet names on the command line or .conf file. This behaviour was specified in the PR that introduced external wallet files (here: http",https://github.com/bitcoin/bitcoin/pull/10740#issuecomment-386137840,386137840,
promag,2018-05-02T22:21:12Z,"Release notes LGTM.\n\nTested ACK a395059 (previously tested 2d67656).\n\n> Can we save discussion on whether that's the best behaviour for outside this PR?\n\nAbsolutely!",https://github.com/bitcoin/bitcoin/pull/10740#issuecomment-386139557,386139557,
conscott,2018-05-03T09:11:11Z,Tested Re-ACK a395059d4f576cc1b3b61ef78f2e01dec7758d3f,https://github.com/bitcoin/bitcoin/pull/10740#issuecomment-386234669,386234669,
jnewbery,2018-05-03T15:09:56Z,"@promag , @conscott - thanks for the review!\n\nThis could really do with some review from people with longer term wallet experience - nagging @TheBlueMatt @jonasschnelli @luke-jr @laanwj :slightly_smiling_face: ",https://github.com/bitcoin/bitcoin/pull/10740#issuecomment-386329222,386329222,
jonasschnelli,2018-05-03T19:14:20Z,utACK a395059d4f576cc1b3b61ef78f2e01dec7758d3f,https://github.com/bitcoin/bitcoin/pull/10740#issuecomment-386405871,386405871,
jnewbery,2018-05-04T14:35:43Z,"Oops. Thanks @promag . I accidentally dropped those changes in one of my force-pushes. They should be fixed now.\n\nThanks for keeping me honest!",https://github.com/bitcoin/bitcoin/pull/10740#issuecomment-386621225,386621225,
jnewbery,2018-05-04T21:51:56Z,rebased,https://github.com/bitcoin/bitcoin/pull/10740#issuecomment-386744525,386744525,
promag,2018-05-07T15:59:28Z,"> Should probably fix the various memory leaks in CreateWalletFromFile first - we didnt really use to care cause it would just persist through operation, now we do.\n\n@TheBlueMatt #13063 fixes that.",https://github.com/bitcoin/bitcoin/pull/10740#issuecomment-387113002,387113002,
TheBlueMatt,2018-05-07T16:04:11Z,"#13063 seems overkill for this issue, we could just use a unique_ptr within CreateWalletFromFile.\n\nOn May 7, 2018 3:59:40 PM UTC, ""João Barbosa"" <notifications@github.com> wrote:\n>> Should probably fix the various memory leaks in CreateWalletFromFile\n>first - we didnt really use to care cause it would just persist through\n>operation, now we do.\n>\n>@TheBlueMatt #13063 fixes that.\n>\n>-- \n>",https://github.com/bitcoin/bitcoin/pull/10740#issuecomment-387114534,387114534,
promag,2018-05-07T16:16:48Z,@TheBlueMatt Then you mean #12647. Either way it's something that can be fixed in another PR.,https://github.com/bitcoin/bitcoin/pull/10740#issuecomment-387118590,387118590,
TheBlueMatt,2018-05-07T16:43:21Z,"@promag it can be fixed in another PR, but that would have to be merged before this one. Its really no big deal on master, but with an RPC that allows you to create arbitrary memory leaks, that's not great...",https://github.com/bitcoin/bitcoin/pull/10740#issuecomment-387126459,387126459,
jnewbery,2018-05-07T21:15:54Z,"> Should probably fix the various memory leaks in CreateWalletFromFile first - we didnt really use to care cause it would just persist through operation, now we do.\n\nI've added the minimal fix from here: https://github.com/bitcoin/bitcoin/pull/12647#discussion_r174875670 to address the memory lead. @promag - that conflicts with your shared pointer PR, but it should be trivial for you to rebase",https://github.com/bitcoin/bitcoin/pull/10740#issuecomment-387209103,387209103,
laanwj,2018-05-09T17:32:15Z,utACK 5ef858bfed2438746db0ba096ff3c98755603cb8,https://github.com/bitcoin/bitcoin/pull/10740#issuecomment-387815580,387815580,
laanwj,2018-05-14T05:37:49Z,This seems very near ready for merge except for @jimpo's nits.,https://github.com/bitcoin/bitcoin/pull/10740#issuecomment-388702334,388702334,
jnewbery,2018-05-15T17:46:17Z,Rebased and addressed @jimpo's comments,https://github.com/bitcoin/bitcoin/pull/10740#issuecomment-389253985,389253985,
jimpo,2018-05-16T18:36:02Z,ACK cd53981,https://github.com/bitcoin/bitcoin/pull/10740#issuecomment-389622078,389622078,
jonasschnelli,2017-07-05T16:22:10Z,It'd probably call this `deallocWallets()`,https://github.com/bitcoin/bitcoin/pull/10740#discussion_r125691891,125691891,src/init.cpp
jonasschnelli,2017-07-05T16:24:20Z,What's the reasons for keeping this function (that now always returns `true`)?,https://github.com/bitcoin/bitcoin/pull/10740#discussion_r125692442,125692442,src/wallet/db.cpp
jonasschnelli,2017-07-05T16:26:54Z,I guess this belongs to `walletinit.h` now?,https://github.com/bitcoin/bitcoin/pull/10740#discussion_r125693083,125693083,src/wallet/wallet.cpp
jnewbery,2017-07-07T10:18:57Z,"Yes, `DeleteWallets()` is a bad name. `DeallocWallets()` is good, or perhaps `DetachWallets()`",https://github.com/bitcoin/bitcoin/pull/10740#discussion_r126115533,126115533,src/init.cpp
jnewbery,2017-07-07T10:23:11Z,You're right. This (and `CWalletDB::VerifyEnvironment()`) are now entirely vestigial and are not called. Both can be removed.,https://github.com/bitcoin/bitcoin/pull/10740#discussion_r126116206,126116206,src/wallet/db.cpp
jnewbery,2017-07-07T10:28:10Z,Why? `vpwallets` is accessed by functions in several of the wallet source files.,https://github.com/bitcoin/bitcoin/pull/10740#discussion_r126116939,126116939,src/wallet/wallet.cpp
jnewbery,2017-07-07T10:33:57Z,"On further thought, I think I prefer the names `attachwallet` and `detachwallet`. That gives a bit more distinction from the dump/import RPCs and makes a stronger implication that the new `.dat` file is being loaded and attached as a separate wallet.",https://github.com/bitcoin/bitcoin/pull/10740#discussion_r126117881,126117881,src/wallet/rpcwallet.cpp
jonasschnelli,2017-07-09T18:58:20Z,"I had the idea that `walletinit.h/.c` is kind of the multiwallet interface (wallet manager). The functions we have there (`DeleteWallets()`, `VerifyWallets()`, `ShutdownWallets();`, etc.) sounded for me after `vpwallets` belongs there... \n\nIMO, the multiwallet map should ideally not sit within the objects (`CWallet`) implementation.\n",https://github.com/bitcoin/bitcoin/pull/10740#discussion_r126312681,126312681,src/wallet/wallet.cpp
promag,2017-09-21T09:07:28Z,`{`.,https://github.com/bitcoin/bitcoin/pull/10740#discussion_r140187095,140187095,src/qt/bitcoin.cpp
promag,2017-09-21T09:08:01Z,"Missing spaces after `,`?",https://github.com/bitcoin/bitcoin/pull/10740#discussion_r140187207,140187207,src/qt/bitcoin.cpp
promag,2017-09-21T09:39:58Z,Throw an error if `-salvagewallet` and there are multiple wallets?,https://github.com/bitcoin/bitcoin/pull/10740#discussion_r140194543,140194543,src/wallet/init.cpp
promag,2017-09-21T09:45:52Z,Why not just `LOCK(cs_wallets)` too?,https://github.com/bitcoin/bitcoin/pull/10740#discussion_r140195791,140195791,src/wallet/rpcwallet.cpp
jnewbery,2017-09-21T13:44:01Z,Because I'd prefer to avoid recursive locking if possible.,https://github.com/bitcoin/bitcoin/pull/10740#discussion_r140244534,140244534,src/wallet/rpcwallet.cpp
jnewbery,2017-09-21T13:44:33Z,Sounds like a sensible change in behaviour. I think it's beyond the scope of this PR.,https://github.com/bitcoin/bitcoin/pull/10740#discussion_r140244708,140244708,src/wallet/init.cpp
promag,2017-09-21T21:30:33Z,"Just curious, why?",https://github.com/bitcoin/bitcoin/pull/10740#discussion_r140364335,140364335,src/wallet/rpcwallet.cpp
kallewoof,2017-10-04T03:45:27Z,Unneeded newline.,https://github.com/bitcoin/bitcoin/pull/10740#discussion_r142575733,142575733,src/wallet/rpcwallet.cpp
kallewoof,2017-10-04T03:46:25Z,Any reason for not just doing `for (auto wallet : vpwallets) {` here?,https://github.com/bitcoin/bitcoin/pull/10740#discussion_r142575805,142575805,src/wallet/rpcwallet.cpp
kallewoof,2017-10-04T03:59:58Z,"Ugh, passwords on prompts leaves the password as plaintext in shell history etc. Can't really be fixed for HTTP-RPC I guess, but CLI could *probably* take a bool to mean ""prompt me for password"".",https://github.com/bitcoin/bitcoin/pull/10740#discussion_r142576776,142576776,src/wallet/rpcwallet.cpp
kallewoof,2017-10-04T04:00:41Z,Description is wrong.,https://github.com/bitcoin/bitcoin/pull/10740#discussion_r142576837,142576837,src/wallet/rpcwallet.cpp
TheBlueMatt,2017-12-03T22:13:55Z,"Yes, definitely. cs_wallets is locked *before* cs_main in global lock order, so putting it too many places is just asking for trouble, IMO.",https://github.com/bitcoin/bitcoin/pull/10740#discussion_r154538661,154538661,src/wallet/rpcwallet.cpp
TheBlueMatt,2017-12-03T22:15:50Z,"Tend to agree with @jonasschnelli here, though I agree the barrier isn't exactly clear (yet). Ideally we'd move more towards clarifying the interface here - making CWallet less and less aware of all the things around it (including other wallets). @sipa thoughts here?",https://github.com/bitcoin/bitcoin/pull/10740#discussion_r154538714,154538714,src/wallet/wallet.cpp
TheBlueMatt,2017-12-05T16:01:51Z,"This is redundant now, no?",https://github.com/bitcoin/bitcoin/pull/10740#discussion_r154992083,154992083,src/wallet/init.cpp
TheBlueMatt,2017-12-05T16:08:55Z,nit: I'd rather not make this a static CWallet member. wallet.cpp is already plenty big and the stuff that it does seems more external db-related stuff and less wallet-related stuff. Ideally it'd be nice to more clearly separate the DB stuff from the wallet logic itself by pulling things like the DB-related stuff out of CreateWalletFromFile.,https://github.com/bitcoin/bitcoin/pull/10740#discussion_r154994462,154994462,src/wallet/wallet.h
ryanofsky,2017-12-20T18:05:48Z,"https://github.com/bitcoin/bitcoin/pull/10740#discussion_r140194543\n\nIn commit ""Allow single wallet to be verified""\n\nIt looks like WalletParameterInteraction is already throwing an error in this case. I think it would be better to drop the comment and wallet_files check here. If you'd prefer to keep the check, I think the comment should be something clearer like ""// parameter interaction c",https://github.com/bitcoin/bitcoin/pull/10740#discussion_r158095147,158095147,src/wallet/init.cpp
ryanofsky,2017-12-20T18:17:22Z,"In commit ""call CDBEnv.shutdown() from FlushWallets""\n\nMaybe could use dbw->GetName() instead of repeating wallet_test.dat here",https://github.com/bitcoin/bitcoin/pull/10740#discussion_r158097595,158097595,src/qt/test/wallettests.cpp
ryanofsky,2017-12-20T18:22:33Z,"In commit ""call CDBEnv.shutdown() from FlushWallets""\n\nCould change this line to: `mi = mapFileUseCount.find(strFile)`, and change the `while` to an `if` on the line below to skip unnecessary loop.",https://github.com/bitcoin/bitcoin/pull/10740#discussion_r158098875,158098875,src/wallet/db.cpp
ryanofsky,2017-12-20T18:23:58Z,"In commit ""call CDBEnv.shutdown() from FlushWallets""\n\nIs this line doing anything? Should add comment explaining",https://github.com/bitcoin/bitcoin/pull/10740#discussion_r158099203,158099203,src/wallet/init.cpp
ryanofsky,2017-12-20T18:28:40Z,"In commit ""add CDBEnv::Shutdown() function""\n\nI think this method should start with `if (!fDbEnvInit) return;` similar to the Flush method so shutdown code can be simple for callers (no need for -disablewallet check).",https://github.com/bitcoin/bitcoin/pull/10740#discussion_r158100339,158100339,src/wallet/db.cpp
ryanofsky,2017-12-20T18:31:02Z,"In commit ""add CDBEnv::Shutdown() function""\n\nMaybe AssertLockHeld(cs_db)",https://github.com/bitcoin/bitcoin/pull/10740#discussion_r158100836,158100836,src/wallet/db.cpp
ryanofsky,2017-12-20T18:39:40Z,It might be better to drop thee InitError calls here and let callers VerifyWallet callers invoke it. Otherwise calls to open wallets via RPC could trigger GUI message boxes and maybe hang.,https://github.com/bitcoin/bitcoin/pull/10740#discussion_r158102853,158102853,src/wallet/wallet.cpp
promag,2018-04-19T00:12:49Z,Should call `CWallet::postInitProcess` instead? Otherwise `MaybeCompactWalletDB` is not called if the daemon is launched without wallets.,https://github.com/bitcoin/bitcoin/pull/10740#discussion_r182604444,182604444,src/wallet/rpcwallet.cpp
promag,2018-04-20T00:56:42Z,Remove.,https://github.com/bitcoin/bitcoin/pull/10740#discussion_r182922926,182922926,src/wallet/wallet.h
promag,2018-04-20T00:58:03Z,"Move `CWallet::postInitProcess()` content here:\n```cpp\nfor (CWallet* pwallet : GetWallets()) {\n    // Add wallet transactions that aren't already in a block to mempool\n    // Do this here as mempool requires genesis block to be loaded\n    pwallet->ReacceptWalletTransactions();\n}\n..\n```",https://github.com/bitcoin/bitcoin/pull/10740#discussion_r182923067,182923067,src/wallet/init.cpp
promag,2018-04-20T01:03:35Z,"`WalletInitInterface::Start()` is called only once, remove this check (and fFlushScheduled)?",https://github.com/bitcoin/bitcoin/pull/10740#discussion_r182923700,182923700,src/wallet/init.cpp
promag,2018-04-20T01:05:43Z,Post-init doesn't matter now that wallets are dynamically loaded. Remove?,https://github.com/bitcoin/bitcoin/pull/10740#discussion_r182923904,182923904,src/wallet/wallet.h
jnewbery,2018-04-20T15:22:42Z,Yes - much better. Thanks!,https://github.com/bitcoin/bitcoin/pull/10740#discussion_r183085610,183085610,src/wallet/init.cpp
jnewbery,2018-04-20T15:22:57Z,done,https://github.com/bitcoin/bitcoin/pull/10740#discussion_r183085676,183085676,src/wallet/wallet.h
jnewbery,2018-04-20T15:24:28Z,"I'm going to leave this function here for now. It seems reasonable to have a `postInitProcess()` step for loading wallets, even if it is only doing one thing.\n\nThis makes the diff smaller, and we can always remove `postInitProcess()` later if it really is unnecessary.",https://github.com/bitcoin/bitcoin/pull/10740#discussion_r183086176,183086176,src/wallet/wallet.h
promag,2018-04-24T14:04:31Z,Lock `cs_wallets`?,https://github.com/bitcoin/bitcoin/pull/10740#discussion_r183742636,183742636,src/wallet/wallet.cpp
promag,2018-04-24T14:04:42Z,"nit, `const std::string& wallet_file`.",https://github.com/bitcoin/bitcoin/pull/10740#discussion_r183742697,183742697,src/wallet/wallet.cpp
promag,2018-04-24T14:06:15Z,"Not `obj`ect :trollface: \n\nAnyway, could return object instead?\n```json\n{\n    ""name"": ...\n}\n```",https://github.com/bitcoin/bitcoin/pull/10740#discussion_r183743262,183743262,src/wallet/rpcwallet.cpp
promag,2018-04-24T14:07:06Z,"nit, empty line.",https://github.com/bitcoin/bitcoin/pull/10740#discussion_r183743613,183743613,src/wallet/rpcwallet.cpp
promag,2018-04-24T14:15:30Z,Use `wallet_names[0]` instead of `'w1'`?,https://github.com/bitcoin/bitcoin/pull/10740#discussion_r183746763,183746763,test/functional/wallet_multiwallet.py
jnewbery,2018-04-24T18:11:30Z,Updated comment as suggested by @ryanofsky .,https://github.com/bitcoin/bitcoin/pull/10740#discussion_r183830411,183830411,src/wallet/init.cpp
jnewbery,2018-04-24T18:25:35Z,"> Lock cs_wallets?\n\nDone. How does this interact with your WalletManager work? Was the idea that cs_wallets was only held by WalletManager?",https://github.com/bitcoin/bitcoin/pull/10740#discussion_r183834805,183834805,src/wallet/wallet.cpp
jnewbery,2018-04-24T18:25:45Z,"> nit, const std::string& wallet_file.\n\nThanks - fixed",https://github.com/bitcoin/bitcoin/pull/10740#discussion_r183834852,183834852,src/wallet/wallet.cpp
jnewbery,2018-04-24T18:41:49Z,yep - changed to return an object,https://github.com/bitcoin/bitcoin/pull/10740#discussion_r183839856,183839856,src/wallet/rpcwallet.cpp
jnewbery,2018-04-24T18:41:53Z,removed,https://github.com/bitcoin/bitcoin/pull/10740#discussion_r183839887,183839887,src/wallet/rpcwallet.cpp
jnewbery,2018-04-24T18:41:59Z,"yes, better. Changed",https://github.com/bitcoin/bitcoin/pull/10740#discussion_r183839915,183839915,test/functional/wallet_multiwallet.py
promag,2018-04-24T19:07:04Z,I was thinking moving `CWallet::Verify` to `WalletManager` or calling part of it from `WalletManager`. Let's worry about that later.,https://github.com/bitcoin/bitcoin/pull/10740#discussion_r183847002,183847002,src/wallet/wallet.cpp
conscott,2018-04-25T11:31:59Z,"If I add a line here to inspect the wallet after the load:\n```\nself.nodes[0].getwalletinfo()\n``` \nOR\n```\nself.nodes[0].getbalance()\n```\nI get the [json exception throw here](https://github.com/bitcoin/bitcoin/blob/master/src/wallet/rpcwallet.cpp#L78-L79) after the second load operation. Is this expected behavior?",https://github.com/bitcoin/bitcoin/pull/10740#discussion_r184025625,184025625,test/functional/wallet_multiwallet.py
jnewbery,2018-04-25T20:43:56Z,"Yes - if there are multiple wallets loaded, you need to send the RPC request to the correct wallet endpoint. Look at `TestNode`'s `get_wallet_rpc()` method.",https://github.com/bitcoin/bitcoin/pull/10740#discussion_r184199696,184199696,test/functional/wallet_multiwallet.py
conscott,2018-04-27T06:18:52Z,"Got it, thank you. \n\nAs a nit, It might be useful just to verify you can call `getbalance` on the loaded wallet, just to show loaded wallets have expected behavior. ",https://github.com/bitcoin/bitcoin/pull/10740#discussion_r184601227,184601227,test/functional/wallet_multiwallet.py
jnewbery,2018-04-27T13:38:38Z,"Yes, good idea. I'll update the test",https://github.com/bitcoin/bitcoin/pull/10740#discussion_r184689221,184689221,test/functional/wallet_multiwallet.py
promag,2018-04-30T23:28:34Z,"> The wallet file/directory must be located in the `walletdir` directory in order to be loaded.\n\nIt works with external wallets (absolute path not related to `-walletdir`).",https://github.com/bitcoin/bitcoin/pull/10740#discussion_r185138063,185138063,doc/release-notes-pr10740.md
jnewbery,2018-05-02T22:16:28Z,Thanks promag. Release notes update. Please let me know what you think.,https://github.com/bitcoin/bitcoin/pull/10740#discussion_r185655153,185655153,doc/release-notes-pr10740.md
promag,2018-05-03T22:21:58Z,"Ops, this is not done.",https://github.com/bitcoin/bitcoin/pull/10740#discussion_r185952402,185952402,src/wallet/rpcwallet.cpp
promag,2018-05-03T22:22:05Z,Not removed.,https://github.com/bitcoin/bitcoin/pull/10740#discussion_r185952429,185952429,src/wallet/rpcwallet.cpp
promag,2018-05-03T22:22:14Z,Remove 2nd empty line.,https://github.com/bitcoin/bitcoin/pull/10740#discussion_r185952460,185952460,src/wallet/rpcwallet.cpp
promag,2018-05-07T12:58:24Z,"nit, `wallet->GetName()` instead.",https://github.com/bitcoin/bitcoin/pull/10740#discussion_r186414871,186414871,src/wallet/rpcwallet.cpp
jnewbery,2018-05-07T13:48:09Z,"Yes, good idea. Updated.",https://github.com/bitcoin/bitcoin/pull/10740#discussion_r186427650,186427650,src/wallet/rpcwallet.cpp
TheBlueMatt,2018-05-07T15:42:16Z,This needs some kind of lock to avoid double-loading a wallet in two rpc threads at once.,https://github.com/bitcoin/bitcoin/pull/10740#discussion_r186462595,186462595,src/wallet/rpcwallet.cpp
TheBlueMatt,2018-05-07T15:45:40Z,"Maybe some help messages noting that certain config options still apply here - eg if you started with something like zapwallettxes, upgradewallet, rescan, etc it will take the same action for newly-loaded wallets here.",https://github.com/bitcoin/bitcoin/pull/10740#discussion_r186463553,186463553,src/wallet/rpcwallet.cpp
promag,2018-05-07T16:04:04Z,@TheBlueMatt btw my suggestion is to move (some) static code to a `WalletManager` (#13034).,https://github.com/bitcoin/bitcoin/pull/10740#discussion_r186468686,186468686,src/wallet/wallet.h
promag,2018-05-07T16:08:48Z,Hmm @jnewbery this is missing https://github.com/bitcoin/bitcoin/pull/10740#discussion_r183742636.,https://github.com/bitcoin/bitcoin/pull/10740#discussion_r186469973,186469973,src/wallet/rpcwallet.cpp
jnewbery,2018-05-07T21:14:02Z,"I agree with @promag that a WalletManager class is a good place for this in the long run.\n\nSince this is a nit only, can we save it for a future PR.",https://github.com/bitcoin/bitcoin/pull/10740#discussion_r186553415,186553415,src/wallet/wallet.h
jnewbery,2018-05-07T21:14:15Z,Re-added. Thanks @promag ,https://github.com/bitcoin/bitcoin/pull/10740#discussion_r186553473,186553473,src/wallet/rpcwallet.cpp
jnewbery,2018-05-07T21:21:18Z,Done,https://github.com/bitcoin/bitcoin/pull/10740#discussion_r186555304,186555304,src/wallet/rpcwallet.cpp
laanwj,2018-05-09T14:10:09Z,"""creation failed"" is a confusing error message to give to the user here, ""Wallet loading failed"" would be more straightforward",https://github.com/bitcoin/bitcoin/pull/10740#discussion_r187052740,187052740,src/wallet/rpcwallet.cpp
laanwj,2018-05-09T14:12:58Z,"As these errors are reported over RPC, we should stop translating them; RPC errors should not depend on the locale.",https://github.com/bitcoin/bitcoin/pull/10740#discussion_r187053695,187053695,src/wallet/wallet.cpp
laanwj,2018-05-09T14:14:46Z,The name `wallet_deleter` scares me.,https://github.com/bitcoin/bitcoin/pull/10740#discussion_r187054298,187054298,src/wallet/wallet.cpp
jnewbery,2018-05-09T14:45:23Z,Agree. Changed,https://github.com/bitcoin/bitcoin/pull/10740#discussion_r187065047,187065047,src/wallet/rpcwallet.cpp
jnewbery,2018-05-09T14:52:16Z,Yes - removed translation.,https://github.com/bitcoin/bitcoin/pull/10740#discussion_r187067398,187067398,src/wallet/wallet.cpp
jnewbery,2018-05-09T14:55:52Z,is `temp_wallet` (with a comment above) less scary?,https://github.com/bitcoin/bitcoin/pull/10740#discussion_r187068600,187068600,src/wallet/wallet.cpp
laanwj,2018-05-09T17:31:07Z,"Yes, certainly. What I'd prefer, ideally, is to just call this wallet_instance and use this smart pointer everywhere instead of `CWallet* walletInstance = temp_wallet.get()`.\nBut this is fine, it's no longer scary.",https://github.com/bitcoin/bitcoin/pull/10740#discussion_r187116621,187116621,src/wallet/wallet.cpp
jnewbery,2018-05-09T19:16:19Z,"ok, I'll change it if I need to update the branch for another reason.",https://github.com/bitcoin/bitcoin/pull/10740#discussion_r187147046,187147046,src/wallet/wallet.cpp
jimpo,2018-05-09T21:07:45Z,"commit: [wallet] Add CWallet::Verify function\n\nUsing a set here is unnecessary, can just do a direct equality check.",https://github.com/bitcoin/bitcoin/pull/10740#discussion_r187176626,187176626,src/wallet/wallet.cpp
jimpo,2018-05-09T21:20:57Z,"commit: [wallet] [rpc] Add loadwallet RPC\n\nFeels like this warning should get logged or maybe even returned in a ""warning"" field in the JSON response.",https://github.com/bitcoin/bitcoin/pull/10740#discussion_r187179940,187179940,src/wallet/rpcwallet.cpp
jimpo,2018-05-09T21:35:31Z,"commit: [wallet] Fix potential memory leak in CreateWalletFromFile\n\nThis isn't a complete fix because there are still early returns with errors in the rescan logic below. I believe it is safe to move the `RegisterValidationInterface` call to the bottom of the function as I argued in #12647 because `cs_main` gets locked on line 4135.",https://github.com/bitcoin/bitcoin/pull/10740#discussion_r187183314,187183314,src/wallet/wallet.cpp
jimpo,2018-05-09T21:37:37Z,Appears this comment update was lost somewhere?,https://github.com/bitcoin/bitcoin/pull/10740#discussion_r187183810,187183810,src/wallet/init.cpp
jnewbery,2018-05-15T14:15:14Z,"Yes, much better idea.",https://github.com/bitcoin/bitcoin/pull/10740#discussion_r188303508,188303508,src/wallet/wallet.cpp
jnewbery,2018-05-15T16:56:59Z,"ok, added to the JSON response.",https://github.com/bitcoin/bitcoin/pull/10740#discussion_r188361847,188361847,src/wallet/rpcwallet.cpp
ryanofsky,2018-05-15T17:43:13Z,"> This isn't a complete fix because there are still early returns with errors in the rescan logic below. I believe it is safe to move the RegisterValidationInterface call to the bottom of the function as I argued in #12647 because cs_main gets locked on line 4135.\n\njimpo's right, f8c81def4f5f88074348890a613c1006824b1b5d `[wallet] Fix potential memory leak in CreateWalletFromFile` isn't current",https://github.com/bitcoin/bitcoin/pull/10740#discussion_r188375638,188375638,src/wallet/wallet.cpp
jnewbery,2018-05-15T17:45:16Z,Done (and added comment),https://github.com/bitcoin/bitcoin/pull/10740#discussion_r188376270,188376270,src/wallet/wallet.cpp
jimpo,2018-05-15T19:40:15Z,"[wallet] Add CWallet::Verify function\n\nCan drop this and the declaration of `wallet_paths` above.",https://github.com/bitcoin/bitcoin/pull/10740#discussion_r188411902,188411902,src/wallet/wallet.cpp
promag,2018-05-16T12:04:11Z,"True, no longer necessary.",https://github.com/bitcoin/bitcoin/pull/10740#discussion_r188598991,188598991,src/wallet/wallet.cpp
jnewbery,2018-05-16T16:07:23Z,Thanks @jimpo. Fixed,https://github.com/bitcoin/bitcoin/pull/10740#discussion_r188683535,188683535,src/wallet/wallet.cpp
