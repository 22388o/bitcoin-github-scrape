[
  {
    "sha": "f93c2a1b7ee912f0651ebb4c8a5eca220e434f4a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmOTNjMmExYjdlZTkxMmYwNjUxZWJiNGM4YTVlY2EyMjBlNDM0ZjRh",
    "commit": {
      "author": {
        "name": "Daniel Kraft",
        "email": "d@domob.eu",
        "date": "2016-05-15T18:15:02Z"
      },
      "committer": {
        "name": "Daniel Kraft",
        "email": "d@domob.eu",
        "date": "2016-05-15T18:15:02Z"
      },
      "message": "net: Avoid duplicate getheaders requests.\n\nThe current logic for syncing headers may lead to lots of duplicate\ngetheaders requests being sent:  If a new block arrives while the node\nis in headers sync, it will send getheaders in response to the block\nannouncement.  When the headers arrive, the message will be of maximum\nsize and so a follow-up request will be sent---all of that in addition\nto the existing headers syncing.  This will create a second \"chain\" of\ngetheaders requests.  If more blocks arrive, this may even lead to\narbitrarily many parallel chains of redundant requests.\n\nThis patch changes the behaviour to only request more headers after a\nmaximum-sized message when it contained at least one unknown header.\nThis avoids sustaining parallel chains of redundant requests.\n\nNote that this patch avoids the issues raised in the discussion of\nhttps://github.com/bitcoin/bitcoin/pull/6821:  There is no risk of the\nnode being permanently blocked.  At the latest when a new block arrives\nthis will trigger a new getheaders request and restart syncing.",
      "tree": {
        "sha": "0f742daed8fd5989c05ff2640ee5ab6d844fabb7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0f742daed8fd5989c05ff2640ee5ab6d844fabb7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f93c2a1b7ee912f0651ebb4c8a5eca220e434f4a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f93c2a1b7ee912f0651ebb4c8a5eca220e434f4a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f93c2a1b7ee912f0651ebb4c8a5eca220e434f4a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f93c2a1b7ee912f0651ebb4c8a5eca220e434f4a/comments",
    "author": {
      "login": "domob1812",
      "id": 4943644,
      "node_id": "MDQ6VXNlcjQ5NDM2NDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4943644?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/domob1812",
      "html_url": "https://github.com/domob1812",
      "followers_url": "https://api.github.com/users/domob1812/followers",
      "following_url": "https://api.github.com/users/domob1812/following{/other_user}",
      "gists_url": "https://api.github.com/users/domob1812/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/domob1812/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/domob1812/subscriptions",
      "organizations_url": "https://api.github.com/users/domob1812/orgs",
      "repos_url": "https://api.github.com/users/domob1812/repos",
      "events_url": "https://api.github.com/users/domob1812/events{/privacy}",
      "received_events_url": "https://api.github.com/users/domob1812/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "domob1812",
      "id": 4943644,
      "node_id": "MDQ6VXNlcjQ5NDM2NDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4943644?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/domob1812",
      "html_url": "https://github.com/domob1812",
      "followers_url": "https://api.github.com/users/domob1812/followers",
      "following_url": "https://api.github.com/users/domob1812/following{/other_user}",
      "gists_url": "https://api.github.com/users/domob1812/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/domob1812/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/domob1812/subscriptions",
      "organizations_url": "https://api.github.com/users/domob1812/orgs",
      "repos_url": "https://api.github.com/users/domob1812/repos",
      "events_url": "https://api.github.com/users/domob1812/events{/privacy}",
      "received_events_url": "https://api.github.com/users/domob1812/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "169d379c98357a17e634f34b5e72033c69f9a7cb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/169d379c98357a17e634f34b5e72033c69f9a7cb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/169d379c98357a17e634f34b5e72033c69f9a7cb"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 8,
      "deletions": 1
    },
    "files": [
      {
        "sha": "5816f799a003975a5b5bedaf2c6f4a584fb8910f",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 1,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f93c2a1b7ee912f0651ebb4c8a5eca220e434f4a/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f93c2a1b7ee912f0651ebb4c8a5eca220e434f4a/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=f93c2a1b7ee912f0651ebb4c8a5eca220e434f4a",
        "patch": "@@ -5091,6 +5091,13 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n             return true;\n         }\n \n+        // If we already know the last header in the message, then it contains\n+        // no new information for us.  In this case, we do not request\n+        // more headers later.  This prevents multiple chains of redundant\n+        // getheader requests from running in parallel if triggered by incoming\n+        // blocks while the node is still in initial headers sync.\n+        const bool hasNewHeaders = (mapBlockIndex.count(headers.back().GetHash()) == 0);\n+\n         CBlockIndex *pindexLast = NULL;\n         BOOST_FOREACH(const CBlockHeader& header, headers) {\n             CValidationState state;\n@@ -5111,7 +5118,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n         if (pindexLast)\n             UpdateBlockAvailability(pfrom->GetId(), pindexLast->GetBlockHash());\n \n-        if (nCount == MAX_HEADERS_RESULTS && pindexLast) {\n+        if (nCount == MAX_HEADERS_RESULTS && pindexLast && hasNewHeaders) {\n             // Headers message had its maximum size; the peer may have more headers.\n             // TODO: optimize: if pindexLast is an ancestor of chainActive.Tip or pindexBestHeader, continue\n             // from there instead."
      }
    ]
  }
]