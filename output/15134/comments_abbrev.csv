laanwj,2019-01-09T14:41:30Z,"Concept ACK, mistakes with char are quite common in C use, without this I guess things suddenly might start to break on ARM or RISC-V without Travis noticing.",https://github.com/bitcoin/bitcoin/pull/15134#issuecomment-452719608,452719608,
laanwj,2019-01-16T14:52:11Z,@theuni can you take a look at this please,https://github.com/bitcoin/bitcoin/pull/15134#issuecomment-454806792,454806792,
DrahtBot,2019-01-30T22:53:58Z,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#16320](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16320.html) (ci: Add Travis check to make sure unit test",https://github.com/bitcoin/bitcoin/pull/15134#issuecomment-459143090,459143090,
Rspigler,2019-02-01T21:55:44Z,Would this cover Power ISA? (https://github.com/bitcoin/bitcoin/pull/14066),https://github.com/bitcoin/bitcoin/pull/15134#issuecomment-459881334,459881334,
laanwj,2019-02-16T23:39:41Z,"> Would this cover Power ISA? (#14066)\n\nPowerPC has unsigned chars afaik so in a sense, yea.",https://github.com/bitcoin/bitcoin/pull/15134#issuecomment-464400150,464400150,
practicalswift,2019-03-08T20:25:29Z,"Can we move forward with this one? :-)\n\nShould hopefully be trivial to review since it only touches `.travis.yml`.\n\nPerhaps you could take a look too @MarcoFalke? :-)",https://github.com/bitcoin/bitcoin/pull/15134#issuecomment-471065037,471065037,
practicalswift,2019-03-09T06:03:18Z,@MarcoFalke Thanks for reviewing! Now rebased and updated. Please re-review :-),https://github.com/bitcoin/bitcoin/pull/15134#issuecomment-471149434,471149434,
practicalswift,2019-03-14T08:37:37Z,@MarcoFalke Updated version looks good?,https://github.com/bitcoin/bitcoin/pull/15134#issuecomment-472753531,472753531,
MarcoFalke,2019-03-14T21:00:25Z,ACK,https://github.com/bitcoin/bitcoin/pull/15134#issuecomment-473060395,473060395,
practicalswift,2019-04-01T15:17:41Z,"@laanwj Would you mind reviewing?\n\nI think we should be ready for merge :-)",https://github.com/bitcoin/bitcoin/pull/15134#issuecomment-478622323,478622323,
practicalswift,2019-06-28T14:04:28Z,"@MarcoFalke @laanwj Is this one ready for merge? Having one `-funsigned-char` testing job would make me slightly less worried about mistakes due to incorrect signedness assumptions for `char` :-)\n\nLet me know if any further changes are needed!",https://github.com/bitcoin/bitcoin/pull/15134#issuecomment-506746067,506746067,
practicalswift,2019-07-30T10:08:40Z,@MarcoFalke @laanwj Friendly ping: is this PR still of interest? Let me know if it should closed :-),https://github.com/bitcoin/bitcoin/pull/15134#issuecomment-516355911,516355911,
MarcoFalke,2019-07-30T11:56:36Z,"Concept ACK, but I am lacking the background to properly review",https://github.com/bitcoin/bitcoin/pull/15134#issuecomment-516387375,516387375,
laanwj,2019-07-30T12:59:48Z,ACK 0c78e49be3a258695b7f363f2d5b1cfdb93f9522,https://github.com/bitcoin/bitcoin/pull/15134#issuecomment-516408016,516408016,
MarcoFalke,2019-03-08T20:40:07Z,`FUNCTIONAL_TESTS_CONFIG` was removed long ago,https://github.com/bitcoin/bitcoin/pull/15134#discussion_r263922637,263922637,.travis.yml
MarcoFalke,2019-03-11T17:22:01Z,"Sorry to further nit-pick, but what are the advantages of making this a matrix job (duplicating the above and only changing this one)?\n\nIf there are none, I'd rather combine them.",https://github.com/bitcoin/bitcoin/pull/15134#discussion_r264341610,264341610,.travis.yml
practicalswift,2019-03-12T08:44:49Z,"The advantage is that we get testing under the sanitizers for both signed and unsigned char builds.\n\nCombining them would mean that we only get sanitizer testing for unsigned char builds.",https://github.com/bitcoin/bitcoin/pull/15134#discussion_r264569608,264569608,.travis.yml
MarcoFalke,2019-03-12T16:59:46Z,"I guess the default is signed char, so developers should run those already.\n\nIf you insist, I'd rather combine it with one of the jobs further up (dash, or the bionic job right after the one using dash)\n\nWe already use 12 jobs and the free travis capacity is 5 jobs in parallel, so if we bloat the matrix further, travis might slow down some devs that run it on their own repo.",https://github.com/bitcoin/bitcoin/pull/15134#discussion_r264782888,264782888,.travis.yml
practicalswift,2019-03-13T12:41:57Z,Fixed!,https://github.com/bitcoin/bitcoin/pull/15134#discussion_r265106424,265106424,.travis.yml
luke-jr,2019-04-17T05:59:53Z,"Don't we need `-funsigned-char` in `CFLAGS` as well, for our C code?\n\nAnd what about dependencies? Are there situations where the mismatch may result in ABI breakage?",https://github.com/bitcoin/bitcoin/pull/15134#discussion_r276089283,276089283,.travis.yml
practicalswift,2019-04-17T07:46:46Z,"Good point! Added `CFLAGS` as well.\n\nI'm not sure what to do about dependencies TBH: I guess this change is as far as we can get in terms of low-cost `unsigned char` testing in Travis. Let me know if you think I'm mistaken and there is some way to do this in a smarter way :-)",https://github.com/bitcoin/bitcoin/pull/15134#discussion_r276116860,276116860,.travis.yml
