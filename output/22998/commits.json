[
  {
    "sha": "d1e2481274edf2ac14747be633d86ecd46814ef4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkMWUyNDgxMjc0ZWRmMmFjMTQ3NDdiZTYzM2Q4NmVjZDQ2ODE0ZWY0",
    "commit": {
      "author": {
        "name": "Sebastian Falbesoner",
        "email": "sebastian.falbesoner@gmail.com",
        "date": "2021-09-16T12:22:39Z"
      },
      "committer": {
        "name": "Sebastian Falbesoner",
        "email": "sebastian.falbesoner@gmail.com",
        "date": "2021-09-16T12:22:39Z"
      },
      "message": "test: scale amounts in test_doublespend_chain down by factor 10\n\nThis is done in order to prepare the make_utxo helper to use MiniWallet,\nwhich only supports creating transactions with single inputs, i.e. we\nneed to create amounts small enough to be funded by coinbase transactions\n(50 BTC).",
      "tree": {
        "sha": "05b60dfe252c33f8b3830c4b4a7de7e8656fa82a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/05b60dfe252c33f8b3830c4b4a7de7e8656fa82a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d1e2481274edf2ac14747be633d86ecd46814ef4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d1e2481274edf2ac14747be633d86ecd46814ef4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d1e2481274edf2ac14747be633d86ecd46814ef4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d1e2481274edf2ac14747be633d86ecd46814ef4/comments",
    "author": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2161a058552ac938f2079b311a2d12f5d1772d01",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2161a058552ac938f2079b311a2d12f5d1772d01",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2161a058552ac938f2079b311a2d12f5d1772d01"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 6,
      "deletions": 6
    },
    "files": [
      {
        "sha": "d4e483ccd5f900fa17b281622ec28c2a94b38caa",
        "filename": "test/functional/feature_rbf.py",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d1e2481274edf2ac14747be633d86ecd46814ef4/test/functional/feature_rbf.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d1e2481274edf2ac14747be633d86ecd46814ef4/test/functional/feature_rbf.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_rbf.py?ref=d1e2481274edf2ac14747be633d86ecd46814ef4",
        "patch": "@@ -161,14 +161,14 @@ def test_simple_doublespend(self):\n     def test_doublespend_chain(self):\n         \"\"\"Doublespend of a long chain\"\"\"\n \n-        initial_nValue = 50 * COIN\n+        initial_nValue = 5 * COIN\n         tx0_outpoint = self.make_utxo(self.nodes[0], initial_nValue)\n \n         prevout = tx0_outpoint\n         remaining_value = initial_nValue\n         chain_txids = []\n-        while remaining_value > 10 * COIN:\n-            remaining_value -= 1 * COIN\n+        while remaining_value > 1 * COIN:\n+            remaining_value -= int(0.1 * COIN)\n             tx = CTransaction()\n             tx.vin = [CTxIn(prevout, nSequence=0)]\n             tx.vout = [CTxOut(remaining_value, CScript([1, OP_DROP] * 15 + [1]))]\n@@ -178,10 +178,10 @@ def test_doublespend_chain(self):\n             prevout = COutPoint(int(txid, 16), 0)\n \n         # Whether the double-spend is allowed is evaluated by including all\n-        # child fees - 40 BTC - so this attempt is rejected.\n+        # child fees - 4 BTC - so this attempt is rejected.\n         dbl_tx = CTransaction()\n         dbl_tx.vin = [CTxIn(tx0_outpoint, nSequence=0)]\n-        dbl_tx.vout = [CTxOut(initial_nValue - 30 * COIN, DUMMY_P2WPKH_SCRIPT)]\n+        dbl_tx.vout = [CTxOut(initial_nValue - 3 * COIN, DUMMY_P2WPKH_SCRIPT)]\n         dbl_tx_hex = dbl_tx.serialize().hex()\n \n         # This will raise an exception due to insufficient fee\n@@ -190,7 +190,7 @@ def test_doublespend_chain(self):\n         # Accepted with sufficient fee\n         dbl_tx = CTransaction()\n         dbl_tx.vin = [CTxIn(tx0_outpoint, nSequence=0)]\n-        dbl_tx.vout = [CTxOut(1 * COIN, DUMMY_P2WPKH_SCRIPT)]\n+        dbl_tx.vout = [CTxOut(int(0.1 * COIN), DUMMY_P2WPKH_SCRIPT)]\n         dbl_tx_hex = dbl_tx.serialize().hex()\n         self.nodes[0].sendrawtransaction(dbl_tx_hex, 0)\n "
      }
    ]
  },
  {
    "sha": "0f275246027266fa256d0a09251bb2c88d9bd72f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowZjI3NTI0NjAyNzI2NmZhMjU2ZDBhMDkyNTFiYjJjODhkOWJkNzJm",
    "commit": {
      "author": {
        "name": "Sebastian Falbesoner",
        "email": "sebastian.falbesoner@gmail.com",
        "date": "2021-09-16T12:32:43Z"
      },
      "committer": {
        "name": "Sebastian Falbesoner",
        "email": "sebastian.falbesoner@gmail.com",
        "date": "2021-09-16T12:32:43Z"
      },
      "message": "test: scale amounts in test_doublespend_tree down by factor 10\n\nThis is done in order to prepare the make_utxo helper to use MiniWallet,\nwhich only supports creating transactions with single inputs, i.e. we\nneed to create amounts small enough to be funded by coinbase transactions\n(50 BTC).",
      "tree": {
        "sha": "0c0bd12fe975e1f76029a873f725ce479bdb9013",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0c0bd12fe975e1f76029a873f725ce479bdb9013"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0f275246027266fa256d0a09251bb2c88d9bd72f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0f275246027266fa256d0a09251bb2c88d9bd72f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0f275246027266fa256d0a09251bb2c88d9bd72f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0f275246027266fa256d0a09251bb2c88d9bd72f/comments",
    "author": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d1e2481274edf2ac14747be633d86ecd46814ef4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d1e2481274edf2ac14747be633d86ecd46814ef4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d1e2481274edf2ac14747be633d86ecd46814ef4"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 6,
      "deletions": 6
    },
    "files": [
      {
        "sha": "c9eb5a8919d7f4cbfbc691a4850f47fea506a1e5",
        "filename": "test/functional/feature_rbf.py",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0f275246027266fa256d0a09251bb2c88d9bd72f/test/functional/feature_rbf.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0f275246027266fa256d0a09251bb2c88d9bd72f/test/functional/feature_rbf.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_rbf.py?ref=0f275246027266fa256d0a09251bb2c88d9bd72f",
        "patch": "@@ -201,10 +201,10 @@ def test_doublespend_chain(self):\n     def test_doublespend_tree(self):\n         \"\"\"Doublespend of a big tree of transactions\"\"\"\n \n-        initial_nValue = 50 * COIN\n+        initial_nValue = 5 * COIN\n         tx0_outpoint = self.make_utxo(self.nodes[0], initial_nValue)\n \n-        def branch(prevout, initial_value, max_txs, tree_width=5, fee=0.0001 * COIN, _total_txs=None):\n+        def branch(prevout, initial_value, max_txs, tree_width=5, fee=0.00001 * COIN, _total_txs=None):\n             if _total_txs is None:\n                 _total_txs = [0]\n             if _total_txs[0] >= max_txs:\n@@ -235,7 +235,7 @@ def branch(prevout, initial_value, max_txs, tree_width=5, fee=0.0001 * COIN, _to\n                                   _total_txs=_total_txs):\n                     yield x\n \n-        fee = int(0.0001 * COIN)\n+        fee = int(0.00001 * COIN)\n         n = MAX_REPLACEMENT_LIMIT\n         tree_txs = list(branch(tx0_outpoint, initial_nValue, n, fee=fee))\n         assert_equal(len(tree_txs), n)\n@@ -248,10 +248,10 @@ def branch(prevout, initial_value, max_txs, tree_width=5, fee=0.0001 * COIN, _to\n         # This will raise an exception due to insufficient fee\n         assert_raises_rpc_error(-26, \"insufficient fee\", self.nodes[0].sendrawtransaction, dbl_tx_hex, 0)\n \n-        # 1 BTC fee is enough\n+        # 0.1 BTC fee is enough\n         dbl_tx = CTransaction()\n         dbl_tx.vin = [CTxIn(tx0_outpoint, nSequence=0)]\n-        dbl_tx.vout = [CTxOut(initial_nValue - fee * n - 1 * COIN, DUMMY_P2WPKH_SCRIPT)]\n+        dbl_tx.vout = [CTxOut(initial_nValue - fee * n - int(0.1 * COIN), DUMMY_P2WPKH_SCRIPT)]\n         dbl_tx_hex = dbl_tx.serialize().hex()\n         self.nodes[0].sendrawtransaction(dbl_tx_hex, 0)\n \n@@ -264,7 +264,7 @@ def branch(prevout, initial_value, max_txs, tree_width=5, fee=0.0001 * COIN, _to\n         # Try again, but with more total transactions than the \"max txs\n         # double-spent at once\" anti-DoS limit.\n         for n in (MAX_REPLACEMENT_LIMIT + 1, MAX_REPLACEMENT_LIMIT * 2):\n-            fee = int(0.0001 * COIN)\n+            fee = int(0.00001 * COIN)\n             tx0_outpoint = self.make_utxo(self.nodes[0], initial_nValue)\n             tree_txs = list(branch(tx0_outpoint, initial_nValue, n, fee=fee))\n             assert_equal(len(tree_txs), n)"
      }
    ]
  },
  {
    "sha": "f680d27155374de658d40db0ba40460919aa1ba2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmNjgwZDI3MTU1Mzc0ZGU2NThkNDBkYjBiYTQwNDYwOTE5YWExYmEy",
    "commit": {
      "author": {
        "name": "Sebastian Falbesoner",
        "email": "sebastian.falbesoner@gmail.com",
        "date": "2021-09-16T12:42:50Z"
      },
      "committer": {
        "name": "Sebastian Falbesoner",
        "email": "sebastian.falbesoner@gmail.com",
        "date": "2021-09-16T14:48:55Z"
      },
      "message": "test: use MiniWallet for make_utxo helper in feature_rbf.py",
      "tree": {
        "sha": "91cf858793bc936c82143214affee574cd8462d9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/91cf858793bc936c82143214affee574cd8462d9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f680d27155374de658d40db0ba40460919aa1ba2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f680d27155374de658d40db0ba40460919aa1ba2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f680d27155374de658d40db0ba40460919aa1ba2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f680d27155374de658d40db0ba40460919aa1ba2/comments",
    "author": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0f275246027266fa256d0a09251bb2c88d9bd72f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0f275246027266fa256d0a09251bb2c88d9bd72f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0f275246027266fa256d0a09251bb2c88d9bd72f"
      }
    ],
    "stats": {
      "total": 51,
      "additions": 27,
      "deletions": 24
    },
    "files": [
      {
        "sha": "087529af685946d1b057b32f9d59e93e5776a72b",
        "filename": "test/functional/feature_rbf.py",
        "status": "modified",
        "additions": 24,
        "deletions": 23,
        "changes": 47,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f680d27155374de658d40db0ba40460919aa1ba2/test/functional/feature_rbf.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f680d27155374de658d40db0ba40460919aa1ba2/test/functional/feature_rbf.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_rbf.py?ref=f680d27155374de658d40db0ba40460919aa1ba2",
        "patch": "@@ -7,7 +7,6 @@\n from copy import deepcopy\n from decimal import Decimal\n \n-from test_framework.blocktools import COINBASE_MATURITY\n from test_framework.messages import (\n     BIP125_SEQUENCE_NUMBER,\n     COIN,\n@@ -18,10 +17,18 @@\n )\n from test_framework.script import CScript, OP_DROP\n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import assert_equal, assert_raises_rpc_error, satoshi_round\n-from test_framework.script_util import DUMMY_P2WPKH_SCRIPT, DUMMY_2_P2WPKH_SCRIPT\n+from test_framework.util import (\n+    assert_equal,\n+    assert_greater_than,\n+    assert_raises_rpc_error,\n+)\n+from test_framework.script_util import (\n+    DUMMY_P2WPKH_SCRIPT,\n+    DUMMY_2_P2WPKH_SCRIPT,\n+)\n from test_framework.wallet import MiniWallet\n \n+\n MAX_REPLACEMENT_LIMIT = 100\n class ReplaceByFeeTest(BitcoinTestFramework):\n     def set_test_params(self):\n@@ -89,29 +96,23 @@ def run_test(self):\n     def make_utxo(self, node, amount, confirmed=True, scriptPubKey=DUMMY_P2WPKH_SCRIPT):\n         \"\"\"Create a txout with a given amount and scriptPubKey\n \n-        Mines coins as needed.\n+        Assumes that MiniWallet has enough funds to cover the amount and the fixed fee\n+        (from it's internal utxos, the one with the largest value is taken).\n \n         confirmed - txouts created will be confirmed in the blockchain;\n                     unconfirmed otherwise.\n         \"\"\"\n-        fee = 1 * COIN\n-        while node.getbalance() < satoshi_round((amount + fee) / COIN):\n-            self.generate(node, COINBASE_MATURITY)\n-\n-        new_addr = node.getnewaddress()\n-        txid = node.sendtoaddress(new_addr, satoshi_round((amount + fee) / COIN))\n-        tx1 = node.getrawtransaction(txid, 1)\n-        txid = int(txid, 16)\n-        i, _ = next(filter(lambda vout: new_addr == vout[1]['scriptPubKey']['address'], enumerate(tx1['vout'])))\n-\n-        tx2 = CTransaction()\n-        tx2.vin = [CTxIn(COutPoint(txid, i))]\n-        tx2.vout = [CTxOut(amount, scriptPubKey)]\n-        tx2.rehash()\n-\n-        signed_tx = node.signrawtransactionwithwallet(tx2.serialize().hex())\n-\n-        txid = node.sendrawtransaction(signed_tx['hex'], 0)\n+        # MiniWallet only supports sweeping utxos to its own internal scriptPubKey, so in\n+        # order to create an output with arbitrary amount/scriptPubKey, we have to add it\n+        # manually after calling the create_self_transfer method. The MiniWallet output's\n+        # nValue has to be adapted accordingly (amount and fee deduction). To keep things\n+        # simple, we use a fixed fee of 1000 Satoshis here.\n+        fee = 1000\n+        tx = self.wallet.create_self_transfer(from_node=node, fee_rate=0, mempool_valid=False)['tx']\n+        assert_greater_than(tx.vout[0].nValue, amount + fee)\n+        tx.vout[0].nValue -= (amount + fee)           # change output -> MiniWallet\n+        tx.vout.append(CTxOut(amount, scriptPubKey))  # desired output -> to be returned\n+        txid = self.wallet.sendrawtransaction(from_node=node, tx_hex=tx.serialize().hex())\n \n         # If requested, ensure txouts are confirmed.\n         if confirmed:\n@@ -124,7 +125,7 @@ def make_utxo(self, node, amount, confirmed=True, scriptPubKey=DUMMY_P2WPKH_SCRI\n                 assert new_size < mempool_size\n                 mempool_size = new_size\n \n-        return COutPoint(int(txid, 16), 0)\n+        return COutPoint(int(txid, 16), 1)\n \n     def test_simple_doublespend(self):\n         \"\"\"Simple doublespend\"\"\""
      },
      {
        "sha": "ea45661d9ae7b3a42e273dd0e820b53d83bb9293",
        "filename": "test/functional/test_framework/wallet.py",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f680d27155374de658d40db0ba40460919aa1ba2/test/functional/test_framework/wallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f680d27155374de658d40db0ba40460919aa1ba2/test/functional/test_framework/wallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/wallet.py?ref=f680d27155374de658d40db0ba40460919aa1ba2",
        "patch": "@@ -179,8 +179,10 @@ def create_self_transfer(self, *, fee_rate=Decimal(\"0.003\"), from_node, utxo_to_\n         return {'txid': tx_info['txid'], 'wtxid': tx_info['wtxid'], 'hex': tx_hex, 'tx': tx}\n \n     def sendrawtransaction(self, *, from_node, tx_hex):\n-        from_node.sendrawtransaction(tx_hex)\n+        txid = from_node.sendrawtransaction(tx_hex)\n         self.scan_tx(from_node.decoderawtransaction(tx_hex))\n+        return txid\n+\n \n def make_chain(node, address, privkeys, parent_txid, parent_value, n=0, parent_locking_script=None, fee=DEFAULT_FEE):\n     \"\"\"Build a transaction that spends parent_txid.vout[n] and produces one output with"
      }
    ]
  }
]