[
  {
    "sha": "7711302913b9df05cb6ad9ca5534af99c44be2c5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3NzExMzAyOTEzYjlkZjA1Y2I2YWQ5Y2E1NTM0YWY5OWM0NGJlMmM1",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2018-03-12T05:58:49Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2020-03-27T00:03:58Z"
      },
      "message": "RPC: Support addnode onetry without making the connection priviliged",
      "tree": {
        "sha": "23402296be24382794fcde087e8f0f7bfef064e9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/23402296be24382794fcde087e8f0f7bfef064e9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7711302913b9df05cb6ad9ca5534af99c44be2c5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7711302913b9df05cb6ad9ca5534af99c44be2c5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7711302913b9df05cb6ad9ca5534af99c44be2c5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7711302913b9df05cb6ad9ca5534af99c44be2c5/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5236b2e267a58870239673c7ec85e5df0cb8fc8e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5236b2e267a58870239673c7ec85e5df0cb8fc8e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5236b2e267a58870239673c7ec85e5df0cb8fc8e"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 11,
      "deletions": 6
    },
    "files": [
      {
        "sha": "36265d2373dc871f6b4ed63b0c13ce43b43e62b8",
        "filename": "src/rpc/client.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7711302913b9df05cb6ad9ca5534af99c44be2c5/src/rpc/client.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7711302913b9df05cb6ad9ca5534af99c44be2c5/src/rpc/client.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/client.cpp?ref=7711302913b9df05cb6ad9ca5534af99c44be2c5",
        "patch": "@@ -153,6 +153,7 @@ static const CRPCConvertParam vRPCConvertParams[] =\n     { \"bumpfee\", 1, \"options\" },\n     { \"logging\", 0, \"include\" },\n     { \"logging\", 1, \"exclude\" },\n+    { \"addnode\", 2, \"privileged\" },\n     { \"disconnectnode\", 1, \"nodeid\" },\n     // Echo with conversion (For testing only)\n     { \"echojson\", 0, \"arg0\" },"
      },
      {
        "sha": "288124eb6d98fcbe8be3f85c54f9295895438334",
        "filename": "src/rpc/net.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 6,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7711302913b9df05cb6ad9ca5534af99c44be2c5/src/rpc/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7711302913b9df05cb6ad9ca5534af99c44be2c5/src/rpc/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/net.cpp?ref=7711302913b9df05cb6ad9ca5534af99c44be2c5",
        "patch": "@@ -228,17 +228,16 @@ static UniValue addnode(const JSONRPCRequest& request)\n     std::string strCommand;\n     if (!request.params[1].isNull())\n         strCommand = request.params[1].get_str();\n-    if (request.fHelp || request.params.size() != 2 ||\n+    if (request.fHelp || request.params.size() < 2 || request.params.size() > 3 ||\n         (strCommand != \"onetry\" && strCommand != \"add\" && strCommand != \"remove\"))\n         throw std::runtime_error(\n             RPCHelpMan{\"addnode\",\n                 \"\\nAttempts to add or remove a node from the addnode list.\\n\"\n-                \"Or try a connection to a node once.\\n\"\n-                \"Nodes added using addnode (or -connect) are protected from DoS disconnection and are not required to be\\n\"\n-                \"full nodes/support SegWit as other outbound peers are (though such peers will not be synced from).\\n\",\n+                \"Or try a connection to a node once.\\n\",\n                 {\n                     {\"node\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The node (see getpeerinfo for nodes)\"},\n                     {\"command\", RPCArg::Type::STR, RPCArg::Optional::NO, \"'add' to add a node to the list, 'remove' to remove a node from the list, 'onetry' to try a connection to the node once\"},\n+                    {\"privileged\", RPCArg::Type::BOOL, /* default */ \"true\", \"If true, nodes added will be protected from DoS disconnection and not required to be full nodes or support segwit as other outbound peers are (though such peers will not be synced from). Only supported for command \\\"onetry\\\" for now.\"},\n                 },\n                 RPCResult{RPCResult::Type::NONE, \"\", \"\"},\n                 RPCExamples{\n@@ -251,14 +250,19 @@ static UniValue addnode(const JSONRPCRequest& request)\n         throw JSONRPCError(RPC_CLIENT_P2P_DISABLED, \"Error: Peer-to-peer functionality missing or disabled\");\n \n     std::string strNode = request.params[0].get_str();\n+    const bool privileged = request.params[2].isNull() ? true : request.params[2].get_bool();\n \n     if (strCommand == \"onetry\")\n     {\n         CAddress addr;\n-        g_rpc_node->connman->OpenNetworkConnection(addr, false, nullptr, strNode.c_str(), false, false, true);\n+        g_rpc_node->connman->OpenNetworkConnection(addr, false, nullptr, strNode.c_str(), false, false, privileged);\n         return NullUniValue;\n     }\n \n+    if (!privileged) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Unprivileged connections are only supported for the \\\"onetry\\\" command for now\");\n+    }\n+\n     if (strCommand == \"add\")\n     {\n         if(!g_rpc_node->connman->AddNode(strNode))\n@@ -766,7 +770,7 @@ static const CRPCCommand commands[] =\n     { \"network\",            \"getconnectioncount\",     &getconnectioncount,     {} },\n     { \"network\",            \"ping\",                   &ping,                   {} },\n     { \"network\",            \"getpeerinfo\",            &getpeerinfo,            {} },\n-    { \"network\",            \"addnode\",                &addnode,                {\"node\",\"command\"} },\n+    { \"network\",            \"addnode\",                &addnode,                {\"node\",\"command\",\"privileged\"} },\n     { \"network\",            \"disconnectnode\",         &disconnectnode,         {\"address\", \"nodeid\"} },\n     { \"network\",            \"getaddednodeinfo\",       &getaddednodeinfo,       {\"node\"} },\n     { \"network\",            \"getnettotals\",           &getnettotals,           {} },"
      }
    ]
  }
]