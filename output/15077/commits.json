[
  {
    "sha": "fa7d5a0c1684ca63bfccab680af1191d33042ec8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTdkNWEwYzE2ODRjYTYzYmZjY2FiNjgwYWYxMTkxZDMzMDQyZWM4",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-01-01T22:27:02Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-01-01T23:25:38Z"
      },
      "message": "rpc: List all message types in getpeerinfo",
      "tree": {
        "sha": "4f2af2fb0fe28673940e4651ec12d74b0290131d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4f2af2fb0fe28673940e4651ec12d74b0290131d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa7d5a0c1684ca63bfccab680af1191d33042ec8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGcBAABCgAGBQJcK/byAAoJEM4rdWl+aaVI9y4MAJYyl9tdv1qu9HayKc/Pbnb4\nA6YeDTbTXuBpttPyrU2T+MxTAwkg01V27aRCM97b+wSAQPOKvNoxlepNZEuKx7H9\nOjxae637sOvixQQdsZhqkOpqJu8t7SHy04OJGqtzVPECUIRjqpdQgqguKrQ1g7kc\nDPkVvlhYVeLSDNPpJA0AiEELsgwcS12j0piLyh4xFi7crF/6XYp06NM+QmZgTF7Z\nSeUmAqyJNUiEDFghxt9HoHYa2vv80t1z528UrJKII6oZFzdp4wIDFuqzWjHGXFNf\nLyWuZHwTRBm7Zlr6cSW9VXHp9Vt+4mkqBqTB2qFv+HmDwAebq8soXHtzzE7lm2Xk\nJwZ+jdvVUN7i6z3wQvHNDPq623T75M+z1E0GdQWHf1YmN13Dgc9qimgntHoDvn1h\nAocc0UfQy2SMpEYqvaxzQ/OrlTqSVdjSNoMC5P1ek/YJI1tS0dHuar9+AZm0BqfI\nBmG2JtbAtwZDpd0s4F8NeeYjTpO03WZX8sf8gE8xJQ==\n=U00R\n-----END PGP SIGNATURE-----",
        "payload": "tree 4f2af2fb0fe28673940e4651ec12d74b0290131d\nparent e756eca9e8bf39f0a891f1760df0a317ecb7fee8\nauthor MarcoFalke <falke.marco@gmail.com> 1546381622 +0100\ncommitter MarcoFalke <falke.marco@gmail.com> 1546385138 +0100\n\nrpc: List all message types in getpeerinfo\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa7d5a0c1684ca63bfccab680af1191d33042ec8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa7d5a0c1684ca63bfccab680af1191d33042ec8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa7d5a0c1684ca63bfccab680af1191d33042ec8/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e756eca9e8bf39f0a891f1760df0a317ecb7fee8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e756eca9e8bf39f0a891f1760df0a317ecb7fee8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e756eca9e8bf39f0a891f1760df0a317ecb7fee8"
      }
    ],
    "stats": {
      "total": 29,
      "additions": 17,
      "deletions": 12
    },
    "files": [
      {
        "sha": "d7285746853854354f0234eb28b8724557210088",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 5,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa7d5a0c1684ca63bfccab680af1191d33042ec8/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa7d5a0c1684ca63bfccab680af1191d33042ec8/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=fa7d5a0c1684ca63bfccab680af1191d33042ec8",
        "patch": "@@ -778,7 +778,6 @@ bool CNode::ReceiveMsgBytes(const char *pch, unsigned int nBytes, bool& complete\n         nBytes -= handled;\n \n         if (msg.complete()) {\n-\n             //store received bytes per message command\n             //to prevent a memory DOS, only allow valid commands\n             mapMsgCmdSize::iterator i = mapRecvBytesPerMsgCmd.find(msg.hdr.pchCommand);\n@@ -2709,8 +2708,8 @@ int CConnman::GetBestHeight() const\n \n unsigned int CConnman::GetReceiveFloodSize() const { return nReceiveFloodSize; }\n \n-CNode::CNode(NodeId idIn, ServiceFlags nLocalServicesIn, int nMyStartingHeightIn, SOCKET hSocketIn, const CAddress& addrIn, uint64_t nKeyedNetGroupIn, uint64_t nLocalHostNonceIn, const CAddress &addrBindIn, const std::string& addrNameIn, bool fInboundIn) :\n-    nTimeConnected(GetSystemTimeInSeconds()),\n+CNode::CNode(NodeId idIn, ServiceFlags nLocalServicesIn, int nMyStartingHeightIn, SOCKET hSocketIn, const CAddress& addrIn, uint64_t nKeyedNetGroupIn, uint64_t nLocalHostNonceIn, const CAddress& addrBindIn, const std::string& addrNameIn, bool fInboundIn)\n+    : nTimeConnected(GetSystemTimeInSeconds()),\n     addr(addrIn),\n     addrBind(addrBindIn),\n     fInbound(fInboundIn),\n@@ -2771,8 +2770,10 @@ CNode::CNode(NodeId idIn, ServiceFlags nLocalServicesIn, int nMyStartingHeightIn\n     fPauseSend = false;\n     nProcessQueueSize = 0;\n \n-    for (const std::string &msg : getAllNetMessageTypes())\n+    for (const std::string& msg : getAllNetMessageTypes()) {\n         mapRecvBytesPerMsgCmd[msg] = 0;\n+        mapSendBytesPerMsgCmd[msg] = 0;\n+    }\n     mapRecvBytesPerMsgCmd[NET_MESSAGE_COMMAND_OTHER] = 0;\n \n     if (fLogIPs) {\n@@ -2846,7 +2847,7 @@ void CConnman::PushMessage(CNode* pnode, CSerializedNetMsg&& msg)\n         bool optimisticSend(pnode->vSendMsg.empty());\n \n         //log total amount of bytes per command\n-        pnode->mapSendBytesPerMsgCmd[msg.command] += nTotalSize;\n+        pnode->mapSendBytesPerMsgCmd.at(msg.command) += nTotalSize;\n         pnode->nSendSize += nTotalSize;\n \n         if (pnode->nSendSize > nSendBufferMaxSize)"
      },
      {
        "sha": "73f226f05f651a18a16e8d5aa2cca0d2b32f27e7",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa7d5a0c1684ca63bfccab680af1191d33042ec8/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa7d5a0c1684ca63bfccab680af1191d33042ec8/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=fa7d5a0c1684ca63bfccab680af1191d33042ec8",
        "patch": "@@ -694,8 +694,8 @@ class CNode\n     const uint64_t nKeyedNetGroup;\n     std::atomic_bool fPauseRecv;\n     std::atomic_bool fPauseSend;\n-protected:\n \n+protected:\n     mapMsgCmdSize mapSendBytesPerMsgCmd;\n     mapMsgCmdSize mapRecvBytesPerMsgCmd GUARDED_BY(cs_vRecv);\n "
      },
      {
        "sha": "d1604a77a9ed0d0ea5f68bbe5f0d43fc4998c203",
        "filename": "src/rpc/net.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 6,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa7d5a0c1684ca63bfccab680af1191d33042ec8/src/rpc/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa7d5a0c1684ca63bfccab680af1191d33042ec8/src/rpc/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/net.cpp?ref=fa7d5a0c1684ca63bfccab680af1191d33042ec8",
        "patch": "@@ -178,16 +178,14 @@ static UniValue getpeerinfo(const JSONRPCRequest& request)\n         obj.pushKV(\"minfeefilter\", ValueFromAmount(stats.minFeeFilter));\n \n         UniValue sendPerMsgCmd(UniValue::VOBJ);\n-        for (const mapMsgCmdSize::value_type &i : stats.mapSendBytesPerMsgCmd) {\n-            if (i.second > 0)\n-                sendPerMsgCmd.pushKV(i.first, i.second);\n+        for (const auto& i : stats.mapSendBytesPerMsgCmd) {\n+            sendPerMsgCmd.pushKV(i.first, i.second);\n         }\n         obj.pushKV(\"bytessent_per_msg\", sendPerMsgCmd);\n \n         UniValue recvPerMsgCmd(UniValue::VOBJ);\n-        for (const mapMsgCmdSize::value_type &i : stats.mapRecvBytesPerMsgCmd) {\n-            if (i.second > 0)\n-                recvPerMsgCmd.pushKV(i.first, i.second);\n+        for (const auto& i : stats.mapRecvBytesPerMsgCmd) {\n+            recvPerMsgCmd.pushKV(i.first, i.second);\n         }\n         obj.pushKV(\"bytesrecv_per_msg\", recvPerMsgCmd);\n "
      },
      {
        "sha": "b477b522646244b1fdab39a71f770f099ee18774",
        "filename": "test/functional/rpc_net.py",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa7d5a0c1684ca63bfccab680af1191d33042ec8/test/functional/rpc_net.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa7d5a0c1684ca63bfccab680af1191d33042ec8/test/functional/rpc_net.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_net.py?ref=fa7d5a0c1684ca63bfccab680af1191d33042ec8",
        "patch": "@@ -48,6 +48,12 @@ def _test_getnettotals(self):\n         # from getpeerinfo are bounded by those values.\n         net_totals_before = self.nodes[0].getnettotals()\n         peer_info = self.nodes[0].getpeerinfo()\n+\n+        assert '*other*' not in peer_info[0]['bytessent_per_msg']\n+        assert_equal(peer_info[0]['bytessent_per_msg']['addr'], 0)\n+        assert_equal(peer_info[0]['bytesrecv_per_msg']['*other*'], 0)\n+        assert_equal(peer_info[0]['bytesrecv_per_msg']['addr'], 0)\n+\n         net_totals_after = self.nodes[0].getnettotals()\n         assert_equal(len(peer_info), 2)\n         peers_recv = sum([peer['bytesrecv'] for peer in peer_info])"
      }
    ]
  }
]