[
  {
    "sha": "073225cb01d9c2629c7a423dbe6afcd07601ffb7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowNzMyMjVjYjAxZDljMjYyOWM3YTQyM2RiZTZhZmNkMDc2MDFmZmI3",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2016-04-28T11:35:16Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2016-04-28T11:35:16Z"
      },
      "message": "chain: define enum used as bit field as uint32_t\n\nBitwise logic combined with `<` with undefined signedness will\npotentially results in undefined behavior. Fix this by defining the type\nas a c++11 typed enum.\n\nFixes #6017.",
      "tree": {
        "sha": "287b825155920aed49f3111aee5b937078dc2223",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/287b825155920aed49f3111aee5b937078dc2223"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/073225cb01d9c2629c7a423dbe6afcd07601ffb7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/073225cb01d9c2629c7a423dbe6afcd07601ffb7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/073225cb01d9c2629c7a423dbe6afcd07601ffb7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/073225cb01d9c2629c7a423dbe6afcd07601ffb7/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d9594bfe0c3e8818f5490979c3d94d752383352e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d9594bfe0c3e8818f5490979c3d94d752383352e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d9594bfe0c3e8818f5490979c3d94d752383352e"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "017d4fe45789ac2275645812aa04683a013d9f0c",
        "filename": "src/chain.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/073225cb01d9c2629c7a423dbe6afcd07601ffb7/src/chain.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/073225cb01d9c2629c7a423dbe6afcd07601ffb7/src/chain.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chain.h?ref=073225cb01d9c2629c7a423dbe6afcd07601ffb7",
        "patch": "@@ -54,7 +54,7 @@ struct CDiskBlockPos\n \n };\n \n-enum BlockStatus {\n+enum BlockStatus: uint32_t {\n     //! Unused.\n     BLOCK_VALID_UNKNOWN      =    0,\n "
      }
    ]
  },
  {
    "sha": "07e4edb056249e017b0e5a4783e4452ce892b52d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowN2U0ZWRiMDU2MjQ5ZTAxN2IwZTVhNDc4M2U0NDUyY2U4OTJiNTJk",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2016-04-28T11:40:20Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2016-04-28T11:43:32Z"
      },
      "message": "auto_ptr \u2192 unique_ptr\n\nChange the few occurrences of the deprecated `auto_ptr` to c++11 `unique_ptr`.\nSilences the deprecation warnings.\n\nAlso add a missing `std::` for consistency.",
      "tree": {
        "sha": "6122537963799ff7bcfaf6af24d720b7fce5e5fe",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6122537963799ff7bcfaf6af24d720b7fce5e5fe"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/07e4edb056249e017b0e5a4783e4452ce892b52d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/07e4edb056249e017b0e5a4783e4452ce892b52d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/07e4edb056249e017b0e5a4783e4452ce892b52d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/07e4edb056249e017b0e5a4783e4452ce892b52d/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "073225cb01d9c2629c7a423dbe6afcd07601ffb7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/073225cb01d9c2629c7a423dbe6afcd07601ffb7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/073225cb01d9c2629c7a423dbe6afcd07601ffb7"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "a98eff7c167d73f52080eb97deaee322462eb93c",
        "filename": "src/httpserver.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07e4edb056249e017b0e5a4783e4452ce892b52d/src/httpserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07e4edb056249e017b0e5a4783e4452ce892b52d/src/httpserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httpserver.cpp?ref=07e4edb056249e017b0e5a4783e4452ce892b52d",
        "patch": "@@ -252,7 +252,7 @@ static std::string RequestMethodString(HTTPRequest::RequestMethod m)\n /** HTTP request callback */\n static void http_request_cb(struct evhttp_request* req, void* arg)\n {\n-    std::auto_ptr<HTTPRequest> hreq(new HTTPRequest(req));\n+    std::unique_ptr<HTTPRequest> hreq(new HTTPRequest(req));\n \n     LogPrint(\"http\", \"Received a %s request for %s from %s\\n\",\n              RequestMethodString(hreq->GetRequestMethod()), hreq->GetURI(), hreq->GetPeer().ToString());\n@@ -288,7 +288,7 @@ static void http_request_cb(struct evhttp_request* req, void* arg)\n \n     // Dispatch to worker thread\n     if (i != iend) {\n-        std::auto_ptr<HTTPWorkItem> item(new HTTPWorkItem(hreq.release(), path, i->handler));\n+        std::unique_ptr<HTTPWorkItem> item(new HTTPWorkItem(hreq.release(), path, i->handler));\n         assert(workQueue);\n         if (workQueue->Enqueue(item.get()))\n             item.release(); /* if true, queue took ownership */"
      },
      {
        "sha": "eaf29a767b5945cddf12aa115d33461f84b6592a",
        "filename": "src/miner.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07e4edb056249e017b0e5a4783e4452ce892b52d/src/miner.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07e4edb056249e017b0e5a4783e4452ce892b52d/src/miner.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.cpp?ref=07e4edb056249e017b0e5a4783e4452ce892b52d",
        "patch": "@@ -74,7 +74,7 @@ int64_t UpdateTime(CBlockHeader* pblock, const Consensus::Params& consensusParam\n CBlockTemplate* CreateNewBlock(const CChainParams& chainparams, const CScript& scriptPubKeyIn)\n {\n     // Create new block\n-    auto_ptr<CBlockTemplate> pblocktemplate(new CBlockTemplate());\n+    std::unique_ptr<CBlockTemplate> pblocktemplate(new CBlockTemplate());\n     if(!pblocktemplate.get())\n         return NULL;\n     CBlock *pblock = &pblocktemplate->block; // pointer for convenience"
      },
      {
        "sha": "9a7d9d53a07fc79020fb342bf5f3e5200fe3cfa8",
        "filename": "src/rpc/mining.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/07e4edb056249e017b0e5a4783e4452ce892b52d/src/rpc/mining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/07e4edb056249e017b0e5a4783e4452ce892b52d/src/rpc/mining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/mining.cpp?ref=07e4edb056249e017b0e5a4783e4452ce892b52d",
        "patch": "@@ -111,7 +111,7 @@ UniValue generateBlocks(boost::shared_ptr<CReserveScript> coinbaseScript, int nG\n     UniValue blockHashes(UniValue::VARR);\n     while (nHeight < nHeightEnd)\n     {\n-        auto_ptr<CBlockTemplate> pblocktemplate(CreateNewBlock(Params(), coinbaseScript->reserveScript));\n+        std::unique_ptr<CBlockTemplate> pblocktemplate(CreateNewBlock(Params(), coinbaseScript->reserveScript));\n         if (!pblocktemplate.get())\n             throw JSONRPCError(RPC_INTERNAL_ERROR, \"Couldn't create new block\");\n         CBlock *pblock = &pblocktemplate->block;"
      }
    ]
  }
]