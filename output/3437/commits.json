[
  {
    "sha": "2ea980a77cc28374a55aa1fdce953f9b570e0857",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyZWE5ODBhNzdjYzI4Mzc0YTU1YWExZmRjZTk1M2Y5YjU3MGUwODU3",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-18T08:45:36Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-20T10:18:50Z"
      },
      "message": "qt: Treat regtest as testnet\n\nNo need to do anything special in the GUI for regtest mode,\nbut do treat it at testnet not mainnet to prevent confusion.",
      "tree": {
        "sha": "d904a6f5126430fe329509904b2274b3c9dfa74f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d904a6f5126430fe329509904b2274b3c9dfa74f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2ea980a77cc28374a55aa1fdce953f9b570e0857",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2ea980a77cc28374a55aa1fdce953f9b570e0857",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2ea980a77cc28374a55aa1fdce953f9b570e0857",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2ea980a77cc28374a55aa1fdce953f9b570e0857/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "57fdd68aaccbc845e2efca3a7b535832132fcf43",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/57fdd68aaccbc845e2efca3a7b535832132fcf43",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/57fdd68aaccbc845e2efca3a7b535832132fcf43"
      }
    ],
    "stats": {
      "total": 55,
      "additions": 32,
      "deletions": 23
    },
    "files": [
      {
        "sha": "122cf9b0b2ef34b84913aaa5fd07a32e718c2007",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2ea980a77cc28374a55aa1fdce953f9b570e0857/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2ea980a77cc28374a55aa1fdce953f9b570e0857/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=2ea980a77cc28374a55aa1fdce953f9b570e0857",
        "patch": "@@ -197,9 +197,10 @@ int main(int argc, char *argv[])\n \n     // Application identification (must be set before OptionsModel is initialized,\n     // as it is used to locate QSettings)\n+    bool isaTestNet = TestNet() || RegTest();\n     QApplication::setOrganizationName(\"Bitcoin\");\n     QApplication::setOrganizationDomain(\"bitcoin.org\");\n-    if (TestNet()) // Separate UI settings for testnet\n+    if (isaTestNet) // Separate UI settings for testnets\n         QApplication::setApplicationName(\"Bitcoin-Qt-testnet\");\n     else\n         QApplication::setApplicationName(\"Bitcoin-Qt\");\n@@ -230,7 +231,7 @@ int main(int argc, char *argv[])\n     PaymentServer* paymentServer = new PaymentServer(&app);\n \n     // User language is set up: pick a data directory\n-    Intro::pickDataDirectory(TestNet());\n+    Intro::pickDataDirectory(isaTestNet);\n \n     // Install global event filter that makes sure that long tooltips can be word-wrapped\n     app.installEventFilter(new GUIUtil::ToolTipToRichTextFilter(TOOLTIP_WRAP_THRESHOLD, &app));\n@@ -258,7 +259,7 @@ int main(int argc, char *argv[])\n         return 1;\n     }\n \n-    SplashScreen splash(QPixmap(), 0);\n+    SplashScreen splash(QPixmap(), 0, isaTestNet);\n     if (GetBoolArg(\"-splash\", true) && !GetBoolArg(\"-min\", false))\n     {\n         splash.show();\n@@ -280,7 +281,7 @@ int main(int argc, char *argv[])\n \n         boost::thread_group threadGroup;\n \n-        BitcoinGUI window(TestNet(), 0);\n+        BitcoinGUI window(isaTestNet, 0);\n         guiref = &window;\n \n         QTimer* pollShutdownTimer = new QTimer(guiref);"
      },
      {
        "sha": "f273b9ea461e392b52663f642b80a68c70bb81ec",
        "filename": "src/qt/clientmodel.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 2,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2ea980a77cc28374a55aa1fdce953f9b570e0857/src/qt/clientmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2ea980a77cc28374a55aa1fdce953f9b570e0857/src/qt/clientmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.cpp?ref=2ea980a77cc28374a55aa1fdce953f9b570e0857",
        "patch": "@@ -123,9 +123,12 @@ void ClientModel::updateAlert(const QString &hash, int status)\n     emit alertsChanged(getStatusBarWarnings());\n }\n \n-bool ClientModel::isTestNet() const\n+QString ClientModel::getNetworkName() const\n {\n-    return TestNet();\n+    QString netname(QString::fromStdString(Params().DataDir()));\n+    if(netname.isEmpty())\n+        netname = \"main\";\n+    return netname;\n }\n \n bool ClientModel::inInitialBlockDownload() const"
      },
      {
        "sha": "ca735f14ce420ac400ebd498eade8a276b1bf9bb",
        "filename": "src/qt/clientmodel.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2ea980a77cc28374a55aa1fdce953f9b570e0857/src/qt/clientmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2ea980a77cc28374a55aa1fdce953f9b570e0857/src/qt/clientmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.h?ref=2ea980a77cc28374a55aa1fdce953f9b570e0857",
        "patch": "@@ -46,8 +46,8 @@ class ClientModel : public QObject\n     double getVerificationProgress() const;\n     QDateTime getLastBlockDate() const;\n \n-    //! Return true if client connected to testnet\n-    bool isTestNet() const;\n+    //! Return network (main, testnet3, regtest)\n+    QString getNetworkName() const;\n     //! Return true if core is doing initial block download\n     bool inInitialBlockDownload() const;\n     //! Return true if core is importing blocks"
      },
      {
        "sha": "69504f3159826da3302393c22f3ac475cc128982",
        "filename": "src/qt/forms/rpcconsole.ui",
        "status": "modified",
        "additions": 15,
        "deletions": 9,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2ea980a77cc28374a55aa1fdce953f9b570e0857/src/qt/forms/rpcconsole.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2ea980a77cc28374a55aa1fdce953f9b570e0857/src/qt/forms/rpcconsole.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/rpcconsole.ui?ref=2ea980a77cc28374a55aa1fdce953f9b570e0857",
        "patch": "@@ -172,14 +172,14 @@\n         </widget>\n        </item>\n        <item row=\"7\" column=\"0\">\n-        <widget class=\"QLabel\" name=\"label_7\">\n+        <widget class=\"QLabel\" name=\"label_8\">\n          <property name=\"text\">\n-          <string>Number of connections</string>\n+          <string>Name</string>\n          </property>\n         </widget>\n        </item>\n        <item row=\"7\" column=\"1\">\n-        <widget class=\"QLabel\" name=\"numberOfConnections\">\n+        <widget class=\"QLabel\" name=\"networkName\">\n          <property name=\"cursor\">\n           <cursorShape>IBeamCursor</cursorShape>\n          </property>\n@@ -195,19 +195,25 @@\n         </widget>\n        </item>\n        <item row=\"8\" column=\"0\">\n-        <widget class=\"QLabel\" name=\"label_8\">\n+        <widget class=\"QLabel\" name=\"label_7\">\n          <property name=\"text\">\n-          <string>On testnet</string>\n+          <string>Number of connections</string>\n          </property>\n         </widget>\n        </item>\n        <item row=\"8\" column=\"1\">\n-        <widget class=\"QCheckBox\" name=\"isTestNet\">\n-         <property name=\"enabled\">\n-          <bool>false</bool>\n+        <widget class=\"QLabel\" name=\"numberOfConnections\">\n+         <property name=\"cursor\">\n+          <cursorShape>IBeamCursor</cursorShape>\n          </property>\n          <property name=\"text\">\n-          <string/>\n+          <string>N/A</string>\n+         </property>\n+         <property name=\"textFormat\">\n+          <enum>Qt::PlainText</enum>\n+         </property>\n+         <property name=\"textInteractionFlags\">\n+          <set>Qt::LinksAccessibleByMouse|Qt::TextSelectableByKeyboard|Qt::TextSelectableByMouse</set>\n          </property>\n         </widget>\n        </item>"
      },
      {
        "sha": "a8470572dde3c72bf75bf5292d85887967e9815f",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2ea980a77cc28374a55aa1fdce953f9b570e0857/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2ea980a77cc28374a55aa1fdce953f9b570e0857/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=2ea980a77cc28374a55aa1fdce953f9b570e0857",
        "patch": "@@ -284,7 +284,7 @@ void RPCConsole::setClientModel(ClientModel *model)\n         ui->buildDate->setText(model->formatBuildDate());\n         ui->startupTime->setText(model->formatClientStartupTime());\n \n-        ui->isTestNet->setChecked(model->isTestNet());\n+        ui->networkName->setText(model->getNetworkName());\n     }\n }\n "
      },
      {
        "sha": "6fb834c0455bb2868f5fb39a3fb0507b47c95d53",
        "filename": "src/qt/splashscreen.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 4,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2ea980a77cc28374a55aa1fdce953f9b570e0857/src/qt/splashscreen.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2ea980a77cc28374a55aa1fdce953f9b570e0857/src/qt/splashscreen.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/splashscreen.cpp?ref=2ea980a77cc28374a55aa1fdce953f9b570e0857",
        "patch": "@@ -4,14 +4,13 @@\n \n #include \"splashscreen.h\"\n \n-#include \"chainparams.h\"\n #include \"clientversion.h\"\n #include \"util.h\"\n \n #include <QApplication>\n #include <QPainter>\n \n-SplashScreen::SplashScreen(const QPixmap &pixmap, Qt::WindowFlags f) :\n+SplashScreen::SplashScreen(const QPixmap &pixmap, Qt::WindowFlags f, bool isTestNet) :\n     QSplashScreen(pixmap, f)\n {\n     // set reference point, paddings\n@@ -32,7 +31,7 @@ SplashScreen::SplashScreen(const QPixmap &pixmap, Qt::WindowFlags f) :\n \n     // load the bitmap for writing some text over it\n     QPixmap newPixmap;\n-    if(TestNet()) {\n+    if(isTestNet) {\n         newPixmap     = QPixmap(\":/images/splash_testnet\");\n     }\n     else {\n@@ -72,7 +71,7 @@ SplashScreen::SplashScreen(const QPixmap &pixmap, Qt::WindowFlags f) :\n     pixPaint.drawText(newPixmap.width()-titleTextWidth-paddingRight,paddingTop+titleCopyrightVSpace,copyrightText);\n \n     // draw testnet string if testnet is on\n-    if(TestNet()) {\n+    if(isTestNet) {\n         QFont boldFont = QFont(font, 10*fontFactor);\n         boldFont.setWeight(QFont::Bold);\n         pixPaint.setFont(boldFont);"
      },
      {
        "sha": "070e376c958c78804790839f1234431c884bfc5d",
        "filename": "src/qt/splashscreen.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2ea980a77cc28374a55aa1fdce953f9b570e0857/src/qt/splashscreen.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2ea980a77cc28374a55aa1fdce953f9b570e0857/src/qt/splashscreen.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/splashscreen.h?ref=2ea980a77cc28374a55aa1fdce953f9b570e0857",
        "patch": "@@ -14,7 +14,7 @@ class SplashScreen : public QSplashScreen\n     Q_OBJECT\n \n public:\n-    explicit SplashScreen(const QPixmap &pixmap = QPixmap(), Qt::WindowFlags f = 0);\n+    explicit SplashScreen(const QPixmap &pixmap, Qt::WindowFlags f, bool isTestNet);\n };\n \n #endif // SPLASHSCREEN_H"
      }
    ]
  }
]