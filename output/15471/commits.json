[
  {
    "sha": "ef362f27733e9281062b4e65a26e5696f34692b4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplZjM2MmYyNzczM2U5MjgxMDYyYjRlNjVhMjZlNTY5NmYzNDY5MmI0",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2019-02-25T09:14:28Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2019-02-25T14:59:02Z"
      },
      "message": "rpc/gui: Remove 'Unknown block versions being mined' warning\n\nDue to miners inserting garbage into the version numbers, the current\nversion signalling has become completely useless. This removes the\n\"unknown block versions\" warning which has the tendency to scare\nusers unnecessarily (and might get them to \"update\" to something\nbad).\n\nIt preserves the warning in the logs. Whether this is desirable can\nbe a point of discussion.",
      "tree": {
        "sha": "c369a4d6bf9feb35dad5ccc7e583d6c3cb0da69d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c369a4d6bf9feb35dad5ccc7e583d6c3cb0da69d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ef362f27733e9281062b4e65a26e5696f34692b4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ef362f27733e9281062b4e65a26e5696f34692b4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ef362f27733e9281062b4e65a26e5696f34692b4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ef362f27733e9281062b4e65a26e5696f34692b4/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1a8a5ede9fc334bd97b774670eb340b8665a0aa4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1a8a5ede9fc334bd97b774670eb340b8665a0aa4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1a8a5ede9fc334bd97b774670eb340b8665a0aa4"
      }
    ],
    "stats": {
      "total": 30,
      "additions": 1,
      "deletions": 29
    },
    "files": [
      {
        "sha": "f3d34dca70049468d6d3b53190e343ff123b5f2a",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 6,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef362f27733e9281062b4e65a26e5696f34692b4/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef362f27733e9281062b4e65a26e5696f34692b4/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=ef362f27733e9281062b4e65a26e5696f34692b4",
        "patch": "@@ -2259,12 +2259,6 @@ void static UpdateTip(const CBlockIndex *pindexNew, const CChainParams& chainPar\n         }\n         if (nUpgraded > 0)\n             AppendWarning(warningMessages, strprintf(_(\"%d of last 100 blocks have unexpected version\"), nUpgraded));\n-        if (nUpgraded > 100/2)\n-        {\n-            std::string strWarning = _(\"Warning: Unknown block versions being mined! It's possible unknown rules are in effect\");\n-            // notify GetWarnings(), called by Qt and the JSON-RPC code to warn the user:\n-            DoWarning(strWarning);\n-        }\n     }\n     LogPrintf(\"%s: new best=%s height=%d version=0x%08x log2_work=%.8g tx=%lu date='%s' progress=%f cache=%.1fMiB(%utxo)\", __func__, /* Continued */\n       pindexNew->GetBlockHash().ToString(), pindexNew->nHeight, pindexNew->nVersion,"
      },
      {
        "sha": "b98dd6d26c3a69821719cd54c830d8b62b9f7f57",
        "filename": "test/functional/feature_notifications.py",
        "status": "modified",
        "additions": 1,
        "deletions": 17,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef362f27733e9281062b4e65a26e5696f34692b4/test/functional/feature_notifications.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef362f27733e9281062b4e65a26e5696f34692b4/test/functional/feature_notifications.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_notifications.py?ref=ef362f27733e9281062b4e65a26e5696f34692b4",
        "patch": "@@ -66,23 +66,7 @@ def run_test(self):\n             txids_rpc = list(map(lambda t: t['txid'], self.nodes[1].listtransactions(\"*\", block_count)))\n             assert_equal(sorted(txids_rpc), sorted(os.listdir(self.walletnotify_dir)))\n \n-        # Mine another 41 up-version blocks. -alertnotify should trigger on the 51st.\n-        self.log.info(\"test -alertnotify\")\n-        self.nodes[1].generatetoaddress(41, ADDRESS_BCRT1_UNSPENDABLE)\n-        self.sync_all()\n-\n-        # Give bitcoind 10 seconds to write the alert notification\n-        wait_until(lambda: len(os.listdir(self.alertnotify_dir)), timeout=10)\n-\n-        for notify_file in os.listdir(self.alertnotify_dir):\n-            os.remove(os.path.join(self.alertnotify_dir, notify_file))\n-\n-        # Mine more up-version blocks, should not get more alerts:\n-        self.nodes[1].generatetoaddress(2, ADDRESS_BCRT1_UNSPENDABLE)\n-        self.sync_all()\n-\n-        self.log.info(\"-alertnotify should not continue notifying for more unknown version blocks\")\n-        assert_equal(len(os.listdir(self.alertnotify_dir)), 0)\n+        # TODO: add test for `-alertnotify` large fork notifications\n \n if __name__ == '__main__':\n     NotificationsTest().main()"
      },
      {
        "sha": "1ced618d479f188df1010f165d00937eda36e1eb",
        "filename": "test/functional/feature_versionbits_warning.py",
        "status": "modified",
        "additions": 0,
        "deletions": 6,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef362f27733e9281062b4e65a26e5696f34692b4/test/functional/feature_versionbits_warning.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef362f27733e9281062b4e65a26e5696f34692b4/test/functional/feature_versionbits_warning.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_versionbits_warning.py?ref=ef362f27733e9281062b4e65a26e5696f34692b4",
        "patch": "@@ -22,7 +22,6 @@\n VB_UNKNOWN_BIT = 27       # Choose a bit unassigned to any deployment\n VB_UNKNOWN_VERSION = VB_TOP_BITS | (1 << VB_UNKNOWN_BIT)\n \n-WARN_UNKNOWN_RULES_MINED = \"Unknown block versions being mined! It's possible unknown rules are in effect\"\n WARN_UNKNOWN_RULES_ACTIVE = \"unknown new rules activated (versionbit {})\".format(VB_UNKNOWN_BIT)\n VB_PATTERN = re.compile(\"Warning: unknown new rules activated.*versionbit\")\n \n@@ -78,15 +77,10 @@ def run_test(self):\n         assert(not VB_PATTERN.match(node.getmininginfo()[\"warnings\"]))\n         assert(not VB_PATTERN.match(node.getnetworkinfo()[\"warnings\"]))\n \n-        self.log.info(\"Check that there is a warning if >50 blocks in the last 100 were an unknown version\")\n         # Build one period of blocks with VB_THRESHOLD blocks signaling some unknown bit\n         self.send_blocks_with_version(node.p2p, VB_THRESHOLD, VB_UNKNOWN_VERSION)\n         node.generatetoaddress(VB_PERIOD - VB_THRESHOLD, node_deterministic_address)\n \n-        # Check that get*info() shows the 51/100 unknown block version error.\n-        assert(WARN_UNKNOWN_RULES_MINED in node.getmininginfo()[\"warnings\"])\n-        assert(WARN_UNKNOWN_RULES_MINED in node.getnetworkinfo()[\"warnings\"])\n-\n         self.log.info(\"Check that there is a warning if previous VB_BLOCKS have >=VB_THRESHOLD blocks with unknown versionbits version.\")\n         # Mine a period worth of expected blocks so the generic block-version warning\n         # is cleared. This will move the versionbit state to ACTIVE."
      }
    ]
  }
]