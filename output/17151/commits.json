[
  {
    "sha": "cc3b5289ef648dca30469ee4afa615a1ed5b4e04",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjYzNiNTI4OWVmNjQ4ZGNhMzA0NjllZTRhZmE2MTVhMWVkNWI0ZTA0",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-10-13T23:28:58Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-10-15T13:48:50Z"
      },
      "message": "gui: remove OpenSSL PRNG seeding (Windows, Qt only)\n\nThis removes the code introduced in [#4399](https://github.com/bitcoin/bitcoin/pull/4399)\nthat attempts to add additional entroy to the OpenSSL PRNG using Windows messages.\nNote that this is specific to bitcoin-qt running on Windows.\n\n```\nRAND_event() collects the entropy from Windows events such as mouse movements and other user interaction.\nIt should be called with the iMsg, wParam and lParam arguments of all messages sent to the window procedure.\nIt will estimate the entropy contained in the event message (if any), and add it to the PRNG.\nThe program can then process the messages as usual.\n```\n\nBesides BIP70, this is the last place we are directly using OpenSSL in the\nGUI code. All other OpenSSL usage is in random.cpp.\n\nNote that we are still also doing Windows specific entropy gathering in multiple\nother places. Such as [RandAddSeedPerfmon](https://github.com/bitcoin/bitcoin/blob/master/src/random.cpp#L268)\nand [RAND_screen()](https://github.com/bitcoin/bitcoin/blob/master/src/random.cpp#L600).\n\nAlso note that if RAND_event returns 0 (PRNG has NOT been seeded with enough data), we're\njust logging a message and continuing on, which seems less than ideal.",
      "tree": {
        "sha": "ed7ba9d5b673f349bf951b8d826edadf4a370081",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ed7ba9d5b673f349bf951b8d826edadf4a370081"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cc3b5289ef648dca30469ee4afa615a1ed5b4e04",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAl2lzkIACgkQLuufXMCV\nJsGTdhAAmpCaMBtFNcNgH7jK0dmGRVbs6+Muoj+7dVyDS7/ApgMvESyhxlPG7s1b\nUSaBaeFxsww1QlRw4B/vc8ZArTXFgL+gpS6mLSm+xgJwy14DZPQxkK4PdSSiFLAS\nGteKYKROmuRN/W01H9682sAMdqYIRTwuyPWa8CVPYVNlwIc3gLRBD8rloS3oI/vw\n4nb7zCXOA7LsnwNMwUhIfIYlfG+8oJj8ZjBdRWmqb6CNv0xEOqMM59aYH7yvqdTj\n53DIMJB52AwCHYzXePjPgyb7r7k8frunENxM8beUlmt3zUvXyr+XZ2wV+EWuzcP2\nhZlluNnXSFBn1BVx+eZWz4e+iioh2/tjp5csn3Znslw4b7r/EvvFb4kjlvpW7soe\nwKo+bgw4a/ubsbMtyJydUClCUT4fSR2urEls+HG2I0kUKnTEXvMf/BmXRfBLRmCk\npPdnxJyNAzEuDLht/kMZbPuEPkXyTXHZnnIEh6osQv4Q0bppxOO9ROA9dcLWxJgQ\ncj240cw4UGtorUyupPUtVqWNXwESwlP5EbwiKIHseXdp6smzqMveaeP9jAGEef8o\nMwuPhl//ethEqxIakncKFGHwSPR2lhFaCq+kUR1jh+RpfTLKIt+ZOWBvauS1HwYj\nWebW8V7miRWqbPWsKIoQOoj63AQaSjM9iPnAZpIkzzYcv2R2FOY=\n=a/mN\n-----END PGP SIGNATURE-----",
        "payload": "tree ed7ba9d5b673f349bf951b8d826edadf4a370081\nparent 029c65e04cc2826817e6b5b10696c0e390694ae8\nauthor fanquake <fanquake@gmail.com> 1571009338 -0400\ncommitter fanquake <fanquake@gmail.com> 1571147330 -0400\n\ngui: remove OpenSSL PRNG seeding (Windows, Qt only)\n\nThis removes the code introduced in [#4399](https://github.com/bitcoin/bitcoin/pull/4399)\nthat attempts to add additional entroy to the OpenSSL PRNG using Windows messages.\nNote that this is specific to bitcoin-qt running on Windows.\n\n```\nRAND_event() collects the entropy from Windows events such as mouse movements and other user interaction.\nIt should be called with the iMsg, wParam and lParam arguments of all messages sent to the window procedure.\nIt will estimate the entropy contained in the event message (if any), and add it to the PRNG.\nThe program can then process the messages as usual.\n```\n\nBesides BIP70, this is the last place we are directly using OpenSSL in the\nGUI code. All other OpenSSL usage is in random.cpp.\n\nNote that we are still also doing Windows specific entropy gathering in multiple\nother places. Such as [RandAddSeedPerfmon](https://github.com/bitcoin/bitcoin/blob/master/src/random.cpp#L268)\nand [RAND_screen()](https://github.com/bitcoin/bitcoin/blob/master/src/random.cpp#L600).\n\nAlso note that if RAND_event returns 0 (PRNG has NOT been seeded with enough data), we're\njust logging a message and continuing on, which seems less than ideal.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cc3b5289ef648dca30469ee4afa615a1ed5b4e04",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cc3b5289ef648dca30469ee4afa615a1ed5b4e04",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cc3b5289ef648dca30469ee4afa615a1ed5b4e04/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "029c65e04cc2826817e6b5b10696c0e390694ae8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/029c65e04cc2826817e6b5b10696c0e390694ae8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/029c65e04cc2826817e6b5b10696c0e390694ae8"
      }
    ],
    "stats": {
      "total": 13,
      "additions": 0,
      "deletions": 13
    },
    "files": [
      {
        "sha": "c6eb133cbd190ec2ca980498edee8e3ac8b1e6b4",
        "filename": "src/qt/winshutdownmonitor.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 13,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cc3b5289ef648dca30469ee4afa615a1ed5b4e04/src/qt/winshutdownmonitor.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cc3b5289ef648dca30469ee4afa615a1ed5b4e04/src/qt/winshutdownmonitor.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/winshutdownmonitor.cpp?ref=cc3b5289ef648dca30469ee4afa615a1ed5b4e04",
        "patch": "@@ -6,14 +6,11 @@\n \n #if defined(Q_OS_WIN)\n #include <shutdown.h>\n-#include <util/system.h>\n \n #include <windows.h>\n \n #include <QDebug>\n \n-#include <openssl/rand.h>\n-\n // If we don't want a message to be processed by Qt, return true and set result to\n // the value that the window procedure should return. Otherwise return false.\n bool WinShutdownMonitor::nativeEventFilter(const QByteArray &eventType, void *pMessage, long *pnResult)\n@@ -22,16 +19,6 @@ bool WinShutdownMonitor::nativeEventFilter(const QByteArray &eventType, void *pM\n \n        MSG *pMsg = static_cast<MSG *>(pMessage);\n \n-       // Seed OpenSSL PRNG with Windows event data (e.g.  mouse movements and other user interactions)\n-       if (RAND_event(pMsg->message, pMsg->wParam, pMsg->lParam) == 0) {\n-            // Warn only once as this is performance-critical\n-            static bool warned = false;\n-            if (!warned) {\n-                LogPrintf(\"%s: OpenSSL RAND_event() failed to seed OpenSSL PRNG with enough data.\\n\", __func__);\n-                warned = true;\n-            }\n-       }\n-\n        switch(pMsg->message)\n        {\n            case WM_QUERYENDSESSION:"
      }
    ]
  }
]