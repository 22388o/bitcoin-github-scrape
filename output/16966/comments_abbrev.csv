promag,2019-09-25 20:09:17,Concept ACK. Not sure if the tab view is the best container for the send wizard. Have you considered back/next buttons?,https://github.com/bitcoin/bitcoin/pull/16966#issuecomment-535191368,535191368,
gwillen,2019-09-25 20:17:51,"I went back and for myself on the view style and ultimately did settle on a tab view. Ultimately there's never actually a need to press the Back and Next buttons unless you're doing something wrong (or a trivial demo) -- each step of the process will happen on a different machine.\n\nI like the idea of a ""load PSBT"" menu item taking you to the right tab. In my implementation, there is an ""offlin",https://github.com/bitcoin/bitcoin/pull/16966#issuecomment-535194890,535194890,
DrahtBot,2019-09-25 23:18:56,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#17219](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/17219.html) (wallet: allow transaction without change if",https://github.com/bitcoin/bitcoin/pull/16966#issuecomment-535261788,535261788,
Sjors,2019-09-26 08:45:09,"> the signing wallet may not be able to put up the usual form of the confirmation display, as shown here, unless it has some trustworthy way to know which output is change, which it doesn't except maybe if you're using descriptors to tell it so.\n\nI have a hardware wallet GUI PR #16549 which is built on top of native descriptor wallets #16528.\n\nI'm also thinking of replacing `WalletModelTra",https://github.com/bitcoin/bitcoin/pull/16966#issuecomment-535404803,535404803,
Sjors,2019-09-26 18:10:14,"Added RBF. If a followup PR splits fee selection out of Tab 1 then bump fee could also support a custom amount, rather the current take it or leave it fee.\n\nI'm considering squashing this into a single commit; current commit history is probably more confusing than useful. ",https://github.com/bitcoin/bitcoin/pull/16966#issuecomment-535622999,535622999,
hebasto,2019-09-30 13:55:47,Concept ACK,https://github.com/bitcoin/bitcoin/pull/16966#issuecomment-536572409,536572409,
Sjors,2019-10-11 15:04:17,"`qt/wallettests.cpp` breaks because the `transactionTableModel` doesn't update after the transactions are created. @promag could this be related to https://github.com/bitcoin/bitcoin/pull/16876#issuecomment-532665908?\n\nBefore this change, a healthy test log contains an `updateWallet` entry which is missing in the failing test:\n\n```\nPASS   : WalletTests::initTestCase()\nQDEBUG : WalletTe",https://github.com/bitcoin/bitcoin/pull/16966#issuecomment-541102070,541102070,
Sjors,2019-10-11 17:07:33,"`NotifyTransactionChanged` in `WalletModel` calls `updateTransaction` using a `Qt::QueuedConnection`. That caused the test to fail.\n",https://github.com/bitcoin/bitcoin/pull/16966#issuecomment-541146730,541146730,
promag,2019-10-12 09:25:06,@Sjors try like this https://github.com/bitcoin/bitcoin/pull/16876/files#diff-6fcb1829ce66ad65046d6896dbcc910bR73,https://github.com/bitcoin/bitcoin/pull/16966#issuecomment-541306106,541306106,
Sjors,2019-10-12 10:11:55,"@promag added.\n\nFor some reason the Travis `nowallet` build is failing, but I can't reproduce:\n```\nD__STDC_FORMAT_MACROS  -fstack-reuse=none -Wstack-protector -fstack-protector-all      -fPIE -pipe -O2  -fvisibility=hidden -c -o qt/qt_libbitcoinqt_a-moc_sendcompose.o `test -f 'qt/moc_sendcompose.cpp' || echo './'`qt/moc_sendcompose.cpp\n2790In file included from ./wallet/walletdb.h:12:0,",https://github.com/bitcoin/bitcoin/pull/16966#issuecomment-541310206,541310206,
Sjors,2019-10-13 08:51:57,"Travis is happy. TIL that `build_msvc/libbitcoin_qt/libbitcoin_qt.vcxproj` isn't auto generated, so I had to update that as well. Now AppVeyor is happy too.\n\nI'm probably going to add a SendWidget class to share common code between the tabs. I might also replace `unique_ptr` with `shared_ptr` as the current passing the baton approach seems a bit brittle. ",https://github.com/bitcoin/bitcoin/pull/16966#issuecomment-541399925,541399925,
DrahtBot,2019-10-24 09:36:07,<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase,https://github.com/bitcoin/bitcoin/pull/16966#issuecomment-545835165,545835165,
luke-jr,2019-11-04 13:38:47,"Concept NACK. Sorry, this looks ugly, much worse than the current flow.\n\n(Also, normal users probably shouldn't see txids...)",https://github.com/bitcoin/bitcoin/pull/16966#issuecomment-549356697,549356697,
Sjors,2019-11-04 14:40:04,"That's subjective. I think it looks better, because it's less cluttered and gets rid of a popup. Happy to hide the transaction id.\n\nThe current sign screen (which is a popup) doesn't have space to list hardware wallets. There's also not much room for PSBT creation and/or signing, other than just magically putting it on a clipboard (see #16944). If you have a better design I'd love to see it.",https://github.com/bitcoin/bitcoin/pull/16966#issuecomment-549383915,549383915,
luke-jr,2019-11-04 15:06:01,"> If you have a better design I'd love to see it.\n\nTo be clear, I think the current design with popup is better...",https://github.com/bitcoin/bitcoin/pull/16966#issuecomment-549396204,549396204,
michaelfolkson,2019-11-04 15:25:31,"> This frees up UI real estate where we can add support for PSBT, hardware wallets and education.\n\nConcept ACK on motivation for this. I don't have a view on its ugliness. For these UI redesigns it seems totally dependent on the regular users of the GUI. Personally I support the goal of the GUI being an educational stepping stone to using the CLI. There will be always be better GUIs for the no",https://github.com/bitcoin/bitcoin/pull/16966#issuecomment-549405089,549405089,
luke-jr,2019-11-04 17:23:57,"My view is almost entirely the opposite: The JSON-RPC server isn't meant for end users, but for software developers to interface with. The GUI is the primary method for end users to use Bitcoin Core, not some mere ""stepping stone"" to a half-baked JSON-RPC client...\n\nP.S. In addition to being a developer, I am a regular user of the GUI.",https://github.com/bitcoin/bitcoin/pull/16966#issuecomment-549459613,549459613,
Sjors,2019-11-04 17:33:29,I think @michaelfolkson was referring to having independently developed wallet applications that use the RPC (somewhat limited atm) or IPC (#10102). I use the GUI as well.,https://github.com/bitcoin/bitcoin/pull/16966#issuecomment-549463434,549463434,
michaelfolkson,2019-11-04 18:00:47,"I'm not entirely sure who this GUI is being designed for. Long time contributors like Sjors, Luke? Complete Bitcoin beginners? Someone like me who is technically curious and would ideally want to transition from any reliance on the GUI? All of us? (fiendishly difficult as you are making design compromises all over the place). \n\nIf it is complete Bitcoin beginners then none of us are the target",https://github.com/bitcoin/bitcoin/pull/16966#issuecomment-549474332,549474332,
Rspigler,2019-11-08 00:56:40,"> Concept NACK. Sorry, this looks ugly, much worse than the current flow\n> To be clear, I think the current design with popup is better...\n\nWhat current design allows you to generate PSBT's from the GUI of offline versions of Bitcoin Core for secure multisig?  AFAIK, https://github.com/bitcoin/bitcoin/pull/16944, https://github.com/bitcoin/bitcoin/issues/16954, and this PR are the only discu",https://github.com/bitcoin/bitcoin/pull/16966#issuecomment-551335530,551335530,
michaelfolkson,2019-11-08 13:10:04,"> And I don't believe that's the point, especially from reading #17395, that seems to be the consensus. The point is to be secure, power-user friendly, and mistake-minimizing.\n\nDo you agree with that @luke-jr? Feel free to comment on #17395 if you do/don't.",https://github.com/bitcoin/bitcoin/pull/16966#issuecomment-551766960,551766960,
Sjors,2019-11-19 10:54:00,"Closing this in favor of more incremental changes, e.g. #17509.",https://github.com/bitcoin/bitcoin/pull/16966#issuecomment-555452055,555452055,
