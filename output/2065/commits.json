[
  {
    "sha": "3675588a30eae39921afbf00f32f86913d5d2bd5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNjc1NTg4YTMwZWFlMzk5MjFhZmJmMDBmMzJmODY5MTNkNWQyYmQ1",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2012-12-03T12:24:42Z"
      },
      "committer": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2012-12-03T12:24:42Z"
      },
      "message": "Bitcoin-Qt: remove obsolete modal flag from GUI APIs\n\n- as we (can) supply the CClientUIInterface::MODAL flag via the style\n  parameter, we don't need a separate bool for checking the modality",
      "tree": {
        "sha": "8fe4a7164440556b6e43fd41d2287d93428c32e3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8fe4a7164440556b6e43fd41d2287d93428c32e3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3675588a30eae39921afbf00f32f86913d5d2bd5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3675588a30eae39921afbf00f32f86913d5d2bd5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3675588a30eae39921afbf00f32f86913d5d2bd5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3675588a30eae39921afbf00f32f86913d5d2bd5/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "7a8dd988638e197e13c8faf366cfb81aa4d67783",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7a8dd988638e197e13c8faf366cfb81aa4d67783",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7a8dd988638e197e13c8faf366cfb81aa4d67783"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 9,
      "deletions": 11
    },
    "files": [
      {
        "sha": "95d956dd8c7451f78a1e32aaa7b17e79745c51f2",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3675588a30eae39921afbf00f32f86913d5d2bd5/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3675588a30eae39921afbf00f32f86913d5d2bd5/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=3675588a30eae39921afbf00f32f86913d5d2bd5",
        "patch": "@@ -45,7 +45,6 @@ static void ThreadSafeMessageBox(const std::string& message, const std::string&\n                                    modal ? GUIUtil::blockingGUIThreadConnection() : Qt::QueuedConnection,\n                                    Q_ARG(QString, QString::fromStdString(caption)),\n                                    Q_ARG(QString, QString::fromStdString(message)),\n-                                   Q_ARG(bool, modal),\n                                    Q_ARG(unsigned int, style));\n     }\n     else"
      },
      {
        "sha": "3fe86501f693ebbdd4e6e1db3763d42d6bb05a15",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3675588a30eae39921afbf00f32f86913d5d2bd5/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3675588a30eae39921afbf00f32f86913d5d2bd5/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=3675588a30eae39921afbf00f32f86913d5d2bd5",
        "patch": "@@ -373,7 +373,7 @@ void BitcoinGUI::setClientModel(ClientModel *clientModel)\n         connect(clientModel, SIGNAL(numBlocksChanged(int,int)), this, SLOT(setNumBlocks(int,int)));\n \n         // Receive and report messages from network/worker thread\n-        connect(clientModel, SIGNAL(message(QString,QString,bool,unsigned int)), this, SLOT(message(QString,QString,bool,unsigned int)));\n+        connect(clientModel, SIGNAL(message(QString,QString,unsigned int)), this, SLOT(message(QString,QString,unsigned int)));\n \n         overviewPage->setClientModel(clientModel);\n         rpcConsole->setClientModel(clientModel);\n@@ -388,7 +388,7 @@ void BitcoinGUI::setWalletModel(WalletModel *walletModel)\n     if(walletModel)\n     {\n         // Receive and report messages from wallet thread\n-        connect(walletModel, SIGNAL(message(QString,QString,bool,unsigned int)), this, SLOT(message(QString,QString,bool,unsigned int)));\n+        connect(walletModel, SIGNAL(message(QString,QString,unsigned int)), this, SLOT(message(QString,QString,unsigned int)));\n \n         // Put transaction list in tabs\n         transactionView->setModel(walletModel);\n@@ -606,7 +606,7 @@ void BitcoinGUI::setNumBlocks(int count, int nTotalBlocks)\n     progressBar->setToolTip(tooltip);\n }\n \n-void BitcoinGUI::message(const QString &title, const QString &message, bool modal, unsigned int style)\n+void BitcoinGUI::message(const QString &title, const QString &message, unsigned int style)\n {\n     QString strTitle = tr(\"Bitcoin\") + \" - \";\n     // Default to information icon\n@@ -639,7 +639,7 @@ void BitcoinGUI::message(const QString &title, const QString &message, bool moda\n     }\n \n     // Display message\n-    if (modal) {\n+    if (style & CClientUIInterface::MODAL) {\n         // Check for buttons, use OK as default, if none was supplied\n         QMessageBox::StandardButton buttons;\n         if (!(buttons = (QMessageBox::StandardButton)(style & CClientUIInterface::BTN_MASK)))"
      },
      {
        "sha": "3faf6d948ca7660b08dbf23b4793828570e23a77",
        "filename": "src/qt/bitcoingui.h",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3675588a30eae39921afbf00f32f86913d5d2bd5/src/qt/bitcoingui.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3675588a30eae39921afbf00f32f86913d5d2bd5/src/qt/bitcoingui.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.h?ref=3675588a30eae39921afbf00f32f86913d5d2bd5",
        "patch": "@@ -124,11 +124,10 @@ public slots:\n     /** Notify the user of an event from the core network or transaction handling code.\n        @param[in] title     the message box / notification title\n        @param[in] message   the displayed text\n-       @param[in] modal     true to use a message box, false to use a notification\n-       @param[in] style     style definitions (icon and used buttons - buttons only for message boxes)\n+       @param[in] style     modality and style definitions (icon and used buttons - buttons only for message boxes)\n                             @see CClientUIInterface::MessageBoxFlags\n     */\n-    void message(const QString &title, const QString &message, bool modal, unsigned int style);\n+    void message(const QString &title, const QString &message, unsigned int style);\n     /** Asks the user whether to pay the transaction fee or to cancel the transaction.\n        It is currently not possible to pass a return value to another thread through\n        BlockingQueuedConnection, so an indirected pointer is used."
      },
      {
        "sha": "ce112803f84c2974f425d9cba755010c4ca4932d",
        "filename": "src/qt/clientmodel.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3675588a30eae39921afbf00f32f86913d5d2bd5/src/qt/clientmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3675588a30eae39921afbf00f32f86913d5d2bd5/src/qt/clientmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.cpp?ref=3675588a30eae39921afbf00f32f86913d5d2bd5",
        "patch": "@@ -84,7 +84,7 @@ void ClientModel::updateAlert(const QString &hash, int status)\n         CAlert alert = CAlert::getAlertByHash(hash_256);\n         if(!alert.IsNull())\n         {\n-            emit message(tr(\"Network Alert\"), QString::fromStdString(alert.strStatusBar), false, CClientUIInterface::ICON_ERROR);\n+            emit message(tr(\"Network Alert\"), QString::fromStdString(alert.strStatusBar), CClientUIInterface::ICON_ERROR);\n         }\n     }\n "
      },
      {
        "sha": "1afccb78593c31db786d95a9395218827704f371",
        "filename": "src/qt/clientmodel.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3675588a30eae39921afbf00f32f86913d5d2bd5/src/qt/clientmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3675588a30eae39921afbf00f32f86913d5d2bd5/src/qt/clientmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.h?ref=3675588a30eae39921afbf00f32f86913d5d2bd5",
        "patch": "@@ -71,7 +71,7 @@ class ClientModel : public QObject\n     void alertsChanged(const QString &warnings);\n \n     //! Asynchronous message notification\n-    void message(const QString &title, const QString &message, bool modal, unsigned int style);\n+    void message(const QString &title, const QString &message, unsigned int style);\n \n public slots:\n     void updateTimer();"
      },
      {
        "sha": "fd5c8c4d4f62e494c17bc9e9d378739cd4065770",
        "filename": "src/qt/walletmodel.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3675588a30eae39921afbf00f32f86913d5d2bd5/src/qt/walletmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3675588a30eae39921afbf00f32f86913d5d2bd5/src/qt/walletmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.h?ref=3675588a30eae39921afbf00f32f86913d5d2bd5",
        "patch": "@@ -148,7 +148,7 @@ class WalletModel : public QObject\n     void requireUnlock();\n \n     // Asynchronous message notification\n-    void message(const QString &title, const QString &message, bool modal, unsigned int style);\n+    void message(const QString &title, const QString &message, unsigned int style);\n \n public slots:\n     /* Wallet status might have changed */"
      }
    ]
  }
]