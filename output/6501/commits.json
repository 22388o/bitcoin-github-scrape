[
  {
    "sha": "d9add719519e2019b1f353d8d6832dcfc88ee850",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkOWFkZDcxOTUxOWUyMDE5YjFmMzUzZDhkNjgzMmRjZmM4OGVlODUw",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2015-08-01T03:15:56Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2015-08-01T03:16:13Z"
      },
      "message": "build: fix libressl detection\n\nChecking libcrypto for a function after we've already found a (possibly\ndifferent) libcrypto is not what we want to do here.\n\npkg-config might've found a cross lib while AC_CHECK_LIB may find a different\nor native one.\n\nRun a link-test against the lib that's already been found instead.",
      "tree": {
        "sha": "369aac7d28076352ccfd12ced0c0b3f82f93651f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/369aac7d28076352ccfd12ced0c0b3f82f93651f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d9add719519e2019b1f353d8d6832dcfc88ee850",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d9add719519e2019b1f353d8d6832dcfc88ee850",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d9add719519e2019b1f353d8d6832dcfc88ee850",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d9add719519e2019b1f353d8d6832dcfc88ee850/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "eddaba7b5692288087a926da5733e86b47274e4e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eddaba7b5692288087a926da5733e86b47274e4e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/eddaba7b5692288087a926da5733e86b47274e4e"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 15,
      "deletions": 8
    },
    "files": [
      {
        "sha": "a524bded6fa3e386d958305c971858f7639fbebe",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 15,
        "deletions": 8,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d9add719519e2019b1f353d8d6832dcfc88ee850/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d9add719519e2019b1f353d8d6832dcfc88ee850/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=d9add719519e2019b1f353d8d6832dcfc88ee850",
        "patch": "@@ -680,19 +680,26 @@ else\n   fi\n fi\n \n-AC_CHECK_LIB([crypto],[RAND_egd],[],[\n-  AC_ARG_WITH([libressl],\n-    [AS_HELP_STRING([--with-libressl],[Build with system LibreSSL (default is no; DANGEROUS; NOT SUPPORTED)])],\n-    [AC_MSG_WARN([Detected LibreSSL: This is NOT supported, and may break consensus compatibility!])],\n-    [AC_MSG_ERROR([Detected LibreSSL: This is NOT supported, and may break consensus compatibility!])]\n-  )\n-])\n-\n CFLAGS_TEMP=\"$CFLAGS\"\n LIBS_TEMP=\"$LIBS\"\n CFLAGS=\"$CFLAGS $SSL_CFLAGS $CRYPTO_CFLAGS\"\n LIBS=\"$LIBS $SSL_LIBS $CRYPTO_LIBS\"\n AC_CHECK_HEADER([openssl/ec.h],, AC_MSG_ERROR(OpenSSL ec header missing),)\n+\n+AC_MSG_CHECKING(for a supported OpenSSL version)\n+AC_LINK_IFELSE([AC_LANG_PROGRAM([[\n+  #include <openssl/rand.h>\n+  ]],\n+  [[RAND_egd(NULL);]])],\n+  [AC_MSG_RESULT(yes)],\n+  [\n+    AC_ARG_WITH([libressl],\n+    [AS_HELP_STRING([--with-libressl],[Build with system LibreSSL (default is no; DANGEROUS; NOT SUPPORTED)])],\n+    [AC_MSG_WARN([Detected LibreSSL: This is NOT supported, and may break consensus compatibility!])],\n+    [AC_MSG_ERROR([Detected LibreSSL: This is NOT supported, and may break consensus compatibility!])]\n+    )]\n+)\n+\n CFLAGS=\"$CFLAGS_TEMP\"\n LIBS=\"$LIBS_TEMP\"\n "
      }
    ]
  },
  {
    "sha": "31bfc272c7b2d1ff45d70bd19047bfe866296589",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozMWJmYzI3MmM3YjJkMWZmNDVkNzBiZDE5MDQ3YmZlODY2Mjk2NTg5",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2015-08-01T03:21:34Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2015-08-01T03:21:34Z"
      },
      "message": "build: make sure pkg-config checks are guarded by an m4_ifdef",
      "tree": {
        "sha": "a0fd5463052c7f8b77f528ec0e2e03ae7d6e905c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a0fd5463052c7f8b77f528ec0e2e03ae7d6e905c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/31bfc272c7b2d1ff45d70bd19047bfe866296589",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/31bfc272c7b2d1ff45d70bd19047bfe866296589",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/31bfc272c7b2d1ff45d70bd19047bfe866296589",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/31bfc272c7b2d1ff45d70bd19047bfe866296589/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d9add719519e2019b1f353d8d6832dcfc88ee850",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d9add719519e2019b1f353d8d6832dcfc88ee850",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d9add719519e2019b1f353d8d6832dcfc88ee850"
      }
    ],
    "stats": {
      "total": 54,
      "additions": 34,
      "deletions": 20
    },
    "files": [
      {
        "sha": "121e10bd379c1df7fa857ce60b8c49f8fc2494da",
        "filename": "build-aux/m4/bitcoin_qt.m4",
        "status": "modified",
        "additions": 34,
        "deletions": 20,
        "changes": 54,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31bfc272c7b2d1ff45d70bd19047bfe866296589/build-aux/m4/bitcoin_qt.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31bfc272c7b2d1ff45d70bd19047bfe866296589/build-aux/m4/bitcoin_qt.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/bitcoin_qt.m4?ref=31bfc272c7b2d1ff45d70bd19047bfe866296589",
        "patch": "@@ -110,13 +110,8 @@ AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n   if test x$bitcoin_qt_got_major_vers = x5; then\n     _BITCOIN_QT_IS_STATIC\n     if test x$bitcoin_cv_static_qt = xyes; then\n+      _BITCOIN_QT_FIND_STATIC_PLUGINS\n       AC_DEFINE(QT_STATICPLUGIN, 1, [Define this symbol if qt plugins are static])\n-      if test x$qt_plugin_path != x; then\n-        QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/platforms\"\n-      fi\n-      if test x$use_pkgconfig = xyes; then\n-        PKG_CHECK_MODULES([QTPLATFORM], [Qt5PlatformSupport], [QT_LIBS=\"$QTPLATFORM_LIBS $QT_LIBS\"])\n-      fi\n       AC_CACHE_CHECK(for Qt < 5.4, bitcoin_cv_need_acc_widget,[AC_COMPILE_IFELSE([AC_LANG_PROGRAM(\n           [[#include <QtCore>]],[[\n           #if QT_VERSION >= 0x050400\n@@ -127,25 +122,15 @@ AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n         [bitcoin_cv_need_acc_widget=no])\n       ])\n       if test \"x$bitcoin_cv_need_acc_widget\" = \"xyes\"; then\n-        if test x$qt_plugin_path != x; then\n-          QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/accessible\"\n-        fi\n         _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(AccessibleFactory)], [-lqtaccessiblewidgets])\n       fi\n       if test x$TARGET_OS = xwindows; then\n         _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QWindowsIntegrationPlugin)],[-lqwindows])\n         AC_DEFINE(QT_QPA_PLATFORM_WINDOWS, 1, [Define this symbol if the qt platform is windows])\n       elif test x$TARGET_OS = xlinux; then\n-        PKG_CHECK_MODULES([X11XCB], [x11-xcb], [QT_LIBS=\"$X11XCB_LIBS $QT_LIBS\"])\n-        if ${PKG_CONFIG} --exists \"Qt5Core >= 5.5\" 2>/dev/null; then\n-          PKG_CHECK_MODULES([QTXCBQPA], [Qt5XcbQpa], [QT_LIBS=\"$QTXCBQPA_LIBS $QT_LIBS\"])\n-        fi\n         _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QXcbIntegrationPlugin)],[-lqxcb -lxcb-static])\n         AC_DEFINE(QT_QPA_PLATFORM_XCB, 1, [Define this symbol if the qt platform is xcb])\n       elif test x$TARGET_OS = xdarwin; then\n-        if test x$use_pkgconfig = xyes; then\n-          PKG_CHECK_MODULES([QTPRINT], [Qt5PrintSupport], [QT_LIBS=\"$QTPRINT_LIBS $QT_LIBS\"])\n-        fi\n         AX_CHECK_LINK_FLAG([[-framework IOKit]],[QT_LIBS=\"$QT_LIBS -framework IOKit\"],[AC_MSG_ERROR(could not iokit framework)])\n         _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QCocoaIntegrationPlugin)],[-lqcocoa])\n         AC_DEFINE(QT_QPA_PLATFORM_COCOA, 1, [Define this symbol if the qt platform is cocoa])\n@@ -154,10 +139,6 @@ AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n   else\n     if test x$TARGET_OS = xwindows; then\n       AC_DEFINE(QT_STATICPLUGIN, 1, [Define this symbol if qt plugins are static])\n-      if test x$qt_plugin_path != x; then\n-        QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/accessible\"\n-        QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/codecs\"\n-      fi\n       _BITCOIN_QT_CHECK_STATIC_PLUGINS([\n          Q_IMPORT_PLUGIN(qcncodecs)\n          Q_IMPORT_PLUGIN(qjpcodecs)\n@@ -297,6 +278,39 @@ AC_DEFUN([_BITCOIN_QT_CHECK_STATIC_PLUGINS],[\n   LIBS=\"$CHECK_STATIC_PLUGINS_TEMP_LIBS\"\n ])\n \n+dnl Internal. Find paths necessary for linking qt static plugins\n+dnl Inputs: bitcoin_qt_got_major_vers. 4 or 5.\n+dnl Inputs: qt_plugin_path. optional.\n+dnl Outputs: QT_LIBS is appended\n+AC_DEFUN([_BITCOIN_QT_FIND_STATIC_PLUGINS],[\n+  if test x$bitcoin_qt_got_major_vers = x5; then\n+      if test x$qt_plugin_path != x; then\n+        QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/platforms\"\n+        if test -d \"$qt_plugin_path/accessible\"; then\n+          QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/accessible\"\n+        fi\n+      fi\n+     m4_ifdef([PKG_CHECK_MODULES],[\n+     if test x$use_pkgconfig = xyes; then\n+       PKG_CHECK_MODULES([QTPLATFORM], [Qt5PlatformSupport], [QT_LIBS=\"$QTPLATFORM_LIBS $QT_LIBS\"])\n+       if test x$TARGET_OS = xlinux; then\n+         PKG_CHECK_MODULES([X11XCB], [x11-xcb], [QT_LIBS=\"$X11XCB_LIBS $QT_LIBS\"])\n+         if ${PKG_CONFIG} --exists \"Qt5Core >= 5.5\" 2>/dev/null; then\n+           PKG_CHECK_MODULES([QTXCBQPA], [Qt5XcbQpa], [QT_LIBS=\"$QTXCBQPA_LIBS $QT_LIBS\"])\n+         fi\n+       elif test x$TARGET_OS = xdarwin; then\n+         PKG_CHECK_MODULES([QTPRINT], [Qt5PrintSupport], [QT_LIBS=\"$QTPRINT_LIBS $QT_LIBS\"])\n+       fi\n+     fi\n+     ])\n+  else\n+    if test x$qt_plugin_path != x; then\n+      QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/accessible\"\n+      QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/codecs\"\n+    fi\n+  fi\n+])\n+\n dnl Internal. Find Qt libraries using pkg-config.\n dnl Inputs: bitcoin_qt_want_version (from --with-gui=). The version to check\n dnl         first."
      }
    ]
  }
]