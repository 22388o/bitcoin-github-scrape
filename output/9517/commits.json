[
  {
    "sha": "fd369d267b7bb29c81d45823f57308478222db62",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmZDM2OWQyNjdiN2JiMjljODFkNDU4MjNmNTczMDg0NzgyMjJkYjYy",
    "commit": {
      "author": {
        "name": "Kalle Alm",
        "email": "kalle.alm@gmail.com",
        "date": "2017-01-11T13:50:00Z"
      },
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2017-03-22T17:32:58Z"
      },
      "message": "Switched httpserver.cpp to use RAII wrapped libevents.",
      "tree": {
        "sha": "ce566f3ee302202020ae909db17c0873f97c5c6c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ce566f3ee302202020ae909db17c0873f97c5c6c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fd369d267b7bb29c81d45823f57308478222db62",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIcBAABCAAGBQJY0rVLAAoJEFevdi2zNTMiACQP/As0gX/5G+HTIIrJwVJTJdqk\nTntNDPDTq4ghFEtkW010cbgQ29q7RzPAc7MuEJU7zemrhYuFV4P4VNaLZWMD5f5w\njwbzg3ssghyNnTCQVPST1YXBvm1RfjM2aYMqU9TW7UPW++1xLlE82fI24hJZM8+o\nKCmGR/Xpq4SjqfLfRVqUVtqwshJKqtI5fIDLF0cAzh8s0Jus6eQOQgEYaTy2jpDp\nEEm2yLlgyCRvAXkkoP9XPgApDioOrJYeQmygMMHS/TyjU0oRpXChyG6DUTuuBR9u\nZL++QQ9jK6Gh2sJTY9wjP8Glg3eZOkQzJJAXuO/iWeH8pyieY1nJlCq6sW8ApEHU\nkEsohpbbQefF5H9/ENGPOwuq2SZwbyWVskUR/xFcUxaXIZc/PXBDvcGv4udYvhGe\nRLkLw5id2PsNpIWf/IPZ1AoGxq6lP2YGXVt+xcshUejx2+C0JR29WXwaNjE4u4JG\nreOmQ6rqK/PmkT/8pOe8kRam/tNjdzuhPGJDBtUc0LONYTLFTBUfAurZB0PazQyW\nu4T5tSBQAC5gvKEr4qJtHqITnAfHEzL8QsWweidzQhh/pPEMZ8k9Zn15hIieb5xt\nSb2uyP4jnJOS30vEjUoO/dh41J8W8Pmf0ZKX7iB8ml9SmFwQjvcUMaD+DPmwaG69\nVs8ywA4dgx9NpQTsjPZL\n=uBoC\n-----END PGP SIGNATURE-----",
        "payload": "tree ce566f3ee302202020ae909db17c0873f97c5c6c\nparent 02d64bd929c9663ba38e96721c6dbd89972d043d\nauthor Kalle Alm <kalle.alm@gmail.com> 1484142600 +0900\ncommitter Karl-Johan Alm <karljohan-alm@garage.co.jp> 1490203978 -0700\n\nSwitched httpserver.cpp to use RAII wrapped libevents.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fd369d267b7bb29c81d45823f57308478222db62",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fd369d267b7bb29c81d45823f57308478222db62",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fd369d267b7bb29c81d45823f57308478222db62/comments",
    "author": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "02d64bd929c9663ba38e96721c6dbd89972d043d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/02d64bd929c9663ba38e96721c6dbd89972d043d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/02d64bd929c9663ba38e96721c6dbd89972d043d"
      }
    ],
    "stats": {
      "total": 24,
      "additions": 8,
      "deletions": 16
    },
    "files": [
      {
        "sha": "2d331cc169c002c4b5546453858c1551362289f0",
        "filename": "src/httpserver.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 16,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd369d267b7bb29c81d45823f57308478222db62/src/httpserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd369d267b7bb29c81d45823f57308478222db62/src/httpserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httpserver.cpp?ref=fd369d267b7bb29c81d45823f57308478222db62",
        "patch": "@@ -21,13 +21,13 @@\n #include <signal.h>\n #include <future>\n \n-#include <event2/event.h>\n-#include <event2/http.h>\n #include <event2/thread.h>\n #include <event2/buffer.h>\n #include <event2/util.h>\n #include <event2/keyvalq_struct.h>\n \n+#include \"support/events.h\"\n+\n #ifdef EVENT__HAVE_NETINET_IN_H\n #include <netinet/in.h>\n #ifdef _XOPEN_SOURCE_EXTENDED\n@@ -369,9 +369,6 @@ static void libevent_log_cb(int severity, const char *msg)\n \n bool InitHTTPServer()\n {\n-    struct evhttp* http = 0;\n-    struct event_base* base = 0;\n-\n     if (!InitHTTPAllowList())\n         return false;\n \n@@ -398,17 +395,13 @@ bool InitHTTPServer()\n     evthread_use_pthreads();\n #endif\n \n-    base = event_base_new(); // XXX RAII\n-    if (!base) {\n-        LogPrintf(\"Couldn't create an event_base: exiting\\n\");\n-        return false;\n-    }\n+    raii_event_base base_ctr = obtain_event_base();\n \n     /* Create a new evhttp object to handle requests. */\n-    http = evhttp_new(base); // XXX RAII\n+    raii_evhttp http_ctr = obtain_evhttp(base_ctr.get());\n+    struct evhttp* http = http_ctr.get();\n     if (!http) {\n         LogPrintf(\"couldn't create evhttp. Exiting.\\n\");\n-        event_base_free(base);\n         return false;\n     }\n \n@@ -419,8 +412,6 @@ bool InitHTTPServer()\n \n     if (!HTTPBindAddresses(http)) {\n         LogPrintf(\"Unable to bind any endpoint for RPC server\\n\");\n-        evhttp_free(http);\n-        event_base_free(base);\n         return false;\n     }\n \n@@ -429,8 +420,9 @@ bool InitHTTPServer()\n     LogPrintf(\"HTTP: creating work queue of depth %d\\n\", workQueueDepth);\n \n     workQueue = new WorkQueue<HTTPClosure>(workQueueDepth);\n-    eventBase = base;\n-    eventHTTP = http;\n+    // tranfer ownership to eventBase/HTTP via .release()\n+    eventBase = base_ctr.release();\n+    eventHTTP = http_ctr.release();\n     return true;\n }\n "
      }
    ]
  },
  {
    "sha": "1ae86ec5ec740a5ccd8b1a006a50de6fcc1d29e7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxYWU4NmVjNWVjNzQwYTVjY2Q4YjFhMDA2YTUwZGU2ZmNjMWQyOWU3",
    "commit": {
      "author": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2017-04-14T04:40:07Z"
      },
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2017-04-14T04:44:10Z"
      },
      "message": "Changed event RAII helper functions to inline to deal with duplicate symbol linker errors.",
      "tree": {
        "sha": "fae4bd6ace7b817588bfc8544c6d8b43b62d5de7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fae4bd6ace7b817588bfc8544c6d8b43b62d5de7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1ae86ec5ec740a5ccd8b1a006a50de6fcc1d29e7",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIcBAABCAAGBQJY8FOaAAoJEFevdi2zNTMisYcP/R72YQFU/IWDcWFhCQlV/f5Q\nf2Vzn/+F0sFBeLxIjr6s4yX5XLcbMvyBcRXbZvfc1TkgwAyEQQmaylDBqZQNtuZf\nQg8LUVJksPq1nnsKOWeXkTYwCrFVK974ESXHfvb5FBt4as/IEYtQmkg+9awv4S7D\ne6KpKRJ5vavlgnvuNBkHnPFHohF0v4BxfL3y4d8oS0YBb06oFLT2InzbCOTHv2ro\nCItzokUAuBVtF3m2OEQSuA+icw5/+YMiANcAWCBtxenZfHW6/+POF/U26+RMty0G\nCIecvCnId67/kb9Csnxq5AS897lA+yed7pdLnEAORnQH6Rf17lq22E/xacagQmhV\n9M/rydjOFS7QhGPSZLuFN02YcWE8SgB/Zeb93LtCzySBCGfZCKFAQBqeBlQX6TSa\nIcmGDZqdg4EdOBXDDNP6yLhtaF0m1bAtEK6D1nPVG1lOFwTipfzw7twMY4WkxyyV\n8/yozaFJZ16PRihqjpC7BQ/y3gLLDqN11O0MLxQoSAd4UOO07lVeL8digrks4FGp\nWNgMBLnbNAISr1dEa3Pya2fotiItZHZNI760LUsc8mmhn/pj1BR6QTXK/7aSixbF\n7OKdqji/YgYXVnGoavGQv3lEZ6Uk1b1lZ9Iij7U1YzM06fMgijNUqs75lFhmfg+R\n4MCUvd4/6jEi6B8Oet5J\n=s9MC\n-----END PGP SIGNATURE-----",
        "payload": "tree fae4bd6ace7b817588bfc8544c6d8b43b62d5de7\nparent fd369d267b7bb29c81d45823f57308478222db62\nauthor Karl-Johan Alm <karljohan-alm@garage.co.jp> 1492144807 +0900\ncommitter Karl-Johan Alm <karljohan-alm@garage.co.jp> 1492145050 +0900\n\nChanged event RAII helper functions to inline to deal with duplicate symbol linker errors.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1ae86ec5ec740a5ccd8b1a006a50de6fcc1d29e7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1ae86ec5ec740a5ccd8b1a006a50de6fcc1d29e7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1ae86ec5ec740a5ccd8b1a006a50de6fcc1d29e7/comments",
    "author": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fd369d267b7bb29c81d45823f57308478222db62",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fd369d267b7bb29c81d45823f57308478222db62",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fd369d267b7bb29c81d45823f57308478222db62"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 5,
      "deletions": 5
    },
    "files": [
      {
        "sha": "90690876eee05893d7b13fa8cd795401b565832e",
        "filename": "src/support/events.h",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1ae86ec5ec740a5ccd8b1a006a50de6fcc1d29e7/src/support/events.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1ae86ec5ec740a5ccd8b1a006a50de6fcc1d29e7/src/support/events.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/support/events.h?ref=1ae86ec5ec740a5ccd8b1a006a50de6fcc1d29e7",
        "patch": "@@ -27,26 +27,26 @@ MAKE_RAII(evhttp);\n MAKE_RAII(evhttp_request);\n MAKE_RAII(evhttp_connection);\n \n-raii_event_base obtain_event_base() {\n+inline raii_event_base obtain_event_base() {\n     auto result = raii_event_base(event_base_new());\n     if (!result.get())\n         throw std::runtime_error(\"cannot create event_base\");\n     return result;\n }\n \n-raii_event obtain_event(struct event_base* base, evutil_socket_t s, short events, event_callback_fn cb, void* arg) {\n+inline raii_event obtain_event(struct event_base* base, evutil_socket_t s, short events, event_callback_fn cb, void* arg) {\n     return raii_event(event_new(base, s, events, cb, arg));\n }\n \n-raii_evhttp obtain_evhttp(struct event_base* base) {\n+inline raii_evhttp obtain_evhttp(struct event_base* base) {\n     return raii_evhttp(evhttp_new(base));\n }\n \n-raii_evhttp_request obtain_evhttp_request(void(*cb)(struct evhttp_request *, void *), void *arg) {\n+inline raii_evhttp_request obtain_evhttp_request(void(*cb)(struct evhttp_request *, void *), void *arg) {\n     return raii_evhttp_request(evhttp_request_new(cb, arg));\n }\n \n-raii_evhttp_connection obtain_evhttp_connection_base(struct event_base* base, std::string host, uint16_t port) {\n+inline raii_evhttp_connection obtain_evhttp_connection_base(struct event_base* base, std::string host, uint16_t port) {\n     auto result = raii_evhttp_connection(evhttp_connection_base_new(base, NULL, host.c_str(), port));\n     if (!result.get())\n         throw std::runtime_error(\"create connection failed\");"
      }
    ]
  }
]